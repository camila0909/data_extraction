UNIVERSIDADE TECNOLÓGICA FEDERAL DO PARANÁ
MESTRADO PROFISSIONAL DE MATEMÁTICA EM REDE - PROFMAT

LUCAS GABRIEL RIBEIRO DE SOUZA

ESTIMULANDO O PENSAMENTO COMPUTACIONAL E O ESTUDO DE
MATEMÁTICA POR MEIO DA CONSTRUÇÃO DE FRACTAIS NO SCRATCH:
UMA PROPOSTA DIDÁTICA PARA ALUNOS DO ENSINO MÉDIO

TRABALHO DE CONCLUSÃO DE CURSO

CORNÉLIO PROCÓPIO

20 DE MARÇO DE 2021

LUCAS GABRIEL RIBEIRO DE SOUZA 

ESTIMULANDO O PENSAMENTO COMPUTACIONAL E O ESTUDO DE 

MATEMÁTICA POR MEIO DA CONSTRUÇÃO DE FRACTAIS NO SCRATCH: 

UMA PROPOSTA DIDÁTICA PARA ALUNOS DO ENSINO MÉDIO 

STIMULATING THE COMPUTATIONAL THINKING AND THE STUDY OF 

MATHEMATICS THROUGH THE CONSTRUCTION OF FRACTALS IN SCRATCH: 

A DIDACT PROPOSAL FOR THE HIGH SCHOOL STUDENTS 

como

apresentada

Dissertação
para
obtenção do título de Mestre em 2021 da
do Paraná
Universidade
(UTFPR). 
Orientador: Profa. Dra. Michele Cristina Valentino. 

Tecnológica

requisito

Federal

CORNÉLIO PROCÓPIO 

2021 

4.0 Internacional 

Esta licença permite o download e o compartilhamento da obra desde que
sejam atribuídos créditos ao(s) autor(es), sem a possibilidade de alterá-la ou
utilizá-la para fins comerciais. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
 
 
 
 
20/03/2021

-

Ministério da Educação 
Universidade Tecnológica Federal do Paraná 
Câmpus Cornélio Procópio

LUCAS GABRIEL RIBEIRO DE SOUZA

ESTIMULANDO O PENSAMENTO COMPUTACIONAL E O ESTUDO DE MATEMÁTICA POR MEIO DA
CONSTRUÇÃO DE FRACTAIS NO SCRATCH: UMA PROPOSTA DIDÁTICA PARA ALUNOS DO ENSINO
MÉDIO.

Trabalho  de  pesquisa  de  mestrado  apresentado  como  requisito
para  obtenção  do  título  de  Mestre  Profissional  Em  Matemática
Para  A  Escola  Básica  da  Universidade  Tecnológica  Federal  do
Paraná (UTFPR). Área de concentração: Matemática.

Data de aprovação: 08 de Fevereiro de 2021

Prof.a Michele Cristina Valentino, Doutorado - Universidade Tecnológica Federal do Paraná

Prof Anderson Paiao Dos Santos, Doutorado - Universidade Tecnológica Federal do Paraná

Prof Wendhel Raffa Coimbra, Doutorado - Universidade Federal da Paraíba (Ufpb)

Documento gerado pelo Sistema Acadêmico da UTFPR a partir dos dados da Ata de Defesa em 08/02/2021.

 
 
Dedico este trabalho à minha família e meus amigos.

AGRADECIMENTOS

Agradeço à minha família pelo apoio e força que me deram.
Agradeço aos meus amigos por toda ajuda direta ou indiretamente.
Agradeço à minha orientadora Profª. Dra. Michele Cristina Valentino por todo apoio e

contribuição durante esta dissertação.

Agradeço à minha psicóloga por todo apoio emocional durante esse período compli-

cado.

RESUMO

SOUZA, Lucas Gabriel Ribeiro de. ESTIMULANDO O PENSAMENTO COMPUTACIONAL E
O ESTUDO DE MATEMÁTICA POR MEIO DA CONSTRUÇÃO DE FRACTAIS NO SCRATCH:
UMA PROPOSTA DIDÁTICA PARA ALUNOS DO ENSINO MÉDIO. 20 de março de 2021. 105
f. Trabalho de Conclusão de Curso (Pós Graduação) – Mestrado Proﬁssional de Matemática em
rede - Profmat. Universidade Tecnológica Federal do Paraná. Cornélio Procópio, 20 de março de
2021

A Matemática é uma ferramenta indispensável em várias áreas do conhecimento e por isso é
importante que os alunos a compreendam. No entanto, na última avaliação feita pelo Programa
Internacional de Avaliação dos Estudantes (PISA - 2018), o Brasil assumiu as últimas posições,
quando comparados com outros países. Segundo resultado divulgado, a maioria dos estudantes
brasileiros possuem pouco conhecimento matemático e nem conseguem resolver questões
simples e rotineiras. Por este motivo, é necessário pensar em estratégias capazes de resolver
este problema. Com este propósito, neste trabalho, apresentamos uma sequência didática para
estimular o estudo de Matemática e o desenvolvimento do pensamento computacional através da
construção de fractais no Scratch. As atividades foram elaboradas visando o despertar do inte-
resse e a curiosidade dos alunos com base na beleza e interessantes características dos fractais,
além de sua conexão com a natureza, com conceitos matemáticos e tecnologias, a qual tem sido
grande aliada para o ensino de Matemática e outras disciplinas. Mais especiﬁcamente, propomos
uma oﬁcina com oito encontros para os alunos do Ensino Médio, na qual são apresentados um
breve histórico, a deﬁnição e características dos fractais, além de seus exemplos da natureza e
suas aplicações em várias áreas do conhecimento. Tarefas que estimulam o reconhecimento
dos padrões de alguns fractais e facilitam a construção de seus algoritmos no Scratch, são
solicitadas em seguida. Por ﬁnal, algumas atividades que são realizadas visualizando os fractais
são sugeridas de forma a facilitar a aprendizagem e/ou o aprofundamento de alguns conteúdos
de Matemática. Para facilitar a aplicação da sequência didática que propomos neste trabalho,
todo o material produzido será disponibilizado na internet. Assim, qualquer professor do Ensino
Básico poderá usá-lo em suas próprias aulas.

Palavras-chave: Scratch; Fractais; Pensamento Computacional; Matemática.

ABSTRACT

SOUZA, Lucas Gabriel Ribeiro de. STIMULATING THE COMPUTATIONAL THINKING
AND THE STUDY OF MATHEMATICS THROUGH THE CONSTRUCTION OF FRACTALS IN
SCRATCH: A DIDACT PROPOSAL FOR THE HIGH SCHOOL STUDENTS.. 20 de março de
2021. 105 f. Trabalho de Conclusão de Curso (Pós Graduação) – Mestrado Proﬁssional de
Matemática em rede - Profmat. Universidade Tecnológica Federal do Paraná. Cornélio Procópio,
20 de março de 2021

The importance of students knowing mathematics comes to the fact it is an indispensable tool in
several areas of knowledge. However, in the latest evaluations made by the International Student
Assessment Program (PISA), Brazil has been taking the last positions when compared with other
countries. The results have shown that a large number of Brazilian students have insufﬁcient
mathematical knowledge and are unable to solve routine and elementary questions. For this
reason, it is necessary to think about strategies to solve this problem. In this work, we propose a
didactic sequence to stimulate the study of Mathematics and the development of computational
thinking under the construction of fractals in Scratch. The activities were developed aiming at
raising student’s interest and curiosity through the beauty and connection between nature and the
Mathematical concepts of fractals in addition to exploring technologies, which has been a great
ally for the teaching of Mathematics and other subjects. More speciﬁcally, we propose a workshop
with eight meetings for high school students, in which we present a brief history, some deﬁnitions,
their characteristics and examples of fractals in nature, and their applications in some areas of
knowledge. Next are requested tasks that encourage the recognition of the formation rules of
some fractals and facilitate the construction of their algorithms in Scratch. Finally, some activities
can be performed by visualizing fractals in Scratch to improve or deepen the knowledge of some
mathematical contents. To make the application of the didactic sequence that we propose in this
work easier, all the material produced will be made available on the internet. In this way, any
elementary school teacher will be able to download and edit it, if necessary.

Keywords: Scratch; Fractals; Computational Thinking; Mathematics.

LISTA DE FIGURAS

. . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 1 – Conjunto de Mandelbrot.
. . . . . . . . . . . . . . . .
FIGURA 2 – Exemplo de uma árvore com formato fractal.
. . . . . . . . . . . . . . . . . . . .
FIGURA 3 – Contorno da costa da Grã-Bretanha.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 4 – Conjunto de Julia.
. . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 5 – Função de Weierstrass.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 6 – Conjunto de Cantor.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 7 – Curva de Peano. .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 8 – Curva de Hilbert. .
. . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 9 – Floco de Neve de Koch.
. . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 10 – Triângulo de Sierpinski.
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 11 – Tapete de Sierpinski.
FIGURA 12 – Exemplo de Movimento Fracionário Browniano. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . .
FIGURA 13 – Ampliações de uma circunferência.
FIGURA 14 – Divisão das formas euclidianas para o cálculo de suas dimensões.
. . . .
. . . . . . . .
FIGURA 15 – Divisão da Curva de Koch para o cálculo de sua dimensão.
FIGURA 16 – Exemplo de utilização de contagem de caixas.
. . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . .
FIGURA 17 – Fractais encontrados na Natureza.
. . . . . . . . .
FIGURA 18 – Exemplo de aplicação de Geometria Fractal nos cinemas.
FIGURA 19 – Utilização de contagem de caixas para a identiﬁcação de câncer bucal.
. .
. . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 20 – Fractais na arquitetura.
FIGURA 21 – Exemplo de Fractal: Gerador de três ondas.
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 22 – Níveis da Curva de Koch.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 23 – Curva de Peano. .
FIGURA 24 – Níveis do tapete de Sierpinski.
. . . . . . . . . . . . . . . . . . . . . . .
FIGURA 25 – Níveis da curva de Cantor. . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 26 – Soluções - Questões 1 e 2 da Atividade 6.
. . . . . . . . . . . . . . . . .
FIGURA 27 – Sugestão de questão 3 da Atividade 6.
. . . . . . . . . . . . . . . . . . .
FIGURA 28 – Solução da questão 3 da Atividade 6. . . . . . . . . . . . . . . . . . . . .
FIGURA 29 – Algoritmo dos Níveis 0 e 1 da curva de Koch no Scratch. . . . . . . . . . .
FIGURA 30 – Algoritmos dos Níveis 1 e 2 da curva de Koch no Scratch.
. . . . . . . . .
. . . . . . . . . . . .
FIGURA 31 – Exemplo de algoritmo da curva de Koch no Scratch.
. . . .
FIGURA 32 – Esquematizando o procedimento da construção da curva de Koch.
. . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 33 – Lei de formação do Fractal.
FIGURA 34 – Algoritmos dos Níveis 0 e 1 da curva de Peano no Scratch.
. . . . . . . .
FIGURA 35 – Algoritmo da Curva de Peano no Scratch. . . . . . . . . . . . . . . . . . .
FIGURA 36 – Esquematizando o procedimento da construção da curva de Peano. . . . .
FIGURA 37 – Algoritmo do bloco "Quadrado" no Scratch. . . . . . . . . . . . . . . . . .
FIGURA 38 – Esquematizando o procedimento da construição do tapete de Sierpinski.
.
. . . . . . . . . . . . . . .
FIGURA 39 – Algoritmo do Tapete de Sierpinski no Scratch.
FIGURA 40 – Esquematizando o procedimento da construção do conjunto de Cantor. . .
FIGURA 41 – Algoritmos dos primeiros Níveis da curva de Cantor no Scratch. . . . . . .
FIGURA 42 – Algoritmo do Conjunto de Cantor no Scratch. . . . . . . . . . . . . . . . .
FIGURA 43 – Questão 5 - Atividade 7 . . . . . . . . . . . . . . . . . . . . . . . . . . .
FIGURA 44 – Download de slides do Google Sites.
. . . . . . . . . . . . . . . . . . . .
FIGURA 45 – Download de PDF do Google Sites. . . . . . . . . . . . . . . . . . . . . .
FIGURA 46 – Download de documentos do Word do Google Sites. . . . . . . . . . . . .

20
20
21
21
22
23
24
24
25
26
26
27
28
29
30
31
32
33
33
34
35
44
44
45
45
47
47
48
49
50
51
52
53
54
55
56
57
58
59
61
62
63
69
78
79
80

. . .

. . .
. .
.
. .
.

. . . .
. . . .
. . . .
.
. . . .
.
. . .
. . .

FIGURA 47 – Página inicial Scratch.
FIGURA 48 – Download Scratch. . .
FIGURA 49 – Instalador Scratch. . .
FIGURA 50 – Ícone de inicialização do Scratch.
FIGURA 51 – Acesso online Scratch.
FIGURA 52 – Ambiente do Scratch.
FIGURA 53 – Palco.
FIGURA 54 – Atores.
FIGURA 55 – Atores.
FIGURA 56 – Linha de códigos.
FIGURA 57 – Menu.
FIGURA 58 – Menu de códigos.
FIGURA 59 – Códigos.
FIGURA 60 – Movimentos.
FIGURA 61 – Aparência.
.
FIGURA 62 – Som. . . . .
. .
FIGURA 63 – Eventos.
FIGURA 64 – Controle. . . . .
. . .
FIGURA 65 – Sensores.
FIGURA 66 – Operadores.
. .
. . . .
.
FIGURA 67 – Variáveis.
FIGURA 68 – Meus blocos. . . . .
FIGURA 69 – Extensões-1. . . . .
FIGURA 70 – Extensões-2. . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .

88
88
89
89
89
90
90
91
91
92
93
93
93
94
96
98
99
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 101
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105

. . . .
. .
. . . .
. . . .
. . . .

. . .
. . .
. . .

LISTA DE TABELAS

. . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

38
TABELA 1 – Planejamento da sequência didática.
39
TABELA 2 – Atividade 1.
40
TABELA 3 – Atividade 2 (Apoio para a dedução da lei de formação da Curva de Koch).
TABELA 4 – Atividade 3 (Apoio para a dedução da lei de formação da Curva de Peano).
41
TABELA 5 – Atividade 4 (Apoio para a dedução da lei de formação do Tapete de Sierpisnki). 42
TABELA 6 – Atividade 5 (Apoio para a dedução da lei de formação do Conjunto de Cantor). 43

. .

.

SUMÁRIO

1

INTRODUÇÃO .

. .

. .

.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. .

. .

. .

FRACTAIS .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.1 HISTÓRIA DOS FRACTAIS .
. . . . . . . . . . . . . . . . . . . . . . . . . . .
2.1.1 Benoit Mandelbrot (1924-2010)
2.1.2 Karl Weierstrass (1815 - 1897) . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.1.3 Georg Cantor (1845 - 1918)
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.1.4 Giuseppe Peano (1858 - 1932) . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.1.5 David Hilbert (1862 - 1943) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.1.6 Helge von Koch (1870 - 1924)
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.1.7 Waclaw Sierpinski (1882 - 1969) . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . .
2.2
2.2.1 Autossimilaridade . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2.2 Estrutura Fina (Complexidade inﬁnita) . . . . . . . . . . . . . . . . . . . . . . . .
2.2.3 Dimensão não-inteira . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.3 MÉTODOS PARA CALCULAR A DIMENSÃO DOS FRACTAIS . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.3.1 Hausdorff-Besicovitch .
2.3.2 Contagem de Caixas . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
FRACTAIS NA NATUREZA E ALGUMAS APLICAÇÕES . . . . . . . . . . . . . . . . . .
2.4

FRACTAIS E SUAS CARACTERÍSTICAS

. .

.
.

.

.

3
3.1
3.2

3.3
3.4
3.5
3.6
3.7
3.8

4

PROPOSTA DIDÁTICA: CONSTRUINDO FRACTAIS NO SCRATCH . . . . . . .
ENCONTRO 1 - UMA INTRODUÇÃO A GEOMETRIA FRACTAL . . . . . . .
ENCONTRO 2 - GEOMETRIA FRACTAL: HISTÓRIA, FRACTAIS NA NATU-
. . . . . . . . . . . . . . . . . . . . . . . .
REZA E ALGUMAS APLICAÇÕES.
ENCONTRO 3 - CONCEITOS BÁSICOS DO SCRATCH . . . . . . . . . . . .
ENCONTRO 4 - CONSTRUINDO A CURVA DE KOCH . . . . . . . . . . . . .
ENCONTRO 5 - CONSTRUINDO A CURVA DE PEANO . . . . . . . . . . . .
ENCONTRO 6 - CONSTRUINDO O TAPETE DE SIERPINSKI . . . . . . . . .
ENCONTRO 7 - CONSTRUINDO O CONJUNTO DE CANTOR . . . . . . . .
ENCONTRO 8 - PRATICANDO MATEMÁTICA . . . . . . . . . . . . . . . . . .

CONCLUSÃO .
. .
REFERÊNCIAS . .

. .
.

.
. .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

.

. .

. .

. .
. .

. .
. .

APÊNDICES . .

A
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
A.1 MATERIAL DE APOIO PARA OS ENCONTROS . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. .
A.1.1 Slides . .
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
A.1.2 PDF .
. .
. .
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
A.1.3 Arquivo de Texto . .
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. .
A.2 ATIVIDADES .
. .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . .
A.2.1 Atividade 1 .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . .
A.2.2 Atividade 2 .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . .
A.2.3 Atividade 3 .
A.2.4 Atividade 4 .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . .
A.3 GUIA DE USO DO SCRATCH . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
A.3.1 Download . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
.
A.3.2 Navegador
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. .
A.3.3 Scratch .

. .
. .
. .
. .
. . .
. . .
. . .
. . .

. .
. .
. .

. .
. .
. .

. .
. .
. .

.
.
.

17

19
19
19
21
22
23
23
24
25
26
27
27
28
28
29
30
31

37
39

40
46
49
53
57
60
64

73
75

77
77
78
79
80
81
81
82
83
84
88
88
89
90

17

1 INTRODUÇÃO

É consenso que a Matemática é uma ferramenta crucial em várias áreas do conheci-
mento e por este motivo, é muito importante que ela seja compreendida pelos alunos. No entanto,
os últimos resultados do PISA (Programme for International Student Assessment) (Programa
Internacional de Avaliação de Estudantes) têm mostrado que os alunos brasileiros possuem
pouco conhecimento nesta área quando comparado com outros países.

Segundo INEP (2016), a pontuação do PISA se resume em 6 níveis, sendo que para se
classiﬁcar no nível 1, a pontuação deve estar entre 358 e 420 pontos, e para se classiﬁcar no
nível 6 é necessário uma pontuação mínima de 669 pontos. Como na última prova, em 2018, os
estudantes brasileiros obtiveram uma média de 384 pontos, o país atingiu somente a pontuação
do nível 1, e ﬁcou classiﬁcado na faixa entre 69º e 72º no ranking global, o qual envolve 79
países. Ainda, segundo INEP (2019) , 68,1% dos estudantes brasileiros não possuem nível
básico de matemática, isto é, não atingem nem o nível 1 das pontuações, 40% dos que estão no
nível básico não conseguem resolver questões simples e rotineiras e apenas 0,1% dos alunos
participantes do PISA pelo Brasil, atingiram o nível máximo de pontuação. Por este motivo,
surge-se a necessidade de discutir os motivos para este mau desempenho. Segundo Bessa
(2007), as diﬁculdades do ensino e aprendizagem de matemática podem estar relacionados
as metodologias e políticas pedagógicas do professor, ao desinteresse do aluno, as condições
físicas das escolas e a falta de suporte e/ou de condições da família. Já para Gomes e Rodrigues
(2014), o problema pode estar relacionado ao ensino ainda tecnicista, sem envolvimento com o
cotidiano, com a própria matemática e outras áreas do conhecimento. Segundo MEC (2018), o
aluno do ensino médio deve ter como foco, a construção de uma visão integrada da Matemática,
aplicada à realidade, em diferentes contextos. Consequentemente, quando a realidade é a
referência, é preciso considerar as suas vivências, as quais são impactadas pelos avanços
tecnológicos, pelas exigências do mercado de trabalho, pelos projetos do bem viver de seus
povos, pela potencialidade das mídias sociais, entre outros. Destacando-se ainda, a importância
dos recursos, das tecnologias digitais e aplicativos para a investigação matemática e para o
desenvolvimento do pensamento computacional, o qual envolve as capacidades de compreender,
analisar, deﬁnir, modelar, resolver, comparar e automatizar problemas e suas soluções, de forma
metódica e sistemática, por meio do desenvolvimento de algoritmos.

A geometria fractal estuda as propriedades e comportamentos dos fractais. É uma
linguagem matemática capaz de descrever, analisar e modelar objetos e formas naturais. Alguns
estados brasileiros já inseriram esta teoria em seus componentes curriculares e em 2018
ela foi considerada na formulação das Diretrizes Curriculares Estaduais do Paraná (DCE) as
quais podem ser encontradas em ParanÁ (2008). A teoria fractal vem sendo explorada em
diferentes áreas do conhecimento como pode ser constatado no Capítulo 2 deste texto, por este
motivo pode tornar a Matemática mais atrativa para os alunos, pois ela permite proporcionar
a abordagem de diferentes conteúdos, como por exemplo, progressões, áreas, perímetros,
dimensão, autossimilaridade, forma, recursividade, introdução a ideia de limite, noções de inﬁnito,
propriedades de logaritmos, entre outros. Mais ainda, o ato de gerar as imagens fractais em
computadores através de formulação de algoritmos, pode ser fonte de motivação para o ensino e
aprendizagem de Matemática, além de estimular o pensamento computacional, tema previsto na
Base Nacional Comum Curricular (BNCC).

18

O Scratch1 é uma boa ferramenta para criar algoritmos que geram fractais. Foi criado
pelo projeto Lifelong Kndergarten Group do MIT(Massachusetts Institute of Technology) (Instituto
Tecnológico de Massachussets) e se trata de uma espécie de linguagem de programação
em blocos, isto é, os códigos já são pré-programados e cabe aos usuários encaixá-los, para
que consigam o resultado almejado. Ela contribui para que os alunos aprendam a pensar
criativamente, raciocinar sistematicamente e trabalhar em grupo. Além de ser linguagem de
programação, também pode ser considerada uma rede social, já que os usuários podem interagir
entre si, podendo compartilhar projetos, remixar projetos, curtir, favoritar, etc. Com isso, um
aluno pode, por exemplo, achar um projeto parecido com o que ele quer fazer, e se basear neste,
tendo assim, a possibilidade de decompor as ideias do projeto, reconhecer os padrões, abstrair o
que é necessário e montar o algoritmo para construir seu próprio projeto. Uma outra vantagem
de trabalhar com o Scratch é o seu caráter interdisciplinar, isto é, qualquer disciplina pode fazer
uso dele, criando histórias ou até mesmo programas que facilitem o ensino-aprendizagem.

Neste contexto, o objetivo deste trabalho é fornecer uma proposta didática para os
alunos do Ensino Médio, a qual estimula o desenvolvimento do pensamento computacional e
o estudo de Matemática através da construção de algoritmos que geram fractais no Scratch.
Mais especiﬁcamente, sugerimos inicialmente que o professor introduza a geometria fractal
aos alunos, trazendo seus exemplos encontrados na natureza e algumas aplicações e também
conceitos básicos da linguagem de programação Scratch. Em seguida, sugerimos algumas
atividades as quais podem ajudar o aluno a reconhecer os padrões de alguns fractais e com
isso, facilitar a construção dos algoritmos que os geram. Por ﬁnal, são sugeridas atividades que
devem ser realizadas com a observação dos fractais, as quais tem como principal objetivo o
desenvolvimento dos conceitos tradicionais da Matemática.

Quanto à estrutura, este trabalho se divide em três capítulos. No Capítulo 2, apresenta-
mos um pouco sobre a história dos fractais, algumas de suas deﬁnições e características. No
Capítulo 3, apresentamos a proposta didática, especiﬁcada no parágrafo anterior. Além disso,
nos apêndices são apresentados os materiais de apoio para o professor que desejar utilizar esta
proposta didática. No apêndice A.1, disponibilizamos os materiais que podem ser utilizado nas
aulas da proposta didática, além de ensinar como baixá-los para uso e edição, caso necessário.
No apêndice A.2, disponibilizamos todas as Atividades que são solicitadas. No apêndice A.3
disponibilizamos um manual de uso do Scratch, o qual pode auxiliar o professor em seu terceiro
encontro com os alunos, mostrando desde como acessar essa linguagem de programação até
seus comandos básicos.

1 Scratch é uma linguagem de programação criada em 2007 pelo Media Lab do MIT. Desde 2013 o Scratch está
disponível on-line em mais de 150 idiomas ( https://scratch.mit.edu/), incluindo o português do Brasil, e com uma
aplicação para Windows, OS X e Linux.

19

2 FRACTAIS

Neste capítulo, apresentamos a história de vida de alguns matemáticos envolvidos no

surgimento da geometria fractal e a formalização dessa teoria feita por Benoit Mandelbrot.

2.1 HISTÓRIA DOS FRACTAIS

A geometria fractal foi criada com o objetivo de explicar situações percebidas por alguns
cientistas entre os anos de 1857 e 1913, as quais não puderam ser explicadas com a geometria
euclidiana. Embora muitos tenham contribuído para o surgimento desta nova teoria, ela foi
de fato formalizada na década de 1970 pelo Matemático Benoit Mandelbrot, quem a nomeou
de Geometria Fractal, em 1975, baseado no adjetivo fractus, do verbo frangere do latim, que
em português signiﬁca quebrar. Mais detalhes sobre a vida do então considerado pai dos
fractais, Benoit Mandelbrot, e outros cientistas, bem como suas contribuições para o nascimento
desse novo conceito da Matemática são apresentados no decorrer deste capítulo. As histórias
completas sobre esses matemáticos podem ser encontradas em Robertson e O’Connor (2020).

2.1.1 Benoit Mandelbrot (1924-2010)

Mandelbrot nasceu em Varsóvia, Polônia, em 1924. Em 1936 ele e sua família, pai
comerciante de roupas e mãe dentista, se mudaram para Paris na França, onde passou a
estudar com seu tio, Szolem Mandelbrojt, que era professor de Matemática no Colégio da França.
Pouco após sua mudança, devido a Segunda Guerra Mundial e ao avanço das tropas nazistas,
tiveram que mudar para Tulle, onde pouco visitou a escola, por causa da guerra. Com o ﬁm da
Segunda Guerra Mundial, Benoit Mandelbrot voltou a estudar e em 1944 ele foi aceito na Escola
Politécnica de Paris, onde foi supervisionado pelo Engenheiro e Matemático Paul Lévi e pelo
Matemático Gaston Julia, criador do famoso Conjunto de Julia (Figura 4), hoje considerado um
fractal. Em 1947, Mandelbrot iniciou seu mestrado em Aeronáutica no Instituto de Tecnologia
da Califórnia e em 1952 obteve o grau de doutor pela Universidade de Paris. Em 1958 Benoit
Mandelbrot iniciou sua carreira de 35 anos na IBM (International Business Machines Corporation)
(Corporativa de Máquinas de Negócio Internacionais), onde se deparou com o problema de
ruídos eletrônicos nas linhas telefônicas em rede entre os computadores. Mandelbrot tratou
esse problema como uma espécie Conjunto de Cantor, o qual por muitos anos, assim como as
funções descontínuas percebidas por Newton e Leibniz no século XVII, as funções contínuas e
não diferenciáveis em nenhum ponto apresentadas por Weierstrass em 1870, a construção de
uma curva que pavimentava todo o plano apresentada por Peano e a aﬁrmação de Poincaré de
que os movimentos do planeta geravam curvas estranhas, "caóticas", foi considerado como um
"monstro" ou "anomalia" da Matemática. A partir disso, Benoit Mandelbrot desenvolveu novas
ideias Matemáticas, nomeadas por ele de Geometria Fractal, que acopladas com o auxílio dos
computadores da IBM deram uma formalização geométrica para os "monstros" da Matemática
citados acima. Esse novo conceito da Matemática, junto a sua computação gráﬁca, a qual criava
e exibia imagens geométricas fractais, o permitiu contribuir em vários ramos da ciência. Em
1979, com base no conhecimento sobre o Conjunto de Julia, apresentou seu próprio fractal,
nomeado de conjunto de Maldelbrot, o qual tem a imagem similar a de um inseto e independente

20

do quanto uma parte da imagem é ampliada, a base desse padrão é repetida (Figura 1). Nos
livros: Les Objets Fractals: Forme, Hasard et Dimension e The Fractal Geometric of Nature que
foram publicados em 1975 e 1982, Mandelbrot apresentou uma introdução da geometria fractal,
a base Matemática para se trabalhar com fractais, a implementação de fractais em computadores
e alguns exemplos de fractais na natureza, sendo o mais simples deles, uma árvore (Figura 2).
Ainda com base em sua teoria aﬁrmou que a costa da Grã-Bretanha tem comprimento inﬁnito. A
explicação para esta aﬁrmação foi dada com base na comparação do contorno da costa realizado
por uma pessoa, um lagarto e uma formiga. Imaginou que uma pessoa ao contornar toda a
costa, sempre o mais próximo possível do mar, terá andado uma certa quantidade de passos e
cobrido um certo perímetro desta costa. Agora, se um lagarto dar a mesma volta nesta costa
seguindo a mesma condição de sempre estar o mais perto o possível do mar, por suas patas
serem menores que os pés da pessoa, ele terá conseguido cobrir espaços que a pessoa não
conseguiu pisar, logo, o perímetro que o lagarto cobriu é maior que o que a pessoa cobriu.
Seguindo a mesma lógica, se uma formiga der a volta na costa também, cobrirá ainda mais
perímetro que seus anteriores. Logo, com isso, podemos ver que quanto menor é o passo, mais o
comprimento da costa da Grã-Bretanha aumenta. Uma ilustração desta aﬁrmação de Mandelbrot
pode ser percebida na Figura 3, onde temos a costa da Grã-Bretanha sendo contornada por dois
tamanhos de passos distintos, onde o segundo é menor que o primeiro.

Figura 1 – Conjunto de Mandelbrot.

Fonte: <https://www.ultrafractal.com/help/index.html?/help/fractals/mandelbrotset.html>.

Figura 2 – Exemplo de uma árvore com formato fractal.

Fonte: <https://aidobonsai.ﬁles.wordpress.com/2011/10/fractal_tree3-11.jpg>.

Figura 3 – Contorno da costa da Grã-Bretanha.

21

Fonte: Retirado de (BORGES, 2017).

Figura 4 – Conjunto de Julia.

Fonte:
<http://www.matematica.seed.pr.gov.br/modules/galeria/detalhe.php?foto=17&evento=1>.

Além do seu trabalho na IBM, Mandelbrot também ocupou cargos no Laboratório
Nacional do Noroeste Pacíﬁco, na Universidade de Lille, no Instituto de Estudos Avançados e
Centro Nacional de Pesquisa Cientíﬁca na França. No ﬁnal da sua vida, ele foi Professor de
Ciências Matemáticas na Universidade de Yale.

2.1.2 Karl Weierstrass (1815 - 1897)

Karl Wilhelm Theodor Weierstrass, ﬁlho do ﬁscal alfandegário Wilhem Weierstrass e
Theodora Vonderforst, nasceu em 1815 em Ostenfeld, no Reino da Prússia. Em 1829, Karl
entrou no Ginásio Católico e neste período, trabalhou para ajudar com a renda da família. Mesmo

22

trabalhando meio período, Karl se destacou no estudo da Matemática e se formou em 1834.
Neste mesmo ano, inﬂuenciado por seu pai, ingressou na Universidade de Bonn para estudar leis,
ﬁnanças e economia. Como esta não era sua opção de estudo, ele acabou não se graduando,
mas durante sua permanência na Universidade conheceu algumas obras Matemáticas como
as de Laplace e Jaques Bernoulli. Em 1839, Weierstrass ingressou na Academia em Münster,
e foi orientado pelo matemático Christoph Gudermann, que o inﬂuenciou em muitos dos seus
trabalhos. Em 1841 teve a oportunidade de iniciar o seu ano probatório como professor do Ginásio
em Münster. Em 1842, ele conseguiu se tornar oﬁcialmente professor desta Universidade, onde
ﬁcou até 1848, quando se mudou para o Colégio de Hoseanum em Braunsberg. Weierstrass
começou a ser notado no meio matemático, em 1854, quando publicou o artigo Zur Theorie
der Abelschen Functionen (Teorias de funções abelianas) no Jornal de Crelle, o qual tratava de
funções abelianas. Neste mesmo ano, a Universidade de Königsberg o concedeu o título de
doutor honorário e em junho de 1856, iniciou sua carreira como professor na Universidade de
Berlim. Karl trabalhou com aplicações das séries de Fourier e integrais na física Matemática,
introduziu a teoria de funções analíticas, a teoria de funções elípticas e aplicações de problemas
na geometria e mecânica. Em 1872, Weierstrass descobriu uma função que é contínua em todos
os pontos de seu domínio, porém não é diferenciável em nenhum deles, que posteriormente, foi
considerado um exemplo de fractal (Figura 5).

Figura 5 – Função de Weierstrass.

Fonte: <https://pt.wikipedia.org/wiki/Fun%C3%A7%C3%A3o_de_Weierstrass>.

2.1.3 Georg Cantor (1845 - 1918)

Georg Ferdinand Ludwig Philipp Cantor, ﬁlho do comerciante dinamarquês e da mu-
sicista russa, Maria Anna Bohm, nasceu em 1845 em São Petesburg na Rússia. Em 1856,
Cantor se mudou para a Alemanha, e frequentou a Universidade de Berlim, onde foi aluno de
Ernst Kummer, Karl Weierstrass e Leopold Kronecker e se doutorou em 1867 com sua tese
sobre Teoria dos Números. Em 1872 foi docente na Universidade de Halle-Wittenberg, onde
conseguiu seu título de professor associado em 1879. Cantor sempre se interessou por teoria
dos números e obteve resultados surpreendentes nesta área, os quais não eram bem aceitos
por outros Matemáticos. Em 1883, apresentou o Conjunto de Cantor, hoje considerado como um
fractal, o qual trata da divisão de uma reta de maneira iterativa como mostra a Figura 6. Cantor
teve como principal contribuição na Matemática a percepção que existem diferentes "tamanhos"

23

de inﬁnito, ou seja, há inﬁnitos com diferentes cardinalidades. Este trabalho foi publicado em
1874, mas foi rejeitado por vários matemáticos, incluindo seu antigo professor, Kronecker. Devido
as perseguições, Cantor teve sua saúde mental comprometida e foi internado em uma clínica
psiquiátrica em Halle, na Alemanha em 1917, onde acabou falecendo no ano seguinte.

Figura 6 – Conjunto de Cantor.

Fonte: Autoria própria.

2.1.4 Giuseppe Peano (1858 - 1932)

Giuseppe Peano, ﬁlho dos agricultores Bartolomeo Peano e Rosa Cavallo, nasceu
em uma aldeia em 1858 em Cuneo, na região de Piemonte, na Itália. Em 1876, ingressou na
Universidade de Turim, onde se formou em 1880. A princípio, Peano queria se tornar engenheiro,
porém acabou se rendendo à Matemática. No mesmo ano em que se formou, foi contratado pela
Universidade de Turim para ser professor assistente. Pouco tempo depois, assumiu a disciplina
de Cálculo Inﬁnitesimal, devido a problemas de saúde do professor chefe anterior. O primeiro
grande trabalho de Peano foi um livro de Cálculo, publicado em 1884. Em 1889, estruturou os
axiomas dos números naturais, conhecidos hoje como Axiomas de Peano, na obra Arithmetices
Principia Nova Methodo Exposita. Peano teve uma grande contribuição nas áreas de lógica,
análise, teoria dos conjuntos, e outras áreas. Em 1890, apresentou a Curva de Peano, hoje
conhecida como um fractal, (Figura 7), a qual, segundo Benoit Mandelbrot, é uma curva que
pode cobrir um plano. Peano morreu em 1932 com um ataque cardíaco.

2.1.5 David Hilbert (1862 - 1943)

David Hilbert, ﬁlho do juiz Otto Hilbert e de Maria Therese Erdtmann, que era fasci-
nada por ﬁlosoﬁa, astronomia e números primos, nasceu em Königsberg em 1862. Hilbert foi
inicialmente educado por sua mãe e somente ingressou na sua escola Royal Friedrichskolleg,
aos oito anos. Em 1879, Hilbert foi estudar no Ginásio Wilhelm, e após se graduar, ingressou
na Universidade de Königsberg, onde se doutorou em 1885 e lecionou de 1886 à 1895. Neste
meio tempo, inspirado pelo trabalho de Peano, em 1891, Hilbert fez uma versão da Curva de
Peano, hoje conhecida como Curva de Hilbert (Figura 8), a qual também tem como objetivo
cobrir o plano. Hilbert fez grandes contribuições na área da Matemática, como por exemplo,
a reformulação dos axiomas de Euclides, tornando-os mais consistente. Em 1942, ele caiu e
quebrou seu braço, o que o deixou totalmente inativo, o que pode ter sido um grande fator em
sua morte, em 1943. Como Hilbert morreu na época do Nazismo na Alemanha, seu funeral foi
assistido por somente dois de seus antigos colegas de trabalho, já que vários eram judeus ou

24

Figura 7 – Curva de Peano.

Fonte: Autoria Própria.

casados com judeus, por isso, sua morte foi exposta para o mundo externo somente 6 meses
após o ocorrido.

Figura 8 – Curva de Hilbert.

Fonte: Autoria Própria.

2.1.6 Helge von Koch (1870 - 1924)

Niels Fabian Helge von Koch, ﬁlho do militar Richert Vogt von Koch e de Agathe Henriette
Wrede, nasceu em Estocolmo em 1870. Von Koch entrou na Universidade de Estocolmo em 1887
e em 1891 escreveu artigos sobre aplicações de determinantes inﬁnitos para resolver sistemas
de equações diferenciais com coeﬁcientes analíticos, resultados que faziam parte da sua tese de
doutorado. Em 1893, começou a atuar como professor assistente na Universidade de Uppsala,
onde permaneceu até 1905. Publicou em 1906 o artigo Une méthode géométrique élémentaire
pour l’étude de certaines questions de la théorie des courbes plane, que em português signiﬁca:
"Um método geométrico elementar para o estudo de certas questões da teoria das curvas
planas", no qual apresentou pela primeira vez, o seu fractal que foi nomeado como ﬂoco de neve

de Koch (Figura 9). Este fractal criado por Von Koch serviu como inspiração para o problema da
costa da Grã-Bretanha de Benoit Mandelbrot.

Figura 9 – Floco de Neve de Koch.

25

Fonte: <https://scratch.mit.edu/projects/110378199/editor/>.

2.1.7 Waclaw Sierpinski (1882 - 1969)

Waclaw Sierpinski, ﬁlho do médico Konstanty Waclaw Sierpinski e de Ludwika Sier-
pinska, nasceu em 1882 na Varsóvia, Polônia. Sierpinski estudou em uma escola de Varsóvia,
onde enfrentou diﬁculdades devido a ocupação Russa no território polonês. Nesta época, os
russos desencorajavam os poloneses a seguirem seus estudos, por exigerem o uso de sua
língua. Em 1899, Sierpinski ingressou na Universidade de Varsóvia, onde se graduou em 1904
e em seguida, começou a lecionar em uma escola destinada a meninas nesta mesma cidade.
Quando essa escola fechou devido a uma greve, Sierpinski se deslocou para a Cracóvia para
fazer seu doutorado, o qual foi ﬁnalizado em 1908 na Universidade Jaguelônica. Em seguida, foi
indicado para Universidade de Lviv, na Ucrânia, para atuar como professor. Enquanto lecionava
nesta Universidade, estudou a Teoria dos Números e publicou três livros e vários artigos nesta
área. Em 1914, com a chegada da Primeira Guerra Mundial, Sierpinski e a sua família estavam
na Rússia, e com isso, Sierpinski ﬁcou trabalhando em Moscou junto com Nikolai Nikolaevich
Luzin. Com o ﬁm da guerra, Sierpinski voltou para Lviv, onde ﬁcou por pouco tempo, já que
recebeu um convite para lecionar na Universidade da Varsóvia, onde ﬁcou até o ﬁm de sua vida.
Em 1915, Sierpinski desenvolveu seu fractal, conhecido como triângulo de Sierpinski (Figura
10) e no ano seguinte, desenvolveu o Tapete de Sierpinski (Figura 11). Sierpinski se aposentou
da Universidade da Varsóvia em 1960, porém continuou dando seminários sobre Teoria dos
Números na Acadêmia Polonesa de Ciências até 1967.

Na próxima seção, apresentamos algumas das características dos fractais, como autos-

similaridade, estrutura ﬁna e dimensão não inteira.

26

Figura 10 – Triângulo de Sierpinski.

Fonte: <https://scratch.mit.edu/projects/444215471/editor/>.

Figura 11 – Tapete de Sierpinski.

Fonte: Autoria Própria.

2.2 FRACTAIS E SUAS CARACTERÍSTICAS

Até o momento, ainda não existe uma deﬁnição exata para os fractais. Segundo
Mandelbrot (Mandelbrot (1982), "Um fractal é, por deﬁnição, um conjunto cuja a dimensão de
Hausdorff Besicovitch excede estritamente a dimensão topológica". Já, para Kenneth John
Falconer (FALCONER, 2003), um conjunto é considerado fractal se satisfaz ao menos uma das
características:

• estrutura ﬁna em qualquer escala, isto é, quanto mais ampliações tiver o fractal, mais

detalhes serão visíveis;

• é um conjunto "muito irregular"para ser descrito utilizando a Geometria tradicional;

• possui autossimilaridade, podendo ser aproximada ou estatística;

27

• possui dimensão fractal, independente de como for deﬁnida, maior que a dimensão

topológica do conjunto;

• o conjunto pode ser deﬁnido por um algoritmo recursivo.

A seguir, tratamos de algumas das características dos fractais com mais detalhes.

2.2.1 Autossimilaridade

A autossimilaridade é a semelhança que uma parte de um fractal tem com o todo, a
qual, segundo Marietto (2019), pode ser exata, aproximada ou estatística. Segundo Silva (2019),
a autossimilaridade exata é aquela que mesmo ampliada várias vezes, cada parte é idêntica
a original, como por exemplo o Floco de Neve de Koch (Figura 9) e o triângulo de Sierpinski
(Figura 10). Fractais que apresentam a autossimilaridade exata, geralmente são fractais gerados
por sistema de funções iteradas. Um fractal com autossimilaridade aproximada é formado por
cópias aproximadamente iguais de si mesmo, como pode ser percebido no Fractal de Mandelbrot
(Figura 1), o qual não apresenta a repetição de toda a ﬁgura em todas as suas ampliações,
mas sim dos discos, das antenas e dos raios. Fractais que apresentam a autossimilaridade
aproximada, geralmente são fractais gerados por computadores (ou fractais de fuga do tempo),
isto é, são obtidos através de alguma equação, onde geralmente seu gráﬁco é um fractal. Por
ﬁm, na autossimilaridade estatística, somente as características numéricas e estatísticas são
preservadas em todas as escalas, como por exemplo o Movimento Fracionário Browniano (Figura
12). Este movimento é resultado da interação das partículas com o meio em que se encontram,
seja ele líquido ou gasoso. Fractais que possuem autossimilaridade estatística, geralmente são
os fractais naturais, ou seja, criados pela natureza.

Figura 12 – Exemplo de Movimento Fracionário Browniano.

Fonte: <https://pt.wikipedia.org/wiki/Movimento_browniano_fracion%C3%A1rio>.

2.2.2 Estrutura Fina (Complexidade inﬁnita)

A estrutura ﬁna refere-se ao detalhamento inﬁnito de um fractal, isso é, sucessivas
ampliações geram mais detalhes do mesmo, como pode-se perceber no fractal da Figura
1. O mesmo não acontece com elementos da Geometria Euclidiana, como por exemplo, na
circunferência, que quanto mais ampliações ela recebe, menos detalhes passa a apresentar,
pois vai se aproximando cada vez mais de uma reta, como podemos ver na Figura 13.

28

Figura 13 – Ampliações de uma circunferência.

(a) Circunferência.

(b) Ampliação de uma parte da
circunferência do item (a).

(c) Ampliação de uma parte da
circunferência do item (b).

(d) Ampliação de uma parte da
circunferência do item (c).

Fonte: Autoria Própria.

2.2.3 Dimensão não-inteira

Segundo Zanotto (2015), na Geometria Euclidiana uma reta tem dimensão 1, um plano
tem dimensão 2 e um espaço tem dimensão 3. A dimensão de um fractal pode ser não-inteira
e está relacionada ao grau de irregularidade dos mesmos. Por exemplo, a Curva de Koch tem
dimensão aproximada de 1,26, já o Tapete de Sierpinski, tem dimensão aproximada de 1,89.
Note que, se a dimensão de um conjunto for não-inteira, ele com certeza será um fractal, porém,
um conjunto fractal não necessariamente possui dimensão não-inteira, como a Curva de Hilbert,
que possui dimensão igual a 2.

2.3 MÉTODOS PARA CALCULAR A DIMENSÃO DOS FRACTAIS

Nesta seção, os métodos de cálculo de dimensão fractal conhecidos como dimensão
de Hausdorff - Besicovitch e Contagem de Caixas (também conhecido como box-counting) são
apresentados. Estes não são os únicos métodos para o cálculo de dimensão fractal, outros como

29

Massa-Raio e Análise intersecção Acumulativa podem ser encontrados na literatura (BACKES;
ODEMIR, 2005)

2.3.1 Hausdorff-Besicovitch

Este método foi inventado pelos matemáticos Felix Hausdorff e Abram Besicovitch e é
bastante utilizado para calcular a dimensão dos fractais que possuem autossimilaridade exata,
da seguinte forma:

D =

log(p)
log(q)

,

em que p é o número de subpartes similares considerada no lugar de uma dada parte do fractal,
D é a dimensão e q é a redução da parte considerada para cada subparte que entra em seu
lugar (SERRA, 1997). Por exemplo, uma reta, se dividida ao meio, como mostra a Figura (14a),
gera duas partes similares, portanto, sua dimensão será:

D =

log(2)
log(2)

= 1.

Já um quadrado, se seus lados forem divididos ao meio como mostra a Figura (14b),

gera quatro partes similares, portanto, sua dimensão será:

D =

log(4)
log(2)

= 2.

Por ﬁm, um cubo, se suas arestas forem divididas ao meio como mostra a Figura (14c),

gera 8 partes similares, portanto, sua dimensão será:

D =

log(8)
log(2)

= 3.

Figura 14 – Divisão das formas euclidianas para o cálculo de suas dimensões.

(b) Divisão de um quadrado

(c) Divisão de um cubo para

para o cálculo de sua
dimensão.

o cálculo de sua
dimensão.

(a) Divisão de uma reta para

o cálculo de sua
dimensão.

Fonte: Retirado de (MOURA, 2016).

30

Agora, se considerarmos a Curva de Koch, podemos perceber que a cada iteração, seu
comprimento é dividido por três, e essa divisão gera quatro partes similares, como mostra a
Figura 15. Por isso, sua dimensão é dada por:

D =

log(4)
log(3)

≈ 1, 2619.

Ou seja, a dimensão da Curva de Koch é maior que a dimensão de uma reta e menor que a
dimensão de um plano.

Figura 15 – Divisão da Curva de Koch para o cálculo de sua dimensão.

(b) Nível 1.

(a) Nível 0.

(c) Nível 2.

Fonte: Autoria Própria.

A dimensão de Hausdorff-Besicovitch pode ser difícil de ser encontrada para fractais
que não possuem autossimilaridade exata. Por isso, em seguida apresentamos um método mais
geral para o cálculo da dimensão.

2.3.2 Contagem de Caixas

A Contagem de Caixas é um método mais geral para o cálculo da dimensão fractal.
Este facilita o cálculo de dimensão de fractais que não possuem autossimilaridade exata, devido
a fácil implementação computacional. Segundo Neto (2015), esse método consiste em:

• Cobrir o fractal com uma malha quadricular, onde os quadrados têm lado igual a 1
R1

R1 ∈ R;

, onde

• Contar quantos quadrados interceptam o fractal, essa quantidade será nominada N1;

• Calcular a dimensão através da fórmula:

D1 =

log N1
log R1

;

• Fazer R2 = R1
medida 1
R2

;

2 . Cubra o fractal novamente com uma malha, desta vez com quadrados de

• Contar Quantos quadrados interceptam o fractal, sendo nominado N2;

• Calcular a dimensão através da fórmula:

D2 =

log N2
log R2

.

31

Podemos repetir o processo, calculando D3, D4, · · · , Dn, e quanto maior for o valor de n, o
cálculo da dimensão ﬁcará mais próximo do real. Uma forma de calcular o valor real da dimensão,
basta calcular o seguinte limite:

lim
n→∞

log Nn
log Rn

.

(2.1)

Como exemplo, vamos calcular a dimensão aproximada da Figura 16.

Figura 16 – Exemplo de utilização de contagem de caixas.

Fonte: Retirado de (NETO, 2015).

As ﬁguras foram construídas com malhas de tamanho 1
8 , respectivamente, isto é, com
R1 = 2, R2 = 4 e R3 = 8. Fazendo a contagem dos quadrados, temos que N1 = 7, N2 = 19 e
N3 = 34. Então:

4 e 1

2 , 1

D1 =

log N1
logR1

=

log 7
log 2

= 2, 81;

D2 =

D3 =

log N2
logR2

log N3
logR1

=

=

log 19
log 4

log 34
log 8

= 2, 12;

= 1, 70.

Com base nestes cálculos, podemos aﬁrmar que a dimensão do fractal é aproximadamente 1,7.
Porém, para um cálculo exato desta dimensão, deveríamos encontrar um padrão entre as ﬁguras
e então calcularmos o limite indicado em (2.1).

2.4 FRACTAIS NA NATUREZA E ALGUMAS APLICAÇÕES

Na natureza podemos encontrar vários objetos com características fractais, como por
exemplo o brócolis (Figura 17c), a couve ﬂor (Figura 17d), o raio (Figura 17e), a samambaia
(Figura 17a), a nuvem (Figura 17f) e o pulmão humano (Figura 17b). Estes são exemplos de
alguns fractais que possuem autossimilaridade estatística.

32

Figura 17 – Fractais encontrados na Natureza.

(a) Samambaia.

(b) Pulmão humano.

Fonte: <https://escolakids.uol.com.br/
matematica/fractais.htm>.
(c) Exemplo de fractal: Brócolis.

Fonte: <https://www.colegioweb.com.
br/matematica/fractais.html>.

(d) Couve-ﬂor.

Fonte: <https://escola.britannica.com.
br/artigo/br%C3%B3colis/625702>.

(e) Raio.

Fonte: <https://www.selecoes.com.br/
saude/beneﬁcios-couve-ﬂor/>.

(f) Nuvem.

Fonte: <https://gizmodo.uol.com.br/

o-que-acontece-quando-voce-e-atingido-por-um-raio/

>.

Fonte: <https:
//www.teusonhar.com.br/sonhar-com-nuvem/>.

No cinema, os fractais são utilizadas para criar cenários artiﬁciais, como na Figura
18a, a qual apresenta duas montanhas criadas artiﬁcialmente utilizando a teoria de fractais
(XNEDUCATION, 2013). Os fractais também foram utilizados para criar os ﬂocos de neve do
ﬁlme Frozen (STIEFEL, 2017), como mostra a Figura 18b.

Na medicina, os fractais foram explorados para a identiﬁcação do câncer bucal, como
mostram Rotini (2011) e Fernandes (2007). Para isso, é utilizado o método contagem de caixas

Figura 18 – Exemplo de aplicação de Geometria Fractal nos cinemas.

(a) Cenário Artiﬁcial.

(b) Floco de neve em Frozen.

33

Fonte: Retirado de (XNEDUCATION, 2013).

Fonte: Retirado de (STIEFEL, 2017).

para o cálculo da dimensão fractal no fractal formado pela separação entre o epitélio e o estroma
(linha amarela nas Figuras 19a e 19b), como mostram as Figuras (19c) e (19d). Com o resultado
da dimensão deste fractal é possível identiﬁcar se uma pessoa está com câncer ou não.

Figura 19 – Utilização de contagem de caixas para a identiﬁcação de câncer bucal.

(a) Identiﬁcação de separação entre
Estroma e Epitélio (paciente 1)

(b) Identiﬁcação de separação entre
Estroma e Epitélio (paciente 2)

(c) Utilização do método contagem de caixas

(d) Utilização do método contagem de caixas

Fonte: Retirado de (ROTINI, 2011).

34

Na construção civil são identiﬁcadas estruturas fractais em construções que até mesmo
antecedem a percepção de fractal como uma geometria. Um exemplo é a Torre Eiffel (Figura
20a), construída em 1889, quase 100 anos antes de Benoit Mandelbrot iniciar a estruturação da
geometria fractal. Outro exemplo de construção através da Geometria Fractal é o Pavilhão de
Swoosh, na Inglaterra (Figura 20b).

Figura 20 – Fractais na arquitetura.

(a) Torre Eiffel.

(b) Pavilhão de Swoosh.

Fonte:
<https://pt.wikipedia.org/wiki/Torre_Eiffel>.

Fonte: <http://arquifractal.blogspot.com/2008/
08/pavilho-swoosh.html>.

No mercado ﬁnanceiro, temos um exemplo de fractal proposto por Benoit Mandelbrot,
o gerador de três ondas, para a construção de um gráﬁco que pretende avaliar os riscos de
investimentos, buscando um risco menor, como mostra Hayashi (2002). Na Figura 21 podemos
ver o funcionamento do gerador de três ondas na construção do gráﬁco de preço por tempo de
um produto. Note que o tempo pode ser dado em qualquer unidade, tais como anos, meses, dias,
etc. Na primeira iteração da imagem, temos uma reta chamada de linha de tendência, que indica
para onde o investimento tende a ir. Na segunda iteração, existe uma linha chamada gerador,
que corresponde à oscilação sobe-desce-sobe de um preço, veja que a linha de tendência é
dividida em três com o gerador. Na terceira iteração, é realizado o mesmo procedimento da
segunda iteração em cada reta, isto é, cada reta gerada pela segunda iteração, é dividida em
três novas retas, gerando, assim, nove retas, com isso, podemos repetir este processo, e assim
temos um gráﬁco com características fractais.

Figura 21 – Exemplo de Fractal: Gerador de três ondas.

35

Fonte: Retirado de (HAYASHI, 2002).

Na área de Matemática, a busca pelos padrões dos fractais possibilita a abordagem
de vários tópicos, como por exemplo, recorrência, sequências numéricas, progressão aritmética
e geométrica, logaritmo, exponencial, perímetro área, volume, além de incentivar o uso de
ferramentas computacionais e estudo de lógica de programação para a obtenção de algoritmos
para gerar fractais.

No próximo capítulo apresentamos uma sequência didática a qual sugerimos trabalhar

a construção de fractais com a linguagem de programação Scratch.

37

3 PROPOSTA DIDÁTICA: CONSTRUINDO FRACTAIS NO SCRATCH

A Base Nacional Comum Curricular (MEC, 2018) defende que tecnologias como calcula-
dora e planilhas eletrônicas sejam estimuladas desde o ensino fundamental, para que no ensino
médio, o aluno possa ser capaz de a trabalhar o desenvolver do pensamento computacional
através da construção de algoritmos. Ainda, segundo a MEC (2018), é essencial que algumas
outras habilidades também sejam desenvolvidas neste período, como por exemplo:

• Utilizar as noções de transformações isométricas (translação, reﬂexão, rotação e composi-
ções destas) e transformações homotéticas para construir ﬁguras e analisar elementos da
natureza e diferentes produções humanas (fractais, construções civis, obras de arte, entre
outras);

• Utilizar conceitos iniciais de uma linguagem de programação na implementação de algorit-

mos escritos em linguagem corrente e/ou Matemática;

• Identiﬁcar e associar progressões aritméticas (PA) a funções aﬁns de domínios discretos,
para análise de propriedades, dedução de algumas fórmulas e resolução de problemas;

• Identiﬁcar e associar progressões geométricas (PG) a funções exponenciais de domínios
discretos, para análise de propriedades, dedução de algumas fórmulas e resolução de
problemas.

Com base no exposto acima, neste capítulo, apresentamos uma proposta de uma
sequência didática, a qual busca desenvolver o pensamento computacional dos alunos por
meio da interpretação das características de alguns fractais e elaboração de seus algoritmos na
linguagem de programação Scratch. Mais ainda, a proposta fornece uma visão mais integrada
da Matemática com a realidade, além de possibilitar o aprofundamento de alguns de seus
tópicos através da realização de algumas atividades que devem ser realizadas com base na
visualização dos fractais. Os algoritmos que geram alguns fractais no Scratch, incluindo os
que são apresentados no decorrer deste capítulo podem ser encontrados na página <https:
//scratch.mit.edu/studios/28411511/>.

A sequência é dividida em 8 encontros, os quais estão planejados conforme disposto
na Tabela 1 e sugerimos que sejam executados em duplas ou grupos. A metodologia sugerida e
o que esperamos dos alunos em cada encontro, estão descritos nas próximas seções. Esta pro-
posta pode ser ajustada conforme a necessidade do professor e da turma. Todo o material produ-
zido está disponibilizado na página <https://sites.google.com/view/propostadidtica-fractaisnoscra/
home> para que possa ser baixado, modiﬁcado ou usado integralmente por qualquer professor
em suas próprias aulas.

38

Tabela 1 – Planejamento da sequência didática.

Público Alvo: Qualquer ano do Ensino Médio
Recursos didáticos: Sala de Informática e Projetor.
Encontro Planejamento/Execução
1

2

3

4

5

6

7

8

Uma introdução a geometria
fractal: deﬁnições e caracterís-
ticas.
Uma introdução a geometria
fractal: história, fractais na na-
tureza e algumas aplicações.

Uma introdução ao Scratch:
instalação e conceitos bási-
cos.

Construir a Curva de Koch
para qualquer nível.

Construir a Curva de Peano
para qualquer nível.

Construir o Tapete de Sier-
pinski para qualquer nível.

Construir o Conjunto de Can-
tor para qualquer nível.

Tempo Objetivos
1h40min Esperamos que o aluno seja capaz
de identiﬁcar as características de um
fractal.

1h40min Esperamos que o aluno compreenda
o surgimento da geometria fractal e os
criadores de alguns dos fractais clás-
sicos e realize as inúmeras aplicações
em diversos campos da ciência.

1h40min Esperamos que o aluno aprenda as
maneiras de utilizar o Scratch (Insta-
lando no seu computador ou usando
online), aprenda os comandos bási-
cos e os explore para a construção
de alguns polígonos e outras ﬁguras,
explorando as ferramentas de recursi-
vidade.

1h40min Esperamos que o aluno seja capaz
de construir um algoritmo que gera a
Curva de Koch no Scratch, além de
compreender os conceitos matemáti-
cos envolvidos na sua construção.

1h40min Esperamos que o aluno seja capaz
de construir um algoritmo que gera a
Curva de Peano no Scratch, além de
compreender os conceitos matemáti-
cos envolvidos na sua construção.

1h40min Esperamos que o aluno seja capaz de
construir um algoritmo que gera o Ta-
pete de Sierpinski no Scratch, além de
compreender os conceitos matemáti-
cos envolvidos na sua construção.

1h40min Esperamos que o aluno seja capaz de
construir um algoritmo que gera o Con-
junto de Cantor no Scratch, além de
compreender os conceitos matemáti-
cos envolvidos na sua construção.

Atividades para o Estudo de
tópicos de Matemática.

1h40min Esperamos que o aluno seja capaz
de resolver as atividades envolvendo
Fractais e aprofunde seu conheci-
mento em alguns tópicos de Matemá-
tica.
Fonte: Autoria Própria.

39

3.1 ENCONTRO 1 - UMA INTRODUÇÃO A GEOMETRIA FRACTAL

Metodologia: Neste encontro, sugerimos que o professor apresente algumas das deﬁ-
nições dos fractais, deﬁna algumas de suas principais características, como a autossimilaridade,
a complexidade inﬁnita e a dimensão não inteira. Esta aula deve ser iniciada com o professor
solicitando que os alunos preencham a Atividade 1 mostrada na Tabela 2. Esperamos que o
aluno responda que não existe ou não sabe as formas das ﬁguras apresentadas na segunda
coluna da Atividade 1 e que ﬁque curioso com a pergunta. Por isso, o professor deve iniciar uma
discussão com os alunos sobre a tabela preenchida, mostrando que vários objetos da natureza,
não têm o formato de elementos da geometria euclidiana. Com isso, deve deﬁnir o que é um
fractal, segundo Mandelbrot e segundo Falconner, mostrar a origem do nome, explicar suas
características, a autossimilaridade, a complexidade inﬁnita e a dimensão não inteira.

Para o apoio do professor, disponibilizamos um material no Apêndice A.1, bem como a
Tabela 2 sem o preenchimento, no Apêndice A.2.1 que podem ser utilizados integralmente em
sua aula, ou modiﬁcados conforme a necessidade do mesmo.

Figura

Forma Geométrica

Figura

Forma Geométrica

Tabela 2 – Atividade 1.

Quadrado

Não possui

Circunferência

Não possui

Triângulo

Não possui

Hexágono

Não possui

Pentágono

Não possui

Fonte: Autoria Própria.

40

3.2 ENCONTRO 2 - GEOMETRIA FRACTAL: HISTÓRIA, FRACTAIS NA NATUREZA E ALGU-

MAS APLICAÇÕES.

Metodologia: Neste encontro, sugerimos que o professor apresente a história dos
fractais, os Matemáticos envolvidos para o surgimento desta teoria e mostre as suas aplicações
em diversos campos da ciência, além de apresentar os fractais clássicos e suas características.
Esta aula deve ser iniciada fornecendo as Atividades 2, 3, 4 e 5, que constam nas Tabelas 3, 4, 5
e 6 para que os alunos as preencham no decorrer da aula.

Tabela 3 – Atividade 2 (Apoio para a dedução da lei de formação da Curva de Koch).

Nível Qual o com-

seg-

primento
dos
mentos?
n
n
3

n
32

n
33

n
34

n
35

n
36

...

n
3n

0
1

2

3

4

5

6

...

i

Quantas ve-
zes foi repe-
tido o nível
0?
-
4

16 = 42

64 = 43

256 = 44

1024 = 45

4096 = 46

...

4n

Qual o procedimento para obter o Nível i através
do Nível i − 1?

-
Desenhe o Nível 0 com tamanho n/3
Vire 60◦ à esquerda
Desenhe o Nível 0 com tamanho n/3
Vire 120◦ à direita
Desenhe o Nível 0 com tamanho n/3
Vire 60◦ à esquerda
Desenhe o Nível 0 com tamanho n/3
Desenhe o Nível 1 com tamanho n/9
Vire 60◦ à esquerda
Desenhe o Nível 1 com tamanho n/9
Vire 120◦ à direita
Desenhe o Nível 1 com tamanho n/9
Vire 60◦ à esquerda
Desenhe o Nível 1 com tamanho n/9
O mesmo procedimento do nível anterior consi-
derando Nível 2 e tamanho n/27
O mesmo procedimento do nível anterior consi-
derando Nível 3 e tamanho n/34
O mesmo procedimento do nível anterior consi-
derando Nível 4 e tamanho n/35
O mesmo procedimento do nível anterior consi-
derando Nível 5 e tamanho n/36
...

Desenhe o Nível (i-1) com tamanho n/3n
Vire 60◦ à esquerda
Desenhe o Nível (i-1) com tamanho n/3n
Vire 120◦ à direita
Desenhe o Nível (i-1) com tamanho n/3n
Vire 60◦ à esquerda
Desenhe o Nível (i-1) com tamanho n/3n

Fonte: Autoria Própria.

Tabela 4 – Atividade 3 (Apoio para a dedução da lei de formação da Curva de Peano).

41

Qual o procedimento para obter o Nível i através
do Nível i − 1?

Nível Qual o com-

seg-

primento
dos
mentos?
n
n
3

n
32

n
33

n
34

n
35

n
36

...

n
3n

0
1

2

3

4

5

6

...

i

Quantas ve-
zes foi repe-
tido o nível
0?
-
9

-
Desenhe o Nível 0 com tamanho n/3
Vire 90◦ à esquerda
Desenhe o Nível 0 com tamanho n/3
Vire 90◦ à direita
Desenhe o Nível 0 com tamanho n/3
Vire 90◦ à direita
Desenhe o Nível 0 com tamanho n/3
Vire 90◦ à direita
Desenhe o Nível 0 com tamanho n/3
Vire 90◦ à esquerda
Desenhe o Nível 0 com tamanho n/3
Vire 90◦ à esquerda
Desenhe o Nível 0 com tamanho n/3
Vire 90◦ à esquerda
Desenhe o Nível 0 com tamanho n/3
Vire 90◦ à direita
Desenhe o Nível 0 com tamanho n/3
O mesmo procedimento do nível anterior consi-
derando Nível 1 e tamanho n/9
O mesmo procedimento do nível anterior consi-
derando Nível 2 e tamanho n/27
O mesmo procedimento do nível anterior consi-
derando Nível 3 e tamanho n/34
59049 = 95 O mesmo procedimento do nível anterior consi-
derando Nível 4 e tamanho n/35
O mesmo procedimento do nível anterior consi-
derando Nível 5 e tamanho n/36
...

531441 =
96
...

6561 = 94

729 = 93

81 = 92

9n

O mesmo procedimento dos níveis anteriores
considerando Nível (i-1) e tamanho n/3n

Fonte: Autoria Própria.

42

Tabela 5 – Atividade 4 (Apoio para a dedução da lei de formação do Tapete de Sierpisnki).

Qual o procedimento para obter o Nível i através
do Nível i − 1?

Nível Qual o com-

seg-

primento
dos
mentos?
n
n
3

n
32

n
33

n
34

n
35

n
36

...

n
3n

0
1

2

3

4

5

6

...

i

Quantas ve-
zes foi repe-
tido o nível
0?
-
8

-
Desenhe o Nível 0 com tamanho n/3
Mova n/3
Desenhe o Nível 0 com tamanho n/3
Mova n/3
Desenhe o Nível 0 com tamanho n/3
Mova n/3
Vire 90◦ à esquerda
Mova n/3
Desenhe o Nível 0 com tamanho n/3
Mova n/3
Desenhe o Nível 0 com tamanho n/3
Mova n/3
Vire 90◦ à esquerda
Mova n/3
Desenhe o Nível 0 com tamanho n/3
Mova n/3
Desenhe o Nível 0 com tamanho n/3
Mova n/3
Vire 90◦ à esquerda
Mova n/3
Desenhe o Nível 0 com tamanho n/3
O mesmo procedimento do nível anterior consi-
derando Nível 1 e tamanho n/9
O mesmo procedimento do nível anterior consi-
derando Nível 2 e tamanho n/27
O mesmo procedimento do nível anterior consi-
derando Nível 3 e tamanho n/34
32768 = 85 O mesmo procedimento do nível anterior consi-
derando Nível 4 e tamanho n/35
O mesmo procedimento do nível anterior consi-
derando Nível 5 e tamanho n/36
...

262144 =
86
...

4096 = 84

512 = 83

64 = 82

8n

O mesmo procedimento dos níveis anteriores
considerando Nível (i-1) e tamanho n/3n

Fonte: Autoria Própria.

Tabela 6 – Atividade 5 (Apoio para a dedução da lei de formação do Conjunto de Cantor).

43

Nível Qual o com-

seg-

primento
dos
mentos?
n
n
3

n
32

n
33

n
34

n
35

n
36

...

n
3n

0
1

2

3

4

5

6

...

i

Quantas ve-
zes foi repe-
tido o nível
0?
-
2

4 = 22

8 = 23

16 = 24

32 = 25

64 = 26

...

2n

Qual o procedimento para obter o Nível i através
do Nível i − 1?

-
Desenhe o Nível 0 com tamanho n/3
Mova n/3 sem desenhar
Desenhe o Nível 0 com tamanho n/3
Desenhe o Nível 1 com tamanho n1/3
Mova n/3
Desenho o Nível 1 com tamanho n1/3
Desenhe o Nível 2 com tamaanho n2/3
Mova n/3
Desenhe o Nível 2 com tamanho n2/3
O mesmo procedimento do nível anterior consi-
derando Nível 3
O mesmo procedimento do nível anterior consi-
derando Nível 4
O mesmo procedimento do nível anterior consi-
derando Nível 5
...

O mesmo procedimento dos níveis anteriores
considerando Nível (i-1)

Fonte: Autoria Própria.

Em seguida, o professor deve falar sobre a vida de Helge von Koch e mostrar para os

alunos o fractal apresentado por ele, chamado de Curva de Koch (Figura 22).

Depois, deve pedir que façam a Atividade 2, apresentada na Tabela 3, para que em
dupla ou grupo discutam e compreendam a lei de formação deste fractal. O objetivo desta
atividade, é que os alunos percebam as progressões geométricas e exponenciais formadas
pela sequência dos tamanhos dos passos, além da repetição do Nível 0 nas outras iterações.
Neste encontro, sugerimos ainda que as Atividades 3, 4 e 5 sejam realizadas da mesma forma
que a anterior, ou seja, preenchendo as Tabelas 4, 5 e 6, respectivamente, considerando as
informações de Giuseppe Peano e a Curva de Peano (Figura 23), Waclaw Sierpinski e o Tapete
de Sierpinski (Figura 24), e por ﬁm, Georg Cantor, e o Conjunto de Cantor (Figura 25).

44

Figura 22 – Níveis da Curva de Koch.

(b) Nível 1.

(a) Nível 0.

(c) Nível 2.

Fonte: Autoria Própria.

Figura 23 – Curva de Peano.

(a) Nível 0.

(b) Nível 1.

(c) Nível 2.

(d) Nível 3.

Fonte: Autoria Própria.

O professor deve encerrar a aula mostrando algumas aplicações dessa teoria em

diversas áreas do conhecimento.

Figura 24 – Níveis do tapete de Sierpinski.

(a) Nível 0.

(b) Nível 1.

45

(c) Nível 2.

(d) Nível 3.

Fonte: Autoria Própria.

Figura 25 – Níveis da curva de Cantor.
(a) Nível 0.

(b) Nível 1.

(c) Nível 2.

(d) Nível 3.

Fonte: Autoria Própria.

Para o apoio do professor, disponibilizamos um material no Apêndice A.1, bem como as
tabelas com as Atividades, que podem ser utilizados integralmente, ou modiﬁcados conforme a
necessidade do mesmo. As Tabelas sem o preenchimento se encontram no Apêndice A.2.2.

46

3.3 ENCONTRO 3 - CONCEITOS BÁSICOS DO SCRATCH

Metodologia: Neste encontro, sugerimos que o professor explique como baixar e
também como acessar o Scratch online, criar uma conta, as características de rede social da
linguagem de programação online e alguns comandos básicos para a criação de algoritmos.
Esta aula deve ser iniciada com o professor mostrando a página do Scratch e onde criar conta
e fazer o download da linguagem de programação, após isso, deve mostrar como encontrar
projetos para aprender alguns algoritmos, como seguir outros usuários do Scratch e como
selecionar o idioma. Em seguida, o professor deve mostrar os comandos básicos do Scratch,
tais como "movimento", "aparência" e os outros, além das extensões e suas utilidades, podendo
mostrar como encaixar os blocos e pra que servem os blocos principais (movimentação, mudar a
aparência do personagem, ...). Por ﬁm, o professor deve solicitar que o aluno resolva a Atividade
6 para que ele treine os comandos básicos e em "blocos" ensinados anteriormente.

Para o apoio do professor, disponibilizamos um manual de uso do Scratch no Apêndice
A.3 e a Atividade 6 no Apêndice A.2.3, que podem ser utilizados integralmente em sua aula, ou
modiﬁcados conforme a necessidade do mesmo.
Sugestão para a Atividade 6:
1) Desenhe um quadrado que tenha lado com tamanho de passo 200.
Resposta: Um possível algoritmo para esta atividade é o mostrado na Figura 26a
2) Crie um algoritmo que seja capaz de desenhar um quadrado cujo lado possa medir qualquer
valor de passo.
Resposta: Um possível algoritmo para esta atividade é o mostrado na Figura 26b.
3) Desenhe a Figura 27 utilizando o comando blocos e os passos 100, 50 e 25, respectivamente.
Resposta: Um possível algoritmo para essa aula é o mostrado na Figura 28.

Vale ressaltar que o algoritmo solicitado na questão 3 (Figura 28) explora a construção
de blocos (recorrência) e ﬁguras geométricas, que serão muito utilizados na criação dos fractais.

47

Figura 26 – Soluções - Questões 1 e 2 da Atividade 6.

(a) Solução da questão 1 da Atividade

(b) Solução da questão 2 da Atividade

6.

6.

Fonte: Autoria Própria.

Figura 27 – Sugestão de questão 3 da Atividade 6.

Fonte: Autoria Própria.

48

Figura 28 – Solução da questão 3 da Atividade 6.

Fonte: Autoria Própria.

49

3.4 ENCONTRO 4 - CONSTRUINDO A CURVA DE KOCH

Metodologia: Neste encontro, sugerimos que o professor inicie a aula solicitando que
o aluno utilize o Scratch para criar algoritmos que gerem os Níveis 0, 1 e 2 da Curva de Koch,
como na Figura 22. O professor pode explorar o erro dos alunos para auxiliá-los na construção
de algoritmos parecidos com os das Figuras 29 e 30. Nesta etapa, é muito importante que o
aluno identiﬁque o processo iterativo entre os algoritmos que criou, que são representados pelas
ﬂechas nas Figuras 29 e 30. Para ajudar nesta tarefa, o aluno deve utilizar a Atividade 2 (Tabela
3), preenchida por ele mesmo anteriormente, e o professor pode solicitar para que identiﬁquem
os padrões encontrados na Atividade 2 nos algoritmos que criaram. Em seguida, o professor
pode solicitar que os alunos criem um esquema de um algoritmo que generalize o desenho da
Curva de Koch, isto é, um algoritmo que seja capaz de desenhar qualquer nível deste fractal,
como na Figura 32. O professor pode então mostrar como reproduzir essa iteratividade no
Scratch, mostrando o método de níveis dentro do comando bloco, como mostrado na Figura 31.
Por ﬁm, o professor deve discutir com os alunos os conceitos matemáticos que foram utilizados
na construção deste fractal. A construção do algoritmo deste fractal possibilita o aluno trabalhar
com recorrência, progressão geométrica, ângulos e propriedades de triângulos.

Figura 29 – Algoritmo dos Níveis 0 e 1 da curva de Koch no Scratch.

Fonte: Autoria Própria.

50

Figura 30 – Algoritmos dos Níveis 1 e 2 da curva de Koch no Scratch.

Fonte: Autoria Própria.

51

Figura 31 – Exemplo de algoritmo da curva de Koch no Scratch.

Fonte: Autoria Própria.

52

Figura 32 – Esquematizando o procedimento da construção da curva de Koch.

Fonte: Autoria Própria.

53

3.5 ENCONTRO 5 - CONSTRUINDO A CURVA DE PEANO

Metodologia: Neste encontro, sugerimos que o professor inicie a aula solicitando que
o aluno utilize o Scratch para fazer um algoritmo que desenhe os Níveis 0 e 1 da Curva de Peano,
como na Figura 23. O professor deve mostrar a Figura 33, explicando que os quadrados pintados
são os quadrados pertencentes ao fractal, e os sem pintar, são formados pela união de dois
quadrados pintados, ou seja, não pertencem ao fractal, para que assim os alunos consigam ver
melhor a recorrência do fractal. Ainda, deve explorar o erro dos alunos para auxiliá-los, com o
objetivo de criarem algoritmos parecidos com os da Figura 34. Nesta etapa, é muito importante
que o aluno identiﬁque o processo iterativo entre os algoritmos que criou, que são representados
pelas ﬂechas na Figura 34. Para ajudar nesta tarefa, o aluno deve utilizar a Atividade 3 (Tabela
4), preenchida por ele mesmo anteriormente, e o professor pode solicitar para que identiﬁquem
os padrões encontrados na Atividade 3 nos algoritmos que criaram. Em seguida, o professor
pode solicitar que os alunos criem um esquema de um algoritmo que generalize o desenho da
Curva de Peano, isto é, um algoritmo que seja capaz de desenhar qualquer nível solicitado, o
qual será similar ao mostrado na Figura 36. Após isso, o professor pode então solicitar que
os alunos criem um algoritmo no Scratch baseado no esquema feito anteriormente, tal como o
mostrado na Figura 35. O professor pode discutir com os alunos os conceitos matemáticos que
foram utilizados na construção deste fractal. A construção do algoritmo deste fractal possibilita o
aluno trabalhar com recorrência, progressão geométrica, ângulos e propriedades de quadrados.

Figura 33 – Lei de formação do Fractal.

Fonte: Autoria Própria.

54

Figura 34 – Algoritmos dos Níveis 0 e 1 da curva de Peano no Scratch.

Fonte: Autoria Própria.

55

Figura 35 – Algoritmo da Curva de Peano no Scratch.

Fonte: Autoria Própria.

56

Figura 36 – Esquematizando o procedimento da construção da curva de Peano.

Fonte: Autoria Própria.

57

3.6 ENCONTRO 6 - CONSTRUINDO O TAPETE DE SIERPINSKI

Metodologia: Neste encontro sugerimos que o professor inicie a aula solicitando que
o aluno utilize o Scratch para fazer um algoritmo que desenho os Níveis 0, 1 e 2 (Figura 24)
do Tapete de Sierpinski. Nesta aula, vale citar que é possível criar um algoritmo utilizando
o comando blocos para fazer um quadrado, o que poupará tempo e espaço na criação dos
algoritmos solicitados durante a aula, como mostrado na Figura 37. O professor pode explorar
o erro dos alunos para auxiliá-los. Nesta etapa, é muito importante que o aluno identiﬁque
o processo iterativo entre os algoritmos que criou. Para ajudar nesta tarefa, o aluno deve
utilizar a Atividade 4 (Tabela 5), preenchida por ele mesmo anteriormente, e o professor pode
solicitar para que identiﬁquem os padrões encontrados na Atividade 4 nos algoritmos que criaram.
Em seguida, o professor pode solicitar que os alunos criem um esquema de um algoritmo
que generalize o desenho do Tapete de Sierpinski, isto é, um algoritmo que seja capaz de
desenhar qualquer nível solicitado, o qual será similar ao mostrado na Figura 38. Após isso, o
professor pode então solicitar que os alunos criem o algoritmo, esquematizado anteriormente,
no Scratch, tal como o mostrado na Figura 39. Por ﬁm, o professor pode discutir com os alunos
os conceitos matemáticos que foram utilizados na construção deste fractal. A construção do
algoritmo deste fractal possibilita o aluno trabalhar com recorrência, progressão geométrica,
ângulos e propriedades de quadrados.

Figura 37 – Algoritmo do bloco "Quadrado" no Scratch.

Fonte: Autoria Própria.

58

Figura 38 – Esquematizando o procedimento da construção do tapete de Sierpinski.

Fonte: Autoria Própria.

59

Figura 39 – Algoritmo do Tapete de Sierpinski no Scratch.

Fonte: Autoria Própria.

60

3.7 ENCONTRO 7 - CONSTRUINDO O CONJUNTO DE CANTOR

Metodologia: Neste encontro, sugerimos que o professor inicie a aula solicitando que
o aluno utilize o Scratch para fazer um algoritmo que desenhe os Níveis 0, 1 e 2 (Figura 25) do
Conjunto de Cantor, como mostrado na Figura 41. Nesta aula, é válido citar que neste algoritmo,
ao invés de termos um único comando "bloco", que serve para desenhar, igual aos algoritmos
anteriores, na generalização deste algoritmo, teremos dois comandos "bloco", um para desenhar,
representado pelas letras D, no esquema da Figura 40, e outro para andar sem desenhar,
representado pelas letras O, no esquema da Figura 40. Com isso, o professor pode explorar
o erro dos alunos para auxiliá-los. Nesta estapa, é muito importante que o aluno identiﬁque o
processo iterativo entre os algoritmos que criou. Para ajudar nesta tarefa, o aluno deve utilizar a
Atividade 5 (Tabela 6), preenchida por ele mesmo anteriormente, e o professor pode solicitar para
que identiﬁquem os padrões encontrados na Atividade 5 nos algoritmos que criaram. Em seguida,
o professor pode solicitar que os alunos criem um esquema de um algoritmo que generalize o
desenho do Conjunto de Cantor, isto é, um algoritmo que seja capaz de desenhar qualquer nível
solicitado, o qual será similar ao mostrado na Figura 40. Após isso, o professor pode solicitar
então que os alunos criem o algoritmo, esquematizado anteriormente, no Scratch, tal como o
mostrado na Figura 42. Por ﬁm, o professor pode discutir com os alunos os conceitos que foram
utilizados na construção deste fractal. A construção do algoritmo deste fractal possibilita o aluno
trabalhar com recorrência e progressão geométrica.

Observação: Como podemos perceber na Figura 40, temos algumas diferenças em
relação aos esquemas anteriores. Nesse esquema, teremos dois algoritmos funcionando em
paralelo, denotados por D (desenhar) e O (ocultar). Note também, que não colocamos o tamanho
dos passos em cada iteração, pois cada linha de uma iteração terá um tamanho, por exemplo, D1,
signiﬁca "Desenhar com o tamanho =
"

passo
31
e Di signiﬁca "Desenhar com o tamanho =

", O3 signiﬁca "Ocultar com o tamanho =
passo
3i

".

passo
33

61

Figura 40 – Esquematizando o procedimento da construção do conjunto de Cantor.

Fonte: Autoria Própria.

62

Figura 41 – Algoritmos dos primeiros Níveis da curva de Cantor no Scratch.

(b) Nível 1.

(a) Nível 0.

(c) Nível 2.

Fonte: Autoria Própria.

63

Figura 42 – Algoritmo do Conjunto de Cantor no Scratch.

Fonte: Autoria Própria.

64

3.8 ENCONTRO 8 - PRATICANDO MATEMÁTICA

Metodologia: Nesta aula, sugerimos que o professor propicie ao aluno o aprofun-
damento de conteúdos matemáticos através da Atividade 7, a qual pode ser realizada com
a visualização dos fractais. Algumas ideias são apresentadas a seguir. A Atividade sem as
respostas se encontra no apêndice A.2.4.

65

O objetivo desta primeira questão é trabalhar os conceitos de PG e propriedades
logarítmicas utilizando o perímetro da Curva de Koch, como base, além de introduzir os conceitos
de limite e inﬁnito.
Questão 1: Utilizando o algoritmo da Curva de Koch feito no Scratch, responda:
A) Qual o perímetro do Nível 0?
Resposta: 300 (tamanho inicial do passo).
B) Qual o perímetro do Nível 1?

Resposta: 400 =

4. (Comprimento do passo anterior dividido por três, multiplicado por

(cid:19)

(cid:18) 300
3

quatro, que é o número de repetições do Nível 0).
C) Qual o perímetro no Nível 2?

Resposta:

1600
3

=

(cid:19)

(cid:18) 300
32

42. (Comprimento do passo inicial, dividido por 32 e multiplicado por

42, que é o número de repetições do Nível 0).
D) Qual será o perímetro em um nível n?
(cid:19)
.

Resposta: 300

(cid:18) 4n
3n

E) Utilizando a função exponencial do item anterior, qual Nível do fractal terá o perímetro
aproximado de 1264?

Resposta: 5, pois, 300

≈ 1264.

(cid:19)n

(cid:18) 4
3

Aplicando o logaritmo em qualquer base (log) em ambos os lados, teremos:

log

n log

(cid:19)n

(cid:18) 4
3
(cid:18) 4
3

≈ log

1264
300

⇔

(cid:19)

≈ log 4, 21 ⇔

n ≈

log 4, 21

log

4
3

≈ 5.

F) O que acontece com o valor do perímetro quando o Nível for cada vez maior?

Resposta: Analisando o termo

, podemos perceber que ele aumenta conforme aumenta-

mos o valor de n. Desta forma, é esperado que o perímetro seja cada vez maior com o decorrer
das iterações, ou seja, seu valor tenderá ao inﬁnito.

(cid:19)

(cid:18) 4n
3n

66

O objetivo desta segunda questão é trabalhar os conceitos de PG e propriedades
logarítmicas utilizando o perímetro do Conjunto de Cantor, como base, além de introduzir o
conceito de "tender a zero", quando ocorre uma "divisão por inﬁnito".
Questão 2: Utilizando o algoritmo do Conjunto de Cantor feito no Scratch, responda:
A) Qual o perímetro do Nível 0?
Resposta: 300 (tamanho inicial do passo).
B) Qual o Perímetro do Nível 1?

Resposta: 200 = 300

(cid:19)

.

(cid:18) 2
3

C) Qual o Perímetro no Nível 2?

Resposta:

400
3

= 300

(cid:19)2

.

(cid:18) 2
3

D) Qual será o perímetro em um nível n?
(cid:19)n

Resposta: 300

.

(cid:18) 2
3

E) Utilizando a função exponencial do item anterior, qual nível do fractal terá comprimento
aproximado de 59?

Resposta: 4, pois 300

≈ 59.

(cid:19)n

(cid:18) 2
3

Aplicando o logaritmo em qualquer base (log) em ambos os lados, teremos:

log

(cid:19)n

(cid:18) 2
3

≈ log

59
300

⇔

n log

(cid:19)

(cid:18) 2
3

≈ log 0, 2 ⇔

n ≈

log 0, 2
2
3

log

≈ 4.

F) O que acontece com o valor do perímetro quando o Nível for cada vez maior?
(cid:18) 2n
3n

Resposta: Analisando o termo 300

(cid:19)

, podemos perceber que ele diminui conforme au-

mentamos o valor de n. Desta forma, é esperado que o perímetro seja cada vez menor com o
decorrer das iterações, ou seja, seu valor tenderá a zero.

67

O objetivo desta terceira questão é trabalhar com área utilizando área da Curva de
Peano e propriedades de potência. O professor pode mostrar a Figura 33 para relembrar que
nem todos os quadrados fazem parte do fractal, para que os alunos possam calcular a área
exata do fractal.
Questão 3: Utilizando o algoritmo da Curva de Peano, responda:
A) Qual a área deste fractal no Nível 1?

Resposta: 20000 = 2

(cid:19)2

(cid:18)300
3

(São dois quadrados com base e altura

300
3

passos.)

B) Qual a área deste fractal no Nível 2?

Resposta: 20000 = 2(9)

. (Cada uma das nove retas da iteração anterior, irão gerar

dois quadrados de base e altura

passos, sendo assim, dezoito quadrados com essa medida.)

C) Qual a área deste fractal no Nível 3?

Resposta: 20000 = 2(9)2

. (Cada uma das oitenta e uma retas da iteração anterior,

(cid:19)2

(cid:18) 300
32

300
32

(cid:19)2

(cid:18) 300
33

300
33

passos, sendo assim, cento e sessenta e dois

irão gerar dois quadrados de base e altura

quadrados com essa medida.)
D) Qual será a área em um Nível n?

Resposta: 20000 = 2(9)n−1
(cid:18) 9n−1
9n−1

(cid:19) (cid:18)3002
32

(cid:19)

2

300
3n

(cid:18) 300
3n

(cid:19)2

= 2(9)n−1

(cid:19)

(cid:18) 3002
32n

= 2(9)n−1

(cid:18) 3002

(cid:19)

32n−2.32

=

. (Cada uma das n − 1 retas da iteração anterior, irão gerar dois qua-

drados de base e altura

passos, sendo assim, 2(9)n−1 quadrados com essa medida.)

E) O que acontece com a área quando o Nível for cada vez maior?
Resposta: Manterá o valor constante de 20000.

68

O objetivo desta quarta quarta questão é trabalhar com probabilidade e área utilizando

o Tapete de Sierpinski, ela é baseada em uma atividade apresentada em (SILVA, 2015).
Questão 4: Utilizando o algoritmo to Tapete de Sierpinski, responda:
A) No Nível 1, qual a probabilidade de escolhermos um ponto aleatório e ele pertencer ao fractal
(desconsiderando o buraco central)?

Resposta:

, pois o fractal é formado por um quadrado subdividido em nove quadrados idênticos,
(cid:19)
.

sendo que um deles não pertence ao fractal, logo a chance do ponto pertencer ao fractal é

B) No Nível 2, qual a probabilidade de escolhermos um ponto aleatório e ele pertencer ao fractal?

Resposta:

64
81

= 8

(cid:19)

(cid:18) 8
92

, pois considerando a iteração anterior, teríamos

8
9

de probabilidade

em
do ponto pertencer ao fractal, porém, nessa iteração, temos oito quadrados de medida
cada um dos quadrados da iteração anterior, ou seja, teremos oito quadrados, onde cada um

(cid:18) 8
9

1
92

contém oito quadrados com medida

(cid:19)

.

(cid:18) 1
92

C) No nível n, qual a probabilidade de escolhermos um ponto aleatório e ele pertencer ao fractal
(desconsiderando os buracos)?

, pois o tamanho do passo é dado por

, visto que, a cada iteração, é dividido
Resposta:
por 9. Já a quantidade de quadrados que pertencem ao fractal é 8n, pois, na primeira iteração,
temos oito quadrados, na segunda iteração, cada um desses oito quadrados, terá oito quadrados,
ou seja, 82 quadrados e esse processo se repete até que tenhamos 8n quadrados, logo, teremos
8n
9n =
D) Qual Nível deste fractal terá uma probabilidade de

de probabilidade do ponto pertencer ao fractal.

de um ponto aleatório pertencer ao

(cid:18)8
9

(cid:19)n

1
9n

512
729

8
9

8n
9n

fractal (desconsiderando os buracos)?

Resposta: Terceiro nível, pois

512
729

=

(cid:19)n

.

(cid:18) 8
9

Aplicando o logaritmo em qualquer base (log) em ambos os lados, teremos:

log

n log

(cid:19)n

(cid:18) 8
9
(cid:18) 8
9

= log

(cid:19)

= log

(cid:18)512
729
(cid:18) 512
729

(cid:19)

⇔

(cid:19)

⇔

log

n =

512
729
8
9

log

= 3.

E) Qual a probabilidade de escolhermos um ponto aleatório e ele pertencer ao fractal, quando
este fractal tende a inﬁnitas iterações?
Resposta: Nenhuma, pois a chance do ponto pertencer ao fractal em uma iteração aleatória é
(cid:18) 8
9

é um número menor que zero, quanto maior for o valor de n, menor será a

, e como

(cid:19)n

8
9

chance do ponto pertencer ao fractal, se aproximando de zero.

69

O objetivo desta quinta questão é utilizar um fractal natural (folha de árvore) para calcular

a dimensão, e através disso, trabalhar com logaritmo.
Questão 5: Utilizando a Figura 43, calcule a dimensão aproximada do fractal com o método
contagem de caixas considerando que os quadrados têm medidas 1/4, 1/8 e 1/16, respectiva-
mente.

Figura 43 – Questão 5 - Atividade 7

Fonte: Retirado de (ROTINI, 2011).

Resposta: Na primeira imagem, temos 26 quadrados interceptando a folha, logo a dimensão
aproximada será dada por:

D1 =

≈ 2, 35.

log 26
log 4

Já na segunda imagem, temos 86 quadrados interceptando a folha, logo,

D2 =

log 86
log 8

≈ 2, 14.

Por ﬁm, na terceira imagem, temos 301 quadrados interceptando a folha, logo

D3 =

log 301
log 16

≈ 2, 06.

Desta forma, o aluno pode concluir que a dimensão do fractal é aproximadamente 2,06.

70

O objetivo desta sexta questão é veriﬁcar o que os alunos conseguem correlacionar

entre as atividades feitas e a Matemática.
Questão 6: Quais conteúdos matemáticos foram possíveis de serem identiﬁcados na construção
dos fractais no Scratch?
Resposta: A ser respondida pelos alunos, para veriﬁcar quais conteúdos conseguiram identiﬁcar
nestas atividades.

71

O objetivo desta sétima questão é veriﬁcar se os alunos conseguiram identiﬁcar os erros
na criação do algoritmo, além de criarem alternativas para a resolução dos mesmos, para que
com isso consigam evoluir seu pensamento computacional.
Questão 7: Quais foram os erros identiﬁcados na criação dos algoritmos dos fractais no Scratch?
E como resolveram os mesmos?
Resposta: A ser respondida pelos alunos, para veriﬁcar as diﬁculdades que tiveram na criação
dos algoritmos e como conseguiram resolvê-las.

73

4 CONCLUSÃO

Devido a facilidade do uso da linguagem de programação Scratch, a qual foi desenvol-
vida pelo MIT para ser utilizada por pessoas entre 8 e 16 anos, e pela beleza e aplicabilidade
dos fractais, os quais propiciam a apresentação de uma Matemática mais atrativa e interessante,
neste trabalho, exploramos essas duas ferramentas para propor uma sequência didática com-
posta por oito encontros de uma hora e quarenta minutos, a qual tem como objetivo principal,
estimular o desenvolvimento do pensamento computacional dos estudantes, além de possibilitar
o aprofundamento de alguns tópicos de Matemática. Mais especiﬁcamente, os encontros abor-
daram conceitos da geometria fractal, comandos básicos e mais elaborados do Scratch com a
ﬁnalidade de capacitar o aluno para a construção de algoritmos que geram fractais no Scratch.
Não pudemos aplicar a sequência em sala de aula devido a pandemia do COVID-19.
No entanto, temos isso como perspectiva futura. Assim que possível, forneceremos as atividades
para estudantes do Ensino Médio e então relataremos a experiência, apontando os pontos que
devem ser melhorados e/ou modiﬁcados visando o melhor desempenho dos alunos.

Para que a sequência didática possa ser aplicada por qualquer professor,
disponibilizamos todo o material aqui produzido no site <https://sites.google.com/view/
propostadidtica-fractaisnoscra/home> para que possa ser baixado, modiﬁcado ou usado in-
tegralmente em suas próprias aulas.

75

REFERÊNCIAS

BACKES, A.; ODEMIR, B. Técnicas de estimativa da dimensão fractal: Um estudo comparativo.
INFOCOMP Journal of Computer Science, v. 4, p. 50–58, 01 2005. Citado na página 29.

BESSA, K. P. Diﬁculdades de aprendizagem em Matemática na percepção de professores
e alunos do Ensino Fundamental. 2007. Monograﬁa (Trabalho de Conclusão do curso de
Licenciatura em Matemática) — Universidade Católica de Brasília, 2007. Citado na página 17.

BORGES, J. O. Cálculo da Dimensão Fractal do Sistema Vascular de Folhas do Cerrado.
2017. Monograﬁa (Trabalho de Conclusão do curso de Licenciatura em Matemática) — Universi-
dade de Brasília, 2017. Citado na página 21.

FALCONER, M. J. Fractal Geometry Mathematical Foundations and Applications. West
Sussex, UK: Wiley, 2003. Disponível em: <http://wwwf.imperial.ac.uk/~jswlamb/M345PA46/F03%
20chap%201-4.pdf>. Citado na página 26.

FERNANDES, J.A. Fractais: Uma nova visão da matemática. 2007. Monograﬁa (Trabalho de
Conclusão do curso de Licenciatura em Matemática) — Centro Universitário de Lavras, Minas
Gerais, 2007. Citado na página 32.

GOMES, T.A.; RODRIGUES, C.K. A evolução das tendências da educação matemática e o
enfoque da história da matemática no ensino. Revista de Educação, Ciências e Matemática.,
2014. Citado na página 17.

HAYASHI, A.D. Aplicação de Fractais ao mercado de capitais utilizandose as Elliott Waves.
2002. Dissertação (Mestrado em Engenharia de Produção) — Universidade Federal de Santa
Catarina, Santa Catarina, 2002. Citado 2 vezes nas páginas 34 e 35.

INEP. Brasil no PISA 2015 Análises e reﬂexões sobre o desempenho dos estudantes bra-
sileiros. Brasil., 2016. Disponível em: <https://download.inep.gov.br/acoes_internacionais/pisa/
resultados/2015/pisa2015_completo_ﬁnal_baixa.pdf>. Citado na página 17.

INEP, Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira. Pisa 2018
revela baixo desempenho escolar em leitura, matemática e ciências no Brasil. 2019.
Disponível em:
<http://portal.inep.gov.br/artigo/-/asset_publisher/B4AQV9zFY7Bv/content/
pisa-2018-revela-baixo-desempenho-escolar-em-leitura-matematica-e-ciencias-no-brasil/
21206>. Citado na página 17.

MANDELBROT, B. The fractal geometry of nature. San Francisco, CA: Freeman, 1982. Dispo-
nível em: <https://cds.cern.ch/record/98509>. Citado na página 26.

MARIETTO, M.G.B. Fractal: Conceitos Fundamentais. 2019. Disponível em: <http://professor.
ufabc.edu.br/~graca.marietto/HomePage/3.Fractal.pdf>. Citado na página 27.

MEC. Base Nacional Comum Curricular. Brasil., 2018. Disponível em:
<http://
basenacionalcomum.mec.gov.br/images/BNCC_EI_EF_110518_versaoﬁnal_site.pdf>. Citado 2
vezes nas páginas 17 e 37.

MOURA, D.V. Introdução à Geometria Fractal. 2016. Dissertação (Mestrado Proﬁssional em
Matemática em Rede Nacional) — Universidade Federal do Piaui, Piauí, 2016. Citado na página
29.

76

NETO, A. F. L. Tópicos da Geometria Fractal e Aplicações. 2015. Dissertação (Mestrado
Proﬁssional em Matemática em Rede Nacional) — Universidade Estadual do Ceará, Ceará, 2015.
Citado 2 vezes nas páginas 30 e 31.

PARANÁ, Secretaria do Estado da Educação do. Diretrizes Curriculares da Educação Básica.
Paraná, 2008. Disponível em: <http://www.educadores.diaadia.pr.gov.br/arquivos/File/diretrizes/
dce_mat.pdf>. Citado na página 17.

ROBERTSON, E.; O’CONNOR, J. MacTutor History of Mathematics Archive. 2020. Disponível
em: <https://mathshistory.st-andrews.ac.uk/>. Citado na página 19.

ROTINI, E. Fractais: A Matemática ajudando a salvar vidas! 2011. Disponível em: <http:
//parquedaciencia.blogspot.com/2011/09/fractais-matematica-ajudando-salvar.html>. Citado 3
vezes nas páginas 32, 33 e 69.

SERRA, C. P. Fractais Gerados por Sistemas Dinâmicos Complexos. Curitiba, Brasil: Cham-
pagnat, 1997. Citado na página 29.

SILVA, K. M. Fractais e algumas aplicações ao ensino. 2015. Monograﬁa (Trabalho de con-
clusão do curso de Licenciatura em Matemática.) — Instituto Federal de Educação, Ciência e
Tecnologia de São Paulo, 2015. Citado na página 68.

SILVA, P. M. Medidas Fractais Aplicadas à Classiﬁcação de Texturas. 2019. Tese (Doutorado
em Matemática Aplicada) — Universidade Estadual de Campinas, 2019. Citado na página 27.

STIEFEL, K.E. Fractals in Frozen. 2017. Disponível em: <https://scienceonblog.wordpress.com/
2017/01/19/fractals-in-frozen/>. Citado 2 vezes nas páginas 32 e 33.

XNEDUCATION. TEDTALKS LEGENDADO- Fractais. 2013. Disponível em: <https://www.
youtube.com/watch?v=hejsOlqiT90&ab_channel=XNEducation>. Citado 2 vezes nas páginas 32
e 33.

ZANOTTO, R.A. Estudo da Geometria Fractal Clássica. 2015. Dissertação (Mestrado em
Matemática) — Universidade Federal de Goiás, Goiás, 2015. Citado na página 28.

77

A APÊNDICES

A.1 MATERIAL DE APOIO PARA OS ENCONTROS

Os slides dos Encontros 1 e 2, além do manual em PDF do Encontro 3 e as Atividades
em versões editáveis dos Encontros 1, 2, 3 e 8 encontram-se no site <https://sites.google.com/
view/propostadidtica-fractaisnoscra/home>.

O manual de apoio para baixar esses itens pode ser visto a seguir.

78

A.1.1 Slides

Para baixar os slides para os Encontros 1 e 2, clique no item (1) da Figura 44a para
abrir o leitor externo de slides. Após isso, clique na engrenagem, indicada pelo item (2) da Figura
44b. Em seguida, clique no item (3) da Figura 44c. Por ﬁm, o item (4) da Figura 44d permite
baixar o arquivo em formato PDF, e o item (5) desta mesma Figura, permite baixar o arquivo em
formato PPTX, o qual pode ser editado, caso necessário.

Figura 44 – Download de slides do Google Sites.

(a) Download de Slides - 1.

(b) Download de Slides - 2.

(c) Download de Slides - 3.

(d) Download de Slides - 4.

Fonte: Autoria Própria.

79

A.1.2 PDF

Para baixar material em PDF, clique no item (1) da Figura 45a para abrir o leitor externo

de PDF. Após isso, clique no item (2) da Figura 45b para baixar o arquivo.

Figura 45 – Download de PDF do Google Sites.

(a) Download de PDF - 1.

(b) Download de PDF - 2.

Fonte: Autoria Própria.

80

A.1.3 Arquivo de Texto

Para baixar as Atividades, clique no item (1) da Figura 46a para abrir o leitor externo
de documentos. Após isso, clique no item (2) da Figura 46b para abrir o menu. Em seguida,
clique no item (3) da Figura 46c para abrir o menu de download. Por ﬁm, o item (4) da Figura 46d
permite baixar o documento em formato .doc, o item (5) desta mesma Figura, permite fazer o
download em formato .odt, e o item (6) permite baixar o documento em formato em PDF.

Figura 46 – Download de documentos do Word do Google Sites.

(a) Download de documentos - 1.

(b) Download de documentos - 2.

(c) Download de
documentos
- 3.

(d) Download de

documentos - 4.

Fonte: Autoria Própria.

A.2 ATIVIDADES

A.2.1 Atividade 1

81

1) Descreva a forma geométrica de cada ﬁgura apresentada na tabela abaixo:

Professor:
Aluno:
Figura

Forma Geométrica

Figura

Forma Geométrica

82

A.2.2 Atividade 2

1) Complete as informações solicitadas na tabela abaixo.

Professor:
Aluno:
Nível Qual o com-

seg-

primento
dos
mentos?
n

Quantas ve-
zes foi repe-
tido o nível
0?
-

0
1
2
3
5
...

i

...

...

Qual o procedimento para obter o Nível i através
do Nível i − 1?

-

...

83

A.2.3 Atividade 3

Professor:
Aluno:

1) Desenhe no Scratch um quadrado que tenha lado com tamanho de passo 200.
2) Crie um algoritmo no Scratch que seja capaz de desenhar um quadrado cujo lado

possa medir qualquer valor de passo.

3) Desenhe a Figura abaixo no Scrach utilizando o comando blocos e os passos 100,

50 e 25, respectivamente

84

A.2.4 Atividade 4

Professor:
Aluno:

Questão 1: Utilizando o algoritmo da Curva de Koch feito no Scratch, responda:
A) Qual o perímetro do Nível 0?
B) Qual o perímetro do Nível 1?
C) Qual o perímetro no Nível 2?
D) Qual será o perímetro em um nível n?
E) Utilizando a função exponencial do item anterior, qual Nível do fractal terá o perímetro

aproximado de 1264?

F) O que acontece com o valor do perímetro quando o Nível for cada vez maior?

Questão 2: Utilizando o algoritmo do Conjunto de Cantor feito no Scratch, responda:
A) Qual o perímetro do Nível 0?
B) Qual o Perímetro do Nível 1?
C) Qual o Perímetro no Nível 2?
D) Qual será o perímetro em um nível n?
E) Utilizando a função exponencial do item anterior, qual nível do fractal terá compri-

mento aproximado de 59?

F) O que acontece com o valor do perímetro quando o Nível for cada vez maior?

85

Questão 3: Utilizando o algoritmo da Curva de Peano, responda:
A) Qual a área deste fractal no Nível 1?
B) Qual a área deste fractal no Nível 2?
C) Qual a área deste fractal no Nível 3?
D) Qual será a área em um Nível n?
E) O que acontece com a área quando o Nível for cada vez maior?

Questão 4: Utilizando o algoritmo to Tapete de Sierpinski, responda:
A) No Nível 1, qual a probabilidade de escolhermos um ponto aleatório e ele pertencer

ao fractal (desconsiderando o buraco central)?

B) No Nível 2, qual a probabilidade de escolhermos um ponto aleatório e ele pertencer

ao fractal (desconsiderando os buracos)?

C) No nível n, qual a probabilidade de escolhermos um ponto aleatório e ele pertencer

ao fractal (desconsiderando os buracos)?

D) Qual Nível deste fractal terá uma probabilidade de

pertencer ao fractal (desconsiderando os buracos)?

512
729

de um ponto aleatório

E) Qual a probabilidade de escolhermos um ponto aleatório e ele pertencer ao fractal,

quando este fractal tende a inﬁnitas iterações?

86

Questão 5: Utilizando abaixo, calcule a dimensão aproximada do fractal com o método
contagem de caixas considerando que os quadrados têm medidas 1/4, 1/8 e 1/16, respectiva-
mente.

Questão 6: Quais conteúdos matemáticos foram possíveis de serem identiﬁcados na

construção dos fractais no Scratch?

87

Questão 7: Quais foram os erros identiﬁcados na criação dos algoritmos dos fractais

no Scratch? E como resolveram os mesmos?

88

A.3 GUIA DE USO DO SCRATCH

Neste capítulo mostramos um guia do uso do Scratch tanto para a versão desktop
(download) quanto para a versão no navegador (online). O link a ser acessado é <https:
//scratch.mit.edu/>. Em ambos os casos, a utilização do programa feita de igual modo.

A.3.1 Download

Para fazer o download, ao acessar o site já citado acima, localize no ﬁnal da página o
item (1) conforme a Figura 47. Em seguida escolha o seu sistema operacional em (2) e clique
em descarregar (3) conforme mostra a Figura 48. Após terminar o download, execute o arquivo
(4) mostrado na Figura 49 para fazer a instalação. Com o término da instalação, será aberto o
Scratch, e será adicionado na sua área de trabalho o ícone mostrado na Figura 50, que é onde
você pode acessar o Scratch quando precisar.

Figura 47 – Página inicial Scratch.

Fonte: Retirado de <https://scratch.mit.edu/>.

Figura 48 – Download Scratch.

Fonte: Retirado de <https://scratch.mit.edu/>.

89

Figura 49 – Instalador Scratch.

Fonte: Retirado de <https://scratch.mit.edu/>.

Figura 50 – Ícone de inicialização do Scratch.

Fonte: Retirado de <https://scratch.mit.edu/>.

A.3.2 Navegador

Ao acessar pelo navegador você encontrará uma página, como a da Figura 51 (pode
ser feito pelo celular também), clique no item (1) para começar a usar o Scratch, no item (2) para
ver projetos que utilizaram o Scratch, no item (3) para ver alguns tutoriais, e no item (4) para ver
informações sobre o Scratch.

Figura 51 – Acesso online Scratch.

Fonte: Retirado de <https://scratch.mit.edu/>.

90

A.3.3 Scratch

O ambiente do Scratch está apresentado na Figura 52. Para uma melhor explicação
sobre o uso do Scratch, dividiremos esse ambiente em partes, e as explicaremos individualmente.

Figura 52 – Ambiente do Scratch.

Fonte: Retirado de <https://scratch.mit.edu/>.

A Figura 53 mostra o palco, que é onde todos os códigos ganham sentido, sendo nele
que acontece toda a movimentação dos personagens, sons, e tudo mais. Veja que em (1) estão
os botões que podem indicar o começo e o ﬁm dos códigos.

Figura 53 – Palco.

Fonte: Retirado de <https://scratch.mit.edu/>.

As Figuras 54 e 55 tratam do ambiente dos atores (personagens) e cenários, que é
onde você seleciona quais atores receberão os códigos, além de adicionar novos cenários e
personagens.

Figura 54 – Atores.

91

Fonte: Retirado de <https://scratch.mit.edu/>.

Figura 55 – Atores.

Fonte: Retirado de <https://scratch.mit.edu/>.

1. Enviar ator: Nesta opção, você pode fazer upload de algum ator que você tenha no seu
computador, ou tenha baixado, isso serve para qualquer imagem que você queira usar no
seu projeto.

2. Surpresa: Esta opção tem como função gerar algum ator aleatório no seu projeto.

3. Pintar: A função desta opção é criar um novo ator diretamente no Scratch.

4. Selecione um ator: Aqui você poderá selecionar um dos atores já existentes no programa.

5. Carregar cenário: A ﬁnalidade desta opção é fazer upload de um cenário que você tenha

no seu computador, de mesmo modo ao item (1).

6. Surpresa: Da mesma maneira do item (2), a função desta opção é gerar um cenário

aleatório entre os existentes no Scratch.

7. Pintar: De maneira análoga ao item (3), esta opção permite a criação de um cenário no

próprio ambiente do Scratch.

8. Selecione cenário: Esta opção tem como ﬁnalidade selecionar um cenário entre os

existentes no Scratch.

92

9. Aqui são os atores que você está trabalhando no projeto, ao clicar em um ator, você pode

programar diretamente nele, como por exemplo, movimentos que somente ele fará.

10. Nestes campos você pode escolher as coordenadas que colocará um ator, ao selecioná-lo

no item (9).

11. Esta opção é a que permite selecionar o tamanho do ator selecionado no item 9, sendo

100 o tamanho "real" da imagem dele.

12. Nesta opção, você pode escolher a direção que um ator, selecionado no item (9), estará

"olhando", sendo ela dada em graus, e 90 sendo a direção "padrão".

13. Aqui você pode selecionar em qual cenário você estará trabalhando no seu projeto.

Agora tratamos do campo onde serão colocados os códigos, note que na Figura 56, o
item (1) indica o ator no qual você está trabalhando, ou seja, os códigos servirão para o mesmo,
e (2) indica um exemplo de código colocado sobre esse campo, veja também, que os códigos se
encaixam como se fossem um quebra-cabeças.

Figura 56 – Linha de códigos.

Fonte: Retirado de <https://scratch.mit.edu/>.

93

Na Figura 57, tratamos do menu, onde o item (1) é o idioma, em (2) você pode criar
um novo projeto, acessar um do seu computador ou até mesmo baixar o código que você criou
(note que para abrir um projeto baixado, você deve acessá-lo por aqui, não abrindo diretamente
o arquivo) em (3) encontra-se o modo turbo, onde você pode acelerar alguns comandos de seu
projeto, e em (4) mais um local onde é possível acessar os tutoriais.

Figura 57 – Menu.

Fonte: Retirado de <https://scratch.mit.edu/>.

O ambiente da Figura 58 é para alternar entre os códigos, o editor de fantasias e de
sons. No editor de fantasias você pode criar novas fantasias para os personagens, que podem
se alternar conforme você coloca os códigos.

Figura 58 – Menu de códigos.

Fonte: Retirado de <https://scratch.mit.edu/>.

A Figura 59 apresenta o ambiente mais importante. Devido a alta quantidade de códigos

disponíveis, explicaremos cada tipo separadamente.

Figura 59 – Códigos.

Fonte: Retirado de <https://scratch.mit.edu/>.

O primeiro tipo de código que temos é o MOVIMENTOS e todos seus códigos são
exibidos nas Figuras 60a e 60b, e, como o próprio nome já diz, trata da movimentação dos
personagens.

1. Mova (

) passos: Movimentar uma certa quantidade de passos na direção em que o

personagem está virado.

94

Figura 60 – Movimentos.

(a) Movimentos-1.

(b) Movimentos-2.

Fonte: Retirado de <https://scratch.mit.edu/>.

2. Gire (

) graus: Gire o personagem em uma certa quantidade de graus no sentido horário.

3. Gire (

) graus: Gire o personagem em uma certa quantidade de graus no sentido

anti-horário.

4. Vá para (

): Você pode fazer com que seu persoangem vá até uma posição aleatória ou

até o ponteiro do mouse.

5. Vá para x:(

) y:(

): Aqui você seleciona alguma coordenada para que seu personagem

se mova até ela.

6. Deslize por (

) segs até (

): Ao contrário do comando mova, esse comando mostra
o personagem se deslocando até o local indicado, que pode ser um local aleatório ou o
ponteiro do mouse.

7. Deslize por (

) segs até x:(

) y:(

): De mesmo modo que o item anterior, esse comando

permite o deslocamento do objeto até a coordenada indicada.

95

8. Aponte para a direção (

): Seleciona a angulação a qual o personagem estará, sendo

90 graus o padrão.

9. Aponte para (

): Faz com que o personagem se vire em direção ao ponteiro do mouse.

10. Mude x em (
horizontal.

): Move o personagem em uma certa quantidade de passos somente na

11. Deﬁna x como (

): Faz o personagem ir para uma certa coordenada x.

12. Mude y em (
vertical.

): Move o personagem em uma certa quantidade de passos somente na

13. Deﬁna y como (

): Faz o personagem ir para uma certa coordenada y.

14. Se tocar na borda, volte: Comando para impedir que o personagem ultrapasse a borda

do palco.

15. Deﬁna o estilo de rotação para (

): Rotaciona o personagem.

16. Posição x: Caixa para ser colocada em outros comandos para envolver a posição x.

17. Posição y: Caixa para ser colocada em outros comandos para envolver a posição y.

18. Direção: Caixa para ser colocada em outros comandos para envolver a direção.

96

O segundo tipo de código, mostrado nas Figuras 61a e 61b, é denominado APARÊNCIA

e trata de edição de personagens, cenários e falas.

Figura 61 – Aparência.

(a) Aparência-1.

(b) Aparência-2.

Fonte: Retirado de <https://scratch.mit.edu/>.

1. Diga ( ) por ( ) segundos: Aparecerá um balão de fala com a palavra ou frase digitada

em cima do personagem, pelo tempo deﬁnido.

2. Diga ( ): De mesmo modo que o item anterior, aparecerá um balão de fala, só que dessa

vez, sem tempo pré-deﬁnido.

3. Pense ( ) por ( ) segundos: De mesmo modo que o item 1, aparecerá um balão sobre o

personagem, só que desta vez, será um balão de pensamento.

4. Pense ( ): Esta opção, de mesmo modo que o item anterior, criará um balão de pensamento

sobre o personagem, só que desta vez, sem o tempo pré-determinado.

97

5. Mude para a fantasia ( ): Como já foi dito na explicação da Figura 58, você pode alternar
entre as fantasias criadas para o personagem, e esse é o código que permite você
selecionar qual fantasia irá colocar.

6. Próxima fantasia: De mesmo modo que o item anterior, esse item alterará a fantasia do

personagem, porém, irá direto para a próxima fantasia feita na Figura 58.

7. Mude para o cenário ( ): De mesmo modo que 5, nesse item, você poderá selecionar o

cenário criado na Figura 58.

8. Próximo cenário: Como no item, anterior, você poderá alternar o cenário, porém ao invés

de selecioná-lo, você colocará o sucessor dele, criado na Figura 58.

9. Mude ( ) no tamanho: Como dito no item (11) da Figura 54, o personagem pode mudar
de tamanho, e caso, precise alterar o tamanho de um personagem dentro de um código, o
comando em questão é esse.

10. Deﬁna o tamanho como ( )%: Caso decida selecionar o tamanho ao invés de ir mudando

aos poucos, você pode usar esse comando.

11. Mude ( ) ao efeito( ): Nesse campo você pode alterar o efeito dos personagens, fazendo-

os mudar de cor, rotacionar, pixelar, entre outros efeitos.

12. Deﬁna o efeito ( ) como ( ): Ao invés de ir mudando os efeitos ao pouco, nessa opção

você deﬁnirá um valor para o efeito escolhido.

13. Remova os efeitos gráﬁcos: Nesse campo você retira todos os efeitos já utilizados.

14. Mostre: Esse código deve ser combinado com outros códigos para que algum campo seja

mostrado.

15. Esconda: De mesmo modo que o item anterior, esse código deve ser combinado com

outros códigos para que algum campo seja escondido.

16. Vá para a camada ( ): Esse campo permite escolher qual personagem irá ﬁcar sobreposto

ao outro, quando ﬁcarem em contato.

17. Vá para ( )( ) camadas: De mesmo modo que o item anterior, esse código permite
escolher qual personagem irá ﬁcar na frente ou atrás de outro, porém, aqui, você alterará
qual camada ele estará.

18. Fantasia ( ): Caixa para ser colocada em outros códigos para escolher uma fantasia.

19. Cenário ( ): Caixa para ser colocada em outros códigos para escolher um cenário.

20. Tamanho: Caixa para ser colocada em outros códigos para escolher um tamanho para o

personagem.

Agora, a Figura 62 retrata os códigos de SOM do Scratch.

1. Toque o som ( ) até o ﬁm: Reproduzir o som escolhido até o ﬁm dele.

98

Figura 62 – Som.

Fonte: Retirado de <https://scratch.mit.edu/>.

2. Toque o som ( ): Reproduzir o som selecionado.

3. Pare todos os sons): Como o próprio nome já diz, comando para parar todos os sons em

execução.

4. Mude ( ) no efeito ( ): Comando para equalizar o som.

5. Deﬁna o efeito ( ) para ( ): Comando também para equalizar o som, porém, deﬁnindo um

valor.

6. Remova todos os efeitos sonoros: Retire todos os efeitos modiﬁcados nos itens anterio-

res.

7. Mude o volume em ( ): Mude o volume do som.

8. Deﬁna o volume para ( )%: Deﬁna o volume do som.

9. Volume: Caixa para ser colocada em outros códigos para escolher o volume.

Agora falamos sobre os códigos de EVENTOS, mostrados na Figura 63, que geralmente

servem para iniciar uma linha de código.

Figura 63 – Eventos.

99

Fonte: Retirado de <https://scratch.mit.edu/>.

1. Quando ( ) for clicada: Comando para iniciar uma linha de código código clicando na

bandeira.

2. Quando a tecla ( ) for clicada: Escolha uma tecla para começar uma linha de código.

3. Quando este ator for clicado: Comando para iniciar uma linha de código clicando no ator

em questão.

4. Quando o cenário mudar para ( ): Comando para iniciar uma linha de código quando o

cenário for mudado.

5. Quando ( ) > 10: Comando para iniciar uma linha de código quando um certo aconteci-

mento ocorrer.

6. Quando eu receber ( ): Comando para iniciar uma linha de código a partir de uma certa

mensagem, vinda de outro código.

7. Transmita ( ): Comando para transmitir uma "mensagem" para outra linha de código.

8. Transmita ( ) e espere: De mesmo modo que o item anterior, comando para transmitir

uma mensagem.

100

Agora tratamos dos códigos de CONTROLE, conforme mostrado nas Figuras 64a e

64b, que servem para dar comandos "lógicos" aos códigos.

Figura 64 – Controle.

(a) Controle-1.

(b) Controle-2.

Fonte: Retirado de <https://scratch.mit.edu/>.

1. Espere ( ) seg: Comando para ser combinado com outros para dar uma pausa no código

pelo tempo determinado.

2. Repita ( ) vezes: Repetir a linha de códigos que estará dentro deste a quantidade de

vezes escolhida.

3. Sempre: De modo análogo ao item anterior, esse item irá repetir o código dentro dele, só

que sem parar.

4. Se ( ) então: Código para dar uma condição para uma linha de códigos acontecer. O
código que acontecerá deverá ser colocado entre as barras, e a condição entre o "se" e o
"então". Note que essa condição possivelmente será um código de outro setor.

5. Se ( ) então, senão: De mesmo modo que o item anterior, aqui será fornecida uma
condição para acontecer um código, só que, caso ela não seja cumprida, você poderá
encaixar outro código para acontecer.

101

6. Espere até que ( ): Comando para "pausar" um código até que uma condição escolhida

aconteça.

7. Repita até que ( ): Comando para repetir um código até que uma condição escolhida

aconteça.

8. Pare ( ): Código para parar alguns códigos no ator, você pode selecionar entre todos os

códigos, o código selecionado ou todos os outros códigos no ator.

9. Quando eu começar com um clone: Comando para iniciar um código a partir do mo-

mento em que um clone do ator for criado.

10. Crie clone de ( ): Como o próprio nome diz, comando para criar um clone de um dos

atores selecionados.

11. Apague este clone: Comando para apagar o clone do ator que está trabalhando.

Um dos últimos campos de código é o de SENSORES, mostrado nas Figuras 65a e

65b, que fará com o que ator responda ou pergunte algo.

Figura 65 – Sensores.

(a) Sensores-1.

(b) Sensores-2.

Fonte: Retirado de <https://scratch.mit.edu/>.

1. Tocando em ( )?: Esse é um comando que "pergunta" se o personagem está tocando em
um determinado local, se a resposta for sim, esse código retorna "true". A função principal
desse comando é ser usado em outros códigos.

2. Tocando na cor ( )?: De mesmo modo, esse comando "questiona" se o personagem está
tocando em uma determinada cor. Como no comando anterior, esse código tem como
função básica servir de "apoio" para outros códigos.

102

3. A cor ( ) está tocando na cor ( )?: Parecido com o que acontece no código anterior, esse

código "questiona" se uma cor está tocando outra cor.

4. Distância até ( ): Esse código retorna a distância entre o personagem e o ponteiro do

mouse.

5. Pergunte ( ) e espere: Esse código permite que o ator faça uma uma pergunta para quem

está "assistindo", e abre um campo de respostas.

6. Resposta: Campo para encaixar a resposta dada a uma pergunta em outro código.

7. Tecla ( ) pressionada?: Código para "perguntar" se uma tecla escolhida está sendo

pressionada, e também serve para ser encaixado em outros códigos.

8. Mouse pressionado?: De modo análogo ao item anterior, esse código pergunta se o
mouse está sendo pressionado e também serve para ser encaixado em outros códigos.

9. Posição x do mouse: Esse código retorna a coordenada x do ponteiro do mouse.

10. Posição y do mouse: Esse código retorna a coordenada y do ponteiro do mouse.

11. Deﬁna modo de arrasto para ( ): Deﬁne se o ator em questão será arrastável ou não.

12. Ruído: Esse código mostra o volume do áudio que o microfone do usuário está captando.

13. Cronômetro: Esse código cria um cronômetro.

14. Zere o Cronômetro: A função desse código é zerar o cronômetro criado no item anterior.

15. ( ) de ( ): Você pode conseguir algumas informações sobre o palco utilizando esse código,
como número do cenário, nome do cenário, volume ou o valor da sua variável (este último
será explicado mais para frente).

16. ( ) atual: Permite ao usuário, a veriﬁcação de algumas informações, como dia, mês, ano,

hora, segundos, etc, do atual momento no qual foi clicado.

17. Número de dias desde 2000: Contador de dias desde o ano de 2000.

18. Nome do usuário: Informa o nome de usuário escolhido ao criar a conta do Scratch.

Os códigos de OPERADORES mostrados nas Figuras66a e 66b é mais focado em

operadores lógico-matemáticos.

1. ( ) + ( ): Permite a soma entre dois números. Geralmente é encaixado com outros códigos

para exibir o resultado no palco.

2. ( ) - ( ): Permite a subtração entre dois números. Geralmente é encaixado com outros

códigos para exibir o resultado no palco.

3. ( ) * ( ): Permite a multiplicação entre dois números. Geralmente é encaixado com outros

códigos para exibir o resultado no palco.

Figura 66 – Operadores.

(a) Operadores-1.

103

(b) Operadores-2.

Fonte: Retirado de <https://scratch.mit.edu/>.

4. ( ) / ( ): Permite a divisão entre dois números. Geralmente é encaixado com outros códigos

para exibir o resultado no palco.

5. Número aleatório entre ( ) e ( ): Gera um número aleatório entre os escolhidos.

6. ( ) > ( ): Permite veriﬁcar se um número é maior que outro, retornando "true" se for verdade.

7. ( ) < ( ): Permite veriﬁcar se um número é menor que outro, retornando "true" se for

verdade.

8. ( ) = ( ): Permite veriﬁcar se um número é igual a outro, retornando "true" se for verdade.

9. ( ) e ( ): Conjunção "e" da lógica Matemática. Permite "juntar" dois códigos com o
conectivo lógico "e", retornando "true" caso os dois sejam verdadeiros simultaneamente.

10. ( ) ou ( ): Conjunção "ou" da lógica Matemática. Permite "juntar" dois códigos com
conectivo lógico "ou", retornando "true" caso pelo menos um dos dois seja verdadeiro.

11. Não ( ): Negação de um código. Retorna "true" caso o código seja falso.

12. Junte ( ) com ( ): Esse código permite juntar duas palavras, números, ou até mesmo um

misto entre eles.

104

13. Letra ( ) de ( ): Permite veriﬁcar qual é a letra ou dígito que ocupa uma determinada

posição na palavra.

14. Tamanho de ( ): Faz a contagem de dígitos ou letras que contém uma palavra ou número.

15. ( ) contém ( )?: Veriﬁca se uma palavra ou número contém uma certa letra ou dígito.

16. Resto de ( ) por ( ): Veriﬁca o resto da divisão de um número por outro.

17. Arredondamento de ( ): Faz o arredondamento das casas decimais de um número.

18. ( ) de ( ): Permite várias operações Matemáticas, tais como módulo, seno, raiz quadrada,

logarítmo, entre outras.

O ambiente VARIÁVEIS mostrado na Figura 67, é um dos menores, mas com uma das
maiores importâncias dentro do Scratch, pois com ele você consegue criar uma "variável" que
carregará entre os códigos, quase como se fosse uma "mensagem", porém podendo dar valores
e alterá-los.

Figura 67 – Variáveis.

Fonte: Retirado de <https://scratch.mit.edu/>.

1. Criar uma variável: Nesse campo você pode criar uma nova variável, podendo ela ser

para todos os atores criados, ou apenas para o ator que você está trabalhando.

2. Minha variável: Esse é o campo em que está sua variável. Pode ser utilizado para ser
encaixado em algumas partes dos códigos. Note que, para cada variável criada, um campo
deste será adicionado.

3. Deﬁna ( ) a ( ): Nesse campo, você consegue deﬁnir um valor para sua variável, podendo

mudá-lo em outros códigos.

4. Mude ( ) para ( ): Esse campo permite que você mude o valor da sua variável.

5. Mostre a variável ( ): Esse campo torna visível o valor da sua varíavel no palco.

6. Esconda a variável ( ): Ao contrário do campo anterior, esse campo permite que você

esconda sua variável do palco.

105

Por ﬁm, temos o útimo ambiente de códigos, denominado MEUS BLOCOS, mostrado
na Figura 68, que tem um único comando, a princípio, o de Criar blocos, que tem como principal
função, a criação de comandos e até mesmo, a criação de um processo de recursividade. Cada
bloco criado será colocado logo após esse.

Figura 68 – Meus blocos.

Fonte: Retirado de <https://scratch.mit.edu/>.

Para ﬁnalizar, temos o menu de extensões, que se localiza na Figura 69 e permite

adicionar mais opções de funções para o seu Scratch, como mostra a Figura 70.

Figura 69 – Extensões-1.

Fonte: Retirado de <https://scratch.mit.edu/>.

Figura 70 – Extensões-2.

Fonte: Retirado de <https://scratch.mit.edu/>.

