Universidade Federal do Piau´ı

Centro de Ciˆencias da Natureza

P´os-Graduac¸˜ao em Matem´atica

Mestrado Profissional em Matem´atica - PROFMAT

Introdu¸c˜ao aos M´etodos de Detec¸c˜ao de Erros em

Sequˆencias Num´ericas

S´ergio Adriano Marques da Silva

Teresina - 2017

S´ergio Adriano Marques da Silva

Disserta¸c˜ao de Mestrado:

Introdu¸c˜ao aos M´etodos de Detec¸c˜ao de Erros em Sequˆencias

Num´ericas

Disserta¸c˜ao submetida `a Coordena¸c˜ao do

Curso de P´os-Gradua¸c˜ao em Matem´atica,

da Universidade Federal do Piau´ı, como

requisito parcial para obten¸c˜ao do grau

de Mestre em Matem´atica, pelo programa

PROFMAT - Mestrado Proﬁssional em

Matem´atica em Rede Nacional.

Orientador:

Prof. Dr. Gilvan Lima de Oliveira

Teresina - 2017

 1                           FICHA CATALOGRÁFICA Serviço de Processamento Técnico da Universidade Federal do Piauí Biblioteca Setorial do CCN                              S586i     Silva, Sérgio Adriano Marques da.      Introdução aos métodos de detecção de erros em sequências numéricas / Sérgio Adriano Marques da Silva. – Teresina, 2017.          55f. il.  Dissertação (Mestrado Profissional/PROFMAT) – Universidade Federal do Piauí, Centro de Ciências da Natureza, Pós-Graduação em Matemática, 2017. Orientador: Prof. Dr.Gilvan Lima de Oliveira.   1. Matemática. 2. Sequência Numérica. 3. Dígito Verificador.  I. Título           CDD 510  i

`A minha fam´ılia e aos que torcem sinceramente por

mim.

Agradecimentos

Agrade¸co a Deus por sua inﬁnita miseric´ordia o por me permitir ter conquistas como este

mestrado, em seu imenso amor.

Agrade¸co a minha fam´ılia, minha grande riqueza, com quem sempre pude contar.

Agrade¸co aos professores do curso, que pacientemente e de maneira not´avel me transmi-

tiram tanto conhecimento matem´atico como um pouco de sua experiˆencia como proﬁs-

sionais. Trago aqui um profundo lamento pelo falecimento do professor Jo˜ao Ben´ıcio de

Melo Neto.

Agrade¸co meu orientador, que me indicou um tema, avaliou meu trabalho e me deu as

orienta¸c˜oes necess´arias para que eu pudesse apresentar meus resultados.

Agrade¸co meus colegas de curso, com os quais socializei bastante, conhecendo realidades e

opini˜oes diferentes da minha, e dos quais obtive muita ajuda no decorrer deste mestrado.

Agrade¸co ﬁnalmente a CAPES pelo apoio ﬁnanceiro, que ajudou a custear transporte,

alimenta¸c˜ao e compra de livros, a SBM (Sociedade Brasileira de Matem´atica) por pro-

mover o PROFMAT, e `a Universidade Federal do Piau´ı, por ser um polo de execu¸c˜ao do

programa.

ii

iii

“Se te vendermos a nossa terra, ama-a como n´os a am´avamos.

Proteje-a como n´os a proteg´ıamos. Nunca esque¸cas de como era

esta terra quando dela tomaste posse: E com toda a tua for¸ca

o teu poder e todo o teu cora¸c˜ao - conserva-a para teus ﬁlhos e

ama-a como Deus nos ama a todos. De uma coisa sabemos: o

nosso Deus ´e o mesmo Deus, esta terra ´e por ele amada. Nem

mesmo o homem branco pode evitar o nosso destino comum”.

Cacique Seattle, 1854

Resumo

Este trabalho apresenta os principais m´etodos de detec¸c˜ao de erros de transmiss˜ao de

sequˆencias num´ericas pelo c´alculo do d´ıgito veriﬁcador, incluindo na discuss˜ao os seguintes

t´opicos: tipos de erros, os m´etodos de detec¸c˜ao pela Aritm´etica Modular e pelo grupo

diedral D5, a eﬁciˆencia de cada um e algumas aplica¸c˜oes reais. Este trabalho tamb´em

apresenta uma sugest˜ao de abordagem desta tem´atica no Ensino M´edio.

Palavras-Chave: Erros de transmiss˜ao, D´ıgito Veriﬁcador, Eﬁciˆencia de M´etodos, Pro-

posta para o Ensino.

iv

Abstract

This paper presents the main methods of detecting numerical sequence transmission errors

by calculating the check digit, including in the discussion the following topics: types of

errors, methods of detection by Modular Arithmetic and the Dihedral Group D5, the

eﬃciency of each and some real applications. This paper also presents a suggestion to

approach this theme in High School.

Keywords: Transcription Errors, Check Digit, Eﬃciency of Methods, Proposal for Tea-

ching.

v

Lista de Figuras

3.1 C´odigo de barras do modelo EAN-13. . . . . . . . . . . . . . . . . . . . . . 14

4.1 Rota¸c˜oes Ri do pent´agono regular.

. . . . . . . . . . . . . . . . . . . . . . 29

4.2 Reﬂex˜oes Si do pent´agono regular.

. . . . . . . . . . . . . . . . . . . . . . 29

4.3 Composi¸c˜ao S6 ◦ R3 = S5.

. . . . . . . . . . . . . . . . . . . . . . . . . . . 30

Nota: Todas as ﬁguras foram editadas pelo autor com o aux´ılio do software Photoscape.

vi

Sum´ario

Resumo

Abstract

1 Introdu¸c˜ao

1.1 Tipos de Erros de Transmiss˜ao . . . . . . . . . . . . . . . . . . . . . . . . .

1.2 D´ıgito Veriﬁcador . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2 Fundamenta¸c˜ao Matem´atica

2.1 Alguns resultados aritm´eticos

. . . . . . . . . . . . . . . . . . . . . . . . .

2.2 Rela¸c˜oes de Equivalˆencia . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.3 Congruˆencia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.4 Produto Interno . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.5 Permuta¸c˜oes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.6 Grupos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3 D´ıgito Veriﬁcador e Aritm´etica Modular

iv

v

1

2

2

4

4

5

6

8

8

9

10

3.1 D´ıgito Veriﬁcador por Vetor de Pesos . . . . . . . . . . . . . . . . . . . . . 10

3.1.1 C´odigos de Barra no sistema EAN-13 . . . . . . . . . . . . . . . . . 14

3.1.2 CPF, CNPJ no Brasil

. . . . . . . . . . . . . . . . . . . . . . . . . 17

3.1.3

ISBN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18

3.1.4 Poder de Detec¸c˜ao de Erros com Vetor de Pesos . . . . . . . . . . . 19

3.2 D´ıgito Veriﬁcador por Permuta¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . 21

3.2.1 M´etodo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21

3.2.2

Sistema IBM e Cart˜oes de Cr´edito

. . . . . . . . . . . . . . . . . . 22

vii

4 D´ıgito Veriﬁcador e o Grupo D5

viii

28

4.1 Simetrias do Pent´agono Regular . . . . . . . . . . . . . . . . . . . . . . . . 28

4.2 O Grupo D5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30

4.2.1 Composi¸c˜ao de Permuta¸c˜oes . . . . . . . . . . . . . . . . . . . . . . 30

4.3 D´ıgito Veriﬁcador pelo Grupo D5

. . . . . . . . . . . . . . . . . . . . . . . 31

4.3.1 Nota¸c˜ao com algarismos

. . . . . . . . . . . . . . . . . . . . . . . . 31

4.3.2 Deﬁni¸c˜ao e Exemplo . . . . . . . . . . . . . . . . . . . . . . . . . . 32

4.3.3 Poder de detec¸c˜ao do m´etodo de Verhoeﬀ . . . . . . . . . . . . . . . 34

4.3.4 Aplica¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36

5 Aplica¸c˜ao no Ensino

37

5.1 Motiva¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37

5.2 Abordagens . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38

5.2.1 M´etodos pela Aritm´etica Modular . . . . . . . . . . . . . . . . . . . 38

5.2.2 M´etodo de Verhoeﬀ . . . . . . . . . . . . . . . . . . . . . . . . . . . 40

5.3 Sugest˜ao de Abordagem . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40

Conclus˜ao

Referˆencias Bibliogr´aﬁcas

42

43

Cap´ıtulo 1

Introdu¸c˜ao

A sociedade moderna, tida como a sociedade da informa¸c˜ao, ´e altamente dependente de

n´umeros e seus sistemas; n˜ao h´a nenhum setor econˆomico ou social que n˜ao fa¸ca uso

de um sistema de numera¸c˜ao pr´oprio. Em particular, ´e bastante grande a quantidade

de sequˆencias num´ericas das quais depende qualquer cidad˜ao atualmente: n´umeros de

documentos, c´odigos de barra, numera¸c˜ao de ve´ıculos e cargas, n´umeros de celular, etc.

A codiﬁca¸c˜ao ou representa¸c˜ao num´erica de informa¸c˜oes e elementos, apesar da ex-

trema praticidade, est´a exposta a alguns riscos em seu uso, entre os quais as falhas hu-

manas (erros de digita¸c˜ao ou de programa¸c˜ao) e as falhas nas m´aquinas (interferˆencias,

ataques cibern´eticos, etc.) durante a transmiss˜ao da informa¸c˜ao. Estas falhas podem ge-

rar grandes problemas. Um exemplo bastante comum s˜ao os c´odigos de barras, que ser˜ao

detalhados no cap´ıtulo 3. Exemplo: em uma situa¸c˜ao comum do cotidiano, quando um

atendente de um caixa digita o c´odigo de um produto a m´aquina de registro (computador,

por exemplo) acusa um erro, provavelmente o caixa digitou pelo menos um dos d´ıgitos do

c´odigo errado. O erro cometido, se foi identiﬁcado, certamente faz parte do conjunto de

erros detect´aveis pelo m´etodo do c´odigo de barras.

Para enfrentar estes riscos, foram desenvolvidos mecanismos matem´aticos para detec-

tar estes erros (opera¸c˜ao com baixo custo computacional) e corrigi-los (com alto custo com-

putacional) nas sequencias num´ericas. Este trabalho dar´a uma introdu¸c˜ao sobre os pri-

meiros mecanismos, trazendo os principais modelos, suas caracter´ısticas (como eﬁciˆencia,

limita¸c˜oes e aplica¸c˜oes), exemplos, alguns conceitos de matem´atica que os fundamentam,

e duas propostas de abordagem para o tema no Ensino M´edio.

1

2

1.1 Tipos de Erros de Transmiss˜ao

Cada m´etodo de detec¸c˜ao de erros tem um poder de detec¸c˜ao. Alguns mais eﬁcientes

(que detectam uma grande quantidade de tipos de erros), outros menos (capacidade de

detec¸c˜ao limitada). Os erros, neste contexto, podem ser classiﬁcados em categorias. Faz-

se necess´aria, assim, uma breve discuss˜ao sobre quais os erros mais comuns a serem

cometidos na transmiss˜ao de uma sequˆencia num´erica.

Verhoeﬀ em [11] elaborou uma tabela (1.1), baseada em trabalhos emp´ıricos, que lista

alguns tipos de erros de transmiss˜ao e sua frequˆencia relativa.

Tipo de Erro

Erros singulares

Conﬁgura¸c˜ao

Frequˆencia percentual

. . . a . . . (cid:55)→ . . . b . . .

Transposi¸c˜ao de algarismos adjacentes

. . . ab . . . (cid:55)→ . . . ba . . .

Transposi¸c˜oes intercaladas

. . . abc . . . (cid:55)→ . . . cba . . .

Erros gˆemeos

Erros fon´eticos

. . . aa . . . (cid:55)→ . . . bb . . .

-

Erros gˆemeos intercalados

. . . aba . . . (cid:55)→ . . . cbc . . .

Outros tipos

-

Tabela 1.1: Tipos de Erros.

79,1

10,2

0,8

0,5

0,5

0,3

8,6

Nos erros singulares, gˆemeos e gˆemeos intercalados, valores s˜ao arbitrariamente subs-

titu´ıdos por outros; nos erros de algarismos adjacentes e intercalares, somente a ordem

´e alterada; os erros fon´eticos decorrem de particularidades de um idioma. Um exemplo

seria o fato de, em inglˆes, confundir-se foneticamente eighteen (18) com eighty (80). Em

portuguˆes, apesar de bem raros, podem ocorrer casos como, ao querer transmitir ‘107’,

o emissor leia 10 e 7, e o receptor entenda 17. O trabalho de Verhoeﬀ tamb´em mostrou

que diﬁcilmente ocorrem dois erros simultˆaneos em uma opera¸c˜ao.

1.2 D´ıgito Veriﬁcador

As t´ecnicas mais difundidas de detec¸c˜ao de um erro na transmiss˜ao de uma sequˆencia

de n´umeros se baseiam no d´ıgito veriﬁcador, um d´ıgito que ´e acrescentado (na ´ultima

posi¸c˜ao, em todos os principais sistemas) a uma sequˆencia inicial de d´ıgitos e ´e determi-

3

nado a partir destes primeiros. A maneira pela qual este d´ıgito veriﬁcador ´e calculado

determina sua eﬁciˆencia como ferramenta de detec¸c˜ao de erros (quanto mais tipos de erros

detectados, maior a eﬁciˆencia).

Quando ´e cometido um erro na transmiss˜ao de uma sequˆencia num´erica, gera-se uma

sequˆencia-erro. Se, ao calcularmos o d´ıgito veriﬁcador desta sequˆencia-erro por um

m´etodo, o d´ıgito resultante coincide com o d´ıgito veriﬁcador da sequˆencia correta, ent˜ao

considera-se que o m´etodo n˜ao detecta aquele erro. Caso contr´ario, se o c´alculo do d´ıgito

veriﬁcador da sequˆencia erro apontar um valor diferente do d´ıgito da sequˆencia correta,

ent˜ao o m´etodo usado detecta o erro cometido.

Este trabalho apresentar´a trˆes m´etodos de obten¸c˜ao do d´ıgito veriﬁcador, dois baseados

na Aritm´etica Modular, e um baseado em simetrias de pol´ıgonos (usando o grupo diedral

D5):

1. A aritm´etica modular, baseada na teoria das congruˆencias, fornece as duas mais

populares t´ecnicas de obten¸c˜ao de d´ıgito veriﬁcador. Em ambas, o d´ıgito veriﬁcador

de uma sequˆencia ´e a solu¸c˜ao (´unica) de uma equa¸c˜ao de congruˆencia. A cons-

tru¸c˜ao desta equa¸c˜ao se faz por meio de um vetor de pesos (sequˆencia ﬁxa adotado

para todos as sequˆencias do sistema, pr´e-deﬁnida) ou uma permuta¸c˜ao do conjunto

de d´ıgitos us´aveis na sequˆencia. Estes m´etodos s˜ao o tema do Cap´ıtulo 3.

2. O grupo diedral D5, por sua vez, permite obter o d´ıgito veriﬁcador como solu¸c˜ao de

uma equa¸c˜ao constru´ıda sob uma permuta¸c˜ao conveniente dos d´ıgitos usados nas

sequˆencias de um sistema, n˜ao usando os conceitos de congruˆencia. Seu modelo ´e

mais eﬁciente que os primeiros, mas ´e computacionalmente mais exaustivo, o que

em parte justiﬁca sua popularidade limitada. O grupo D5 e o m´etodo de Verhoeﬀ

s˜ao abordados no Cap´ıtulo 4.

Consideremos, por conven¸c˜ao pr´opria, o conjunto dos algarismos indo-ar´abicos {0, 1, 2, ..., 9}

como Ω10.

Cap´ıtulo 2

Fundamenta¸c˜ao Matem´atica

Neste cap´ıtulo apresentaremos alguns resultados importantes sobre Teoria dos N´umeros

e Geometria Anal´ıtica necess´arios para os cap´ıtulos subsequentes.

2.1 Alguns resultados aritm´eticos

Teorema 1. (Teorema da Divis˜ao) Sejam a e b inteiros positivos. Existem n´umeros

inteiros q e r tais que

a = bq + r

e

0 ≤ r < b.

Al´em disso, q e r s˜ao ´unicos nas condi¸c˜oes dadas acima.

Demonstra¸c˜ao. Dispon´ıvel na p´agina 55 de Hefez [5].

Nos termos acima, os valores a, b, q e r s˜ao chamados de dividendo, divisor, quociente

e resto, respectivamente.

Exemplo 1. Tomando os n´umeros a = 51 e b = 8, temos que os ´unicos valores naturais

q > 0, 0 < r < 8 que satisfazem `a equa¸c˜ao 51 = 8q + r s˜ao q = 6 e r = 3.

Lema 1. (Lema de Gauss) Sejam a, b e c n´umeros inteiros. Se a|bc e mdc(a, b) = 1,

ent˜ao a|c.

Demonstra¸c˜ao: Dispon´ıvel na p´agina 96 de Hefez [5].

Lema 2. Se 0 < a < b < c < d, ent˜ao c − b < d − a.

Demonstra¸c˜ao: Segue diretamente do fato que d − a = d + (−c + c) + (−b + b) − a =

(d − c) + (c − b) + (b − a) > c − b.

4

5

Lema 3. Em cada sequˆencia de k n´umeros naturais consecutivos (crescente ou n˜ao),

existe um, e somente um deles que ´e m´ultiplo de k.

Demonstra¸c˜ao:

Considere uma sequˆencia crescente (o caso de uma sequˆencia decrescente ´e an´alogo).

Seja M o maior n´umero da sequˆencia. Consequentemente, (M − k) + 1 ´e o menor deles.

Note que M ≥ k, pois o menor elemento da sequˆencia ´e maior ou igual que 1, logo:

(M − k) + 1 ≥ 1 =⇒ M − k ≥ 1 − 1 =⇒ M − k ≥ 0 =⇒ M ≥ k.

EXISTˆENCIA: Se for M = k, ent˜ao ele ´e o m´ultiplo de k procurado. Se for M > k,

ent˜ao, pelo Teorema da divis˜ao, existe q > 0 tal que M = k · q + r, com 0 ≤ r < k. O

valor procurado ´e M − r (que faz parte da sequˆencia de k d´ıgitos proposta), pois temos

M − r = k · q.

UNICIDADE: Suponha que existam dois valores a, b na sequˆencia que sejam m´ultiplos

de k. Admita b > a, b = kb0 e a = ka0. Como a diferen¸ca entre dois elementos da

sequˆencia nunca ´e maior que a diferen¸ca entre o maior e menor elemento dela (conforme

Lema 2), temos 0 < b − a = k(b0 − a0) < M − (M − (k − 1)) = k − 1 =⇒ k(b0 − a0) <

k − 1 < k =⇒ k(b0 − a0) < k =⇒ b0 − a0 < 1, uma contradi¸c˜ao com fato de a0 e b0 serem

ambos naturais.

Exemplo 2. A sequˆencia 12, 13, 14, 15, 16, 17, 18 de 7 n´umeros naturais consecutivos

tem apenas um ´unico m´ultiplo de 7, a saber o 14.

2.2 Rela¸c˜oes de Equivalˆencia

Considere um conjunto X n˜ao vazio e uma rela¸c˜ao ∼ entre seus elementos. Esta rela¸c˜ao

´e chamada rela¸c˜ao de equivalˆencia se satisfaz a trˆes propriedades, para x, y, z ∈ X:

(a) propriedade reﬂexiva: x ∼ x.

(b) propriedade sim´etrica: se x ∼ y, ent˜ao y ∼ x.

(c) propriedade transitiva: se x ∼ y, e y ∼ z, ent˜ao x ∼ z.

Exemplo 3. A rela¸c˜ao de igualdade em qualquer conjunto n˜ao vazio ´e uma rela¸c˜ao de

equivalˆencia.

6

2.3 Congruˆencia

Deﬁni¸c˜ao. Sejam a, b n´umeros inteiros e m > 1 um n´umero natural. Dizemos que a ´e

congruente a b m´odulo m, representando por a ≡ b(mod m), se os restos das divis˜oes

tanto de a como de b por m, pela divis˜ao euclidiana, forem iguais.

Exemplo 4. Como os restos das divis˜oes de 55 e 87 por 8 s˜ao ambos iguais a 7, ent˜ao

87 ≡ 55 (mod 8).

Quando dois valores a, b n˜ao forem congruentes entre si, dizemos que a ´e incongruente

a b m´odulo m e representamos por a (cid:54)≡ b(mod m). Alguns resultados importantes obtidos

diretamente da deﬁni¸c˜ao de congruˆencia s˜ao apresentados a seguir.

Proposi¸c˜ao 1. Suponha que a, b, m ∈ Z. Tem que a ≡ b(mod m) se e somente se m|b−a.

Em particular, se a ≡ 0(mod m), ent˜ao m|a.

Demonstra¸c˜ao: (=⇒) Se a ≡ b(mod m), ent˜ao existem qa, qb e r inteiros (0 < r < m) tais

que a = mqa + r e b = mqb + r. Ent˜ao temos b − a = mqb + r − (mqa + r) = m(qb − qa),

o que equivale a aﬁrmar que m|b − a.

(⇐=) Seja a = mq(cid:48) + r(cid:48) e b = mq(cid:48)(cid:48) + r(cid:48)(cid:48), com r(cid:48) < m e r(cid:48)(cid:48) < m, conforme o Teorema

da divis˜ao. Se m|b − a, ent˜ao m|(mq(cid:48) + r(cid:48)) − (mq(cid:48)(cid:48) + r(cid:48)(cid:48)) =⇒ m|m(q(cid:48) − q(cid:48)(cid:48)) + (r(cid:48) − r(cid:48)(cid:48)) =⇒

m|(r(cid:48) − r(cid:48)(cid:48)). Mas m|(r(cid:48) − r(cid:48)(cid:48)) =⇒ r(cid:48) = r(cid:48)(cid:48). Logo a ≡ b(mod m).

Proposi¸c˜ao 2. A rela¸c˜ao de congruˆencia ´e uma rela¸c˜ao de equivalˆencia.

Demonstra¸c˜ao: Devemos mostrar que a rela¸c˜ao de congruˆencia respeita as trˆes proprie-

dades da se¸c˜ao 1.2. Sejam ent˜ao a, b, c, d ∈ Z e m > 1.

(a) a ≡ a(mod m).

Uma vez que m|0, ent˜ao m|a − a, resultando consequentemente em a ≡ a(mod m).

(b) Se a ≡ b(mod m), ent˜ao b ≡ a(mod m).

Se m|n, ent˜ao m| − n, para qualquer n ∈ Z. Consequentemente, se m|a − b, ent˜ao

m|b − a.

(c) Se a ≡ b(mod m) e b ≡ c(mod m), ent˜ao a ≡ c(mod m).

Se m|(a − b) e m|(b − c), ent˜ao m|[(a − b) + (b − c)], logo m|(a − c).

7

Proposi¸c˜ao 3. Sejam a, b, c, d ∈ Z, com m > 1. Ent˜ao s˜ao v´alidas as seguintes proprie-

dades:

1. Se a ≡ b(mod m) e c ≡ d(mod m), ent˜ao a + c ≡ b + d(mod m).

Demonstra¸c˜ao. Como m|[(b − a) + (d − c)], ent˜ao m|[(b + d) − (a + c)], da´ı a + c ≡

b + d(mod m).

2. Se a ≡ b(mod m) e c ≡ d(mod m), ent˜ao a − c ≡ b − d(mod m).

Demonstra¸c˜ao. An´aloga `a demonstra¸c˜ao do item anterior.

3. Se a ≡ b(mod m) e c ≡ d(mod m), ent˜ao ac ≡ bd(mod m).

Demonstra¸c˜ao. Pela identidade bd − ac = d(b − a) + a(d − c), e pelo fato de m|b − a

e m|d − c, temos que m|bd − ac.

Outros 4 resultados importantes, no contexto de congruˆencia, s˜ao apresentados nas pro-

posi¸c˜oes a seguir.

Proposi¸c˜ao 4. A equa¸c˜ao de congruˆencia R + x ≡ c(mod m) tem solu¸c˜ao ´unica em

X = {0, 1, 2, .., m − 1}, para R ≥ 0 ﬁxo, c ≥ 0 e m > 1.

Demonstra¸c˜ao: Observe que R + x − c, com x ∈ X, representa uma cole¸c˜ao de m valores

consecutivos {R − c, R − c + 1, ..., R − c + m − 2, R − c + m − 1}. Pelo Lema 3 apenas um

destes valores ´e divis´ıvel por m.

Os elementos do conjunto de n´umeros R + x − c descrito acima tˆem por restos de sua

divis˜ao por m os valores 0, 1, 2, 3, ..., m − 1 (n˜ao necessariamente nesta ordem, mas pre-

servando sua ordem circular); todo conjunto com esta caracter´ıstica ´e chamado sistema

completo de res´ıduos m´odulo m. Quaisquer dois elementos deste conjunto s˜ao incongru-

entes m´odulo m entre si.

Proposi¸c˜ao 5. Se a+b ≡ 0(mod m) e a ≡ 0(mod m), ent˜ao b ≡ 0(mod m), para m, b > 0.

Demonstra¸c˜ao: Se b = 0 n˜ao h´a o que fazer. Considere ent˜ao b (cid:54)= 0. Se a + b ≡ 0(mod m),
∃ d1 ∈ Z tal que a + b = m · d1. Analogamente, se a ≡ 0(mod m), ∃ d2 ∈ Z tal que

a = m · d2. Da´ı:

b = (a + b) − a = m · d1 − m · d2 = m(d1 − d2).

o que garante que b ≡ 0(mod m), pois d1 − d2 (cid:54)= 0.

Proposi¸c˜ao 6. Se a + b (cid:54)≡ 0(mod m) e a ≡ 0(mod m), ent˜ao b (cid:54)≡ 0(mod m).

Demonstra¸c˜ao: Se tiv´essemos a ≡ 0(mod m) e b ≡ 0(mod m), pelo item 1 na Proposi¸c˜ao

3, ter´ıamos a + b ≡ 0(mod m), uma contradi¸c˜ao.

Proposi¸c˜ao 7. Sejam m e p n´umeros inteiros, e s ∈ {1, 2, ..., m − 1}. Ent˜ao ps (cid:54)≡

8

0(mod m) se, e somente se, mdc(p, m) = 1.

Demonstra¸c˜ao:

(=⇒) Suponha por absurdo que mdc(p, m) = q > 1. Sejam km =

m
q

e kp =

p
q

. Ent˜ao

p · km =

p · m
q

=

p
q

· m = kp · m =⇒ m|p · km =⇒ p · km ≡ 0(mod m), uma contradi¸c˜ao.

(⇐=) Se mdc(m, p) = 1, ent˜ao m (cid:45) p. Suponha que ps ≡ 0(mod m), ent˜ao m|ps, mas

como m (cid:45) p, temos que m | s, pelo Lema de Gauss. Mas isto ´e uma contradi¸c˜ao, pois

s < m.

2.4 Produto Interno

Considere dois vetores (cid:126)v = (v1, v2, ..., vn) e (cid:126)w = (w1, w2, ..., wn). Deﬁne-se como produto

interno de (cid:126)v e (cid:126)w, denotado por (cid:126)v · (cid:126)w, o n´umero real obtido pelo somat´orio:

n
(cid:88)

i=1

vi · wi = v1 · w1 + v2 · w2 + ... + vn · wn.

Este conceito pode ser aplicado a qualquer par de sequˆencias que possam ser aritme-

ticamente interpretadas como vetores. Uma importante propriedade de produto interno

´e a comutatividade: (cid:126)v · (cid:126)w = (cid:126)w · (cid:126)v.

Exemplo 5. O produto interno dos vetores (cid:126)a = (2, 2, 3, 4) e (cid:126)b = (0, 3, 2, 9) ´e (cid:126)a · (cid:126)b =

2 · 0 + 2 · 3 + 3 · 2 + 4 · 9 = 0 + 6 + 6 + 36 = 48.

2.5 Permuta¸c˜oes

Deﬁni¸c˜ao 1. Seja X um conjunto ﬁnito de n´umeros naturais. Uma permuta¸c˜ao φ do

conjunto X ´e uma bije¸c˜ao da forma φ : X −→ X.

Exemplo 6. A express˜ao abaixo representa uma permuta¸c˜ao σ da forma σ : X → X,

para X = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}.





σ =

0 1 2 3 4 5 6 7 8 9

0 5 8 2 6 9 3 7 4 1





9

Nesta permuta¸c˜ao temos σ(0) = 0, σ(1) = 5, σ(2) = 8, ..., σ(9) = 1.

Permuta¸c˜ao ´e uma opera¸c˜ao que poder ser composta. Referindo-se ao exemplo an-

terior, podemos ter, por exemplo, σ(σ(1)) = σ(5) = 9. Podemos escrever σ(σ(1)) como

σ2(1). Outro exemplo: σ(σ(σ(σ(3)))) = 6 pode ser escrito como σ4(3) = 6. Esta ser´a

a nota¸c˜ao usada no decorrer deste trabalho. Para um estudo mais detalhado, temos

Gon¸calves [4].

2.6 Grupos

Deﬁni¸c˜ao. Um grupo ´e um conjunto G (cid:54)= ∅ no qual est´a deﬁnida uma opera¸c˜ao ∗, da

forma

∗ : G × G → G.

(a, b) → a ∗ b.

que satisfaz `as seguintes propriedades:

(a) Associatividade: dados a, b, c ∈ G, temos que:

a ∗ (b ∗ c) = (a ∗ b) ∗ c.

(b) Elemento neutro: existe um elemento e ∈ G tal que para todo a ∈ G temos:

a ∗ e = e ∗ a = a.

(c) Elemento inverso: dado um elemento a ∈ G qualquer, existe um elemento a(cid:48) ∈ G

(o inverso de a) tal que:

a ∗ a(cid:48) = a(cid:48) ∗ a = e.

Um grupo G no qual a opera¸c˜ao ∗ ´e comutativa (isto ´e, para quaisquer a, b ∈ G, a ∗ b =

b ∗ a) ´e chamado abeliano. O n´umero de elementos de um grupo ´e chamado de ordem

de um grupo. Como referˆencia mais detalhada, temos Coutinho [1].

Exemplo 7. Os inteiros, racionais, reais e complexos s˜ao grupos para a soma. J´a para a

multiplica¸c˜ao s˜ao grupos os racionais n˜ao nulos, os reais m˜ao nulos e os complexos n˜ao

nulos.

Cap´ıtulo 3

D´ıgito Veriﬁcador e Aritm´etica

Modular

Neste cap´ıtulo ser´a discutido inicialmente o m´etodo de obten¸c˜ao de d´ıgitos veriﬁcadores

por vetor de pesos, e na sequˆencia o m´etodo que usa permuta¸c˜ao.

3.1 D´ıgito Veriﬁcador por Vetor de Pesos

A maioria dos sistemas ´e composto por sequˆencias num´ericas com o mesmo n´umero de

d´ıgitos, sendo que na maioria estes d´ıgitos s˜ao os algarismos indo-ar´abicos (elementos de

Ω10). Considere ent˜ao uma sequˆencia d1d2d3...dn−1 de n − 1 d´ıgitos, pertencente a um

sistema de c´odigos num´ericos. A ela podemos associar um vetor v, da forma

v = (d1, d2, d3, ..., dn−1),

e ao sistema um outro vetor, da forma

λ = (λ1, λ2, λ3, ..., λn−1).

Ao primeiro vetor, daremos a denomina¸c˜ao de vetor de identiﬁca¸c˜ao ou vetor ca-

racter´ıstico da sequˆencia. Ao segundo vetor, daremos o nome de vetor de pesos do

sistema.

Deﬁni¸c˜ao. Considere um vetor de pesos λ = (λ1, λ2, λ3, ..., λn−1) de um sistema e um

vetor v = (d1, d2, d3, ..., dn−1) caracter´ıstico de uma sequˆencia qualquer, ambos com n − 1

coordenadas (todas naturais), e os n´umeros naturais c, λn e m, com m > di para todo i.

10

11

Deﬁne-se por d´ıgito veriﬁcador , n´umero de veriﬁca¸c˜ao ou n´umero de controle qualquer

elemento x ∈ N, x < m, que seja solu¸c˜ao da equa¸c˜ao de congruˆencia

(λnx +

n−1
(cid:88)

i=1

λidi) ≡ c(mod m).

(3.1)

A express˜ao (cid:80)n−1

i=1 λidi tem por resultado um n´umero natural, e pode ser reescrita

usando a nota¸c˜ao de produto interno (ver se¸c˜ao 2.5):

n−1
(cid:88)

i=1

λidi = λ · v.

Desta forma, podemos reescrever o somat´orio do primeiro membro da express˜ao (3.1)

e represent´a-lo da forma

λnx + λ · v ≡ c(mod m).

Unicidade do d´ıgito veriﬁcador

A maioria das aplica¸c˜oes do conceito da d´ıgito veriﬁcador (inclusive as que ser˜ao

abordadas neste trabalho) toma como coordenadas de v e de λ os algarismos indo-ar´abicos

(Ω10), c = 0 e λn = 1.

Nestas condi¸c˜oes (λn = 1 e c = 0), pela Proposi¸c˜ao 4.

(p´agina 07), a solu¸c˜ao da

equa¸c˜ao (3.1), sempre existe e ´e ´unica, pois a express˜ao (3.1) pode ser reescrita da forma

x + λ · v ≡ 0(mod m),

tomando R = λ · v.

C´alculo do d´ıgito veriﬁcador.

Na pr´atica, os sistemas que usam d´ıgito veriﬁcador por vetor de pesos incorporam o

valor λn como a ´ultima coordenada de seu vetor de pesos, e o d´ıgito veriﬁcador x como

a ´ultima coordenada do vetor caracter´ıstico, pondo x = dn. Assim, o vetor de pesos de

um sistema que usa sequˆencias de n d´ıgitos tem um vetor de pesos com n coordenadas.

Nestes termos, temos que x = dn ´e um d´ıgito veriﬁcador se

λ · v =

n
(cid:88)

i=1

λidi ≡ c(mod m).

Exemplo 8. Calcule o d´ıgito veriﬁcador k da sequencia 54638376k, com m´odulo 11, vetor

de pesos λ = (3, 2, 1, 3, 2, 1, 3, 2, 1) e c = 5.

Solu¸c˜ao: Tomando o somat´orio (cid:80)n

i=1 λidi como produto interno de λ com o vetor

caracter´ıstico da sequˆencia v = (5, 4, 6, 3, 8, 3, 7, 6, k), (com k = dn) temos:

12

λ · v = (3, 2, 1, 3, 2, 1, 3, 2, 1) · (5, 4, 6, 3, 8, 3, 7, 6, k)

= 3 · 5 + 2 · 4 + 1 · 6 + 3 · 3 + 2 · 8 + 1 · 3 + 3 · 7 + 2 · 6 + 1 · k

= 15 + 8 + 6 + 9 + 16 + 3 + 21 + 12 + k

= 90 + k.

A ´unica solu¸c˜ao positiva da equa¸c˜ao 90+k ≡ 5(mod 11) em Ω10 ´e 3. Logo, a sequˆencia

completa ´e q = 546383763.

Como um d´ıgito veriﬁcador detecta um erro?

Quando se comete um erro de transmiss˜ao de uma sequˆencia num´erica de um sistema,

geramos uma sequˆencia-erro. Chamemos de v o vetor caracter´ıstico da sequˆencia original

e vE o vetor caracter´ıstico da sequˆencia-erro.

Para a sequˆencia original (correta) temos naturalmente que λ · v ≡ c(mod m). A

sequˆencia-erro, por sua vez, tem por produto interno λ · vE, para o qual temos duas

possibilidades:

1. Se tivermos λ · vE ≡ c(mod m), ent˜ao o d´ıgito veriﬁcador obtido como solu¸c˜ao desta

equa¸c˜ao ´e o mesmo obtido a partir da sequˆencia original, e neste caso aﬁrmamos

que o erro cometido n˜ao foi detectado.

2. Se tivermos λ · vE (cid:54)≡ c(mod m), ent˜ao o d´ıgito veriﬁcador obtido como solu¸c˜ao desta

equa¸c˜ao n˜ao ´e o mesmo obtido a partir da sequˆencia original, e neste caso aﬁrmamos

que o erro cometido foi detectado.

Exemplo 9. Considere um sistema de sequˆencias num´ericas que possuam 7 d´ıgitos, sendo

6 pr´oprios do sistema e o ´ultimo sendo um d´ıgito veriﬁcador. Suponha que ele use vetor

de pesos λ = (1, 4, 4, 5, 5, 7, 1), m = 9 e c = 3.

1. A sequˆencia 2409728 pode ser usada no sistema, pois tomando v = (2, 4, 0, 9, 7,

2, 8) e o λ fornecido, temos que, de fato, λ· v = 120, e 120 ≡ 3(mod 9).

13

2. Suponha que tenha ocorrido o erro singular 7 −→ 0, na 5a posi¸c˜ao da sequˆencia do

item anterior. Temos assim o vetor-erro vE = (2, 4, 0, 9, 0, 2, 8), para o qual

λ · vE = 85. Como 85 (cid:54)≡ 3(mod 9), este erro ´e detectado pelo m´etodo do sistema

em quest˜ao.

3. Suponha que tenha ocorrido a transposi¸c˜ao adjacente dos dois ´ultimos d´ıgitos da

sequˆencia em quest˜ao, gerando assim a sequˆencia-erro 2409782 e consequentemente

o vetor erro vE = (2, 4, 0, 9, 7, 8, 2), para o qual temos que λ · vE = 156. Como

156 ≡ 3(mod 9), este erro n˜ao ´e detectado.

Proposi¸c˜ao 8. Considere uma sequˆencia (d1, d2, d3, ..., dn−1, dn) qualquer de n coorde-

nadas (todos elementos de Ω10), da qual dn seja o d´ıgito veriﬁcador, e um m´etodo de

detec¸c˜ao de erros com vetor de pesos λ = (1, 1, 1, ..., 1, 1), com n coordenadas, e m =

10. Este m´etodo detecta corretamente todos os erros singulares (a), mas nenhum erro de

transposi¸c˜ao (b).

Demonstra¸c˜ao: (a) Suponha que tenha ocorrido o erro singular di −→ dE (troca do

d´ıgito di da i-´esima coordenada por um d´ıgito diferente dE) na sequˆencia, gerando uma

sequˆencia-erro com vetor erro vE, e que o m´etodo n˜ao o tenha detectado. Temos ent˜ao

que:

e

λ · v = d1 + d2 + ... + di + ... + dn ≡ 0(mod 10)

(3.2)

λ · vE = d1 + d2 + ... + dE + ... + dn ≡ 0(mod 10).

(3.3)

Somando (3.2) com a express˜ao oposta de (3.3), temos, pelo item 2 da proposi¸c˜ao 3

(p´agina 07), que:

λ · v − λ · vE = di − dE ≡ 0(mod 10).

Como 0 < di, dE < 10, ent˜ao di − dE ≡ 0(mod 10) ⇐⇒ di = dE, uma contradi¸c˜ao.

(cid:80)n

(b) Como todas as coordenadas do vetor de pesos s˜ao iguais a 1, temos (cid:80)n

i=1 λidi =
i=1 di. Qualquer erro de transposi¸c˜ao (mais que isso, qualquer reordena¸c˜ao que se fa¸ca
das coordenadas do vetor caracter´ıstico) gera uma vetor vE para o qual λ · vE = λ · v, logo

λ · vE ≡ 0(mod 10) (pela comutatividade da adi¸c˜ao), n˜ao alterando a validade da equa¸c˜ao

de congruˆencia e, consequentemente, n˜ao possibilitando a detec¸c˜ao do erro.

Nas se¸c˜oes seguintes, ser˜ao apresentados alguns sistemas que usam sequˆencias num´ericas

e tˆem o d´ıgito veriﬁcador como ferramenta de detec¸c˜ao de erros.

14

3.1.1 C´odigos de Barra no sistema EAN-13

Os c´odigos de barras s˜ao uma categoria de c´odigos de cataloga¸c˜ao de mercadorias e servi¸cos

(ex.: boletos banc´arios, cart˜oes de acesso, etc.), todos baseados inicialmente no modelo

UPC (Universal Product Code), proposto em 1973 por George J. Laurer e colaboradores

(funcion´arios da IBM, International Business Machines, grande empresa de inform´atica),

e inicialmente usado nos EUA e Canad´a. Nas d´ecadas seguintes surgiram algumas vari-

antes, como o EAN-13 (European Article Numbering System) e o JAN (Japanese Article

Numbering System). O UPC e o EAN-13 s˜ao os mais usados comercialmente.

O sistema EAN-13 utiliza 13 d´ıgitos, sendo 2 ou 3 para identiﬁcar o pa´ıs de origem

de um produto, os 4 ou 5 seguintes para identiﬁcar o fabricante do produto, os 5 d´ıgitos

seguintes identiﬁcam o produto em particular, e o ´ultimo n´umero ´e o d´ıgito veriﬁcador.

Produtos brasileiros, por exemplo, sempre se iniciam pela sequˆencia 789. A ﬁgura 3.1

ilustra o c´odigo de barras de um produto brasileiro.

Figura 3.1: C´odigo de barras do modelo EAN-13.

Para c´alculo do d´ıgito veriﬁcador, o sistema EAN-13 utiliza o vetor de pesos λ = (1,

3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1), c = 0 e m =10.

15

Exemplo 10. Veriﬁque que o d´ıgito veriﬁcador do c´odigo de barras acima ´e realmente 7.

Solu¸c˜ao: Tomando v = (7, 8, 9, 1, 0, 0, 0, 1, 4, 0, 3, 0, x) e λ = (1, 3, 1, 3, 1, 3, 1, 3,

1, 3, 1, 3, 1), mostremos que x = 7. Com efeito, temos que:

λ · v = (1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1) · (7, 8, 9, 1, 0, 0, 0, 1, 4, 0, 3, 0, x) =

1 · 7 + 3 · 8 + 1 · 9 + 3 · 1 + 1 · 0 + 3 · 0 + 1 · 0 + 3 · 1 + 1 · 4 + 3 · 0 + 1 · 3 + 3 · 0 + 1 · x =

7 + 24 + 9 + 3 + 0 + 0 + 0 + 3 + 4 + 0 + 3 + 0 + x =

= 53 + x ≡ 0(mod 10).

A ´unica solu¸c˜ao em Ω10 da equa¸c˜ao 53 + x ≡ 0(mod 10) ´e x = 7, conﬁrmando a

validade do d´ıgito.

Dois resultados bastante interessantes sobre a detec¸c˜ao de erros do sistema EAN-13

s˜ao apresentados a seguir. Para eles, considere λ = (1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1) e

um vetor caracter´ıstico v = (d1, d2, ..., d13) de uma sequˆencia em EAN-13, considerando

d13 como sendo o d´ıgito veriﬁcador.

Proposi¸c˜ao 9. Toda transposi¸c˜ao adjacente ´e detectada pela veriﬁca¸c˜ao do EAN-13 se,

e somente se, |di − di+1| (cid:54)= 5.

Demonstra¸c˜ao: Suponhamos que a transposi¸c˜ao tenha ocorrido com o vetor original com

di na posi¸c˜ao par e di+1 na posi¸c˜ao ´ımpar (o caso contr´ario ´e an´alogo), gerando um

vetor-erro da forma vE. Temos ent˜ao:

λ · v = 1 · d1 + 3 · d2 + . . . + 3 · di + 1 · di+1 + .. + 1 · d13.

λ · vE = 1 · d1 + 3 · d2 + . . . + 3 · di+1 + 1 · di + .. + 1 · d13.

(3.4)

(3.5)

Somando (3.5) `a oposta de (3.4), temos

λ · vE − λ · v = 3di+1 + di − (3di + di+1) =⇒ λ · vE − λ · v = 2(di+1 − di).

(3.6)

(=⇒) Provemos que, se |di+1 − di| = 5, ent˜ao o erro n˜ao ´e detectado. Com efeito, se

|di+1 − di| = 5, ent˜ao di+1 − di = ±5, logo 2(di+1 − di) = ±10 e ent˜ao, por (3.6)

λ · vE − λ · v = ±10.

Logo temos que:

λ · vE − λ · v ≡ 10(mod 10) ≡ 0(mod 10).

16

Mas λ · vE − λ · v ≡ 0(mod 10) =⇒ λ · vE ≡ 0(mod 10), pela Proposi¸c˜ao 5 (p´agina 07).

Por sua vez, λ · vE ≡ 0(mod 10) implica que o erro n˜ao ´e detectado.

(⇐=) Suponha |di+1 − di| (cid:54)= 5. Se os d´ıgitos di e di+1 forem iguais, n˜ao h´a erro cometido;

se s˜ao diferentes, ent˜ao 2|di+1 − di| (cid:54)= 10, ou seja 2|di+1 − di| ∈ {2, 4, 6, 8, 12, 14, 16, 18} e,

portanto, 2(di+1 − di) (cid:54)≡ 0 (mod 10 ).

Mas isto (pela express˜ao 3.6) equivale a aﬁrmar que λ · vE − λ · v (cid:54)≡ 0 (mod 10 ), o

que, tamb´em pela Proposi¸c˜ao 5 (p´agina 07), for¸ca λ · vE (cid:54)≡ 0(mod 10), resultando assim

na detec¸c˜ao do erro.

Proposi¸c˜ao 10. A veriﬁca¸c˜ao do EAN-13 n˜ao detecta transposi¸c˜ao n˜ao adjacente di e

dj se a diferen¸ca i − j for par.

Demonstra¸c˜ao: Observe inicialmente que

λ · v = 1d1 + 3d2 + 1d3 + ... + 3d12 + 1d13 =

3 · (d2 + d4 + . . . + d12) + 1 · (d1 + d3 + . . . + d13) =

6
(cid:88)

3(

k=1

d2k) + (

7
(cid:88)

k=1

d2k−1).

(3.7)

Se a diferen¸ca i − j ´e par, ent˜ao ou s˜ao os ´ındices i, j ambos pares, ou ambos ´ımpares.

Suponha ent˜ao que houve uma transposi¸c˜ao entre dois d´ıgitos de posi¸c˜ao par (o caso

para ´ımpares ´e an´alogo), gerando um vetor-erro vE. Nesta circunstˆancia, nenhum dos

somat´orios da express˜ao (3.7) acima tem valor alterado, pela comutatividade da adi¸c˜ao.

Logo

λ · vE = λ · v ≡ 0(mod 10),

e o erro n˜ao ´e, portanto, detectado.

De maneira mais geral, qualquer reordena¸c˜ao dos d´ıgitos de posi¸c˜ao par (de modo que,

ap´os a reordena¸c˜ao, ainda permane¸cam todos em posi¸c˜oes pares) de uma sequˆencia em

EAN-13 n˜ao ´e detectada pelo m´etodo deste sistema; o mesmo ocorre (maneira an´aloga)

com os d´ıgitos de ordem ´ımpar. Mais que isso, ainda que os d´ıgitos de ordem par e

´ımpar reordenem-se entre si simultaneamente (preservando, contudo, a paridade de suas

posi¸c˜oes), estes erros n˜ao s˜ao detectados pelo m´etodo usado no sistema do EAN-13.

Exemplo 11. Considere a sequˆencia ﬁct´ıcia 2250432810359 do EAN-13. Para ela temos

v = (2, 2, 5, 0, 4, 3, 2, 8, 1, 0, 3, 5, 9) e λ · v = 80.

17

1. Suponha ter havido uma transposi¸c˜ao adjacente entre o 3o e o 4o d´ıgitos (observe

que |5 − 0| = 5), gerando a sequˆencia-erro 2205432810359 e consequentemente o

vetor erro vE = (2, 2, 0, 5, 4, 3, 2, 8, 1, 0, 3, 5, 9). Temos que λ · vE = 90. Como

90 ≡ 0 (mod 10), o erro cometido n˜ao foi detectado.

2. Suponha agora ter havido uma transposi¸c˜ao entre o 5o e o 9o d´ıgitos (note que ambos

de posi¸c˜ao ´ımpar, e diferen¸ca de ´ındices evidentemente par). Este erro gera uma

sequˆencia-erro 2205132840359, com respectivo vetor vE = (2, 2, 0, 5, 1, 3, 2, 8, 4,

0, 3, 5, 9). Para este vetor temos que λ · vE = 80, e consequentemente este erro

tamb´em n˜ao ´e detectado.

3.1.2 CPF, CNPJ no Brasil

O CPF (Cadastro Nacional de Pessoa F´ısica) ´e o mais importante documento pessoal

dos cidad˜aos brasileiros. Ele tem 11 d´ıgitos, sendo 9 atribu´ıdos pelo sistema, e 2 d´ıgitos

veriﬁcadores. O primeiro d´ıgito veriﬁcador ´e calculado sobre os nove primeiros usando o

vetor de pesos λ1 = (10, 9, 8, 7, 6, 5, 4, 3, 2, 1), e o segundo d´ıgito ´e calculado usando

os dez primeiros (inclusive o primeiro d´ıgito veriﬁcador) e seu vetor de pesos λ2 = (11,

10, 9, 8, 7, 6, 5, 4, 3, 2, 1), ambos usando m = 11. No entanto, esse m´etodo tem uma

limita¸c˜ao: a solu¸c˜ao da equa¸c˜ao de congruˆencia gerada pode ser 10. Nesse caso, p˜oe-se o

0 como d´ıgito veriﬁcador, sem a necessidade de um s´ımbolo adicional para representar a

solu¸c˜ao 10 obtida.

O CNPJ (Cadastro Nacional de Pessoa Jur´ıdica), documento ﬁscal brasileiro, ´e se-

melhante ao CPF, e usa uma sequˆencia num´erica com 14 d´ıgitos, sendo os 12 primeiros

atribu´ıdos pelo sistema, o 13o ´e o primeiro d´ıgito veriﬁcador (com m = 11) dos 12 primei-

ros, e o 14o ´e segundo o d´ıgito veriﬁcador, (tamb´em com m = 11) dos 13 anteriores, com

vetores de peso λ1 = (5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2, 1) e λ2 = (6, 5, 4, 3, 2, 9, 8, 7, 6, 5,

4, 3, 2, 1), respectivamente.

Como no caso do CPF, se a solu¸c˜ao da equa¸c˜ao de congruˆencia for 10, p˜oe-se 0 como

d´ıgito veriﬁcador.

Exemplo 12. Calcule os dois d´ıgitos veriﬁcadores x1, x2 de um CPF ﬁct´ıcio cujos 9

primeiros d´ıgitos sejam 123103107

Solu¸c˜ao: Pondo v1 = (1, 2, 3, 1, 0, 3, 1, 0, 7, x1), para o c´alculo do primeiro d´ıgito

temos:

18

λ1 · v1 = (10, 9, 8, 7, 6, 5, 4, 3, 2, 1) · (1, 2, 3, 1, 0, 3, 1, 0, 7, x1)

= 10 · 1 + 9 · 2 + 8 · 3 + 7 · 1 + 6 · 0 + 5 · 3 + 4 · 1 + 3 · 0 + 2 · 7 + 1 · x1

= 10 + 18 + 24 + 7 + 0 + 15 + 4 + 0 + 14 + x1

= 92 + x1.

Como a ´unica solu¸c˜ao da equa¸c˜ao 92 + x1 ≡ 0(mod 11) ´e x1 = 7, o CPF em quest˜ao

´e, at´e o momento, 1231031037x2. Para o c´alculo do segundo d´ıgito, pondo v2 = (1, 2, 3,

1, 0, 3, 1, 0, 7, 7, x2) temos:

λ2 · v2 = (11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1) · (1, 2, 3, 1, 0, 3, 1, 0, 7, 7, x2)

= 11 · 1 + 10 · 2 + 9 · 3 + 8 · 1 + 7 · 0 + 6 · 3 + 5 · 1 + 4 · 0 + 3 · 7 + 2 · 7 + 1 · x2

= 11 + 20 + 27 + 8 + 0 + 18 + 5 + 0 + 21 + 14 + x2

= 124 + x2.

Como a ´unica solu¸c˜ao da equa¸c˜ao 124 + x2 ≡ 0(mod 11) em Ω10 ´e x2 = 8, o CPF em

quest˜ao, completo, ´e 12310310778.

3.1.3 ISBN

ISBN ´e a sigla de ‘Internacional Standart Book Number’, um sistema que usa sequˆencias

de 11 d´ıgitos (10 atribu´ıdos pelo sistema e o ´ultimo sendo o d´ıgito veriﬁcador), um vetor

de pesos λ = (10, 9, 8, 7, 6, 5, 4, 3, 2, 1), c = 0 e m = 11 para catalogar obras bibliogr´aﬁcas

em ˆambito mundial.

Exemplo 13. Calcule o d´ıgito de veriﬁca¸c˜ao w de um livro ﬁct´ıcio com n´umero ISBN

7-5463-1132-w.

Solu¸c˜ao: Tomando v = (7, 5, 4, 6, 3, 1, 1, 3, 2, w), temos

λ · v = 10 · 7 + 9 · 5 + 8 · 4 + 7 · 6 + 6 · 3 + 5 · 1 + 4 · 1 + 3 · 3 + 2 · 2 + 1 · w

= 70 + 45 + 32 + 42 + 18 + 5 + 4 + 9 + 4 + w

= 229 + w.

19

A ´unica solu¸c˜ao w para a equa¸c˜ao 229 + w ≡ 0(mod 11) em Ω10 ´e w = 2. Logo, o

n´umero ISBN completo do referido livro ´e 7-5463-1132-2.

O ISBN possui uma limita¸c˜ao de d´ıgitos. Por exemplo, se fossemos calcular o d´ıgito

veriﬁcador z da sequˆencia 4-40043379-z, ter´ıamos que z precisa ser a solu¸c˜ao de 166 + z ≡

0(mod11), ou seja, z = 10. Mas como 10 (cid:54)∈ Ω10, usa-se, para represent´a-lo, a letra X. O

ISBN em quest˜ao seria 4-40043379-X. Este problema tamb´em ocorre com o os sistemas

do CPF e do CNPJ. Nestes, no entanto, se adota o 0 como d´ıgito veriﬁcador, em vez da

ado¸c˜ao de um s´ımbolo adicional.

3.1.4 Poder de Detec¸c˜ao de Erros com Vetor de Pesos

O d´ıgito veriﬁcador, como ferramenta de detec¸c˜ao de erros em um sistema, tem sua

eﬁciˆencia avaliada diretamente pelos tipos de erros que consegue detectar. Para o m´etodo

que usa vetor de pesos, a escolha, aleat´oria ou n˜ao, do valor m e do vetor de pesos λ

inﬂuencia na capacidade de detec¸c˜ao do m´etodo. O teorema seguir mostra como se d´a

esta inﬂuˆencia.

Teorema 2. Sejam m > 1 um n´umero natural e λ = (λ1, λ2, ...λn) um vetor de pesos.

Considere um vetor caracter´ıstico v = (d1, d2, ...dn), com di < m quando i ∈ {1, 2, . . . n},

para os quais

Ent˜ao

λ · v = λ1d1 + λ2d2 + ... + λndn ≡ 0(mod m).

(a) Todo erro singular em v s´o ser´a detectado se mdc(λi, m) = 1, para i ∈ {1, 2, . . . n}

(b) Todo erro de transposi¸c˜ao da forma

. . . vi . . . vj . . . (cid:55)→ . . . vj . . . vi . . .

ser´a detectado se e somente se mdc(λi - λj, m) = 1.

Demonstra¸c˜ao. (a) Suponha ter havido um erro singular no qual o d´ıgito errado tenha

sido na posi¸c˜ao j, com a troca dj −→ dE, gerando um vetor erro da forma vE, e que o

erro foi detectado; logo:

λ · v = λ1 · d1 + λ2 · d2 + . . . + λj · di + . . . + λn · dn.

λ · vE = λ1 · d1 + λ2 · d2 + . . . + λj · dE + . . . + λn · dn.

(3.8)

(3.9)

Consequentemente:

Subtraindo (3.9) de (3.8):

λ · v ≡ 0(mod m).

λ · vE (cid:54)≡ 0(mod m).

20

(3.10)

(3.11)

λ · v − λ · vE = λjdj − λjdE = λj(dj − dE).

Pela Proposi¸c˜ao 6 (p´agina 8), aplicada aos resultados (3.10) de (3.11), temos:

Logo, temos que

λ · v − λ · vE (cid:54)≡ 0(mod m).

λj(dj − dE) (cid:54)≡ 0(mod m).

Como di − dj < m, pelas hip´oteses da Proposi¸c˜ao 7., p´agina 08., a equa¸c˜ao λj(dj − dE) (cid:54)≡

0(mod m) s´o ´e verdadeira se, e somente se, mdc(λj, m) = 1 (tome s = di − dj e p = λj).

Como o erro singular pode ocorrer em qualquer posi¸c˜ao da sequˆencia, tem-se a plena

validade do resultado apresentado.

(b) Suponha que tenha ocorrido a permuta¸c˜ao entre os d´ıgitos di e dj, gerando uma

sequˆencia-erro de vetor vE. Temos assim:

λ · v = λ1 · d1 + . . . + λidi + . . . + λjdj + . . . + λn · dn.

λ · vE = λ1 · d1 + . . . + λidj + . . . + λjdi + . . . + λn · dn.

(3.12)

(3.13)

Subtraindo (3.13) de (3.13), temos:

λ · v − λ · vE =

(λidi − λidj) + (λjdj − λjdi) =

λi(di − dj) − λj(di − dj) =

(λi − λj)(di − dj) =

(λj − λi)(dj − di).

(3.14)

(3.15)

Observa¸c˜ao. Considere como oﬁcial, nos c´alculos a seguir, a express˜ao (3.14) se λi −λj >

0, ou a express˜ao (3.14), se λj − λi > 0. Se λj = λi, ent˜ao λ · v = λ · vE, e nenhum erro

ser´a detectado. Se dj = di, ent˜ao n˜ao houve erro cometido.

21

Se tivermos ou (λi − λj) ≡ 0(mod m) ou (di − dj) ≡ 0(mod m), ent˜ao

λ · v − λ · vE = (λi − λj)(di − dj) ≡ 0(mod m).

Mas se λ · v − λ · vE ≡ 0(mod m), ent˜ao, pela Proposi¸c˜ao 5. (p´agina 07), temos que

λ · vE ≡ 0(mod m), o que implica na n˜ao detec¸c˜ao do erro.

Logo, para detectar o erro, precisamos ter simultaneamente (λj − λi) (cid:54)≡ 0(mod m) e

(di − dj) (cid:54)≡ 0(mod m).

A primeira incongruˆencia s´o ocorre se, e somente se, mdc(λj − λi, m) = 1, como

consequˆencia direta da Proposi¸c˜ao 7 (p´agina 08), tomando s = 1 e p = λj − λi ou p =

λi −λj (conforme a observa¸c˜ao acima); a segunda ´e sempre verdadeira, como consequˆencia

do Lema 2 (p´agina 04).

`A luz deste teorema ﬁca claro que, para que ocorra a detec¸c˜ao destes dois tipos de

erros (erros que juntos, pela tabela 1.1, somam mais de 90% dos erros b´asicos cometidos),

´e preciso que o valor de m escolhido seja primo com todas as coordenadas do vetor de

pesos λ e com todas as diferen¸cas poss´ıveis entre estas mesmas. Isso justiﬁca o fato que

no m´etodo da maioria dos sistemas, o valor m ´e primo.

O trˆes sistemas que usam d´ıgitos veriﬁcadores calculados com vetor de pesos ﬁxo

expostos neste trabalho usam m primo, o 11. No entanto, todos tˆem a desvantagem

de ocorrer uma solu¸c˜ao da equa¸c˜ao de congruˆencia o valor 10, que n˜ao pertence a Ω10.

A sa´ıda encontrada pelo ISBN ´e acrescentar um d´ıgito alfab´etico extra; j´a os sistemas

CPF/CNPJ usam 0 caso a solu¸c˜ao da equa¸c˜ao de congruˆencia n˜ao seja menor que 10.

3.2 D´ıgito Veriﬁcador por Permuta¸c˜ao

Nesta se¸c˜ao ser´a exposto o m´etodo de c´alculo de d´ıgito veriﬁcador onde n˜ao existe a ﬁgura

do vetor de pesos λ ﬁxo. A ferramenta usada ´e, agora, uma permuta¸c˜ao, que, assim como

o vetor de pesos, permite obter um membro de uma equa¸c˜ao de congruˆencia.

3.2.1 M´etodo

Deﬁni¸c˜ao. Seja v = (d1, d2, ..., dn−1) um vetor caracter´ıstico de uma sequˆencia num´erica

de n − 1 d´ıgitos (todos elementos de Ω10), σ : Ω10 −→ Ω10 uma permuta¸c˜ao, e um n´umero

22

primo m, para o qual di < m para todo i < n. O d´ıgito de veriﬁca¸c˜ao desta sequˆencia,

pelo m´etodo das permuta¸c˜oes, ´e dado pela solu¸c˜ao x da equa¸c˜ao:

σ(d1) + σ(d2) + ... + σ(dn−1) + σ(x) ≡ c(mod m).

(3.16)

Esta deﬁni¸c˜ao, contudo, ´e pouco utilizada na pr´atica; o procedimento mais comum, ao

se usar permuta¸c˜oes e congruˆencia no c´alculo do d´ıgito veriﬁcador, ´e compor o primeiro

membro de (3.16) ainda como soma de parcelas, mas aplicando a permuta¸c˜ao σ apenas

em alguns d´ıgitos. O exemplo abaixo ilustra esta situa¸c˜ao.

Exemplo 14. Considere uma sequˆencia d : d1d2...dn−1x de n d´ıgitos (com n par), e

duas permuta¸c˜oes σp : Ω10 −→ Ω10 e σi : Ω10 −→ Ω10, que usadas alternadamente, s˜ao

restri¸c˜oes de uma fun¸c˜ao σ a ser aplicada sob os d´ıgitos da sequˆencia d, tal que:

1. σ(dj) = σp(dj), se j for par.

2. σ(dj) = σi(dj), se j for ´ımpar.

Nestes termos, o d´ıgito veriﬁcador da sequˆencia seria a solu¸c˜ao x da equa¸c˜ao

σi(d1) + σp(d2) + ... + σi(dn−1) + σp(x) ≡ c(mod m).

Se m > 10 a solu¸c˜ao da equa¸c˜ao ´e ´unica, conforme a Proposi¸c˜ao 4 (p´agina 07),

tomando R = σi(d1) + σp(d2) + ... + σi(dn−1).

Devido ao grande n´umero de possibilidades de aplica¸c˜oes deste m´etodo (pois podem

ser deﬁnidas v´arias permuta¸c˜oes e v´arias formas de se aplicar cada uma delas), a an´alise

do seu poder de detec¸c˜ao de erros leva em conta muitos casos. Neste trabalho avaliaremos

este ponto apenas no sistema de numera¸c˜ao de cart˜oes de cr´editos.

Tipos mais avan¸cados da aplica¸c˜ao deste m´etodo encontram-se citados em Picado [8],

tais como os m´etodos IBM Generalizado, PTT (do banco alem˜ao) e Colenbrander.

3.2.2 Sistema IBM e Cart˜oes de Cr´edito

Numera¸c˜ao de Cart˜oes

Um exemplo de elabora¸c˜ao do d´ıgito veriﬁcador por permuta¸c˜ao ´e o m´etodo da IBM

usado na numera¸c˜ao dos cart˜oes de cr´edito de uso internacional. Esta numera¸c˜ao ´e regida

23

pela normativa ISO/IEC 7812, elaborada pela International Organization for Standardi-

zation (ISO) em 1989 (dispon´ıvel em [6]). As sequˆencias desta numera¸c˜ao tˆem 16 d´ıgitos,

sendo os 6 primeiros referentes `a institui¸c˜ao que emitiu o cart˜ao (IIN em inglˆes, cujo

controle da numera¸c˜ao s˜ao de responsabilidade da Associa¸c˜ao Americana de Bancos), os

9 seguintes s˜ao referentes ao cliente dono do cart˜ao, o 16o ´e ao d´ıgito veriﬁcador.

O c´alculo do d´ıgito veriﬁcador dos cart˜oes usa c = 0, m = 10 e, na obten¸c˜ao do

primeiro membro da equa¸c˜ao (3.16), usa a permuta¸c˜ao ζ abaixo, que ´e aplicada somente

nos d´ıgitos de ´ındice ´ımpar; os d´ıgitos de ´ındice par mantˆem-se inalterados.





ζ =

0 1 2 3 4 5 6 7 8 9

0 2 4 6 8 1 3 5 7 9





Esta permuta¸c˜ao ´e parte do Algoritmo de Luhn, um m´etodo aritm´etico criado em 1957

por Hans Peter Luhn (1896-1964), engenheiro da IBM (mais detalhes em [3]).

Considere uma sequˆencia d1d2...d15x. O d´ıgito veriﬁcador, pelo m´etodo da IBM, para

cart˜oes de cr´edito, ´e o valor x para o qual temos:

ζ(d1) + d2 + ζ(d3) + d4 + . . . + ζ(d13) + d14 + ζ(d15) + x ≡ 0(mod 10).

(3.17)

O valor de x, nas condi¸c˜oes acima, ´e ´unico.

Exemplo 15. Determine o d´ıgito veriﬁcador x da numera¸c˜ao ﬁct´ıcia de um cart˜ao de

cr´edito 004455-242477111-x, pelo m´etodo da IBM.

Solu¸c˜ao: Aplicando ζ `a sequˆencia proposta, temos

ζ(0) + 0 + ζ(4) + 4 + ζ(5) + 5 + ζ(2) + 4 + ζ(2) + 4 + ζ(7) + 7 + ζ(1) + 1 + ζ(1) + x =

0 + 0 + 8 + 4 + 1 + 5 + 4 + 8 + 4 + 8 + 5 + 7 + 2 + 1 + 2 + x =

59 + x.

Como x = 1 ´e a ´unica solu¸c˜ao de 59 + x ≡ 0(mod 10) em Ω10, o n´umero do cart˜ao,

completo, ´e 004455-242477111-1.

Para simpliﬁcar a nota¸c˜ao, deﬁnamos por φ(s) o primeiro membro da equa¸c˜ao (3.17)

acima, tomando s = d1d2...d15x e pondo x = d16:

φ(s) = ζ(d1) + d2 + ζ(d3) + d4 + . . . + ζ(d13) + d14 + ζ(d15) + d16.

Se durante a transmiss˜ao de n´umero de cart˜ao de cr´editos de vetor caracter´ıstico v

ocorrer um erro, gerando assim uma sequˆencia-erro sE, temos que:

1. se φ(sE) ≡ 0(mod 10), ent˜ao o erro cometido n˜ao foi detectado pelo m´etodo.

2. se φ(sE) (cid:54)≡ 0(mod 10), ent˜ao o m´etodo detectou o erro.

24

Dois resultados interessantes envolvendo o m´etodo IBM, para uma sequˆencia de 16

d´ıgitos de um cart˜ao de cr´edito, s˜ao apresentados a seguir. Antes, contudo, demonstrare-

mos um lema.

Lema 4. A igualdade ζ(m) + n − (m + ζ(n)) = 0 (com n (cid:54)= m) s´o ocorre se tivermos

m = 0 e n = 9, ou m = 9 e n = 0.

Demonstra¸c˜ao: Observemos que:

ζ(m) + n − (m + ζ(n)) =

ζ(m) − m + n − ζ(n) =

(ζ(m) − m) − (ζ(n) − n).

Deﬁnindo a fun¸c˜ao auxiliar h : Ω10 −→ Ω10 tal que h(x) = ζ(x) − x, temos h(0) = 0,

h(1) = 1, h(2) = 2, h(3) = 3, h(4) = 4, h(5) = −4, h(6) = −3, h(7) = −2, h(8) = −1 e

h(9) = 0.

Dessa forma, temos que ζ(m) + n − (m + ζ(n)) = 0 somente se h(m) − h(n) = 0 o que

equivale a h(m) = h(n), o que s´o ocorre se m = 0 e n = 9, ou m = 9 e n = 0, uma vez

que 0 e 9 s˜ao os ´unico valores que tem mesma imagem pela fun¸c˜ao auxiliar h(x).

Note, que, para quaisquer a, b ∈ Ω10, |h(a) − h(b)| ≤ 8.

Proposi¸c˜ao 11. O m´etodo da IBM n˜ao detecta transposi¸c˜oes de coordenadas de ´ındices

de mesma paridade.

Demonstra¸c˜ao: Podemos representar φ(v) como:

φ(v) =

8
(cid:88)

k=1

ζ(d2k−1) +

8
(cid:88)

k=1

d2k,

25

com o primeiro somat´orio fazendo o referˆencia aos d´ıgitos de posi¸c˜ao ´ımpar, e o segundo

somat´orio fazendo referˆencia aos d´ıgitos de posi¸c˜ao par. Suponha que ocorra uma trans-

posi¸c˜ao entre quaisquer dois d´ıgitos de posi¸c˜ao de mesma paridade. Essa transposi¸c˜ao

gera uma sequˆencia-erro sE, para o qual ainda vale φ(vE) ≡ 0(mod 10), pois a trans-

posi¸c˜ao cometida envolve dois termos do mesmo somat´orio, e isto n˜ao altera a soma neste

somat´orio, de modo que se tem

φ(sE) =

8
(cid:88)

k=1

ζ(d2k−1) +

8
(cid:88)

k=1

d2k = φ(v),

e, consequentemente, o erro n˜ao ´e detectado.

Proposi¸c˜ao 12. O m´etodo da IBM descrito acima detecta todo erro singular (a) e toda

transposi¸c˜ao adjacente exceto se formada por -09- ou -90- (b).

Demonstra¸c˜ao: (a) Considere uma sequˆencia num´erica d1d2d3 . . . d15d16. Suponha que

houve, na transmiss˜ao do vetor caracter´ıstico v da sequˆencia acima, um erro singular

dj → dE, com j ´ımpar (o caso se j ´e par ´e an´alogo), gerando um vetor-erro vE =

(d1, ..., dj−1, dE, dj+1, ..., d16). Ent˜ao, fazendo uso da mesma fun¸c˜ao auxiliar do Lema 4,

temos:

(ζ(d1) + . . . + ζ(dj) + . . . + d16) − (ζ(d1) + . . . + ζ(dE) + . . . + d16) =

φ(v) − φ(vE) =

ζ(dj) − ζ(dE).

Como ζ(dj) (cid:54)= ζ(dE) e 0 ≤ ζ(dj), ζ(dE) < 10, ent˜ao 0 < ζ(dj) − ζ(dE) < 10, portanto

ζ(dj) − ζ(dE) (cid:54)≡ 0(mod 10) e, consequentemente, φ(v) − φ(vE) (cid:54)≡ 0(mod 10).

Ora, como φ(v) ≡ 0(mod 10), ent˜ao φ(vE) (cid:54)≡ 0(mod 10) (pela Proposi¸c˜ao 6, p´agina

08), o que signiﬁca que o erro ´e detectado.

(b) Suponha que ocorra uma transposi¸c˜ao adjacente entre os termos dj e dj+1 de v

(ambos evidentemente diferentes), com j ´ımpar (se j for par, trata-se de maneira an´aloga),

gerando um vetor-erro vE = (d1, ..., dj+1, dj, ..., d16). Ent˜ao, fazendo uso da mesma fun¸c˜ao

auxiliar h(x) do Lema 4, temos:

26

φ(v) − φ(vE) =

(ζ(d1) + . . . + ζ(dj) + dj+1 + . . . + d16) − (ζ(d1) + . . . + ζ(dj+1) + dj + . . . + d16) =

(ζ(dj) + dj+1) − (ζ(dj+1) + dj) =

(ζ(dj) − dj) − (ζ(dj+1) − dj+1) =

h(dj) − h(dj+1).

Temos ent˜ao duas possibilidades:

1. se φ(v) − φ(vE) = h(dj) − h(dj+1) (cid:54)= 0, ent˜ao φ(v) − φ(vE) ∈ {−8, −7, −6, −5,

−4, −3, −2, −1, 1, 2, 3, 4, 5, 6, 7, 8}. Em todo caso, φ(v) − φ(vE) (cid:54)≡ 0(mod 10),

e pela Proposi¸c˜ao 06 (p´agina 08), φ(vE) (cid:54)≡ 0(mod 10), o que implicaria na detec¸c˜ao

do erro.

2. se h(dj) − h(dj+1) = 0, ent˜ao ou temos dj = 0 e dj+1 = 9 (sequˆencia -09-), ou dj = 9

e dj+1 = 0 (sequˆencia -90-), conforme Lema 4 (pondo m = di e n = di+1). Neste

caso, φ(v) − φ(vE) ≡ 0(mod 10) =⇒ φ(vE) ≡ 0(mod 10), o que implica na n˜ao

detec¸c˜ao do erro de transposi¸c˜ao.

Exemplo 16. Considere uma numera¸c˜ao ﬁct´ıcia de um cart˜ao de cr´editos s = 8756-

5390-7866-7686. Temos que φ(s) = 80 e, naturalmente, 80 ≡ 0(mod 10). Simulemos ter

cometido trˆes erros.

1. Suponha ter ocorrido erro singular 7 → 3 no nono d´ıgito da sequˆencia. Este erro

gera uma sequˆencia erro sE = 8756-5390-3866-7686 para a qual temos:

φ(sE) = 7 + 7 + 1 + 6 + 1 + 3 + 9 + 0 + 6 + 8 + 3 + 6 + 5 + 6 + 7 + 6

= 81.

Como 81 (cid:54)≡ 0(mod 10), o erro ´e detectado.

2. Suponha ter ocorrido uma transposi¸c˜ao adjacente entre o 2o e o 3o d´ıgito. A

sequˆencia-erro sE =8576-5390-7866-7686 gerada ´e tal que:

φ(sE) = 7 + 5 + 5 + 6 + 1 + 3 + 9 + 0 + 5 + 8 + 3 + 6 + 5 + 6 + 7 + 6

= 82.

Como 82 (cid:54)≡ 0(mod 10), a transposi¸c˜ao cometida tamb´em ´e detectada.

3. Suponha ter ocorrido uma transposi¸c˜ao adjacente entre o 7o e o 8o d´ıgito (um erro

na sequˆencia -09-). Este erro gera uma sequˆencia-erro sE =8576-5309-7866-7686

para a qual temos:

27

φ(sE) = 7 + 7 + 1 + 6 + 1 + 3 + 0 + 9 + 5 + 8 + 3 + 6 + 5 + 6 + 7 + 6

= 80.

O erro, portanto, n˜ao pode ser detectado.

Vale ressaltar que os bancos, de maneira independente da normativa ISO/IEC 7812,

podem complementar seus sistemas de seguran¸ca de numera¸c˜ao com outros m´etodos,

gerando sequˆencias adicionais que s˜ao (eventualmente) impressas nos cart˜oes, mas n˜ao

podem alterar o padr˜ao da sequˆencia principal e de seus 16 d´ıgitos.

Cap´ıtulo 4

D´ıgito Veriﬁcador e o Grupo D5

Jacobus (Koos) Verhoeﬀ (1927 - ) ´e um matem´atico, cientista computacional e artista

holandˆes aposentado. Seu m´etodo de elabora¸c˜ao de d´ıgito veriﬁcadores foi publicado em

1969 (ver [11]) em sua tese de doutorado. Este modelo se baseia n˜ao em Aritm´etica Modu-

lar, mas no grupo diedral D5, um grupo composto pelas 10 permuta¸c˜oes de um pent´agono

e a opera¸c˜ao de composi¸c˜ao entre elas. Sua vantagem sobre os m´etodos modulares ´e que

este m´etodo detecta todos os erros singulares, todos os erros de tranposi¸c˜ao adjacente e

usa apenas os elementos de Ω10.

4.1 Simetrias do Pent´agono Regular

Sobre cada pol´ıgono regular de n lados podem ser determinadas tanto rota¸c˜oes em torno

do centro da circunferˆencia inscrita ao pol´ıgono quanto eixos de simetria, que ligam ou

v´ertices opostos, ou um v´ertice ao ponto m´edio do lado oposto (dependendo da paridade

do n´umero de lados do pol´ıgono). As rota¸c˜oes s˜ao em n´umero de n, todas com ˆangulos

i ·

2π
n

, com i = 0, ..., n − 1, em um dos dois sentidos (hor´ario ou anti-hor´ario). As reﬂex˜oes

tamb´em s˜ao em n´umero de n, tanto se n for ´ımpar (um eixo de simetria para cada v´ertice),

como se n for par (mas neste caso, existem n/2 simetrias entre v´ertices opostos e n/2

simetrias entre pontos m´edios de lados opostos).

Permuta¸c˜oes de um pent´agono regular

Considere um pent´agono regular com v´ertices numerados de A at´e E, no sentido anti-

hor´ario. Este pent´agono possui 5 eixos de simetria, cada um ligando um dos v´ertice ao

ponto m´edio do lado oposto. Cada eixo destes determina uma reﬂex˜ao diferente.

28

29

Este pent´agono possui, no sentido hor´ario (assim como no anti-hor´ario), 5 rota¸c˜oes

entre seus v´ertices. Estas rota¸c˜oes tˆem ˆangulos de 0rad,

2π
5

rad,

4π
5

rad,

6π
5

rad e

8π
5

rad.

Observe que rota¸c˜oes em sentidos diferentes podem ter mesmo resultado. Por exemplo,

a rota¸c˜ao de

hor´ario.

6π
5

rad no sentido hor´ario coincide com a rota¸c˜ao de

4π
5

rad no sentido anti-

Denotemos cada rota¸c˜ao por Ri, com i = 0, 1, 2, 3, 4, e cada reﬂex˜ao por Sj, com j

= 5, 6, 7, 8, 9, conforme as ﬁguras 4.1 e 4.2.

Figura 4.1: Rota¸c˜oes Ri do pent´agono regular.

Figura 4.2: Reﬂex˜oes Si do pent´agono regular.

Deﬁni¸c˜ao. Deﬁne-se por permuta¸c˜ao do pent´agono regular cada uma das 5 reﬂex˜oes S5,

S6, S7, S8 e S9 e cada uma das 5 rota¸c˜oes R0, R1, R2, R3 e R4 deﬁnidas sobre o pol´ıgono.

Deﬁni¸c˜ao. Deﬁne-se por D5 o conjunto formado pelas 10 permuta¸c˜oes deﬁnidas sobre o

pent´agono regular.

30

4.2 O Grupo D5

4.2.1 Composi¸c˜ao de Permuta¸c˜oes

As permuta¸c˜oes de um pent´agono regular podem ser compostas entre si, efetuadas sequen-

ciadamente. Sejam ent˜ao A, B ∈ D5. Denotemos por A◦B a composi¸c˜ao das permuta¸c˜oes

A e B, efetuadas nesta ordem, formalmente deﬁnida como:

◦ : G × G −→ G

◦(A, B) −→ A ◦ B

Esta opera¸c˜ao de composi¸c˜ao sempre resulta em outra permuta¸c˜ao do pent´agono, ou

seja, A ◦ B ∈ D5. Por exemplo, a rota¸c˜ao R2 composta com R3 equivale `a rota¸c˜ao R0.

Simbolicamente: R2 ◦ R3 = R4. A Figura 4.3 exempliﬁca a composi¸c˜ao S6 ◦ R3.

Figura 4.3: Composi¸c˜ao S6 ◦ R3 = S5.

A tabela 4.1 no ﬁm desta subse¸c˜ao traz todas as composi¸c˜oes poss´ıveis entre os ele-

mentos de D5. Nela, os valores Xi ◦ Yj s˜ao tomados com Xi da primeira coluna e Yj da

primeira linha.

Trˆes resultados podem ser obtidos da an´alise direta da tabela (4.1) sobre a opera¸c˜ao

composi¸c˜ao:

1. Resultado 1: para quaisquer X, Y, Z ∈ D5 temos (X ◦ Y ) ◦ Z = X ◦ (Y ◦ Z).

2. Resultado 2: R0 ´e elemento neutro (o ´unico), pois X ◦ R0 = R0 ◦ X = X, para todo

X ∈ D5.

3. Resultado 3: para qualquer elemento X ∈ D5, existe um elemento Y ∈ D5, ´unico,

tal que X ◦ Y = Y ◦ X = R0.

Estes resultados permitem concluir que o conjunto D5 forma em grupo sobre a opera¸c˜ao

composi¸c˜ao (◦) apresentada acima, uma vez que esta opera¸c˜ao satisfaz `as trˆes condi¸c˜oes

requisitadas pela deﬁni¸c˜ao de grupo: o Resultado 1 mostra que a composi¸c˜ao satisfaz

`a Associatividade; o Resultado 2 mostra que existem um ´unico elemento neutro; e o

Resultado 3 mostra que cada elemento de D5 tem um elemento inverso. Destas trˆes

condi¸c˜oes, a associatividade tem uma grande importˆancia nas demonstra¸c˜oes que atestam

a eﬁciˆencia do m´etodo de Verhoeﬀ para alguns tipos de erro.

31

◦ R0 R1 R2 R3 R4 S5 S6 S7 S8 S9

R0 R0 R1 R2 R3 R4 S5 S6 S7 S8 S9

R1 R1 R2 R3 R4 R0 S7 S8 S9 S5 S6

R2 R2 R3 R4 R0 R1 S9 S5 S6 S7 S8

R3 R3 R4 R0 R1 R2 S6 S7 S8 S9 S5

R4 R4 R0 R1 R2 R3 S8 S9 S5 S6 S7

S5

S6

S7

S8

S9

S5 S8 S6 S9 S7 R0 R2 R4 R1 R3

S6 S9 S7 S5 S8 R3 R0 R2 R4 R1

S7 S5 S8 S6 S9 R1 R3 R0 R2 R4

S8 S6 S9 S7 S5 R4 R1 R3 R0 R2

S9 S7 S5 S8 S6 R2 R4 R1 R3 R0

Tabela 4.1: Composi¸c˜oes em D5.

4.3 D´ıgito Veriﬁcador pelo Grupo D5

Pelo m´etodo de Verhoeﬀ, o d´ıgito veriﬁcador ´e a solu¸c˜ao de uma equa¸c˜ao cujo primeiro

membro ´e uma composi¸c˜ao de permuta¸c˜oes aplicadas sobre os d´ıgitos da sequˆencia.

4.3.1 Nota¸c˜ao com algarismos

A aplica¸c˜ao do grupo D5 no c´alculo de d´ıgitos veriﬁcadores de sequˆencias precisa ser

alterada, para usarmos n˜ao as simetrias, mas algarismos. Para tanto, adotemos as equi-

valˆencias R0 = 0, R1 = 1, R2 = 2, R3 = 3, R4 = 4, S5 = 5, S6 = 6, S7 = 7, S8 = 8 e

S9 = 9. Nesta nova nota¸c˜ao, representaremos a opera¸c˜ao composi¸c˜ao (representada por

‘◦’) agora por ‘•’, onde.

• : Ω10 × Ω10 −→ Ω10

•(A, B) −→ A • B.

Cada composi¸c˜ao exposta na tabela 4.1 ser´a reescrita sob nesta nova nota¸c˜ao. Por

exemplo, a composi¸c˜ao R2 ◦ S8 = S9 ser´a escrita agora como 2 • 8 = 9. A mudan¸ca de

nota¸c˜ao aplicada em toda a tabela 4.1 resulta na tabela 4.2 a seguir.

32

•

0

1

2

3

4

5

6

7

8

9

0

0

1

2

3

4

5

6

7

8

9

1

1

2

3

4

0

8

9

5

6

7

2

2

3

4

0

1

6

7

8

9

5

3

3

4

0

1

2

9

5

6

7

8

4

4

0

1

2

3

7

8

9

5

6

5

5

7

9

6

8

0

3

1

4

2

6

6

8

5

7

9

2

0

3

1

4

7

7

9

6

8

5

4

2

0

3

1

8

8

5

7

9

6

1

4

2

0

3

9

9

6

8

5

7

3

1

4

2

0

Tabela 4.2: Composi¸c˜ao em D5 sob a nova nota¸c˜ao.

Um resultado simples mas importante e veriﬁc´avel por r´apida inspe¸c˜ao da tabela ´e

exposto no lema abaixo.

Lema 5. Para a, b, c ∈ D5, se a (cid:54)= b, ent˜ao c • a (cid:54)= c • b e a • c (cid:54)= b • c.

4.3.2 Deﬁni¸c˜ao e Exemplo

Deﬁni¸c˜ao. Considere um vetor caracter´ıstico v = (a1, a2, ..., an−1), a opera¸c˜ao ‘•’ sobre

o grupo diedral D5 e uma permuta¸c˜ao φ de D5 tal que, para todo a, b ∈ D5, tenhamos:

a • φ(b) (cid:54)= b • φ(a)

(4.1)

O d´ıgito veriﬁcador, pelo m´etodo de Verhoeﬀ, ´e a solu¸c˜ao x (x ∈ D5) da equa¸c˜ao

φ(a1) • φ2(a2) • φ3(a3) • ... • φn−1(an−1) • x = 0.

(4.2)

A solu¸c˜ao de (4.2) ´e ´unica, pois pondo s = φ(a1) • φ2(a2) • φ3(a3) • ... • φn−1(an−1), temos

que s ∈ D5, logo ´e constante, e pelo Lema 05, s • x = 0 tem solu¸c˜ao ´unica.

33

´E imprescind´ıvel, para a o c´alculo do d´ıgito veriﬁcador por este m´etodo, que a per-

muta¸c˜ao φ satisfa¸ca o resultado (4.1). Quando uma aplica¸c˜ao em um grupo G tem esta

caracter´ıstica, ela ´e chamada de aplica¸c˜ao antissim´etrica. Dois exemplos cl´assicos de

permuta¸c˜oes anti-simetricas de D10 ´e a permuta¸c˜ao θ = (1, 4)(2, 3)(5, 8, 6, 9, 7), citada em

Picado [8], e a permuta¸c˜ao τ = (0, 1, 5, 8, 9, 4, 2, 7)(3, 6), citada em Polcino Millies [9].

Exemplo 17. Considere o seguinte c´odigo ﬁct´ıcio 03328791664x, e determinemos qual

seria seu d´ıgito de veriﬁca¸c˜ao x pelo m´etodo de Verhoeﬀ, usando a permuta¸c˜aoτ =

(0, 1, 5, 8, 9, 4, 2, 7)(3, 6).

Solu¸c˜ao. Devemos obter x como solu¸c˜ao da equa¸c˜ao

τ (0) • τ 2(3) • τ 3(3) • τ 4(2) • τ 5(8) • τ 6(7) • τ 7(9) • τ 8(1) • τ 9(6) • τ 10(6) • τ 11(4) • x = 0.

A permuta¸c˜ao τ ´e da forma





τ =

0 1 2 3 4 5 6 7 8 9

1 5 7 6 2 8 3 0 9 4





A tabela (4.3) abaixo traz todas as permuta¸c˜oes τ n at´e a n = 11, permitindo assim o

c´alculo direto do d´ıgito veriﬁcador.

τ 0

τ 1

τ 2

τ 3

τ 4

τ 5

τ 6

τ 7

τ 8

τ 9

τ 10

τ 11

0

1

5

8

9

4

2

7

0

1

5

8

1

5

8

9

4

2

7

0

1

5

8

9

2

7

0

1

5

8

9

4

2

7

0

1

3

6

3

6

3

6

3

6

3

6

3

6

4

2

7

0

1

5

8

9

4

2

7

0

5

8

9

4

2

7

0

1

5

8

9

4

6

3

6

3

6

3

6

3

6

3

6

3

7

0

1

5

8

9

4

2

7

0

1

5

8

9

4

2

7

0

1

5

8

9

4

2

9

4

2

7

0

1

5

8

9

4

2

7

Tabela 4.3: Itera¸c˜oes de τ at´e a 11a ordem.

Efetuando os devidos c´alculos, usando a propriedade associativa da opera¸c˜ao •, temos:

τ (0) • τ 2(3) • τ 3(3) • τ 4(2) • τ 5(8) • τ 6(7) • τ 7(9) • τ 8(1) • τ 9(6) • τ 10(6) • τ 11(4) • x = 0

1 • 3 • 6 • 5 • 0 • 4 • 8 • 1 • 3 • 6 • 0 • x = 0

(1 • 3) • (6 • 5) • (0 • 4) • (8 • 1) • (3 • 6) • 0 • x = 0

34

4 • 3 • 4 • 6 • 7 • 0 • x = 0

(4 • 3) • (4 • 6) • (7 • 0) • x = 0

2 • 9 • 7 • x = 0

8 • 7 • x = 0

3 • x = 0.

Em consulta a tabela (4.2), a ´unica solu¸c˜ao de 3•x = 0 ´e x = 2. Assim, o c´odigo completo

´e 033287916642.

4.3.3 Poder de detec¸c˜ao do m´etodo de Verhoeﬀ

A proposi¸c˜ao a seguir mostra o poder de detec¸c˜ao de erros do m´etodo de Verhoeﬀ e a

importˆancia de uma aplica¸c˜ao anti-sim´etrica de D5 na obten¸c˜ao do d´ıgito veriﬁcador.

Proposi¸c˜ao 13. Considere uma sequˆencia de d´ıgitos d1d2...dn−1 (com di ∈ D5 para todo

i ≤ n) e uma permuta¸c˜ao σ de D5 tal que

m • σ(n) (cid:54)= n • σ(m),

(4.3)

para todo m, n ∈ D5. O m´etodo de Verhoeﬀ detecta todos os erros singulares (a) e todos

os erros de transposi¸c˜ao adjacente (b) cometidos na sequˆencia.

Demonstra¸c˜ao:

(a) Considere que na transmiss˜ao da sequˆencia original d1d2...di...dn−1 tenha ocorrido um

´unico erro singular di −→ dE, gerando a sequˆencia erro d1d2...dE...dn−1. Sejam x(cid:48) e

x(cid:48)(cid:48) os d´ıgitos veriﬁcadores das sequˆencia original e errada, respectivamente. Provemos

que x(cid:48) (cid:54)= x(cid:48)(cid:48), implicando assim na detec¸c˜ao do erro.

Nestas condi¸c˜oes, temos que:

σ(d1) • ... • σi−1(di−1) • σi(di) • σi+1(di+1) • ... • σn−1(dn−1) • x(cid:48) = 0

e

σ(d1) • ... • σi−1(di−1) • σi(dE) • σi+1(di+1) • ... • σn−1(dn−1) • x(cid:48)(cid:48) = 0.

35

Pondo a = σ(d1) • ... • σi−1(di−1) e b = σi+1(di+1) • ... • σn−1(dn−1) para simpliﬁcar a

nota¸c˜ao, temos:

a • σi(di) • b • x(cid:48) = a • σi(dE) • b • x(cid:48)(cid:48) = 0.

(4.4)

Como σi tamb´em ´e uma permuta¸c˜ao de D5 (logo ´e injetiva), temos σi(di) (cid:54)= σi(dE),

e pelo Lema 5:

σi(di)

(cid:54)= σi(dE)

a • σi(di)

(cid:54)= a • σi(dE)

a • σi(di) • b

(cid:54)= a • σi(dE) • b.

Se tiv´essemos x(cid:48) = x(cid:48)(cid:48), ainda pelo Lema 5, ter´ıamos:

a • σi(di) • b • x(cid:48)

(cid:54)= a • σi(dE) • b • x(cid:48)(cid:48),

uma contradi¸c˜ao da igualdade exposta na express˜ao (4.4).

(b) Considere que na transmiss˜ao da sequˆencia original d1d2...di...dn−1 tenha ocorrido

transposi¸c˜ao adjacente ...didi+1... −→ ...di+1di.... Sejam x(cid:48) e x(cid:48)(cid:48) os d´ıgitos veriﬁcadores

das sequˆencia original e errada, respectivamente. Provemos tamb´em que x(cid:48)

(cid:54)= x(cid:48)(cid:48),

implicando assim na detec¸c˜ao do erro.

Nestas condi¸c˜oes, temos que:

σ(d1) • ... • σi(di) • σi+1(di+1) • ... • σn−1(dn−1) • x(cid:48) = 0.

e

σ(d1) • ... • σi(di+1) • σi+1(di) • ... • σn−1(dn−1) • x(cid:48)(cid:48) = 0.

Pondo a = σ(d1) • ... • σi−1(di−1) e b = σi+2(di+2) • ... • σn−1(dn−1), para simpliﬁcar a

nota¸c˜ao, temos:

a • σi(di) • σi+1(di+1) • b • x(cid:48) = a • σi(di+1) • σi+1(di) • b • x(cid:48)(cid:48) = 0.

(4.5)

Se tomarmos m = σi(di) e n = σi(di+1) express˜ao (4.3), que ´e uma das hip´oteses da

proposi¸c˜ao, temos:

m • σ(n)

(cid:54)= n • σ(m)

σi(di) • σ(σi(di+1))

(cid:54)= σi(di+1) • σ(σi(di))

σi(di) • σi+1(di+1)

(cid:54)= σi(di+1) • σi+1(di).

36

Consequentemente, pelo Lema 5:

a • σi(di) • σi+1(di+1)

(cid:54)= a • σi(di+1) • σi+1(di)

a • σi(di) • σi+1(di+1) • b

(cid:54)= a • σi(di+1) • σi+1(di) • b.

Se tiv´essemos x(cid:48) = x(cid:48)(cid:48), ainda pelo Lema 5, ter´ıamos:

a • σi(di) • σi+1(di+1) • b • x(cid:48)

(cid:54)= a • σi(di+1) • σi+1(di) • b • x(cid:48)(cid:48).

uma contradi¸c˜ao da igualdade exposta na express˜ao (4.5).

O m´etodo de Verhoeﬀ consegue detectar tanto erros singulares como erros de trans-

posi¸c˜ao adjacentes, qualidades tamb´em presentes no m´etodo da ISBN; no entanto, o

m´etodo de Verhoeﬀ usa apenas os elementos de Ω10, algo que sob o m´etodo da ISBN n˜ao

´e poss´ıvel por conta da necessidade de um d´ıgito extra.

4.3.4 Aplica¸c˜ao

Segundo N. R. Wagner [7], al´em da eﬁciˆencia plena para erros singulares e erros de trans-

posi¸c˜ao, o m´etodo de Verhoeﬀ detecta 95.555% dos erros gˆemeos e 94.222% das trans-

posi¸c˜oes intercaladas e erros gˆemeos intercalados. Apesar da eﬁciˆencia perante todos

os outros m´etodos citados neste trabalho, ´e raramente usado, sendo muito poucas as

referˆencias a ele na literatura matem´atica. O mais cl´assico exemplo de seu uso (mais

precisamente, de uma variante sua) era a antiga produ¸c˜ao do marco alem˜ao, a moeda que

circulou na Alemanha at´e de 1949 a 2002, antes do advento do Euro. A Universidade de

Coimbra (Portugal), referˆencia em trabalhos sobre c´odigos num´ericos e similares, utiliza

um algoritmo semelhante ao m´etodo de Verhoeﬀ para gerar matr´ıculas de alunos e c´odigos

de componentes curriculares.

Cap´ıtulo 5

Aplica¸c˜ao no Ensino

Neste cap´ıtulo ser´a apresentada uma sugest˜ao de aplica¸c˜ao do conte´udo deste trabalho no

Ensino M´edio (incluindo a modalidade T´ecnica-Proﬁssional). Para tanto, primeiramente

apontaremos motivos para esta abordagem; em seguida, uma breve discuss˜ao sobre pro-

postas de conte´udos n˜ao curriculares na escola. E ﬁnalmente, uma sugest˜ao de aplica¸c˜ao.

5.1 Motiva¸c˜ao

V´arios fatores (educacionais, sociais, cient´ıﬁcos) podem ser usados para justiﬁcar uma

abordagem sobre erros e d´ıgitos veriﬁcadores no Ensino M´edio, dentre os quais destacam-

se trˆes:

1. Legisla¸c˜ao e Cidadania. A legisla¸c˜ao educacional orienta sobre o uso da ma-

tem´atica como ferramenta de cidadania. Os Parˆametros Curriculares Nacionais [10]

trazem em seu texto, como ﬁnalidades do ensino de Matem´atica no n´ıvel m´edio levar

o aluno a (entre outros pontos):

(a) aplicar seus conhecimentos matem´aticos a situa¸c˜oes diversas, utilizando-

os na interpreta¸c˜ao da ciˆencia, na atividade tecnol´ogica e nas atividades

cotidianas.

(b) analisar e valorizar informa¸c˜oes provenientes de diferentes fontes, utili-

zando ferramentas matem´aticas para formar uma opini˜ao pr´opria que lhe

permita expressar-se criticamente sobre problemas da Matem´atica, das

outras ´areas do conhecimento e da atualidade.

37

38

A maior parte da popula¸c˜ao brasileira desconhece a existˆencia dos sistemas de se-

guran¸ca de informa¸c˜oes mantidos pelos governos, reparti¸c˜oes e empresas, desconhe-

cendo tamb´em o signiﬁcado da maioria dos n´umeros sequenciais que o cercam, e a

sua necessidade. Os m´etodos de d´ıgitos veriﬁcadores de sequˆencias num´ericas, por

serem bastante acess´ıveis (est˜ao presentes em documentos, codiﬁca¸c˜ao de produtos,

etc.), fornecem boa ferramenta de introdu¸c˜ao destas ideias no p´ublico geral.

2. A matem´atica precisa ser signiﬁcativa. Existe muitas indaga¸c˜oes dos estudante

pelo o ‘por que’ de muitos conte´udos de matem´atica serem parte do Curr´ıculo do

Ensino M´edio. Muitas vezes o professor argumenta a importˆancia daquele t´opico,

mas n˜ao consegue convencer seu p´ublico. Neste sentido, toda atividade que esclare¸ca

a aplicabilidade de um conte´udo ´e importante.

3. Revela¸c˜ao de Talentos. Nas duas ´ultimas d´ecadas uma grande quantidade de

estudantes com grande potencial matem´atico vˆem sendo revelados no Brasil nas

escolas de educa¸c˜ao b´asica e nas Universidades, a maioria pelos seus resultados em

atividades e projetos (como competi¸c˜oes cient´ıﬁcas locais, OBMEP (Ol´ımpiada Bra-

sileira de Matem´atica das Escolas P´ublicas) e OBM) que rompem com um modelo

arcaico e tradicional de se trabalhar Matem´atica, gerando um ambiente favor´avel a

que alunos com excepcional talento possam demonstr´a-lo. Atividades contextualiza-

das e aplicadas, exatamente por se mostrarem como uma proposta mais interessante

de exposi¸c˜ao de conte´udos, podem quebrar preconceitos e paradigmas pessoais.

5.2 Abordagens

5.2.1 M´etodos pela Aritm´etica Modular

A Teoria das Congruˆencias ´e de extrema importˆancia para a an´alise do poder de detec¸c˜ao

dos m´etodos expostos (cap´ıtulos 3 e 4), principalmente por permitir que provemos que

alguns tipos de erros s˜ao detectados em cada m´etodo, al´em de dar as garantias tanto

da existˆencia de um d´ıgito veriﬁcador quanto da unicidade deste d´ıgito. No entanto, no

contexto de Ensino M´edio, uma abordagem do tema pela Aritm´etica Modular teria como

limita¸c˜ao o fato de que a Teoria de Congruˆencias, de maneira formal, n˜ao faz parte do

curr´ıculo do Ensino M´edio (ver BRASIL [2]).

39

Por outro lado, existe uma grande quantidade de p´aginas na internet que versam o

tema ‘d´ıgito veriﬁcador’. A grande maioria n˜ao adota a teoria de congruˆencia usada neste

trabalho, optando por usar uma esp´ecie de ‘busca manual’ do d´ıgito veriﬁcador, auxiliados

por ferramentas como tabelas, mapas, calculadoras, etc. No exemplo a seguir ilustra-se

um caso destes, onde calcula-se o d´ıgito veriﬁcador de uma sequˆencia pelo EAN-13 sem

uso de congruˆencias.

Exemplo 18. Considere a sequˆencia incompleta de 12 d´ıgitos 785890025126 e calcule-

mos seu d´ıgito veriﬁcador sem usar congruˆencia, pelo m´etodo do EAN-13. Para tanto,

dividiremos este c´alculo em etapas:

1. Adicione todos os d´ıgitos das posi¸c˜oes pares, e multiplique o resultado obtido por 3.

2. Some todos os d´ıgitos das posi¸c˜oes ´ımpares.

3. Some os resultados das etapas 1 e 2.

8 + 8 + 0 + 2 + 1 + 6 = 25

3 · 25 = 75.

7 + 5 + 9 + 0 + 5 + 2 = 28.

75 + 28 = 103.

4. Determine que valor menor que 10, somado ao resultado da etapa 3, gera um

m´ultiplo de 10. Esse valor ´e o d´ıgito veriﬁcador.

O menor m´ultiplo de 10 maior que 103 ´e 110, logo o d´ıgito veriﬁcador da

sequˆencia ´e 110-103 = 7, e a sequˆencia completa ´e 7858900251267.

As etapas 1, 2 e 3 do c´alculo do exemplo anterior equivalem, do ponto de vista pr´atico,

`a montagem e c´alculo de um produto interno, notando que o vetor de pesos do EAN-13

tem todas as suas coordenadas de posi¸c˜ao par iguais a 3, e as coordenadas de posi¸c˜ao

´ımpar iguais a 1. A etapa 4 equivale, por sua vez, a resolver a equa¸c˜ao de congruˆencia

(com m = 10, da´ı a coloca¸c˜ao ‘m´ultiplo de 10’) que se obtˆem quando o c´alculo do d´ıgito

veriﬁcador ´e feito usando a Aritm´etica Modular. As duas maneiras de obter o d´ıgito

veriﬁcador levam naturalmente `a mesma resposta.

Diante destas duas maneiras (teoria das congruˆencias × m´etodo de ‘busca’ ) poss´ıveis

para abordar o tema ‘D´ıgito Veriﬁcador pela Aritm´etica Modular’ no Ensino M´edio, o

professor teria duas op¸c˜oes:

40

1. Usar Teoria das Congruˆencia. Por ser baseado em conceitos matem´aticos ausentes

no Curr´ıculo do Ensino M´edio, uma abordagem neste sentido exigiria do professor,

al´em do dom´ınio do m´etodo, o bom senso sobre se seu alunado tem fundamenta¸c˜ao

matem´atica suﬁciente para compreendˆe-lo durante a atividade na sala de aula, e se

o tempo previsto para esta abordagem seria suﬁciente para sua completa execu¸c˜ao.

2. Usar o m´etodo da ‘busca manual’. O professor, adotando esta op¸c˜ao, teria a vanta-

gem de ter grande referencial dispon´ıvel na internet, de f´acil acesso e compreens˜ao.

A sugest˜ao apresentada na pr´oxima se¸c˜ao foi elaborada conforme esta op¸c˜ao.

5.2.2 M´etodo de Verhoeﬀ

O m´etodo de Verhoeﬀ precisa, para sua compreens˜ao b´asica, de conceitos como per-

muta¸c˜oes do pent´agono, permuta¸c˜ao anti-sim´etrica, grupo, etc., sendo assim bastante

avan¸cado para ser abordado no Ensino M´edio.

5.3 Sugest˜ao de Abordagem

Sugerimos aqui uma atividade sobre o d´ıgito veriﬁcador calculado com Vetor de Pesos,

usando a t´ecnica da ‘busca manual do d´ıgito veriﬁcador’. Para tal, n˜ao se exige do aluno

nenhum conhecimento matem´atico especial. A atividade ´e dividida em 7 etapas.

Etapa 1. Apresenta¸c˜ao da atividade. O professor apresentaria o tema ‘D´ıgito Veri-

ﬁcador’, destacando que ´e este um conceito presente na nossa vida cotidiana (citando

superﬁcialmente v´arios exemplos), e qual a sua principal fun¸c˜ao nas sequˆencia num´ericas:

a detec¸c˜ao de erros de transmiss˜ao.

Etapa 2. O professor apresentaria, rigorosamente, os sistemas que usar´a em sala,

destacando um pouco de seu uso, contexto hist´orico e regras de constru¸c˜ao (o que signiﬁca

cada d´ıgito ou grupo de d´ıgitos da sequˆencia, e qual seu vetor de pesos). Ele dividiria em

seguida sua turma em grupos e daria a cada um sistema diferente.

41

Etapa 3. Mostra. O professor calcularia (usando o procedimento da ‘busca do d´ıgito’,

tal como no Exemplo 18), com o acompanhamento da turma, o d´ıgito veriﬁcador de um

exemplo de sequˆencia num´erica pertencente a um dos sistemas escolhidos (pode-se at´e

fazer mais de um exemplo de mais de um sistema), como meio de garantir aos alunos que

o procedimento executado ali ´e o v´alido.

Etapa 4. Os alunos fariam a veriﬁca¸c˜ao do d´ıgito veriﬁcador de um exemplo real. Se,

por exemplo, um grupo tiver ﬁcado com o EAN-13, bastaria o grupo escolher um produto

de uso cotidiano (caderno, caixinha de achocolatado, etc.) e fazer a veriﬁca¸c˜ao. Um grupo

que tenha ﬁcado com CPF poderia fazer a veriﬁca¸c˜ao com o documento de um de seus

integrantes.

Etapa 5. O professor introduziria, nesta etapa, a discuss˜ao sobre erros, focando sua

exposi¸c˜ao nos dois tipos de erros mais frequentes conforme a tabela 1.1 (p´agina 02), os

erros singulares e os erros de transposi¸c˜ao adjacente. Em seguida o professor determinaria

que cada grupo cometesse os dois erros na sequˆencia que avaliou, em dois casos diferentes,

gerando duas sequˆencias-erro.

Etapa 6. Os alunos fariam a reveriﬁca¸c˜ao do d´ıgito veriﬁcador em suas sequˆencias-erro,

tal como foi feito na etapa 4. Neste ponto, o professor deﬁniria “detec¸c˜ao”: se o d´ıgito

veriﬁcador da sequˆencia-erro coincidir com o d´ıgito original, o erro n˜ao foi detectado;

analogamente, se o d´ıgito n˜ao coincidir, o erro foi detectado.

Etapa 7. Conclus˜ao da atividade. O professor concluiria a atividade destacando que

o m´etodo de detec¸c˜ao de erros analisado tem um ‘poder’, e esse poder ´e avaliado pelos

tipos de erros que consegue detectar.

AUTONOMIA E AVALIAC¸ ˜AO

O professor, dentro de sua autonomia de trabalho em sala de aula, de particularidades

pessoais e proﬁssionais, e das condi¸c˜oes de seu p´ublico, pode alterar livremente as etapas

apresentadas, unindo duas ou mais, ou criando outras etapas de execu¸c˜ao. A avalia¸c˜ao

da participa¸c˜ao dos alunos na atividade tamb´em ﬁca a cargo do professor e dos crit´erios

que ele estabelecer para ela.

Conclus˜ao

A sociedade humana ´e cada vez mais dependente de seus sistemas, dos mais simples e

primordiais, como os sistemas de escrita e numera¸c˜ao, aos mais avan¸cados e modernos,

como os sistemas de informa¸c˜ao que conectam todas as partes do mundo. Este trabalho

visou discutir com um pouco mais de detalhe os m´etodos mais elementares de detec¸c˜ao de

erros na transmiss˜ao de sequˆencias num´ericas, trazendo exemplos do cotidiano e discutindo

a eﬁciˆencia matem´atica de cada um (pela quantidade de tipos de erros detect´aveis e sua

frequˆencia total), assim como algumas de suas aplica¸c˜oes e limita¸c˜oes.

Inicialmente foram expostos alguns resultados matem´aticos de ´algebra e aritm´etica

que fundamentam o funcionamento dos m´etodos de detec¸c˜ao de erros e a an´alise de

sua eﬁciˆencia. Em seguida, estes foram expostos de maneira objetiva, ressaltando suas

vantagens e limita¸c˜oes e sua aplica¸c˜ao com exemplos do cotidiano. Finalmente, foram

propostas duas abordagens do tema para o Ensino M´edio, citando motivos para adot´a-las

e maneiras de execut´a-las.

Os trˆes m´etodos expostos neste trabalho tˆem limita¸c˜oes e vantagens. O m´etodo de

Verhoeﬀ ´e bastante eﬁciente, apesar do rigor computacional. O m´etodo por vetor de pesos

(da Aritm´etica Modular) tˆem a desvantagem de (para uma maior eﬁciˆencia) precisar estar

usando o valor m igual a 11 ou maior, e uma vez que as equa¸c˜oes de congruˆencia podem

ter solu¸c˜ao fora de Ω10, exige-se ou a ado¸c˜ao de s´ımbolos adicionais, ou a atribui¸c˜ao de

valores de Ω10 como d´ıgito veriﬁcador, sendo que estas atribui¸c˜oes podem reduzir a pr´opria

eﬁciˆencia do m´etodo perante alguns tipos de erros. Os m´etodos de permuta¸c˜ao (ainda

pela Aritm´etica Modular), por sua grande variabilidade, tem de ser analisados caso a

caso.

42

Referˆencias Bibliogr´aﬁcas

[1] Coutinho, S. C. N´umeros Inteiros e Criptograﬁa RSA. Cole¸c˜ao Matem´atica e

Aplica¸c˜oes, IMPA, Rio de Janeiro, 2014.

[2] BRASIL. Secretaria de Educa¸c˜ao B´asica. Minist´erio da Educa¸c˜ao e Cul-

tura. Orienta¸c˜oes Curriculares para o Ensino M´edio. Bras´ılia, 2006. Dispon´ıvel

em:

portal.mec.gov.br/seb/arquivos/pdf/book volume 01 internet.pdf. Acessado

em: 25/08/2017.

[3] Data Genetics. Credit Cards. Acessado em:

24/08/2017,

e dispon´ıvel em:

http://www.datagenetics.com/blog/july42013/index.html.

[4] Gon¸calves, Adilson. Introdu¸c˜ao `a ´Algebra. Ed. 3. 194 pp. Rio de Janeiro: Instituto

de Matem´atica Pura e Aplicada, 1995

[5] Hefez, Abramo.- Aritm´etica. Cole¸c˜ao Profmat, Rio de Janeiro, 2014.

[6] International Organization for Standardization. ISO/IEC 7812-1:2015. Dispon´ıvel

em: https://www.iso.org/standard/66011.html. Acesso em: 07 de abril de 2017.

[7] N. R. Wagner. The Laws of Cryptography With Java Code. [Online]. Dispon´ıvel em:

http://www.cs.utsa.edu/ wagner/lawsbookcolor/laws.pdf. Acesso em: 07/04/2017

[8] Picado, Jorge. A ´algebra dos sistemas de identiﬁca¸c˜ao: da aritm´etica modular aos

grupos diedrais. Boeltim da Sociedade Portuguesa de Matem´atica, 2011.

43

[9] Polcino Milies, C. F. A matem´atica dos c´odigos de barras. Programa de Inicia¸c˜ao

Cient´ıﬁca da OBMEP. Rio de Janeiro, pgs. 133-183.

44

[10] Secretaria de Educa¸c˜ao. Parˆametros Curriculares Nacionais: Matem´atica. MEC,

Bras´ılia, 1998.

[11] Verhoeﬀ, J. Error Detecting Decimal Codes. Mathematical Centre, Amsterdam, 1969.

