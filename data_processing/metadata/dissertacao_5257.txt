Hanri Neves Pereira Junior 

Matemática e programação: Uma nova 
abordagem de ensino 

Dissertação de Mestrado 
requisito  parcial  para 
Dissertação  apresentada  como 
obtenção do grau de Mestre em Matemática pelo Programa 
de  Pós-graduação  em  Matemática,  do  Departamento  de 
Matemática da PUC-Rio 

Orientadora: Profa. Renata Martins da Rosa  

Rio de Janeiro 
Setembro de 2021

 
 
 
 
 
 
  
 
 
 
 
 
 
Hanri Neves Pereira Junior 
Matemática e programação: Uma nova abordagem de 
ensino 

Dissertação apresentada como requisito parcial para obtenção do grau de 
Mestre  pelo  Programa  de  Pós-graduação  em  matemática,  do 
Departamento  de  matemática  da  PUC-Rio.  Aprovada  pela  comissão 
examinadora abaixo. 

Profa. Renata Martins da Rosa 
Orientadora  
Departamento de Matemática – PUC-Rio 

Prof. Eduardo Barbosa Pinheiro 
Departamento de Matemática – PUC-Rio 

Prof. Wilson Reis de Souza Neto 
Departamento de Matemática – PUC-Rio 

Profa. Emília Carolina Santana Teixeira Alves  
Departamento de Matemática Aplicada – UFF 

Rio de Janeiro, 30 de setembro de 2021

 
 
 
 
 
 
 
 
 
 
Todos  os  direitos  reservados.  A  reprodução,  total  ou  parcial  do 
trabalho, é proibida sem a autorização da universidade, da autora e 
do orientador. 

Hanri Neves Pereira Junior 

Graduou-se em matemática pela Universidade do Estado do Rio de 
Janeiro em 2011. Cursou Ciências aturais na Universidade Federal 
do  Rio  de  Janeiro  no  ano  de  2016,  não  concluindo  o  curso.  É 
professor da rede pública e particular de ensino. 

                                                                                                  Ficha catalográfica 

Pereira Junior, Hanri Neves 

     Matemática  e  programação  :  uma  nova  abordagem  de  ensino  / 
Hanri Neves Pereira Junior ; orientadora: Renata Martins da Rosa. – 
2021. 
     41 f. : il. color. ; 30 cm 

     Dissertação  (mestrado)–Pontifícia  Universidade  Católica  do  Rio 
de Janeiro, Departamento de Matemática, 2021. 
     Inclui bibliografia 

     1. Matemática – Teses. 2. Ensino de matemática. 3. Pensamento 
computacional.  4.  Programação.  I.  Rosa,  Renata  Martins  da.  II. 
Pontifícia  Universidade  Católica  do  Rio  de  Janeiro.  Departamento 
de Matemática. III. Título. 

                                                                                                                 CDD: 510 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                                                                                          
 
 
 
 
 
 
Para minha filha Maria Isabel

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Agradecimentos 

A minha orientadora Professora Renata Martins da Rosa, pelo estimulo, paciência 
e parceria quando tudo parecia impossível. 

A Capes, a SBM e a PUC-Rio, Pelos auxílios concedidos, sem os quais este 
trabalho não poderia ser realizado. 

O presente trabalho foi realizado com apoio da Coordenação de Aperfeiçoamento 
de Pessoal de Nível Superior – Brasil (CAPES) - Código de Financiamento 001 

Ao professor Wilson pela ajuda e troca de ideias. 

Aos meus colegas da PUC-Rio. 

Aos professores que participaram da banca examinadora. 

A todos os professores e funcionários do departamento pelos ensinamentos e pela 
ajuda. 

A professora Christine pela paciência e perseverança 

Aos meus pais pela educação e carinho. 

A todos os amigos e familiares que sempre me incentivaram e me estimularam de 
alguma forma 

A minha companheira Anna Carolina pelo incentivo e apoio.  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Resumo 

Pereira Junior, Hanri Neves. Matemática e Programação: Uma nova 
abordagem de ensino. Rio de Janeiro, 2021. XXp. Dissertação de mestrado – 
Departamento de matemática, Pontifícia Universidade Católica do Rio de Janeiro. 

Nas últimas décadas passamos por uma grande (r)evolução 

tecnológica, portanto, é indispensável que nossa sociedade tenha conhecimentos 

tecnológicos, dentre esses, o pensamento computacional e a linguagem 

computacional. Parte desse crescimento tecnológico vem da necessidade de 

resolução de problemas, muito deles ligados à matemática. No Brasil, temos a 

BNCC, que propõe relacionar resolução de problemas e pensamento 

computacional. Portanto esta pesquisa tem como objetivo trazer uma conexão 

entre essas duas áreas a fim de atender as demandas do professor, que pode 

precisar de uma ajuda na criação de uma aula envolvendo programação e 

matemática, e do aluno, que por sua vez precisa estar familiarizado com novas 

tecnologias que o mercado de trabalho exige. Propomos atividades com o uso de 

programas com linguagens computacionais a fim de estimular a discussão e 

inserção do pensamento computacional através da matemática nos currículos 

escolares. E por fim, este trabalho apresenta os resultados das atividades 

propostas, com os tópicos a serem considerados no que diz respeito ao PC e a 

matemática aplicada no ensino básico.  

Palavras-chave 

Ensino de matemática; Pensamento computacional; Programação. 

 
 
 
 
 
 
 
 
 
Abstract    

Pereira Junior, Hanri Neves. Matemática e Programação: Uma nova 
abordagem de ensino. Rio de Janeiro, 2021. XXp. Dissertação de mestrado – 
Departamento de matemática, Pontifícia Universidade Católica do Rio de Janeiro. 

In recent decades we have gone through a great technological (r)evolution, 

therefore, it is essential that our society has technological knowledge, among 

these, computational thinking and computational language. Part of this 

technological growth comes from the need to solve problems, many of them 

linked to mathematics. In Brazil, we have the BNCC, which proposes to relate 

problem solving and computational thinking. Therefore, this research aims to 

bring a connection between these two areas in order to meet the demands of the 

teacher, who may need help in creating a class involving programming and 

mathematics, and the student, who in turn needs to be familiar with new 

technologies that the labor market demands. We propose activities with the use of 

programs with computational languages in order to stimulate the discussion and 

insertion of computational thinking through mathematics in school curricula. 

Finally, this work presents the results of the proposed activities, with topics to be 

considered with regard to computational thinking and applied mathematics in 

basic education. 

Keywords 

Math teaching; computational thinking; programming. 

 
 
 
 
 
 
 
 
 
 
Sumário 

1. 

Introdução .......................................................................................... 10 

2.  Ensino ................................................................................................ 12 

2.1.  Pensamento Computacional e a Matemática .............................. 12 

2.2.  A Base Nacional Comum Curricular (BNCC) .............................. 13 

2.3. 

Interdisciplinaridade e Metodologia ............................................. 14 

3.  Linguagem e Programação ................................................................ 15 

3.1.  SCRATCH ................................................................................... 15 

3.2.  Blockly ......................................................................................... 16 

3.3.  Sonic Pi ....................................................................................... 17 

4.  Sobre as Atividades Utilizando o Sonic Pi ......................................... 20 

4.1.  Um pouco de teoria musical ........................................................ 20 

4.2.  Definição de Uma Função ........................................................... 23 

4.3.  Relato da Experiência em Sala de Aula ...................................... 23 

4.4.  Mais Atividades ........................................................................... 28 

5.  Conclusão e Considerações Finais ................................................... 32 

6.    Referências Bibliográficas..................................................................38 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Lista de figuras 
Figura 3.1: Ao executar o bloco, o gato da três passos e gira 90º no sentido horário 
Figura 3.2: Blockly games 
Figura 3.3: Interface Sonic Pi 
Figura 3.4: Morzart Requiem in D minor no Sonic Pi 
Figura 4.1: Relação entre as notas e a reprodução numérica do Sonic Pi 
Figura 4.2: Replica do computador Colossus. 
Figura 4.3: Gráfico da função dada por f(x)= - x² + 20 
Figura 4.4: Registro das notas tocadas pelo Sonic Pi 

Lista de código 
Código 4.1: https://www.youtube.com/watch?v=bMbG5C1SSQI (0:00) 
Código 4.2: https://www.youtube.com/watch?v=bMbG5C1SSQI (0:16) 
Código 4.3: https://www.youtube.com/watch?v=bMbG5C1SSQI (0:31) 
Código 4.4: https://www.youtube.com/watch?v=bMbG5C1SSQI (0:45) 
Código 4.5: https://www.youtube.com/watch?v=bMbG5C1SSQI (1:07) 
Código 4.6: https://www.youtube.com/watch?v=bMbG5C1SSQI (1:17) 
Código 4.7: https://www.youtube.com/watch?v=bMbG5C1SSQI (1:27) 
Código 4.8: https://www.youtube.com/watch?v=bMbG5C1SSQI (1:42) 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
10 

1.  Introdução 

      Nas últimas décadas vivemos por uma grande (r)evolução tecnológica, e tendo 
isso  como  um  fato,  é  indispensável  que  nossa  sociedade  tenha  conhecimentos 
tecnológicos,  dentre  esses,  o  pensamento  computacional  e  a 
linguagem 
computacional.  Países  e  cidades  do  mundo  começaram  a  tornar  obrigatório  o 
ensino de programação nas escolas, colocando em seus currículos metas para que 
a  crianças  do  ensino  básico  desenvolvam  habilidades  para  que  resolvam 
problemas  utilizando  meios  digitais.  As  novas  tecnologias  e  o  aumento 
exponencial da informação levam a uma nova organização de trabalho (Mercado, 
L.P.L., 1998).  
     A principal motivação para desenvolver essa pesquisa foi, ao longo dos anos, 
perceber  que  talvez  os  professores  não  acompanhem  assuntos  como  linguagens 
tecnológicas,  e  isso  talvez  se  deve  até  o  momento  a  não  inclusão  de  assuntos 
tecnológicos ao currículo escolar.  
    Na tentativa de fugir de aulas tradicionalmente teóricas, há tempos atrás numa 
escola  pública,  foi  realizado  um  pequeno  experimento  com  alunos  do  primeiro 
ano  do  ensino  médio,  que  envolvia  música,  tecnologia  e  matemática.  Utilizando 
um software que retorna funções com sons e frequência. Pois bem, esse pequeno 
experimento  não deu muito certo, pois  a escola em  questão não tinha o material 
mínimo necessário para realizar tal tarefa, e agora retornando a academia me sinto 
motivado  a  realizar  esse  experimento.  Sinto  que  o  professor,  nesse  contexto, 
precisa 
inovar  e  renovar,  permitindo  o  desenvolvimento  de  ambientes 
tecnológicos, despertando a curiosidade em novas linguagens e saberes. Portanto, 
faço  deste  trabalho  uma  alternativa  para  o  despertar  da  curiosidade,  a  partir  de 
assuntos que permeiam a matemática, a programação e a música. 
    O  processo  de  aprendizagem  de  programas  e  sistemas  novos  não  só  para 
alunos, mas professores e trabalhadores (não necessariamente ligados ao ensino). 
Sempre  temos  que  aprender  novas  funções  de  um  celular  novo,  update  de 
computador, uso de sites de banco, preenchimento de formulários on line. Utilizar 
o programa chamado Sonic Pi, feito para músicos e programadores, é uma ótima 
maneira de aprender programação e ao mesmo tempo criar músicas, sons e efeitos 
sonoros.  Assim  como  qualquer 
tem  suas  particularidades  e 
potencialidades  que  podem  ser  exploradas,  ao  utilizar  o  Sonic  Pi,  o  computador 
pode  ter  essa  função  de  um  instrumento  musical,  e  é  a  partir  desse  novo 
instrumento  musical  que  proponho  a  relação  entre  a  música,  programação  e 
matemática.  Acredito  que  estimulando  a  curiosidade  dos  alunos,  é  possível 
ensinar  matemática,  música  e  programação.  Além  disso,  relacionar  som  com 
matemática pode ajudar a tornar a aula de matemática mais inclusiva. 
    Como é imprescindível trazer conceitos computacionais para a educação básica, 
analiso a Base Nacional Comum Curricular (BNCC), que do ensino fundamental 
ao ensino médio estabelece competências e habilidades matemáticas utilizando as 
TIC (Tecnologia da Informação e Comunicação). Fazendo com que a computação 
se torne também uma ferramenta matemática. Podemos dizer então que a BNCC 
norteia algo relativo à resolução de problemas e programação. 
     Neste  trabalho  proponho  atividades  usando  o  programa  Sonic  Pi.  Feito 
algumas das atividades com alunos do ensino médio do Colégio Estadual Coronel 

instrumento 

 
 
 
Sergio José do Amaral, Situado no bairro de Suruí, no município de Magé – RJ. 
No capítulo 4 onde é apresentado um relato da experiência. 

11 

 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
12 

2.  Ensino 

2.1. Pensamento Computacional e a Matemática 

      A  primeira  definição  de  pensamento  computacional,  que  atrela  um  conjunto 
de  habilidades  e  competências  à  ciência  da  computação  no  qual  os  estudantes 
deveriam obter desde os primeiros anos escolares, foi proposta por Wing (2006). 
Segundo  ela,  o  pensamento  computacional  é  um  modo  de  pensar  humano, 
portanto,  podemos  considerar  o  pensamento  computacional  uma  habilidade 
intelectual básica, como ler, escrever e realizar operações matemáticas. 
     Num  curso  de  matemática,  o  aluno  desenvolve:  construções  de  algoritmos, 
interpretação e representação de dados, podemos então de certa maneira, inserir o 
pensamento  computacional  na  educação  básica  através  da  disciplina  de 
matemática e, como veremos a frente, a BNCC garante a inserção. 
     Os  conhecimentos  em  computação  são  tão  importantes  para  a  vida  na 
sociedade  contemporânea  quanto  os  conhecimentos  básicos  de  matemática, 
filosofia,  física, dentre outras, assim  como  contar, abstrair, pensar, relacionar ou 
medir. Desta forma, torna-se fundamental tanto no presente quanto no futuro que 
computação. 
todos  os 
[BRACKMANN, CHRISTIAN PUHLMANN, 2017]. 
     Existem os chamados “Quatro pilares do pensamento computacional”:  

tenham  conhecimentos  básicos  de 

indivíduos 

  Decomposição:  Consiste  em  pegar  um  problema  e  fragmentá-lo  e  em 

partes menores que podem ser resolvidas separadamente. 

  Reconhecimento de padrões: Observar padrões em cada fragmento. 

  Abstração: Focar nos detalhes que ainda não foram vistos. 

  Algoritmo:  São  as  instruções,  ou  regras,  que  podem  ser  criadas  a  fim  de 

resolver o problema. 

     Tendo em vista todos processos de resolução de problemas matemáticos, temos 
a  modelagem  matemática,  esta  tendência  pode  ser  utilizada  como  importante 
recurso nos processos de ensino e de aprendizagem por possibilitar o tratamento 
de  conteúdos  matemáticos  por  meio  da  problematização  e  modelação  de 
fenômenos  reais  e  sociais  pelos  estudantes.  Devemos  fazer  com  que  o  método 
tenha  sentido  para  o  aluno  e  que  não  seja  mais  um  conteúdo  com  o  qual  ele 
necessite  “aprender”  apenas  para  a  aprovação.  D’Ambrósio  (2005)  afirma  que 
contextualizar a matemática é  essencial para todos, o autor utiliza o exemplo da 
relação de “Os Elementos” de Euclides com o panorama cultural da Grécia Antiga 
como  argumento  para  exemplificar  o  objetivo  principal  da  Matemática,  que  é  a 
produção  de  conhecimento  e  também  como  comparativo  da  produção  de 
conhecimento  científico,  a  qual  já  não  ocorre  dentro  do  contexto  educacional 
devido  às  técnicas  de  reprodução  do  conhecimento  matemático  acumulado 
historicamente.  
     De acordo com Burak (1992), o ensino da matemática, na maioria das escolas, 
com  raras  exceções,  enfatiza  em  demasia  as  regras,  a  memorização  para  as 

 
 
 
 
13 

respostas  às  questões  matemáticas.  Observamos  desde  as  séries  iniciais  que 
exercícios  relativos  a  um  determinado  conteúdo  são  padronizados  e  repetitivos, 
sendo  utilizados  certos  artifícios  de  mnemônica.  A  prática  educativa,  no  caso, 
envolve apenas o armazenamento dos fatos na memória. 
     Não  é  demais  destacar  que,  também  no  Ensino  Médio,  os  estudantes  devem 
desenvolver  e  mobilizar  habilidades  que  servirão  para  resolver  problemas  ao 
longo  de  sua  vida  –  por  isso,  as  situações  propostas  devem  ter  significado  real 
para  eles.  Nesse  sentido,  os  problemas  cotidianos  têm  papel  fundamental  na 
escola para o aprendizado e a aplicação de conceitos matemáticos, considerando 
que o cotidiano não se refere apenas às atividades do dia a dia dos estudantes, mas 
também às questões da comunidade mais ampla e do mundo do trabalho (BNCC, 
2018). Também se evidencia como a modelagem pode corroborar com as aulas de 
matemática e favorecer  a aprendizagem  estabelecendo relações  entre o conteúdo 
aprendido em sala de aula com o contexto social no qual os alunos estão inseridos 
promovendo assim o Letramento Matemático. 

2.2. A Base Nacional Comum Curricular (BNCC) 

A BNCC é um documento de caráter normativo que norteia os currículos dos 
sistemas  público  e  privado  do  ensino  básico  no  Brasil,  conforme  diz  a  Lei  de 
Diretrizes e Bases Da Educação Nacional (LDB, Lei nº 9,934/1996). 

No  que  diz  respeito  a  inserção  de  tecnologias  já  no  ensino  fundamental,  na 
BNCC  temos  o  seguinte  trecho:  “O  Ensino  Fundamental  deve  ter  compromisso 
com  o  desenvolvimento  do 
letramento  matemático,  definido  como  as 
competências  e  habilidades  de  raciocinar,  representar,  comunicar  e  argumentar 
matematicamente,  de  modo  a  favorecer  o  estabelecimento  de  conjecturas,  a 
formulação e a resolução de problemas em uma variedade de contextos, utilizando 
conceitos,  procedimentos,  fatos  e  ferramentas  matemáticas.”.  Levando  em 
consideração  que  o  Pensamento  Matemático  é  do  tipo  que  envolve  o  raciocínio 
lógico, e nesse contexto, o pensamento computacional e a modelagem matemática 
aparecem como uma forma de resolver problemas e ajudar o desenvolvimento do 
raciocínio lógico, podemos dizer que a computação se torna uma das ferramentas 
matemáticas,  que  é  parte  das  competências  específicas  da  BNCC.  O  ensino  de 
conceitos  básicos  de  computação  nas  escolas  é  fundamental,  assim  como  a  sua 
inserção  no  atual  currículo  brasileiro  por  meio  de  políticas  nacionais, 
possibilitando  a  formação  de  cidadãos  capazes  de  viverem  em  uma  sociedade 
globalizada. (FIORELLI SILVA et al. 2020). 

Já no ensino médio, a BNCC propõe o uso de calculadoras e planilhas digitais. 
Fala-se  muito  da  importância  do  recurso  a  tecnologias  digitais  para  dar 
continuidade  ao  pensamento  computacional  visto  no  ensino  fundamental.  O 
processo  de investigação, de construção de modelos  matemáticos e de resolução 
de problemas é uma habilidade sempre tocada. A competência 5.2 é muito clara 
também quando diz: “A importância do recurso a tecnologias digitais tanto para a 
investigação  matemática  como  para  dar  continuidade  ao  desenvolvimento  do 
pensamento  computacional”.  Percebe-se  que  não  há  um  consenso  em  relação  a 
metodologias  e  nem  expectativas  para  atender  as  demandas  dos  profissionais  da 
educação, uma das propostas possíveis seria talvez pesquisar sobre a possibilidade 
de criar atividades onde seja possível universalizar o pensamento computacional, 
levanto  atividades,  como  a  computação  desplugada,  onde  não  exista  talvez 

 
 
 
14 

dispositivos  eletrônicos.  A  computação  desplugada  é  uma  técnica  que  tem  por 
intuito  ensinar  os  fundamentos  da  ciência  da  computação  de  forma  simples  e 
lúdica sem o uso de computadores, que ainda pode ser aplicado a qualquer pessoa 
de  diferentes  idades  independente  de  recursos  com  hardware  e/ou  software, 
agindo de maneira eficaz e eficiente, (MACHADO et al., 2010). 

Existe  todo  um  capítulo  no  ensino  médio  da  BNCC  voltado  para  as 
tecnologias  digitais:  “pensamento  computacional  envolve  as  capacidades  de 
compreender,  analisar,  definir,  modelar,  resolver,  comparar  e  automatizar 
problemas  e  suas  soluções,  de  forma  metódica  e  sistemática,  por  meio  do 
desenvolvimento de algoritmos”. 
   Quando se trata das competências e habilidades pautadas pela BNCC, sempre há 
discussão das  resoluções de problemas, no que tange a identificação de aspectos 
consensuais ou não dos problemas investigados, além das propostas de interpretar, 
construir modelos e resolver problemas dos mais diversos  contextos  construindo 
sempre  argumentos  sólidos.  Estamos  falando,  mesmo  que  em  outras  palavras, 
sobre a modelagem matemática.  

2.3. Interdisciplinaridade e Metodologia 

      O  uso  de  tecnologia  por  si  só  não  é  o  suficiente,  é  preciso  desenvolver  o 
pensamento  matemático  através  dela.  De  acordo  com  o  dicionário  Houaiss  da 
língua  portuguesa,  a  interdisciplinaridade  é  “algo  que  estabelece  relação  entre 
duas ou mais disciplinas ou ramos de conhecimento” ou “o que é comum em duas 
ou mais disciplinas”. Utilizaremos a matemática, o pensamento computacional e a 
música de forma interdisciplinar, de modo que desperte a curiosidade no aluno.  
    O  foco  deste  trabalho  está  na  forma  de  apresentar  essa  interdisciplinaridade, 
analisando  sob  a  ótica  de  uma  pedagogia  que  encara  a  aprendizagem  como  um 
processo  de  construção  do  conhecimento.  A  BNCC  quando  define  as 
competências  gerais  diz:  “Exercitar  a  curiosidade  intelectual  e  recorrer  a 
abordagem  própria  da  ciência,  incluindo  a  investigação,  a  reflexão,  a  analise 
crítica,  a  imaginação  e  a  criatividade,  para  investigar  causas,  elaborar  e  testar 
hipóteses, formular e resolver problemas e criar soluções (inclusive tecnológicas) 
com base no conhecimento das diferentes áreas”. E a partir da construção de uma 
atividade  experimental,  tátil  e  com  conteúdos  interdisciplinares,  podemos 
conseguir  atrair  a  atenção  e  despertar  a  curiosidade  do  aluno.  Programas 
interativos  vão  além  do  entretenimento,  são  ótimas  ferramentas  de  ensino-
aprendizagem.  
    A 
teoria  dos  Registros  de  Representação  Semiótica  na  matemática, 
desenvolvida por Duval, diz que é necessário mobilizar, simultaneamente, o maior 
representações  semióticas  de  um  mesmo  conceito  para  o 
número  de 
desenvolvimento  do  pensamento  matemático. 
  Duval  (2003)  agrupa  as 
representações  nos  seguintes  grupos:  linguagem  natural,  sistemas  de  escrita, 
figuras  geométricas  e  gráficos.    Neste  trabalho,  apresento  experimentos  na 
grupos. 
tentativa 

representação 

acrescentar 

sonora 

esses 

de 

a 

a 

 
 
 
15 

3.  Linguagem e Programação  

         Assim que as primeiras linguagens modernas de programação começaram a 
surgir (década de 1940), tínhamos apenas códigos matemáticos, com o passar dos 
anos foram surgindo dezenas de linguagens, do ENIAC Coding System em 1943, 
até  a  Kotlin  em  2016.  E  continuam  surgindo  novas  linguagens.  Algumas  mais 
fáceis  outras  complexas,  com  uma  determinada  linguagem  para  o  um  tipo 
específico de problema, ou seja, a escolha da linguagem está diretamente atrelada 
a um tipo de problema que queremos resolver.  

3.1. SCRATCH 

Na  educação  básica  muito  se  usa  o  SCRATCH,  uma  linguagem  de 

programação  visual,  que  são  recursos  que  buscam  apoiar  a  construção  e  a 

interpretação  de  programas  de  computador,  desenvolvida  no  Massachusetts 

Institute Of Technology  (MIT). No SCRATCH não é necessário  criar ou  digitar 

nenhum  comando  complicado,  você  apenas  conecta  blocos  gráficos  para  criar 

programas.  

 
 
 
 
 
 
 
 
16 

Figura 3.1: Ao executar o bloco, o gato da três passos e gira 90º no sentido 

horário 

O gato na figura 3.1 é chamado de script, e esses scripts obedecem a um 
conjunto de instruções que o usuário atribui. E assim, como podemos move-los, 
podemos também atribuir outras funções, como repetir frases, trocar roupas, 
realizar operações matemáticas e outras. 

3.2. Blockly 

Blockly  é  uma  biblioteca  que  adiciona  um  editor  de  código  visual  a 

aplicativos  da  web  e  móveis.  O  editor  Blockly  usa  blocos  gráficos  interligados 

para representar conceitos de código como variáveis, expressões lógicas, loops e 

muito mais. Ele permite que os usuários apliquem os princípios de programação 

sem se preocupar com a sintaxe ou a intimidação de um cursor piscando na linha 

de  comando.  Utilizam  elementos  gráficos  como  blocos  encaixáveis  ou 

fluxogramas  de  componentes  conectáveis  para  representar 

instruções  de 

linguagens de programação. Estas metáforas visuais buscam aproximar conceitos 

de  linguagens  de  programação  a  atividades  familiares  aos  usuários.  Reduzem, 

dessa maneira, a carga cognitiva sobre os alunos, contribuindo para a construção 

de projetos significativos (PASTERNAK, 2009). 

 
         
 
 
 
17 

Figura 3.2: Blockly games 

Na  figura  3.2,  temos  o  Blockly  games,  que  consistem  em  resolver 
pequenos problemas, juntando os blocos e assim fazendo com que o nosso script 
se mova na linha vermelha ate o ponto de chegada. 

3.3. Sonic Pi 

O  Sonic  Pi  é  um  programa  livre  e  gratuito,  desenvolvido  para  promover  a 

programação  e  a  música.  O  programa  foi  criado  por  Sam  Aaron,  pesquisador  e 

professor  da  University  of  Cambrige  em  colaboração  com  a  fundação 

RaspberryPi. Sonic Pi é uma ótima forma de introduzir noções de programação e 

música. A estrutura do  Sonic Pi  é baseada na linguagem  Ruby, desenvolvida no 

Japão em 1995, por Yukihiro "Matz" Matsumoto, para ser usada como linguagem 

de  script.  Sua  estrutura  utiliza a  plataforma  de  código  livre  de  processamento 

sonoro  o  sintetizador  Supercollider12,  que 

também pode  ser  usado  para 

performances ao vivo. Sua estrutura permite que o usuário mude os parâmetros e 

execute as mudanças sem a necessidade de interrupção do processamento sonoro. 

 A  entrada  de  dados  é  feita  através  de  linhas  de  códigos  que  quando 

executados  podem  representar  uma  nota  musical,  um  sintetizador  ou  algum tipo 

de efeito sonoro. Abaixo temos a imagem da interface do Sonic Pi: 

 
 
 
 
 
 
18 

Figura 3.3: Interface Sonic Pi 

É  um  ambiente  de  codificação  ao  vivo,  baseado  originalmente  projetado 

para dar suporte a aulas de computação e música nas escolas, feito para uma nova 

geração  de  músicos,  simples  de  aprender,  poderoso  o  suficiente  para 

apresentações  ao  vivo  e  gratuito  para  download.  Ele  é  uma  ótima  maneira  de 

aprender programação e ao mesmo tempo criar música. Sua simplicidade o torna 

um  programa  inteligente,  eficiente  e  fácil  de  usar.  É  voltado  tanto  para  jovens 

quanto  para  músicos  experientes,  curiosos,  experts  ou  interessados  em  criar 

música através de códigos. 

Precisamos de basicamente dois comandos: 

  Play – O comando que emite o som; 

  Sleep – O tempo que você irá esperar ate emitir o próximo som; 

  Sample – É uma biblioteca onde existem uma lista de sons, inclusive 

instrumentos  musicais.  Existe  também  a  possibilidade  de  você 

gravar um som e alimentar essa biblioteca. 

Se usarmos o play seguido de um número, o programa produz um beep. Os 

números  estão  relaciona  notas  de  um  piano  de  acordo  com  o  protocolo  MIDI 
(Musical Instrument Digital Interface).1  

Na figura 3.3, por  exemplo, é tocado por 5 vezes num  intervalo  de meio 

segundo uma marcação e bateria, e logo depois toca por 3 vezes num intervalo de 

1 segundo um dos pratos da bateria. 

1  MIDI  é  um  padrão  de  interconexão  física  criado  em  1992  por  um  grupo  de  fabricantes  de 
sintetizadores  japoneses  e  americanos  para  facilitar  a  comunicação  entre  instrumentos  musicais 
eletrônicos, computadores e dispositivos relacionados.  

 
 
                                                 
Temos criações mais complexas como a reprodução de Morzart Requiem 

in D minor. 

19 

Figura 3.4: Mozart Requiem in D minor através do Sonic Pi 

 (acessado dia 24/09/2021) 

https://www.youtube.com/watch?v=6Q0vgcNcsdg&ab_channel=rbn1tube. 

 
 
 
 
20 

4.  Sobre as Atividades Utilizando o Sonic Pi 

4.1. Um pouco de teoria musical 

De acordo com Martineau (MARTINEAU, 2014), quando a música se une 

à linguagem, o que é falado torna-se canção, elevando as intenções e pedindo que 

escutemos  mais  profundamente,  tornando  sagrado  o  que  é  profano.  A  música 

conforta a alma. 

Podemos  citar  como  as  principais  partes  que  constituem  a  música  são: 

Melodia  (combinação  sucessiva  de  sons),  Harmonia  (combinação  simultânea  de 

sons),  Contraponto  (conjunto  de  melodias  dispostas  em  ordem  simultâneas  – 

algumas  vezes  considerada  como  uma  técnica  e  não  como  parte  da  música)  e 

Ritmo  (Cadencia  obedecendo  a  combinação  de  sons  com  periódicas  repetições). 

Uma  vibração  põe  em  movimento  ondas  sonoras  que  propagam  para  todas  as 

direções,  e  essas  ondas  geram  uma  sensação  nos  ouvidos  chamada  de  som 

(BROWN, 2015).  

As principais características do som são: 

  Altura – Determinada pela frequência das vibrações, quanto maior 

a frequência, mais agudo é o som; 

  Duração  –  é  a  extensão  do  som,  determinada  pelo  tempo  de 

emissão da frequência; 

 

Intensidade  –  é  a  amplitude  das  ondas,  determinada  pelo  volume, 

ou força da vibração; 

  Timbre  –  é  a  combinação  de  vibrações.  É  a  característica  do  som 

que  cada  instrumento  ou  voz  reproduz,  derivados  dos  sons 

harmônicos que acompanham o som principal.  

     As notas musicais são sons com frequências determinadas, de tal forma 

que existe uma relação matemática exata entre elas: 

 
 
 
21 

     A  escala  musical  é  uma  sucessão  de  ascendentes  ou  descendentes  de 

notas  musicais  diferentes  e  consecutivas.  As  oitavas  –  são  intervalos,  ou 

seja, distâncias entre duas notas – são divididas igualmente em doze notas, 

a escala é uma série de notas selecionadas dentre essas doze notas. Embora 

sejam inúmeros sons empregados na música, vale ressaltar que a escala é a 

base de qualquer música, daí  a correlação entre  a matemática e  a música 

ficam  mais  evidentes.  Abaixo  temos  as  definições  das  escalas  chamadas 

Natural e Cromática: 

  Natural  –  também  chamada  de  Diatônica,  é  aquela  que  em  uma 

oitava tem as notas Dó, Ré, Mi, Fá, Sol, Lá, Si, Dó, completando o 

ciclo de oito notas, onde o último Dó (Dó agudo) tem o dobro da 

frequência do primeiro Dó; 

  Cromática ou Temperada – é a composta pelo meio tom entre cada 

nota, ou seja, Dó, Dó #, Ré, Ré #, Mi, Fá, Fá #, Sol, Sol #, Lá, Lá 

#, Si e Dó. 

O Semi Tom ou o Meio Tom é o menor intervalo adotado entre duas 

notas – no sistema temperado – sendo (#) o sustenido, que significa meio 

tom  acima,  e  o  bemol  (♭),  que  significa  meio  tom  abaixo.  O  sistema 

musical  ocidental  geralmente  utiliza  uma  seleção  semitonal  dos  sons 

existentes.  E  o  sistema  temperado  iguala  os  semi  tons  em  partes  

perfeitamente  iguais,  ou  seja,  por  exemplo  Dó#=Ré♭.  Algumas  culturas 

orientais  utilizam  em  seu  sistema  musical  frações  menores  que  um  semi 

tom (um quarto de tom, um oitavo de tom, etc.). 

 
 
Embora  esses  monossilábicos  (Dó,  Ré,  Mi,  Fá,  Sol,  Lá,  Si)  sejam 

predominantemente  usados  em  línguas  latinas,  eles  correspondem  a  sete 

letras usadas em inglês, alemão, grego, etc.  

22 

  C, D, E, F, G, A e H em alemão.  

  C, D, E, F, G, A e B em inglês. 

No  Sonic  Pi,  usando  play  seguido  de  um  número  inteiros  podemos  reproduzir 

sons da escala cromática. Por exemplo: 

Mi 

Fá 

Dó 

Dó 

# 

61 

Re 

Re 

# 

63 

Fá 

# 

66 

Sol 

Sol 

Lá  

# 

68 

Si 

Lá 

# 

70 

60 

62 

64 

65 

67 

69 

71 

Figura 4.1: Relação entre as notas e a reprodução numérica do Sonic Pi 

    A  relação  entre  música  e  matemática  tem  sido  estudada  desde  a  Antiguidade. 
Na  cultura  ocidental,  os  primeiros  registros  desta  relação  surgem  na  Grécia  no 
século  IV  a.  C.  Na  escola  Pitagórica  foi  feito  um  experimento  relacionando 
frações de números inteiros e intervalos musicais (EVES, 2014). 
     Além disso, a relação visual da representação gráfica da música (partitura) com 
gráficos da matemática pode motivar professores e alunos o uso do Sonic Pi em 
sala de aula.  

 
 
 
 
 
 
 
 
 
 
 
 
 
      Coloquei um vídeo no Youtube onde é possível ouvir os códigos gerados que 
aparecem a seguir no texto:  
https://www.youtube.com/watch?v=bMbG5C1SSQI&ab_channel=HanriJunior 

23 

4.2. Definição de Uma Função  

Uma função real, f, é uma relação que, a cada número x de um subconjunto D 
dos números reais, associa um único número real, denotado por f(x). O conjunto D 
é  chamado  o  domínio  de  f  e  o  conjunto  dos  números  reais  que  estão  associados 
por f a algum número de D é chamado o  conjunto imagem (ou, simplesmente, a 
imagem)  de  f.  O  gráfico  de  uma  função  f  é  o  subconjunto  do  plano  cartesiano 
                                     . 

      Quando trabalhamos com o Sonic Pi, devemos reduzir seu domínio e imagem, 
a no máximo um intervalo entre números racionais.  

4.3. Relato da Experiência em Sala de Aula 

Fiz  a  atividade  no  Colégio  Estadual  Coronel  Sergio  José  do  Amaral, 
Situado  no  bairro  de  Suruí,  no  município  de  Magé  –  RJ.  Suruí  é  um  bairro 
tradicionalmente  pesqueiro  à  beira  da  baía  de  Guanabara.  Um  lugar  de  classe 
média baixa a baixa.  

De  forma  facultativa,  chamei  os  alunos  dos  primeiros  anos  do  ensino 
médio.  Por  conta  da  COVID-19,  tive  que  limitar  a  quantidade  de  alunos  a  no 
máximo 30%, por isso tive um total de 23 alunos, todos do primeiro ano do ensino 
médio. 

Comecei acolhendo a todos no auditório da escola, e logo em seguida, fiz 
as  seguintes  perguntas:  Quem  já  ouviu  falar  em  programação?  E  música?  E 
matemática?  Alguns  levantaram  as  mãos,  porém  uma  minoria.  A  partir  daquele 
momento de descontração disse que não estava mais como professor e sim como 
aluno.  

Inicialmente  falei  um  pouco  sobre  música,  disse  sobre  a  relação  entre  a 
música  e  matemática.  Falei  primeiro  sobre  os  compassos  musicais,  binário, 
ternário  e  quaternário,  e  com  o  projeto  aberto,  toquei  músicas  que  seguiam 
respectivamente esses compassos, e fui visualmente testando a percepção musical 
dos  alunos  tocando  músicas  pelo  YouTube.  Logo  depois  falei  sobre  as  notas 
musicais e sobre as oitavas, em que basicamente são as distancias entre as mesmas 
notas em tons diferentes e subsequentes. Neste momento vale ressaltar a atenção 
daqueles que pareciam não saber nada sobre teoria musical. No gancho da teoria 
musical,  aproveitei  pra  falar  que  o  som  nada  mais  é  que  uma  onda  que  viaja 
através  do  ar,  ou  seja,  são  frequências  sonoras,  onde  os  sons  mais  agudos  são 
frequências maiores e sons mais graves, são frequências menores. E que o volume 
do som na verdade é a amplitude dessas ondas.  

Indo  para  a  programação,  comentei  sobre  a  história  dos  computadores, 
citando  Alan  Turing,  um  matemático  inglês  que  influenciou  de  forma  altamente 

 
 
 
 
 
 
 
 
 
 
 
 
 
24 

significativa  o  desenvolvimento  da  ciência  da  programação,  formalizando  o 
conceito  de  algoritmo,  não  pude  deixar  de  comentar  sobre  o  filme  “O  Jogo  da 
Imitação”  que  foi  baseado  em  sua  vida,  e  como  ele  ajudou  a  interceptar  e 
descriptografar  mensagens  entre  os  nazistas  no  contexto  da  segunda  guerra 
mundial.  Mostrei  aos  alunos  o  “Colossus”,  o  computador  construído  em  1943 
através da equipe conhecida como Estação X, liderada por Alan Turing.  

Figura 4.2: Replica do computador Colossus. 

Continuando  a  falar  sobre  programação,  fiz  um  exemplo  do  que  seria 
escrever  um  código  sobre  nosso  dia,  começando  ao  acordar.  Fiz  as  seguintes 
perguntas: 
- Quando acordamos, qual é a primeira coisa que fazemos? 
Alguns alunos responderam da seguinte forma: 
“Ué! Levantamos” 
Outros responderam: “Abrimos o olho” 
Depois dessas respostas, fiz outra pergunta: “E depois, o que fazemos?” 
As respostas foram: 
“Escovamos  os  dentes”,  “Tomamos  banho”,  “Colocamos  o  pé  fora  da  cama”  e 
outras respostas bastante inusitadas. 

A  partir  daí,  disse  que  um  bom  programa  está  na  riqueza  dos  detalhes,  e 
quanto mais detalhes, mais “real” e melhor fica o nosso programa. Assim que fiz 
essa explicação, me fizeram a seguinte pergunta: “E onde fica a matemática nisso 
aí?” 
Disse  que  nesse  caso  a  matemática  fica  em  como  faremos  o  programa  tomar 
algumas decisões, pra isso usamos a lógica. 

A  partir  dessa  breve  apresentação  sobre  programação,  comentei  sobre  as 
diferentes linguagens de programação, e até no celular algumas dessas linguagens 
estão presentes. Falei sobre a linguagem Ruby e enfim apresentei o Sonic Pi e sua 
interface e como através da programação podemos fazer música e basta sabermos 
dominar a linguagem.  

Assim que apresentei a interface do programa, eu falei sobre o básico que 
eles precisam  saber, ou  seja, falei sobre os que  eu julgo como os três principais 
códigos,  que  é  o  play,  o  código  que  “toca”  o  som,  o  sleep,  que  é  o  tempo  (em 
segundos) de pausa entre uma nota e outra, e o sample, que são sons pré-gravados 
no programa.  

 
 
 
 
 
 
 
25 

Comecei com o play 100 e o play 50 para eles terem uma comparação de 
números  e  sons  mais  agudos  e  mais  graves,  onde  quanto  maior  o  número,  mais 
agudo é o som. Depois, pra testar a percepção dos alunos, desliguei o projetor e 
fiz  uma  brincadeira  com  eles,  e  tomando  como  base  o  play  60,  toquei  notas 
aleatórias e pedi  pra que dissessem se era um  som  mais agudo ou um  som  mais 
grave. Liguei o projetor e escrevi o seguinte código: 

Código 4.1 

20.times do 
    Play 70 
    Sleep 0.5 
end 

 Pedi para que eles tentassem me dizer o que iria acontecer. A maioria dos alunos 
disse  que  não  faziam  ideia,  porém  alguns  alunos  responderam  que  o  programa 
tocaria  uma  nota  20  vezes  num  intervalo  de  0.5s,  disse  que  acertaram  e  enfim 
rodei o programa. 

Apesar de rodar um código simples, mostrei pra eles que existem códigos 

complexos  e  músicas  bem  detalhadas  que  foram  programadas  no  Sonic  Pi. 

Mostrei  a  eles  através  do  YouTube  alguns  exemplos  de  pessoas  que  fizeram 

músicas  mais  detalhadas  e  reproduziram  inclusive  músicas  eruditas,  como  a 

reprodução  de  Morzart  Requiem  in  D  minor,  na  figura  3.4.  Mostrei  também 

algumas bandas reproduzidas no Sonic Pi.  

Como eu disse a eles, podemos programar quase tudo, e como o Sonic Pi 

reproduz em forma de som, podemos então “escutar” matemática.  

Comecei  fazendo  um  breve  resumo  sobre  funções  até  que  cheguei  na 

função afim, relembrei o gráfico dessa função no plano cartesiano e a forma geral 

da  expressão  da  função  sendo  f(x)=ax+b.  Perguntei  se  era  possível  “tocar”  essa 

função  no  Sonic  Pi.  Eles  disseram  que  sim,  pois  como  eu  havia  dito,  “podemos 

programar quase tudo”. Mas prevendo que eles responderiam isso, perguntei se a 

imagem que seria tocada é a mesma imagem da f. Todos disseram que sim, daí fiz 

outra indagação, o Sonic Pi consegue interpretar números negativos? Reparei que 

alguns ficaram confusos e fiz a pergunta: “qual será então a imagem de f no Sonic 

Pi?”. Muitos não souberam responder, mas alguns de um modo geral disseram que 

a imagem  será apenas  positiva. Então disse que se eu reproduzir uma função no 

Sonic Pi, a imagem deverá ser de números positivos, e pra isso, preciso saber que 

domínio colocar. Comecei então com a função dada por f(x)=x e como podemos 

 
 
 
 
reproduzir  essa  função,  utilizo  qualquer  domínio  ou  só  domínios  positivos? 

Construí então o seguinte código: 

Código 4.2 

26 

n=10 
x=50 
n.times do 
    play x 
   sleep 1 
   x=x+1 
end 

Perguntei  o  que  aconteceria  quando  eu  desse  o  play.  Alguns  não  sabiam,  outros 

disseram que o “som ia aumentar” e uma pequena parte da turma disse que o som 

aumentaria  de  um  em  um.  A  partir  dessas  respostas,  qual  seria  o  domínio  e  a 

imagem dessa função? Bem quando toquei a função muitos ouviram a função e a 

partir  dessa  percepção  auditiva  conseguiram  perceber  que  a  função  teria  10 

números no domínio e 10 números na imagem. Respondi que o domínio é igual a 

imagem que, de um em um, vai de 50 a 59, começando no 50 e terminando no 59.  

Código 4.3 

n=10 
x=5 
n.times do 

play 2*x+1 
sleep 1 
x=x+1 

end 

Rodei o código e perguntei se nesse caso a imagem seria igual ao domínio. Eles 

perceberam que não, foram observando o que eu escrevia na interface, pois estava 

com o projetor quase todo o tempo ligado.  

Perguntei sobre o gráfico da função quadrática e se eles lembram do que 

eu havia dito sobre funções. Desliguei o projetor e rodei o seguinte código: 

Código 4.4 

n=36 
a=1 
b=-20 
c=0 
k=1 

n.times do 

 
 
 
 
 
 
 
 
 
27 

play –(a*k*k+b*k) 
sleep 0.5 
k=k+0.5 

end 

Pedi para que eles, a partir do som “tocado”, comentassem sobre qual função eu 

estava  rodando.  Quase  todos  perceberam  que  era  uma  função  quadrática.  Assim 

que liguei o projetor pedi pra que eles reconhecessem que função é essa. Se daria 

pra identificar ao menos o coeficiente principal, a, da função quadrática e se a é 

positivo ou negativo. Alterei o sleep de 0.5 para um, assim a função ficava mais 

nítida. Desenhei o gráfico da função dada por f(x)=-x²+20x.  

Figura 4.3: Gráfico da função dada por f(x)= - x² + 20 

Perguntei se era possível fazer uma relação entre o gráfico e o som tocado. 

Alguns não souberam responder e então mostrei o registro do programa, onde se 

tem as notas tocadas. Veja figura a seguir 

Figura 4.4: Registro das notas tocadas pelo Sonic Pi 

Pedi  pra  que  percebessem  como  a  nota  sobe  até  o  100  e  depois  desce,  e 

simultaneamente  mostrei  o  gráfico  e  pedi  pra  que  percebessem  que  acontece  a 

xy 
 
 
 
 
 
 
mesma  coisa.  Com  o  tempo  quase  se  esgotando,  finalizei  rodando  mais  uma 

função quadrática, porem essa, com o coeficiente a>0. Segue o código: 

Código 4.5 

28 

n=20 
a=0.6 
b=-5 
c=100 
k=0 
n.times do 

play (a*k*k+b*k+c) 
sleep 0.3 
k=k+0.5 

end 

Assim que rodei, eles perceberam que se tratava de uma função quadrática 

de concavidade para cima.  

Alguns pediram pra mexer no meu computado e alterar alguns parâmetros 

de alguns códigos, não hesitei e deixei por alguns minutos, usarem o programa e 

alterarem alguns parâmetros.  

Finalizei  a  tarefa  agradecendo  e  entregando  um  formulário  para  que  eles 

preenchessem com sinceridade (as conclusões serão apresentadas no capítulo final 

deste trabalho). Assim que me entregaram os formulários, liberei para ir embora. 

Alguns ficaram e me perguntaram como fazia para baixar o programa e se existem 

outros  parecidos.  Falei  do  SCRATCH,  Python  e  Blockly,  para  os  interessados. 

Disse que existem vários tutoriais no YouTube sobre programação, mas que quase 

não  existem  tutoriais  sobre  o  Sonic  Pi  especificamente,  daí  me  recomendaram 

fazer um canal, pois de acordo com eles “é um negócio muito legal”. 

4.4. Mais Atividades 

      Sugerimos a seguir três exercícios que podem dar continuidade a aula ou 
complementar as atividades mencionadas acima. 

Exercício   1:  Tocar o código abaixo e ver é reconhecível.  

Código 4.6 

play 60 
sleep 0.5 
play 60 
sleep 0.5 

 
 
 
 
 
 
 
 
 
 
 
29 

play 60 
sleep 1 
play 62 
sleep 1 
play 60 
sleep 1 
play 65 
sleep 1 
play 64 

Exercício 2: Para x inteiro de 1 até 10, tocar y, sendo que  

Em seguida, tocar na ordem contrária usando também a equação de uma reta. 
Solução:  

Código 4.7 

x=1  

10. times do 
     play 10*x 
     sleep 0.5 
     x= x+1 
end 
10. times do 
     play -10*x+200 
     sleep 0.5 
     x= x+1 
end 

Comparar gráficos e sons desse exercício com os do exercício com parábola do 
relato. 

Figura 4.5  

 
 
 
        
 
 
 
30 

34 

55 

... 

Figura 4.6: Gráfico do código 4.4 

Exercício   3:  Tocar uma parte da sequencia de Fibonacci.  
1 

21 

13 

8 

1 

5 

2 

3 

1 

1  1+1=2 

1 

2 

2 

1+2=3 

3 

3 

2+3=5 

5 

5 

3+5=8 

8 

8 

5+8=13 

13 

13 

8+13=21 

21 

21 

13+21=34 

34 

21+35=55 

... 

1 

a 

1 

b 

a 

2 

3 

5 

8 

13 

21 

34 

55 

... 

c=a+b 

b 

a 

c=a+b 

b 

a 

c=a+b 

b 

a 

c=a+b 

b 

a 

c=a+b 

b 

a 

c=a+b 

b 

a 

c=a+b 

b 

a 

c=a+b 

b 

c=a+b 

... 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Em cada etapa a (novo) = b (anterior) e b (novo) = c, sendo c = a+b.  

Código 4.8 

31 

a=1 
b=1 
10. times do 
   c=a+b 
   play c 
   sleep 0.5 
    a=b 
    b=c 
end 

 
32 

5.  Conclusão e Considerações Finais 

       Neste trabalho foi proposto um alinhamento entre a matemática, programação 

e  música,  mas  não  para  ensinar  música  utilizando  matemática,  ou  o  contrario, 

tampouco  ensinar  matemática  utilizando  programação.  Tendo  como  foco  o 

estimulo da curiosidade, norteado pela BNCC, no que diz respeito a inserção da 

computação  para  a  educação  básica,  com  o  compromisso  de  desenvolver  o 

letramento  matemático,  o  raciocínio  lógico  matemático  levando  também  em 

consideração o pensamento matemático e computacional.  

Analisando  as  respostas  do  questionário  apresentado  pelos  alunos,  é 

notório um certo equilíbrio pelo interesse da disciplina matemática. 

Figura 5.1  

Apesar  de  estar  visivelmente  equilibrado,  muitos  dos  alunos  não  tinham 

interesse  pela  matemática.  Porem  com  a  mediana  em  3,  mais  da  metade  dos 

alunos  tinham  ao  menos  algum  interesse  pela  matemática.  Muitos  acham  que  a 

falta de interesse em aprender matemática deve-se por não conseguirem associar 

conceitos com as aplicações cotidianas, e o despertar da curiosidade é também um 

fator importante para o interesse em matemática. Um fato sobre isso é a pergunta 

seguinte, em que eles respondem sobre o uso de tecnologias, programação e afins. 

Onde  eles  respondem  se  o  uso  das  mesmas  deveria  acontecer  com  mais 

frequência. 

 
 
 
 
 
33 

Figura 5.2 

Mais de 70% da turma concorda completamente com o uso de tecnologias, 

onde chegamos mais uma vez sobre as aulas atrativas e interesse pela matemática. 

Um ponto interessante desse gráfico também, é que ninguém ao menos discorda 

completamente com o uso de tecnologias em sala de aula. 

Sobre o uso do Sonic Pi no aprendizado de matemática e sobre o interesse 

na matemática.  

Figura 5.3 

Observou-se em relação ao uso do programa Sonic Pi, se despertou 

ou não algum interesse em aprender mais matemática, é possível dizer que 

só a utilização do Sonic Pi como ferramenta não é capaz de  trazer a total 

atenção  e  curiosidade  para  a  matemática,  mas  se  compararmos  com  a 

figura  5.1,  houve  uma  diminuição  da  barra  em  que  discordam 

completamente.  A  partir  dessa  analise  é  imprescindível  dizer  que 

precisamos  de  mais  atividades  com  uso  de  tecnologias.  E  isso  será 

reforçado a frente analisando os próximos gráficos. 

 
 
 
 
34 

Figura 5.4 

É notório que, por ser uma escola publica de classe média baixa a 

baixa,  e  pela  própria  escola  não  fornecer  atividades  que  envolvam 

programação  e  pensamento  computacional,  o  conhecimento  prévio  sobre 

programação  é  pequeno  ou  quase  nenhum.  E  atividades  como  essa, 

despertaram  um  grande  interesse,  como  podemos  observar  no  gráfico  a 

seguir.  

Figura 5.5 

Comparando a figura 5.4 com a figura 5.5, no que diz respeito ao 

conhecimento  das  linguagens  e  curiosidade  em  relação  a  programação 

após  a  atividade,  vimos  a  importância  do  processo  de  aprendizagem  de 

programas,  sistemas  novos  e  atividades  que  atraiam  a  atenção. 

Desenvolver  o  pensamento  computacional  nessa  etapa  significa  também 

atrair  a  atenção  e  despertar  o  interesse  do  aluno.  Modificar  e  testar  algo 

pronto,  é  fazer  com  que  o  aluno  desenvolva  a  capacidade  de  aprender 

sozinho.  No  que  diz  respeito  ao  Sonic  Pi,  tivemos  uma  boa  recepção  do 

programa,  cerca  de  95%  dos  alunos  acharam  ao  menos  um  programa 

 
 
 
regular,  cerca  de  50%  desses  95%  avaliaram  o  programa  como  Muito 

Bom. Veja figura 5.6 a seguir: 

35 

Figura 5.6 

No  que  tange  o  despertar  musical  pelo  aluno,  temos  os  seguintes 

gráficos: 

Figura 5.7 

De  acordo  com  as  respostas  do  questionário,  alguns  alunos  já 

compreendiam  algo  em  relação  a  teoria  musical.  Mas  de  acordo  com  o 

próximo  gráfico  há  um  movimento  significativos  de  alunos  que  ficaram 

interessados em música e teoria musical. 

 
 
 
 
36 

Figura 5.7 

Não menos importante, foi pedido para que os alunos avaliassem a 

atividade como um todo. Bem receptiva, é visível que a maioria dos alunos 

avaliou como Boa ou Muito Boa. 

Figura 5.8 

 Foi aberto um espaço para que os alunos escrevessem algum comentário. 

Abaixo os comentários. 

- “Gostei bastante. Poderia Repetir.” 
- “Bem interessante...achei legal, se aprofundar mais até nos diverte.” 
- “Achei bacana, mas poderia ser melhor.” 
- “Achei legal” 
- “Faz uma aula fazendo remix.” 
- “Muito bom, gostei muito.” 
- “Achei muito interessante, deveria ter mais aulas assim, me interessei mais por 
matemática.” 
- “Eu achei a atividade mais ou menos, mas fiquei interessada em saber mais 
sobre música.” 
- “Já tinha vontade de aprender antes da atividade”. 
- “Gostei bastante. Bem interessante.” 
- “Eu achei muito interessante, mas não tenho tanto interesse em saber sobre.” 
- “Muito boa e espero que tenham mais. primeiro porque conhece coisas nova e 
segundo por nunca ter feito antes.” 

 
 
 
37 

- “Gostaria de houvesse mais aulas como essa, me despertou desejo sobre a 
música.” 
- “Tenho interesse, mas não sei muito” 
- “Foi boa.” 
- “Achei muito interessante.” 
- “Sim. Eu gostei e gostaria de saber mais!! Achei interessante.” 
- Achei muito legal, mas não sei se seria pra mim.” 
- “Achei muito interessante. É uma coisa nova de aprender.” 
- “Eu achei a atividade muito interessante, pois aborda sobre programação, 
matemática e música. Acredito que atividades como essa estimulam o 
conhecimento. Eu terminei a palestra com vontade de saber mais sobre os 
assuntos.” 
- “Gostei muito.” 
       De um modo geral conseguimos atingir a proposta inicial desse trabalho. O 
despertar da curiosidade através da matemática, música e programação.  
       Confesso que fiquei extremamente feliz em realizar essa atividade, pois 
apesar dos desafios e problemas que ocorreram no meio do processo, e na 
relutância em aplicar a atividade numa escola em que sou professor, me senti 
completamente surpreendido com o resultado dessa ação, pois sei das dificuldades 
que é lecionar numa escola publica e periférica. Pretendo manter essa atividade 
dentro do planejamento anual em minhas aulas. Observa-se nas tecnologias e na 
programação que as ações permeiam na percepção, linguagem e pelo pensamento 
que operam na construção de conhecimento. 

 
 
38 

6.  Referências Bibliográficas 

AARON, Sam. Live Code whith Sonic Pi. Live & Code Create Amazing Sounds On 
YOUR Raspberry Pi. London: The Magpi editorial. Seymour Distribution Ltda, 2015. 

BLOCKLY. Disponível em: <https://blockly-
demo.appspot.com/static/demos/code/index.html?lang=pt-br> 

BLOCKLY GAMES. Disponível em: <https://blockly.games/> 

BRACKMANN, CHRISTIAN PUHLMANN, 2017. 

BRASIL. Base Nacional Comum Curricular. Ministério da Educação. 2018. Disponível 
em: <http://basenacionalcomum.mec.gov.br/> 

BROWN, Andrew. Music Technology and Education: Amplifying Musicality.  
New York:  Routledge, 2015. 

BURAK, Dionísio. Modelagem Matemática: ações e interações no processo de ensino-
aprendizagem. Tese de Doutorado. Campinas, Unicamp.1992. 

D’AMBRÓSIO, Ubiratan. Armadilha da Mesmice em Educação Matemática. Boletim 
de Educação Matemática, 2005. 

DUVAL, Raymond.                                                                   

pensamento.  1993 

(tradução  de                             disponível  em 

http://dx.doi.org/10.5007/1981-1322.2012v7n2p266 ). 

DUVAL, Raymond. Comment analyser le fonctionnement représentationnel des 
tableaux et leur diversité. Spirale 32. 2003 

EVES, H. Introdução à História da Matemática. Editora UNICAMP, 2014. 

FONSECA FILHO, Cleúzio. História da Computação: O caminho do pensamento e da 
tecnologia. Porto Alegre : EDIPUCRS, 2007. 

MACHADO,  E.  Z.  A.  et  al.  Trabalhando  com  alunos  de  ensino  fundamental  e        

                                                                     . In:  or shop 

de  Inclusão  Digital  Bahia-Alagoas-Sergipe,  20 0,  Maceió.  X  Escola  Regional  Bahia-

Alagoas-Sergipe, 2010.  

MARTINEAU, J. Quadrivium. São Paulo: Realizações Editora, 2014. 

MED, B. Teoria da Música. Brasília: Brasília Artes Gráficas, 1996. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
39 

MERCADO, L.P.L. Formação Docente e Novas Tecnologias. IV Congresso RIBIE, 
Brasilia 1998. 

N.Piskunov, Cálculo Diferencial e Integral, Tomo I, Editora Mir, 1977. 

PASTERNAK, E. Visual Programming Pedagogies and Integrating Current Visual 
Programming Language Features. Dissertação (Mestrado) — Robotics Institute, 
Carnegie Mellon University, August 2009. 

SONIC PI. Disponível em: https://sonic-pi.net/tutorial.html.  

SCRATCH. Disponícel em : <https://scratch.mit.edu/> 

FIORELLI SILVA, I. L.; ALVES NETO, H. F. O Processo De Elaboração Da Base 
Nacional Comum Curricular (BNCC) No Brasil E A Sociologia (2014 a 2018). Revista 
Espaço do Currículo, [S. l.], v. 13, n. 2, p. 262–283, 2020. DOI: 10.22478/ufpb.1983-
1579.2020v13n2.51545. Disponível em: 
https://periodicos.ufpb.br/index.php/rec/article/view/51545. 

WING, J. M.  Computational thinking, Commun. ACM, vol. 49, no. 3, p. 33, Mar. 2016. 

 
 
 
 
 
 
 
 
 
 
 
 
