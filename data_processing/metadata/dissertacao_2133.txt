Universidade Federal da Bahia - UFBA
Instituto de Matemática - IM
Sociedade Brasileira de Matemática - SBM

Mestrado Profissional em Matemática em Rede Nacional - PROFMAT

Dissertação de Mestrado

O Algoritmo de Euclides e Uma Generalização da
Sequencia de Fibonacci

Raimundo Jorge Pereira de Matos

Salvador - Bahia

Março de 2018

 
 
 
 
O Algoritmo de Euclides e Uma Generalização da

Sequencia de Fibonacci

Raimundo Jorge Pereira de Matos

Dissertação de Mestrado apresentada à Comis-

são Acadêmica Institucional do PROFMAT-

UFBA como requisito parcial para obtenção do

título de Mestre em Matemática. Orientador:

(Joseph Nee Anyah Yartey)

Salvador - Bahia

Março de 2018

Dedico este trabalho, em especial à minha mãe Noêmia, à minha esposa Claudia e aos

meus ﬁlhos Felipe e Adélia.

Ficha catalográfica elaborada pelo Sistema Universitário de Bibliotecas (SIBI/UFBA), com os dados fornecidos pelo(a)
autor(a).

   Matos, Raimundo Jorge Pereira de
   O Algoritmo de Euclides e uma generalização da sequencia de
Fibonacci / Raimundo Jorge Pereira de Matos. -- Salvador, 2018.
   39 f.

   Orientador: Joseph Nee Anyah Yartey. 
   Dissertação (Mestrado - Mestrado Profissional em Matemática
em Rede Nacional - Profmat) -- Universidade Federal da Bahia,
Instituto de Matemática, 2018.

   1. Algoritmo de Euclides. 2. Sequencia de Fibonacci. 3.
Máximo Divisor Comum. 4. Ordem de pares ou ternos de números.
I. Yartey, Joseph Nee Anyah. II. Título. 

Agradecimentos

Agradeço a Deus, o grande criador.

À minha esposa Claudia pelo companheirismo, incentivo e principalmente por nos

momentos difíceis nunca deixar de apoiar.

À minha mãe Noêmia por sempre ter mostrado aos ﬁlhos a necessidade de estudar

para a busca de um futuro melhor.

Aos meus colegas do Profmat 2015. Agradeço de forma muito especial, a Felipe,

Evandro e Carol que estiveram sempre à disposição para estudarmos em grupo ou tirar

dúvidas sempre que necessário. O meu carinho, respeito e amizade.

Ao professor Joseph Nee, meu orientador, pela paciência, pela cobrança, mas acima

de tudo, pela atenção dedicada ao trabalho.

Ao coordenador do Curso, Prof. Marco Antonio.

A todos os Professores do Profmat que tive o privilégio de ser Aluno.

A todos que direta ou indiretamente contribuíram para a conclusão desse trabalho.

Por último aos meus ﬁlhos, Felipe e Adélia, fontes de luz e força, que me impulsi-

onam a continuar sonhando e lutando.

"A Matemática não mente. Mente

quem faz mau uso dela".

Albert Einstein

Resumo

Neste dissertação baseada no artigo [1], vamos mostrar que os pares de números de

Fibonacci adjacentes, fn−1 e fn−2 (sendo que fn = fn−1 + fn−2), são os menores pares de
suas ordens e que são os menores pares quando aplicamos o algoritmo de Euclides para

eles.

Deﬁnimos também os ternos de números de Fibonacci adjacentes, gn−1, gn−2, gn−3
(sendo que gn = gn−1 +gn−2 +gn−3) e vamos mostrar que os menores ternos de suas ordens
são de fato, os menores ternos.

Sabemos que a razão entre dois números de Fibonacci adjacentes fn/fn−1 converge
para um número chamado de “razão aurea”. Vamos provar neste trabalho que a razão entre

ternos de números de Fibonacci adjacentes gn/gn−1 também converge para um número.
Este número no caso de ternos de números de Fibonacci é um pouco maior do que a razão

aurea.

Daremos uma aplicação usando GeoGebra para ilustrar os pares de números e os

pares de números adjacentes de Fibonacci.

Palavras-chave: Números de Fibonacci, Ordem de pares (ternos), MDC, Algoritmo de

Euclides.

Abstract

In this dissertação, based no the paper [1], we proved that adjacent pairs of Fibo-

nacci numbers fn −
one can apply the Euclidean Algorithm.

1 and fn−2 (where fn = fn−1 + fn−2) are the slowest pairs to which

We deﬁne adjacent triples Fibonacci numbers gn−1, gn−2, gn−3 (where gn = gn−1 +

gn−2 + gn−3) e proved also that they are slowest triples of their order.

We know that the ratio os two adjacent Fibonacci números fn/fn−1 converge to
a certo number called the “Golden Ratio”. We will proved here that adjacent triples

Fibonacci numbers gn/gn−1 also converge to some number. This number is larger that
the golden ratio.

We will give an application using GeoGebra to show the relationship between pairs

os numbers and pairs os adjacent Fibonacci numbers.

Key-words: Fibonacci numbers, Order of pair (triples) , MDC, Euclidean Algorithm.

Conteúdo

1 Sequência de Fibonacci

13

1.1 Deﬁnição do Problema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13

1.2 Propriedades Simples dos Números de Fibonacci . . . . . . . . . . . . . . . 14

2 Algoritmo de Euclides e Máximo Divisor Comum

15

2.1 Divisibilidade . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15

2.2 Máximo Divisor Comum . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16

3 Relação entre o algoritmo de Euclides e números de Fibonacci

19

3.1 Pares de Números e Pares de Números de Fibonacci . . . . . . . . . . . . . 19

3.2 Estimativa das ordens de Fn . . . . . . . . . . . . . . . . . . . . . . . . . . 24
3.3 Aplicação usando GeoGebra . . . . . . . . . . . . . . . . . . . . . . . . . . 26

3.4 Ternos de Números e Ternos de Números de Fibonacci

. . . . . . . . . . . 27

3.4.1 Determinando o menor ternos de ordem 0, 1, 2 ,3, etc . . . . . . . . 29

3.4.2 Convergência de

. . . . . . . . . . . . . . . . . . . . . . . . . 33

gn+1
gn

4 Uma Proposta para Ensino Médio

35

4.1 O Objetivo da Atividade . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35

4.2 Sequência Didática da Atividade . . . . . . . . . . . . . . . . . . . . . . . . 35

Introdução

O objetivo desse é relacionar o estudo de sequências no Ensino Médio com atenção

especial à sequência de Fibonacci e a relação existente com o algoritmo euclidiano.

No Ensino Médio é dada pouca ou quase nenhuma importância ao estudo de

sequências, a não ser como parte introdutória do estudo de Progressão Aritmética e Pro-

gressão Geométrica. Nos atentamos a uma sequência especial, a chamada sequência de

Fibonacci e a partir dela estabelecemos relação direta com o MDC de dois números e o

algoritmo da divisão. A partir desse estabelecimento ampliamos o algoritmo de Euclides

para o terno (a, b, c) e sua relação com a sequência de Fibonacci para com esse terno (a,

b, c), lembrando a necessidade dos números de Fibonacci serem adjacentes.

No primeiro capítulo apresentamos uma pequena biograﬁa de Leonardo de Pisa

(1170 - 1250), também conhecido como Fibonacci. Abordamos o problema dos coelhos

conhecido como Sequência de Fibonacci e estabelecemos as suas principais propriedades

bem como sua lei de recorrência. Como já havia no Profmat uma série de trabalhos

envolvendo a Sequência de Fibonacci relacionada ao Algoritmo de Euclides, utilizamos

esses trabalhos em que já foram feitas as provas necessárias a continuidade do nosso

trabalho, resolvemos não repetir tais provas.

No segundo capítulo estabelecemos os conceitos de divisibilidade entre dois núme-

ros inteiros e através da divisão euclidiana o conceito de MDC de um par (a, b) utilizando

o algoritmo de Euclides, também estendemos os conceitos de MDC para o terno (a, b,

c). No terceiro capítulo procuramos estabelecer a relação entre o algoritmo de Euclides e

os números de Fibonacci. No primeiro momento veriﬁcamos o MDC de pares (a, b) e a

quantidade de passos que são dados no algoritmo da divisão. A esses pares chamamos de

ordem. Ao efetuar esse processo do algoritmo de Euclides utilizando pares mostramos que

em qualquer ordem (quantidade de passos dados) o menor par (a, b) é sempre formado

por pares adjacentes de números de Fibonacci. Além disso, veriﬁcamos a chamada razão

áurea. O passo seguinte será ampliar o MDC de pares para ternos, e estabelecer uma

sequência para ternos adjacentes de Fibonacci e mostrar a convergência para Ψ (aprox.

1,83...), um pouco maior que Φ.

No quarto capítulo apresentamos uma sequência de atividades com o objetivo de

ﬁxar cada um dos conceitos e relações estabelecidas, bem como veriﬁcar graﬁcamente

através do GeoGebra como se comportam graﬁcamente esses pares adjacentes de números

de Fibonacci.

Capítulo 1

Sequência de Fibonacci

Neste capítulo, um resumo sobre a sequência de Fibonacci e suas propriedades. As

demonstrações podem ser encontradas nos seguintes trabalhos feitos [3], [4], [5].

1.1 Deﬁnição do Problema

Em 1202 Leonardo de Pisa (1170-1250), também conhecido como Fibonacci apre-

sentou um modelo de crescimento de coelhos para seus alunos. É importante ressaltar

que segundo Mol (2013) [6] Fibonacci é considerado o mais importante matemático da

Europa medieval, também Eves (2011) [6] aﬁrma que nos nove séculos da Idade Média

nenhum matemático se compara à capacidade dele.

Vejamos o problema proposto por Fibonacci. Quantos casais de coelhos teriam ao

ﬁnal de 1 ano se:

No Primeiro mês temos um coelho macho e um coelho fêmea. Estes dois coelhos

acabaram de nascer;

Um coelho só atinge a maturidade sexual ao ﬁnal de um mês;

O período de gestação de um coelho dura um mês;

Ao atingirem a maturidade sexual, a fêmea irá dar à luz todos os meses;

A mãe irá dar à luz todos os meses um coelho macho e um coelho fêmea;

Os coelhos nunca morrem.

Inicialmente temos um par de coelhos, após o primeiro mês teremos dois pares de

coelhos, no segundo mês termos três pares, no terceiro mês cinco pares, o quarto mês oito

pares, no quinto mês treze pares e assim por diante. A sequência de números é dado por

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144,

,

· · ·

13

sendo que cada termo é dado pela soma dos dois primeiros termos é chamado de sequência

de Fibonacci. Em outras palavras, eles são gerados pela formula de recorrência:

fn = fn−1 + fn−2, n

0, f1 = 0, f1 = 1.

≥

(1.1)

1.2 Propriedades Simples dos Números de Fibonacci

Vamos enunciar algumas propriedades dos números de Fibonacci. As demonstra-

ções destes propriedades podem ser encontrados em [6]:

Lema 1.2.1 (Soma da sequência de Fibonacci). A soma dos n primeiros termos da

sequência de Fibonacci é dado por

f1 + f2 +

· · ·

+ fn−1 + fn = fn+2

1.

−

Lema 1.2.2 (Soma dos termos impares da sequência de Fibonacci). A soma dos

n primeiros termos impares da sequência de Fibonacci é dada por

· · ·
Lema 1.2.3 (Soma dos termos pares da sequência de Fibonacci). A soma dos n

f1 + f3 + f5 +

+ f2n−1 = f2n.

primeiros termos pares da sequência de Fibonacci é dada por

f2 + f4 + f6 +

+ f2n = f2n+1

1.

−

· · ·

Lema 1.2.4 (Soma dos termos da sequência de Fibonacci com termos alterna-

dos). A soma dos n primeiros termos da sequência de Fibonacci com termos alternados

é dada por

f1

f2 + f3

f4 +

+ (

1)n+1fn = (

1)n−1fn−1 + 1.

−
Lema 1.2.5 (Soma dos termos quadrados da sequência de Fibonacci). A soma

· · ·

−

−

−

dos n primeiros termos quadrados da sequência de Fibonacci é dada por

1 + f 2
f 2

2 + f 2

3 +

+ f 2

n = fnfn+1.

· · ·

Lema 1.2.6 (Formula Importante sobre a sequência de Fibonacci ).

Lema 1.2.7 (Diferença de quadrados dos números de Fibonacci ).

fn+m = fn−1fm + fnfm+1.

Teorema 1.2.1 (Razão Áurea).

f2n = f 2

n+1 −

f 2
n−1.

lim
n→∞

fn+1
fn

= φ =

1 + √5
2

.

Isto é a razão dos números de Fibonacci adjacentes converge para Φ. Além disto Φ é
solução da equação x2

1 = 0.

x

−

−

Capítulo 2

Algoritmo de Euclides e Máximo

Divisor Comum

2.1 Divisibilidade

Deﬁnição 2.1.1. Sejam a, b números inteiros. Dizemos que a divide b, denotado por a
|

se existe um número inteiro c tal que b = ac. A notação a ∤ b signiﬁca que a não divide b.
= 0, pois, se c′ é um número tal que b = ac′, então

b,

O número inteiro c é único se a
c = c′.

c′) = 0

ac′ = 0

a(c

⇒

−

⇒

ac

−

Proposição 2.1.1. Sejam a, b, c

Z. Então,

∈

1. 1

c, a
|

a e a
|

|

0;

2. 0

a

|

⇐⇒

a = 0;

b, b

= 0,

se, e somente se,

3. a
|

a

| ≤ |

;

b
|

|

4. se a
|

b e b
|

c, então a
|

c.

Demonstração.

1. 1

c pois c = 1.c, a
|

a pois a = a.1 e a
|

|

0 pois 0 = a.0.

2. Suponhamos que 0

a. Logo, existe c

Z tal que a = c.0. Isto é, a = 0. Reciproca-

mente, se a = 0, então 0 = c.0, para algum c

|

∈

Z.

∈

b, então, existe q

Z tal que b = a.q. Assim,

b
|

|

=

q

a
|

.
|

|

|

. Como b

= 0, q

1 ,

≥

∈

3. Se a
|

tem-se

a

| ≤ |

.

b
|

|

4. Se a
|

b e b
|

c, então, por deﬁnição, existem m, n

Z tais que b = am e c = bn. Assim,

∈

c = (am)n = a(mn). Logo, a
|

c.

15

6
6
6
Proposição 2.1.2. Se a, b, c, d

Z, com a

= 0 e c

= 0, então

∈

a
|

b e c

d

|

⇒

a.c

b.d

|

Demonstração. Se a
|
bd = (am).(cn) = (ac).(mn). Portanto, ac

d, então existem m, n

b e c

|

bd.

|

Z tais que b = am e d = cn. Então,

∈

Proposição 2.1.3. Sejam a, b, c

Z, tais que a
|

(b

±

c). Então, a
|

b

∈

c.

a
|

⇔

Demonstração. Como a
|

(b + c), existe m

Z tal que b = an. Então, an + c = am

c) e a
|

b, existem m, n

Z tais que b

−

∈
Analogamente, mostra-se que a
|

c

b.

a
|

⇒

−

n

a
|

∈
(b

∈

Z tal que b + c = am. Se a
|
n). Logo, a
|

⇒
c = am e b = a.n. Assim, c = a.(n

c = a(m

−

b, então existe

c. Agora, se

m).

−

Proposição 2.1.4. Sejam a, b, c

yc)

Z tais que a
|

b e a
|

∈

c, então para todo x, y

Z, a
|

∈

(xb +

Demonstração. Se a
|

b e a
|

xb + yc = xam + yan = a.(xm + yn). Logo, a
|

∈

(xb + yc).

c, então existem m, n

Z tais que b = a.m e c = a.n. Então,

Teorema 2.1.1 (Divisão Euclidiana). Sejam a, b

inteiros q e r tais que a = bq + r, 0

r <

.

b
|

|

≤

Z, com b

= 0. Existem dois únicos

∈

2.2 Máximo Divisor Comum

Deﬁnição 2.2.1. Sejam a, b

Z, não simultaneamente nulos. O número inteiro d, d

= 0

é um divisor comum de a e b se d

∈

a e d

b.

|

|

Deﬁnição 2.2.2. O número inteiro d, d

b se:

0, é um máximo divisor comum (mdc) de a e

≥

1. d

|
2. Se d′

a e d

b;

|
a e d′

|

b, então d′

|

d.

|

O mdc de a e b, quando existir, será denotado por mdc(a, b).

Para calcularmos o mdc de maneira eﬁciente, vamos descrever o chamado algo-

ritmo de Euclides ou algoritmo das divisões sucessivas, que se baseia na seguinte simples

observação:

Lema 2.2.1 (Euclides). Se a = bq + r, então mdc(a, b) = mdc(b, r).

6
6
6
6
Demonstração. Seja d = mdc(b, r). Como d
|
a e d′

a e d

b. Suponha que d′
|
d e assim, d = mdc(a, b).

|

Assim, d
Portanto, d′

|

|

|

b e d

r temos que d

a, já que a = bq + r.

|

b. Pois a = bq

|

r. Logo, d′

a e d′

|

r.

|

−

O algoritmo de Euclides consiste na aplicação reiterada do lema acima onde q e

r são o quociente e o resto na divisão de a por b (note que o lema vale mesmo sem a

condição 0

r <

). Como os restos formam uma sequência estritamente decrescente,

≤

b
|

|

o algoritmo eventualmente para quando atingimos o resto 0.

Exemplo 2.2.1. Calcule mdc(306, 657).

Realizando as divisões sucessivas, temos

2

6

1

657

306

45

36

45

36

9

0

4

9

Assim, temos

657 = 2(306) + 45

ou

306 = 6(45) + 36

45 = 1(36) + 9

36 = 4(9) + 0

mdc(657, 306) = mdc(306, 45) = mdc(45, 36) = mdc(36, 9) = mdc(9, 0) = 9.

O algoritmo de Euclides pode ser usado para calcular o mdc de três números a, b e

c tal que a

b

c da seguinte forma. Vamos aplicar as divisões sucessivas em 2 instantes

≤

≤

usando o menor dos três inteiros como o divisor. Isto é

c = qc(a) + rc

b = qb(a) + rb

Repetimos o processo para o terno (cid:16) min(r, b, rc), max(rb, rc), a(cid:17), sendo a o maior número.
Continuamos até ambos os restos são zeros. Portanto o mdc é o ultimo menor resto.

Exemplo 2.2.2. Determine o mdc(203, 91, 77).

Temos que

203 = 2(77) + 49

91 = 1(77) + 14

Aplicamos o algoritmo da divisão de novo para o terno (77, 49, 14);

77 = 5(14) + 7

49 = 3(14) + 7

Aplicamos o algoritmo da divisão de novo para o terno (14, 7, 7);

14 = 2(7) + 0

7 = 1(7) + 0

Como ambos os restos são zeros temos que mdc(203, 91, 77) = 7

Capítulo 3

Relação entre o algoritmo de Euclides e

números de Fibonacci

Neste capítulo vamos explorar relação entre o algoritmo de Euclides e os números

de Fibonacci.

Vamos deﬁnir as notações que usaremos neste seção.

(a, b) : a, b

N, a

∈

≤

b, b

= 0

}

(a, b)

∈

P : a

= 0

}

{

P :=

{
P∗ :=

•

•

•

Fn =

{

(fn, fn+1) : fn, fn+1 são números de Fibonacci

}

3.1 Pares de Números e Pares de Números de Fibonacci

Deﬁnição 3.1.1. Sejam X = (a1, b1) e Y = (a2, b2)

P. Então dizemos que

∈

X

Y

≤

a1

≤

⇔

a2 e b1

b2.

≤

Proposição 3.1.1. A relação binaria

ordenação total.

é uma ordenação parcial de P, mas não uma

≤

Demonstração. Vamos mostrar que para todo X, Y, Z

P :

∈

X

≤

X.

Se X

Se X

Y e Y

Y e Y

≤

≤

≤

≤

Z, então X

Z.

≤

X, então X = Y.

•

•

•

19

6
6
Sejam X = (a1, b1), Y = (a2, b2) e Z = (a3, b3).

A primeira condição é trivial.

Para provar a segunda condição, temos que

X

Y

≤

a1

≤

⇒

a2 e b1

b2.

≤

Y

a2

≤

≤

a3 e b1

b2

≤

≤

Z

a2

a3 e b2

⇒

≤
b3. Portanto a1

≤

≤
a3 e b1

≤

b3.

≤

b3, que por deﬁnição implica

Logo, a1

X

Z.

≤

A terceira condição é provado de maneira analogo.

X

Y

≤

a1

≤

⇒

a2 e b1

b2.

≤

Y

Logo, a1

a2

a1 e b1

≤
≤
Finalmente vamos provar que

≤

≤

b2

≤

X

a2

a1 e b2

b1.

⇒

≤
≤
b1. Portanto a1 = a2 e b1 = b2, que implica X = Y.

≤

não é uma ordenação total em P. Para isto precismos

provar que existe X, Y

P tal que nem X

Y nem Y

≤
Se tomamos X = (2, 4) e Y = (1, 5) então X

∈

≤
Y pois 2 > 1, e Y

X é valido.

6≤

X pois 5 > 4.

6≤

Deﬁnição 3.1.2.

Se S = (a, b)

euclidiana.

∈

P∗, deﬁnimos E(S) = (r, a)

∈

P, onde b = qa + r pelo divisão

Se S = (a, b)

∈

P, deﬁnimos D(S) = (b, a + b)

P∗,

∈

•

•

Proposição 3.1.2. Se S = (a, b)

∈

P e a < b por deﬁnição de P, então E(D(S)) = S.

Demonstração. Se S = (a, b) então D(S) = (b, a + b). Pelo divisão euclidiana temos que

b + a = 1

·

b + a pois a < b. Portanto

E(D(S)) = E((b, a + b)) = (a, b) = S.

Observação 3.1.1. Note que se a = b, a proposição acima não é verdadeira:

E(D(1, 1)) = E(1, 2) = (0, 1)

= (1, 1).

Proposição 3.1.3. A função D : P

P∗ é injetora e preserva a ordem.

→

6
Demonstração. Sejam S = (a, b) e S′ = (a′, b′). Suponha que D(S) = D(S′). Então

(b, a + b) = (b′, a′ + b′)

⇒

b = b′ e a + b = a′ + b′.

Portanto temos que a = a′ e b = b′. Logo S = S′. Portanto D é injetora.
Agora se S

b′, portanto

S′, então a

a′ e b

≤

≤

≤

D(S) = (b, a + b)

≤

(b′, a′ + b′) = D(S′).

Deﬁnição 3.1.3. Seja S = (a, b)

P. Deﬁnimos a ordem de S, denotado por ord(S),

∈

ord(S) = 0 se a = 0

Para a > 0, e assumindo que sejam deﬁnidos as ordens de todos os elementos
S com a′ < a. Neste caso, temos que, ord(S) = ord((E(S))) + 1.
(a′, b′)

∈

Podemos reformular a deﬁnição na seguinte forma:

Deﬁnição 3.1.4. Seja S = (a, b)

P. Deﬁnimos a ordem de S, denotado por ord(S),

∈

ord(S) = 0 se, e somente se, S /
∈

P∗

em geral, ord(S) = k se, e somente se k é o menor inteiro positivo tal que Ek(S) /
∈
P∗.

como

•

•

como

•

•

Exemplo 3.1.1. Vamos determinar a ordem de S = (1260, 3010).

Realizando as divisões sucessivas, temos

1260 + 490

·

490 + 280

280 + 210

3010 = 2.

·
1260 = 2

490 = 1

·
280 = 1

·
210 = 3

210 + 70

70 + 0

·

Portanto

Portanto ord(S) = 5.

E(1260, 3010) = (490, 1260)
E2(1260, 3010) = E(490, 1260) = (280, 490)
E3(1260, 3010) = E(280, 490) = (210, 280)
E4(1260, 3010) = E(210, 280) = (70, 210)
E5(1260, 3010) = E(70, 210) = (0, 70) /
∈

P∗

Proposição 3.1.4. Se S = (a, b)

P, então ord(S)

a.

≤

∈

Demonstração. Suponha que Ek(S) = (ak, bk), sendo que a0 = a, b0 = b. Como ak é
o resto na divisão de bk−1 por ak−1, temos que a = a0 > a1 > a2 >
. Este processo
termina no primeiro inteiro positivo k = ord(S) tal que ak = 0, mostrando que a

· · ·

k.

≥

Proposição 3.1.5. Para qualquer S = (a, b)

P,

ord(S) = 1 se, e somente se a

b.

|

∈

Demonstração. Observe que ord(S) > 0

a

= 0. Neste caso seja b = q

a + r. Portanto

·

⇔

ord(S) = 1

⇔

⇔

⇔

E(S) = (r, b) tem ordem 0

r = 0

b.

a

|

Proposição 3.1.6. Seja Fn = (fn, fn+1) onde fn é o n

enésimo número de Fibonacci.

−

fn = fn−1 + fn−2, n

F0

F1

F2

F3

F4

F5

F6

0, f1 = 0, f1 = 1.

1

1

2

3

5

8

13

≥

0

1

1

2

3

5

8

Se n

≥

0, então vale os seguintes aﬁrmações:

(i) D(Fn) = Fn+1

(ii) Se n

= 1, então E(Fn+1) = Fn.

Demonstração.

(i) D(Fn) = D((fn, fn+1)) = (fn+1, fn + fn+1) = Fn+1.

(ii) De (i) temos que

Portanto pelo Proposição 3.1.2

Fn+1 = D(Fn).

E(Fn+1) = E(D(Fn)) = Fn.

6
6
Vamos calcular as ordens dos F′

ns. Antes calculamos as ordens do 5 primeiros F′

ns.

Exemplo 3.1.2.

1. ord(F0) = ord((f0, f1)) = ord((0, 1)) = 0 por deﬁnição

2. ord(F1) = ord((f1, f2)) = ord((1, 1)) = 1 pelo Proposição 3.1.5

3. ord(F2) = ord((f2, f3)) = ord((1, 2)) = 1 pelo Proposição 3.1.5

4. ord(F3) = ord((f3, f4)) = ord((2, 3)) = ord(1, 2) + 1 = 2, pois 3 = 1

2 + 1

·

Teorema 3.1.1. Se n

2, então ord(Fn+1) = n.

≥

Demonstração. Vamos provar por indução.

Para n = 2, temos que F3 = (f3, f4) = (2, 3). Pelo algoritmo da divisão temos que

3 = 1

2 = 2

2 + 1

1 + 0

·

·

Logo E2(F3) = E2(2, 3) = E(1, 2) = (0, 1) /
∈
valido para n = 2.

P∗. Portanto ord(F3) = 2. É resultado é

Suponha, agora, que, para algum n

2, saibamos que

≥

ord(Fn+1) = n.

Provemos que o resultado é valido para n + 1. Isto vamos provar que ord(Fn+2) = n + 1.
Para isto, note que E(Fn+2) = Fn+1. Portanto

ord(Fn+2) = ord((E(Fn+2))) + 1 = ord(Fn+1) + 1 = n + 1

que mostra o resultado desejado.

Portanto, pelo principio de indução ord(Fn+1) = n para n

2.

≥

Vamos enunciar o principal resultado neste trabalho.

Teorema 3.1.2. Seja n

≥

2. Para qualquer par S = (a, b) de ordem n, temos que

S

≥

Fn+1,

isto é a

fn+1 e b

fn+2.

≥

≥

Portanto Fn+1 é o menor elemento de P de ordem n.

Demonstração. Observe que os casos quando n = 0 e n = 1 são triviais:

•

•

Suponha que S = (a, b) tem ordem 0. Como F0 = (f0, f1) = (0, 1) e que ord(S) = 0

devemos ter que a = 0. Mas como b > a, temos que b

1. Portanto S

F0.

≥

≥

Suponha que S = (a, b) tem ordem 1. Como F1 = (f1, f2) = (1, 1) e que ord(S) = 1

devemos ter que a

≥

1. Mas como b > a, temos que b

1. Portanto S

(1, 1) = F1.

≥

≥

Vamos provar o teorema por indução.

Para n = 2. Suponha que S = (a, b) possui ordem 2. Se a = 0, então ord(S) = 0 e se

a = 1, então pelo Proposição 3.1.5 temos que ord(S) = 1. Portanto, podemos concluir

que a

2. Se a = b, então de novo pelo Proposição 3.1.5, temos que ord(S) = 1. Logo

≥

2

≤

a < b. Mas isto implica,

S = (a, b)

≥

(2, 3) = F3.

Portanto o resultado é valido para n = 2.

Suponha, agora, que, o resultado é valido até n. Isto é S = (a, b) possui ordem n e

S

≥

Fk+1 para k = 2, 3,

, n.

· · ·

Provemos que o resultado é valido para (n + 1). Isto vamos provar que se S = (a, b) tem

ordem (n + 1), então S

Fn+2.

≥

Para isto, note que ord(E(S)) = n, logo pelo processo de indução temos que

E(S)

≥

Fn+1. Usando as Proposições 3.1.2 e 3.1.3, temos que

S = D(E(S))

≥

D(Fn+1) = Fn+2

que mostra o resultado desejado.

Portanto, pelo principio de indução qualquer S de ordem (n + 1) satisfaz S

Fn+2.

≥

Observação 3.1.2. O reciproca do Teorema 3.1.2 não é verdadeiro. Por exemplo,

F4 = (3, 5) tem ordem 3 e (3, 5)

(3, 6) é 1.

(3, 6) mas como 3 divide 6, sabemos que a ordem de

≤

3.2 Estimativa das ordens de Fn

Vamos provar nesta seção o seguinte resultado:

Teorema 3.2.1. Se X = (a, b)

P, então ord(X)

5 log10(a) + 1.

≤

∈

Demonstração. Primeiramente, observe do Teorema 3.1.2, que para qualquer par

X = (a, b) de ordem n,

X

≥

Fn+1,

logo a

fn+1.

≥

(3.1)

Aﬁrmação 1: fn+1 > Φn−1 para n
Vamos provar esta aﬁrmação por indução:

≥

2, onde Φ =

1 + √5
2

, o razão áurea.

•

•

•

Para n = 2, Φ < 2 = f3

Para n = 3, Φ2 =

3 + √5
2

< 3 = f4

Agora suponha que para algum k
Como Φ é uma solução de x2

x

∈

k < n temos que Φk−1 < fk+1.
N, 3
1 = 0 temos que Φ2 = Φ + 1. Portanto

≤

−
−
Φn−3 = (Φ + 1)

Φn−1 = Φ2

·

Φn−3 = Φn−2 + Φn−3.

·

Pelo hipótese de indução temos que Φn−2 < fn e Φn−3 < fn−1. Somando este dois
inequações temos que

Φn−1 = Φn−2 + Φn−3 < fn + fn−1 = fn+1.

Logo a aﬁrmação também é valido para k = n. Portanto

fn+1 > Φn−1 para n

2

≥

(3.2)

Usando as Equações (3.1) e (3.2) temos que

fn+1 > Φn−1 para n

a

≥

2.

≥

Como log10 Φ >

1
5

temos que

Portanto,

log10 a > (n

1) log10 Φ >

−

(n

1)

.

−
5

1 < 5

n

−

·

log10 a

Corolário 3.2.1. Suponha X = (a, b)

a. Então ord(X)

5k.

≤

P e existe k dígitos na representação decimal de

∈

Demonstração. Como na representação decimal a possui k dígitos temos que

a < 10k,

logo log10 a < k.

Então pelo Teorema 3.2.1 temos

ord(X) < 5k + 1.

Como ord(X) é um inteiro, concluímos que ord(X)

5k.

≤

3.3 Aplicação usando GeoGebra

Neste seção ﬁzemos essa aplicação no GeoGebra para ilustrar a geometria do pro-

blema do ordem. A função E, em Deﬁnição 3.1.2 mapeia o conjunto P dos pares em si

mesmo. Aplicando E sucessivamente a um par P = (a, b), obtemos uma sequencia de

pontos até o algoritmo parar. A ordem de P, ord(P) é simplesmente o número de lados

da poligonal obtida.

Figura 3.1: Aplicação usando GeoGebra

Chamamos de T o conjunto P do , os pares (i, j) com i

≤
A lista I são os pares gerados no algoritmo de Euclides, ou seja,

j.

onde E é a aplicação deﬁnida no 3.1.2.

P, E(P ), E2(P ),

· · ·

Este aplicativo simplesmente permite que o usuário escolha o par P e aplica o

algoritmo de Euclides, exibindo os passos intermediários como uma linha poligonal que

começa no par P = (i, j) e termina no par (0, mdc(i, j)). Também é exibido os pares

de Fibonacci, e aí ﬁca claro que quando o par P é um par de números de Fibonacci

adjacentes, a poligonal tem mais vértices, ou seja, o algoritmo tem mais etapas.

Escolhemos o ponto P (11, 28) e aplicamos a função E. Assim temos os (6, 11), (5, 6), (1, 5)

e (0, 1). Este conjunto de números estão em azul.

Os pares de Fibonacci estão em vermelho. Podemos veriﬁcar que o menor par de números

de ordem 4 é os pares adjacentes de Fibonacci (5, 8).

3.4 Ternos de Números e Ternos de Números de Fibo-

nacci

Neste seção vamos provar resultados análogos a seção anterior excepto que va-

mos aplicar a divisão euclidiana para ternos de números. Vamos deﬁnir as notações que

usaremos neste seção.

(a, b, c) : a, b, c

N, a

b

≤

≤

∈

c, c

= 0

.

}

(a, b, c)

∈

T : a

= 0

}

{

T :=

{
T∗ :=

•

•

•

Gn =

{

(gn, gn+1, gn+2) : gn, gn+1, gn+2 são números de Fibonacci

}

Deﬁnição 3.4.1. Sejam X = (a1, b1, c1) e Y = (a2, b2, c2)

X

Y

≤

⇔

a1

≤

a2,

b

≤

b2 e c1

T. Dizemos que

c2.

∈

≤

Análogo ao caso de pares temos

Proposição 3.4.1. A relação binaria

ordenação total.

Deﬁnição 3.4.2.

é uma ordenação parcial de T, mas não uma

≤

Se S = (a, b, c)

Se S = (a, b, c)

∈

∈

•

•

T∗, deﬁnimos E(S) = (min(rb, rc), max(rb, rc), a)

T, onde

∈

c = qc(a) + rc

b = qb(a) + rb

T, deﬁnimos D(S) = (c, a + c, b + c)

T∗,

∈

Temos os análogos da Proposições 3.1.2 e 3.1.3 neste caso:

Proposição 3.4.2. Se S = (a, b, c)

∈

T e a < b < c, então E(D(S)) = S.

Proposição 3.4.3. A função D : T

T∗ é injetora e preserva a ordem.

→

Deﬁnição 3.4.3. Seja S = (a, b, c)

como

•

ord(S) = 0 se a = 0

T. Deﬁnimos a ordem de S, denotado por ord(S),

∈

6
6
•

Para a > 0, e assumindo do que sejam deﬁnidos as ordens de todos os elementos
(a′, b′, c′)

T com a′ < a. Neste caso, temos que, ord(S) = ord((E(S))) + 1.

∈

Em outras palavras, a ordem de um terno de números é quantidade de divisões

sucessivas no algoritmo da divisão para reduzir o caso de terno de números para o caso de

pares de números (um dos termos com zero). De novo como no caso de pares de números

ordenados podemos reformular a deﬁnição na seguinte forma:

Deﬁnição 3.4.4. Seja S = (a, b, c)

T. Deﬁnimos a ordem de S, denotado por ord(S),

∈

como

•

•

ord(S) = 0 se, e somente se, S /
∈

T∗

em geral, ord(S) = k se, e somente se k é o menor inteiro positivo tal que Ek(S) /
∈
T∗.

Exemplo 3.4.1. Vamos determinar a ordem de S = (77, 91, 203).

Realizando as divisões sucessivas, temos

203 = 2(77) + 49

91 = 1(77) + 14

Aplicamos o algoritmo da divisão de novo para o terno (14, 49, 77);

77 = 5(14) + 7

49 = 3(14) + 7

Aplicamos o algoritmo da divisão de novo para o terno (7, 7, 14);

14 = 2(7) + 0

7 = 1(7) + 0

Portanto

E(77, 91, 203) = (14, 49, 77)
E2(77, 91, 203) = E(14, 49, 77) = (7, 7, 14)
E3(77, 91, 203) = E(7, 7, 14) = (0, 0, 7) /
∈

P∗

Portanto ord(S) = 3.

Temos os análogos da Proposições 3.1.4 e 3.1.5 neste caso:

Proposição 3.4.4. Se S = (a, b, c)

T, então ord(S)

a.

≤

∈

Proposição 3.4.5. Para qualquer S = (a, b, c)

ou a

c.

|

T,

ord(S) = 1 se, e somente se a

b

|

∈

3.4.1 Determinando o menor ternos de ordem 0, 1, 2 ,3, etc

(1) Aﬁrmação: G0 = (0, 0, 1) é o menor terno de ordem 0.

Demonstração. Primeiramente observamos que G0 tem ordem zero pois a primeira

coordenada a é zero. Falta provar que as segunda e terceira coordenadas as os

menores possíveis. Mas este é o caso pois a coordenada b é zero e a coordenada c

não poderia ser zero. Portanto G0 = (0, 0, 1) é o menor elemento de T de ordem

0.

(2) Aﬁrmação: G1 = (1, 1, 1) é o menor terno de ordem 1.

Demonstração. Primeiramente observamos que G1 tem ordem 1, pois

1 = 1(1) + 0

1 = 1(1) + 0.

Logo E(G1) = (0, 0, 1) que tem ordem 0 e ord(G1) = ord(E(G1)) + 1 = 0 + 1 = 1.

Agora suponha que S = (a, b, c) tem ordem 1. Então da Proposição 3.4.4 temos que

a > 0; logo 1 é o menor próximo natural que pode ﬁcar na primeira coordenada.

Como a

b

c, o menor número natural para as segunda e terceira coordenadas é

≤
1. Portanto S = G1.

≤

(3) Aﬁrmação: G2 = (2, 3, 3) é o menor terno de ordem 2.

Demonstração. Primeiramente observamos que G2 tem ordem 2, pois

Logo E(G2) = (1, 1, 2). E

3 = 1(2) + 1

3 = 1(2) + 1.

2 = 2(1) + 0

1 = 1(1) + 0.

Portanto E2(G2) = E(1, 1, 2) = (0, 0, 1). que tem ordem 0 e

ord(G2) = ord(E2(G2)) + 2 = 0 + 2 = 2.

Agora suponha que S = (a, b, c) tem ordem 2. Vamos analisar a primeira coordenada

a. Da Proposição 3.4.4 temos que 2 = ord(S)

a. Sabemos que a

b

c, logo os

≤

≤

≤

menores valores de b e c pode ser 2. Mas se a divide b ou c, então a ordem vai ser

1. Portanto os menores possíveis valores de b e c é 3. Portanto S = G2.

(4) Aﬁrmação: G3 = (5, 7, 8) é o menor terno de ordem 3.

Demonstração. Primeiramente observamos que G5 tem ordem 3, pois

Logo E(G3) = (2, 3, 5),

8 = 1(5) + 3

7 = 1(5) + 2.

5 = 2(2) + 1

3 = 1(2) + 1.

Logo E2(G3) = E(2, 3, 5) = (1, 1, 2). E

2 = 2(1) + 0

1 = 1(1) + 0.

Portanto E3(G3) = E(1, 1, 2) = (0, 0, 1) que tem ordem 0 e

ord(G3) = ord(E3(G3)) + 3 = 0 + 3 = 3.

Agora suponha que S = (a, b, c) tem ordem 3. Seja

b = qb(a) + rb

c = qc(a) + rc.

As seguintes condições devem vale:

(i) rb 6

= 0, 1 e rc 6

= 0, 1 : Se rb = 0 ou rc = 0 então ord(E(s)) = 0 logo
2, contradição

1, logo ord(S)

ord(S) = 1; e se rb = 1 ou rc = 1 então ord(E(S))
em ambos os casos. Portanto rb 6

= 0, 1 e rc 6

≤
= 0, 1.

≤

= rc : Se rb = rc, então ord(E(S))

(ii) rb 6
Portanto rb 6

= rc.

1, logo ord(S)

2 contradição.

≤

≤

•

•

•

Agora , se a = 2, então temos que rb, rc ≤
a
≥

3.

1, contradizendo (i). Portanto

Se a = 3 então pelo (i) temos que rb = rc = 2, que vai contradizer (ii). Portanto
a

4.

≥

Se a = 4, então por (i), rb nem rc pode ser 0, 1. E por (ii), não podemos
ter rb = rc. Portanto E(S) = (2, 3, 4). Entretanto isto implicaria que E2(S) =
(0, 1, 2) logo ord(S) = 2 < 3 contradição.

Portanto a

≥

5. Como devemos ter que rb, rc ≥
5 + 2 = 7 e

b = qb(a) + rb ≥

c

≥

b + 1

8.

≥

2 e b < c, concluímos que

Portanto S

G3.

≥

Deﬁnição 3.4.5. Para k

≥

4, considere Gk−1 = (ak−1, bk−1, ck−1) e seja

Deﬁnimos Gk = D(Gk−1) = (ak, bk, ck), onde

ak = ck−1

bk = ck−1 + ak−1

ck = ck−1 + bk−1

isto é, Gk é a k

−

linha na tabela abaixo:

0

1

2

5

8

15

0

1

3

7

13

23

1

2

5

8

15

28

G3

G4

G5

Teorema 3.4.1. Para todo n

≥

0, Gn é o menor terno de T de ordem n.

Demonstração. Já veriﬁcamos para n = 0, 1, 2 e 3. Logo vamos assumir que n

4 e que

≥
1); vamos provar que o resultado é valido para n.

o resultado é valido para (n

−

Como E(Gn) = E(D(Gn−1)) = Gn−1 tem ordem (n

1), concluímos que

−

Agora suponha que S = (a, b, c) é qualquer elemento de T de ordem n. Precisamos mostrar

ord(Gn) = (n

1) + 1 = n.

−

que S

Gn. Seja E(S) = (r, s, a) (logo r

s < a) e Y = D(E(S)) = (a, a + r, a + s).

≥
Aﬁrmação: Y

≤

e a + s

c (pois ambos os ternos tem a em suas primeiras coordenadas.) De Y = E(S)

S. Para veriﬁcar esta aﬁrmação devemos provar que a + r

b

≤

≤

≤

temos que ou

(1) b = q1a + r e c = q2a + s;

ou

(2) b = q1a + s e c = q2a + r

onde q1, q2

1.

≥
No caso (1). Observe que

q1a + r

b

≥

≥

a + r

e

c

q2a + s

≥

≥

a + s como queiramos.

No caso (2). Como s

c

≥

q1a + s

a + s.

≥

r, temos que b = q1a + s

a + r. E como c

b, temos que

≥

≥

≥

Como ord(Y ) = ord(E(S)) = n

1, temos que Gn−1

Y. Segue que

≤

−

Gn = D(Gn−1)

≤

D(Y ) = D(E(S)) = S, que completa o processo de indução.

Deﬁnição 3.4.6. Chamamos an o n

ésimo terno Fibonacci número.

−

A deﬁnição acima é devido a semelhança da recorrência dos an‘s com a recorrência

dos números de Fibonacci fn‘s.

Proposição 3.4.6. Se Gk = (ak, bk, ck) como deﬁnido acima, para k

4 temos que

≥

Demonstração. Sabemos que

ak = ak−1 + ak−2 + ak−3.

ak = ck−1

bk = ck−1 + ak−1

ck = ck−1 + bk−1

Logo

ak = ck−2 + bk−2 = ak−1 + (ck−3 + ak−3) = ak−1 + ak−2 + ak−3.

Em outras palavras, se os G são colocadas em colunas na Deﬁnição 3.4.5 cada

entrada em Gk para k > 3 é a soma dos 3 primeiros termos na sua coluna. Este é similar
a deﬁnição dos números de Fibonacci.

Mostramos em Teorema 3.4.1 que para cada n

de ordem n.

N, Gn é o menor elemento de T

∈

Mais geral podemos fazer a seguinte deﬁnição:

Deﬁnição 3.4.7. Se gn é uma sequência não decrescentes de inteiros positivos, deﬁnimos
os ternos números de Fibonacci pela formula

gk = gk−1 + gk−2 + gk−3.

Estamos interessados em provar um resultado similar ao “Razão Aurea” dos núme-

ros de Fibonacci, isto queremos saber como é

lim
n→∞

gn+1
gn

.

3.4.2 Convergência de

gn+1
gn

Neste seção vamos provar que a razão entre os ternos números de Fibonacci adja-

centes gn e gn+1 converge para um número Ψ
As sequências estão dado por :

≈

1, 83 quando n

.

→ ∞

g4 g5 g6 g7

g8

g9

↓
3

↓
5

↓
9

↓
↓
↓
17 31 57

· · ·

· · ·

Deﬁnição 3.4.8. Para n

4 seja

≥

ρn =

gn+1
gn

onde g4, g5, g6,

· · ·

são os ternos números de Fibonacci 3, 5, 9,

· · ·

Podemos observar que

g5
g4

g6
g5

g7
g6

g8
g7

g9
g8

ρ4 =

ρ5 =

ρ6 =

ρ7 =

ρ8 =
...

=

=

=

=

=

5
3

9
5

17
9

31
17

57
31
...

= 1, 666...

=

1, 8

= 1.8888...

= 1, 823...

= 1, 823...

Lema 3.4.1. Para k

2, temos que

≥

ρk+1 = 1 +

1
ρk

+

1
ρkρk−1

Demonstração. Temos que

gk+2 = gk+1 + gk + gk1.

Logo dividindo por gk+1 temos que

gk+2
gk+1

= 1 +

= 1 +

= 1 +

gk
gk+1
gk
gk+1
1
ρk

+

+

+

gk−1
gk+1
gk−1
gk
1
ρkρk−1

gk
gk+1

·

Lema 3.4.2. A sequência ρn é decrescente e limitada. Portanto converge para um certo
número que chamamos de Ψ, isto é

O número Ψ é a solução única x > 1 da equação

lim
n→∞

ρn = Ψ.

x3

x2

x

−

−

−

1 = 0.

Demonstração. Se lim
n→∞

ρn = Ψ então pela relação em Lema 3.4.1 temos

Isto implica que

Ψ = 1 +

1
Ψ

+

Ψ

1

·

.

Ψ

Ψ3

Ψ2

−

Ψ

−

−

1 = 0.

Observação 3.4.1. Resolvendo a equação x3

x2

x

−

−

−

1 por Maple temos que

e uma solução exata usando Maxima é

Ψ = 1, 839286755

,

· · ·

Ψ =

(19 + 3√33)1/3
3

+

4
3(19 + 3√33)1/3 +

1
3

.

Ψ é maior do que o razão aurea (cid:16)

1 + √5
2

1, 618(cid:17).

≈

Capítulo 4

Uma Proposta para Ensino Médio

4.1 O Objetivo da Atividade

A matemática sem sombra de dúvidas é uma das disciplinas que apresentam-se

para o aluno com um enorme grau de diﬁculdade. É aí que entra o papel do professor

como agente facilitador do conhecimento. O ato de motivar o aluno é essencial para

que os alunos despertem o prazer e o desejo de aprender novos conteúdos. A ideia da

investigação matemática proporciona aos alunos conhecimentos a partir das inferências

feitas pelos mesmos.

Segundo o PCN, “A Matemática no Ensino Médio tem um valor formativo, que

ajuda a estruturar o pensamento e o raciocínio dedutivo, porém também desempenha um

papel instrumental, pois é uma ferramenta que serve para a vida cotidiana e para muitas

tarefas especíﬁcas em quase todas as atividades humanas”. Partindo desse princípio é que

propomos a elaboração de uma atividade utilizando a Sequência de Fibonacci se relaci-

onando com o Algoritmo de Euclides com o objetivo de estimular o raciocínio indutivo

dos alunos levando a perceber que esses temas estão ligados entre si e que fazem parte do

nosso cotidiano.

4.2 Sequência Didática da Atividade

A atividade deverá ser proposta numa turma de 2o Ano do Ensino Médio pois
é nessa série que são introduzidas as sequências como parte introdutória do ensino de

Progressão Aritmética e Progressão Geométrica.

Iniciaremos com a introdução do estudo de sequências quaisquer e em seguida

apresentaremos o problema dos coelhos (Sequência de Fibonacci). Logo após deﬁnirmos

a sequência de Fibonacci mostraremos a Razão Áurea existente entre pares adjacentes

de Números de Fibonacci a partir do terceiro e quarto termos, quarto e quinto, e as-

35

sim sucessivamente. (Nesse momento será permitido o uso de calculadora facilitando o

entendimento da convergência áurea).

Retomando conceito de cálculo do MDC através do algoritmo de Euclides faremos

para um par (a, b) e depois para o terno (a, b, c) lembrando que possivelmente o terno não

deve ter sido estudado em séries anteriores. Mostraremos a quantidade de divisões suces-

sivas feiras (passos) que chamaremos de ordem. Agora já com o conceito do MDC(a, b, c)

voltaremos para Sequência de Fibonacci e iremos relacionar os pares e os ternos adjacen-

tes, mostrando que (0, 1) é o menor de ordem 0 para os pares, (1,1) e o menos de ordem

1, (2, 3) é o menor de ordem 2. Além disso, mostraremos os ternos de menor ordem além

de estabelecer uma razão convergente para os ternos.

Atividade 1: Qual o número de pares de coelho que serão gerados em um ano, a

partir de um casal de coelhos jovens, considerando que nenhum coelho morre durante o

ano, cada casal de coelhos gera outro casal de coelhos mensalmente e cada coelho fêmea

ﬁca fértil após dois meses?

O objetivo desta atividade é a introdução das propriedades dos números de Fibo-

nacci. A duração prevista é 2h/ aula.

O desenvolvimento da atividade ocorrerá da seguinte maneira: Primeiro será feita

a introdução dos números de Fibonacci, em seguida o professor pedirá aos alunos para

veriﬁcar se há um padrão estabelecido para esses números bem como para a própria

sequência. Após feitas as conclusões por parte dos alunos, caberá ao professor fazer a

exposição e explicação das propriedades de Fibonacci, sempre tornando a linguagem de

forma mais acessível.

Atividade:

Escrita dos dez primeiros números de Fibonacci;

Cálculo da soma dos termos pares

f2 + f4; f2 + f4 + f6; f2 + f4 + f6 + f8; f2 + f4 + f6 + f8 + f10

Cálculo da soma dos termos ímpares

f1 + f3; f1 + f3 + f5; f1 + f3 + f5 + f7; f1 + f3 + f5 + f7 + f9

Atividade 2: Razão de Ouro - Nessa Atividade o objetivo é determinar a conver-

gência entre pares de números adjacentes de Fibonacci para uma razão conhecida como

número de Ouro ou Razão Áurea.

Duração: 2h/ aula. Recursos: lápis, borracha, régua, quadro negro, atividade im-

pressa, pincel e calculadora.

Atividade: Já conhecendo a sequência de Fibonacci

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144,

,

· · ·

Montar pares adjacentes de Fibonacci a partir do terceiro e quarto termo e estabelecer a

razão entre fn+1 / fn.

f4
f3

f5
f4

f6
f5

f7
f6
...
fn+1
fn

=

=

=

=

=

1, 5

1, 6

=

=

=

=

3
2

5
3

8
5

13
8
...

= Φ = (aprox.1, 618)

À medida que prosseguimos nas divisões de pares adjacentes de Fibonacci vamos

convergindo para o número Φ que denominamos Número de Ouro, além de mostrar a

irracionalidade desse número bem como o valor para o qual ele converge.

Atividade 3: Ampliando o conceito de MDC de pares (a, b) ou MDC(a, b) para o

MDC de ternos (a, b, c) ou MDC(a, b, c) usando o algoritmo Euclidiano.

Duração: 1h/ aula. Recursos: Os mesmos da atividade anterior, porém sem cal-

culadora.

Atividade:

Calcular o MDC de (306, 657).

Utilizando o algoritmo de Euclides, temos:

2

6

1

657

306

45

36

45

36

9

0

4

9

657 = 2(306) + 45

ou

306 = 6(45) + 36

45 = 1(36) + 9

36 = 4(9) + 0

Podemos já estabelecer a quantidade de passos dados. Lembrando que esse con-

teúdo já foi visto pelo aluno nas séries iniciais.

Ampliando para o terno (203, 91, 97)

Calcule o MDC (203, 91, 77)

203 = 2(77) + 49

91 = 1(77) + 14

A partir da primeira divisão teremos agora o terno (77, 49, 14)

77 = 5(14) + 7

49 = 3(14) + 7

O novo terno, (14, 7, 7)

14 = 2(7) + 0

7 = 1(7) + 0

Como ambos os restos são zeros, o MDC (203, 91, 77) = 7.

Atividade 4: Com essa atividade pretendemos mostrar que o algoritmo de Eucli-

des se relaciona com os pares de Fibonacci.

Duração: 2h/ aula. Recursos: Os mesmos da atividade anterior, com uso da cal-

culadora.

Atividade: Calcule o MDC dos seguintes pares:

(1, 2), (2, 3), (3, 5), (5, 8), (8, 13)

Objetivo: após o cálculo o aluno deverá perceber que todos os pares utilizados são núme-

ros adjacentes de Fibonacci e o MDC é igual a 1. E que a quantidade de passos (ordem)

dados para se chegar ao ﬁm do processo é diferente em cada um dos caso. À medida que

os pares de Fibonacci crescem, também cresce o número de passos.

Atividade: Calcule o MDC dos seguintes pares:

(2, 4)

Perceba que esse par não é número de Fibonacci, mas a quantidade de passos dados é a

mesma do MDC (1,2). E seguindo utilizando outros pares de números não adjacentes de

Fibonacci, encontraremos por exemplo (6,7). A quantidade de passos dados é igual ao

MDC (2,3). Se seguirmos pegando por quaisquer de números (a,b) chegaremos à conclu-

são de que para cada uma das ordens, o par adjacente de Fibonacci será sempre o menor

par na respectiva ordem.

Atividade 5: Nessa atividade iremos ampliar a ideia de pares adjacentes de Fi-

bonacci para ternos saindo da recorrência fn = fn−1 +fn−2 para a recorrência
gn = gn−1 +gn−2 +gn−3. E provar que existe um outro valor de convergência.
Duração 2h/ aula. Recursos: os mesmos da atividade anterior, com uso da calculadora.

Atividade: Primeiro iremos deﬁnir quem é essa nova sequência, que será:

1, 1, 1, 2, 3, 5, 9, 17, 31, 57, 105,

,

· · ·

Obs.: o aluno deverá notar que ampliamos a ideia de soma dos dois termos anteriores

para a ideia dos três termos anteriores. Agora pedimos para os alunos estabelecerem a

razão entre gn+1/gn a partir do quarto e quinto termo.

g5
g4

g6
g5

g7
g6

g8
g7

g9
g8
...
gn+1
gn

=

=

=

=

=

=

=

=

=

=

=

5
3

9
5

17
9

31
17

57
31
...

1, 666...

1, 8

1.8888...

1, 823...

1, 823...

= Ψ = (aprox.1, 83)

Bibliograﬁa

[1] COOPER, IAN. The Euclidean Algoritm and a generalization of the Fibo-

nacci Sequence. Disponível em https://www.whitman.edu/Documents/Academics

/Mathematics/SeniorProject_IanCooper.pdf

[2] EPASINGHE, P.W. Euclid´s Algorithm and the Fibonacci Numbers. Dispo-

nível em https://www.fq.math.ca/Scanned/23-2/epasinghe.pdf

[3] Santos N. L. P.

., O misterioso e

enigmático mundo de Pascal

e Fibonacci. Dissertação Profmat, 2017. Disponível em https://sca.profmat-

sbm.org.br/sca_v2/get_tcc3.php?id=160570144.

[4] Azevedo, T. do Carmo., Sequências de Fibonacci e Tribonacci: uma apresen-

tação geométrica. Dissertação Profmat, 2018. Disponível em https://sca.profmat-

sbm.org.br/sca_v2/get_tcc3.php?id=150400041.

[5] Silva P. Estefano Araújo da., Sequências de Fibonacci

e Ensino

Médio. Dissertação Profmat,

2017. Disponível

em https://sca.profmat-

sbm.org.br/sca_v2/get_tcc3.php?id=150251331.

[6] Borges F. Pereira., A Sequência de Fibonacci e algumas de suas

aplicações. Dissertação Profmat,

2015. Disponível

em https://sca.profmat-

sbm.org.br/sca_v2/get_tcc3.php?id=78366.

[7] BRASIL., Parâmetros Curriculares Nacionais. Ciências da Natureza e Ma-

temática e Suas Tecnologias. Brasília: MEC, 2010.

40

