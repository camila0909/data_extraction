Universidade Federal do Rio Grande do Norte

Centro de Ciências Exatas e da Terra

Mestrado Proﬁssional em Matemática em Rede Nacional

Fábio Alvaro Dantas

Explorando a lógica dentro da calculadora

Natal, 2015

Fábio Alvaro Dantas

Explorando a lógica dentro da calculadora

Trabalho apresentado ao Programa de Pós-Graduação

em Matemática em Rede Nacional da Universidade

Federal do Rio Grande do Norte, em cumprimento com

as exigências legais para obtenção do título de Mestre.

Área de Concentração: Álgebra Booleana.

Orientador:

Prof. Dr. Paulo Roberto Ferreira dos Santos Silva

Natal, 2015

Fábio Alvaro Dantas

Explorando a matemática dentro da calculadora

Trabalho apresentado ao Programa de Pós-Graduação

em Matemática em Rede Nacional da Universidade

Federal do Rio Grande do Norte, em cumprimento com

as exigências legais para obtenção do título de Mestre.

Área de Concentração: Álgebra Booleana.

Aprovado em:

/

/

Banca Examinadora

Prof. Dr. Paulo Roberto Ferreira dos Santos Silva.

Departamento de Matemática - UFRN

Orientador

Prof. Dr. Marcelo Pedro dos Santos.

Departamento de Matemática - UFRPE

Prof. Dr. Débora Borges Ferreira.

Departamento de Matemática - UFRN

                                    Catalogação da Publicação na Fonte. UFRN / SISBI / Biblioteca Setorial  Centro de Ciências Exatas e da Terra – CCET.           Dantas, Fábio Alvaro. Explorando a matemática dentro da calculadora / Fábio Alvaro Dantas. - Natal, 2015. 56 f.: il.  Orientador: Prof. Dr. Paulo Roberto Ferreira dos Santos Silva.  Dissertação (Mestrado) – Universidade Federal do Rio Grande do Norte. Centro de Ciências Exatas e da Terra. Programa de Pós-Graduação em Matemática em Rede Nacional.  1. Álgebra booleana – Dissertação. 2. Ensino de lógica – Dissertação. 3. Ensino médio – Dissertação. 4. Calculadora – Dissertação. I. Silva, Paulo Roberto Ferreira dos Santos. II. Título.  RN/UF/BSE-CCET                                                     CDU: 512.563 Dedico este trabalho a minha família e amigos que tanto

me ajudam a conseguir meus objetivos.

Agradecimentos

Agradeço a SBM por ter criado o PROFMAT, a UFRN por disponibilizar as turmas, a CAPES pelo

auxílio ﬁnanceiro, aos professores do curso e em especial ao meu orientador, Professor Paulo Ro-

berto. Há também outras pessoas que com certeza são corresponsáveis por toda essa etapa. Entre

elas começo destacando os colegas da turma Ana, Márcio, Rodrigo, Wendell, Rogério, Igor, Val-

demiro, Emanuel, Fábio, Fernando, Hárrison, Adriano, Marthonni e Emerson. Ainda há o par-

ticipante honorário da turma Alisson, marido da colega Ana. Por ﬁm, agradeço minha família

que aturou as horas de estudo e mau humor, nesse ponto ninguém foi mais tolerante que minha

amada esposa Rosiane. A todos desejo tudo de melhor sempre em suas vidas.

Resumo

A presente dissertação tem por objetivo sugerir ao professor de matemática do ensino médio

uma forma de ensinar lógica aos estudantes. Para isso utiliza-se uma sequência didática que ex-

plora os conceitos matemáticos que estão envolvidos no funcionamento da calculadora, um dos

símbolos maiores da matemática.

PALAVRAS-CHAVE: Álgebra Booleana, Ensino de lógica, Ensino Médio, Calculadora.

Abstract

This dissertation aims to suggest the teacher of high school mathematics a way of teaching logic

to students. For this uses up a teaching sequence that explores the mathematical concepts that

are involved in the operation of a calculator one of the greatest symbols of mathematics.

KEYWORDS: Boolean Algebra, Logic education, High scholl, Calculator.

Lista de Figuras

2.1 Relação entre os binários e a combinação de leds acessa.

. . . . . . . . . . . . . . . .

2.2 Porta AND. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.3 Porta OR. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.4 Porta NOT.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.5 Circuito do condicional.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.6 Circuito do ou exclusivo. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.7 Porta XOR.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.8 Circuito do ou exclusivo com a porta XOR.

. . . . . . . . . . . . . . . . . . . . . . . . .

2.9 Circuito para realizar a soma de dois bits. . . . . . . . . . . . . . . . . . . . . . . . . . .

3.1 Esquema da base das portas lógicas, formado por caixas de fósforos e um palito de

churrasco . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.2 Esquema do eixo das portas lógicas constituídos por palitos de picolé . . . . . . . . .

3.3 Porta NOT com entrada = 0 e saída = 1 . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.4 Porta NOT com entrada = 1 e saída = 0 . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.5 Porta OR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.6 Porta AND . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.7 porta XOR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.8 Relação entre os binários e a combinação de leds acessa . . . . . . . . . . . . . . . . .

3.9 Versão ﬁnal da tabela do display de 7 segmentos

. . . . . . . . . . . . . . . . . . . . .

3.10 Professor representando valores 0 e 0. . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.11 Professor representando valores 0 e 1. . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.12 Professor representando valores 1 e 0. . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.13 Professor representando valores 1 e 1. . . . . . . . . . . . . . . . . . . . . . . . . . . . .

29

32

32

32

32

33

33

33

36

38

38

38

38

39

39

39

40

41

42

42

42

42

8

3.14 Disposição da calculadora humana de 2 bits . . . . . . . . . . . . . . . . . . . . . . . .

3.15 Professor testando as "portas lógicas".

. . . . . . . . . . . . . . . . . . . . . . . . . . .

3.16 Entrada 0 + 0 e resultado 00. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.17 Entrada 0 + 1 e resultado 01. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.18 Entrada 1 + 0 e resultado 01. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.19 Entrada 1 + 1 e resultado 10. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3.20 posicionamento dos alunos na calculadora humana de 2 bits.

. . . . . . . . . . . . .

3.21 Entrada 11 + 00 e resultado 011 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

43

45

46

46

46

46

47

47

9

Lista de Tabelas

1.1 Tabela verdade da proposição P.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2 Conjunção entre as proposições P e Q.

. . . . . . . . . . . . . . . . . . . . . . . . . . .

1.3 Disjunção entre as proposições P e Q. . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.4 Negação de P.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.5 Condicional entre as proposições P e Q. . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.6 Bicondicional entre as proposições P e Q. . . . . . . . . . . . . . . . . . . . . . . . . . .

1.7 Exemplo de tautologia. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.8 Exemplo de relação de implicação. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.9 Exemplo de relação de equivalência. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.1 Correspondência entre lógica proposicional e álgebra Booleana. . . . . . . . . . . . .

2.2 Resumo das propriedades da álgebra Booleana. . . . . . . . . . . . . . . . . . . . . . .

2.3 h(x) = f (x) ⊕ g (x). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.4 i (x) = f (x) ∗ g (x).

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.5 Condicional entre P e Q.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.6 Disjunção exclusiva entre as proposições P e Q.

. . . . . . . . . . . . . . . . . . . . . .

2.7 Tabulação dos dados da Figura 2.1.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.8 equivalência entre as portas lógicas e as operações Booleanas.

. . . . . . . . . . . . .

4

4

5

5

6

7

7

8

8

15

20

25

25

28

28

30

32

10

Sumário

Introdução

1 Lógica Proposicional

1.1 Tabela Verdade . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2 Operações Lógicas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2.1 Conjunção . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2.2 Disjunção . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2.3 Negação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2.4 Condicional

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2.5 Bicondicional

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.3 Tautologia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.3.1 Relação de Implicação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.3.2 Relação de Equivalência . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.4 Relação entre conjuntos e lógica proposicional

. . . . . . . . . . . . . . . . . . . . . .

2 Funções Booleanas

2.1 Álgebra Booleana . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.1.1 Propriedades

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.2 Funções Booleanas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.3 Circuitos Lógicos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.3.1 Construção de Circuitos Lógicos . . . . . . . . . . . . . . . . . . . . . . . . . . .

3 Propostas de Sequência Didática

ATIVIDADE 1: Construção de Portas Lógicas . . . . . . . . . . . . . . . . . . . . . . . . . . .

ATIVIDADE 2: Display de 7 segmentos

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

11

1

3

4

4

4

5

5

6

6

7

7

8

8

12

12

15

20

31

32

37

37

40

ATIVIDADE 3: Calculadora Humana . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

Considerações Finais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

A Sistema de numeração binário

A.1 Operações . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

A.1.1 Adição . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

A.1.2 Subtração . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

A.1.3 Multiplicação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

A.1.4 Divisão . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

42

48

49

51

51

52

53

54

12

Introdução

Atualmente há diversos fatores que dispersam a atenção dos alunos e a escola tradicional, com

seus métodos desatualizados, não consegue gerar interesse no educando. Essa nova geração de

estudantes tem acesso à informação de maneira quase instantânea através de vários dispositivos

como os celulares, tablets, notebooks e outros. Diante dessa perspectiva, cabe ao docente orientar

esse processo de aquisição do conhecimento. Segundo Canavarro[1], os professores funcionam

como mediadores entre o currículo e os alunos, no sentido de que é através dos professores que

os alunos acedem ao currículo pré-deﬁnido.

Portanto o docente deve mediar esse processo e guiar/despertar a curiosidade e interesse do es-

tudante em algo produtivo. No caso dos professores de matemática há a possibilidade de explorar

um dos maiores símbolos da própria disciplina, a calculadora, com vistas ao seu funcionamento.

Segundo os Parâmetros Curriculares Nacionais do Ensino Médio (PCNEM) [2], uma das ﬁnalida-

des do ensino de matemática para os estudantes é aplicar seus conhecimentos matemáticos a

situações diversas, utilizando-os na interpretação da ciência, na atividade tecnológica e nas ativi-

dades cotidianas.

Há diversos conceitos matemáticos envolvidos no funcionamento da calculadora, destacando-

se nesse rol a lógica matemática. Roger Sperry, prêmio Nobel de Medicina, no ﬁnal dos anos se-

tenta anunciou em seus estudos que o hemisfério esquerdo do cérebro possui dominância sobre

as funções verbais, lógicas, sequenciais, numéricas, lineares e analíticas do ser humano1. Estudar

lógica estimularia esse hemisfério do cérebro e contribuiria ainda mais para o desenvolvimento do

aluno. No âmbito da matemática há outros benefícios, como uma melhora no nível de abstração,

maior apropriação da linguagem simbólica envolvida, uma compreensão mais clara dos encadea-

1Para maiores informações sobre o tema é sugerida a leitura de [3]

1

mentos lógicos das demonstrações e de forma geral desenvolve o raciocínio dedutivo. Novamente

observando o que dizem os PCNEM [2]:

“A Matemática do Ensino Médio tem um valor formativo, que ajuda a estru-

turar o pensamento e o raciocínio dedutivo, porém também desempenha um

papel instrumental, pois é uma ferramenta que serve para a vida cotidiana

e para muitas tarefas especíﬁcas em quase todas as atividades humanas".

Tendo em vista o que foi exposto até agora, a presente dissertação tem o objetivo de oferecer

ao professor de matemática uma proposta de ensino, no formato de sequência didática, em que o

aluno será introduzido à lógica, mais especiﬁcamente à álgebra Booleana, visando o desenvolvi-

mento das habilidades descritas anteriormente. Para atingir o objetivo do trabalho, cada capítulo

da dissertação tem um papel especíﬁco.

O primeiro capítulo reﬂete sobre a lógica proposicional e sua relação com a linguagem dos con-

juntos. Esse capítulo é focado no professor de modo que ele tenha uma introdução ao tema e

possa posteriormente buscar aprofundar seus conhecimentos em outras fontes.

Já o segundo capítulo trata de uma abordagem sobre a álgebra Booleana visando dar fundamen-

tação teórica ao professor. O estudo da álgebra Booleana se torna importante pois os circuitos

digitais que estão miniaturizados e presentes nas calculadoras são aplicações diretas dessa álge-

bra. Além disso, a álgebra de Boole operacionaliza a lógica proposicional e também apresenta

alguns resultados necessários para fundamentar os métodos utilizados nas atividades, como por

exemplo, os métodos de construção de circuitos lógicos.

O último capítulo apresenta a proposta de atividade em si e fecha a dissertação com as conside-

rações ﬁnais sobre o tema e as expectativas sobre a continuidade do trabalho.

2

Capítulo 1

Lógica Proposicional

A lógica proposicional é um estudo que tem por objetivo determinar quais operações de racio-

cínio são válidas e quais não o são. Os entes fundamentais nessa análise são chamados de pro-

posições. As proposições são frases aﬁrmativas declarativas que contém palavras e/ou símbolos

matemáticos e obedecem às três leis do pensamento. Há diversas formulações para esses leis, mas

vamos adotar a que encontramos em Copi [4]

• O Princípio da Identidade aﬁrma que se qualquer proposição é verdadeira, então ela é ver-

dadeira.

• O Princípio da Contradição aﬁrma que nenhuma proposição pode ser verdadeira e falsa ao

mesmo tempo.

• O Princípio do Terceiro Excluído aﬁrma que um enunciado ou é verdadeiro, ou é falso.

São exemplos de proposições: “A Rússia é o maior país da Ásia", “O ouro é o metal mais valioso".

e “2+3=5". Não são proposições: “Quanto custa esse picolé?"(frase interrogativa), “Esta frase é

falsa"(incompatível simultaneamente com o Princípio do Terceiro Excluído e o da Contradição).

Para realizarmos as operações de raciocínio mencionadas no primeiro parágrafo existe a necessi-

dade de deﬁnirmos o conceito de tabela verdade e também alguns operadores lógicos.

3

1.1 Tabela Verdade

Dada uma proposição qualquer, P, sua tabela verdade é uma tabela que contém todos os valores

lógicos possíveis para a proposição. Pelo princípio do terceiro excluído, qualquer proposição P

tem apenas dois valores lógicos possíveis, Verdadeiro (V) ou Falso (F). Assim, a tabela verdade

para uma proposição P será da forma:

P

F

V

Tabela 1.1: Tabela verdade da proposição P.

1.2 Operações Lógicas

1.2.1 Conjunção

Sejam P e Q proposições quaisquer. Denotaremos a conjunção entre essas proposições por P∧Q

e lê-se: “P e Q". Os valores lógicos são deﬁnidos na seguinte tabela:

P Q P ∧ Q

F

F

F V

V F

V V

F

F

F

V

Tabela 1.2: Conjunção entre as proposições P e Q.

Observe que P ∧ Q só assume o valor lógico V quando as duas proposições P e Q são verda-

deiras. Por exemplo, sejam P e Q as proposições: “Maria é alta"e “Maria é loira". A proposição P

∧ Q, “Maria é alta e loira", só é verdadeira se P e Q forem ambas verdadeiras. Outra observação

a ser feita é que proposições formadas por outras proposições (exemplo: P ∧ Q) são chamadas

proposições compostas.

4

1.2.2 Disjunção

Sejam P e Q proposições quaisquer. Denotaremos a disjunção entre essas proposições por P ∨ Q

e lê-se: “P ou Q". A palavra ou tem signiﬁcado ambíguo e é utilizada em dois sentidos: o primeiro,

o sentido forte ou exclusivo, o ou tem o signiﬁcado de “exatamente um". Por exemplo, quando va-

mos ao restaurante e vemos o seguinte letreiro “Duas opções de Carne: Frango ou Peixe", o cliente

entende que ele pode escolher exatamente uma das opções, mas não as duas. Já o outro sentido

do ou, o sentido fraco ou inclusivo, pode ser entendido como “pelo menos um". Por exemplo, em

um jogo de futebol existem dois tipos de meia entrada: Para idosos ou para professores. Nesse

caso, desde que um dos pré-requisitos sejam atendidos, o torcedor pagará a meia entrada. Nada

impede que o torcedor seja professor e idoso ao mesmo tempo.

O latim tem duas palavras diferentes para esses sentidos do ou, sendo que aut expressa o ou

exclusivo e vel corresponde ao ou inclusivo. Na lógica proposicional é adotado o sentido inclusivo

do ou e o símbolo ∨ é usado em referência a primeira letra da palavra vel. Podemos ver na tabela

abaixo os valores lógicos de P ∨ Q.

P Q P ∨ Q

F

F

F V

V F

V V

F

V

V

V

Tabela 1.3: Disjunção entre as proposições P e Q.

1.2.3 Negação

Seja P uma proposição qualquer. Denotaremos a negação dessa proposição por ∼P e lê-se: “não

P". Os valores lógicos da negação são deﬁnidos na tabela verdade abaixo:

P ∼P

F

V

V

F

Tabela 1.4: Negação de P.

5

Note que ∼ F = V e ∼ V = F , ou seja, quando P assume um valor lógico qualquer, ∼P assume o

outro valor. Tome como exemplo a proposição “O sol é uma estrela", sua negação seria “O sol não é

uma estrela". Note que ambas as aﬁrmações não podem ser verdadeiras ao mesmo tempo (Princí-

pio da contradição) e mais ainda, quando uma aﬁrmação é verdadeira a outra é falsa e vice-versa.

Outro ponto importante sobre a negação se refere ao seu uso combinado com outros operadores

lógicos. A expressão ∼P∧Q poderia ser interpretada de duas formas distintas: (∼P)∧Q e ∼(P∧Q).

Essas duas interpretações tem tabelas verdade diferentes e assim com vistas a brevidade da ex-

pressão e para evitar ambiguidades convencionou-se que a negação será aplicada ao enunciado

mínimo. Assim, no caso de ∼P∧Q a interpretação válida será (∼P)∧Q, ou seja, o ∼ se aplica ao P e

não a expressão mais extensa P∧Q.

1.2.4 Condicional

Sejam P e Q proposições quaisquer. Denotaremos o condicional entre essas proposições por

P → Q e lê-se: “ Se P, então Q"onde os valores lógicos são deﬁnidos na tabela abaixo:

P Q P → Q

F

F

F V

V F

V V

V

V

F

V

Tabela 1.5: Condicional entre as proposições P e Q.

Note que P → Q só assume o valor lógico F quando as proposições P e Q assumem os valores

lógicos V e F respectivamente. Podemos ainda deﬁnir o condicional como sendo a negação da

conjunção entre P e a negação de Q, ou seja, ∼ (P ∧ ∼ Q). Mais adiante, no tópico onde se deﬁne

equivalência lógica, será mostrado o motivo de existir essa outra deﬁnição para o condicional.

1.2.5 Bicondicional

Sejam P e Q proposições quaisquer. Denotaremos o bicondicional entre essas proposições por

P ↔ Q e lê-se: “ P se e somente se Q". Pode-se alternativamente deﬁnir o bicondicional como uma

dupla aplicação do conectivo (→) onde os valores lógicos são exibidos na tabela abaixo:

6

P Q P ↔ Q

F

F

F V

V F

V V

V

F

F

V

Tabela 1.6: Bicondicional entre as proposições P e Q.

A partir desse ponto será adotada uma ordem de aplicação dos operadores lógicos expostos

nessa sessão. A ordem citada se baseia na exposta em Hegenberg [5] sendo da maior para a menor

prioridade: ∼, ∨, ∧, →, ↔. Assim a expressão P∧ ∼Q ↔ P deve ser entendida como P∧ (∼ Q) ↔ P.

1.3 Tautologia

Deﬁnição 1.1 Uma proposição composta é dita tautológica se para quaiquer valores lógicos das

sentenças que a compõe, seu valor lógico é sempre V.

Exemplo:

P ∼P P ∨ ∼ P

F

F

V

V

V

V

F

F

V

V

V

V

Tabela 1.7: Exemplo de tautologia.

1.3.1 Relação de Implicação

É um caso particular do operador condicional (→). Sempre que a condicional entre duas pro-

posições for tautológico usaremos o símbolo (⇒) para denotar essa condicional e a chamaremos

de implicação lógica ou implicação material.

Exemplo:

7

P Q P ∨ Q P⇒ (P∨ Q)

F

F

F V

V F

V V

F

V

V

V

V

V

V

V

Tabela 1.8: Exemplo de relação de implicação.

1.3.2 Relação de Equivalência

É um caso particular da relação bicondicional (↔). Sempre que a bicondicional entre duas pro-

posições resultar em uma tautologia usaremos o símbolo (⇔) para denotar essa bicondicional e

diremos que as proposições são equivalentes.

Exemplo:

P Q P → Q ∼ (P ∧ ∼ Q) P → Q ⇔ ∼ (P ∧ ∼ Q)

F

F

F V

V F

V V

V

V

F

V

V

V

F

V

V

V

V

V

Tabela 1.9: Exemplo de relação de equivalência.

A equivalência ocorre sempre que a tabela verdade de duas proposições forem iguais. Isso

signiﬁca que se duas proposições apresentarem a mesma tabela verdade elas possuem o mesmo

signiﬁcado, porém denotado de forma diferente. Esse método é utilizado constantemente na ma-

temática para realizar as demonstrações visto que uma demonstração, na maioria das vezes, é

uma série de equivalências que mostram a equivalência entre um conjunto de condições.

1.4 Relação entre conjuntos e lógica proposicional

Existe uma relação direta entre a linguagem dos conjuntos e a lógica proposicional. Podemos

relacionar uma proposição sobre algo com um conjunto cuja propriedade está descrita pela pro-

posição. Por exemplo, a aﬁrmação “Existem seleções de futebol na América do Sul que foram

8

campeãs de futebol.". É de conhecimento geral que há tais seleções, portanto a proposição é

verdadeira. Do ponto de vista dos conjuntos seria equivalente a construir um conjunto P onde

os elementos seriam as seleções sulamericanas campeãs de futebol. Esse conjunto P = {Brasil,

Argentina, Uruguai} não é vazio e portanto existem seleções com a propriedade citada. Dessa ma-

neira podemos estabelecer uma relação entre a validade de uma aﬁrmação e a existência de um

elemento em um conjunto. Podemos ainda fazer outras equivalências como na tabela abaixo.

Lógica

Conjuntos

∧

∨

∼

→

↔

∩

∪

Complementar

⊂

=

Vamos detalhar como ilustração o caso da equivalência entre → e ⊂. Suponha que existam

dois conjuntos A e B onde A ⊂ B e ainda que A e B estejam contidos em um conjunto universo U.

Seja agora um elemento x ∈ U sobre esse elemento existem as seguintes possibilidades:

x ∈ A

x ∈ B

não

não

sim

não

sim

sim

Assim quando A ⊂ B só serão válidas as três propriedades descritas na tabela acima e a com-

binação x ∈ A e x ∉ B não é possível, ou seja, é falsa. Note que essa tabela é equivalente à tabela

verdade do condicional entre duas proposições. Veja na tabela abaixo a semelhança entre → e ⊂.

x ∈ A x ∈ B

A ⊂ B

A B

A → B

não

não

não

sim

sim não

sim sim

sim

sim

não

sim

F F

F V

V F

V V

V

V

F

V

9

Podemos assumir que existe uma equivalência entre → e ⊂, uma vez que eles possuem a

mesma tabela verdade. O mesmo método pode ser empregado para veriﬁcar as outras equiva-

lências mostradas na primeira tabela dessa sessão.

Sugestões de Exercícios

(1) Sejam as proposições A = Carlos é argentino e B = João é brasileiro. Traduza para a linguagem

natural as seguintes proposições simbólicas:

a) A ∨ B

b) ∼A ∧ B

c) A → B

d) A → ∼B

e) ∼A ↔ B

f) ∼A ∧ ∼B

(2) Dado que o valor lógico das proposições P e Q é V, e de R e S é F, determine o valor lógico das

seguintes proposições:

a) ∼P ∨ ∼Q

b) P ∨ ∼Q

c) ∼P ∧ (Q→R)

d) ∼P ∧ (∼Q→∼R)

e) R ∨ S → P ∧ Q

f) P ∧ Q → R ∧ S

g) (P ↔ Q) → (P → R)

h) (P ∨ Q) ∨ (S → (P → R))

(3) Considerando-se P, Q e R proposições simples, construa as tabelas verdade das seguintes pro-

posições:

10

a) (P ∨ Q) → R

b) ∼(P ∨ Q) ∧ P

c) (∼P → Q) ∨ R

d) (∼P ∧ P) → (R ↔ Q)

e) (P ∧ Q) → (R ↔ Q)

f) (∼P → Q) ∨ (R → ∼P)

11

Capítulo 2

Funções Booleanas

2.1 Álgebra Booleana

Conforme dito na introdução, a álgebra Booleana operacionaliza a lógica proposicional, ou seja,

oferece métodos para realizarmos operações entre proposições. Nesse capítulo faremos um es-

tudo desse tema, visto que a literatura em língua portuguesa sobre o mesmo é escassa e de difícil

acesso. Para tratar o tema utilizaremos o modelo axiomático seguindo uma linha semelhante à

proposta por Garnier[6].

Deﬁnição 2.1 Uma Álgebra Booleana consiste de um conjunto B munido de três operações. Quais

sejam:

1. Uma operação binária, ⊕ : B × B → B , denominada soma;

2. Uma operação binária, ∗ : B × B → B , denominada produto;

3. Uma operação que age em um único elemento de B , denotada por ¯, onde para cada elemento

b ∈ B , o elemento ¯b ∈ B é chamado de complemento (ou negação) de b.

Essas operações obedecem ainda aos seguintes axiomas:

• Axioma 1: As operações ⊕ e ∗ são comutativas, ou seja, para todo a, b ∈ B

a ⊕ b = b ⊕ a e

a ∗ b = b ∗ a.

12

• Axioma 2: Existem elementos identidade em B para cada uma das operações binárias ⊕ e ∗.

Nos denotaremos esses elementos por 0 e 1, respectivamente. Assim, para todo b ∈ B :

b ⊕ 0 = b e

b ∗ 1 = b.

• Axioma 3: Para todo b ∈ B , existe ¯b ∈ B tal que, b ⊕ ¯b = 1 e b ∗ ¯b = 0.

• Axioma 4: A operação ⊕ é distributiva em relação a ∗ e o contrário também é válido, ou seja,

para todo a, b, c ∈ B

a ⊕ (b ∗ c) = (a ⊕ b) ∗ (a ⊕ c) e

a ∗ (b ⊕ c) = (a ∗ b) ⊕ (a ∗ c).

Denotaremos uma álgebra Booleana por um sêxtupla ordenada. No caso da deﬁnição acima,

temos a álgebra Booleana 〈B, ⊕, ∗,¯, 0, 1〉. Alguns autores, inclusive o Garnier, trazem ainda o axioma

da associatividade, mas, como será visto mais adiante, a associatividade pode ser mostrada atra-

vés dos demais axiomas e portanto não deve ser listada entre eles a ﬁm de obter um conjunto

mínimo de axiomas. Vejamos alguns exemplos de álgebras Booleanas.

Exemplo 2.1 Considere um conjunto B = {0, 1}. Deﬁna nesse conjunto as seguintes operações

¯1 = 0 e

¯0 = 1

1 ∗ 1 = 1 ⊕ 1 = 1

1 ⊕ 0 = 0 ⊕ 1 = 1

0 ⊕ 0 = 0 ∗ 0 = 0

0 ∗ 1 = 1 ∗ 0 = 0.

Aﬁrmamos que esse conjunto B com as operações deﬁnidas como acima são uma álgebra Booleana.

De fato, os Axiomas 1, 2 e 3 são satisfeitos pela deﬁnição. Para veriﬁcarmos o Axioma 4, vamos

construir uma tabela verdade com todas as possíveis combinações de valores de x, y e z. Vejamos

a validade da distributividade em relação a ⊕, ou seja, que x ⊕ (y ∗ z) = (x ⊕ y) ∗ (x ⊕ z).

13

x

0

0

0

0

1

1

1

1

y

0

0

1

1

0

0

1

1

z

0

1

0

1

0

1

0

1

(y ∗ z)

x ⊕ (y ∗ z)

(x ⊕ y)

(x ⊕ z)

(x ⊕ y) ∗ (x ⊕ z)

0

0

0

1

0

0

0

1

0

0

0

1

1

1

1

1

0

0

1

1

1

1

1

1

0

1

0

1

1

1

1

1

0

0

0

1

1

1

1

1

Perceba que para a mesma combinação de valores das variáveis x, y e z, as expressões x ⊕

(y ∗ z) e (x ⊕ y) ∗ (x ⊕ z) assumem os mesmos valores. Sempre que isso ocorrer diremos que as

expressões são iguais. Assim a distributividade em relação a ⊕ é válida, pois vale a igualdade

x ⊕ (y ∗ z) = (x ⊕ y) ∗ (x ⊕ z).

Agora veriﬁcaremos a validade da distributividade em relação a ∗, ou seja, que x ∗ (y ⊕ z) =

(x ∗ y) ⊕ (x ∗ z).

x

0

0

0

0

1

1

1

1

y

0

0

1

1

0

0

1

1

z

0

1

0

1

0

1

0

1

(y ⊕ z)

x ∗ (y ⊕ z)

(x ∗ y)

(x ∗ z)

(x ∗ y) ⊕ (x ∗ z)

0

1

1

1

0

1

1

1

0

0

0

0

0

1

1

1

0

0

0

0

0

0

1

1

0

0

0

0

0

1

0

1

0

0

0

0

0

1

1

1

Do mesmo modo que na veriﬁcação anterior, a distributividade em relação a * é válida e,

portanto, a álgebra proposta pelo exemplo é uma álgebra Booleana. Denotaremos esta álgebra

Booleana por 〈B, ⊕, ∗,¯, 0, 1〉. Esta é a álgebra mais usual por se assemelhar à lógica proposicional.

Indo mais além é possível aﬁrmar que a álgebra 〈B, ⊕, ∗,¯, 0, 1〉 é equivalente à lógica proposicional

no que se refere às suas operações? Vejamos isso no próximo exemplo.

14

Exemplo 2.2 A álgebra 〈B, ⊕, ∗,¯, 0, 1〉 é equivalente à lógica proposicional.

Observemos uma comparação entre as tabelas verdade das operações ∨, ∧ e ∼ da lógica pro-

posicional com as tabelas da álgebra Booleana 〈B, ⊕, ∗,¯, 0, 1〉.

x

y ∼ x

x ∨ y

x ∧ y

F F

F V

V F

V V

V

V

F

F

F

V

V

V

F

F

F

V

x

0

0

1

1

y

0

1

0

1

¯x

1

1

0

0

x ⊕ y

x ∗ y

0

1

1

1

0

0

0

1

Se ﬁzermos corresponder o 1 ao V e o 0 ao F ﬁca evidente que as tabelas verdade acima são

equivalentes com a seguinte correspondência entre seus elementos:

Lógica proposicional Álgebra Booleana B

F

V

∼ x

∨

∧

0

1

¯x

⊕

∗

Tabela 2.1: Correspondência entre lógica proposicional e álgebra Booleana.

Assim, acabamos de mostrar que a álgebra 〈B, ⊕, ∗,¯, 0, 1〉 é equivalente à lógica proposicio-

nal. No próximo tópico serão mostrados alguns resultados sobre as propriedades que a álgebra

Booleana possui. Dessa forma, os resultados serão válidos para a álgebra 〈B, ⊕, ∗,¯, 0, 1〉 e por con-

sequência para a lógica proposicional também.

2.1.1 Propriedades

Dada um proposição qualquer sobre uma álgebra Booleana, nós deﬁnimos sua dual como

sendo a proposição obtida substituindo ⊕ por ∗, ∗ por ⊕, 0 por 1 e 1 por 0. Por exemplo, o Axioma

2 traz duas proposições: b ⊕ 0 = b e b ∗ 1 = b. Note que uma proposição é a dual da outra. O

mesmo ocorre para os demais axiomas. Assim, cada axioma contém duas proposições que são

15

duais entre si. Agora suponha que, usando os axiomas, nós provemos algum teorema sobre uma

álgebra Booleana. Segue que usando na mesma ordem o dual de cada axioma podemos provar

o dual do teorema. A esse fato damos o nome de princípio da dualidade que será amplamente

utilizado daqui por diante.

Propriedade 2.1 (Unicidade do 0 e 1) Os elementos 0 e 1 são únicos.

Dem.: Suponha que existem dois elementos zero, 01 e 02. Sejam b1 e b2 dois elementos quaisquer
em B . Pelo Axioma 1, temos que b1 ⊕ 01 = b1 e b2 ⊕ 02 = b2. Tome, em particular, b1 = 02 e b2 = 01.
Assim temos 02 ⊕ 01 = 02 e 01 ⊕ 02 = 01. Pela comutatividade, temos que 01 = 02. A demonstração

para 1 é dual a do 0.

Propriedade 2.2 (Complemento de 0 e 1) ¯1 = 0 e ¯0 = 1

Dem.:

¯1 = ¯1 ∗ 1 (Axioma 2)

= 0.

(Axioma 3)

Portanto, ¯1 = 0. A prova de ¯0 = 1 segue por dualidade.

Propriedade 2.3 (Idempotência) Para todo elemento b ∈ B , b ⊕ b = b e b ∗ b = b.

Dem.:

b ⊕ b = (b ⊕ b) ∗ 1

(Axioma 2)

= (b ⊕ b) ∗ (b ⊕ ¯b)

(Axioma 3)

= b ∗ (b ⊕ ¯b)

= b ∗ 1

= b.

(Axioma 4)

(Axioma 3)

(Axioma 2)

Pela dualidade segue que b ∗ b = b.

Propriedade 2.4 (Identidade) b ⊕ 1 = 1 e b ∗ 0 = 0.

16

Dem.:

b ⊕ 1 = 1 ∗ (b ⊕ 1)

(Axioma 2)

= (b ⊕ ¯b) ∗ (b ⊕ 1)

(Axioma 3)

= b ⊕ ( ¯b ∗ 1)

= b ⊕ ¯b

= 1.

(Axioma 4)

(Axioma 2)

(Axioma 3)

Propriedade 2.5 (Absorção) Para todo b1, b2 ∈ B, b1 ⊕ (b1 ∗ b2) = b1 e b1 ∗ (b1 ⊕ b2) = b1.

Dem.: Para todos b1, b2 ∈ B , temos

b1 ⊕ (b1 ∗ b2) = (b1 ∗ 1) ⊕ (b1 ∗ b2)

(Axioma 2)

= b1 ∗ (1 ⊕ b2)
= b1 ∗ 1
= b1.

(Axioma 4)

(Identidade)

(Axioma 2)

Propriedade 2.6 (Unicidade do complemento) Dado um elemento b ∈ B , há um único elemento

¯b ∈ B tal que b ⊕ ¯b = 1 e b ∗ ¯b = 0.

Dem.: Suponha que existam ¯b1, ¯b2 ∈ B de modo que ambos sejam o complemento de b.

¯b1 = 1 ∗ ¯b1

= (b ⊕ ¯b2) ∗ ¯b1
= (b ∗ ¯b1) ⊕ ( ¯b1 ∗ ¯b2)
= 0 ⊕ ( ¯b1 ∗ ¯b2)
= (b ∗ ¯b2) ⊕ ( ¯b1 ∗ ¯b2)
= (b ⊕ ¯b1) ∗ ¯b2
= 1 ∗ ¯b2
= ¯b2.

(Axioma 2)

(Axioma 3)

(Axioma 4)

(Axioma 3)

(Axioma 3)

(Axioma 4)

(Axioma 3)

(Axioma 2)

Propriedade 2.7 (Involução) Para todo b ∈ B, ¯¯b = b.

17

Dem.: Note que b ⊕ ¯b = ¯b ⊕ b = 1 e b ∗ ¯b = ¯b ∗ b = 0, portanto b é o complemento de ¯b. Como o
complemento é único, ¯¯b = b.

Propriedade 2.8 (Associatividade) Para quaisquer b1, b2, b3 ∈ B,

b1 ⊕ (b2 ⊕ b3) = (b1 ⊕ b2) ⊕ b3 e b1 ∗ (b2 ∗ b3) = (b1 ∗ b2) ∗ b3.

Antes de demonstrar a propriedade associativa será necessária a demonstração de um lema.

Lema 2.1 Para quaisquer b1, b2, b3 ∈ B, b1 ∗ [(b1 ⊕ b2) ⊕ b3] = b1 ∗ [b1 ⊕ (b2 ⊕ b3)] = b1.

Demonstração do lema anterior:

b1 ∗ [(b1 ⊕ b2) ⊕ b3] = [b1 ∗ (b1 ⊕ b2)] ⊕ [b1 ∗ b3]

(Axioma 4)

= b1 ⊕ [b1 ∗ b3]
= (b1 ⊕ b1) ∗ (b1 ⊕ b3)
= b1 ∗ (b1 ⊕ b3)
= b1.

(Absorção)

(Axioma 4)

(Idempotência)

(Absorção)

Por outro lado,

b1 ∗ [b1 ⊕ (b2 ⊕ b3)] = [b1 ∗ b1] ⊕ [b1 ∗ (b2 ⊕ b3)]
= b1 ⊕ (b1 ∗ b2) ⊕ (b1 ∗ b3)
= b1 ⊕ (b1 ∗ b3)
= b1.

(Axioma 4)

(Idempotência e Axioma 4)

(Absorção)

(Absorção)

Segue que b1 ∗ [(b1 ⊕ b2) ⊕ b3] = b1 = b1 ∗ [b1 ⊕ (b2 ⊕ b3)].

Demonstração da Associatividade: Tome Z = [(b1 ⊕ b2) ⊕ b3] ∗ [b1 ⊕ (b2 ⊕ b3)]

Z = {[(b1 ⊕ b2) ⊕ b3] ∗ b1} ⊕ {[(b1 ⊕ b2) ⊕ b3] ∗ (b2 ⊕ b3)}

(Axioma 4)

= b1 ⊕ {[(b1 ⊕ b2) ⊕ b3] ∗ (b2 ⊕ b3)}
= b1 ⊕ {{[(b1 ⊕ b2) ⊕ b3] ∗ b2} ⊕ {[(b1 ⊕ b2) ⊕ b3] ∗ b3}}
= b1 ⊕ {{b2 ∗ [(b2 ⊕ b1) ⊕ b3]} ⊕ {b3 ∗ [b3 ⊕ (b1 ⊕ b2)]}}
= b1 ⊕ (b2 ⊕ b3).

(Axioma 1 e Lema 2.1)

(Axioma 4)

(Axioma 1)

(Lema 2.1)

18

De forma similar

Z = [b1 ⊕ (b2 ⊕ b3)] ∗ [(b1 ⊕ b2) ⊕ b3]

= {[b1 ⊕ (b2 ⊕ b3)] ∗ (b1 ⊕ b2)} ⊕ {[b1 ⊕ (b2 ⊕ b3)] ∗ b3}
= {[b1 ⊕ (b2 ⊕ b3)] ∗ (b1 ⊕ b2)} ⊕ {b3 ∗ [(b3 ⊕ b2) ⊕ b1]}
= {[b1 ⊕ (b2 ⊕ b3)] ∗ (b1 ⊕ b2)} ⊕ b3
= {{[b1 ⊕ (b2 ⊕ b3)] ∗ b1} ⊕ {[b1 ⊕ (b2 ⊕ b3)] ∗ b2}} ⊕ b3
= {{b1 ∗ [b1 ⊕ (b2 ⊕ b3)]} ⊕ {b2 ∗ [(b2 ⊕ b3) ⊕ b1]}} ⊕ b3
= (b1 ⊕ b2) ⊕ b3.

(Axioma 1)

(Axioma 4)

(Axioma 1)

(Lema 2.1)

(Axioma 4)

(Axioma 1)

(Lema 2.1)

Portanto b1 ⊕ (b2 ⊕ b3) = (b1 ⊕ b2) ⊕ b3.

Propriedade 2.9 (Leis de De Morgan) Para todos b1, b2 ∈ B ,

(b1 ⊕ b2) = ¯b1 ∗ ¯b2 e (b1 ∗ b2) = ¯b1 ⊕ ¯b2

(b1 ⊕ b2) ⊕ ( ¯b1 ∗ ¯b2) = [(b1 ⊕ b2) ⊕ ¯b1] ∗ [(b1 ⊕ b2) ⊕ ¯b2]
= [ ¯b1 ⊕ (b1 ⊕ b2)] ∗ [(b1 ⊕ b2) ⊕ ¯b2]
= [( ¯b1 ⊕ b1) ⊕ b2] ∗ [b1 ⊕ (b2 ⊕ ¯b2)]
= (1 ⊕ b2) ∗ (b1 ⊕ 1)
= 1 ∗ 1

= 1.

(Axioma 4)

(Axioma 1)

(Associatividade)

(Axioma 3)

(Identidade)

(Axioma 2)

Nós provamos que (b1⊕b2)⊕( ¯b1∗ ¯b2) = 1, então ¯b1∗ ¯b2 é o complemento de b1⊕b2, isto é, (b1 ⊕ b2) =
¯b1 ∗ ¯b2.

Em resumo, as principais propriedades da álgebra Booleana são:

19

Nome

Propriedade

Complemento do 0 e 1

¯1 = 0 e ¯0 = 1

Idempotência

Identidade

Absorção

Involução

Associatividade

Leis de De Morgan

b ⊕ b = b e b ∗ b = b

b ⊕ 1 = 1 e b ∗ 0 = 0

b1 ⊕ (b1 ∗ b2) = b1
b1 ∗ (b1 ⊕ b2) = b1
¯¯b = b

b1 ⊕ (b2 ⊕ b3) = (b1 ⊕ b2) ⊕ b3
b1 ∗ (b2 ∗ b3) = (b1 ∗ b2) ∗ b3
(b1 ⊕ b2) = ¯b1 ∗ ¯b2
(b1 ∗ b2) = ¯b1 ⊕ ¯b2

Tabela 2.2: Resumo das propriedades da álgebra Booleana.

2.2 Funções Booleanas

As calculadoras possuem sistemas digitais que trabalham por meio de códigos binários. Cada

unidade desses códigos é chamada de bit e pode assumir os valores 0 ou 1. Segundo Matias[7],

os sistema digitais podem ser modelados usando a lógica. Podemos então assumir que a álge-

bra 〈B, ⊕, ∗,¯, 0, 1〉 vale para os sistemas digitais, sendo cada bit da informação um elemento de B.

Dessa forma, planejar sistemas digitais de calculadoras equivale a operar nessa álgebra. Para pros-

seguir com esse estudo será necessária a introdução dos conceitos de variável e função Booleana

e alguns resultados acerca das mesmas.

Deﬁnição 2.2 (Variável Booleana)

1. Dada uma álgebra Booleana 〈B, ⊕, ∗,¯, 0, 1〉, uma variável Booleana é uma variável que pode

assumir qualquer valor do conjunto B.

2. Dada uma variável Booleana x, o complemento de x denotado por ¯x, é uma variável que

assume o valor ¯x = ¯b quando x = b para todo b ∈ B .

3. Um literal é uma variável Booleana ou seu complemento ¯x.

20

Uma notação útil para distinguir literais é escrever x1 para a variável x e x0 para ¯x, ou seja:

xe =






¯x,

x,

se e = 0

se e = 1

Assim como as variáveis reais podem formar expressões algébricas, as variáveis Booleanas po-

dem ser combinadas para formar expressões Booleanas. Uma expressão Booleana é deﬁnida re-

cursivamente como a seguir.

Deﬁnição 2.3 (Expressão Booleana) Dada uma álgebra Booleana 〈B, ⊕, ∗,¯, 0, 1〉, uma expressão

Booleana em n variáveis x1, x2, ..., xn é qualquer combinação das n variáveis com as operações de

soma, produto e completo, além ainda dos elementos identidade.

Um fato interessante sobre expressões Booleanas é que cada uma pode ser expressa de dife-

rentes formas. Vejamos um exemplo.

Exemplo 2.3 x ⊕( ¯x ∗ y) e x ⊕ y são diferentes formas da mesma expressão, pois uma pode ser obtida

a partir da outra aplicando os axiomas e propriedades da álgebra Booleana.

x ⊕ ( ¯x ∗ y) = (x ⊕ ¯x) ∗ (x ⊕ y)

(Axioma 4)

= 1 ∗ (x ⊕ y)

= (x ⊕ y).

(Axioma 3)

(Axioma 2)

Quando uma expressão puder ser derivada de outra com uma sequência ﬁnita de aplicações

dos axiomas da álgebra Booleana diremos que as expressões são equivalentes.

Assim como as expressões algébricas deﬁnem a lei de formação de algumas funções reais, as

expressões Booleanas deﬁnem a “regra"de comportamento das funções Booleanas. Deﬁniremos

a seguir o que é uma função Booleana1.

Deﬁnição 2.4 (Função Booleana) Dada uma álgebra Booleana 〈B, ⊕, ∗,¯, 0, 1〉, uma função Booleana

de n variáveis x1, x2, ..., xn é uma função f : B n → B de tal modo que f (x1, x2, ..., xn) é uma expressão

Booleana.

Exemplo 2.4 Tome a função f deﬁnida a partir da álgebra 〈B, ⊕, ∗,¯, 0, 1〉 onde f (x1, x2) = x1 ¯x2 ⊕
¯x1x2. Nessa função, as variáveis são x1 e x2, a expressão x1 ¯x2 ⊕ ¯x1x2 é a lei de formação da função, o
domínio da função é B × B e o contradomínio é B.

1Daqui em diante, sempre que for conveniente, escreveremos x y para denotar x ∗ y.

21

Exemplo 2.5 Tome as expressões x ⊕ ( ¯x y), x ⊕ y e deﬁna as funções

g : B 2 → B g (x, y) = x ⊕ ( ¯x y) e

h : B 2 → B h(x, y) = x ⊕ y.

Conforme foi mostrado no Exemplo 2.3, as duas expressões são equivalentes. Observe que

temos duas funções com mesmo domínio, contradomínio, lei de formação e consequentemente

a mesma imagem. Assim as funções g e h representam funções equivalentes.

O exemplo anterior levanta uma questão: De modo geral, como saber se duas funções Boole-

anas são equivalentes? A primeira parte que consiste em avaliar o domínio e contradomínio é

relativamente simples, mas como saber se as expressões Booleanas são equivalentes? Poderíamos

tentar derivar uma expressão da outra usando os axiomas, mas nada garante que o processo não

seja demasiado longo ou que consigamos aplicar a sequência correta de axiomas para chegar ao

resutado desejado. Felizmente há um método para que façamos essa veriﬁcação de maneira mais

simples, porém para isso devemos introduzir mais alguns conceitos.

Deﬁnição 2.5 (Mintermo) Um mintermo em n variáveis x1, x2, ..., xn é uma expressão Booleana a

qual tem a forma do produto entre cada variável Booleana ou seu complemento. Assim um min-

termo consiste do produto de n literais, um correspondendo a cada variável.

Por exemplo, são oito possíveis mintermos em três variáveis x, y e z. São eles:

x y z x y ¯z x ¯y z

x ¯y ¯z

¯x y z

¯x y ¯z

¯x ¯y z

¯x ¯y ¯z.

Usando a notação xe dada anteriormente, nós denotaremos um mintermo em n variáveis

x1, x2, ..., xn por me1e2...en onde:

me1e2...en

Por exemplo,

= xe1

1 xe2

2 ...xen
n .

m10011 = x1

3 x1

4 x1
2 x0
1 x0
5
= x1 ¯x2 ¯x3x4x5.

Teorema 2.1 Há 2n mintermos em n variáveis e não há dois mintermos equivalentes.

22

Prova: Por deﬁnição, um mintermo em n variáveis é formado pelo produto entre cada variável ou

seu complemento. Assim, em cada variável, temos duas possibilidades: a própria variável ou seu

complemento. Usando o princípio fundamental da contagem teremos 2n possíveis mintermos.

Vamos mostrar agora que dentre esses 2n mintermos não há dois que sejam equivalentes. Para

isso, tome me1e2...en

= xe1

1 xe2

2 ...xen

n e considere

xi =






1,

0,

se ei = 1
se ei = 0

Dessa forma, me1e2...en (x1, x2, ..., xn) será formado por um produto com n parcelas compostas

por 11 ou 00, daí me1e2...en (x1, x2, ..., xn) = 1.

Qualquer outro mintermo m

(cid:48)

tem pelo menos um literal xe j que é complemento do corres-

pondente literal em m. Portanto, substituindo os valores de xi deﬁnidos acima neste mintermo,

haverá pelo menos um 0 no produto. Isto quer dizer que este mintermo vale 0 para estes valores

em particular. Assim, para quaisquer dois mintermos, há sempre uma atribuição de valores às

variáveis que torna um deles 1 e o outro 0.

Teorema 2.2 (Existência da forma disjuntiva normal) Se f é uma função Booleana, não identica-

mente nula, em n variáveis, então ela pode ser escrita como um mintermo ou pela soma de dois ou

mais mintermos da forma

f (x1, x2, ..., xn) = (cid:77)
e∈{0,1}n

f (e1, e2, ..., en)xe1

1 xe2

2 ... xen
n .

Dem.: Nós vamos provar primeiramente para o caso em que o teorema vale para uma função

de uma variável f (x), ou seja, que:

f (x) = f (0) ¯x ⊕ f (1)x.

Agora, pela deﬁnição de expressão Booleana, a função deve ter uma das seguintes formas:

a) f (x) = 0 ou f (x) = 1;

b) f (x) = x;

c) f (x) = ¯x;

23

d) f (x) consiste de somas e produtos de termos que são somas ou produtos de x, ¯x, 0, 1.

Se f (x) = 0,

f (x) = 0

= 0 ∗ 1

= 0( ¯x ⊕ x)

= 0 ¯x ⊕ 0x

(Axioma 2)

(Axioma 3)

(Axioma 4)

= f (0) ¯x ⊕ f (1)x.

Se f (x) = 1, nós temos

f (x) = 1

= 1 ∗ 1

= 1( ¯x ⊕ x)

= 1 ¯x ⊕ 1x

(Axioma 2)

(Axioma 3)

(Axioma 4)

= f (0) ¯x ⊕ f (1)x.

Se f (x) = x,

f (x) = x

= 1x

= 1x ⊕ 0

= 1x ⊕ 0 ¯x

(Axioma 2)

(Axioma 2)

(Identidade)

= f (0) ¯x ⊕ f (1)x.

(Axioma 4)

Se f (x) = ¯x,

f (x) = ¯x

= 1 ¯x

= 1 ¯x ⊕ 0

= 1 ¯x ⊕ 0x

= f (0) ¯x ⊕ f (1)x.

(Axioma 2)

(Axioma 2)

(Identidade)

Portanto o teorema vale para os casos (a), (b) e (c). Vamos mostrar que também é válido para

caso (d). Para isso, tome f (x) e g (x) dentre um dos casos para o qual o teorema já é válido. Seja

h(x) = f (x) ⊕ g (x). Vamos observar todas as possibilidades para h(x):

Disso conclui-se que qualquer soma entre os termos dos itens (a), (b) e (c) resulta em um deles.

Mostraremos que o mesmo ocorre para o produto entre esses itens. Seja i (x) = f (x)∗g (x), observe

o que acontece com i (x) ao variarmos f (x) e g (x):

24

(cid:72)(cid:72)

(cid:72)(cid:72)(cid:72)

f (x)

g (x)

(cid:72)(cid:72)(cid:72)(cid:72)

x

¯x

1

0

x

¯x

1 0

x

1

1

x

1 1 x

¯x

1

¯x

1 1 1

¯x

1 0

Tabela 2.3: h(x) = f (x) ⊕ g (x).

(cid:72)
(cid:72)(cid:72)(cid:72)
f (x)

g (x)

(cid:72)(cid:72)(cid:72)

(cid:72)(cid:72)

x

¯x

1

0

x

¯x

1 0

x

0

x

0

0

¯x

¯x

0

x

¯x

0

0

1 0

0 0

Tabela 2.4: i (x) = f (x) ∗ g (x).

Como percebe-se acima, qualquer produto ou soma entre f (x) e g (x) resulta em um dos itens

(a), (b) e (c). Infere-se a partir daí que qualquer combinação de somas e produtos também per-

manece na forma f (0) ¯x ⊕ f (1)x, portanto o item (d) é válido e o teorema é válido para funções de

uma variável.

Agora considere uma função de n variáveis f (x1, x2, ..., xn). Se nós considerarmos a função como

sendo de uma variável x1 e aplicarmos o teorema, nós obteremos

f (x1, x2, ..., xn) = [ f (0, x2, ..., xn) ¯x1] ⊕ [ f (1, x2, ..., xn)x1].

Da mesma forma, considere f (0, x2, ..., xn) e f (1, x2, ..., xn) funções de uma variável x2 e apli-

cando o teorema novamente temos

f (0, x2, ..., xn) = [ f (0, 0, x3, ..., xn) ¯x2] ⊕ [ f (0, 1, x3, ..., xn)x2] e

f (1, x2, ..., xn) = [ f (1, 0, x3, ..., xn) ¯x2] ⊕ [ f (1, 1, x3, ..., xn)x2].

25

Juntando as equações acima concluímos que

f (x1, x2, ..., xn) = [ f (0, 0, x3, ..., xn) ¯x1 ¯x2] ⊕ [ f (0, 1, x3, ..., xn) ¯x1x2]⊕
⊕{[ f (1, 0, x3, ..., xn)x1 ¯x2] ⊕ [ f (1, 1, x3, ..., xn)x1x2].

Repetindo esse processo mais n-2 vezes, com uma variável por vez, chegamos ao resultado

f (x1, x2, ..., xn) = (cid:77)
e∈{0,1}n

f (e1, e2, ..., en)xe1

1 xe2

2 ... xen
n .

Deﬁnição 2.6 Qualquer expressão que estiver na forma proposta pelo teorema anterior estará na

forma disjuntiva normal.

Teorema 2.3 A forma disjuntiva normal de uma função Booleana é única.

Dem.: A prova será dada por contradição. Suponha que a função f (x1, x2, ..., xn) pode ser es-

crita na forma disjuntiva normal de duas maneiras distintas, então

f (x1, x2, ..., xn) = P1 ⊕ P2 ⊕ ... ⊕ Pr

= Q1 ⊕Q2 ⊕ ... ⊕Qs.

Onde Pi e Q j (i = 1, 2, ..., r ) e ( j = 1, 2, ..., s) são mintermos. Nós vamos assumir, sem perda de
generalidade, que r ≥ s. Agora, se as duas formas disjuntivas normais são diferentes, ao menos

um dos Pi deve ser diferente de cada Q j . Vamos supor que Pm tem essa propriedade.

Como Pm é diferente de todo Q j , Pm e Q j devem ser tais que um contenha xk enquanto o outro
contém ¯xk para algum valor de k. A expressão PmQ j então contém o produto xk ¯xk e daí PmQ j = 0.

Então é verdadeiro que para cada j

PmQ1 ⊕ PmQ2 ⊕ ... ⊕ PmQs = 0
Pm(Q1 ⊕Q2 ⊕ ... ⊕Qs) = 0
Pm f (x1, x2, ..., xn) = 0.

⇒

⇒

(Axioma 4)

Mas,

Pm f (x1, x2, ..., xn) = Pm(P1 ⊕ P2 ⊕ ... ⊕ Pr )

= PmP1 ⊕ PmP2 ⊕ ... ⊕ PmPs
= PmPm
= Pm.

(Axioma 4)

(Pi diferentes)

(Idempotência)

26

Portanto, Pm f (x1, x2, ..., xn) = 0 e Pm f (x1, x2, ..., xn) = Pm, ou seja, Pm = 0. Isso leva a uma

contradição, pois tomando em Pm

xi =






1,

0,

se ei = 1
se ei = 0

obtemos Pm = 1.

A demonstração dos Teoremas 2.2 e 2.3 trazem consigo duas aplicações importantes:

• Um método para comparar expressões Booleanas que consiste em transformar as expres-

sões que são objeto da comparação em suas formas disjuntivas normais. Como essas for-

mas são únicas, caso alguma expressão tenha a mesma forma disjuntiva que outra, elas são

equivalentes, conforme apresentado no Exemplo 2.6.

• Uma forma de obter uma função Booleana a partir de uma tabela que contenha os valores

da função para todas as entradas possíveis.

Exemplo 2.6 Vamos veriﬁcar se as funções f : B 3 → B e g : B 3 → B dadas por f (x, y, z) = y z ⊕ x ¯y z ⊕

x y ¯z e g (x, y, z) = y z ⊕ x y ⊕ xz são equivalentes

f (x, y, z) = y z ⊕ x ¯y z ⊕ x y ¯z

= 1y z ⊕ x ¯y z ⊕ x y ¯z

= (x ⊕ ¯x)y z ⊕ x ¯y z ⊕ x y ¯z

= x y z ⊕ ¯x y z ⊕ x ¯y z ⊕ x y ¯z.

(Axioma 2)

(Axioma 3)

(Axioma 4)

g (x, y, z) = y z ⊕ x y ⊕ xz

= 1y z ⊕ x y1 ⊕ x1z

(Axioma 2)

= (x ⊕ ¯x)y z ⊕ x y(z ⊕ ¯z) ⊕ x(y ⊕ ¯y)z

(Axioma 3)

= x y z ⊕ ¯x y z ⊕ x y z ⊕ x y ¯z ⊕ x y z ⊕ x ¯y z

(Axioma 4)

= x y z ⊕ ¯x y z ⊕ x y ¯z ⊕ x ¯y z

(Idempotência)

= x y z ⊕ ¯x y z ⊕ x ¯y z ⊕ x y ¯z.

(Axioma 1)

Como ambas as funções apresentam a mesma forma disjuntiva normal podemos concluir que elas

são equivalentes.

27

Exemplo 2.7 Vamos encontrar a função Booleana equivalente ao condicional (→).

Para encontrar uma função Booleana que seja equivalente ao condicional vamos primeira-

mente construir a tabela verdade da operação citada para nela aplicar o Teorema 2.2, assim:

P Q P → Q

F

F

F V

V F

V V

V

V

F

V

Tabela 2.5: Condicional entre P e Q.

Aplicando o Teorema 2.2 na tabela acima temos uma função Booleana f dada por:

f (P,Q) = f (0, 0) ¯P ¯Q ⊕ f (0, 1) ¯PQ⊕ ⇒ f (1, 0)P ¯Q ⊕ f (1, 1)PQ

⇒ f (P,Q) = 1 ¯P ¯Q ⊕ 1 ¯PQ ⊕ 0P ¯Q ⊕ 1PQ

⇒ f (P,Q) = ¯P ¯Q ⊕ ¯PQ ⊕ PQ

⇒ f (P,Q) = ¯P ( ¯Q ⊕Q) ⊕ PQ

⇒ f (P,Q) = ¯P ⊕ PQ

⇒ f (P,Q) = ( ¯P ⊕ P )( ¯P ⊕Q)

⇒ f (P,Q) = ¯P ⊕Q.

Exemplo 2.8 Vamos encontrar a função Booleana equivalente ao “ou"exclusivo.

O “ou"exclusivo tem por tabela verdade.

P Q P ∨ Q

F

F

F V

V F

V V

F

V

V

F

Tabela 2.6: Disjunção exclusiva entre as proposições P e Q.

28

Aplicando o Teorema 2.2 na tabela acima temos uma função Booleana f dada por:

f (P,Q) = f (0, 0) ¯P ¯Q ⊕ f (0, 1) ¯PQ ⊕ f (1, 0)P ¯Q ⊕ f (1, 1)PQ

⇒ f (P,Q) = 0 ¯P ¯Q ⊕ 1 ¯PQ ⊕ 1P ¯Q ⊕ 0PQ

⇒ f (P,Q) = ¯PQ ⊕ P ¯Q.

Exemplo 2.9 (Display de 7 segmentos) Os display de 7 segmentos são muito comuns em calcula-

doras, relógios digitais e outros equipamentos eletrônicos que exibem números. Observe a ﬁgura

abaixo que representa um desses display (de leds, por exemplo)

Vamos adotar que esse conjunto de leds seja comandado por um número binário de quatro

dígitos de acordo com o esquema da ﬁgura abaixo. Note que para os algarismos de 0 a 9 a escolha

feita foi a sua própria representação binária enquanto as letras ocupam os binários restantes em

ordem alfabética.

Figura 2.1: Relação entre os binários e a combinação de leds acessa.

As tabelas a seguir relacionam todos os números binários de quatro dígitos com o status de

cada led, nomeados na Figura 2.1 acima. O valor 1 representa o led acesso e 0 representa o led

apagado. A partir disso podemos montar uma função Booleana para cada led que determina seu

funcionamento.

29

Binário

a b c d e

0

0

0

0

0

0

0

0

0

0

0

0

1

1

1

1

0

0

1

1

0

0

1

1

0

1

0

1

0

1

0

1

1

0

1

1

0

1

1

1

1

1

1

1

1

0

0

1

1

1

0

1

1

1

1

1

1

0

1

1

0

1

1

0

1

0

1

0

0

0

1

0

f

1

0

0

0

1

1

1

0

g

0

0

1

1

1

1

1

0

Binário

a b c d e

1

1

1

1

1

1

1

1

0

0

0

0

1

1

1

1

0

0

1

1

0

0

1

1

0

1

0

1

0

1

0

1

1

1

1

0

1

0

1

1

1

1

1

0

0

1

0

0

1

1

1

1

0

1

0

0

1

1

0

1

1

1

1

0

1

0

1

1

1

1

1

1

f

1

1

1

1

1

0

1

1

g

1

1

1

1

0

1

1

1

Tabela 2.7: Tabulação dos dados da Figura 2.1.

Para ilustrar o método, vamos determinar a função f : B 4 → B deﬁnida na álgebra 〈B, ⊕, ∗,¯, 0, 1〉

que representa o funcionamento do led e. Aplicando o Teorema 2.2, a função f será denotada por:

f (x, y, z, w) = f (0, 0, 0, 0) ¯x ¯y ¯z ¯w ⊕ f (0, 0, 0, 1) ¯x ¯y ¯zw ⊕ f (0, 0, 1, 0) ¯x ¯y z ¯w ⊕ f (0, 0, 1, 1) ¯x ¯y zw⊕

⊕ f (0, 1, 0, 0) ¯x y ¯z ¯w ⊕ f (0, 1, 0, 1) ¯x y ¯zw ⊕ f (0, 1, 1, 0) ¯x y z ¯w ⊕ f (0, 1, 1, 1) ¯x y zw⊕

⊕ f (1, 0, 0, 0)x ¯y ¯z ¯w ⊕ f (1, 0, 0, 1)x ¯y ¯zw ⊕ f (1, 0, 1, 0)x ¯y z ¯w ⊕ f (1, 0, 1, 1)x ¯y zw⊕

⊕ f (1, 1, 0, 0)x y ¯z ¯w ⊕ f (1, 1, 0, 1)x y ¯zw ⊕ f (1, 1, 1, 0)x y z ¯w ⊕ f (1, 1, 1, 1)x y zw.

Substituindo os valores das tabelas acima temos

f (x, y, z, w) = ¯x ¯y ¯z ¯w ⊕ ¯x ¯y z ¯w ⊕ ¯x y z ¯w ⊕ x ¯y ¯z ¯w ⊕ x ¯y z ¯w ⊕ x ¯y zw ⊕ x y ¯z ¯w ⊕ x y ¯zw ⊕ x y z ¯w ⊕ x y zw.

Agora, simpliﬁcando a expressão Booleana

f (x, y, z, w) = ¯x ¯y ¯z ¯w ⊕ ¯x ¯y z ¯w ⊕ ¯x y z ¯w ⊕ x ¯y ¯z ¯w ⊕ x ¯y z ¯w⊕

⊕x ¯y zw ⊕ x y ¯z ¯w ⊕ x y ¯zw ⊕ x y z ¯w ⊕ x y zw

= ¯x ¯y ¯w( ¯z ⊕ z) ⊕ ¯x y z ¯w ⊕ x ¯y ¯w( ¯z ⊕ z)⊕

⊕x ¯y zw ⊕ x y ¯z( ¯w ⊕ w) ⊕ x y z( ¯w ⊕ w)

(Axioma 4)

= ¯x ¯y ¯w ⊕ ¯x y z ¯w ⊕ x ¯y ¯w ⊕ x ¯y zw ⊕ x y ¯z ⊕ x y z

(Axiomas 4 e 3)

= ( ¯x ⊕ x) ¯y ¯w ⊕ x ¯y zw ⊕ ¯x y z ¯w ⊕ x y( ¯z ⊕ z)

(Axiomas 1 e 2)

= ¯y ¯w ⊕ x ¯y zw ⊕ ¯x y z ¯w ⊕ x y

(Axiomas 4 e 3)

30

= ¯y( ¯w ⊕ xzw) ⊕ ( ¯xz ¯w ⊕ x)y

(Axiomas 1 e 2)

= ¯y( ¯w ⊕ xz) ⊕ (z ¯w ⊕ x)y

(Exemplo 2.3)

= ¯y ¯w ⊕ x ¯y z ⊕ y z ¯w ⊕ x y

(Axioma 4)

= ( ¯y ⊕ y z) ¯w ⊕ x( ¯y z ⊕ y)

(Axioma 1 e 2)

= ( ¯y ⊕ z) ¯w ⊕ x(z ⊕ y)

(Exemplo 2.3)

= ¯y ¯w ⊕ z ¯w ⊕ xz ⊕ x y.

(Axioma 4)

Portanto, a função f (x, y, z, w) = ¯y ¯w ⊕ z ¯w ⊕ xz ⊕ x y determina o funcionamento do led e. Ob-

serve que após encontrar a expressão Booleana que determinava o funcionamento do led e foi

feita uma simpliﬁcação da mesma. O motivo disso é que, como veremos na próxima sessão, a

função Booleana determina o circuito lógico que será construído. Quanto menor a expressão em

questão menor será o circuito e consequentemente também será menor o valor para construir

esse circuito.

Existem outros métodos para obter funções booleanas mínimas, ou seja, funções com a menor

quantidade de operações possível, a partir de uma tabela. Dentre eles destacam-se o mapa de

Karnaught e o algoritmo de Quine-McCluskey. Como esses métodos não são o objeto de estudo do

trabalho, recomendamos a quem desejar se aprofundar no tema a leitura de Garnier [6] e Daghlian

[9].

2.3 Circuitos Lógicos

Os sistemas digitais citados no inicio da Sessão 2.2 são implementações de funções Booleanas

de Bn em Bm, onde n e m representam, respectivamente, a quantidade de bits de entrada e saída.

Conforme vimos na sessão anterior, uma função Booleana pode ser representada por uma

expressão ou por sua tabela verdade. Porém uma função Booleana também pode ser representada

graﬁcamente, onde cada operação corresponde a um símbolo. Tais símbolos são chamados de

portas lógicas. Vale salientar que cada porta lógica representa um recurso físico, ou seja, um objeto

que é capaz de realizar a operação lógica a qual o símbolo representa. Ao conjunto de portas

lógicas e as suas conexões que representam uma dada função Booleana chamamos de circuitos

lógicos. As principais portas lógicas são as seguintes:

31

Figura 2.2: Porta AND.

Figura 2.3: Porta OR.

Figura 2.4: Porta NOT.

2.3.1 Construção de Circuitos Lógicos

Para ﬁcar claro como funciona a construção de um circuito lógico vamos fazer a construção dos

circuitos dos Exemplos 2.7 e 2.8. Primeiro vamos estabelecer uma relação entre as portas logicas

apresentadas e as operações Booleanas através da tabela abaixo.

Porta Lógica Operação Booleana

AND

OR

NOT

∗

⊕

¯

Tabela 2.8: equivalência entre as portas lógicas e as operações Booleanas.

Exemplo 2.10 Construção do circuito do Exemplo 2.7 (condicional):

A função encontrada para o condicional foi f (P,Q) = ¯P ⊕Q. Segue que a construção do circuito

que implementa a função será feita da forma que aparece na ﬁgura.

Figura 2.5: Circuito do condicional.

Note que os quadrados com P e Q são as entradas, as circunferências concêntricas no ﬁnal da

ﬁgura representam a saída. As portas lógicas tem a entrada pelo lado esquerdo e saída pelo lado

direito. Vejamos as ﬁguras a seguir que mostram o funcionamento do circuito, onde associa-se o

valor 1 com a entrada ou saída acessa (vermelho) e o valor 0 no caso contrário.

32

P = 0, Q = 0 e P →Q = 1;

P = 0, Q = 1 e P →Q = 1;

P = 1, Q = 0 e P →Q = 0;

P = 1, Q = 1 e P →Q = 1.

Exemplo 2.11 Construção do circuito do Exemplo 2.8 (ou exclusivo):

A função encontrada para o ou exclusivo foi f (P,Q) = ¯PQ ⊕ P ¯Q. Segue que a construção do

circuito que implementa a função será feita da forma que aparece na ﬁgura.

Figura 2.6: Circuito do ou exclusivo.

Devido a utilização recorrente do circuito desse exemplo, será introduzida a porta lógica abaixo

para representar o circuito do ou exclusivo. A referida porta é chamada de XOR.

Figura 2.7: Porta XOR.

Em outras palavras, o circuito desse exemplo poderia ser representado de maneira mais econô-

mica, pois trocamos cinco portas lógicas por apenas um única porta.

Figura 2.8: Circuito do ou exclusivo com a porta XOR.

33

Exemplo 2.12 Circuito da soma no sistema de numeração binário com um algarismo.

Conforme visto no capítulo inicial dessa dissertação, a soma de um bit é dada pela seguinte

regra:

0 + 0 = 0, vai 0,

1 + 0 = 1, vai 0,

0 + 1 = 1, vai 0,

1 + 1 = 0, vai 1.

Considerando a regra da soma dada, podemos observar que o bit da soma coincide com a ta-

bela do ou exclusivo (XOR) e que o bit carregado (o “vai") corresponde ao e (and). Assim o circuito

dessa soma corresponde a:

Note que o circuito acima representa a soma a + b em binário. O resultado será da forma cs,

onde s é a soma entre a e b e c é o bit carregado, que será denominado de bit carry de agora em

diante.

Exemplo 2.13 Circuito da soma no sistema de numeração binário com n algarismos.

Primeiramente será feita a análise para uma soma de dois bits. Sejam A = a1a0 e B = b1b0

números na base 2. De acordo com o exemplo anterior, s0 será igual a a0 XOR b0 e c0, a0 AND b0.

Vamos construir uma tabela aﬁm de determinar as equações Booleanas para s1 e c1.

34

a1

b1

c0

s1

c1

0

0

0

0

1

1

1

1

0

0

1

1

0

0

1

1

0

1

0

1

0

1

0

1

0

1

1

0

1

0

0

1

0

0

0

1

0

1

1

1

Agora aplicando o Teorema 2.2 para s1, obtemos:

s1 = ¯a1 ¯b1c0 ⊕ ¯a1b1 ¯c0 ⊕ a1 ¯b1 ¯c0 ⊕ a1b1c0
= c0( ¯a1 ¯b1 ⊕ a1b1) ⊕ ¯c0( ¯a1b1 ⊕ a1 ¯b1)

= c0( ¯a1 ¯b1 ⊕ a1b1) ⊕ ¯c0( ¯a1b1 ⊕ a1 ¯b1)

= c0(( ¯a1 ¯b1)(a1b1)) ⊕ ¯c0( ¯a1b1 ⊕ a1 ¯b1)
= c0((a1 ⊕ b1)( ¯a1 ⊕ ¯b1)) ⊕ ¯c0( ¯a1b1 ⊕ a1 ¯b1)
= c0(a1 ¯b1 ⊕ ¯a1b1) ⊕ ¯c0( ¯a1b1 ⊕ a1 ¯b1).

Fazendo o mesmo para c1, temos:

c1 = ¯a1b1c0 ⊕ a1 ¯b1c0 ⊕ a1b1 ¯c0 ⊕ a1b1c0
= b1c0( ¯a1 ⊕ a1) ⊕ a1(b1 ¯c0 ⊕ ¯b1c0)
= b1c0 ⊕ a1(b1 ¯c0 ⊕ ¯b1c0).

O circuito gerado nesse processo corresponde a Figura 2.9 no topo da próxima página. Observe

que o circuito que está acima das barras verdes na ﬁgura corresponde ao circuito do exemplo

anterior e que ele inﬂuencia no próximo através do seu bit carry.

35

Figura 2.9: Circuito para realizar a soma de dois bits.

Para somar dois binários com uma quantidade n > 2 de dígitos basta adicionar n − 2 vezes

a parte do circuito que está abaixo das barras escuras. Segue abaixo uma ﬁgura que ilustra esse

raciocínio.

36

Capítulo 3

Propostas de Sequência Didática

Neste capítulo descreveremos as atividades propostas para a sequência didática. Não há um

pré-requisito estabelecido no que tange a outros conteúdos que o aluno deve conhecer antes de

estudar lógica.Contudo, deixamos como recomendação que essa sequência seja aplicada com alu-

nos à partir do primeiro ano do ensino médio que já tenham estudado conjuntos. As atividades

serão estruturadas da seguinte maneira: conhecimentos prévios; materiais necessários; tempo de

aula; objetivos e descrição da atividade. Na última atividade consta ainda um relato de aplicação

em sala de aula, onde esclarecemos o motivo de apenas essa atividade contar com um relato.

ATIVIDADE 1: Construção de Portas Lógicas

Conhecimentos Prévios: Será necessário que antes dessa atividade o professor ministre uma

aula expositiva para os alunos sobre a lógica proposicional introduzida no Capítulo 1 dessa disser-

tação.

Materiais Necessários: Palitos de picolé, ﬁta adesiva, caixas de fósforos, cola e palitos de chur-

rasco.

Tempo de aula: Um horário de aula para a demonstração das portas lógicas por parte do profes-

sor para os alunos e a construção delas. Seria interessante também disponibilizar outra aula em

outro dia para que os alunos possam exibir os resultados de seu trabalho.

37

Objetivos: O objetivo geral será consolidar através de objetos manipuláveis os conceitos de dis-

junção, conjunção e negação da lógica proposicional vistos previamente em sala.

Descrição da atividade:

Inicialmente o professor irá mostrar aos alunos os objetos que repre-

sentam as portas lógicas e explicar como os mesmos funcionam. Nas ﬁguras seguintes vemos os

esquemas de como fazer essas portas.

Figura 3.1: Esquema da base das portas lógicas, for-

Figura 3.2: Esquema do eixo das portas lógicas cons-

mado por caixas de fósforos e um palito de churrasco

tituídos por palitos de picolé

Basta encaixar o palito da primeira ﬁgura dentro do espaço no centro do eixo da segunda ﬁgura

que teremos construído uma porta inversora. No lado onde ﬁcar a saída é interessante colocar um

pedaço de palito de picolé para servir de contrapeso. As ﬁguras a seguir ilustram essa situação.

Figura 3.3: Porta NOT com entrada = 0 e saída = 1

Figura 3.4: Porta NOT com entrada = 1 e saída = 0

Através de uma combinação de portas NOT podemos ainda construir as portas AND e OR. A

diferença entre elas está na sobreposição ou não da última porta (da esquerda para a direita nas

38

ﬁguras). Caso ela esteja sobreposta temos uma OR, no caso contrário, uma AND. Vejamos elas

prontas.

Figura 3.5: Porta OR

Figura 3.6: Porta AND

Após o docente explanar sobre o funcionamento, construção e responder as principais dúvi-

das, ele dividirá a turma em grupos de três a cinco alunos para que os mesmos tentem reproduzir

as portas lógicas exibidas. Encerrada a fase de construção, será dado inicio a fase de testes onde

todos os grupos veriﬁcarão se suas portas estão exibindo os valores lógicos de acordo com a tabela

verdade do conectivo que representa. Perceba que nessa fase podem surgir portas diferentes das

exibidas mas que realizam a mesma ação, ou ainda portas que executam parte das ações espera-

das. Cabe nesse ponto o professor intervir e sugerir aos alunos caminhos pelos quais eles possam

atingir seu objetivo. Com todos os circuitos funcionando é possível ainda pedir aos alunos para

encadearem suas portas para criarem circuitos maiores. Como sugestão, os circuitos do condicio-

nal e da porta XOR.

Figura 3.7: porta XOR

39

ATIVIDADE 2: Display de 7 segmentos

Conhecimentos Prévios: Os mesmos da atividade anterior e ainda sobre sistema de numeração

binário que será referido no apêndice A do presente trabalho.

Materiais Necessários: Laboratório de informática com capacidade para comportar os alunos e

a instalação do software livre LibreOfﬁce [12]. Pode ser usado qualquer outro software de planilha

eletrônica: Excel (Windows) e Numbers (OSX Mac), por exemplo.

Tempo de aula: A proposta é que sejam utilizadas duas aulas para a realização dessa atividade.

Dependendo do nível de conhecimento e habituação dos alunos com o uso de computadores, o

tempo de aula pode ser maior ou menor.

Objetivos: Dado que na atividade anterior foi visto que a lógica pode ser usada para construir

circuitos tangíveis, nessa atividade o objetivo é ampliar esse entendimento mostrando o funcio-

namento do display de 7 segmentos e ainda como eles podem fazer para transformar uma tabela

verdade em um circuito lógico.

Descrição da atividade: Como motivação o professor deve observar se alguém possui calcula-

dora ou relógio de pulso digital e perguntar se eles sabem como são gerados os números do dis-

play. A partir daí o docente seguirá os passos descritos no Exemplo 2.9, excetuando-se a parte da

simpliﬁcação, da seguinte forma. Com os alunos no laboratório de informática, abra o LibreOfﬁce

e mostre aos alunos como construir uma tabela a partir da ﬁgura abaixo.

Figura 3.8: Relação entre os binários e a combinação de leds acessa

Com a tabela pronta, divida os alunos em seis grupos e mostre como obter a fórmula para o

funcionamento do led E. Peça para cada grupo tentar descobrir a função correspondente a um

40

dos seis leds restantes. Junte as fórmulas encontradas e veja se o circuito está funcionando como

deveria. Para conseguir o efeito de acender/apagar basta selecionar as células com as fórmulas e

aplicar uma formatação condicional. Para maiores informações sugere-se usar a ajuda do próprio

software. Segue uma ﬁgura da tabela pronta e disponível em [13] com todas as fórmulas para

inspirar a construção com os alunos.

Figura 3.9: Versão ﬁnal da tabela do display de 7 segmentos

As fórmulas são:

D6

E 6

F 6

G6

D9

= NÃO(D5)

= NÃO(E5)

= NÃO(F5)

= NÃO(G5)

= OU (E (E 6;G6); E (D5;G6); E (D6; F 5); E (E 5; F 5); E (D5; E 6; F 6); E (D6; E 5;G5))

H 10 = OU (E (E 6;G6); E (D6; E 6); E (D6; F 5;G5); E (D6; F 6;G6); E (D5; F 6;G5))

H 12 = OU (E (D6; F 6); E (D5; E 6); E (F 6;G5); E (D6; E 5); E (D6;G5))

D13 = OU (E (D5; F 6); E (D6; E 6;G6); E (E 6; F 5;G5); E (E 5; F 5;G6); E (E 5; F 6;G5))

C 12 = OU (E (E 6;G6); E (D5; F 5); E (F 5;G6); E (D5; E 5))

C 10 = OU (E (D5; E 6); E (D5; F 5); E (F 6;G6); E (D6; E 5; F 6); E (E 5;G6))

D11 = OU (E (E 6; F 5); E (F 5;G6); E (D5;G5); E (D5; E 6); E (D6; E 5; F 6))

41

ATIVIDADE 3: Calculadora Humana

Conhecimentos Prévios: Operações com números em binário, em especial a adição, Lógica pro-

posicional e conhecimentos sobre a porta XOR.

Tempo de aula: Duas aulas.

Objetivos: Realizar uma atividade dinâmica com os alunos onde eles mesmos serão as portas

lógicas e aplicar o conhecimento adquirido até o momento em um objeto do dia a dia, a calcula-

dora.

Descrição da atividade: De início, o professor irá determinar que o braço erguido corresponde

a valor lógico verdadeiro (1) e o braço abaixado corresponde a falso (0). Como aquecimento pode

ser feito um jogo do estilo vivo ou morto, onde o professor alternará a posição de seus braços de

acordo com as ﬁguras abaixo e os alunos vão responder como se fossem alguma das portas lógicas.

Figura 3.10: Professor re-

Figura 3.11: Professor re-

Figura 3.12: Professor re-

Figura 3.13: Professor re-

presentando valores 0 e 0.

presentando valores 0 e 1.

presentando valores 1 e 0.

presentando valores 1 e 1.

Por exemplo, suponha que foi determinado para a turma representar a porta AND. Então a

cada rodada o professor assumirá uma das quatro posições representadas nas ﬁguras acima e os

alunos só podem responder com um braço erguido caso o professor levante ambos os braços.

Para iniciar a atividade da calculadora humana de 1 bit são necessários grupos de três alunos,

onde um deles representará os dois bits de entrada, outro será uma XOR representando a soma e o

42

terceira será um AND. Uma forma de dispor os três alunos seria de acordo com o diagrama abaixo.

AN D

X OR

Ent r ad a

Depois dos trios posicionados e sabendo duas respectivas tarefas vá pedindo para as pessoas

responsáveis pelas entradas mudarem as posições dos braços e veja se os valores de AND e XOR,

nessa ordem, correspondem à soma. Pode-se ainda, para aproveitar, fazer uma competição da

calculadora mais rápida.

Já para realizar uma calculadora humana de 2 bits são necessários 15 alunos. A disposição

deles vai obedecer a ﬁgura abaixo.

Figura 3.14: Disposição da calculadora humana de 2 bits

Em relação às funções de cada aluno em uma soma de dois bits a1a0 + b1b0 temos:

1. Representa os dígitos a0 (braço esquerdo) e b0 (braço direito);

2. Representa os dígitos a1 (braço esquerdo) e b1 (braço direito);

3. Repete as ações do aluno 5;

4. XOR em relação ao aluno 1;

5. AND em relação ao aluno 1;

6. XOR em relação ao aluno 2;

43

7. XOR em relação ao braço direito do aluno 2 e o aluno 3;

8. AND em relação ao braço direito do aluno 2 e o aluno 3;

9. NOT em relação ao aluno 5;

10. NOT em relação ao aluno 6;

11. AND em relação ao braço esquerdo do aluno 2 e o aluno 7;

12. OR em relação aos alunos 8 e 11;

13. AND em relação aos alunos 6 e 9;

14. AND em relação aos alunos 5 e 10;

15. OR em relação aos alunos 13 e 14.

O resultado da soma são os alunos 12, 15 e 4 nessa ordem. Abaixo segue a Figura 2.9 rotacio-

nada para ﬁcar no formato da calculadora humana de dois bits. Observe que cada porta lógica foi

numerada de acordo com a numeração dos alunos na Figura 3.14.

44

Relato de aplicação em sala de aula: Nesta parte, descrevo uma das atividades que envolvem a

lógica e que foi aplicada em uma turma de 1o ano do ensino médio do curso de informática no

Instituto Federal de Educação, Ciência e Tecnologia do Rio Grande do Norte, Campus Parelhas. A

atividade desenvolvida foi a calculadora humana no dia 15 de setembro de 2015. A turma possuía

38 alunos que frequentavam as aulas regularmente, porém no dia da aplicação das atividades es-

tavam presentes 15 alunos, sendo 4 meninas e 11 meninos, com faixa etária entre 14 e 16 anos.

Para a realização da atividades foram utilizados 2 aulas seguidas de 45 minutos, das 10h30min às

12h00min.

O motivo de realizarmos apenas uma das atividades propostas foi que a lógica ainda não ﬁ-

gura entre os conteúdos programáticos de matemática para o ensino médio. Consultando o setor

pedagógico da instituição fui orientado a entrar em acordo com o professor da disciplina de lógica

para a aplicação da atividade. De imediato, o professor achou que seria interessante aplicarmos

uma delas, a calculadora, a ﬁm de obtermos algum feedback sobre a atividade e pelo curto espaço

de tempo disponível para a aplicação.

A principio o professor reuniu os alunos, explicou como funcionaria a atividade e distribuiu

entre eles as funções que cada uma realizaria. Após isso, foi feito um teste para ver se cada aluno

entendeu como funcionava a porta lógica que estava representando.

Figura 3.15: Professor testando as "portas lógicas".

Em seguida, com todos sabendo suas respectivas funções, foi iniciada a atividade da calcula-

dora humana de 1 bit. Nas imagens abaixo está o registro fotográﬁco dessa atividade. A menina

45

que está de costas representa a entrada dos bits, onde o primeiro é representado pelo braço es-

querdo e o segundo pelo braço direito. Já os meninos representam a soma a1a0, sendo o menino

da esquerda o dígito a1 e o da direita a0.

Figura 3.16: Entrada 0 + 0 e resultado 00.

Figura 3.17: Entrada 0 + 1 e resultado 01.

Figura 3.18: Entrada 1 + 0 e resultado 01.

Figura 3.19: Entrada 1 + 1 e resultado 10.

46

Os demais alunos ﬁcaram empolgados em participar e então foi sugerido que fosse realizada a

calculadora humana de 2 bits. O posicionamento inicial foi registrado na imagem seguinte.

Figura 3.20: posicionamento dos alunos na calculadora humana de 2 bits.

Nesse posicionamento os alunos cujas cabeças estão circuladas em vermelho representam a

entrada e os que estão circulados em verde são as saídas. Foram realizadas algumas tentativas

inicialmente sem sucesso, pois os alunos ainda estavam acostumando-se com suas funções. Mas,

após essas tentativas, a calculadora funcionou de maneira ideal. Segue abaixo uma imagem desse

funcionamento.

Figura 3.21: Entrada 11 + 00 e resultado 011

Encerrada a calculadora humana, alguns alunos vieram até o professor e relataram, por exem-

plo: "Ah, agora eu entendi essa história de negação, eu pensava que dava sempre Falso"e "Final-

mente entendi a diferença entre o ou normal e o ou exclusivo".

47

Considerações Finais

Alguns alunos já chegaram a falar em sala de aula que matemática não tem lógica. Reﬂetindo

sobre isso cheguei a duas constatações. A primeira é que os estudantes não sabem o que realmente

seja a lógica e a segunda que o programa oﬁcial de ensino de matemática brasileiro não contempla

tal tópico.

A lógica proposicional está intimamente ligada com a matemática do ensino médio, desde

enunciados onde há questões que utilizam o e, ou e não no seus sentidos lógicos até em linguagem

de conjuntos. Vendo por esse lado, resolvi escrever essa dissertação com o intuito de promover a

discussão sobre a adição do ensino da lógica ao currículo de matemática.

Sobre o trabalho em si foi muito interessante e satisfatório descobrir e aprender sobre as apli-

cações da lógica proposicional na construção de circuitos lógicos. Vejo ainda, a partir da experi-

ência da aplicação com os alunos, que trabalhar esse tema através de atividades lúdicas o torna

mais interessante e responde àquela pergunta constante dos alunos sobre o "Para que serve isso

professor?".

Para concluir espero que como continuidade ao trabalho eu, ou qualquer outra pessoa, possa

expandi-lo, aprofundá-lo e aplicar as demais atividades sugeridas. E mais, que daqui a algum

tempo, as autoridades em matemática e demais pessoas encarregadas do currículo escolar vejam

a contribuição que a inserção da lógica pode dar aos estudantes e a suas maneiras de raciocinar.

48

Apêndice A

Sistema de numeração binário

As pessoas comumente utilizam o sistema decimal posicional para representar os números na-

turais, mas há outros sistemas de numeração em uso, em especial o sistema binário, fortemente

utilizado em computação. Os sistemas citados tem uma característica comum que é o fato de

serem posicionais de base constante. Ambos os sistemas tem sua fundamentação no seguinte

teorema, que é uma aplicação da divisão euclidiana.

Teorema A.1 Dados a, b ∈ (cid:78), com b > 1, existem números naturais c0, c1, ..., cn menores do que b,

univocamente determinados, tais que

a = cnbn + ... + c2b2 + c1b + c0.

(A.1)

Prova: Vamos demonstrar o teorema usando a segunda forma do princípio da indução matemá-

tica sobre a. Se a < b, basta tomar n = 0 e c0 = a.

Supondo o resultado válido para todo natural menor do que a, vamos prová-lo para a. Pela

divisão euclidiana, existem q e r únicos tais que

a = bq + r, com r < b.

Daí a − r = bq ⇒ q|a − r ⇒ q ≤ a − r ⇒ q < a. Pela hipótese de indução, segue que existem

números naturais univocamente determinados m e d0, d1, ..., dm, com d j < b, para todo j , tais que

q = dmbm + ... + d2b2 + d1b + d0.

Substituindo a segunda equação destacada na primeira temos,

a = b(dmbm + ... + d2b2 + d1b + d0) + r

= dm+1bm+1 + ... + d2b3 + d1b2 + d0b + r.

49

Tome r = c0, n = m + 1 e c j = d j −1 para j = 1, ..., n., assim

a = cnbn + ... + c2b2 + c1b + c0.

A unicidade decorre das unicidades acima estabelecidas.

A expressão (A.1) será denominada a expansão de a na base b, onde b é a base e (cncn−1...c1c0)b

é a representação de a na base b.

Exemplo A.1 Vamos representar o número 57 na base 2 e na base 3.

Utilizando a ideia da demonstração acima, utilizaremos o algoritmo da divisão euclidiana para

mudar o 57 da base 10 para a base binária. Vamos dividir o 57 por 2 sucessivas vezes até o quoci-

ente da divisão resultar em um número menor ou igual a 2.

Agora na base 3, temos

57 = 28.2 + 1

= (14.2).2 + 1

= [(7.2).2].2 + 1

= {[(3.2 + 1).2].2}.2 + 1

= {{[(2.1 + 1).2 + 1].2}.2}.2 + 1

= 25 + 24 + 23 + 1

= 1.25 + 1.24 + 1.23 + 0.22 + 0.21 + 1.20

= (111001)2.

57 = 19.3

= (6.3 + 1).3

= [(2.3).3 + 1].3

= 2.33 + 3

= 2.33 + 0.32 + 1.31 + 0.30

= (2010)3.

Portanto do número 57 da base decimal se escreve como (111001)2 na base binária e (2010)3

na base 3. Vale salientar que foram utilizados os parenteses com um índice 2 para não confundir

o 57 binário com o 111001 da base decimal, o mesmo serve para o índice 3.

50

Exemplo A.2 Represente o número 41 na base 5 e na base 7.

O exemplo dado apesar de fugir da intenção geral dessa seção serve para mostrar a generalidade

do teorema A.1.

41 = 5.8 + 1

= 5.(5.1 + 3) + 1

= 52 + 5.3 + 1

= 1.52 + 3.51 + 1.50

= (131)5.

41 = 5.7 + 6

= 5.71 + 6.70

= (56)7.

Agora na base 7, obtemos

A.1 Operações

A.1.1 Adição

A adição no sistema binário é similar a realizada no sistema decimal, mas com a ressalva de

haver apenas dois algarismos. Dessa forma, vamos listar todos os resultados possíveis na soma de

dois algarismos do sistema binário. Assim:

0 + 0 = 0, vai 0,

1 + 0 = 1, vai 0,

0 + 1 = 1, vai 0,

1 + 1 = 0, vai 1.

Exemplo A.3 Vamos somar os binários (101)2 e (110)2

Vamos realizar a soma de duas maneiras, a primeira usando o teorema e a segunda usando um

51

método prático.

(101)2 + (110)2 = (1.22 + 0.21 + 1.20) + (1.22 + 1.21 + 0.20)

= 1.22 + 1.22 + 0.21 + 1.21 + 1.20 + 0.20

= 2.22 + 1.21 + 1.20

= 1.23 + 0.22 + 1.21 + 1.20

= (1011)2.

Ou de forma prática, segue que

1

0

0

1 1 0

+ 1 0 1

1 0 1 1

A.1.2 Subtração

A subtração no sistema binário segue a mesma linha de raciocínio da adição em relação a base

decimal. Um resultado que merece destaque é 0 - 1. Assim como ocorre no sistema decimal existe

um “empréstimo"de uma unidade do próximo número não-nula. Portanto

0 − 0 = 0, pede 0,

1 − 0 = 1, pede 0,

0 − 1 = 1, pede 1,

1 − 1 = 0, pede 0.

Exemplo A.4 Subtraia (1010)2 de (1101)2

(1101)2 − (1010)2 = (1.23 + 1.22 + 0.21 + 1.20) − (1.23 + 0.22 + 1.21 + 0.20)

= 1.23 − 1.23 + 1.22 − 0.22 + 0.21 − 1.21 + 1.20 − 0.20

= 1.22 − 1.21 + 1.20

= 2.21 − 1.21 + 1.20

= 1.21 + 1.20

= (0011)2.

52

Fazendo de outra maneira, temos

1

1 1 0 1

− 1 0 1 0

0 0 1 1

Explicando o cálculo a partir da primeira coluna da direita: 1 - 0 = 1, pela deﬁnição; Na segunda

coluna da direita 0 - 1 = 1 e pediu 1 ao número ao lado que está em negrito; Na terceira coluna

temos 0 - 0 = 0 e, por último, 1 - 1 = 0 na coluna da esquerda.

A.1.3 Multiplicação

A multiplicação em binário segue as mesmas regras da multiplicação no sistema decimal.

0 x 0 = 0,

1 x 0 = 0,

0 x 1 = 0,

1 x 1 = 1.

Exemplo A.5 Multiplique os binários (1001)2 e (110)2

(1001)2.(110)2 = (1.23 + 0.22 + 0.21 + 1.20)(1.22 + 1.21 + 0.20)

= 1.23.22 + 1.23.21 + 1.20.22 + 1.20.21

= 1.25 + 1.24 + 0.23 + 1.22 + 1.21 + 0.20

= (110110)2.

De outra maneira, obtemos

1 0 0 1

x

1 1 0

0 0 0 0

+ 1 0 0 1

1 0 0 1

1 1 0 1 1 0

53

A.1.4 Divisão

A divisão entre binários é análoga à divisão entre números decimais.

Exemplo A.6 Divida (1010)2 por (101)2

Usando o algoritmo de Euclides, temos

1

0

1

0

|1 0 1

-

1 0 1

1

0

0

-

0

0

0

0 0 0

0

0

0

Sugestões de Exercícios

1. Represente os números abaixo nas bases indicadas:

a) 130 na base 2;

b) 791 na base 6;

c) 289 na base 9;

2. Efetue as operações indicadas entre os números binários abaixo:

a) 1011010 + 1001110;

b) 11110111 - 10111110;

c) 1010101 x 11101;

d) 1010010000 ÷ 1011;

54

Referências Bibliográﬁcas

[1] CANAVARRO, A.P.; PONTE, J.P. O papel do professor no currículo de Matemática 2005.

Disponível em: < ht t p : //d oc s.d i . f c.ul .pt /bi t st r eam/10451/4085/1/05 − C anav ar r o −

Pont e%28GT I %29.pd f >.Acesso em: 19 de abril de 2015.

[2] MINISTÉRIO DA EDUCAÇÃO. Parâmetros Curriculares Nacionais Ensino Médio

[3] CARVALHO,

J.N. Relações

inter-hemisféricas cerebrais

. Disponível em:

< ht t p :

//pt .sl i d eshar e.net /and er sonbal bi not /r el acoes − i nt er hemi s f er i c as2 >. Acesso em:

02 de agosto de 2015.

[4] COPI, I. M. Introdução à Lógica São Paulo: Mestre Jou, 1978. 488 p.

[5] HEGENBERG, L. Lógica Rio de Janeiro: Forense Universitária, 2015. 426 p.

[6] GARNIER, R.; TAYLOR, J. Discrete Mathematics for New Technology. Londres: Institute of Phy-

sics, 2002. 749 p.

[7] MATIAS, R.R.; JÚNIOR, J.M.P.M. Laboratório de Circuitos Lógicos. Disponível em: < ht t p :

//w w w.u f pi .br /subsi t eF i l es/menezes/ar qui vos/ f i l es/Gui ae xper i ment os%204.pd f >.

Acesso em: 08 de agosto de 2015.

[8] GUNTZEL, J.L.; NASCIMENTO, F.A. Introdução aos Sistemas Digitais. Disponível em: < ht t p :

//w w w.i n f .u f sc.br / g unt zel /i sd /i sd 2.pd f >. Acesso em: 08 de agosto de 2015.

55

[9] DAGHLIAN, J. Lógica e Álgebra de Boole. São Paulo: Editora Atlas S.A., 2008. 167 p.

[10] HEFEZ, A. Elementos de aritmética Rio de Janeiro: SBM, 2011. 176 p.

[11] Logic Gate Simulator. Disponível em: < ht t p : //w w w.kol l s.net /g at esi m/ >. Acesso em:

18 de setembro de 2015.

[12] LibreOfﬁce. Disponível em: < ht t ps : //pt − br.l i br eo f f i ce.or g / >. Acesso em: 18 de se-

tembro de 2015.

[13] Planilha

do Display

de

sete

segmentos. Disponível

em:

< ht t ps

:

//w w w.d r opbox.com/s/5poxs56c f a6x9b f /C i r cui t oNU M E ROS H E X A.od s?d l = 0 >.

Acesso em: 21 de setembro de 2015.

56

