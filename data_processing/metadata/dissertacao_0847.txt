UNIVERSIDADE FEDERAL DE MATO GROSSO DO SUL

INSTITUTO DE MATEM ´ATICA

PROGRAMA DE P ´OS GRADUAC¸ ˜AO

MESTRADO PROFISSIONAL EM MATEM ´ATICA
EM REDE NACIONAL

LUIZ WEBERSON ALVES FELIPE

METAPOST NO ENSINO M´EDIO

CAMPO GRANDE - MS

2019

UNIVERSIDADE FEDERAL DE MATO GROSSO DO SUL

INSTITUTO DE MATEM ´ATICA

PROGRAMA DE P ´OS GRADUAC¸ ˜AO

MESTRADO PROFISSIONAL EM MATEM ´ATICA
EM REDE NACIONAL

LUIZ WEBERSON ALVES FELIPE

METAPOST NO ENSINO M´EDIO

Orientadora: Profa. Dra. Elisabete Sousa Freitas

Disserta¸c˜ao apresentada ao Programa de P´os-

Gradua¸c˜ao em Matem´atica em Rede Nacional

do Instituto de Matem´atica da Universidade

Federal de Mato Grosso do Sul-INMA/UFMS

como parte dos requisitos para obten¸c˜ao do

t´ıtulo de Mestre.

Campo Grande - MS

2019

Metapost no Ensino M´edio

Luiz Weberson Alves Felipe

Disserta¸c˜ao apresentada ao Programa de P´os-Gradua¸c˜ao em matem´atica em Rede

Nacional do Instituto de Matem´atica da Universidade Federal de Mato Grosso do Sul-

INMA/UFMS como parte dos requisitos para obten¸c˜ao do t´ıtulo de Mestre.

Aprovado pela Banca Examinadora:

Profa. Dra. Elisabete Sousa Freitas - UFMS

Prof. Dr. Fabricio S´ergio de Paula - UEMS

Profa. Dra. R´ubia Mara de Oliveira Santos - UFMS

Campo Grande – MS, 25 de Novembro de 2019

A Deus, pelo amor incondicional demonstrado por mim ao entregar seu Precioso Filho

pra morrer na cruz em meu lugar, me concedendo a Gra¸ca de viver uma vida de vit´orias

na Tua Presen¸ca, dedico.

i

“Pois Deus enviou o seu Filho ao mundo, n˜ao para condenar o mundo, mas para que

este fosse salvo por meio dele..”

Jo˜ao 3:17

ii

Agradecimentos

Inicialmente, agrade¸co a Deus Pai pelo Seu inﬁnito amor para comigo, demonstrado

quando enviou o que tinha de mais precioso, Seu Filho Jesus Cristo, pra morrer em meu

lugar, pelos meus pecados, possibilitando assim, que eu pudesse desfrutar da verdadeira

vida aqui nesse mundo ﬁnito e, principalmente da vida eterna em comunh˜ao com Ele.

`A minha esposa Viviane do Nascimento Costa, mulher virtuosa, a qual Deus me

concedeu a gra¸ca de viver junto, pelo aux´ılio e pelo companheirismo que demonstra em

todo momento de sua vida e, principalmente por me incentivar no desenvolvimento desse

trabalho.

Aos meu ﬁlhos, Luiz Matheus Diniz Felipe e Samuel Costa Felipe, aos quais dedico

toda a vontade de viver, sendo assim, grandes motiva¸c˜oes para n˜ao desistir.

Aos meus pais, Cirio Ferreira Felipe, Auride Alves e Edna dos Santos Oliveira, por

tudo o que s˜ao na minha vida e por tudo o que passaram para possibilitar os cuidados

necess´arios durante minha juventude.

`A professora Elisabete Freitas pelo apoio, dedica¸c˜ao, conﬁan¸ca e orienta¸c˜ao nesse

trabalho.

Ao professor Marcelo Furquim, por contribuir com a cedˆencia de suas aulas para

trabalhar o METAPOST com os alunos.

Ao colega Vin´ıcius Estev˜ao, por colaborar grandemente no aux´ılio com o METAPOST.

Aos meus colegas de turma no PROFMAT, com os quais pude obter, compartilhar e,

assim, aprender muitos conte´udos, necess´arios para o cumprimento desse trabalho, bem

como no aux´ılio ao meu trabalho como docente.

Ao PROFMAT - Mestrado Proﬁssional em Matem´atica em Rede Nacional pela opor-

tunidade oferecida para o meu crescimento proﬁssional.

iii

Resumo

O METAPOST ´e uma linguagem gr´aﬁca criada por John Douglas Hobby e proveni-

ente de uma linguagem de programa¸c˜ao chamada METAFONT, desenvolvida por Donald

Knuth, matem´atico e cientista da computa¸c˜ao, que possibilitou o desenvolvimento de fer-

ramentas que permitem a cria¸c˜ao de documentos cient´ıﬁcos, padronizados e com excelente
qualidade gr´aﬁca. ´E poss´ıvel, com o uso METAPOST criar imagens de qualidade para tex-

tos matem´aticos, usando uma t´ecnica de programa¸c˜ao que envolve c´alculos matem´aticos.

Este trabalho visa apresentar os conhecimentos b´asicos sobre coordenadas no plano e

dos comandos utilizados no METAPOST, para o desenvolvimento de ﬁguras geom´etricas

e gr´aﬁcos de fun¸c˜oes reais presentes no Ensino M´edio.

Palavras-chave: METAPOST; Figuras Geom´etricas; Fun¸c˜oes Reais.

iv

Abstract

METAPOST is a graphic language created by John Douglas Hobby and coming from a

programming language called METAFONT, developed by Donald Knuth, a mathematician

and computer scientist, has enabled the development of tools that allow the creation of

scientiﬁc documents, standardized and with excellent graphic quality. Using METAPOST

you can create quality images for math texts using a programming technique that involves

mathematical calculations.

This work aims to present the basic knowledge about coordinates in the plane and the

commands used in METAPOST, for the development of geometric ﬁgures and graphs of

real functions present in high school.

Keywords: METAPOST; Geometric Figures; Transformations; Real Functions.

v

Sum´ario

1 Coordenadas no Plano

1.1 Coordenadas Cartesianas . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.1.1 Coordenadas na Reta . . . . . . . . . . . . . . . . . . . . . . . . . .

1.1.2 Coordenadas no Plano . . . . . . . . . . . . . . . . . . . . . . . . .

1.1.3 Distˆancia entre dois pontos . . . . . . . . . . . . . . . . . . . . . . .

1.1.4 Ponto m´edio de um segmento . . . . . . . . . . . . . . . . . . . . .

1.2 Equa¸c˜oes e gr´aﬁcos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2.1 Equa¸c˜ao da reta . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3

3

3

4

6

8

9

9

1.2.2

Intersec¸c˜ao entre retas no plano . . . . . . . . . . . . . . . . . . . . 10

1.3 Equa¸c˜ao da circunferˆencia . . . . . . . . . . . . . . . . . . . . . . . . . . . 11

2 Comandos b´asicos do METAPOST

14

2.1 Marcando pontos no plano . . . . . . . . . . . . . . . . . . . . . . . . . . . 14

2.2 Unidades de medida . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14

2.3 Largura de linhas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15

2.4 Constru¸c˜ao de segmentos . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16

2.5 Constru¸c˜ao de pol´ıgonos . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17

2.6 Constru¸c˜ao de circunferˆencias . . . . . . . . . . . . . . . . . . . . . . . . . 17

2.7 R´otulos

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18

2.8 Setas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19

2.9 Tipos de dados

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20

2.9.1 Dados tipo numeric . . . . . . . . . . . . . . . . . . . . . . . . . . . 21

2.9.2 Dados tipo pair . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21

2.9.3 Dados tipo path . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22

2.9.4 Dados tipo picture . . . . . . . . . . . . . . . . . . . . . . . . . . . 23

vi

SUM ´ARIO

2.9.5 Dados tipo transform . . . . . . . . . . . . . . . . . . . . . . . . . . 23

2.10 Utiliza¸c˜ao de cores em ﬁguras . . . . . . . . . . . . . . . . . . . . . . . . . 23

2.11 Operadores matem´aticos . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25

2.12 La¸co for . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26

3 Fun¸c˜oes e Gr´aﬁcos

28

3.1 Fun¸c˜oes

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28

3.1.1 Conjunto Imagem e Gr´aﬁcos . . . . . . . . . . . . . . . . . . . . . . 29

3.1.2 Par´abolas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31

3.1.3 Fun¸c˜oes polinomiais

. . . . . . . . . . . . . . . . . . . . . . . . . . 36

3.2 Constru¸c˜ao do Plano Cartesiano

. . . . . . . . . . . . . . . . . . . . . . . 36

3.3 Constru¸c˜ao de gr´aﬁcos de fun¸c˜oes reais b´asicas . . . . . . . . . . . . . . . . 37

4 Transforma¸c˜oes com o METAPOST

43

4.1 Transforma¸c˜ao no Plano Cartesiano . . . . . . . . . . . . . . . . . . . . . . 43

4.2 Homotetia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44

4.3 Transla¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

4.4 Rota¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46

5 Construindo ﬁguras com o METAPOST

48

5.1 Atividade 1: Constru¸c˜ao de segmentos

. . . . . . . . . . . . . . . . . . . . 48

5.2 Atividade 2: Constru¸c˜ao de eixos

. . . . . . . . . . . . . . . . . . . . . . . 50

5.3 Atividade 3: Constru¸c˜ao de ˆangulos . . . . . . . . . . . . . . . . . . . . . . 51

5.4 Atividade 4: Constru¸c˜ao de circunferˆencias . . . . . . . . . . . . . . . . . . 52

5.5 Atividade 5: Constru¸c˜ao de triˆangulos

. . . . . . . . . . . . . . . . . . . . 54

5.6 Atividade 6: Constru¸c˜ao de gr´aﬁco de fun¸c˜ao aﬁm . . . . . . . . . . . . . . 56

5.7 Atividade 7: Constru¸c˜ao de gr´aﬁcos de fun¸c˜oes quadr´aticas usando trans-

forma¸c˜oes. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58

5.8 Relato da pr´atica com os alunos . . . . . . . . . . . . . . . . . . . . . . . . 62

A Como Trabalhar com o METAPOST

66

A.1 Programas necess´arios

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66

A.2 Estrutura de um documento METAPOST . . . . . . . . . . . . . . . . . . . 67

A.3 Inser¸c˜ao de ﬁguras num documento TEX . . . . . . . . . . . . . . . . . . . 68

vii

SUM ´ARIO

A.4 Visualiza¸c˜ao de ﬁguras METAPOST em plataforma on-line . . . . . . . . . 68

viii

Lista de Figuras

1.1 Sistema de eixos ortogonais

. . . . . . . . . . . . . . . . . . . . . . . . . .

1.2 Representa¸c˜ao do ponto A, de coordenadas (1, 3)

. . . . . . . . . . . . . .

1.3 Gr´aﬁco da reta vertical x = 1.

. . . . . . . . . . . . . . . . . . . . . . . . .

1.4 Gr´aﬁco da reta horizontal y = 3. . . . . . . . . . . . . . . . . . . . . . . . .

1.5 Gr´aﬁco da reta y = 2x. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.6 Distˆancia entre os pontos P1 = (x1, y1) e P2 = (x2, y2). . . . . . . . . . . . .

1.7 Distˆancia entre os pontos C=(-2,3) e D=(2,1) do plano . . . . . . . . . . .

1.8 M = (xm, ym) ´e o ponto m´edio do segmento P Q, pois d(P, M ) = d(Q, M ) .

1.9 O ponto m´edio M=(1,-1) do segmento AB . . . . . . . . . . . . . . . . . .

4

5

5

6

6

7

7

8

9

1.10 Representa¸c˜ao da reta r que passa pelos pontos A=(2,-1) e B=(3,2) . . . . 10

1.11 Intersec¸c˜ao I=(1,2) entre as retas r e s.

. . . . . . . . . . . . . . . . . . . . 11

1.12 Representa¸c˜ao da circunferˆencia λ de centro C=(1,2) e raio r igual a 2 . . . 13

2.1 Tra¸cados de diferentes larguras.

. . . . . . . . . . . . . . . . . . . . . . . . 16

2.2 Segmento de reta de extremidades (0,0) e (2,1) . . . . . . . . . . . . . . . . 16

2.3 Tipos de tra¸cos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17

2.4 Pol´ıgono fechado . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17

2.5 Circunferˆencia de centro na origem e diˆametro u . . . . . . . . . . . . . . . 17

2.6 Suﬁxos usados no comando label

. . . . . . . . . . . . . . . . . . . . . . . 18

2.7 R´otulos nos extremos do segmento AB de medida k . . . . . . . . . . . . . 19

2.8 Seta com extremidade em uma ponta . . . . . . . . . . . . . . . . . . . . . 19

2.9 Seta com extremidade nas duas pontas . . . . . . . . . . . . . . . . . . . . 19

2.10 Sistema de eixos ortogonais formando o plano cartesiano . . . . . . . . . . 20

2.11 Segmento z1z2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22

ix

LISTA DE FIGURAS

2.12 Curva ligando A e B, modiﬁcadas as dire¸c˜oes de sa´ıda e de chegada e

armazenadas numa vari´avel m, tipo path.

. . . . . . . . . . . . . . . . . . 22

2.13 Caminho fechado formando o pol´ıgono OABC . . . . . . . . . . . . . . . . 23

2.14 Caminho fechado usando cycle, formando o pol´ıgono OABC . . . . . . . . 24

2.15 Caminho fechado usando cycle, formando o pol´ıgono OABC . . . . . . . . 24

2.16 Caminho fechado usando cycle, formando o pol´ıgono OABC . . . . . . . . 24

2.17 Utiliza¸c˜ao de cores em linhas . . . . . . . . . . . . . . . . . . . . . . . . . . 25

2.18 Grade de pontos com 4 linhas e 4 colunas.

. . . . . . . . . . . . . . . . . . 26

2.19 Plano cartesiano com grade tracejada.

. . . . . . . . . . . . . . . . . . . . 27

2.20 Escada formada por segmentos horizontais. . . . . . . . . . . . . . . . . . . 27

3.1 Gr´aﬁco da fun¸c˜ao real y = f (x) = mx + n . . . . . . . . . . . . . . . . . . 30

3.2 Gr´aﬁco da fun¸c˜ao constante y = n . . . . . . . . . . . . . . . . . . . . . . 30

√

3.3 Gr´aﬁcos das fun¸c˜oes y = ±

9 − x2

. . . . . . . . . . . . . . . . . . . . . . 31

3.4 Gr´aﬁco da fun¸c˜ao y = f (x) = x2.

. . . . . . . . . . . . . . . . . . . . . . . 31

3.5 Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 e y = 2x2.

. . . . . . . . . . . 32

3.6 Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 , y = 2x2 e y =

1
2

x2 .

3.7 Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = −x2 , y = −2x2 e y = −

. . . . . 32
1
2

. . 33

x2.

3.8 Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 e y = x2 + 2. . . . . . . . . . . 33

3.9 Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 e y = x2 − 3. . . . . . . . . . . 34

3.10 Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 e y = (x − 3)2. . . . . . . . . . 34

3.11 Gr´aﬁcos de par´abolas.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35

3.12 Gr´aﬁco da fun¸c˜ao polinomial y = g(x) = x3 − 3x − 2 . . . . . . . . . . . . 36

3.13 Plano cartesiano limitado pelo intervalo [-4, 4]

. . . . . . . . . . . . . . . . 37

3.14 Gr´aﬁco da fun¸c˜ao real y = f (x) = 2x no intervalo [−1, 1]. . . . . . . . . . . 38

3.15 Gr´aﬁco da fun¸c˜ao real y = f (x) = x2 + 1 no intervalo [−2, 2]. . . . . . . . . 38

3.16 Gr´aﬁco da fun¸c˜ao polinomial y = f (x) = −x4 + 10x3 − 35x2 + 50x − 24 no

intervalo ]0, 5[. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39

3.17 Gr´aﬁcos da fun¸c˜ao real y = f (x) = 3x no intervalo [−1, 1], extrapolado (`a

esquerda) e cortado (`a direita).

. . . . . . . . . . . . . . . . . . . . . . . . 39

3.18 Intersec¸c˜ao I entre curvas no plano.

. . . . . . . . . . . . . . . . . . . . . . 40

3.19 Intersec¸c˜ao Q entre curvas no plano.

. . . . . . . . . . . . . . . . . . . . . 41

3.20 Intersec¸c˜ao P entre retas no plano.

. . . . . . . . . . . . . . . . . . . . . . 42

x

LISTA DE FIGURAS

3.21 Intersec¸c˜ao I entre as curvas de equa¸c˜oes y =

√

x e y = x2.

. . . . . . . . . 42

4.1 Gr´aﬁco da fun¸c˜ao f e da fun¸c˜ao f −1 obtida de f usando a transforma¸c˜ao

T (x, y) = (y, x)

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44

4.2 Homotetia no triˆangulo (cid:52)ABC . . . . . . . . . . . . . . . . . . . . . . . . 45

4.3 Transla¸c˜ao na circunferˆencia C1

. . . . . . . . . . . . . . . . . . . . . . . . 46

4.4 Rota¸c˜ao de 60o em torno da origem no triˆangulo (cid:52)ABC . . . . . . . . . . 46

4.5 Rota¸c˜ao de 60o em torno do ponto (2,2).

. . . . . . . . . . . . . . . . . . . 47

4.6 Rota¸c˜ao de 120o em torno do ponto (1,2).

. . . . . . . . . . . . . . . . . . 47

5.1 Segmento M N de medida 5 cm . . . . . . . . . . . . . . . . . . . . . . . . 49
√

5.2 Segmento tracejado EF de medida

13 cm . . . . . . . . . . . . . . . . . 49
√

20 cm . . . . . . . . . . . . . . . . . 49

5.3 Segmento pontilhado CD de medida

5.4 Eixo horizontal Ox . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50

5.5 Eixo vertical Oy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50

5.6 Sistema de coordenadas cartesianas ortogonais Oxy . . . . . . . . . . . . . 51

5.7

5.8

5.9

ˆAngulo A ˆOB de medida α = 30o.
ˆAngulo P ˆQR de medida θ = 75o.
ˆAngulo X ˆY Z de medida β = 140o.

. . . . . . . . . . . . . . . . . . . . . . . 51

. . . . . . . . . . . . . . . . . . . . . . . 52

. . . . . . . . . . . . . . . . . . . . . 52

5.10 Circunferˆencia de centro na origem e raio 2cm . . . . . . . . . . . . . . . . 53

5.11 Circunferˆencia de centro (2, 1) e raio 1,5 cm . . . . . . . . . . . . . . . . . 53

5.12 Circunferˆencia de centro (1, 1) e raio 1 preenchida na cor verde

. . . . . . 54

5.13 Triˆangulo (cid:52)ABC escaleno. . . . . . . . . . . . . . . . . . . . . . . . . . . . 55

5.14 Triˆangulo (cid:52)P QR equil´atero de lado 4 cm.

. . . . . . . . . . . . . . . . . . 55

5.15 Triˆangulo (cid:52)M N O is´osceles de base 2 cm . . . . . . . . . . . . . . . . . . . 55

5.16 Gr´aﬁco da fun¸c˜ao real deﬁnida por y=x-1 na cor azul

. . . . . . . . . . . . 56

5.17 Gr´aﬁco da fun¸c˜ao real y=-2x na cor vermelha . . . . . . . . . . . . . . . . 57

5.18 Gr´aﬁco da fun¸c˜ao real y = 2

3x + 1 na cor verde . . . . . . . . . . . . . . . . 57
5.19 Gr´aﬁco da fun¸c˜ao y = 2x2 na cor azul . . . . . . . . . . . . . . . . . . . . . 59

5.20 Gr´aﬁco da fun¸c˜ao f (x) = −2(x + 1)2. . . . . . . . . . . . . . . . . . . . . . 60

5.21 Gr´aﬁco do resultado da rota¸c˜ao de 30o no sentido anti-hor´ario ao gr´aﬁco

de f (x) = (x − 1)2 + 2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61

5.22 Alunos trabalhando no laborat´orio.

. . . . . . . . . . . . . . . . . . . . . . 64

xi

LISTA DE FIGURAS

5.23 Aluno desenvolvendo ﬁgura livremente.

. . . . . . . . . . . . . . . . . . . . 64

A.1 Inser¸c˜ao de ﬁgura num documento TEX . . . . . . . . . . . . . . . . . . . . 68
A.2 Visualizador METAPOST on-line em branco . . . . . . . . . . . . . . . . . 69

A.3 Visualizador METAPOST on-line com exemplo . . . . . . . . . . . . . . . . 69

xii

Introdu¸c˜ao

As tecnologias est˜ao cada vez mais presente no nosso cotidiano, provocando grandes

impactos em muitos aspectos do comportamento humano. Com o avan¸co da tecnologia

surgem novas possibilidades no processo de ensino e aprendizagem, proporcionando aos

docentes encontrar novas formas de ensinar e aos alunos novas formas de aprender.

Neste sentido, este trabalho apresenta uma maneira de utiliza¸c˜ao dos recursos tec-

nol´ogicos para o aprendizado da matem´atica, particularmente no estudo de geometria

anal´ıtica, ou seja, estudo da geometria no plano com a utiliza¸c˜ao de coordenadas.

O recurso utilizado ´e o METAPOST uma linguagem gr´aﬁca de programa¸c˜ao, derivada

do METAFONT e criada por John Douglas Hobby. Essa linguagem ´e utilizada para criar

imagens em PostScript e ´e baseada em linhas de comando contendo c´alculos matem´aticos.

As imagens geradas pelo METAPOST podem ser visualizadas em qualquer visualizador

PostScript e em qualquer arquivo de sa´ıda obtido atrav´es de um arquivo TEX.

O objetivo principal ´e apresentar uma forma do aluno ter contato, aplicar e aprofundar

alguns conceitos matem´aticos estudados no Ensino M´edio, estimulando o racioc´ınio l´ogico

matem´atico e a organiza¸c˜ao de ideias para resolver problemas.

Sendo assim, o presente trabalho proporciona ao aluno do ensino m´edio, uma meto-

dologia ativa no aprendizado sobre geometria, estudando ﬁguras b´asicas atrav´es de coor-

denadas no plano e aprendendo os comandos utilizados no METAPOST, para a cria¸c˜ao de

ﬁguras geom´etricas como pol´ıgonos, ˆangulos, circunferˆencias e gr´aﬁcos de fun¸c˜oes reais.

Num primeiro momento, no Cap´ıtulo 1, apresentamos os conceitos b´asicos sobre Ge-

ometria Anal´ıtica, pois, o METAPOST se baseia na utiliza¸c˜ao de coordenadas no plano

para o desenho de ﬁguras.

No Cap´ıtulo 2, s˜ao descritos os comandos b´asicos usados pelo METAPOST na ela-

bora¸c˜ao de ﬁguras. Nos cap´ıtulos seguintes, 3 e 4, ser˜ao apresentados, respectivamente,

exemplos de elabora¸c˜ao de gr´aﬁcos de algumas fun¸c˜oes estudadas no Ensino M´edio e co-

1

mandos para realizar transforma¸c˜oes nas ﬁguras produzidas, como transla¸c˜ao, rota¸c˜ao e

homotetia.

O Cap´ıtulo 5 apresenta atividades para os alunos, bem como suas respectivas sugest˜oes

de solu¸c˜oes.

Este trabalho ainda apresenta um Apˆendice ensinando como trabalhar com o

METAPOST e inserir ﬁguras num documento TEX.

As atividades propostas foram aplicadas a estudantes do 2o ano do Ensino M´edio con-

comitante com o Curso T´ecnico em Programa¸c˜ao de Jogos Digitais, da Escola Estadual

H´ercules Maymone em Campo Grande, escolhidos estrategicamente por terem familiari-

dade e pr´e-requisitos sobre programa¸c˜ao de computadores.

2

Cap´ıtulo 1

Coordenadas no Plano

Neste cap´ıtulo, ser´a apresentado um resumo b´asico de conceitos que ser˜ao utilizados

na constru¸c˜ao de ﬁguras planas com o uso do METAPOST. As principais referˆencias

bibliogr´aﬁcas utilizadas neste cap´ıtulo s˜ao LIMA [9] e MUNIZ NETO [1].

1.1 Coordenadas Cartesianas

Indicamos por R2 o conjunto formado pelos pares ordenados (x, y), onde x e y s˜ao

n´umeros reais. Assim

R2 = {(x, y) | x, y ∈ R}

Dados (x1, y1) e (x2, y2) em R2, temos que (x1, y1) = (x2, y2) se, e somente se, x1 = x2

e y1 = y2. Por exemplo, (3, 2) (cid:54)= (2, 3).

1.1.1 Coordenadas na Reta

Um eixo ´e uma reta na qual se ﬁxou um ponto O, chamado a origem, e na qual se

escolheu um sentido de percurso chamado positivo, sendo que o sentido inverso ´e dito ne-

gativo. Num eixo, dizemos que o ponto B est´a `a direita do ponto A, ou equivalentemente,

o ponto A est´a `a esquerda do ponto B, quando o percurso de A para B na reta ´e positivo.

Todo eixo r pode ser posto, de modo natural, em correspondˆencia com o conjunto R
dos n´umeros reais. `A origem do eixo corresponde o n´umero real zero. A cada ponto X de

r `a direita de O corresponde um n´umero real positivo x, o qual ´e a distˆancia d(O, X) de

O `a X. Aos pontos situados `a esquerda de O correspondem os n´umeros negativos, cujos

3

CAP´ITULO 1. COORDENADAS NO PLANO

valores absolutos s˜ao as distˆancias desses pontos `a origem.

Assim, a cada ponto X do eixo r corresponde o n´umero real x tal que, x = d(O, X)

se X est´a `a direita da origem O e x = −d(O, X) se X est´a `a esquerda de O. O n´umero

real x ´e denominado a coordenada do ponto X do eixo r.

1.1.2 Coordenadas no Plano

Um sistema de eixos ortogonais num plano α ´e um par de eixos, representados por

OX e OY , do plano α, que s˜ao perpendiculares e tˆem a mesma origem O. Dizemos que

o eixo OX ´e horizontal e o eixo OY ´e vertical.

Um plano α com um sistema de eixos ortogonais est´a, de modo natural, em corres-

pondˆencia biun´ıvoca com R2, o conjunto de pares ordenados de n´umeros reais. A cada

ponto P do plano, baixamos por ele retas paralelas aos eixos OX e OY , conforme Figura

1.1. Essas retas cortam os eixos em pontos cujas coordenadas s˜ao x e y respectivamente.

Ao ponto P ∈ α corresponde o par ordenado (x, y) ∈ R2. Reciprocamente, a cada par or-

denado (x, y) ∈ R2 corresponde o ponto P ∈ α, interse¸c˜ao da reta paralela a OY tra¸cada

pelo ponto de coordenada x do eixo OX, com a reta paralela a OX tra¸cada a partir do

ponto de OY de coordenada y.

Observamos que, dados dois eixos concorrentes quaisquer, o procedimento descrito

acima estabelece uma correspondˆencia biun´ıvoca entre pontos do plano e pares ordenados

de n´umeros reais. Neste trabalho utilizaremos sempre eixos ortogonais.

Os n´umeros x e y do par (x, y) associado ao ponto P do plano s˜ao chamados de

coordenadas do ponto P, onde denominaremos x de abscissa e y de ordenada.

Se um ponto P do plano corresponde a (x, y) ∈ R2 , escrevemos P = (x, y).

Y

y

P

O

x

X

Figura 1.1: Sistema de eixos ortogonais

4

CAP´ITULO 1. COORDENADAS NO PLANO

Exemplo 1 O par ordenado A=(1,3) est´a associado ao ponto A do plano cartesiano,

onde 1 ´e a abscissa e 3 ´e a ordenada, conforme Figura 1.2.

Y
Y
Y
Y
Y

3

A=(1,3)

0
0
0
0
0

1

X
X
X
X
X

Figura 1.2: Representa¸c˜ao do ponto A, de coordenadas (1, 3)

Exemplo 2 Representa¸c˜ao dos pares ordenados (1, y), onde y ´e um n´umero real. Estes

pares s˜ao descritos pela equa¸c˜ao x = 1, conforme Figura 1.3.

y

O

1

x

Figura 1.3: Gr´aﬁco da reta vertical x = 1.

Exemplo 3 Representa¸c˜ao dos pares ordenados (x, 3), onde x ´e um n´umero real. Estes

pares s˜ao descritos pela equa¸c˜ao y = 3, conforme Figura 1.4.

5

CAP´ITULO 1. COORDENADAS NO PLANO

y

3

O

x

Figura 1.4: Gr´aﬁco da reta horizontal y = 3.

Exemplo 4 Representa¸c˜ao dos pares ordenados (x, 2x), onde x ´e um n´umero real. Estes

pares s˜ao descritos pela equa¸c˜ao y = 2x, conforme Figura 1.5.

y

4

(2, 4)

1

(1/2, 1)

−1

O

1/2

2

x

(−1, −2)

−2

Figura 1.5: Gr´aﬁco da reta y = 2x.

1.1.3 Distˆancia entre dois pontos

Considere dois pontos no plano P1 = (x1, y1) e P2 = (x2, y2). A distˆancia, d, entre P1

e P2 ´e mostrada na Figura 1.6 e dada pela seguinte f´ormula:

d = (cid:112)(x2 − x1)2 + (y2 − y1)2

6

CAP´ITULO 1. COORDENADAS NO PLANO

y

y2

y1

O

(x2, y2)

d

(x1, y1)

x1

x2

x

Figura 1.6: Distˆancia entre os pontos P1 = (x1, y1) e P2 = (x2, y2).

Exemplo 5 A distˆancia entre os pontos C e D, de coordenadas (-2,3) e (2,1) ´e igual a
√
2

5, conforme calculado a seguir e mostrado na Figura 1.7.

d(C, D) = (cid:112)(xd − xc)2 + (yd − yc)2

d(C, D) = (cid:112)(2 − (−2))2 + (1 − 3)2

d(C, D) =

√

16 + 4

d(C, D) =

√

20

d(C, D) = 2

√

5

y
y
y
y
y

C=(-2,3)

3

d(C,D)=

√

2

1

0
0
0
0
0

-2

5

D=(2,1)

2

x
x
x
x
x

Figura 1.7: Distˆancia entre os pontos C=(-2,3) e D=(2,1) do plano

7

CAP´ITULO 1. COORDENADAS NO PLANO

1.1.4 Ponto m´edio de um segmento

Dado um segmento de reta P Q, um ponto M pertencente a esse segmento ´e ponto

m´edio de P Q se a distˆancia de P `a M ´e igual `a distˆancia de Q `a M, ou seja, se d(P, M ) =
d(Q, M ), conforme Figura 1.8. Temos que, se P = (xp, yp) e Q = (xq, yq) do plano R2, as

coordenadas de M, ponto m´edio de P Q s˜ao dadas por M =

seja M = (xm, ym), segue que

(cid:18) xp + xq
2

,

yp + yq
2

(cid:19)

. De fato,

d(P, M )2 = (xm − xp)2 + (ym − yp)2 =

(cid:18) xp + xq
2

(cid:19)2

− xp

+

(cid:18) yp + yq
2

(cid:19)2

− yp

=

=

(cid:18) xq − xp
2

(cid:19)2

+

(cid:18) yq − yp
2

(cid:19)2

,

d(Q, M )2 = (xq − xm)2 + (yq − ym)2 =

(cid:18) xp + xq
2

(cid:19)2

− xq

+

(cid:18) yp + yq
2

(cid:19)2

− yq

=

=

(cid:18) xp − xq
2

(cid:19)2

+

(cid:18) yp − yq
2

(cid:19)2

e

d(P, M ) + d(Q, M ) = 2

(cid:114)

(xp − xq)2 + (yp − yq)2
4

=

(cid:113)

(xp − xq)2 + (yp − yq)2 = d(P, Q)

Portanto, d(P, M ) = d(Q, M ) e d(P, M ) + d(Q, M ) = d(P, Q).

y

yq

ym

yp

Q

M

P

xp

xm

xq

x

Figura 1.8: M = (xm, ym) ´e o ponto m´edio do segmento P Q, pois d(P, M ) = d(Q, M )

8

CAP´ITULO 1. COORDENADAS NO PLANO

Exemplo 6 O ponto m´edio do segmento AB, de coordenadas A=(-2,1) e B=(4,-3) ´e o

ponto M=(1,-1), conforme mostra a Figura 1.9.

A=(-2,1)

-2

1

0
0
0
0
0

1

M=(1,-1)

y
y
y
y
y

-1

-3

4

x
x
x
x
x

B=(4,-3)

Figura 1.9: O ponto m´edio M=(1,-1) do segmento AB

1.2 Equa¸c˜oes e gr´aﬁcos

1.2.1 Equa¸c˜ao da reta

Consideremos dois pontos distintos de uma reta r, P = (x1, y1) e Q = (x2, y2).

(1) Se x1 = x2, a reta ´e vertical, descrita pela equa¸c˜ao x = x1.

(2) Se x1 (cid:54)= x2, a reta ´e descrita pela equa¸c˜ao y = mx + n, onde

m =

y2 − y1
x2 − x1

e n = y1 − mx1

O n´umero m da equa¸c˜ao y = mx + n ´e denominado declive, coeﬁciente angular ou

inclina¸c˜ao da reta.

De um modo geral, a equa¸c˜ao de uma reta ´e dada por ax + by + c = 0 onde a, b e c

s˜ao constantes reais.

Exemplo 7 Considere a equa¸c˜ao ax + by + c = 0,

com a = 0, b = 1 e c = −1:

0 + y − 1 = 0 ⇐⇒ y = 1 (reta horizontal)

9

CAP´ITULO 1. COORDENADAS NO PLANO

Exemplo 8 Considere a equa¸c˜ao ax + by + c = 0,

com a = 1, b = 0 e c = −1:

x − 1 = 0 ⇐⇒ x = 1 (reta vertical)

Exemplo 9 Considere a equa¸c˜ao ax + by + c = 0,

com a = −2, b = 1 e c = −1:

−2x + y − 1 = 0 ⇐⇒ y = 2x + 1 (inclina¸c˜ao m = 2)

Exemplo 10 Na Figura 1.10 ´e representada a reta r, que passa pelos pontos A=(-2,-1)

e B=(2,3), cuja equa¸c˜ao ´e dada por x − y + 1 = 0).

y
y
y
y
y
y

3

reta r

B

-2

A

2

x
x
x
x
x
x

0
0
0
0
0
0

-1

Figura 1.10: Representa¸c˜ao da reta r que passa pelos pontos A=(2,-1) e B=(3,2)

1.2.2 Intersec¸c˜ao entre retas no plano

Dadas duas retas concorrentes do plano R2, o ponto de encontro entre essas retas ´e

chamado ponto de intersec¸c˜ao entre elas.

Deste modo, dadas as equa¸c˜oes de duas retas concorrentes, n˜ao verticais, no plano

R2, ´e poss´ıvel obter as coordenadas do ponto de intersec¸c˜ao entre elas. Assim, sendo

r : y = a.x + b e s : y = m.x + n as equa¸c˜oes reduzidas das retas concorrentes r e s,

pode-se obter a abscissa e a ordenada do ponto de intersec¸c˜ao I entre elas, resolvendo o

sistema linear




y = a.x + b



y = m.x + n

10

CAP´ITULO 1. COORDENADAS NO PLANO

Exemplo 11 Na Figura 1.11 s˜ao representadas as retas r e s, cujas equa¸c˜oes reduzidas

s˜ao dadas por r : y = x + 1 e s : y = −x + 3 e que se encontram no ponto I=(1,2). De

fato, resolvendo o sistema,

temos:




y = x + 1



y = −x + 3

,

x + 1 = −x + 3

2x = 2

x = 1

Substituindo x = 1 em qualquer das duas equa¸c˜oes segue que I = (1, 2).

reta s

y
y
y
y
y
y

2

0
0
0
0
0
0

I

1

reta r

x
x
x
x
x
x

Figura 1.11: Intersec¸c˜ao I=(1,2) entre as retas r e s.

O METAPOST ´e capaz de encontrar pontos de intersec¸c˜ao entre duas curvas e marc´a-lo,

conforme c´odigo exposto na Figura 3.18.

1.3 Equa¸c˜ao da circunferˆencia

Uma circunferˆencia qualquer ´e caracterizada por seu raio e seu centro. A circunferˆencia

de raio r e centro no ponto (a, b) ´e o conjunto de pontos (x, y), cuja distˆancia a (a, b) ´e

igual a r. Usando a f´ormula da distˆancia temos,

(x − a)2 + (y − b)2 = r2 ⇐⇒ x2 + y2 − 2ax − 2by + a2 + b2 − r2 = 0

11

CAP´ITULO 1. COORDENADAS NO PLANO

Exemplo 12 Equa¸c˜ao da circunferˆencia de centro (2, −3) e raio 4:

(x − 2)2 + (x + 3)2 = 16 ⇐⇒ x2 + y2 − 4x + 6y − 3 = 0

Exemplo 13 Veriﬁque se a equa¸c˜ao x2 + y2 − 6x − 8y + 24 = 0 representa uma circun-

ferˆencia. Em caso aﬁrmativo, determine seus raio e centro.

solu¸c˜ao:

Comparando a equa¸c˜ao dada, com a equa¸c˜ao geral de uma circunferˆencia:

Da´ı,

x2 + y2 − 2ax − 2by + a2 + b2 − r2 = 0

x2 + y2 −6
(cid:124)(cid:123)(cid:122)(cid:125)
−2a

x −8
(cid:124)(cid:123)(cid:122)(cid:125)
−2b

y + 24
(cid:124)(cid:123)(cid:122)(cid:125)
a2+b2−r2

= 0





−2a = −6,

−2b = −8,

a2 + b2 − r2 = 24

Obtemos assim, a = 3, b = 4 e 9 + 16 − r2 = 24, donde r2 = 1. Portanto, temos uma

circunferˆencia de raio 1 e centro (3, 4).

Exemplo 14 A equa¸c˜ao x2 + y2 − 4x − 2y + 6 = 0 n˜ao representa uma circunferˆencia.

De fato, comparando com a equa¸c˜ao geral:





−2a = −4,

−2b = −2,

a2 + b2 − r2 = 6

Da´ı, a = 2, b = 1 e 4 + 1 − r2 = 6, donde r2 = −1, o que n˜ao ´e poss´ıvel. Observe

que x2 + y2 − 4x − 2y + 6 = 0 ⇐⇒ (x − 2)2 + (y − 1)2 = −1. Portanto a equa¸c˜ao

x2 + y2 − 4x − 2y + 6 = 0 n˜ao tem solu¸c˜ao.

12

CAP´ITULO 1. COORDENADAS NO PLANO

Exemplo 15 Na Figura 1.12 ´e representada a circunferˆencia λ de centro C=(1,2) e raio

r igual a 2, cuja equa¸c˜ao ´e dada por (x − 1)2 + (y − 2)2 = 4.

y
y
y
y
y

2

r=2

C

O
O
O
O
O

1

x
x
x
x
x

Figura 1.12: Representa¸c˜ao da circunferˆencia λ de centro C=(1,2) e raio r igual a 2

13

Cap´ıtulo 2

Comandos b´asicos do METAPOST

Neste cap´ıtulo, estudaremos os comandos b´asicos do METAPOST, a ﬁm de produzir

ﬁguras b´asicas da geometria plana. Referˆencias bibliogr´aﬁcas: VICENTE [8], CANDIA

[7] e HOBBY [3].

2.1 Marcando pontos no plano

Para fazer um desenho, o METAPOST utiliza comandos do tipo draw. Por exemplo,

para desenhar o ponto (1,2) utilizamos o comando

drawdot (1,2);

2.2 Unidades de medida

Se nenhuma unidade de medida for indicada, o METAPOST interpreta como sendo

um bp, que ´e a sigla de “bit points”, sendo equivalente a uma unidade padr˜ao de pontos

PostScripts, cuja medida equivale a

de uma polegada.

1
72

O METAPOST possui unidades cl´assicas de medidas, conforme Tabela 2.1, algumas

bem conhecidas como cm para cent´ımetros, in para polegadas e mm para mil´ımetros.

14

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

Unidade de Medida

Sigla

Convers˜ao

pontos de impress~ao

big points

polegadas

paicas

pt

bp

in

pc

0,035145 cm

0,035278 cm

2,54 cm

0,423333 cm

mil´ımetros

mm

0,1 cm

c´ıceros

pontos Didot

cc

dd

0,451167 cm

0,0376 cm

Tabela 2.1: Tabela de convers˜ao das unidades de medida utilizadas no METAPOST

Pode-se estabelecer uma unidade, indicada por u, para servir de padr˜ao em nosso

desenho. Dessa forma ´e poss´ıvel atribuir um valor para u e deﬁnir as coordenadas dos

pontos em fun¸c˜ao de u. Por exemplo, para estabelecer uma unidade u com 2 cm, utiliza-se

antes o comando

e depois

u=2cm;

draw (2u,u);

gerando um ponto de coordenadas (4cm, 2cm).

2.3 Largura de linhas

No METAPOST ´e poss´ıvel mudar a largura de linhas utilizadas para desenhar seg-

mentos, pontos ou fontes. Diversos comandos s˜ao utilizados para esse ﬁm. Um deles ´e o

pencircle que se refere ao formato da “caneta” utilizada para tra¸car linhas no desenho

que, juntamente com o comando scaled, que diz a largura do tra¸cado. Sendo assim, o

comando

pickup pencircle scaled 0.5mm;

indica que, a partir dele, a ponta da caneta ter´a a forma circular e a largura das linhas

desenhadas ser´a de 0.5mm. Assim, a Figura 2.1 mostra diferentes larguras de tra¸cados.

15

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

scaled 0.5mm

scaled 1mm

scaled 1.5mm

Figura 2.1: Tra¸cados de diferentes larguras.

O comando scaled ´e usado para deﬁnir o tamanho do tra¸cado e pode ser aplicado

juntamente com v´arios comandos como o draw, o label entre outros.

2.4 Constru¸c˜ao de segmentos

Para desenhar segmentos de reta, deve-se utilizar o comando draw seguido das coor-

denadas das extremidades do segmento separadas por --. Para desenhar o segmento da

Figura 2.2, ´e utilizado o seguinte c´odigo:

draw (0,0)--(2cm,1cm);

Quando o sistema de eixos ortogonais n˜ao ´e estabelecido previamente, o METAPOST

usualmente deﬁne um sistema de eixos ortogonais padr˜ao em que a origem se encontra no

canto inferior esquerdo da ﬁgura.

Figura 2.2: Segmento de reta de extremidades (0,0) e (2,1)

´E poss´ıvel obter linhas tracejadas ou pontilhadas, utilizando o comando dashed da

seguinte maneira

draw <figura> dashed <tipo de linha> scaled <tamanho>;

onde <figura> se refere ao desenho a ser feito e <tipo de linha> ao tipo de tra¸co

utilizado, podendo ser evenly para tracejado e withdots para pontilhados.

16

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

scaled 2

scaled 4

scaled 1

scaled 0.5

Figura 2.3: Tipos de tra¸cos

onde o termo scaled dentro do comando dashed deﬁne o espa¸camento entre os tra¸cos

ou pontos das linhas, conforme Figura 2.3.

2.5 Constru¸c˜ao de pol´ıgonos

Para desenhar pol´ıgonos, basta lembrar que os mesmos s˜ao formados por segmentos de

reta ligados pela origem de um e a extremidade de outro, deve-se utilizar o comando draw

seguido das coordenadas das extremidades do segmento separadas por --. Para desenhar

o pol´ıgono da Figura 2.4, utiliza-se o seguinte comando:

draw (0,0)--(3cm,o)--(2cm, 2cm)--(0,3cm);

Figura 2.4: Pol´ıgono fechado

2.6 Constru¸c˜ao de circunferˆencias

Para desenhar uma circunferˆencia de centro na origem e diˆametro u usamos o comando

draw fullcircle scaled u;, conforme Figura 2.5.

u:=1cm;
draw fullcircle scaled u;
drawdot origin;

Figura 2.5: Circunferˆencia de centro na origem e diˆametro u

17

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

2.7 R´otulos

Para integrar textos com ﬁguras, permitindo indicar nomes para as mesmas ´e poss´ıvel

utilizar r´otulos, com os comandos label e dotlabel. O comando label ´e utilizado para

rotular ﬁguras no desenho, por outro lado, o comando dotlabel ´e espec´ıﬁco para marcar

pontos dados por suas coordenadas.

A utiliza¸c˜ao desse comando ´e feita da seguinte maneira:

label.<sufixo> (<nome do r´otulo>, <posi¸c~ao>);

O termo <sufixo> se refere `a posi¸c˜ao em que o r´otulo ser´a colocado na ﬁgura. Estes

suﬁxos s˜ao dispostos conforme Figura 2.6.

.ulft

.top

.urt

.lft

.rt

.llft

.bot

.lrt

Figura 2.6: Suﬁxos usados no comando label

Se a posi¸c˜ao do r´otulo n˜ao for especiﬁcada, o mesmo ser´a centralizado

J´a o termo <nome do r´otulo> representa ao texto que dever´a ser escrito no r´otulo. Se

posto entre aspas duplas, o texto mostrado no r´otulo ser´a “idˆentico” ao texto escrito. Por

outro lado, podemos utilizar o comando btex <texto do r´otulo> etex , onde o termo

<texto do r´otulo> poder´a ser uma instru¸c˜ao escrita no ambiente matem´atico do TEX,
possibilitando assim, escrever express˜oes matem´aticas nos r´otulos.

Por exemplo, para dar nomes aos pontos que s˜ao os extremos de um segmento, cujas

coordenadas s˜ao (0, 0) e (2, 1), utilizamos os comandos

Note que o r´otulo k na Figura 2.7, que d´a o nome do segmento AB foi posicionado no

ponto m´edio de A e B.

18

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

u=2cm;
pickup pencircle scaled 0.5mm;
draw (0,0)--(2u,u);
label.lft("A", origin);
label.rt("B", (2u,u));
label.ulft("k", (u,u/2));

A

B

k

Figura 2.7: R´otulos nos extremos do segmento AB de medida k

2.8 Setas

´E muito importante o uso de setas para o esbo¸co de alguns desenhos como eixos em
gr´aﬁcos e vetores. No METAPOST, podemos usar os comandos drawarrow e drawdblarrow

para esse ﬁm, para caminhos retil´ıneos e curvos. O comando drawarrow coloca uma seta

numa extremidade do segmento especiﬁcado, enquanto drawdblarrow coloca setas nas

duas extremidades. Por exemplo, o comando

drawarrow origin--(3cm, 2cm);

desenha uma seta com origem no ponto (0, 0) e extremidade no ponto (3, 2), como indica

a Figura 2.8.

Figura 2.8: Seta com extremidade em uma ponta

O comando drawdblarrow coloca setas nas duas extremidades, como indica a Figura

2.9.

Figura 2.9: Seta com extremidade nas duas pontas

Dessa forma, podemos criar os eixos coordenados, formando o plano cartesiano, como

na Figura 2.10.

19

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

Y

O

X

Figura 2.10: Sistema de eixos ortogonais formando o plano cartesiano

2.9 Tipos de dados

Os tipos de dados s˜ao usados para armazenar informa¸c˜oes como medidas, partes de

ﬁguras, partes de c´odigos, entre outros, a ﬁm de utiliz´a-las em algum momento da pro-

grama¸c˜ao. No METAPOSTexistem dez tipos de dados usados para armazenar informa¸c˜oes,

como mostra a Tabela 2.2.

Tipo de dado

Utiliza¸c˜ao

numeric

armazenar vari´aveis num´ericas

pair

path

transform

rgbcolor

cmykcolor

armazenar pares ordenados

armazenar caminhos entre pontos

armazenar transforma¸c˜oes

armazenar cores rgb

armazenar cores cmyk

string

armazenar uma cadeia de caracteres

boolean

picture

pen

armazenar n´umeros boleanos

armazenar ﬁguras

armazenar tipo de caneta

Tabela 2.2: Tipos de dados utilizados no METAPOST

Para representar o nome de uma vari´avel, utilizamos qualquer combina¸c˜ao de carac-

teres simples, podendo ser min´usculos ou mai´usculos. Para declarar o tipo de dado de

uma vari´avel, basta digitar o tipo de dado seguido do nome da vari´avel e um sinal “;”.

20

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

Podemos declarar uma fam´ılia de vari´aveis, utilizando colchetes ap´os o nome da vari´avel,

como veremos mais adiante.

A seguir ser˜ao apresentados alguns tipos de dados (os principais a serem utilizados

neste trabalho), como declar´a-lo e como utiliz´a-lo.

2.9.1 Dados tipo numeric

O tipo numeric ´e utilizado para armazenar vari´aveis num´ericas. Com o comando

numeric var;

declaramos uma vari´avel num´erica cujo nome ´e var. Para atribuir um n´umero (valor) `a

vari´avel var, por exemplo o n´umero 3 cm procedemos da seguinte maneira:

var:= 3cm;

2.9.2 Dados tipo pair

O tipo pair ´e utilizado para armazenar pares ordenados de n´umeros do tipo numeric

numa vari´avel. O c´odigo

pair A;

A:=(1cm,2cm);

associa o par (1cm,2cm) `a vari´avel A.
O METAPOST usa a mesma estrutura matem´atica (x, y) para deﬁnir esses pares, onde

x ´e a abscissa e y ´e a ordenada de um ponto P do plano cartesiano. Assim, quando se

deﬁne P:=(2cm, 3cm);, o METAPOST gera automaticamente duas vari´aveis num´ericas
xpart P e ypart P, respectivamente, valendo 2 cm e 3 cm. ´E intr´ınseco ao METAPOST

que toda vari´avel da forma z<´ındice> ´e do tipo pair, e isso s´o ´e v´alido utilizando a letra

z. Por exemplo, a Figura 2.11 mostra o segmento z1z2.

21

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

z1=(1cm,2cm);
z2=(4cm,1cm);
draw z1..z2;
dotlabel.llft("z1", (1cm,2cm));
dotlabel.lrt("z2", (4cm,1cm));

z1

z2

Figura 2.11: Segmento z1z2

Para usar outra letra com ´ındices para representar pares, como, por exemplo, X1,

X2, X3, e assim por diante, deve-se declarar essa vari´aveis com o comando pair X[],

que deﬁne qualquer vari´avel do tipo X[<´ındice>] ou X<´ındice> como sendo um par

ordenado.

2.9.3 Dados tipo path

O tipo path ´e utilizado para armazenar caminhos entre pontos, circunferˆencias entres

outras ﬁguras. Os caminhos entre pontos podem ser agrupado de duas maneiras, como o

comando “–”, gerando um segmento de reta, e com o comando “..”, gerando uma curva

entre um par de pontos.

Para usar o comando “..”, ´e poss´ıvel determinar uma dire¸c˜ao angular para um caminho

num determinado ponto, por exemplo, de sa´ıda de um ponto e de chegada em outro ponto.

Nesse procedimento, utiliza-se o comando dir θ, onde θ ´e um ˆangulo medido em graus.

Na Figura 2.12 temos um exemplo de como utilizar esse comando.

B

pair A, B;path m;
A:=origin;B:=(3cm, 4cm);
dotlabel.lrt("A", origin);
dotlabel.lft("B", (3cm,4cm));
m:=A{dir 135}..B{dir 180};
draw m;

Figura 2.12: Curva ligando A e B, modiﬁcadas as dire¸c˜oes de sa´ıda e de chegada e
armazenadas numa vari´avel m, tipo path.

A

Se declaramos uma vari´avel do tipo path usando a nota¸c˜ao, por exemplo, q[ ], cria-se

um grupo de vari´aveis, podendo armazenar caminhos nas vari´aveis indexadas q[1], q[2],

q[3],e assim por diante.

22

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

2.9.4 Dados tipo picture

O tipo picture ´e utilizado para armazenar ﬁguras. Para esse ﬁm, ´e necess´ario declarar

uma vari´avel currentpicture. Essa vari´avel armazena a ﬁgura atual que foi desenhada

com os comandos fill, draw e filldraw, seus respetivos comandos de desfazer as a¸c˜oes

unfill, undraw e unfilldraw. Esse comando ´e mais ´util para desenhos mais complexos.

Os comandos fill e filldraw ser˜ao vistos mais adiante na Se¸c˜ao 2.10.

2.9.5 Dados tipo transform

O tipo transform ´e utilizado para realizamos altera¸c˜oes em ﬁguras como transla¸c˜oes,

rota¸c˜oes e dimensionamento. Esse comando guarda uma transforma¸c˜ao em uma ´unica

vari´avel a ﬁm de ser utilizada posteriormente. O comando transform pode ser aplicado

a pontos e tamb´em a caminhos deﬁnidos usando o comando path. Mais detalhes sobre

como utilizar o comando transform ser´a apresenta no Cap´ıtulo 4.

Os tipos da dados pen, boolean e string n˜ao ser˜ao utilizados no desenvolvimento

deste trabalho, desta forma n˜ao ser˜ao estudados aqui.

2.10 Utiliza¸c˜ao de cores em ﬁguras

Pode-se preencher, com cores, regi˜oes fechadas, de ﬁguras deﬁnidas no METAPOST.

O comando utilizado para essa ﬁnalidade ´e o fill e, ´e aplicado para caminhos e curvas

fechadas cujo c´odigo termina com o comando cycle. A seguir, apresentamos exemplos
de como desenhar caminhos fechados com o METAPOST.

Exemplo 16 Sem utiliza¸c˜ao do comando cycle no ﬁnal, conforme Figura 2.13.

u:= 1 cm;
draw origin--(3u, 0)--(4u, 2u)--(u,u)--origin;
dotlabel.llft("O", origin);
label.bot("A", (3u, 0));
label.rt("B", (4u, 2u));
label.ulft("C", (u, u));

B

C

O

A

Figura 2.13: Caminho fechado formando o pol´ıgono OABC

23

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

Exemplo 17 Com utiliza¸c˜ao do comando cycle no ﬁnal, conforme Figura 2.14.

u:= 1 cm;
draw origin--(3u, 0)--(4u, 2u)--(u,u)--cycle;
dotlabel.llft("O", origin);
label.bot("A", (3u, 0));
label.rt("B", (4u, 2u));
label.ulft("C", (u, u));

C

O

A

Figura 2.14: Caminho fechado usando cycle, formando o pol´ıgono OABC

Exemplo 18 Com utiliza¸c˜ao do comando cycle no ﬁnal.

u:= 1 cm;
draw origin--(3u, 0)--(4u, 2u)--(u,u)--cycle;
dotlabel.llft("O", origin);
label.bot("A", (3u, 0));
label.rt("B", (4u, 2u));
label.ulft("C", (u, u));

C

O

A

Figura 2.15: Caminho fechado usando cycle, formando o pol´ıgono OABC

B

B

O comando para preenchimento fill ´e usado pelo METAPOSTem caminhos fechados,

cujos comandos possuem cycle no ﬁnal, como nos comandos mostrados nas Figuras 2.14

e 2.15. Para preencher o desenho da Figura 2.15 com a cor azul, procede-se conforme a

ﬁgura 2.16.

u:= 1 cm;
fill origin..(3u, 0)..(4u, 2u)..(2u,0.5u)..cycle withcolor blue;
draw origin..(3u, 0)..(4u, 2u)..(2u,0.5u)..cycle;
dotlabel.llft("O", origin);
dotlabel.bot("A", (3u, 0));
dotlabel.rt("B", (4u, 2u));
dotlabel.ulft("C", (2u, 0.5u));

B

C

O

A

Figura 2.16: Caminho fechado usando cycle, formando o pol´ıgono OABC

O METAPOST trabalha de acordo com a ordem das linhas de comando. Assim, se

o comando fill for colocado depois dos comandos draw e dotlabel, por exemplo, o

preenchimento ﬁcar´a sobreposto ao contorno da ﬁgura.

24

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

No c´odigo da Figura 2.16 aparece o comando withcolor que serve para selecionar a

cor utilizada no preenchimento da ﬁgura. Ap´os o comando withcolor dever´a aparecer o
nome da cor escolhida, em inglˆes. O METAPOST possui as seguintes cores pr´e-deﬁnidas:

white, para branco; black, para preto; red, para vermelho; green, para verde; blue,

para azul; yellow, para amarelo; magenta, para magenta; e cyan para ciano.

Para colorir linhas, ao ﬁnal do comando draw, acrescenta-se withcolor <cor>, con-

forme Figura 2.17.

Pode-se utilizar outras cores, al´em das pr´e-deﬁnidas pelo METAPOST, do sistema de

cores RGB e CMYK. Tais cores n˜ao ser˜ao usadas neste trabalho, portanto n˜ao ser˜ao

estudadas.

u:= 1cm;
drawarrow ((0, 5u)--(5u, 5u)) withcolor red;
draw (0,4u)--(5u,4u) dashed evenly withcolor green;
label.rt("label", (0, 3u)) withcolor blue;
draw (0,2u)..(u,u)..{dir -60}(4u, 2u) withcolor 0.7white;

label

Figura 2.17: Utiliza¸c˜ao de cores em linhas

2.11 Operadores matem´aticos

No METAPOST, existem alguns operadores matem´aticos que s˜ao muito ´uteis no de-

senvolvimento de ﬁguras. Para as opera¸c˜oes de adi¸c˜ao, subtra¸c˜ao, multiplica¸c˜ao e divis˜ao,

s˜ao utilizados, respectivamente, +, -, * e /. Em potˆencias, utiliza-se 3**2 para representar

a potˆencia 32.

Lembrando que o METAPOST entende as opera¸c˜oes na ordem em que aparecem os

operadores, assim ´e necess´ario o uso dos parˆenteses. Ao digitar a sequˆencia 3*x**2, o
METAPOST entende a express˜ao (3x)2, e n˜ao 3x2. Se quiser a segunda op¸c˜ao, se deve

digitar 3*(x**2).

Outros operadores importantes s˜ao abs x para representar |x| (m´odulo de x), sqrt x

25

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

que representa

√

diana de a por b.

x (raiz quadrada de x) e a mod b que signiﬁca o resto da divis˜ao eucli-

Utilizando os comandos sind x e cosd x, s˜ao retornados, respectivamente os valores

de seno e cosseno de um ˆangulo x em graus, importantes para c´alculos trigonom´etricos.

Existem muitos outros operadores interpretados pelo METAPOST que n˜ao est˜ao cita-

dos, como os operadores l´ogicos, entre outros. Mais detalhes sobre esses operadores pode

ser encontrado em Hobby [13].

2.12 La¸co for

Em toda linguagem de programa¸c˜ao existem os “la¸cos”(loopings em inglˆes) que s˜ao

estruturas de repeti¸c˜ao. As estruturas de repeti¸c˜ao executam a repeti¸c˜ao de um conjunto

de instru¸c˜oes enquanto uma determinada condi¸c˜ao ´e verdadeira.

No METAPOST o la¸co mais utilizado ´e o for, cuja estrutura ´e dada conforme a seguir:

for <contador> = <valor inicial> step <intervalol> until <valor final> :
<texto do la¸co>
endfor

Assim, um loop (la¸co) come¸cando para i = <valor inicial> step <intervalo> until

<valor final> varre uma sequˆencia de valores i iguais a: a, a + b, a + 2b,... , onde

a=<valor inicial> e b=<intervalo>, parando quando i assumir <valor final>.

Exemplo 19 Para montar uma grade de pontos no plano com 4 linhas e 4 colunas,

fazemos como na ﬁgura 2.18:

u:=1cm;
pickup pencircle scaled 3bp;
for i=0 step 1 until 3:
for j=0 step 1 until 3:
drawdot (i*u,j*u);
endfor
endfor

Figura 2.18: Grade de pontos com 4 linhas e 4 colunas.

26

CAP´ITULO 2. COMANDOS B ´ASICOS DO METAPOST

Exemplo 20 Na ﬁgura 2.19, temos o plano cartesiano com grade tracejadas.

u:= 1 cm;
for i=-3u step u until 3u:
draw (i,-3u)--(i,3u) dashed evenly;
draw (-3u,i)--(3u,i) dashed evenly;
drawarrow ((-3u, 0)--(3u, 0));
drawarrow ((0, -3u)--(0, 3u));
label.rt("x", (3u, 0));
label.top("y", (0, 3u));
label.llft("O", (0, 0));
endfor;

y
y
y
y
y
y
y

O
O
O
O
O
O
O

x
x
x
x
x
x
x

Figura 2.19: Plano cartesiano com grade tracejada.

Exemplo 21 Neste caso, temos na ﬁgura 2.20 a seguir, um modelo de escada composta

por segmentos horizontais.

u:=2cm;
pickup pencircle scaled 3bp;
for i=0 step 1 until 3:
for j=0 step 1 until 3:
drawdot (i*u,j*u);
endfor
endfor

Figura 2.20: Escada formada por segmentos horizontais.

27

Cap´ıtulo 3

Fun¸c˜oes e Gr´aﬁcos

Neste cap´ıtulo, ser˜ao estudados os comandos do METAPOSTque possibilitam cons-

truir gr´aﬁcos de fun¸c˜oes reais cont´ınuas no plano cartesiano. Inicialmente, s˜ao abordadas

no¸c˜oes sobre fun¸c˜oes reais e, a seguir, s˜ao apresentados os principais comandos do META-

POST, utilizados na elabora¸c˜ao das fun¸c˜oes aﬁns e quadr´aticas. Referˆencias bibliogr´aﬁcas:

DELGADO [1], MUNIZ NETO [4] e HOBBY [13].

3.1 Fun¸c˜oes

Deﬁni¸c˜ao 1 Dados os conjuntos A, B, uma fun¸c˜ao f : A → B ´e uma regra que diz como

associar a cada elemento x ∈ A um elemento y ∈ B. O conjunto A chama-se o dom´ınio

e B o contra-dom´ınio da fun¸c˜ao f . Para cada x ∈ A, o elemento y ∈ B, associado a x,

´e denotado por y = f (x) e ´e denominado a imagem de x pela fun¸c˜ao f . Dizemos que x

´e uma vari´avel independente e y = f (x) uma var´avel dependente. A nota¸c˜ao x → f (x)

indica que, f transforma ( ou leva) x em f (x).

Observa¸c˜ao: Em muitos exemplos de fun¸c˜oes f : A → B, A e B s˜ao conjuntos

num´ericos e a regra x → f (x) ´e dada por uma f´ormula. Em geral, n˜ao precisa ser assim.

A regra que estabelece como obter f (x) quando ´e dado x ´e inteiramente arbitr´aria, sendo

sujeita a duas condi¸c˜oes:

• a regra deve dizer quem ´e f (x), para todo x ∈ A dado.

• n˜ao pode haver ambiguidades: a cada x ∈ A, a regra deve fazer corresponder um ´unico

f (x) em B.

28

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

Exemplo 22 Considere a fun¸c˜ao f : R → R, deﬁnida por f (x) = 2x + 1. Neste caso, o

dom´ınio ´e o conjunto dos n´umeros reais e para cada x ∈ R o valor de f (x) ∈ R est´a bem

deﬁnido. Por exemplo, f (20) = 41.

Exemplo 23 Considere a fun¸c˜ao f : R → R, deﬁnida por




2x,

f (x) =

se x ≥ 0;



3x + 1,

se x < 0.

Neste caso, a fun¸c˜ao foi deﬁnida usando duas express˜oes. Para calcularmos, por exemplo,

f (−2), observamos que −2 < 0 e da´ı, f (−2) = 3 · (−2) + 1 = −5.

Exemplo 24 Considere a fun¸c˜ao f : R → R, deﬁnida por f (x) =| x − 1 |. Neste caso,

podemos escrever




f (x) =

x − 1,

se x ≥ 1;



1 − x,

se x < 1.

3.1.1 Conjunto Imagem e Gr´aﬁcos

Podemos visualizar uma fun¸c˜ao f : D → R como o conjunto de pares ordenados

(x, f (x)), onde x varia no dom´ınio de f , assim ´e correto escrever

f = {(x, f (x)) : x ∈ D}

Esse conjunto ´e tamb´em chamado de gr´aﬁco da fun¸c˜ao, tendo em vista que a representa¸c˜ao

desse conjunto no plano cartesiano nos d´a o gr´aﬁco da equa¸c˜ao y = f (x). O conjunto

imagem de uma fun¸c˜ao f ´e o conjunto de todos os valores f (x) para todos os poss´ıveis

valores de x em seu dom´ınio. Costuma-se indicar por f (D) o conjunto imagem da fun¸c˜ao

f :

f (D) = {f (x) : x ∈ D}

Exemplo 25 As fun¸c˜oes mais simples, que trataremos aqui, s˜ao aquelas dadas por uma

equa¸c˜ao do tipo

y = mx + n

onde m e n s˜ao constantes reais. Uma fun¸c˜ao desse tipo ´e chamada fun¸c˜ao aﬁm. Como

j´a vimos, o gr´aﬁco ´e uma reta de inclina¸c˜ao m, que corta o eixo das ordenadas no ponto

29

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

de ordenada n. Veja Figura 3.1.

y

(0, n)

O

(x, mx + n)

x

Figura 3.1: Gr´aﬁco da fun¸c˜ao real y = f (x) = mx + n

Em particular, quando m = 0, temos a fun¸c˜ao constante y = n, cujo gr´aﬁco ´e uma

reta horizontal, como mostra a Figura 3.2.

y

O

x

Figura 3.2: Gr´aﬁco da fun¸c˜ao constante y = n

Exemplo 26 A fun¸c˜ao valor absoluto ´e deﬁnida por f (x) =| x | para todo x ∈ R, isto ´e,

f (x) =




x,

se x ≥ 0;



−x,

se x < 0.

Exemplo 27 A equa¸c˜ao x2 + y2 = 9 representa um circulo de centro na origem e raio 3.

Resolvida em rela¸c˜ao a y, ela ´e equivalente a

√

9 − x2

y = ±

o que nos permite deﬁnir duas fun¸c˜oes:

√

f (x) =

9 − x2 e g(x) = −

√

9 − x2

30

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

O dom´ınio dessas duas fun¸c˜oes ´e o intervalo [−3, 3] e seus gr´aﬁcos s˜ao mostrados na

Figura 3.3.

y

√

y = +

9 − x2

−3

−3

O

3

x

y

O

3

x

y = −

√

9 − x2

Figura 3.3: Gr´aﬁcos das fun¸c˜oes y = ±

√

9 − x2

3.1.2 Par´abolas

Vamos estudar fun¸c˜oes do tipo y = f (x) = ax2 + bx + c, onde a (cid:54)= 0, come¸cando pelo

caso mais simples f (x) = x2. Os gr´aﬁcos dessas fun¸c˜oes s˜ao par´abolas.

Exemplo 28 Considere a fun¸c˜ao f : R → R, deﬁnida por f (x) = x2. Calculando f (x)

para alguns valores de x:

f (0) = 0, f

(cid:19)

(cid:18) 1
2

(cid:18)

= f

−

(cid:19)

1
2

=

1
4

, f (1) = f (−1) = 1, f (2) = f (−2) = 4

Marcando esses pontos no plano cartesiano, j´a teremos uma ideia do gr´aﬁco da fun¸c˜ao,

conforme Figura 3.4:

y

−2

−1

1

2

x

Figura 3.4: Gr´aﬁco da fun¸c˜ao y = f (x) = x2.

31

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

Exemplo 29 Considere a fun¸c˜ao f : R → R, deﬁnida por f (x) = 2x2. A Figura 3.5,

nos mostra como ´e o gr´aﬁco da fun¸c˜ao f comparado com o gr´aﬁco da fun¸c˜ao y = x2.

y

2x2

x2

x

x

Figura 3.5: Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 e y = 2x2.

Exemplo 30 Considere a fun¸c˜ao f : R → R, deﬁnida por f (x) =

1
2

x2. A ﬁgura 3.6,

nos mostra como ´e o gr´aﬁco da fun¸c˜ao f comparado com os gr´aﬁcos das fun¸c˜oes y = x2

e y = 2x2.

y

2x2

x2
(1/2)x2

x

x

Figura 3.6: Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 , y = 2x2 e y =

1
2

x2 .

32

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

Exemplo 31 Considere a fun¸c˜ao f : R → R, deﬁnida por f (x) = −x2. A Figura 3.7,

nos mostra como ´e o gr´aﬁco da fun¸c˜ao f comparado com os gr´aﬁcos das fun¸c˜oes y = −

1
2

x2

e y = −2x2.

y

x

(−1/2)x2
−x2

−2x2

x

Figura 3.7: Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = −x2 , y = −2x2 e y = −

1
2

x2.

Par´abolas Transladadas: Os exemplos 33, 34 e 35 mostram par´abolas transladadas

`a partir da par´abola y = x2.

Exemplo 32 Considere a fun¸c˜ao f : R → R, deﬁnida por f (x) = x2 + 2. A Figura 3.8,

nos mostra como ´e o gr´aﬁco da fun¸c˜ao f comparado com o gr´aﬁco da fun¸c˜ao y = x2.

y = x2 + 2

y

2

y = x2

x

Figura 3.8: Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 e y = x2 + 2.

33

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

Exemplo 33 Considere a fun¸c˜ao f : R → R, deﬁnida por f (x) = x2 − 3. A ﬁgura 3.9,

nos mostra como ´e o gr´aﬁco da fun¸c˜ao f comparado com o gr´aﬁco da fun¸c˜ao y = x2.

y

−3

y = x2

x

y = x2 − 3

Figura 3.9: Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 e y = x2 − 3.

Exemplo 34 Considere a fun¸c˜ao f : R → R, deﬁnida por f (x) = (x−3)2. A ﬁgura 3.10,

nos mostra como ´e o gr´aﬁco da fun¸c˜ao f comparado com o gr´aﬁco da fun¸c˜ao y = x2.

y

y = x2

y = (x − 3)2

3

x

Figura 3.10: Compara¸c˜ao dos gr´aﬁcos das fun¸c˜oes y = x2 e y = (x − 3)2.

34

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

Caso geral: Considere agora f (x) = ax2 + bx + c, onde a (cid:54)= 0. Temos que

ax2 + bx + c = a

(cid:18)

x2 +

b
a

x +

(cid:19)

c
a

(cid:34)(cid:18)

= a

x +

(cid:19)2

b
2a

(cid:19)2

−

(cid:18) b
2a

+

(cid:35)

c
a

ax2 + bx + c = a

(cid:34)(cid:18)

x +

(cid:19)2

b
2a

−

b2 − 4ac
4a2

(cid:35)

Indicando por ∆ = b2 − 4ac

f (x) = ax2 + bx + c = a

(cid:19)2(cid:35)

(cid:34)(cid:18)

x +

b
2a

−

∆
4a

A seguir na Figura 3.11, temos exemplos de alguns gr´aﬁcos:

y

y = ax2 + bx + c (a > 0, ∆ > 0)

y

−∆/4ac

y = ax2 + bx + c (a < 0, ∆ > 0)

−b/2a

x

−b/2a

x

−∆/4ac

y

y = ax2 + bx + c (a > 0, ∆ < 0)

y

y = ax2 + bx + c (a < 0, ∆ = 0)

(−b/2a, 0)

x

−∆/4ac

−b/2a

x

Figura 3.11: Gr´aﬁcos de par´abolas.

35

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

3.1.3 Fun¸c˜oes polinomiais

Fun¸c˜oes do tipo y = f (x) = anxn + an−1xn−1 + an−2xn−2... + a1x + a0 onde an,

an−1,..., a1, a0 s˜ao n´umeros reais e n ´e um natural, com an (cid:54)= 0, s˜ao chamadas de fun¸c˜oes

polinomiais, de grau n.

Exemplo 35 A fun¸c˜ao g : R → R deﬁnida pela regra y = g(x) = x3 − 3x − 2 ´e uma

fun¸c˜ao polinomial de grau 3. O gr´aﬁco de g ´e representado pela Figura 3.12.

y
y
y

-1

0
0
0

2

x
x
x

-2

Figura 3.12: Gr´aﬁco da fun¸c˜ao polinomial y = g(x) = x3 − 3x − 2

3.2 Constru¸c˜ao do Plano Cartesiano

Esbo¸car o gr´aﬁco de uma fun¸c˜ao f signiﬁca marcar todos os pontos (x, y) tais que

y = f (x). Tamb´em ´e necess´ario construir o plano cartesiano onde ser´a representada a

fun¸c˜ao. Na Figura 3.13 ´e mostrado o c´odigo de como desenhar esse plano limitado entre

os intervalos [−4, 4] em x e [−4, 4] em y.

36

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

u:=0,7cm;
minx:=-4;maxx:=4;
miny:=-4;maxy:=4;
drawarrow ((minx, 0)--(maxx, 0)) scaled u;
drawarrow ((0, miny)--(0, maxy)) scaled u;
for i=minx*u step u until maxx*u:
draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);
label.lrt("x", (maxx*u, 0));
label.lft("y", (0, maxy*u));
label.llft("0", (0, 0));
endfor;

y
y
y
y
y
y
y
y
y

0
0
0
0
0
0
0
0
0

x
x
x
x
x
x
x
x
x

Figura 3.13: Plano cartesiano limitado pelo intervalo [-4, 4]

3.3 Constru¸c˜ao de gr´aﬁcos de fun¸c˜oes reais b´asicas

Para desenhar o gr´aﬁco de uma fun¸c˜ao real y = f (x) num intervalo [a, b] com o uso

do METAPOST utiliza-se a seguinte t´ecnica.

Inicialmente declara-se uma vari´avel do tipo path para representar uma sequˆencia de

pontos desse gr´aﬁco. Ap´os isso, o intervalo [a, b] deve ser dividido em n subintervalos de

comprimento h . Assim, ´e necess´ario declarar as vari´aveis num´ericas n, a, b e h onde a

e b s˜ao as extremidades do intervalo [a, b] em que o gr´aﬁco ser´a esbo¸cado e h = b−a

n . A
vari´avel h ´e utilizada para obter uma sequˆencia de abscissas, a partir de a. Em seguida,
s˜ao deﬁnidas as coordenadas dos pontos que o METAPOST utilizar´a para tra¸car o desenho.

Ser˜ao deﬁnidos n+1 pontos do tipo z[i]=(x[i],y[i]), obtidos para i=0, 1, 2, ..., n,

cujas abscissas s˜ao da forma x[i]:=a+i*h e a respectiva ordenada y[i]:= f(x), onde

f(x) representa a express˜ao da fun¸c˜ao a qual deseja construir o gr´aﬁco. Para tra¸car o

gr´aﬁco, p[1] da fun¸c˜ao real y = f (x), aplica-se o comando draw p[1]; onde

p[1]:=z[0]..z[1]..z[2].. ... z[n];

Para valores altos de n, ´e conveniente utilizar o la¸co

p[1]:=z[0] for j=1 upto n: ..z[j] endfor;.

Assim, nos exemplos a seguir, pode ser visto o c´odigo e a ﬁgura que representa o

gr´aﬁco de uma fun¸c˜ao real deﬁnida e cont´ınua num intervalo [a, b]. Nesses exemplos, o

37

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

c´odigo que desenha o plano cartesiano utilizado ser´a omitido, contendo assim somente os

c´odigos do gr´aﬁco da fun¸c˜ao desejada e demais incrementos.

Exemplo 36 A Figura 3.14 mostra o gr´aﬁco da fun¸c˜ao real y = f (x) = 2x no intervalo

[−1, 1].

path p[];n:=8;a:=-1;b:=1;h:=(b-a)/n;
for i=0 upto n: x[i]:=a+i*h;
y[i]:=x[i]*2; endfor
p[1]:=z[0] for j=1 upto n: ..z[j] endfor;
draw (u,2u)--(u,0) dashed evenly;
draw (u,2u)--(0,2u) dashed evenly;
label.bot("1", (u, 0));
label.lft("2", (0, 2u));
draw (-u,-2u)--(-u,0) dashed evenly;
draw (-u,-2u)--(0,-2u) dashed evenly;
label.top("-1", (-u, 0));
label.rt("-2", (0, -2u));
pickup pencircle scaled 1bp;
draw p[1] scaled u withcolor blue;

y
y

2

-1

0
0

1

x
x

-2

Figura 3.14: Gr´aﬁco da fun¸c˜ao real y = f (x) = 2x no intervalo [−1, 1].

Exemplo 37 Veja na Figura 3.15, o gr´aﬁco da fun¸c˜ao real y = f (x) = x2+1 no intervalo

[−2, 2].

path p[];n:=8;a:=-2;b:=2;h:=(b-a)/n;
for i=0 upto n: x[i]:=a+i*h;
y[i]:=-(x[i]**2)+1; endfor
p[1]:=z[0] for j=1 upto n: ..z[j] endfor;
draw (-2u,-3u)--(-2u,0) dashed evenly;
draw (-2u,-3u)--(0,-3u) dashed evenly;
label.top("-2", (-2u, 0));
label.top("2", (2u, 0));
label.ulft("-3", (0, -3u));
draw (2u,-3u)--(2u,0) dashed evenly;
draw (2u,-3u)--(0,-3u) dashed evenly;
label.ulft("1", (0, u));
pickup pencircle scaled 1 bp;
draw p[1] scaled u withcolor red;

-2

y
y
y
y
y
y

1

0
0
0
0
0
0

-3

2

x
x
x
x
x
x

Figura 3.15: Gr´aﬁco da fun¸c˜ao real y = f (x) = x2 + 1 no intervalo [−2, 2].

38

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

Exemplo 38 Na Figura 3.16 temos o gr´aﬁco da fun¸c˜ao polinomial y = f (x) = −x4 +

10x3 − 35x2 + 50x − 24 no intervalo ]0, 5[.

path p[],q;n:=100;a:=0;b:=5;h:=(b-a)/n;
q:=((minx,miny)--(maxx, miny)--(maxx, maxy)
--(minx, maxy)--cycle) scaled 0.95;
for i=0 upto n: x[i]:=a+i*h;
y[i]:=-(x[i]**4)+10*(x[i]**3)
-35*(x[i]**2)+50*x[i]-24; endfor
p[1]:=z[0] for j=1 upto n: ..z[j] endfor;
label.urt("2", (2u, 0));
label.ulft("3", (3u, 0));
label.urt("4", (4u, 0));
label.ulft("1", (u, 0));
pickup pencircle scaled 1 bp;
draw ((p[1] cutafter q) cutbefore q)
scaled u withcolor green;

y

0

1

2

3

4

x

Figura 3.16: Gr´aﬁco da fun¸c˜ao polinomial y = f (x) = −x4 + 10x3 − 35x2 + 50x − 24 no
intervalo ]0, 5[.

Como ocorre no Exemplo 39, o gr´aﬁco de uma fun¸c˜ao pode extrapolar os limites

deﬁnidos para os eixos x e y. Para cortar esse excesso, ´e deﬁnida uma regi˜ao do plano

(retangular) com os limites deﬁnidos para os eixo coordenados e armazenada na vari´avel

q. Sendo assim, com o comando draw ((p[1] cutafter q) cutbefore q) tra¸ca-se o

gr´aﬁco delimitado por essa regi˜ao.

Exemplo 39 Gr´aﬁco da fun¸c˜ao real y = f (x) = 3x no intervalo [−1, 1]. Veja Figura

3.17.

y
y
y
y

y
y
y
y

0
0
0
0

x
x
x
x

0
0
0
0

x
x
x
x

Figura 3.17: Gr´aﬁcos da fun¸c˜ao real y = f (x) = 3x no intervalo [−1, 1], extrapolado (`a
esquerda) e cortado (`a direita).

39

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

Uma vantagem muito interessante do METAPOST ´e que ele consegue calcular e iden-

tiﬁcar pontos de intersec¸c˜ao entre ﬁguras. Uma das maneiras de se fazer isso ´e utilizando

uma opera¸c˜ao primitiva chamada intersectiontimes.

Esta (opera¸c˜ao bin´aria secund´aria) ´e uma das v´arias opera¸c˜oes que lidam com os

caminhos parametricamente. Ele localiza uma interse¸c˜ao entre dois caminhos, fornecendo

o parˆametro de “tempo” em cada caminho, onde t varia de zero ao n´umero n de segmentos

curvos que foram divididos o intervalo [a, b] onde foi constru´ıdo um caminho.

Assim, dados dois caminhos p[i] e p[j] deﬁnidos pelas vari´aveis do tipo path, o

comando

(t,whatever) = p[i] intersectiontimes p[j];

fornece o parˆametro de “tempo” t que deﬁne a localiza¸c˜ao do ponto de intersec¸c˜ao entre

esses caminhos. Com esse parˆametro, ´e poss´ıvel armazenar a localiza¸c˜ao do ponto numa

vari´avel do tipo pair fazendo z[n] = point t of p[i] ou z[n] = point t of p[j]

j´a que o ponto de intersec¸c˜ao ´e comum aos dois caminhos e n ´e um ´ındice ainda n˜ao

utilizado.

Essa aplica¸c˜ao ´e utilizada no Exemplo 40.

Exemplo 40 Determinar o ponto de intersec¸c˜ao entre as curvas de equa¸c˜oes y = 2x e

y=-x+2 e marc´a-lo, conforme Figura 3.18.

numeric u,h,n;u:=1.0cm;path p[],eixox,eixoy;
eixox:=(-2u,0)--(4u,0);
eixoy:=(0,-2u)--(0,4u);
drawarrow eixox;label.bot("x",(4u,0));
drawarrow eixoy;label.lft("y",(0,4u));
n:=10;a:=-2;b:=2;h:=(b-a)/n;
for i=0 upto n:x[i]:=a+i*h;
y[i]:=2**x[i]; w[i]:=-x[i]+2;
endfor;j:=0;p[1]=(x[j]*u,y[j]*u)%
for j=1 upto n: ..(x[j]*u,y[j]*u) endfor;
draw p[1] withcolor blue;
p[2]=(x[j]*u,w[j]*u)%
for j=1 upto n: ..(x[j]*u,w[j]*u) endfor;
draw p[2] withcolor red;
(t,whatever)=p[1] intersectiontimes p[2];
z20=point t of p[1];dotlabel.rt("I",z20);
label.rt(btex $y=2^x$ etex,point n of p[1])
withcolor blue;
label.urt("y=-x+3",point n of p[2])
withcolor red;

y

y = 2x

I

y=-x+2

x

Figura 3.18: Intersec¸c˜ao I entre curvas no plano.

40

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

Se existirem mais do que um ponto de intersec¸c˜ao entre os caminhos pode-se deﬁnir

qual ponto que se deseja encontrar estabelecendo um intervalo espec´ıﬁco do caminho

p[i] atrav´es da opera¸c˜ao subpath. Para tanto, deve-se armazenar numa vari´avel p[k],

o “peda¸co”do caminho a ser veriﬁcado, com o comando

p[k] = subpath (t1, t2) of p[i]

e depois aplicar a opera¸c˜ao

(t,whatever) = p[k] intersectiontimes p[j];

onde p[j] ´e o outro caminho, como mostra o Exemplo 41.

Exemplo 41 Determinar um ponto de intersec¸c˜ao entre as curvas de equa¸c˜oes y = 3x2

e y=-x+2 e marc´a-lo, conforme Figura 3.19.

q:=((-2u,-2u)--(3u,-2u)--(3u,4u)
--(-2u,4u)--cycle);
n:=10;a:=-2;b:=2;h:=(b-a)/n;
for i=0 upto n:
x[i]:=a+i*h;y[i]:=3*x[i]*x[i];w[i]:=-x[i]+2;
endfor; j:=0;
p[1]=(x[j]*u,y[j]*u)%
for j=1 upto n: ..(x[j]*u,y[j]*u) endfor;
draw ((p[1] cutafter q) cutbefore q)
withcolor blue + red;
p[2]=(x[j]*u,w[j]*u)%
for j=1 upto n: ..(x[j]*u,w[j]*u) endfor;
draw p[2] withcolor red + green;
p[3] =subpath (3,10) of p[2];
(t,whatever)=p[1] intersectiontimes p[3];
z20=point t of p[1];
dotlabel.rt("Q",z20);
label.rt(btex $y=3*x^2$ etex,point 8 of p[1])
withcolor blue + red;
label.urt("y=-x+2",point n of p[2])
withcolor red + green;

y = 3 ∗ x2

y

Q

y=-x+2

x

Figura 3.19: Intersec¸c˜ao Q entre curvas no plano.

Uma caracter´ıstica importante do METAPOST ´e a capacidade de resolver equa¸c˜oes

lineares. Por exemplo, o interpretador METAPOST pode ler a+b=3; e 2a=b+3; e deduzir
que a=2 e b=1. Com isso, o METAPOST tamb´em pode encontrar o ponto de intersec¸c˜ao

entre retas resolvendo o sistema formado pelas equa¸c˜oes das mesmas, como ´e mostrado

no Exemplo 42.

41

CAP´ITULO 3. FUNC¸ ˜OES E GR ´AFICOS

Exemplo 42 Determinar o ponto de intersec¸c˜ao entre as retas de equa¸c˜oes y=2x-1 e

y=-x+3 e marc´a-lo, conforme Figura 3.20.

numeric u,h,n,r,c,d;path p[],eixox, eixoy;
pair a[];u :=1 cm;
eixox=(-5u,0)--(4u,0);eixoy=(0,-4u)--(0,4u);
drawarrow eixox;drawarrow eixoy;
label.bot(btex $x$ etex, (4u,0));
label.lft(btex $y$ etex, (0,4u));
n:=20;a:=-1;b:=2;h:=(b-a)/n;
for i=0 upto n:
x[i]:=a+i*h;y[i]:=2*x[i];w[i]=-x[i]+3;
endfor;
j:=0; p[1]=(x[j]*u,y[j]*u)
for j=1 upto n: ..(x[j]*u,y[j]*u) endfor;
draw p[1] withcolor blue;
p[2]=(x[j]*u,w[j]*u)
for j=1 upto n: ..(x[j]*u,w[j]*u) endfor;
draw p[2] withcolor red;
d:=-c+3=2c;
label.rt(btex $y=2x $ etex, (2u,4.2u));
label.lft(btex $y=-x+3$ etex, (3u,.7u));
label(btex $\bullet$ etex, (c,d)*u);

y

y = 2x − 1

•P

y = −x + 3

x

Figura 3.20: Intersec¸c˜ao P entre retas no plano.

Exemplo 43 Determinar um ponto de intersec¸c˜ao entre as curvas de equa¸c˜oes y =

√

x

e y = x2 e marc´a-lo, conforme Figura 3.21.

numeric u,h,n;path p[],eixox,eixoy;u=1.5cm;
eixox=(-u,0)--(2u,0);eixoy=(0,0)--(0,2u);
drawarrow eixox;drawarrow eixoy;
label.bot(btex ${x}$ etex,(2u,0));
label.lft(btex ${y}$ etex,(0,2u));
n:=10;a:=0;b:=2;h:=(b-a)/n;
for i=0 upto n:x[i]:=a+i*h;
y[i]:=x[i]*x[i]/2;w[i]:=sqrt(x[i]);endfor;
j:=0;p[1]=(x[j]*u,y[j]*u)%
for j=1 upto n: ..(x[j]*u,y[j]*u) endfor;
draw p[1] withcolor blue;p[2]=(x[j]*u,w[j]*u)%
for j=1 upto n: ..(x[j]*u,w[j]*u) endfor;
draw p[2] withcolor red;p[3]=subpath (2,10)of p[2];
(t,whatever)=p[1] intersectiontimes p[3];
z20=point t of p[1];label(btex $\bullet$ etex,z20);
label.rt(btex $y=x^2$ etex,point n of p[1])
withcolor blue;
label.rt(btex $y=\sqrt{x}$ etex,point n of p[2])
withcolor red;label.ulft("T",z20);

y

y = x2

√

x

y =

T
•

x

Figura 3.21: Intersec¸c˜ao I entre as curvas de equa¸c˜oes y =

√

x e y = x2.

42

Cap´ıtulo 4

Transforma¸c˜oes com o METAPOST

Neste cap´ıtulo, estudaremos os comandos do METAPOST que possibilitam efetuar

transforma¸c˜oes de coordenadas no plano como transla¸c˜ao, rota¸c˜ao e homotetia, obtendo

assim, ﬁguras com posi¸c˜oes e tamanhos diferentes de outras pr´e desenhadas. Referˆencias

bibliogr´aﬁcas: HENDERSON [10], MUNIZ NETO[1], HOBBY [3] e HECK [11].

4.1 Transforma¸c˜ao no Plano Cartesiano

Deﬁni¸c˜ao 2 Uma

transforma¸c˜ao

no

plano

R2

´e

uma

fun¸c˜ao

T : R2 → R2 que associa a cada ponto P de R2 um ponto P’= T(P). O ponto P’ ´e a

imagem do ponto P pela fun¸c˜ao T.

Exemplo 44 Seja T : R2 → R2 deﬁnida por T (x, y) = (x, y). Essa fun¸c˜ao transforma,

por exemplo, o ponto A=(1,2) no ponto A’=(1,2) e ´e chamada de Transforma¸c˜ao identi-

dade. No METAPOST essa transforma¸c˜ao ´e aplicada por meio do comando identity.

Exemplo 45 Seja T : R2 → R2 deﬁnida por T (x, y) = (y, x). Essa fun¸c˜ao transforma,

por exemplo, o ponto B=(-2,3) no ponto B’=(3,-2), ou seja, ela inverte as coordenadas de

qualquer ponto (x,y). Aplicada nos pontos do gr´aﬁco da fun¸c˜ao f : R → R deﬁnida pela

regra f (x) = 4x essa transforma¸c˜ao T gera o gr´aﬁco da fun¸c˜ao f −1 : R → R, chamada

inversa de f e deﬁnida pela regra f −1(x) = x

4 , como ´e representado pela Figura 4.1.

43

CAP´ITULO 4. TRANSFORMAC¸ ˜OES COM O METAPOST

y

f

0

f −1

x

Figura 4.1: Gr´aﬁco da fun¸c˜ao f e da fun¸c˜ao f −1 obtida de f usando a transforma¸c˜ao
T (x, y) = (y, x)

Como visto na Se¸c˜ao 2.9.5, as transforma¸c˜oes no R2 s˜ao aplicadas, no METAPOST

usando o comando transform. Esse comando ´e utilizado para fazer altera¸c˜oes em ﬁguras

como transla¸c˜oes, rota¸c˜oes e redimensionamento. Para tanto, ´e necess´ario aplic´a-lo a

pontos ou em ﬁguras armazenadas, previamente, em vari´aveis do tipo path.

Para utilizar esse comando, inicialmente declara-se a transforma¸c˜ao T, escrevendo

transform T; e em seguida deﬁne-se a vari´avel T precedida da transforma¸c˜ao identity,

utilizada para estabelecer um ponto de partida para demais transforma¸c˜oes.

T:= identity <transforma¸c~ao predefinida>;

Dentre v´arias transforma¸c˜oes predeﬁnidas pelo METAPOST neste trabalho ser´a es-

tudado apenas as transforma¸c˜oes b´asicas, utilizadas para realizar redimensionamento,

rota¸c˜oes e transla¸c˜oes em ﬁguras do R2.

4.2 Homotetia

Considere a transforma¸c˜ao T : R2 → R2, deﬁnida por T (x, y) = (ax, ay), onde a ´e um

n´umero real positivo. Esta transforma¸c˜ao ´e denominada homotetia de centro na origem

e raz˜ao a. Esta homotetia aplicada a uma ﬁgura diminui (a < 1) ou aumenta (a > 1) o

tamanho da ﬁgura.

O comando usado no METAPOST para aplicar homotetia de centro na origem e raz˜ao

a ´e o scaled a. Assim, o comando scaled a representa T (x, y) = (ax, ay).

44

CAP´ITULO 4. TRANSFORMAC¸ ˜OES COM O METAPOST

Exemplo 46 Seja o triˆangulo cujos v´ertices s˜ao A=(0,0), B=(2,5) e C=(3,1) e considere

a transforma¸c˜ao T : R2 → R2 deﬁnida por T (x, y) = ( 3

4y). Aplicando a transforma¸c˜ao
T no triˆangulo (cid:52)ABC, obtemos o triˆangulo (cid:52)ADE, como ´e representado pela Figura 4.2.

4x, 3

path p,q;
pair A,B,C,D,E;
A:=(0,0);B:=(2u,3u);C:=(3u,u);
p:= A--B--C--cycle;
draw p;
label.llft("A", (0, 0));
label.top("B", (2u, 3u));
label.rt("C", (3u, u));
transform T;
T:= identity scaled 0.75;
q:= p transformed T;
pickup pencircle scaled 1 bp;
draw q withcolor red;
D:=(1.5u,2.25u);E:=(2.25u,0.75u);
label.ulft("D", (1.5u, 2.25u));
label.bot("E", (2.25u, 0.75u));

y

A

B

D

C

E

x

Figura 4.2: Homotetia no triˆangulo (cid:52)ABC

A transforma¸c˜ao indicada por yscaled a ´e a transforma¸c˜ao T (x, y) = (x, ay). Assim,

(x, y) yscaled a → (x, ay) preserva a abscissa e comprime ou expande a ordenada. Da

mesma maneira, a transforma¸c˜ao indicada por xscaled a ´e a transforma¸c˜ao T (x, y) =

(ax, y). Assim, (x, y) xscaled a → (ax, y) preserva a ordenada e comprime ou expande

a abscissa.

4.3 Transla¸c˜ao

A transforma¸c˜ao deﬁnida por T (x, y) = (x + a, y + b) ´e denominada transla¸c˜ao. Uma

transla¸c˜ao aplicada a uma ﬁgura a desloca sem deforma¸c˜oes.

Para utilizar a transla¸c˜ao no METAPOST basta aplicar o comando shifted. Assim,

o comando shifted (a,b) representa a transforma¸c˜ao T (x, y) = (x + a, y + b).

Exemplo 47 Seja a circunferˆencia C1 de centro O=(u,-u) e raio 1 e considere a trans-
forma¸c˜ao T : R2 → R2 deﬁnida por T (x, y) = (x + 3, y + 4). Aplicando a transforma¸c˜ao

T na circunferˆencia C, obt´em-se a circunferˆencia C2 de centro O’=(4,3) e raio 1, como

´e representado pela Figura 4.3.

45

CAP´ITULO 4. TRANSFORMAC¸ ˜OES COM O METAPOST

path p,q;
p:= fullcircle scaled u shifted (u,-u);
draw p;
transform T;
T:= identity shifted (3u,4u);
q:= p transformed T;
draw q withcolor blue;
pickup pencircle scaled 1bp;
drawdot (u,-u);
drawdot (u+3u,-u+4u);
label.lft("O", (u, -u));
label.lft("O’", (u+3u, -u+4u));

y

O

Figura 4.3: Transla¸c˜ao na circunferˆencia C1

O’

x

4.4 Rota¸c˜ao

A rota¸c˜ao de uma ﬁgura ´e obtida quando ﬁxado um ponto do plano e gira-se a ﬁgura

de um ˆangulo α qualquer, ao redor deste ponto. No R2, a rota¸c˜ao de um ponto de

coordenadas (x, y) em torno da origem, ´e obtido atrav´es da transforma¸c˜ao T (x, y) =

(x. cos α − y.senα, x.senα + y. cos α).

Para utilizar a rota¸c˜ao no METAPOST basta aplicar o comando rotated. Dessa

forma, o comando rotated α representa a rota¸c˜ao de uma ﬁgura em torno da origem de

um ˆangulo α graus.

Exemplo 48 Seja o triˆangulo cujos v´ertices s˜ao A=(0,0), B=(2,3) e C=(2,1). Considere

girar o triˆangulo (cid:52)ABC um ˆangulo de 60o em torno da origem. Obtemos o triˆangulo

(cid:52)ADE, como ´e representado pela Figura 4.4.

path p,q;
pair A,B,C,D,E;
A:=(0,0);B:=(2u,3u);C:=(2u,u);
p:= A--B--C--cycle;
draw p;
label.llft("A", (0, 0));
label.top("B", (2u, 3u));
label.rt("C", (2u, u));
transform T;
T:= identity rotated 60;
q:= p transformed T;
pickup pencircle scaled 1 bp;
draw q withcolor red;
label.ulft("D", (-1.6u, 3u));
label.rt("E", (0.15u, 2.25u));

D

E

y

A

B

C

x

Figura 4.4: Rota¸c˜ao de 60o em torno da origem no triˆangulo (cid:52)ABC

46

CAP´ITULO 4. TRANSFORMAC¸ ˜OES COM O METAPOST

Para rotacionar uma ﬁgura em torno de um ponto espec´ıﬁco (x0, y0) deve-se aplicar o

comando rotatedaround. Assim, rotatedaround ((x0, y0), α) representa numa ﬁgura a

rota¸c˜ao de um ˆangulo α graus em torno do ponto de coordenadas (x0, y0).

Exemplo 49 Seja o retˆangulo representado na cor verde, conforme Figura 4.5. Considere

girar esse retˆangulo sob um ˆangulo de 60o em torno do ponto de coordenadas (2,2). Ser´a

obtido o retˆangulo representado na cor cinza.

u:= 1 cm; path F, G;transform T[];
pickup pencircle scaled 1bp;
drawarrow((-u,0)--(4u,0));drawarrow((0,-u)--(0,4u));
for i=0 step u until 3u:draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);endfor;
label.bot("x", (4u, 0));label.lft("y", (0, 4u));
label.llft("O", (0, 0));label.bot("2", (2u, 0));
label.lft("2", (0, 2u));F:=(0.5u,1.75u)--
(3.5u,1.75u)--(3.5u,2.25u)--(0.5u,2.25u)..cycle;
filldraw F withcolor green;
T2:= identity rotatedaround ((2u,2u),60) ;
G:= F transformed T2;filldraw G withcolor 0.8white;
dotlabel.urt("P", (2u, 2u));
draw (0,2u)--(2u,2u) dashed evenly;
draw (2u,0)--(2u,2u) dashed evenly;

y

2

O

Figura 4.5: Rota¸c˜ao de 60o em torno do ponto (2,2).

P

2

x

Exemplo 50 Seja o retˆangulo representado na cor amarelo, conforme Figura 4.6. Consi-

dere girar esse retˆangulo sob um ˆangulo de 120o em torno do ponto de coordenadas (1,2).

Ser´a obtido o retˆangulo representado na cor cinza.

u:= 1 cm; path F, G;transform T[];
pickup pencircle scaled 1bp;
drawarrow((-u,0)--(4u,0));drawarrow((0,-u)--(0,4u));
for i=-u step u until 3u:draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);endfor;
label.bot("x", (4u, 0));label.lft("y", (0, 4u));
label.llft("O", (0, 0));label.bot("1", (2u, 0));
label.lft("2", (0, 2u));F:=(0.5u,1.75u)--
(3.5u,1.75u)--(3.5u,2.25u)--(0.5u,2.25u)..cycle;
filldraw F withcolor green+red;
T2:= identity rotatedaround ((u,2u),90) ;
G:= F transformed T2;filldraw G withcolor 0.8white;
dotlabel.urt("P", (u, 2u));
draw (0,2u)--(u,2u) dashed evenly;
draw (u,0)--(u,2u) dashed evenly;

y

2

P

O

1

x

Figura 4.6: Rota¸c˜ao de 120o em torno do ponto (1,2).

47

Cap´ıtulo 5

Construindo ﬁguras com o

METAPOST

Neste cap´ıtulo s˜ao apresentadas atividades, envolvendo a constru¸c˜ao de ﬁguras b´asicas

utilizando o METAPOST , que podem ser realizadas com alunos do Ensino M´edio, utilizando-

se de computadores que possuem como programas instalados, o MIKTEX e um editor de

textos TEX como o Texmaker. Referˆencias bibliogr´aﬁcas: MELLO [14], EXEMPLES [12],
HOBBY [3], MPREVIEW[2] e AUSUBEL [5].

5.1 Atividade 1: Constru¸c˜ao de segmentos

Constru¸c˜ao de segmentos de reta de extremidades deﬁnidas e indica¸c˜oes de compri-

mento.

(a) Construir um segmento de reta M N com extremidades nos pontos de coordenadas

(1, 2) e (4, 6) utilizando o cm como unidade de medida e cuja espessura ´e 0,5 mm.

(b) Construir um segmento de reta EF tracejado com extremidades nos pontos de coor-

denadas (0, 0) e (2, 5) utilizando o cm como unidade de medida e cuja espessura ´e

0,3 mm.

(c) Construir um segmento de reta CD pontilhado com extremidades nos pontos de

coordenadas (0, 4) e (4, 2) utilizando o cm como unidade de medida e espessura

igual a 0,7 mm.

48

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao Esperada

Solu¸c˜ao (a):

u=1cm;
pickup pencircle scaled 0.5mm ;
draw (1u,2u)--(4u,6u);
label.lft("M", (1u,2u));
label.rt("N", (4u,6u));
label.ulft(btex $5~cm$ etex, (2.5u,4u));

5 cm

M

Figura 5.1: Segmento M N de medida 5 cm

Solu¸c˜ao (b):

N

F

u=1cm;
pickup pencircle scaled 0.3mm;
draw (0,0)--(2u,3u)evenly;
dotlabel.lft("E", (0,0));
dotlabel.rt("F", (2u,3u));
label.ulft(btex $\sqrt{13}~cm$ etex, (u,1.5u));

Figura 5.2: Segmento tracejado EF de medida

√

13 cm

E
√

13 cm

Solu¸c˜ao (c):

u=1cm;
pickup pencircle scaled 0.7mm ;
draw (0,4u)--(4u,2u)whithdots;
dotlabel.lft("C", (0,4u));
dotlabel.rt("D", (4u,2u));
label.urt(btex $\sqrt{20}~cm$ etex, (2u,3u));

C

Figura 5.3: Segmento pontilhado CD de medida

√

20 cm

D

√

20 cm

49

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

5.2 Atividade 2: Constru¸c˜ao de eixos

Constru¸c˜ao de eixos orientados e sistemas de eixos ortogonais.

(a) Construir um eixo horizontal, com orienta¸c˜ao positiva para a direita, utilizando o cm

como unidade de medida e cuja espessura ´e 0,5 mm.

(b) Construir um eixo vertical, com orienta¸c˜ao positiva para a cima, utilizando o cm

como unidade de medida e cuja espessura ´e 0,5 mm.

(c) Construir um sistema de eixos ortogonais, utilizando o cm como unidade de medida

e cuja espessura ´e 0,5 mm.

Solu¸c˜ao Esperada

Solu¸c˜ao (a):

u:=1cm;
drawarrow (-4u,0)--(4u,0);
for i=-3u step u until 3u:
draw (i,u/20)--(i,-u/20);
endfor;
label.bot("x", (4u, 0));
label.bot("O", (0, 0));

O

x

Solu¸c˜ao (b):

Figura 5.4: Eixo horizontal Ox

y
y
y
y
y
y
y
y
y
y

O
O
O
O
O
O
O
O
O
O

u:= 1 cm;
drawarrow ((0, -3u)--(0, 3u));
for i=-2u step u until 2u:
draw (u/20,i)--(-u/20,i);
label.lft("y", (0, 3u));
label.lft("O", (0, 0));
endfor;

Figura 5.5: Eixo vertical Oy

50

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao (c):

u:= 1 cm;
drawarrow ((-4u, 0)--(4u, 0));
drawarrow ((0, -4u)--(0, 4u));
for i=-4u step u until 4u:
draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);
label.bot("x", (4u, 0));
label.lft("y", (0, 4u));
label.ulft("O", (0, 0));
endfor;

y
y
y
y
y
y
y
y
y
y

O
O
O
O
O
O
O
O
O
O

x
x
x
x
x
x
x
x
x
x

Figura 5.6: Sistema de coordenadas cartesianas ortogonais Oxy

5.3 Atividade 3: Constru¸c˜ao de ˆangulos

Constru¸c˜ao de ˆangulos com medidas deﬁnidas.

(a) Construir um ˆangulo A ˆOB de medida α igual a 30 graus.

(b) Construir um ˆangulo P ˆQR de medida θ igual a 75 graus.

(c) Construir um ˆangulo X ˆY Z de medida β igual a 140 graus.

Solu¸c˜ao Esperada

Solu¸c˜ao (a):

u:=1cm;
alpha := 30;
draw (0,0) -- 2u*dir 0;
draw (0,0) -- 2u*dir alpha;
draw u * dir 0 {dir 90} ..u * dir alpha {dir(90+alpha)};
label.lft("O", origin);
label.bot("A", (u, 0));
label.ulft("B", u*dir alpha);
label(btex $\alpha=30^o$ etex, 1.8cm*dir (alpha/2));

B

α = 30o

O

A

Figura 5.7: ˆAngulo A ˆOB de medida α = 30o.

51

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao (b):

u:=1cm;
teta := 75;
draw (0,0) -- 4u*dir 0;
draw (0,0) -- 4u*dir teta;
draw u * dir 0 {dir 90}..u * dir teta {dir(90+teta)};
label.lft("Q", origin);
label.bot("P", (u, 0));
label.ulft("R", u*dir teta);
label(btex $\theta=75^o$ etex, 1.9cm*dir (teta/2));

R

θ = 75o

Q

P

Figura 5.8: ˆAngulo P ˆQR de medida θ = 75o.

Solu¸c˜ao (c):

u:=1cm;
beta := 140;
draw (0,0) -- 2u*dir 0;
draw (0,0) -- 2u*dir beta;
draw u * dir 0{dir 90}..u * dir beta{dir(90+beta)};
label.llft("Y", origin);
label.bot("X", (u, 0));
label.llft("Z", u*dir beta);
label(btex $\beta=140^o$ etex, 1.7cm*dir (beta/2));

β = 140o

Z

Y

X

Figura 5.9: ˆAngulo X ˆY Z de medida β = 140o.

5.4 Atividade 4: Constru¸c˜ao de circunferˆencias

Constru¸c˜ao de circunferˆencias com raios e centros determinados num sistema de eixos

ortogonais.

(a) Construir uma circunferˆencia com centro na origem do plano cartesiano e raio igual

a 2 cm e cuja espessura ´e 0,6 mm.

(b) Construir uma circunferˆencia com centro no ponto de coordenadas (2, 1) do plano

cartesiano e raio igual a 3, utilizando o cm como unidade, e cuja espessura ´e 0,6

mm na cor vermelha.

(c) Construir uma circunferˆencia com preenchimento na cor verde, centro no ponto de co-

ordenadas (1, 1) do plano cartesiano e raio igual a 1, utilizando o cm como unidade,

e cuja espessura ´e 0,7 mm.

52

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao Esperada

Solu¸c˜ao (a):

u:= 1 cm;
drawarrow ((-3u, 0)--(3u, 0));
drawarrow ((0, -2.5u)--(0, 2.5u));
for i=-2.5u step .5u until 2.5u:
draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);
label.bot("x", (3u, 0));
label.lft("y", (0, 2.5u));
label.ulft("O", (0, 0));
endfor;
pickup pencircle scaled 0.6mm;
draw fullcircle scaled 2cm;

y
y
y
y
y
y
y
y
y
y

O
O
O
O
O
O
O
O
O
O

x
x
x
x
x
x
x
x
x
x

Figura 5.10: Circunferˆencia de centro na origem e raio 2cm

Solu¸c˜ao (b):

u:= 1 cm; path C;transform T;
drawarrow ((-2u, 0)--(4u, 0));
drawarrow ((0, -2u)--(0, 4u));
for i=-2u step u until 4u:
draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);
label.bot("x", (4u, 0));
label.lft("y", (0, 4u));
label.llft("O", (0, 0));
endfor;
T:= identity scaled 3cm shifted (2u, u);
C:= fullcircle transformed T;
draw (2u, u)--(2u, 0) dashed evenly;
draw (2u, u)--(0, u) dashed evenly;
pickup pencircle scaled 0.6mm;
draw C withcolor red;
pickup pencircle scaled 0.8mm;
drawdot (2u, u);
label.bot("2", (2u, 0));
label.lft("1", (0, u));

y
y
y
y
y
y
y

1

O
O
O
O
O
O
O

2

x
x
x
x
x
x
x

Figura 5.11: Circunferˆencia de centro (2, 1) e raio 1,5 cm

53

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao (c):

u:= 1 cm; path C;transform T;
T:= identity scaled 2cm shifted (u, u);
C:= fullcircle transformed T;
fill C withcolor green;
drawarrow ((-2u, 0)--(4u, 0));
drawarrow ((0, -2u)--(0, 4u));
for i=-2u step u until 3.5u:
draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);
label.bot("x", (4u, 0));
label.lft("y", (0, 4u));
label.llft("O", (0, 0));
endfor;
draw (u, u)--(u, 0) dashed evenly;
draw (u, u)--(0, u) dashed evenly;
pickup pencircle scaled 0.6mm; draw C;
pickup pencircle scaled 0.8mm;
drawdot (u, u);
label.bot("1", (u, 0));
label.lft("1", (0, u));

y
y
y
y
y
y

1

O
O
O
O
O
O

1

x
x
x
x
x
x

Figura 5.12: Circunferˆencia de centro (1, 1) e raio 1 preenchida na cor verde

5.5 Atividade 5: Constru¸c˜ao de triˆangulos

Constru¸c˜ao de triˆangulos dada as suas dimens˜oes e/ou seus ˆangulos internos.

(a) Construir um triangulo (cid:52)ABC de lados medindo 3 cm, 5 cm e 6 cm com espessura

de 0,5 mm.

(b) Construir um triˆangulo (cid:52)P QR equil´atero com 4 cm de lado.

(c) Construir um triˆangulo (cid:52)M N O is´osceles, cuja base mede 2 cm, seus lados congru-

entes medem 4 cm e seu interior preenchido com cor azul.

54

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao Esperada

Solu¸c˜ao (a):

u:= 1 cm;path p[];pair A, B;
A:= origin;B:=(6u,0);
p[1]:= fullcircle scaled 6u shifted (0,0);
p[2]:= fullcircle scaled 10u shifted (6u,0);
(t,whatever)=p[1] intersectiontimes p[2];
z20=point t of p[1];label.top("C",z20);
draw A--B--z20--cycle;
label.llft("A",origin);label.lrt("B",(6u,0));
label.bot(btex $6~cm$ etex, 0.5(A+B));
label.ulft(btex $3~cm$ etex, 0.5(A+z20));
label.urt(btex $5~cm$ etex, 0.5(z20+B));

C

3 cm

5 cm

A

6 cm

B

Figura 5.13: Triˆangulo (cid:52)ABC escaleno.

Solu¸c˜ao (b):

u:= 1 cm;path p[]; pair P, Q;P:= (0,0); Q:=(4u,0);
p[1]:= fullcircle scaled 8u shifted (0,0);
p[2]:= fullcircle scaled 8u shifted (4u,0);
(t,whatever)=p[1] intersectiontimes p[2];
z20=point t of p[1];draw P--Q--z20--cycle;
label.top("R",z20);label.llft("P",origin);
label.lrt("Q",(4u,0));
label.bot(btex $4~cm$ etex, 0.5(P+Q));
label.ulft(btex $4~cm$ etex, 0.5(P+z20));
label.urt(btex $4~cm$ etex, 0.5(z20+Q));

R

4 cm

4 cm

P

4 cm

Q

Figura 5.14: Triˆangulo (cid:52)P QR equil´atero de lado 4 cm.

Solu¸c˜ao (c):

u:= 1 cm;path p[]; pair M, N;M:= (0,0); N:=(2u,0);
p[1]:= fullcircle scaled 8u shifted (0,0);
p[2]:= fullcircle scaled 8u shifted (2u,0);
(t,whatever)=p[1] intersectiontimes p[2];
z20=point t of p[1];label.top("O",z20);
draw M--N--z20--cycle;fill M--N--z20--cycle withcolor blue;
label.llft("M", origin);label.lrt("N",N);
label.bot(TEX("$2~cm$"), 0.5(M+N));
label.ulft(TEX("$4~cm$"), 0.5(M+z20));
label.urt(TEX("$4~cm$"), 0.5(z20+N));

O

4 cm

4 cm

M

2 cm

N

Figura 5.15: Triˆangulo (cid:52)M N O is´osceles de base 2 cm

55

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

5.6 Atividade 6: Constru¸c˜ao de gr´aﬁco de fun¸c˜ao

aﬁm

Constru¸c˜ao de gr´aﬁcos de fun¸c˜ao aﬁm num sistema de eixos cartesianos ortogonais.

(a) Construir o gr´aﬁco da fun¸c˜ao real y = x - 1 no plano cartesiano e cuja espessura ´e

0,6 mm e cor azul.

(b) Construir o gr´aﬁco da fun¸c˜ao real y = -2x no plano cartesiano e cuja espessura ´e 0,6

mm e cor vermelha.

(c) Construir o gr´aﬁco da fun¸c˜ao real y = −2

3 x + 1 no plano cartesiano e cuja espessura

´e 0,4 mm e cor verde.

Solu¸c˜ao Esperada

Solu¸c˜ao (a):

u:= 1 cm; path C;transform T;
T:= identity scaled 3u shifted (u, u);
C:= (-2u,-3u)--(3u,2u);
pickup pencircle scaled 0.2mm;
drawarrow ((-3u, 0)--(3u, 0));
drawarrow ((0, -3u)--(0, 3u));
for i=-3u step u until 2.5u:
draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);
label.bot("x", (3u, 0));
label.lft("y", (0, 3u));
label.ulft("O", (0, 0));
endfor;
pickup pencircle scaled 0.4mm;
draw C withcolor blue;
label.lrt("1", (u, 0));
label.ulft("-1", (0, -u));
label.top("y=x-1", (3u, 2u)) withcolor blue;

y
y
y
y
y
y

O
O
O
O
O
O

-1

y=x-1

1

x
x
x
x
x
x

Figura 5.16: Gr´aﬁco da fun¸c˜ao real deﬁnida por y=x-1 na cor azul

56

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao (b):

u:= 1 cm; path C;transform T;
T:= identity scaled 3u shifted (u, u);
C:= (-1.5u,3u)--(1.5u,-3u);
pickup pencircle scaled 0.2mm;
drawarrow ((-3u, 0)--(3u, 0));
drawarrow ((0, -3u)--(0, 3u));
for i=-3u step u until 2.5u:
draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);
label.bot("x", (3u, 0));
label.lft("y", (0, 3u));
label.llft("0", (0, 0));
draw (u,-2u)--(u, 0) dashed evenly;
draw (u,-2u)--(0, -2u) dashed evenly;
endfor;
pickup pencircle scaled 0.4mm;
draw C withcolor red;
label.top("1", (u, 0));
label.lft("-2", (0, -2u));
label.top("y=-2x", (2u, -3u)) withcolor red;

y
y
y
y
y
y

0
0
0
0
0
0

-2

1

x
x
x
x
x
x

y=-2x

Figura 5.17: Gr´aﬁco da fun¸c˜ao real y=-2x na cor vermelha

Solu¸c˜ao (c):

u:= 1 cm; path C;transform T;
T:= identity scaled 3u shifted (u, u);
C:= (-3u,-u)--(3u,3u);
pickup pencircle scaled 0.2mm;
drawarrow ((-3u, 0)--(3u, 0));
drawarrow ((0, -3u)--(0, 3u));
for i=-3u step u until 2.5u:
draw (i,u/20)--(i,-u/20);
draw (u/20,i)--(-u/20,i);
label.bot("x", (3u, 0));
label.lft("y", (0, 3u));
label.llft("0", (0, 0));
endfor;
pickup pencircle scaled 0.4mm;
draw C withcolor green;
label.bot(btex $-3/2$ etex, (-3u/2, 0));
label.ulft("1", (0, u));
label.bot(btex $y=\frac{2}{3}x+1$ etex,
(2.5u, 2u))
withcolor green;

y
y
y
y
y
y

1

0
0
0
0
0
0

−3/2

y = (2/3)x + 1

x
x
x
x
x
x

Figura 5.18: Gr´aﬁco da fun¸c˜ao real y = 2

3x + 1 na cor verde

57

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

5.7 Atividade 7: Constru¸c˜ao de gr´aﬁcos de fun¸c˜oes

quadr´aticas usando transforma¸c˜oes.

Constru¸c˜ao de gr´aﬁcos de fun¸c˜ao quadr´atica num sistema de eixos cartesianos ortogo-

nais com o uso de transforma¸c˜oes.

(a) Construir o gr´aﬁco da fun¸c˜ao real y = 2x2 no plano cartesiano, a partir da fun¸c˜ao

y = x2, usando uma transforma¸c˜ao adequada, na cor azul.

(b) Construir o gr´aﬁco da fun¸c˜ao real y = −2x2 − 4x − 2 = −2(x + 1)2 `a partir do gr´aﬁco

da fun¸c˜ao y = x2, na cor preta.

(c) Aplicar uma rota¸c˜ao de 30o no sentido anti-hor´ario ao gr´aﬁco da fun¸c˜ao f (x) =

(x − 1)2 + 2 e desenhar o resultado na cor verde.

58

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao Esperada

Solu¸c˜ao (a):

numeric u,h,n,r;path p[],f[], eixox, eixoy, q;
u :=1 cm;eixox=(-2.5u,0)--(2.5u,0);
eixoy=(0,-u)--(0,4u);
drawarrow eixox; drawarrow eixoy;
label.bot(btex $x$ etex, (2.5u,0));
label.lft(btex $y$ etex, (0,4u));
q:= (-2.5u,-u)--(2.5u,-u)--(2.5u,4u)--(-2.5u,4u)--cycle;n:=100;a:=-2;b:=3;h:=(b-a)/n;
for i=0 upto n:x[i]:=a+i*h;y[i]:=x[i]*x[i];
endfor;
j:=0;p[1]=(x[j]*u,y[j]*u)
for j=1 upto n: ..(x[j]*u,y[j]*u) endfor;
draw ((p[1] cutafter q) cutbefore q)
withcolor red dashed evenly;
draw (u,0)..(u,2u) dashed evenly;
draw(0,2u)..(u,2u) dashed evenly;
draw (u,0)..(u,u) dashed evenly;
draw(0,u)..(u,u) dashed evenly;
label.bot(btex $1$ etex, (u,0));
label.lft(btex $1$ etex, (0,u));
label.lft(btex $2$ etex, (0,2u));
transform T[];
T1:= identity yscaled 2;
f1:= p1 transformed T1;
draw ((f1 cutafter q) cutbefore q)
withcolor blue;
label.bot(btex $y=x^2$ etex, (-2u,2.1u))
withcolor red;
label.bot(btex $y=2x^2$ etex, (1.2u,4.5u)) withcolor blue;

y = x2

y = 2x2

y

2

1

1

x

Figura 5.19: Gr´aﬁco da fun¸c˜ao y = 2x2 na cor azul

59

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao (b):

numeric u,h,n,r;path p[],f[], eixox, eixoy, q;
u :=1 cm;eixox=(-2.5u,0)--(2.5u,0);
eixoy=(0,-3u)--(0,4u);
drawarrow eixox; drawarrow eixoy;
label.bot(btex $x$ etex, (2.5u,0));
label.lft(btex $y$ etex, (0,4u));
q:=(-2.5u,-3u)--(2.5u,-3u)--(2.5u,4u)--(-2.5u,4u)--cycle;
n:=100;a:=-2;b:=3;h:=(b-a)/n;
for i=0 upto n:x[i]:=a+i*h;y[i]:=x[i]*x[i];
endfor;
j:=0;p[1]=(x[j]*u,y[j]*u)
for j=1 upto n: ..(x[j]*u,y[j]*u) endfor;
draw (-u,0)..(-u,u)
draw(0,u)..(-u,u) dashed evenly;
label.bot(btex $-1$ etex, (-u,0));
label.rt(btex $1$ etex, (0,u));
transform T[];
T1:= identity yscaled
f1:= p1 transformed T1;
T2:= identity shifted (-u,0);
f2:= f1 transformed T2;
draw ((p[1] cutafter q) cutbefore q)
withcolor red dashed evenly;
draw ((f[2] cutafter q) cutbefore q);
label.bot(btex $y=x^2$ etex, (-2u,2.1u))
withcolor red;

dashed evenly;

-2;

y

y = x2

1

−1

x

Figura 5.20: Gr´aﬁco da fun¸c˜ao f (x) = −2(x + 1)2.

60

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Solu¸c˜ao (c):

dashed evenly;

numeric u,h,n,r;path p[],f[], eixox, eixoy, q;
u :=1 cm;eixox=(-2.5u,0)--(2.5u,0);
eixoy=(0,-3u)--(0,4u);
drawarrow eixox; drawarrow eixoy;
label.bot(btex $x$ etex, (2.5u,0));
label.lft(btex $y$ etex, (0,4u));
q:= (-2.5u,-3u)--(5u,-3u)--(5u,4u)--(-2.5u,4u)--cycle;
n:=100;a:=-2;b:=3;h:=(b-a)/n;
for i=0 upto n:x[i]:=a+i*h;y[i]:=x[i]*x[i];
endfor;
j:=0;p[1]=(x[j]*u,y[j]*u)
for j=1 upto n: ..(x[j]*u,y[j]*u) endfor;
draw ((p[1] cutafter q) cutbefore q)
withcolor red dashed evenly;
draw (-u,0)..(-u,u)
draw(0,u)..(-u,u)
label.bot(btex $-1$ etex, (-u,0));
label.rt(btex $1$ etex, (0,u));
transform T[];
T1:= identity yscaled
f1:= p1 transformed T1;
T2:= identity shifted (u,-2u);
f2:= f1 transformed T2;
T3:= identity rotatedaround ((u,-2u),-30);
f3:= f2 transformed T3;
draw ((f3 cutafter q) cutbefore q)
withcolor green;
draw (u,0)..(u,-2u)
draw(0,-2u)..(u,-2u)
label.top(btex $1$ etex, (u,0));
label.lft(btex $-2$ etex, (0,-2u));
label.bot(btex $y=x^2$ etex, (-2u,2.1u))
withcolor red;

dashed evenly;

dashed evenly;

dashed evenly;

2;

y

y = x2

1

1

−1

x

−2

Figura 5.21: Gr´aﬁco do resultado da rota¸c˜ao de 30o no sentido anti-hor´ario ao gr´aﬁco de
f (x) = (x − 1)2 + 2.

61

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

5.8 Relato da pr´atica com os alunos

Neste cap´ıtulo, ´e apresentado um breve relato de como ocorreu o desenvolvimento

deste trabalho, principalmente, a parte relacionada com a pr´atica desenvolvida com os

alunos.

Atualmente existe um grande desaﬁo por parte de muitos docentes, em motivar os

alunos no estudo da matem´atica. Tal diﬁculdade se d´a `a grande facilidade de encon-

trar informa¸c˜oes prontas e r´apidas sobre os diversos problemas encontrados no cotidiano,

provocando assim, grande desinteresse na busca por explica¸c˜oes mais precisas e robus-

tas desses problemas. As facilidades encontradas pelo avan¸co tecnol´ogico n˜ao deixam

espa¸co para os alunos desenvolverem pensamentos cr´ıticos e profundos a respeito do fun-

cionamento do mundo que os rodeia e sobre a importˆancia que as ciˆencias, sobretudo a

matem´atica, tem para explicar os fatos.

Nesse sentido, o trabalho apresenta uma proposta que motiva alunos e professores no

processo de ensino-aprendizagem. Proposta essa que utiliza a programa¸c˜ao para aprender

matem´atica, atrav´es do uso do METAPOST.

O trabalho foi desenvolvido com alunos da turma 2o ano D do Ensino M´edio T´ecnico

em Programa¸c˜ao de Jogos Digitais, per´ıodo matutino, da Escola Estadual H´ercules May-

mone, no ano letivo de 2019, e foram utilizadas v´arias aulas do professor Marcelo Furquin.

A escolha para trabalhar com essa turma foi pela conveniˆencia dos alunos j´a estarem

aprendendo linguagens de programa¸c˜ao para o desenvolvimento de jogos digitais, o que

contribuiu signiﬁcativamente para aprenderem a linguagem METAPOST. Esta ideia est´a

baseada na teoria da aprendizagem signiﬁcativa de David Ausubel que em seu livro Psi-

cologia Educacional ´e contundente em dizer que “O fator isolado mais importante que

inﬂuencia o aprendizado ´e aquilo que o aprendiz j´a conhece”. Portanto, aprender ma-

tem´atica, em particular, aprender geometria utilizando uma ferramenta que um grupo de

alunos j´a domina previamente (a programa¸c˜ao) foi uma boa estrat´egia para alcan¸car tal

objetivo.

O trabalho se iniciou atrav´es de quatro aulas te´oricas ministradas `as sextas feiras,

no hor´ario de aula do professor Marcelo. Nessa aulas foram apresentados os comandos

b´asicos sobre o METAPOST e como utiliz´a-lo na programa¸c˜ao de ﬁguras. Para isso foi

elaborado um resumo com os comandos do METAPOST, em material impresso e entregue

aos alunos.

62

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

A ideia era terminar essas aulas e iniciar a parte pr´atica com desenvolvimento das

ﬁguras num computador e, posteriormente, propor uma s´erie de atividades. Por´em, alguns

contratempos ocorreram, como a precariedade dos computadores e a falta de internet no

laborat´orio de inform´atica da escola, e tamb´em, a mudan¸ca nos hor´arios de aulas do

professor Marcelo Furquim.

A ausˆencia de internet acarretaria a impossibilidade de trabalhar na plataforma on-

line do professor Troy Henderson (http://www.tlhiv.org/mppreview/). Essa plataforma

´e uma excelente ferramenta on-line que permite digitar o c´odigo numa caixa de texto e,

num clique apenas, visualizar o resultado na tela.

A precariedade dos computadores n˜ao permitiu a instala¸c˜ao dos programas necess´arios

para o desenvolvimento das ﬁguras com o METAPOST, como o Miktex e o editor Texstudio

ou o Texmaker.

J´a a mudan¸ca de hor´arios, ocorrida ap´os uma troca na gest˜ao da escola, gerou troca

de muitos professores, impedindo assim que as aulas do professor Marcelo na turma em

quest˜ao n˜ao coincidisse com os meus hor´arios dispon´ıveis.

A not´ıcia de que seria implementada a internet no laborat´orio da escola possibilitou a

continuidade do trabalho com o uso da plataforma on-line do professor Troy Henderson

[2].

Como o laborat´orio possu´ıa apenas 5 computadores adequados, foram escolhidos cinco

estudantes para participarem do trabalho.

Iniciou-se a parte pr´atica com uma aula de apresenta¸c˜ao da plataforma on-line do

professor Troy Henderson [2] e revis˜ao sobre os comandos b´asicos do METAPOST relem-

brando os principais, conforme Fig. 5.22.

63

CAP´ITULO 5. CONSTRUINDO FIGURAS COM O METAPOST

Figura 5.22: Alunos trabalhando no laborat´orio.

Em outra oportunidade foi ministrada aula com v´arios exemplos de ﬁguras utilizadas

em matem´atica, direcionando `aquelas a serem propostas por este trabalho, sobre cons-

tru¸c˜ao de segmentos, pol´ıgonos, ˆangulos, eixos, gr´aﬁco de fun¸c˜oes, bem como o uso de

r´otulos contendo textos e express˜oes matem´aticas,

Ap´os isso os alunos ﬁcaram livres para usar a imagina¸c˜ao e os conte´udos estudos para

criarem ﬁguras, conforme Figura 5.23, tirando suas d´uvidas sobre utiliza¸c˜ao dos comando

necess´arios.

Figura 5.23: Aluno desenvolvendo ﬁgura livremente.

Para ﬁnalizar, foram propostas a s´erie de atividades apresentadas no Cap´ıtulo 5, `as

quais os alunos desenvolveram com boa desenvoltura e propriedade.

64

Considera¸c˜oes Finais

O desaﬁo deste trabalho foi utilizar uma abordagem dinˆamica, apoiada no uso da tec-

nologia, para contribuir com um aprendizado mais efetivo e signiﬁcativo em matem´atica.

Sendo assim, o uso do METAPOST ´e uma forma de ter contato, aplicar e aprofun-

dar os diversos conceitos matem´aticos estudados no Ensino M´edio, principalmente em

Geometria, al´em de oportunizar, um aprendizado na ´area de programa¸c˜ao de computa-

dores, estimulando o racioc´ınio l´ogico matem´atico e a organiza¸c˜ao de ideias para resolver

problemas.

65

Apˆendice A

Como Trabalhar com o METAPOST

A cria¸c˜ao de gr´aﬁcos com o MetaPost segue o ciclo editar-compilar-depurar conhecido

de outras linguagens de programa¸c˜ao. Para criar imagens com o MetaPost, vocˆe prepara

um arquivo de texto contendo o c´odigo na linguagem do MetaPost e depois o compila.

Os arquivos de entrada do MetaPost normalmente possuem a extens˜ao .mp. As imagens

geradas pelo METAPOST podem ser visualizadas em qualquer visualizador PostScript e

tamb´em em qualquer arquivo de sa´ıda obtido atrav´es de um arquivo TEX.

Neste cap´ıtulo, s˜ao apresentadas as ferramentas necess´arias (programas e editores para

a plataforma windows) e procedimentos necess´arios para produzir ﬁguras com o uso do
METAPOST e inseri-la num arquivo TEX que por sua vez possibilita imprimir tal ﬁgura
numa sa´ıda em .pdf, por exemplo.

A.1 Programas necess´arios

Inicialmente, ´e necess´ario instalar no computador uma distribui¸c˜ao que implementa

o TeX / LaTeX e programas relacionados. No windows, essa distribui¸c˜ao ´e o MiKTeX

(pronuncia -se mick-tech ). O MiKTex pode ser baixado no endere¸co https://miktex.org/,

´e gratuito e de f´acil instala¸c˜ao.

Posteriormente, ´e preciso o uso de um editor de textos que possibilita desenvolver tex-

tos TEX e, por sua vez consegue salvar um arquivo com o formato .mp que ´e a terminologia
de um arquivo METAPOST. Para tanto, podem ser usado os programas: Texmaker, Texs-

tudio, entre outros.

Ao utilizar um destes editores e abrir um novo arquivo, deve salv´a-lo com o formato

66

APˆENDICE A. COMO TRABALHAR COM O METAPOST

ﬁgura-n.mp (“ﬁgura”´e o nome do arquivo e “n”´e um contador de ﬁguras) na mesma pasta

em que existe um arquivo TEX.

A.2 Estrutura de um documento METAPOST

A estrutura do documento METAPOSTtem o seguinte formato:

prologues:=3;
outputformat:="mps";
outputtemplate:=("%j" & "." & outputformat);
beginfig(n);
<C´ODIGO METAPOST>
endfig;
end

Note que o c´odigo METAPOST se encontra entre as tags beginfig(n); e endfig;. O

argumento num´erico para a macro beginfig(n); determina o nome do arquivo de sa´ıda

correspondente, cujo nome, por padr˜ao, ´e da forma fig.n, em que n ´e o argumento, ou

seja, um contador de ﬁguras.

Comandos tamb´em podem aparecer fora de beginfig .

. . endfig. Essas ins-

tru¸c˜oes s˜ao processadas, mas as opera¸c˜oes de desenho n˜ao geram sa´ıda vis´ıvel. Nor-

malmente, as conﬁgura¸c˜oes globais s˜ao colocadas fora de beginfig ...

endfig, por

exemplo, atribui¸c˜oes a vari´aveis internas, como outputtemplate, outputformat ou um

comando do preˆambulo do LATEX.

Se os gr´aﬁcos contiverem r´otulos de texto, conv´em deﬁnir a vari´avel prologues como

3 para garantir que as fontes corretas sejam usadas em todas as circunstˆancias poss´ıveis.

A atribui¸c˜ao outputtemplate altera o esquema de nomenclatura do arquivo de sa´ıda

para o formato nomedafigura-n.mps. Dessa forma, em vez de um ´ındice num´erico, todos

os arquivos de sa´ıda obtˆem uma extens˜ao de arquivo uniforme mps, que ´e normalmente
usado para a sa´ıda PostScript do METAPOST. A atribui¸c˜ao outputformat permite que o

MetaPost grave arquivos de sa´ıda no formato SVG ou PNG em vez do formato PostScript.

67

APˆENDICE A. COMO TRABALHAR COM O METAPOST

A.3

Inser¸c˜ao de ﬁguras num documento TEX

Para inserir uma ﬁgura num documento TEX deve-se usar o ambiente figure que
possui uma s´erie de atributos que v˜ao desde alinhar ﬁguras a colocar descri¸c˜ao ou fazer

referˆencias a ela, a seguir temos um exemplo de como us´a-lo :

\begin{figure}[H]
\centering
\includegraphics[scale=1]{nomedafigura-n.mps}
\caption{Aqui vai uma descri¸c~ao da imagem}
\label{fig:figuran}
\end{figure}

Figura A.1: Inser¸c˜ao de ﬁgura num documento TEX

A linha includegraphics serve para incluir a ﬁgura especiﬁcada, no texto. Note

que o arquivo referenciado para a ﬁgura possui a terminologia .mps, que ´e o arquivo

execut´avel gerado na mesma pasta do arquivo edit´avel .mp quando o mesmo ´e compilado.

Esse arquivo .mps deve ser copiado para a mesma pasta que cont´em o arquivo TEX a ser
inclu´ıdo a ﬁgura.

J´a a linha centering serve para centralizar a ﬁgura. Em caption deve ser colocada

uma descri¸c˜ao para a ﬁgura e label serve para colocar uma referˆencia para a ﬁgura, a

ﬁm de referenci´a-la em algum ponto do texto.

´E necess´ario, para se utilizar o ambiente figure, colocar no preˆambulo do documento

TEX a linha

.

usepackagegraphicx

A.4 Visualiza¸c˜ao de ﬁguras METAPOST em plataforma

on-line

´E poss´ıvel visualizar ﬁguras geradas com c´odigos METAPOST, de forma simples e

r´apida, numa plataforma on-line desenvolvida pelo professor Troy Henderson, no endere¸co

http://www.tlhiv.org/mppreview/, conforme Figuras A.2 e A.3.

68

APˆENDICE A. COMO TRABALHAR COM O METAPOST

Figura A.2: Visualizador METAPOST on-line em branco

Figura A.3: Visualizador METAPOST on-line com exemplo

69

Referˆencias Bibliogr´aﬁcas

[1] DELGADO, Jorge. Geometria Anal´ıtica - Jorge Delgado, Katia Frensel, Lhaylla

Crissaﬀ. 1.ed. Rio de Janeiro: SBM, 2013.

[2] HENDERSON, Troy. MetaPost Previewer. Dispon´ıvel em http://www.tlhiv.

org/mppreview/; acesso em 02/11/2019.

[3] HOBBY, John D. METAPOST - A USER’S MANUAL. Technical Report 162,

AT&T Bell Laboratories, Murray Hill, New Jersey, 1992. Dispon´ıvel em http://www.

tug.org/docs/metapost/mpman.pdf; acesso em 02/11/2019.

[4] MUNIZ NETO, Antonio C. Fundamentos de C´alculo. 1.ed. Rio de Janeiro: SBM,

2015.

[5] AUSUBEL, David P., NOVAK, Joseph D., HANESIAN, Helen. Psicologia Educa-

cional. Tradu¸c˜ao Eva Nick. Rio de Janeiro: Interamericana, 1980.

[6] MUNIZ NETO, Antonio C. Geometria. 1.ed. Rio de Janeiro: SBM, 2013.

[7] CANDIA, Estev˜ao V. A matem´atica e o MetaPost. Dispon´ıvel em http://

https://sca.profmat-sbm.org.br/sca_v2/get_tcc3.php?id=160350039/;

acesso

em 02/11/2019.

[8] VICENTE, Lucas. Escrevendo Imagens com MetaPost. Dispon´ıvel em http:

//www.ime.usp.br/~alkaid/metapost.pdf; acesso em 02/11/2019.

[9] LIMA, Elon Lages Coordenadas no Plano. 5.ed. Rio de Janeiro: SBM, 2011.

[10] HENDERSON, Troy; HENNIG, Stephan. A Beginner’s Guide to METAPOST

for Creating High-Quality Graphics. 2013. Dispon´ıvel em http://www.tug.org/

docs/metapost/mpintro.pdf; acesso em 02/11/2019.

70

REFERˆENCIAS BIBLIOGR ´AFICAS

[11] HECK, Andr´e. Tutorial in MetaPost. AMSTEL Institute, 2003, dispon´ıvel em

http://tex.loria.fr/prod-graph/heck-metapost2003.pdf; acesso em 02/11/2019.

[12] MetaPost: exemples. A (La)Tex Encyclopaedia, dispon´ıvel em http://tex.

loria.fr/prod-graph/zoonekynd/metapost/metapost.html; acesso em 02/11/2019.

[13] HOBBY, John D. Drawing Graphs with METAPOST. Technical Report 164,

AT&T Bell Laboratories, Murray Hill, New Jersey, 1992. Dispon´ıvel em https://www.

tug.org/docs/metapost/mpgraph.pdf; acesso em 02/11/2019.

[14] DEPARTAMENTO DE EDIC¸ ˜OES EDUCATIVAS DA EDITORA MODERNA Ma-

tem´atica, constru¸c˜ao e signiﬁcado. 1.ed. S˜ao Paulo: Editora Moderna, 2005.

[15] DANTE, Luiz Roberto. Matem´atica: Contexto e Aplica¸c˜oes - 3.ed. S˜ao Paulo:

´Atica, 2008.

71

