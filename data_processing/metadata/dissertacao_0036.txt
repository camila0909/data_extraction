UNIVERSIDADE FEDERAL DE SÃO JOÃO DEL REI

PROFMAT – MESTRADO PROFISSIONAL EM MATEMÁTICA EM REDE
NACIONAL

KENDERSON GEANE CORRÊA

A INSERÇÃO DO PENSAMENTO COMPUTACIONAL NAS

AULAS DE MATEMÁTICA NO ENSINO BÁSICO

São João del-Rei
2022

KENDERSON GEANE CORRÊA

A INSERÇÃO DO PENSAMENTO COMPUTACIONAL NAS

AULAS DE MATEMÁTICA NO ENSINO BÁSICO

Dissertação apresentada à Universidade Federal
de São João del-Rei, Campus Santo Antônio,
como parte das exigências do Programa de Pós-
em
Graduação
Matemática em Rede Nacional, para obter o
título de Mestre.

Profissional

Mestrado

Orientador: Prof. Dr.
Aguilar

Juan Carlos Zavaleta

São João del-Rei
2022

KENDERSON GEANE CORRÊA

A INSERÇÃO DO PENSAMENTO COMPUTACIONAL NAS AULAS DE

MATEMÁTICA NO ENSINO BÁSICO

Dissertação apresentada à Universidade Federal de São
João del-Rei, Campus Santo Antônio, como parte das
exigências do Programa de Pós-Graduação Mestrado
Profissional em Matemática em Rede Nacional, para
obter o título de Mestre.

Orientador: Prof. Dr. Juan Carlos Zavaleta Aguilar

APROVADA ___/___/2022

Banca Examinadora:

_______________________________________________
Prof. Dr. Juan Carlos Zavaleta Aguilar
Universidade Federal de São João del-Rei – UFSJ

________________________________________________
Prof. Dr. Jorge Andrés Julca Ávila
Universidade Federal de São João del-Rei - UFSJ

________________________________________________
Prof. Dr. Santos Alberto Enriquez Remigio
Universidade Federal de Uberlândia – UFU

São João del-Rei
2022

AGRADECIMENTOS

Primeiramente a Deus, a minha família, em especial, minha mãe, sem ela eu não teria
conseguido e ao Professor Dr. Juan Carlos Zavaleta Aguilar, pela preciosa orientação, empatia,
apoio, incentivo e paciência. Aos colegas de classe, em especial, Camila e Felipe, o meu
muito obrigado por tudo. Aos professores do Mestrado, gratidão. O presente trabalho foi
realizado com apoio da Coordenação de Aperfeiçoamento de Pessoal de Nível Superior –
Brasil (CAPES) – Código de Financiamento 001.

RESUMO

o

de

como

através

construções

Pensamento Computacional,

Este trabalho visa estabelecer uma conexão entre a inserção do Pensamento Computacional
no ensino fundamental e o ensino de Matemática, e tem como foco responder a seguinte
interrogante:
de
algoritmos/fluxogramas e criações de sistemas digitais, pode contribuir para o ensino da
Matemática, possibilitando o desenvolvimento das competências e habilidades previstas na
Base Nacional Comum Curricular (BNCC)? Para isso, uma sequência didática, formada por
sete aulas, foi concebida e aplicada em uma turma do 6º ano do ensino fundamental II de uma
escola pública da rede estadual de ensino da cidade de Divinópolis no estado de Minas Gerais.
Por outro lado, foram realizadas entrevistas junto a professores de Matemática da rede pública
de ensino sobre o tema abordado por esta dissertação. A sequência didática propõe levar
conhecimentos específicos de Matemática bem como inserir de forma introdutória
construções de algoritmos e fluxogramas, os quais serviram de base para a construção e
compilação de um programa computacional envolvendo um tema matemático. Conforme os
resultados das atividades propostas, os autores puderam verificar que os alunos se mostraram
interessados pelos novos conhecimentos matemáticos e computacionais e não ofereceram
resistência na assimilação dos conteúdos ministrados, pelo qual foi possível responder à
questão levantada de forma assertiva. Entretanto, através das respostas dos professores, notou-
se que ainda é preciso estreitar a distância que há entre as propostas relacionadas com o
Pensamento Computacional, que trouxe a BNCC, e a prática docente. Nesse sentido, destaca-
se que, para que a sua implantação aconteça de forma planejada e isonômica, em que os
alunos e professores possam se apropriar adequadamente desses novos conhecimentos, é
preciso investir, cada vez mais, na capacitação de professores, na reformulação dos currículos
de formação profissional e na conscientização da contrapartida institucional.

Palavras-chave: Pensamento Computacional. Ensino de Matemática. Sequência Didática.
Base Nacional Comum Curricular. Programação Computacional.

ABSTRACT

This paper aims to establish a connection between the insertion on Computational Thinking in
elementary school and the teaching of Mathematics and focuses on answering the following
question: how can Computational Thinking, through the construction of algorithms/flowcharts
and creation of digital systems, contribute to the teaching of Mathematics, enabling the
development of skills and abilities provided for the National Curriculum Common Base
(BNCC)? For this, a didactic sequence, consisted of seven classes, was conceived and applied
in a class of the 6th year of elementary school II of a public school of the state school system
of the city of Divinópolis in the state of Minas Gerais. On the other hand, interviews were
carried out with Mathematics teachers from the public school system on the topic addressed
by this dissertation. The didactic sequence proposes to take specific knowledge of
Mathematics as well as insert
in an introductory way constructions of algorithms and
flowcharts, which serve as a basis for the construction and compilation of a computer program
involving a mathematical theme. According to the results of the proposed activities, the
authors were able to verify that the students were interested in the new mathematical and
computational knowledge and did not offer resistance in the assimilation of the contents
taught, through which it was possible to answer the question raised assertively. However,
through the teachers' answers, it was noted that it is still necessary to narrow the distance
between the proposals related to Computational Thinking, which brought the BNCC, and the
teaching practice. In this sense, it is noteworthy that, for its implementation in a planned and
isonomic way, in which students and teachers can properly appropriate this new knowledge, it
is necessary to invest increasingly in teachers training the reformulation of the vocational
training curricula and raising awareness of the institutional counterpart.

Keywords: Computational Thinking. Teaching Mathematics. Following teaching. National
Curriculum Common Base. Computer Programming.

LISTA DE ABREVIATURAS

Abreviaturas utilizadas neste trabalho:

BNCC

C#

CEFET

CNE

Base Nacional Comum Curricular

C SHARP

Centro Federal Tecnológico

Conselho Nacional de Educação

EDUCOM

Projeto de Educação e Comunicação

ENEM

Exame Nacional do Ensino Médio

EF06MA04

Ensino Fundamental (EF), 6ano, Matemática,

Habilidade 04

EF06MA05

Ensino Fundamental (EF), 6ano, Matemática,

Habilidade 05

EF06MA22

Ensino Fundamental (EF), 6ano, Matemática,

Habilidade 22

EF06MA23

Ensino Fundamental (EF), 6ano, Matemática,

Habilidade 23

EF06MA34

Ensino Fundamental (EF), 6ano, Matemática,

Habilidade 34

EF07MA05

Ensino Fundamental (EF), 7ano, Matemática,

Habilidade 05

EF07MA07

Ensino Fundamental (EF), 7ano, Matemática,

Habilidade 07

EF07MA26

Ensino Fundamental (EF), 7ano, Matemática,

Habilidade 26

EF07MA28

Ensino Fundamental (EF), 7ano, Matemática,

Habilidade 28

EF08MA04

Ensino Fundamental (EF), 8ano, Matemática,

Habilidade 04

EF08MA10

Ensino Fundamental (EF), 8ano, Matemática,

Habilidade 10

EF08MA11

Ensino Fundamental (EF), 8ano, Matemática,

Habilidade 11

EF08MA16

Ensino Fundamental (EF), 8ano, Matemática,

Habilidade 16

EF09MA15

Ensino Fundamental (EF), 9ano, Matemática,

Habilidade 15

EM13MAT315

Ensino Médio (EM), 1 ao 3ano, Matemática,

Habilidade 315

EM13MAT405

Ensino Médio (EM), 1 ao 3ano, Matemática,

LDB

MEC

NEM

PNLD

SENAI

TI

UFMG

VS22

Habilidade 405

Lei de Diretrizes e Bases

Ministério da Educação

Novo Ensino Médio

Programa Nacional de Livros Didáticos

Serviço Nacional das Indústrias

Tecnologia da Informação

Universidade Federal de Minas Gerais

Visual Studio 2022

LISTAS DE FIGURAS/ILUSTRAÇÕES

e

2.9

2.8

2.7

2.6

2.5

suas

2.3
2.4

2.1
2.2

Desenho da máquina analítica de Babbage feito por Lovelace..............................
Exemplos de conversão de número natural para número binário (A) e de
conversão de número binário para número natural (B) que aparecem em livros
didáticos utilizados em escolas particulares que não seguiram ao estipulado
pelo PNLD.............................................................................................................
Quadro exemplificando o Pensamento Computacional ........................................
Quadro com unidades temáticas, objetos de conhecimento e habilidades do
Pensamento Computacional para alunos do 6º ano do ensino fundamental
II.............................................................................................................................
Quadro com unidades temáticas, objetos de conhecimento e habilidades do
Pensamento Computacional para alunos do 7º ano do ensino fundamental
II.............................................................................................................................
Quadro com unidades temáticas, objetos de conhecimento e habilidades do
Pensamento Computacional para alunos do 8º ano do ensino fundamental
II.............................................................................................................................
Quadro com unidades temáticas, objetos de conhecimento e habilidades do
Pensamento Computacional para alunos do 9º ano do ensino fundamental
II.............................................................................................................................
Quadro resumido que relaciona o Pensamento Computacional e o uso de
tecnologias digitais na
tecnologias no
área de Matemática
NEM......................................................................................................................
Quadro com as competências específicas e habilidades que relacionam o
Pensamento Computacional e o uso de tecnologias digitais na área de
Matemática e suas tecnologias no NEM................................................................
Fluxograma “Bora tomar um cafezin mineirin?” ..................................................
ícones e uso de algumas simbologias usadas em
Quadro com nomes,
fluxogramas de processo........................................................................................
Representação do algoritmo da divisão..................................................................
Quadro com a aplicação do critério de divisibilidade por 2, dado pela Definição
3.3...........................................................................................................................
Representação de um fluxograma com os critérios de divisibilidade por 2, de
acordo com a Definição 3.3....................................................................................
Representação de um fluxograma com os critérios de divisibilidade por 6...........
Quadro para realização da Atividade 2, com a aplicação do critério de
divisibilidade por 2 e 3...........................................................................................
Tela inicial do site Visual Studio 2022..................................................................
Tela inicial do site Visual Studio 2022, indicando qual versão do programa
baixar (seta amarela)..............................................................................................
Tela do site Visual Studio 2022 após o download do programa e indicação de
onde o arquivo se encontra (seta amarela).............................................................
Tela do site Visual Studio 2022 após o download do programa e indicação de
como proceder para instalação do programa (seta amarela) .................................
Exemplos de aplicações, avanços e a importância da programação......................
3.12
3.13 Quadro com termos técnicos de programação e seus significados........................
3.14 Quadro com termos de ferramentas de programação e seus significados..............
3.15 Quadro com conectivos lógicos e operadores utilizados na linguagem de
programação C#......................................................................................................
3.16 Quadro com alguns exemplos de conectivos lógicos e estruturas de repetição

3.6
3.7

3.3
3.4

3.8
3.9

3.1
3.2

3.10

3.11

3.5

22

24
31

36

37

38

39

40

42
48

49
51

52

53
59

60
67

67

68

69
72
73
74

75

6,

6,

4.5

4.4

4.3

4.2

4.1

por

por

pelo

3.23

3.19

realizada

atividade

divisíveis

divisíveis

utilizados na linguagem de programação C#.........................................................
3.17 Criando um novo projeto no VS22........................................................................
Tela do programa VS22 e indicação de como proceder para criar um projeto
3.18
(seta amarela).........................................................................................................
Tela do computador mostrando “Meu primeiro programa” no VS22 (print da
tela da atividade realizada pelo grupo B)...............................................................
3.20 Quadro com passo a passo para criar “Meu primeiro programa”..........................
criar um sistema digital/programa que
3.21 Algoritmo computacional para
identifique se um número é “Par ou Ímpar” (print da tela do grupo D)................
3.22 Quadro com passo a passo para criar um sistema digital/programa que
identifique se um número é “Par ou Ímpar”...........................................................
Figura com cabeçalho contendo informações do questionário respondido pelos
professores e perguntas sobre identificação pessoal e da escola que lecionam e
anos de experiência profissional............................................................................
3.24 Algoritmo ou “passo a passo” para transformar dízimas periódicas compostas
por anti-período em frações geratrizes...................................................................
Fluxograma de processo com os critérios de divisibilidade por 2, realizado pelo
aluno B2.................................................................................................................
Fluxograma de processo com os critérios de divisibilidade por 2, realizado à
mão pelo aluno C3..................................................................................................
Números
aluno
C4...........................................................................................................................
Números
aluno
A3...........................................................................................................................
Números divisíveis por 2, por 3 e, simultaneamente, por 2 e 3, divisíveis
também
aluno
B4...........................................................................................................................
Números divisíveis por 2, por 3 e, simultaneamente, por 2 e 3, divisíveis
também por 6, atividade realizada pelo aluno E2..................................................
Trabalho realizado pelo grupo C: “Algoritmo com descrição narrativa da
divisibilidade de um número natural por 7”...........................................................
Trabalho realizado pelo Grupo C: “Algoritmo com descrição narrativa da
divisibilidade de um número natural por 7”...........................................................
Representação de um fluxograma com os critérios de divisibilidade por 7,
atividade realizada pelo Grupo C...........................................................................
seu nome?” (16
Percentual de respostas para a pergunta 1: “Qual
respostas)................................................................................................................
Percentual de respostas para a pergunta 2: “Você já teve contato com
algoritmos/fluxogramas?” (16 respostas) ..............................................................
“Sobre o Pensamento
respostas para
Percentual de
Computacional,
já havia pensado no tema? (Como são programados os
computadores e outros)?” (16 respostas) ..............................................................
Percentual de respostas para a pergunta 4: “Como você avalia as aulas de
Matemática
(16
respostas) ...............................................................................................................
Percentual de respostas para a pergunta 5: “Você acha que o uso de algoritmos
e fluxogramas nas aulas contribuíram para o seu entendimento do Pensamento
Computacional?” (16 respostas) ............................................................................
4.15 Respostas para a pergunta 6: “De todas as atividades que foram desenvolvidas
nas aulas, qual você gostou mais?” (16 respostas) ................................................

a pergunta 3:

fluxogramas?”

construção

algoritmos

atividade

atividade

realizada

realizada

4.10

4.11

4.12

4.13

4.14

pelo

pelo

por

4.6

4.7

4.8

4.9

na

de

6,

e

76
79

80

81
81

85

86

90

92

96

96

98

98

100

101

102

102

103

104

105

105

106

107

108

o

de

na

do

usa

que

qual

4.28

4.17

grau

Será

tema

sobre

lógica

4.29
4.30

importância

implantada?

4.20
4.21
4.22
4.23
4.24
4.25

4.16 Respostas para a pergunta 7: “Qual(is) a(s) maior(es) dificuldade(s) que você
encontrou para realizar as atividades?” (16 respostas)...........................................
Levantamento
(16
respostas) ...............................................................................................................
Investigação sobre jogos e programação realizada pelo grupo B..........................
4.18
4.19 Atividade realizada pelo grupo A, “Pesquisar sobre o algoritmo de busca do
conhecimentos
Google,
matemáticos? ........................................................................................................
Pesquisa realizada e registrada pelo Grupo E........................................................
Trabalho realizado pelo Grupo A...........................................................................
Investigação realizada pelo Grupo C.....................................................................
Investigação realizada pelo Grupo E......................................................................
Pesquisa e registro do Grupo D..............................................................................
Tela do computador mostrando “Meu primeiro programa” no VS22, realizado
pelo Grupo B..........................................................................................................
4.26 Compilação no modo console do VS22, print da tela do computador do Grupo
A.............................................................................................................................
4.27 Algoritmo computacional sobre paridade de um número natural, print da tela do
Grupo D..................................................................................................................
Impressão da compilação do programa do Grupo E, para o número, 121,
inserido...................................................................................................................
Print da tela do Grupo B para o número, 125636, inserido....................................
Percentual de respostas para a Pergunta 1: “Há quanto tempo você leciona
Matemática
(41
respostas) ...............................................................................................................
Percentual de respostas para a pergunta 2: “Você conhece e domina ferramentas
de tecnologias? (Aplicativos, softwares e/ou programas para uso em sala de
aula)” (41 respostas) ..............................................................................................
Percentual de respostas para a pergunta 5: “No livro didático que você utiliza
nas aulas, você já notou algum fluxograma/algoritmo parecido com o Figura
2.33?” (41 respostas) ............................................................................................
Percentual de respostas para a pergunta 7: “Qual seria o seu grau de dificuldade
para completar o algoritmo que transforma dízimas periódicas em suas frações
geratrizes?” (29 respostas) ..................................................................................
Percentual de respostas para a pergunta 8: Você conhece o termo Pensamento
(41
Computacional
respostas) ...............................................................................................................
Percentual de respostas para a pergunta 9: “Já participou de cursos de
aperfeiçoamento ou alguma outra formação para lidar com o tema Pensamento
Computacional ?” (41 respostas) ...........................................................................
Percentual de respostas para a pergunta 10: “Somente a consulta à BNCC 2018
pode lhe oferecer suporte para desenvolver o Pensamento Computacional nas
aulas de Matemática?” (41 respostas) ..................................................................
Percentual de respostas para a pergunta 11: “Na sua escola, ou nas escolas,
onde você leciona:” (41 respostas) .......................................................................
Percentual de respostas para a pergunta 12: “Após a confecção de
algoritmos/fluxogramas feitos à mão em aula com os alunos, seria possível criar
algoritmos de resoluções de situações/problemas matemáticos no computador
ou celular? (41 respostas) .....................................................................................
4.39 Quadro com as respostas dadas pelos professores para a Pergunta 13..................

em vigor

conforme

ensino?”

BNCC,

pública

básica

2018?

desde

4.37

4.38

4.36

4.35

4.34

4.33

4.31

4.32

rede

de

109

109
111

112
113
113
114
115
116

117

118

119

120
120

121

122

123

124

125

125

126

127

128
128

SUMÁRIO

1.

INTRODUÇÃO
1.1 Um pouco sobre mim.......................................................................................

1.2

Justificativa e motivações.................................................................................

2. FUNDAMENTAÇÃO TEÓRICA

2.1 Breve histórico sobre a noção de algoritmo e o desenvolvimento de
tecnologias na educação brasileira...................................................................
2.2 Definição de Pensamento Computacional........................................................

2.3 Pensamento Computacional na BNCC 2018....................................................

2.3.1

2.3.2

do

Pensamento Computacional

a
Habilidades
BNCC.................................................................................................
O novo ensino médio (NEM).............................................................

segundo

3. PROPOSTAS E PERSPECTIVAS

SOBRE A INSERÇÃO DO
PENSAMENTO COMPUTACIONAL NAS AULAS DE MATEMÁTICA
DO ENSINO BÁSICO
3.1 Proposta de sequência didática.........................................................................
Plano das três primeiras aulas da sequência didática.........................
Aula 1..............................................................................
3.1.1.1
Aula 2..............................................................................
3.1.1.2

3.1.1

3.1.1.3

3.1.1.4

Aula 3..............................................................................

Avaliação realizada pelos alunos das aulas 1,2 e 3.........

3.1.2

Plano das quatro aulas sobre Programação Computacional...............

3.1.2.1

3.1.2.2

3.1.2.3

Aula 4..............................................................................

Aula 5..............................................................................

Aulas 6 e 7.......................................................................

3.2 Percepções de professores de Matemática sobre a inserção do Pensamento
Computacional nas aulas de Matemática.........................................................

4. RESULTADOS DA APLICAÇÃO DA SEQUÊNCIA DIDÁTICA E AS
PERCEPÇÕES DE PROFESSORES DE MATEMÁTICA SOBRE A
INSERÇÃO DO PENSAMENTO COMPUTACIONAL
4.1 Resultados da aplicação da sequência didática proposta..................................
Resultados da aplicação das Aulas 1, 2 e 3........................................

4.1.1

15

15

17

22

22

26

32

34

39

43
43
44
47

54

61

63

63

69

78

83

89

94
94
94

4.1.1.1
4.1.1.2
4.1.1.3

Resultados da aplicação da Aula 1..................................
Resultados da aplicação da Aula 2..................................
Resultados da aplicação da Aula 3..................................
4.2 Resultados da pesquisa junto aos alunos participantes das Aulas 1, 2 e 3 da
sequência didática proposta..............................................................................
4.3 Resultados da aplicação das sobre a Programação Computacional.................
Resultados da aplicação da Aula 4.....................................................
Resultados da aplicação da Aula 5.....................................................
Resultados da aplicação das Aulas 6 e 7............................................
4.4 Resultados da pesquisa junto aos professores de Matemática sobre a
percepção quanto à Inserção do Pensamento Computacional..........................

4.3.1
4.3.2
4.3.3

5. CONSIDERAÇÕES FINAIS

REFERÊNCIAS BIBLIOGRÁFICAS

94
97
101

104
110
110
117
118

121

130
135

15

1. INTRODUÇÃO

1.1 Um pouco sobre mim

Desde criança me encantava com a Matemática, com a satisfação e o contentamento

com cada resposta correta nos cálculos matemáticos. Sou filho de serralheiro (profissional que

fabrica portas, janelas e estruturas metálicas soldáveis etc.) e me encantava com as formas

geométricas muito comuns às construções realizadas na oficina de meu pai. A Matemática

que me foi ofertada, infelizmente, na minha escolarização básica, foram, simplesmente,

cálculos sem muito contexto ou raciocínio. Os muitos exercícios de calcule ou resolva, por

mais que não fizessem nenhum sentido com a realidade, me faziam bem de certa maneira,

uma ciência exata que me proporcionava certo prazer e de tanto resolva e calcule, acabei

criando o gosto.

A Matemática atualmente ensinada para os alunos do ensino básico, fundamental ou

de nível médio, permite uma correlação com o cotidiano e proporciona ao aluno pensar

Matemática, que nos contextos e situações-problema, ele não seja apenas instigado a fazer

somente “contas”, mas a modelar uma situação-problema e, enfim, equacionar, conjecturar e

solucionar tal situação. A minha experiência com a Matemática durante a minha escolarização

foi bem distante disso. Durante o fundamental I e II, numa pequena cidade do interior de

Minas Gerais, tive a sorte de ter a mesma professora de Matemática e português do 1º ao 5º

ano do fundamental I, e uma outra professora de Matemática e ciências do 6º ao 9º ano do

fundamental II. Naquela época era muito comum ter poucos professores com formação

específica, e os poucos que existiam não gostavam de habitar cidades bem pequenas. Mesmo

assim, me sentia privilegiado, pois as duas ensinavam Matemática com “brilhos nos olhos”,

dava para sentir que, o que elas faziam não era somente pelo salário, mas sim pelo amor à

profissão e a responsabilidade de ensinar com sentimento.

Os anos foram passando e a vontade e curiosidade eram tamanhas que, tudo que eu

podia desmontava para entender o funcionamento e criava habilidades em remontagem dos

meus objetos, ora desmontados. Fui criado em família muito humilde e nunca pude sonhar

demais, sonhar “me custava caro”. Época difícil, pois meu pai acreditava que pobre não podia

estudar e sim trabalhar para ajudar no sustento do lar. Desde os 6 anos de idade, me recordo

de chegar da escola estadual que estudava, realizava a tarefa que os professores mandavam

como atividade complementar para casa, almoçava, e em seguida ia para a serralheria de

minha família para auxiliar no que fosse preciso, mesmo com tão pouca idade.

16

Como a curiosidade era tamanha e tudo o que via eu queria entender o funcionamento,

surgiu o desejo ou o sonho de fazer engenharia. Não sei recordar ao certo quando isso ocorreu,

mas eu sei que a vontade e o amor pelas exatas veio da admiração daquelas professoras da

minha escolarização básica, e não pude nem pensar na hipótese de tentar realizá-lo. Fiz um

curso de mecânica geral concomitante ao ensino médio no SENAI e não tive coragem de

enfrentar um vestibular numa universidade federal de ensino. Tendo em vista que a base que a

escola pública me ofereceu foi muito insuficiente para concorrer com alunos de colégios

particulares. Na época, as universidades públicas eram ramificações dos colégios particulares

e não existiam políticas de reservas de cotas. Confrontei meu pai e acabei me inscrevendo

num vestibular de licenciatura em Matemática perto da cidade onde eu residia, o curso era

noturno que dava para conciliar o trabalho e os estudos. Não era o tão sonhado curso de

engenharia, mas eu já estava muito feliz só pelo fato de ser parte de uma Universidade e

descobrindo a licenciatura.

O curso de Matemática despertou em mim algo que eu nunca havia pensado, cheguei a

pegar monitorias de cálculos na graduação e percebi que eu levava jeito para ensinar e que eu

tinha aquele mesmo “brilhos nos olhos” das minhas queridas professoras da minha

escolarização. Fiz uma pós-graduação, agora sim numa instituição federal, a UFMG

(Universidade Federal de Minas Gerais), uma pós-graduação presencial na Educação de

Jovens e Adultos com Ênfase nas Juventudes, com 400 horas de carga horária presencial. Um

curso complexo e rico de diversidades culturais e étnico-raciais. Logo, após a conclusão da

pós-graduação, participei de um processo seletivo para professor substituto no CEFET-MG

campus V - Divinópolis e fui selecionado. No CEFET-MG pude lecionar no ensino

médio/técnico e no curso de engenharia mecatrônica. Como não tinha experiência alguma

como professor de ensino médio e muito menos de ensino superior, tive que me esforçar e

estudar muito para lograr êxito nessa empreitada, sendo dois anos de muito aprendizado.

Depois de ter trabalhado no CEFET-MG, fui convidado a lecionar nos melhores e mais

renomados colégios particulares da minha cidade. Graças a oportunidade que me foi dada e as

minhas várias horas de dedicação e estudos, me tornei o profissional que sou hoje.

Fiz minha carreira como professor de Matemática de ensino particular e público da

educação básica em Divinópolis, cidade que resido atualmente. Há alguns anos abri um

pequeno empreendimento que oferece preparatórios para concursos diversos, PRÉ-CEFET,

PRÉ-ENEM, aulas particulares de Matemática/geometria/cálculo.

17

Em julho de 2017, fui estudar na Bélgica, mais precisamente na capital Bruxelas, com

o desejo de cursar um mestrado por lá, mas a avaliação de proficiência no francês não

permitiu que eu já fosse com o visto de estudante. Fui, aprendi o idioma e, em 4 meses

consegui ser aprovado na avaliação de proficiência em francês, mas conseguir o visto já

estando por lá não era tão simples. O desejo do fazer um mestrado no exterior foi frustrado e

acabei retornando ao Brasil em março de 2018.

1.2 Justificativa e motivações

Na “era digital” que vivenciamos, faz-se necessário e importante explanar um pouco

sobre o “Conceito Educação 4.0”, que reúne uma série de inovações que estão mudando a

forma como as instituições utilizam processos automatizados para pagar contas, presença

constante de robôs e uso de inteligência artificial, armazenamento de conteúdo na nuvem,

acessível em qualquer lugar do mundo. Antes de falar especificamente sobre a educação 4.0,

vamos fazer uma reflexão: você percebeu que a tecnologia se tornou um aspecto do nosso

cotidiano em quase todos os momentos nas últimas duas décadas?

Essa “invasão” de ferramentas tecnológicas é resultado do processo de uma nova fase

da revolução industrial, que, segundo o economista alemão Klaus Schwab, é conhecida como

quarta revolução industrial ou indústria 4.0. Após uma nova versão da revolução industrial,

que exigiu de todos nós o desenvolvimento de novas habilidades e capacidades tecnológicas,

veio a revolução educacional. Em sua versão 4.0, a educação reúne uma série de inovações

muito mais alinhadas ao aluno do século 21, que precisa ser desafiado para aprender.

A proposta contrasta fortemente com o modelo educacional dos anos 50, colocando

carteiras, giz,

lousas e figuras de professores, não mais no centro do processo de

aprendizagem. A premissa da educação 4.0 é fornecer aprendizado envolvente usando uma

abordagem ativa do aluno. Por meio dele, os alunos deixam de absorver passivamente o

conhecimento e são constantemente instigados por seus professores – que exercem o papel de

mentores – para encontrar respostas e resolver problemas. Na educação 4.0, surgiu também o

conceito de aprender fazendo. A ideia que ele teve foi que o aprendizado acontece de forma

mais rápida e rica quando acontece por meio de experiências práticas e atividades chamadas

hands-on. Melhor ainda se acontecerem em makerspace, outro conceito inovador na área da

educação que são locais destinados para a explorar ideias, aprender habilidades técnicas e

18

criar produtos combinando tecnologias digitais e físicas (Sheridan, 2014), geralmente, os

projetos ali desenvolvidos são de natureza multidisciplinar (Castilho et. al, 2018).

Jogos, aplicativos e softwares podem ser ótimas ferramentas, assim como impressoras

3D e computadores. Mas, as atividades “práticas” são projetadas para tornar o aprendizado

mais significativo para os alunos, e isso pode ser feito até com recicláveis e sucata. Nesse tipo

de exercício, a chave é o processo de construção e não necessariamente o produto.

O currículo também está recebendo algum tipo de atualização com a educação 4.0,

tornando-se mais horizontais, eliminando a ideia de disciplinas que são ofertadas de forma

isolada sem que haja integração com as demais. Afinal, o conhecimento é construído de forma

integrada. O professor se torna coadjuvante e intermediador, nesse modelo, o aluno é o

protagonista do processo ensino-aprendizagem.

Uma educação para esse novo mundo precisa estar alinhada com a realidade, como é o

conceito defendido pelo filósofo John Dewey, de aprendizagem ativa, que esteja inserida no

contexto e na realidade social que a escola e/ou alunos estão inseridos, além disso, o aluno

precisa cooperar e agir pro-ativamente. A verdadeira educação baseia-se mais na

interdependência do conhecimento, que orienta o aluno a aprender, respeitando suas próprias

formas de internalizar e aplicar a informação, do que as formas lineares e impessoais que a

educação tradicional promove. Neste caso, dada a necessidade atual de formar pessoas para

pensar por si mesmas, para gerar conhecimento e resolver problemas complexos, como é

tendência em uma sociedade democrática.

Usar a teoria e os elementos aplicados em jogos para atingir os objetivos de ensino é

uma das ferramentas mais eficazes, não só para as crianças, pois é um caminho para os alunos

de forma ativa, em busca da construção do próprio conhecimento e da solução para os

problemas apresentados. Além de estimular o desejo de aprender, de se superar através da

recompensa, em cada fase, o conhecimento vai ficando mais coeso, gerando nele não apenas a

aquisição de conteúdos como também fortalecendo a sua autoestima, como pode ser visto, por

exemplo, em da Rosa (2018). A gamificação (metodologias ativas/jogos) promove autonomia

e resgata o prazer da jornada de aprendizagem, facilitando o percurso formativo. O termo

‘globalização 5G’ aponta para dois sentidos na educação: o primeiro é a metodologia, que

contempla uma visão integrada do processo de ensino-aprendizagem e o segundo diz respeito

19

ao processo de expansão econômica, política, cultural, de nível mundial, enfatizando a forma

como indivíduos e sociedades são afetados.

Criador de novas tecnologias – O evento mais revolucionário na educação é o uso de

computadores, que ajudam professores e alunos a processar o conteúdo e facilitar o

aprendizado. Assim, à medida que as escolas desenvolvem indivíduos que podem inovar e

criar, é esperado uma melhoria na geração de novas tecnologias. Além disso, a fronteira do

conhecimento expandiu-se à medida que a tecnologia é muito utilizada em pesquisas e

laboratórios. Integrar esses avanços é urgente e necessário, e é preciso unir forças para que a

tecnologia não seja tão inacessível como é hoje, por exemplo, para instituições de ensino e

toda a população sem acesso à internet.

Contudo, em relação ao Pensamento Computacional como metodologia de ensino, já é

possível encontrar na literatura especializada os seguintes trabalhos:

- “O Pensamento Computacional com o ensino de Matemática na educação básica,

com o objetivo de nortear educadores e escolas na formulação de seus currículos, sendo um

referencial, que aponta em quais habilidades da BNCC é possível inserir habilidades do

Pensamento Computacional”, do professor Leonardo Cintra Lopes da Silva;

- “O Pensamento Computacional

no

ensino

básico:

potencialidades

de

desenvolvimento com o uso do Scratch,” do professor Vinícius Fernandes Moretti;

- “O Pensamento Computacional, uma revisão bibliográfica”, Desenvolvido no

âmbito do projeto UFRGS/MEC – Avaliação de tecnologias educacionais com a participação

direta de: Rosa Maria Vicari, Álvaro Moreira, Paulo Blauth Menezes e com a colaboração de

Crediné Silva de Menezes Daltro Nunes e Maria Aparecida C. Livi;

- “O computador na escola, a introdução à integração”, de Pochon e Blanchet (1997),

entre outros.

Com base em um entrelace entre esses temas tão importantes e atuais: “Educação 4.0”,

“O novo ensino médio”, “A geração 5G e suas iterações” e a nova BNCC colocando a cargo

da Matemática a implementação e desenvolvimento do Pensamento Computacional, surgiu:

“A Inserção do Pensamento Computacional nas Aulas de Matemática no Ensino Básico”,

tema do presente trabalho. Ele tem como propósito contribuir para o ensino, implementação e

desenvolvimento da construção do conhecimento sobre o assunto. O conhecimento adquirido

20

durante capacitações e formações continuadas de professores em relação ao Pensamento

Computacional, nos trouxe reflexões e os seguintes questionamentos:

Por se tratar de um tema novo é importante salientar que, aos poucos, o sistema de

ensino tem se modernizado: Será que os professores de Matemática da educação básica das

escolas brasileiras farão cursos de aperfeiçoamento ou alguma outra formação para lidar

com o tema?

Com a implementação da nova Base Nacional Comum Curricular (BNCC), o sistema

tem sido melhorado e estruturado, entretanto: Será possível pensar que, somente consultar o

texto base da BNCC, serve como suporte ao professor para desenvolver o Pensamento

Computacional nas aulas de Matemática? O professor de Matemática conhece sobre o

Pensamento Computacional? Domina ferramentas de tecnologias? As escolas de educação

básica e públicas de ensino, tem espaços próprios e/ou máquinas disponíveis para criar

sistemas digitais ou dar o suporte para o desenvolvimento e prática do Pensamento

Computacional? Como os cursos de licenciaturas em Matemática, podem desenvolver

mecanismos para expor os futuros professores, em formação, a construção e compreensão do

Pensamento Computacional? Como desenvolver a base de conhecimento de professores em

serviço, para que eles possam fornecer experiências de Pensamento Computacional

relevantes, envolventes e significativas para seus alunos?

Em vista da quantidade de questionamentos acerca deste tema, gostaria que este

trabalho ajudasse a responder à seguinte interrogante:

Como inserir o Pensamento Computacional, com construções de algoritmos,

fluxogramas e criações de sistemas digitais nas aulas de Matemática no ensino básico?

Este trabalho é organizado e estruturado em 4 Capítulos, sendo o Capítulo 1 -

Introdução, dividida em: um pouco sobre o autor, Justificativa e motivações; Capítulo 2 -

Fundamentação teórica, e foi subdividido nos seguintes: Breve histórico sobre a noção de

algoritmo e o desenvolvimento das tecnologias na educação brasileira, Definição do

Pensamento Computacional, Pensamento Computacional na BNCC e que foram subdivididos

nos subtópicos: Habilidades do Pensamento Computacional conforme o texto da BNCC e O

novo ensino médio (NEM). Capítulo 3 - Proposta de sequência didática, envolvendo a

teoria, prática e inserção do Pensamento Computacional em uma turma do 6º ano do ensino

fundamental II e avaliação junto aos alunos participantes das Aulas 1, 2 e 3. Capítulo 4 -

21

Resultados: traz os resultados da aplicação da sequência didática proposta e a percepção dos

professores de Matemática quanto ao Pensamento Computacional. O Capítulo 5 é dedicado

às Considerações finais e finalmente as Referências Bibliográficas.

22

2. FUNDAMENTAÇÃO TEÓRICA

2.1 Breve histórico sobre a noção de algoritmo e o desenvolvimento de tecnologias

na educação brasileira

Historicamente, o mundo da ciência e da tecnologia fora dominado por estudiosos e

profissionais do gênero masculino. Entretanto,

a

criadora do primeiro algoritmo

computacional, foi a Matemática Britânica Ada Lovelace, ainda no século XIX, entre 1842 e

1843 como pode ser encontrado, por exemplo, em Ibaldo, A., & Schwantes, C. (2017). Ela

traduziu um artigo italiano sobre o motor e complementou o estudo com um conjunto de

observações de sua autoria, criando o primeiro algoritmo para ser processado por uma

máquina, sendo a pioneira nesse assunto (Figura 2.1).

Figura 2.1 - Desenho da máquina analítica de Babbage feito por
Lovelace.

Fonte: Reprodução/Computer History Museum.

Ada Lovelace estava muito à frente de seu tempo quando percebeu o que um

algoritmo era capaz de fazer. Nossa vida não seria repleta de tecnologias e smartphones, por

exemplo, se Ada não tivesse sido tão incrível na criação do primeiro algoritmo da história que

permitiu que, novos cientistas aprimorassem e criassem tecnologias. Além disso, ela

desenvolveu uma visão sobre a capacidade dos computadores conseguirem realizar muito

mais além de meros cálculos, em uma época em que todos os matemáticos estavam focados

nesse tipo de ação (O’TOOLE, 1992).

23

“Lovelace trabalhou com o cientista Charles

Babbage, participando de seu projeto sobre a máquina

analítica - evolução da máquina diferencial (que foi criada

para executar e imprimir cálculos matemáticos). A máquina

analítica foi a primeira máquina da história que pode ser

programada para executar comandos de qualquer tipo, mas

a jovem cientista percebeu que a máquina era capaz de

fazer muito mais do que o seu criador

imaginava

(O’TOOLEe, 1992)”.

Alan Turing, em 1953, cem anos após a morte de Ada, fez referência às notas de Ada

sobre a máquina analítica do engenheiro Charles Babbage, que inventou o primeiro

equipamento considerado um computador mecânico, ainda no século XIX, que ficaram

marcadas como a primeira descrição de um computador e de um software. Turing,

popularmente considerado como “O pai da Programação moderna”, é também conhecido por

seu pioneirismo na Programação em si; e foi um matemático e cientista da Computação

britânico que fez inferência sobre a imensa colaboração de Ada para o “início da era

tecnológica”. Ele também foi o responsável por

formalizar o conceito de algoritmo

desenvolvido por Ada.

Um algoritmo é uma sequência finita de regras a serem aplicadas em uma determinada

ordem para um número finito de dados para chegar com certeza (ou seja, sem indeterminação

ou ambiguidade), em um número finito de etapas, em um determinado resultado e que

independa dos dados (BOUVIER, et.al., 2005). A noção de algoritmo não é intrínseca à

Ciência da Computação, à qual tem origem na Matemática e está historicamente ligada a

manipulações numéricas na numeração decimal (adição, subtração, busca de divisores, entre

outros).

A palavra algoritmo vem da latinização do nome do matemático Al Khawarizmi, a

quem devemos a introdução do cálculo decimal na Europa, incluindo métodos de cálculo

agora chamados de algoritmos de adição, subtração ou divisão. Ele também é o primeiro, em

uma obra cujo título dará origem à palavra "álgebra", tendo desenvolvido uma classificação

de métodos gerais de resolução de equações quadráticas, chamados de algoritmos de

resolução, que descritos em linguagem natural e a maioria dos quais eram conhecidos dos

babilônicos ou dados por Euclides (ROSHDI, 1997). Em seu sentido moderno, um algoritmo

24

pode ser escrito em linguagem natural ou codificado em uma linguagem de Programação. Ele,

então, dá à luz a um programa, executável por um computador.

Nos últimos 70 anos, o desenvolvimento de novas tecnologias e novas máquinas,

foram responsáveis por mudanças na atualidade e é inegável a presença da tecnologia no

mundo contemporâneo em que vivemos, mas falar sobre a inserção da informática e

tecnologia na educação brasileira não é tão simples. Nem todo mundo que utiliza

computadores sabe, mas a linguagem binária de 0 e 1 é essencial para que a tecnologia atual

funcione. Os números binários como são usados atualmente,

foram inventados pelo

matemático alemão Gottfried Leibniz, no século XVIII.

Os números binários eram abordados em livros didáticos de Matemática do ensino

fundamental II, mais precisamente, nos livros do 6º ano, de acordo com o Programa Nacional

do Livro Didático (PNLD), por meio de dois blocos de conteúdo da Matemática básica:

grandezas e medidas, e números e operações. O primeiro bloco de conteúdo abordava as

unidades de medida da informática (bytes, megabytes, gigabytes etc.), e o segundo bloco de

conteúdo estudava o sistema de numeração binário (neste, o aluno tinha o primeiro contato

com as sequências binárias/bits). Contudo, nos livros do PNLD atuais, os números binários já

não são mais abordados. A partir da análise de livros didáticos de Matemática que não fazem

parte do PNLD, os temas e assuntos referentes ao estudo de números binários são: unidades

de memória de computadores (byte, megabyte, gigabyte etc.) e conversões entre números

representados nos sistemas de numerações binário e decimal. Estas conversões dão-se por

meio de duas técnicas diferentes: representação de um número natural por meio de uma soma

de potências de base 2 ou por meio de divisões sucessivas por 2, o que fora justamente

suprimido do programa de livros do PNLD do 6º ano do ensino fundamental II. Exemplos que

aparecem em livros didáticos de algumas editoras de escolas particulares estão expostos na

Figura 2.2.

Figura 2.2 - Exemplos de conversão de número natural para número binário (A) e de

conversão de número binário para número natural (B) que aparecem em livros didáticos

utilizados em escolas particulares que não seguiram ao estipulado pelo PNLD.

25

Fonte: TecCiencia (2022). Disponível em: < http://teccienciapiloto.ufba.br/numeros-binarios >

Algumas ferramentas digitais de informação e comunicação, começaram a ser

implementadas no início do século XXI na educação básica brasileira, por meio do uso do

computador em sala de aula e projetores. Depois disso, os professores começaram a

incorporar essas tecnologias como um apoio, como o uso do datashow por exemplo, como um

suporte para implementação de metodologias, para tornar as aulas menos expositivas e um

pouco mais interativas. Para isso, começaram a utilizar ferramentas digitais, como vídeos,

aplicativos, programas, apresentações de slides, uso de músicas e aparelhos multimidiáticos

diversos.

“Na ‘nova era digital’, o hábito de uso de

tecnologias em sala de aula se tornou rotineiro e a inclusão

deste aluno neste contexto se tornou um desafio, não é mais

uma questão de como utilizar a ferramenta, mas de

enfatizar

no

contexto

educacional

o

Pensamento

Computacional, mundialmente discutido a partir de 2006, o

Pensamento Computacional, como uma competência para

que o aluno criasse algoritmos para resoluções de situações-

problemas,

investigações Matemáticas, modelagens

e

criações de sistemas digitais e/ou aplicativos (SILVA,

2019).”

Na década de 80, os países de primeiro mundo conseguiram equipar, adaptar os

espaços físicos e promover uma qualificação de professores para fins de implementação e de

uso adequado de laboratórios de informática, porém, o Pensamento Computacional não fora

incluído em seus currículos escolares. O Brasil começou a implementar a informática e

tecnologia nas escolas pela contribuição de projetos governamentais; no entanto, o acesso era

praticamente restrito aos professores e profissionais da escola, que utilizavam os

computadores para a realização de trabalhos escolares e planejamentos de aula. O acesso aos

26

computadores para os alunos era praticamente inexistente, isto era devido a importância que

se davam aos computadores, ao valor dessas máquinas e à falta de profissional adequado e

qualificado para auxiliar o professor que, em sua maioria, careciam de qualificação. O início

da inserção da informática nas escolas brasileiras, começou pelo projeto EDUCOM que,

praticamente, não foi incorporado pela maioria das escolas do país, por não ter estrutura,

material nem professores capacitados para tal. Esta inclusão envolvia vários setores do

governo e das escolas, e exigia profissionais capacitados que levariam a informação aos

alunos. No entanto, a realidade ainda enfrenta dificuldades com o acesso às tecnologias e

problemas com profissionais não capacitados para a sua utilização (VALENTE e ALMEIDA,

1997).

“A implantação do programa de informática na

educação no Brasil inicia-se com o primeiro e segundo

seminário nacional de informática em educação, realizados

respectivamente na Universidade de Brasília em 1981 e na

Universidade Federal da Bahia em 1982. Esses seminários

estabeleceram um programa de atuação que originou o

EDUCOM e uma sistemática de trabalho diferente de

quaisquer outros programas educacionais iniciados pelo

MEC (Ministério da Educação). No caso da Informática na

educação as decisões e as propostas nunca foram totalmente

centralizadas no MEC. Eram fruto de discussões e

propostas

feitas

pela

comunidade

de

técnicos

e

pesquisadores da área. A função do MEC era a de

acompanhar, viabilizar e implementar essas decisões.

Portanto,

a primeira grande diferença do programa

brasileiro em relação aos outros países, como França e

Estados Unidos, é a questão da descentralização das

políticas. No Brasil

as políticas de

implantação e

desenvolvimento não são produto somente de decisões

governamentais, como na França, nem consequência direta

do mercado como nos Estados Unidos (VALENTE e

ALMEIDA, 1997).”

2.2 Definição do Pensamento Computacional

Neste tópico, exploraremos alguns conceitos sobre a definição do Pensamento

Computacional. A primeira definição para Pensamento Computacional foi proposta por Wing

(2006), que o considera como um conjunto de competências e habilidades atreladas à Ciência

27

da Computação, habilidades estas que os estudantes deveriam incorporar desde os primeiros

anos escolares. Para ela, o Pensamento Computacional é um modo de pensar humano, pois

envolve diversas habilidades, que requer diferentes níveis de abstração, caracterizando a

forma como os seres humanos pensam, diferente das máquinas. Dessa forma, o Pensamento

Computacional não é somente uma habilidade de quem trabalha na área da computação, e sim

uma habilidade intelectual básica do ser humano tais como ler, escrever ou realizar operações

matemáticas. De acordo com Bordini (2016), o Pensamento Computacional possui um

conjunto de habilidades específicas (não limitado somente a elas), como:

- Fazer a formulação de um problema de tal forma que seja possível a sua resolução

através de computadores e outras ferramentas;

- Fazer a organização lógica e a análise de dados;

- Representar dados através de abstrações, modelos ou simulações;

- Automatização de soluções através de algoritmos;

- Identificação, análise e implementação de soluções de forma mais eficiente e eficaz;

- Fazer a generalização e a transferência da forma de resolução para outros problemas.

Essas habilidades são apoiadas e realçadas por uma série de qualidades ou atitudes que

são dimensões essenciais do Pensamento Computacional. Essas qualidades ou atitudes

incluem:

- Confiança em lidar com a complexidade;

- Persistência no trabalho com problemas difíceis;

- Tolerância com ambiguidades;

- Capacidade de lidar com problemas em aberto.

Para Bers (2014), o Pensamento Computacional é a capacidade de se comunicar e

trabalhar com outras pessoas para alcançar um objetivo ou solução comum. Grover e Pea

(2013) chamam atenção para o papel que a abstração toma nas diversas definições de

Pensamento Computacional encontradas na literatura, e concordam com Wing (2010) quando

28

dizem que ela é peça chave para o trato com a complexidade dos problemas. Wing (2006)

define de formas diferentes o termo Pensamento Computacional ao longo de seus trabalhos:

“O Pensamento Computacional envolve a solução

de problemas, o projeto de sistemas e a compreensão do

comportamento

humano,

com base

nos

conceitos

fundamentais da Ciência da Computação. O Pensamento

Computacional inclui uma gama de ferramentas mentais

que refletem a amplitude do campo da Ciência da

Computação (WING, 2006).”

“O Pensamento

Computacional

tem sido

considerado em diversas pesquisas na educação Matemática

como um aliado no processo de mudança na forma como os

conceitos matemáticos

são

ensinados. Além disso,

pesquisas indicam a importância de se desenvolver o

Pensamento Computacional

já

na

educação

básica,

comparando-o a habilidades básicas como ler, escrever e

calcular. Seus defensores, tanto na área da educação quanto

na Ciência da Computação, sugerem a inclusão de um

currículo voltado ao estudo da ciência da computação na

educação básica (WING, 2008).”

Pensamento Computacional é o processo de pensamento envolvido na formulação de

um problema e na expressão de sua(s) solução(ões) de tal forma que um computador –

humano ou máquina – possa efetivamente executá-la(s) (WING, (2014). Aho (2011), define

Pensamento Computacional de maneira semelhante:

“[...] processo de pensamento envolvido na

formulação de problemas, para que suas soluções possam

ser representadas como etapas computacionais e algoritmos

(AHO, 2011, p. 1).”

Analogamente, encontramos uma definição dada por Liukas (2015), na qual o

Pensamento Computacional é algo que as pessoas fazem, não os computadores. Inclui o

pensamento lógico e a capacidade de reconhecer padrões, pensar com algoritmos, decompor

um problema e abstrair um problema.

“Pensar nos problemas de uma forma que permita

aos computadores resolvê-los (LIUKAS, 2015, p. 110).”

29

Modeste (2012) admite, no entanto, que o Pensamento Computacional envolve uma

maneira específica de pensar não incluída na Matemática, e que, para compreender todo o seu

significado, precisa-se pensar incluindo e excluindo a Matemática.

“Pensamento Computacional é uma abordagem

particular para os problemas de Matemática (MODESTE,

2012, p. 47).”

“Para compreender é indispensável apreender

simultaneamente os dois pontos de vista, intramatemáticos,

mas também extramatemáticos (MODESTE, 2012, p. 53).”

A ideia de integrar o Pensamento Computacional nas escolas não é nova, Papert (1980)

já defendia a ideia de que:

“Aprender a se comunicar com um computador

pode mudar a forma como as pessoas pensam, favorecendo

um outro tipo de aprendizado. (PAPERT, 1980, p. 6).”

Grover e Pea (2013), por sua vez, consideram que o Pensamento Computacional deve

ser parte conhecimentos que buscamos desenvolver nas crianças por meio de resolução de

problemas do cotidiano. Segundo os autores, se considerarmos que há uma alfabetização

científica essencial para a compreensão do mundo, isso deve incluir o conhecimento do

funcionamento interno dos aplicativos e computadores. Eles defendem a ideia de que essas

habilidades são fundamentais em um mundo digital. Essa também é a ideia defendida por

Romero (2017) quando inclui o Pensamento Computacional nas habilidades do século XXI,

em estreita ligação com criatividade, colaboração e resolução de problemas:

“Já não basta conhecer software de escritório e

saber fazer buscas de informações, mas é necessário atingir

os níveis de aprofundamento e criação de conhecimento e

desenvolver o Pensamento Computacional como nova

alfabetização de conceitualização e de abstração em vários

níveis que resolvam problemas em diferentes disciplinas.

(ROMERO, 2017, p. 24).”

O desenvolvimento do Pensamento Computacional no ensino fundamental e médio,

por meio de Programação e robótica, no entanto, suscita debates acalorados (BARR e

STEFENSON, 2011), concentrando-se, em particular, na natureza do Pensamento

30

Computacional e as ligações que têm com outras disciplinas escolares. Tanto os pesquisadores

em educação, Grover e Pea (2013), quanto os pesquisadores de Ciência da Computação, Barr

e Stephenson (2013), observaram a falta de consenso quanto a uma definição precisa do que é

o Pensamento Computacional e o papel que deve desempenhar na escola. O professor de

Ciência da Computação Hemmendinger (2010) aponta que os elementos que pesquisadores da

Ciência da Computação consideram como constituintes do Pensamento Computacional –

abstração, construção de modelos, status dado aos erros e suas correções, criação e análise de

representações – são, de fato, comuns a muitas disciplinas. Ele conclui que o objetivo do

Pensamento Computacional, não deve ser ensinar a todos a pensar como um cientista da

computação, mas aplicar esses diferentes elementos na resolução de problemas dentro e entre

disciplinas escolares. Assim, a programação torna-se uma atividade-chave na resolução de

problemas.

No que diz respeito ao Pensamento Computacional, a Programação é vista como uma

forma de resolver um problema em vez de aprender uma determinada linguagem ou

ferramenta.

“Uma capacidade de formular problemas e suas

soluções para que sua resolução possa ser realizada por um

agente de processamento automático de informações

(WING, 2011, p. 1).”

No entanto, o Pensamento Computacional não é apenas escrever algoritmos ou

programas (ALA, 2006). Brennan e Resnik (2012), propõem distinguir três dimensões em

Pensamento Computacional: Conceitos

computacionais,

práticas

computacionais

e

perspectivas computacionais. Conceitos informáticos são os conceitos chave na atividade de

Programação. Elas incluem instruções, sequências, loops, paralelismo, condições, eventos,

operadores e dados. Poderíamos adicionar recursão. Práticas de tecnologia da informação (TI)

acompanham qualquer implementação do Pensamento Computacional.

Estas dimensões podem ser resumidas da seguinte forma:

trabalhando de forma

incremental e iterativa, testando e depurando (encontrar e corrigir erros), reutilizar e remixar

(reutilizar após algumas modificações), usar abstração e modularidade (construir o complexo

por montagem de peças simples). Uma prática de computador particularmente interessante em

contexto de ensino é o implementado na atividade de depuração, ou seja, a busca sistemática

de erros. Na Programação, o erro não é considerado como uma falha, mas como uma

31

informação que faz parte do procedimento de resolução (PAPERT, 1988). É raro, de fato, que

um programa funcione na primeira tentativa. Seu desenvolvimento é feito através de uma

série de tentativas, erros e correções. Esta prática constitui um dos critérios de desempenho

para a competência desenvolver programas para resolver problemas simples de Ciências da

Computação e Matemática na faculdade (MESS, 2017). Um resumo sobre o Pensamento

Computacional está exemplificado na Figura 2.3.

Figura 2.3 - Quadro exemplificando o Pensamento Computacional.

Processos e investigações

Estratégias e habilidades

Métodos e práticas

Envolve processos

intelectuais como raciocínio

lógico.

Está associado de forma não

exclusiva aos processos de

determinação, compreensão e

resolução de problemas.

Baseia-se em ferramentas

computacionais, técnicas e

conceitos (ou seja,

decomposição, abstração e

raciocínio algorítmico).

Envolve uma estruturação

Permite a criação de soluções

sistemática e lógica de

que podem ser realizadas de

procedimentos (algoritmos)

forma eficiente por um

para gerar soluções

dispositivo de processamento

automatizáveis

de informação, como um

(programáveis).

computador por exemplo.

Muitas vezes envolve coletar,

organizar (classificar,

agrupar) e analisar dados

(encontrar padrões e

dependências).

Pode levar à criação de

produtos, processos e

sistemas digitais.

Ajuda a desenvolver e manter

habilidades de raciocínio,

como análise, síntese e

avaliação.

Promove o desenvolvimento

de habilidades e

competências globais/do

século XXI, como

pensamento criativo,

pensamento crítico,

colaboração e comunicação.

Fonte: Parlons Sciences (2020). Disponível em: < https://parlonssciences.ca/ressources-

pedagogiques/documents-dinformation/pensee-computationnelle >

Não iremos esgotar a definição do Pensamento Computacional, mas, apesar de não

existir consenso sobre uma definição única para o Pensamento Computacional, seus

32

defensores concordam em afirmar que a educação básica pode e deve usufruir de diversos

benefícios quando articulada a ele, principalmente nas aulas de Matemática.

O termo Pensamento Computacional está começando a entrar nos sistemas

educacionais de todo o mundo , desde o jardim de infância até o ensino médio. É de suma

importância que os professores compreendam o seu significado antes de poderem

incentivar os alunos a aprendê-lo e desenvolvê-lo.

2.3 Pensamento Computacional na BNCC

Neste trabalho será realizada uma reflexão/análise,

investigação e elaboração de

estratégias de inserção e experimentação prática do Pensamento Computacional às aulas de

Matemática da educação básica. Mesmo aparecendo de forma explícita na BNCC, como

exposto nos trechos abaixo, o Pensamento Computacional ainda é um tema novo e apresenta

um vasto questionamento quanto a sua compreensão e inclusão nos currículos escolares. Isto

nos leva a refletir sobre a conceituação clara e objetiva do termo Pensamento Computacional,

seu uso na educação, sua interdisciplinaridade, sua prática em sala de aula, e formação inicial

e continuada de professores. Ressalta-se que a maioria dos sistemas de ensino são tradicionais

e voltados para a transferência de conteúdos, memorização de algoritmos e métodos de

resolução de problemas e um sistema de avaliação quantitativa. Fatos, estes, que se

contrapõem ao ensino do Pensamento Computacional.

“O Pensamento Computacional no contexto em

que este termo é inserido no texto da BNCC, publicada em

2018,

sugere que,

consiste numa

competência

e/ou

habilidade a ser desenvolvida durante o processo de ensino

de

conteúdos da Matemática. Relacionado a

estes

conteúdos, o texto afirma que ao se trabalhar determinados

processos de aprendizagem da Matemática como resolução

de problemas, investigação e modelagem Matemática, cria-

se um ambiente rico para se desenvolver competências

relacionadas ao letramento matemático e também ao

Pensamento Computacional (BARBOSA, 2019).”

“A BNCC em outro trecho afirma que aprender

Álgebra contribui para o desenvolvimento do Pensamento

Computacional nos alunos. Posto desta forma, entende-se

que, assim como as competências gerais deverão ser

33

desenvolvidas

durante

o

processo

de

ensino

das

aprendizagens

essenciais

(conhecimentos,

habilidades,

atitudes, valores), o mesmo se aplica ao Pensamento

Computacional, desde que este também seja concebido de

forma articulada a tais aprendizagens (BARBOSA, 2019).”

Para fins de ilustração, cita-se abaixo a segunda competência geral da educação básica

e a quinta competência específica da área de Matemática (BNCC, 2018):

“Exercitar a curiosidade intelectual […] recorrer à

investigação, a reflexão, a análise crítica, a imaginação e a

criatividade, para investigar causas, elaborar e testar

hipóteses, formular e resolver problemas e criar soluções

(inclusive tecnológicas) com base nos conhecimentos das

diferentes áreas (BNCC, 2018, p.9).”

“Utilizar processos e ferramentas Matemáticas,

inclusive tecnologias digitais disponíveis, para modelar e

resolver problemas cotidianos, sociais e de outras áreas de

conhecimento, validando estratégias e resultados (BNCC,

2018, p. 267).”

No Brasil, o tema de Pensamento Computacional é bem novo e a resolução do

Conselho Nacional de Educação (CNE) sobre a BNCC, publicada no dia 22 de dezembro de

2017, estabelece que as adequações aos currículos deveriam ser realizadas ao longo do ano de

2018 para que, já em 2019, elas chegassem às salas de aula. Assim, cabe ao professor de

Matemática não apenas ensinar o conhecimento matemático (conteúdo), mas também,

desenvolver nos

seus alunos as competências gerais, específicas e o Pensamento

Computacional.

O desafio de introduzir o Pensamento Computacional nas escolas de ensino básico,

não é apenas treinar os programadores do amanhã, mas permitir que todos desenvolvam "uma

atitude e um todo de habilidades” que possam colocar em ação quando confrontados com um

problema a ser resolvido (WING, 2006). Esta forma de abordar a resolução de problemas é

muitas vezes referida como Pensamento Computacional. O conceito de sala de aula invertida

é peça fundamental; o novo ensino médio trata a questão do aluno protagonista e o professor

moderador, na qual o aluno é estimulado/provocado sobre certo conteúdo e, neste instante, é

que os fluxogramas e algoritmos são de suma importância. Os protagonistas (alunos) criam

34

um algoritmo à mão e daí colocam em prática, isto é, utiliza as linguagens de Programação

visual, uma espécie de fluxograma. Ele pode, portanto, se concentrar no algoritmo, que é

construído conectando com os diferentes tipos de linguagem de “algoritmização”.

Além disso, no que diz respeito à codificação e Programação na BNCC,

especificadamente, na 3ª série do ensino médio, propõem aos alunos a "programar os

movimentos de um robô, por exemplo, ou de um personagem em uma tela de um aplicativo

ou programa”, porém não cita os meios e formas/ferramentas que o aluno e o professor terão

para fazê-lo. Não leva em consideração a realidade da escola, do professor e do aluno. Fica

evidente o questionamento: como programar os movimentos de um robô sem ter condições de

estruturas suficientes para tal?

Na sequência didática deste trabalho, no Capítulo 2, uma série de atividades teóricas e

práticas, que levam em consideração a realidade e a estrutura física das instituições de ensino

da educação básica serão propostas, apresentadas e testadas.

2.3.1 Habilidades do Pensamento Computacional segundo a BNCC.

A BNCC já especifica os objetos de conhecimento e habilidades, além de os anos

escolares para desenvolver o Pensamento Computacional. Ele, por sua vez, pode ser

trabalhado de maneira fácil e simples, seja através de estruturas de dados (Programação) ou

via representação gráfica (fluxograma), que são ensinados na área da Matemática e suas

tecnologias. Esta área de conhecimento está centrada em que:

“Os

estudantes

devem utilizar

conceitos,

procedimentos e estratégias não apenas para resolver

problemas, mas também para formulá-los, descrever dados,

selecionar modelos matemáticos

e

desenvolver

o

Pensamento Computacional, por meio da utilização de

diferentes recursos da área (BNCC, 2018).”

Para o ensino de Matemática e suas tecnologias, as habilidades de raciocinar,

representar, comunicar e argumentar, desenvolvidas durante os anos de ensino fundamental

serão aprofundadas e aplicadas à realidade no ensino médio. Mesmo que tenha ocorrido falhas

no processo de ensino e aprendizagem dessas habilidades, elas deverão continuar a serem

estimuladas pois ganharão novas ferramentas para a sua compreensão e aplicação na realidade,

favorecendo a aprendizagem do aluno. Além disso, essas habilidades serão requeridas para o

35

desenvolvimento das competências específicas da área de Matemática e suas tecnologias

(BNCC, 2018).

Essas habilidades são fundamentais para o entendimento e desenvolvimento do

Pensamento Computacional, que é apresentado aos alunos a partir do ensino fundamental,

através da inserção de tecnologias. A seguir, um trecho da BNCC expõe este fato:

“A BNCC propõe que os estudantes utilizem

tecnologias, como calculadoras e planilhas eletrônicas,

desde os anos

iniciais do ensino fundamental. Tal

valorização possibilita que, ao chegarem aos anos finais,

eles possam ser estimulados a desenvolver o Pensamento

Computacional, por meio da interpretação e da elaboração

de fluxogramas e algoritmos.”

A proposta é que os alunos entendam as

situações-problemas matemáticos,

considerando um ponto de vista de como estruturar um fluxograma ou algoritmo explorando

seus aspectos lógicos, avaliando a sua complexidade e encontrando soluções otimizadas

utilizando os recursos disponíveis. Portanto, o Pensamento Computacional envolve um

conjunto de habilidades, como a capacidade de desenvolver e pensar a “algoritmização” de

uma situação-problema.

As competências da BNCC não têm uma ordem preestabelecida. Elas formam um todo

conectado, de modo que o desenvolvimento de uma requer, em determinadas situações, a

mobilização de outras. Cabe observar que essas competências consideram que, além da

cognição, os estudantes devem desenvolver atitudes de autoestima, de perseverança na busca

de soluções e de respeito ao trabalho e às opiniões dos colegas, mantendo predisposição para

realizar ações em grupo.

A seguir, nas Figuras 2.4, 2.5, 2.6 e 2.7, estão dispostos os objetos de conhecimento e

suas habilidades relacionadas com o Pensamento Computacional, e que foram estabelecidas

para os 4 últimos anos do ensino fundamental e para os 3 anos do ensino médio.

36

Figura 2.4 - Quadro com unidades temáticas, objetos de conhecimento e habilidades do

Pensamento Computacional para alunos do 6º ano do ensino fundamental II.

Unidades

temáticas

Números

Objetos de conhecimento

Habilidades

Fluxograma para determinar

(EF06MA04) Construir

algoritmo

em

a paridade de um número

linguagem natural

e

representá-lo

por

natural;

fluxograma que indique a resolução de um

problema simples (por exemplo, se um

número natural qualquer é par).

(EF06MA05) Classificar números naturais

em primos e compostos, estabelecer relações

entre números, expressas pelos termos “é

Múltiplos e divisores de um

múltiplo de”, “é divisor de”, “é fator de”, e

número natural

estabelecer, por meio de

investigações,

Critérios de Divisibilidade por 2, 3, 4, 6, 8,

9 e 10.

(EF06MA22) Utilizar instrumentos, como

réguas e esquadros, ou softwares para

representações

de

retas

paralelas

perpendiculares

e

construção

e

de

quadriláteros, entre outros.

(EF06MA23) Construir

algoritmo

para

resolver situações passo a passo (como na

construção de dobraduras ou na indicação de

deslocamento de um objeto no plano

segundo pontos de referência e distâncias

fornecidas etc.).

(EF06MA34)

Interpretar

e

desenvolver

fluxogramas

simples,

identificando

as

relações entre os objetos representados (por

exemplo, posição de cidades considerando as

Geometria

Construção de retas

paralelas e perpendiculares,

fazendo uso de réguas,

esquadros e softwares

Probabilidade

e estatística

Diferentes tipos de

representação de

informações: gráficos e

37

fluxogramas

estradas que

as unem, hierarquia dos

funcionários de uma empresa etc.).

Fonte: BNCC (2018).

Figura 2.5 - Quadro com unidades temáticas, objetos de conhecimento e habilidades do

Pensamento Computacional para alunos do 7º ano do ensino fundamental II.

Unidades

temáticas

Números

Objetos de conhecimento

Habilidades

Fração e seus significados:

como parte de inteiros,

resultado da divisão, razão e

operador

(EF07MA05) Resolver um mesmo problema

utilizando diferentes algoritmos.

(EF07MA07) Representar por meio de um

fluxograma os passos utilizados para resolver

um grupo de problemas.

(EF07MA26) Descrever, por escrito e por

Triângulos: construção,

meio de um fluxograma, um algoritmo para a

condição de existência e

construção

de

um triângulo

qualquer,

soma das medidas dos

conhecidas as medidas dos três lados.

Geometria

ângulos internos

(EF07MA28) Descrever, por escrito e por

Polígonos regulares:

meio de um fluxograma, um algoritmo para a

quadrado e triângulo

construção de um polígono regular (como

equilátero

quadrado e triângulo equilátero), conhecida a

medida de seu lado.

Fonte: BNCC (2018).

38

Figura 2.6 - Quadro com unidades temáticas, objetos de conhecimento e habilidades do

Pensamento Computacional para alunos do 8º ano do Ensino Fundamental II.

Unidades

temáticas

Objetos de conhecimento

Habilidades

Números

Porcentagens

(EF08MA04)

Resolver

e

elaborar

problemas,

envolvendo

cálculo

porcentagens,

incluindo

o

uso

de

de

tecnologias digitais.

(EF08MA10) Identificar a regularidade

de uma sequência numérica ou figural não

recursiva e construir um algoritmo por

meio de um fluxograma que permita

indicar

os

números

ou

as

figuras

Álgebra

Sequências recursivas e

não recursivas

seguintes.

(EF08MA11) Identificar a regularidade

de uma sequência numérica recursiva e

construir um algoritmo por meio de um

fluxograma

que

permita

indicar

os

números seguintes.

(EF08MA16) Descrever, por escrito e por

meio de um fluxograma, um algoritmo

para a construção de um hexágono regular

de qualquer área, a partir da medida do

ângulo

central

e

da

utilização

de

esquadros e compasso.

Construções geométricas:

Geometria

ângulos de 90°, 60°, 45° e

30° e polígonos regulares

Fonte: BNCC (2018).

39

Figura 2.7 - Quadro com unidades temáticas, os objetos de conhecimento e as habilidades do

Pensamento Computacional para alunos do 9º ano do ensino fundamental II.

Unidades
temáticas

Objetos de conhecimento

Habilidades

(EF09MA15) Descrever, por escrito e por

meio de um fluxograma, um algoritmo para

Geometria

Polígonos regulares

a construção de um polígono regular cuja

medida do lado é conhecida, utilizando

régua e compasso, como também softwares.

Fonte: BNCC (2018).

2.3.2 O novo ensino médio – (NEM)

A BNCC é um documento normativo que assegura os direitos à aprendizagem e ao

desenvolvimento dos alunos em todas as modalidades e anos da educação básica. Ela é a

referência para montagem e adequação dos currículos escolares das redes de ensino das

escolas dos estados, municípios brasileiros e do Distrito Federal, bem como para formação de

professores e avaliação de infraestrutura. Dessa forma, a BNCC visa unificar as políticas

educacionais das três esferas de governo, criando um sistema de ensino nivelado e que garanta

a aprendizagem essencial, o acesso e a permanência do aluno na escola. De acordo com as

diretrizes pedagógicas que embasam a BNCC e conforme a Lei de Diretrizes e Bases da

educação (LDB), o NEM está estruturado em quatro áreas do conhecimento: Linguagem e

suas tecnologias, Matemática e suas tecnologias, Ciências da natureza e suas tecnologias e

Ciências humanas e sociais e suas tecnologias; e cada uma dessas áreas tem suas

competências e habilidades específicas (BNCC, 2018).

O ensino médio é a última etapa da educação básica e uma das mais preocupantes. É

durante o ensino médio que os problemas de defasagem e de aprendizagem do ensino

fundamental tornam-se evidentes, favorecendo a evasão escolar. Outro fator que atrapalha a

continuação do aluno no colégio é o currículo do ensino médio, que tem disciplinas em

excesso, não aborda temas atuais nem prepara o aluno para o mundo e mercado de trabalho.

Como estratégia de adequação e atualização, algumas mudanças foram incorporadas no

ensino médio, por exemplo, a troca do modelo “engessado” de currículo por um mais

abrangente e flexível (Lei nº 13.415/201755, Art. 36). Essa nova estruturação curricular

40

permite a valorização do aluno que passa a ser o protagonista e diversifica os itinerários

formativos, ou seja, permite que o aluno escolha uma ou mais áreas curriculares para se

aprofundar, incluindo a formação técnica profissional. No entanto, faz-se necessário uma

integração entre os currículos escolares, as demandas e as realidades dos jovens, os contextos

nacionais e internacionais (BNCC, 2018).

Em suma, o ensino médio é a continuidade de aprendizagens estabelecidas no ensino

fundamental, tendo o foco na integralidade da Matemática e a sua aplicação na realidade do

aluno. Entretanto, é preciso considerar que os alunos vivenciam realidades diferentes e são

impactados pelos avanços tecnológicos de formas distintas. Nesse contexto de pluralidade, a

inclusão de recursos tecnológicos no ensino de Matemática é importante, uma vez que instiga

as habilidades anteriormente aprendidas e prepara o aluno para absorver o Pensamento

Computacional, conseguindo interpretar e desenvolver algoritmos e fluxogramas (BNCC,

2018). Nas Figura 2.8 e 2.9, podem ser encontrada, em forma resumida, a relação entre

Pensamento Computacional e o uso de tecnologias digitais bem como as competências e

habilidade específicas em Matemática no NEM.

Figura 2.8 - Quadro resumido que relaciona o Pensamento Computacional e o uso de

tecnologias digitais na área de Matemática e suas tecnologias no NEM.

A área de matemática e suas tecnologias:

A BNCC propõe que os estudantes utilizem tecnologias, como calculadoras e planilhas

eletrônicas, desde os anos iniciais do ensino fundamental. Tal valorização possibilita que, ao

chegarem aos anos finais, eles possam ser estimulados a desenvolver o Pensamento

Computacional, por meio da interpretação e da elaboração de algoritmos, incluindo aqueles que

podem ser representados por fluxogramas.

41

Em continuidade a essas aprendizagens, no NEM o foco é a construção de uma visão integrada

da Matemática, aplicada à realidade, em diferentes contextos. Consequentemente, quando a

realidade é a referência, é preciso levar em conta as vivências cotidianas dos estudantes do NEM

– impactados de diferentes maneiras pelos avanços tecnológicos, pelas exigências do mercado de

trabalho, pelos projetos de bem viver dos seus povos, pela potencialidade das mídias sociais,

entre outros. Nesse contexto, destaca-se ainda a importância do recurso a tecnologias digitais e

aplicativos tanto para a investigação Matemática como para dar continuidade ao desenvolvimento

do Pensamento Computacional, iniciado na etapa anterior.

Fonte: BNCC (2018).

42

Figura 2.9 - Quadro com as competências específicas e habilidades que relacionam o

Pensamento Computacional e o uso de tecnologias digitais na área de Matemática e suas

tecnologias no NEM.

Competências específicas de Matemática e suas

tecnologias para o novo ensino médio

Habilidades

Competência específica 3

Utilizar estratégias,

conceitos, definições e

procedimentos matemáticos

para interpretar, construir

(EM13MAT315) Investigar e

modelos e resolver problemas

registrar, por meio de um

em diversos contextos,

fluxograma, quando possível,

analisando a plausibilidade

um algoritmo que resolve um

dos resultados e a adequação

problema.

das soluções propostas, de

modo a construir

argumentação consistente.

Compreender e utilizar, com

flexibilidade e precisão,

(EM13MAT405) Utilizar

diferentes registros de

conceitos iniciais de uma

representação matemáticos

linguagem de Programação

Competência específica 4

(algébrico, geométrico,

na implementação de

estatístico, Computacional

algoritmos escritos em

etc.), na busca de solução e

linguagem corrente e/ou

comunicação de resultados de

Matemática.

problemas.

Fonte: BNCC (2018).

43

3. PROPOSTAS E PERSPECTIVAS SOBRE A INSERÇÃO DO

PENSAMENTO COMPUTACIONAL NAS AULAS DE

MATEMÁTICA NO ENSINO BÁSICO

Ao analisarmos alguns livros didáticos utilizados em escolas da rede pública do estado

de Minas Gerais (livros do PNLD), dos quais podemos citar (GIOVANNI, 2018), (SAMPAIO,

2018), (DANTE, 2018), entre outros, atividades do Pensamento Computacional já permeiam

por todos eles. O livro didático “A Conquista da Matemática – 6º ano”, citado acima, de

(GIOVANNI, 2018), é o livro adotado pela escola que o professor/pesquisador atua. O

capítulo que aborda os conteúdos “Noção de Divisibilidade” e “Critérios de Divisibilidade”, é

o primeiro capítulo que faz inferência, nos objetos dos conhecimentos, à “Fluxograma para

determinar a paridade de um número natural” e nas habilidades específicas da BNCC

correlaciona o Pensamento Computacional:

(EF06MA04)

- Construir algoritmo em

linguagem natural e representá-lo por fluxograma que indique a resolução de um problema

simples (por exemplo, se um número natural qualquer é par) e (EF06MA05) - Classificar

números naturais em primos e compostos, estabelecer relações entre números, expressas pelos

termos “é múltiplo de”, “é divisor de”, “é fator de”, e estabelecer, por meio de investigações,

critérios de divisibilidade por 2, 3, 4, 6, 8, 9 e 10. Neste mesmo exemplar, mais

especificamente, o manual do professor, traz orientações didáticas e sugestões de atividades

voltadas ao professor para iniciar a inserção do Pensamento Computacional nas aulas de

Matemática, tratados com tamanha riqueza de detalhes, motivo fundamental para escolhermos

como proposta da sequência didática. Usaremos algumas sugestões dadas, proposições de

atividades e o utilizaremos como referencial de conteúdo e atividades propostas nesta

sequência didática.

Contudo, este Capítulo abordará 2 partes: i) Proposta de sequência didática (seção

secudária 3.1) e ii) Percepções de professores de Matemática (seção secundária 3.2), sobre a

implementação do Pensamento Computacional.

3.1 Proposta de sequência didática

A sequência didática é um conjunto de conhecimentos ou saberes estruturados pelo

professor, a fim de contribuir para a consecução de um objetivo educacional. Definir um

44

objetivo pedagógico para uma sequência didática significa planejar o que o aprendiz terá que

saber ou saber fazer ao final desta sequência.

Nossa proposta visa introduzir, desenvolver e aplicar o Pensamento Computacional

nas aulas de Matemática de maneira simples e contribuir para que este processo de inserção e

desenvolvimento do Pensamento Computacional, realmente aconteça. Temos o propósito de

levar o conhecimento Matemático através do Pensamento Computacional ou que o

Pensamento Computacional leve ao conhecimento de conteúdos matemáticos. Como já citado,

esta sequência proposta, se inicia de forma bem simples e didática e é direcionada ao primeiro

ano do segundo ciclo do ensino fundamental (alunos do 6º ano) e, ao final desta sequência,

iremos desenvolver sistemas digitais para que possamos elucidar a prática do Pensamento

Computacional.

Nossa sequência didática foi dividida em 2 partes: a) Plano das três primeiras aulas da

sequência didática (seção terciária 3.1.1) e b) Plano de quatro aulas de práticas da sequência

didática (seção terciária 3.1.2), cada aula com duração de 50 minutos. As três primeiras aulas

da primeira parte da presente sequência, abordam o conceito de fluxogramas e algoritmos,

fazem inferências das “Noções de Divisibilidade” e dos “Critérios de Divisibilidade”, com

definições, exemplos e o desenvolvimento das ferramentas do Pensamento Computacional

como facilitador do processo de aprendizagem. As quatro aulas práticas da sequência didática,

segunda parte da sequência, apresenta e elucida o conceito de linguagem e lógica de

programação na prática das construções de seus primeiros sistemas digitais no VISUAL

STUDIO 2022 (VS22). Este programa foi escolhido por ter uma versão gratuita, ser adaptável,

com uma linguagem fácil de ser explicada pelo professor e de ser entendida pelos alunos;

além de ser um programa utilizado mundialmente.

3.1.1 Plano das três primeiras aulas da sequência didática

Objetivos:

 Conceituar e construir fluxogramas de processo e algoritmos;

 Desenvolvimento das ferramentas do Pensamento Computacional como

facilitador da aprendizagem das “Noções de Divisibilidade” e dos “Critérios de

Divisibilidade”.

45

Público-alvo: alunos do 6º ano do Ensino Fundamental II da rede básica e pública de

ensino. Alunos de 11 a 12 anos de idade.

Número de aulas: 3 aulas de 50 minutos cada.

Recursos Didáticos:

Slides no formato de Power Point; datashow para projeções; Livro Didático do aluno; Quadro

e giz; Folhas brancas; Material Impresso; Computadores do laboratório de informática;

Material pessoal dos alunos.

Conteúdo: Múltiplos e Divisores.

Conteúdos relacionados:

 Noção de Divisibilidade;

 Critérios de Divisibilidade;

Objetos do Conhecimento segundo a BNCC: “Fluxograma para determinar a

paridade de um número natural” e “Múltiplos e divisores de um número natural”.

Habilidades específicas segundo a BNCC:

(EF06MA04) – Construir algoritmo em linguagem natural e representá-lo por

fluxograma que indique a resolução de um problema simples (por exemplo, se um número

natural qualquer é par);

(EF06MA05) – Classificar números naturais em primos e compostos, estabelecer

relações entre números, expressas pelos termos “é múltiplo de”, “é divisor de”, “é fator de”, e

estabelecer, por meio de investigações, critérios de divisibilidade por 2, 3, 4, 6, 8, 9 e 10.

Unidade temática: Números.

Tema: “A Inserção do Pensamento Computacional nas Aulas de Matemática no

Ensino Básico”

Expectativa: Gostaríamos que este trabalho servisse como manual para profissionais

da educação Matemática na inserção do Pensamento Computacional nas aulas.

46

Local de realização das atividades: Sala de aula. (Para responder ao questionário do

Google Forms, a fim de avaliar as 3 primeiras aulas desta sequência, os alunos foram levados

ao laboratório de informática, alguns optaram pelo link para responder pelo próprio

smartphone).

Quantidade de alunos participantes: 20 alunos. A turma foi dividida em grupos

para otimização dos espaços físicos, seja em sala ou no laboratório. Estes grupos foram

formados por livre escolha. A divisão é importante e, caso o professor não utilize o datashow,

é necessário fornecer material impresso para os grupos. Durante a aula, principalmente nas

execuções das atividades, o professor deve intervir e acompanhar o desenvolvimento das

atividades, mas por serem aulas de 50 minutos para conteúdo e realização de atividades, a

formação de grupos é fundamental para otimização do tempo. Os alunos trocam informações

entre si, se ajudam e facilita, caso seja preciso a intervenção do professor.

Grupo A com quatro alunos (A1, A2, A3 e A4);

Grupo B com quatro alunos (B1, B2, B3 e B4);

Grupo C com quatro alunos (C1, C2, C3 e C4);

Grupo D com quatro alunos (D1, D2, D3 e D4);

Grupo E com quatro alunos (E1, E2, E3 e E4);

Formas de avaliação das aulas 1, 2 e 3.

 Construção de

fluxogramas

e

algoritmos

confeccionados

à mão ou

digitalizados (todos devem realizar as atividades à mão em sala, caso algum

aluno faça a opção por digitalizá-los, será uma tarefa extra, ou seja, realizada

em ‘casa’. Os fluxogramas e algoritmos digitalizados deverão ser enviados por

e-mail para o professor);

 A participação nas atividades e devolutivas das mesmas para análise e

verificações;

 Participação nas respostas ao questionário individual do Google Forms, link do

formulário enviado ao participante da atividade para avaliação das 3 primeiras

aulas. Mensurar os pontos fortes e possíveis falhas. Avaliação individual via

formulário.

47

Comentário: As aulas e atividades, foram planejadas e elaboradas com foco no

sujeito formador, ou seja, o próprio professor que precisa de formação para lidar com esse

novo tema. A cada aula concluída, propõe-se à realização da avaliação das aprendizagens pelo

professor/pesquisador e os resultados da aplicação da sequência didática proposta, registrados

no Capítulo 3.

3.1.1.1 - Aula 1

Conteúdo: Definição de fluxogramas, nomes, ícones e uso de algumas simbologias

usadas em fluxogramas de processo; Definição de algoritmos matemáticos; Noção de

divisibilidade e critérios de divisibilidade.

Orientações para o professor: Para o desenvolvimento desta primeira aula, na qual

iremos definir e demonstrar um fluxograma, o professor pode usar a imagem do fluxograma

da Figura 3.1, que tem por título “Bora tomar um cafezin mineirin?” A ideia inicial é ilustrar

um fluxograma, mas a escolha do fluxograma, com título nada formal, tem o objetivo de

despertar o interesse do aluno na aula, por usar termos regionalizados como “cafezin” e

“mineirin”, alunos desta idade gostam de atividades que não sejam muito formais. O professor

pode introduzir, chamar a atenção do aluno sobre cada parte do processo, destacar a

simbologia utilizada no fluxograma, o ‘passo a passo’ e, em seguida, começar a exibição dos

slides com definições, exemplos e abordagens referentes a essa primeira aula.

Observação: Caso não seja possível apresentar slides, não há problema, os slides

seriam apenas para apresentar figuras ou conceitos longos, portanto, faça a impressão deste

material que está nos slides e entregue aos grupos formados. Para as considerações

Matemáticas, isso pode ser feito no quadro mesmo.

Professor, explore ao máximo as definições e exemplos que estão nos slides, para que

tudo transcorra bem durante a execução das atividades. Nesta aula, o aluno irá visualizar

inicialmente um fluxograma de processo, conhecer a definição. Contudo, o objetivo desta aula

é que o aluno aprenda o uso adequado das ferramentas do Pensamento Computacional como

facilitador da aprendizagem das “Noções de Divisibilidade” e dos “Critérios de

divisibilidade”, no caso desta aula, com a inserção do fluxograma de processo.

48

O conteúdo apresentado nos slides é importante, mas o foco é que o aluno consiga

estabelecer um processo lógico de “passo a passo” para um critério de divisibilidade, por

exemplo.

Encaminhamento metodológico: em anexo a Figura 3.1 para apresentação inicial do

fluxograma. Na sequência, os slides com conteúdo, definições e informações importantes para

a aula 1 e para a execução da Atividade 1.

Figura 3.1 - Fluxograma “Bora tomar um cafezin mineirin?”

Fonte: o próprio autor (2022).

49

Definição 3.1 – Um fluxograma é a representação visual do fluxo de dados.

Entende-se fluxo de dados como o movimento de dados através de um sistema. Nesse

sentido, o fluxograma é usado para representar graficamente os processos a serem

automatizados.

Hoje em dia vários setores da sociedade, inclusive a educação, absorveram essa

técnica com o objetivo de representar de maneira visual diversas situações e relações,

facilitando a compreensão dos processos. Sua aplicação na educação é feita de forma sintética

e descomplicada.

A Definição 3.1, dada por Bohl (1978), relata que fluxogramas são úteis para escrever

um programa ou algoritmo e explicá-lo aos outros ou colaborar com eles. Alguns significados

da simbologia usada nos fluxogramas de processo estão representados no quadro a seguir

(Figura 3.2).

Figura 3.2 - Quadro com nomes, ícones e uso de algumas simbologias usadas em fluxogramas

Nome

Seta

Terminação

Processo

Decisão

de processo.

Ícone

Uso

Simboliza a
ligação/conexão, além
disso indica a direção do
fluxo de um processo.

Indica o início ou o fim de
um processo.

Indica um determinado
processo, com atividades e
funções.

Indica que uma decisão
precisa ser tomada para
que o fluxo possa seguir.

50

Documento

Fonte: Giovanni (2018).

Noção de Divisibilidade e Critérios de Divisibilidade

Indica que foi produzido
um relatório ou um
documento impresso para
ser lido.

Apresentam-se, as definições 2 e 3, sobre noção de divisibilidade e critério de

divisibilidade, as quais foram dadas por Hefez (1993) (apud Paiva e Pereira, 2016). Aqui

fazemos uma observação importante: as aulas descritas neste trabalho foram dedicadas aos

alunos do 6  ano do ensino fundamental, utilizando o conjunto dos números naturais;

entretanto, as definições podem ser aplicadas ao conjunto dos números inteiros com as

devidas adaptações.

Definição 3.2 – Um número natural  divide outro número natural , escreve-se

,

se existe um número natural , tal que

.

 ÷ 

Assim, pode-se compreender que o conceito de divisibilidade é uma relação entre dois

β = δ × α

ou mais números naturais (ou inteiros), associado à operação de multiplicação.

Exemplo 3.1: O número 10 divide o número 40, pois existe o número 4, tal que

.

40 =

10 × 4

Definição 3.3 (Critério de Divisibilidade) – Um número natural

é divisível por um

número natural

se  divide .





A partir da Definição 3.3, podemos dizer que os números 2, 4 e 6 são divisíveis por 2,

pois 2 divide 2, 4 e 6, ou seja, ao dividirmos esses números por 2, temos resto 0, logo a

divisão é exata. Dito de outra forma “ao se formarem os pares, não há sobras”.

Definição 3.4 – Os números que cabem um número exato de vezes em outro são

chamados divisores desse número.

Ou seja, retomando a Definição 3.3 no contexto de divisores: o número natural

é o

divisor do número natural , o qual é chamado de dividendo. O número natural  é chamado



de quociente.

51

Exemplo 3.2: Temos que

, em que 28 é o dividendo, 2 é o divisor, e 14 o

quociente. Nesse caso, a divisão é exata.

28 ÷ 2 = 14

Definição 3.5 – Algoritmo da divisão é uma forma realizar a divisão de números

naturais, usando os elementos dados na Definição 3.4 .

Os elementos do algoritmo da divisão: dividendo, divisor, quociente e resto estão

mostrados na Figura 3.3.

Figura 3.3 - Representação do algoritmo da divisão.

Fonte: o próprio autor (2022).

Exemplo 3.3: Um professor de educação física convocou 80 alunos para uma

demonstração de ginástica. Ele pretende distribuir esses alunos em grupos com a mesma

quantidade de pessoas que tenham, no mínimo, 6 e, no máximo, 10 alunos, sem que sobre

aluno fora dos grupos. Quais são as maneiras possíveis de formar esses grupos?

Solução: Para resolver esse problema, dividimos 80 por 6, por 7, por 8, por 9 e por 10,

e consideramos apenas as divisões exatas. Observando os resultados das divisões, podemos

dizer quantos grupos e com quantos alunos o professor poderá formar sem que sobre aluno

fora dos grupos. Dessa forma, uma vez que, como 80 é divisível por 8 e por 10, o professor

poderá formar 10 grupos de 8 alunos ou 8 grupos de 10 alunos.

“Verificar a divisibilidade de um número natural

por outro número natural usando o algoritmo da divisão

pode ser trabalhoso e demorado. Vamos conhecer uma

maneira mais prática de fazer essas verificações? Os

critérios de divisibilidade são condições que nos permitem

saber se um número é ou não é divisível por outro sem a

necessidade de efetuarmos toda a divisão. Vamos, a seguir,

conhecer alguns desses critérios (trecho adaptado de

GIOVANNI, 2018).”

A seguir, define-se algoritmo, segundo por Ascencio (1999) (apud Ascencio 2012).

52

Definição 3.6 – Algoritmo é uma descrição de uma sequência de passos que deve ser

seguida para a realização de uma tarefa.

O exemplo a seguir mostra este processo utilizando a descrição narrativa, que é

explicada da seguinte maneira: “Utilizando a linguagem natural, que é a descrição narrativa

dos passos que serão usados para resolver o problema, podemos definir o algoritmo de

número divisível por 2” (ASCENCIO, 2012).

Exemplo 3.4: Algoritmo matemático com descrição da divisão de um número por

2.

Passo 1: escolher um número a ser dividido por 2.

Passo 2: dividir este número por 2.

Passo 3: mostrar o resultado obtido da divisão por 2.

Passo 4: verificar o resultado obtido da divisão por 2:

4.1 Se o resto for zero, o número é divisível por 2.

4.2 Se o resto não for zero, o número não é divisível por 2.

No quadro a seguir (Figura 3.4) foram apresentados alguns exemplos da aplicação do

critério de divisibilidade por 2 (dada na Definição 3.3) e, na Figura 3.5, foi representado o

critério de divisibilidade por meio de um fluxograma.

Figura 3.4 - Quadro com a aplicação do critério de divisibilidade por 2, dado pela Definição

3.3.

Dividendo

Divisor

Quociente

Resto

10

11

12

13

2

2

2

2

5

5

6

6

0

1

0

1

14

15

16

2

2

2

7

7

8

Fonte: o próprio autor (2022).

53

0

1

0

Ao observar o quadro acima, percebe-se que todo número natural divisível por 2 é

terminado em 0, 2, 4, 6 ou 8. A partir disso, tem-se a seguinte definição:

Propriedade 3.1 (Critério de divisibilidade por 2) – todo número natural terminado

em 0, 2, 4, 6 ou 8, ou seja, par, é divisível por 2.

Exemplo 3.5: Verificar se 6.224 é divisível por 2.



6.224 é divisível por 2, uma vez que este número termina com 4 e é um número

par.

Figura 3.5 - Representação de um fluxograma com os critérios de divisibilidade por 2, de

acordo com a Definição 3.3.

Fonte: Giovanni (2018).

Agora, chegou o momento de tornar prático a construção de fluxogramas. Busca-se

que os alunos consigam verificar a relação que existe entre um problema matemático e as

formas como este problema pode ser resolvido. Basicamente, pode-se resolver o problema

através de uma sequência de passos constituindo-se no chamado algoritmo matemático, o qual

pode ser descrito de forma narrativa como foi mostrado no exemplo 3.4. A construção do

fluxograma segue a descrição narrativa da solução do problema matemático. Embora, se tenha

outra forma de resolver problemas matemáticos através de programas Computacionais, a qual

será abordada nas aulas seguintes.

54

A seguir, apresenta-se uma proposta de atividade para a Aula 1.

ATIVIDADE 1

(Material impresso e entregue a cada aluno para a Atividade 1 - Aula 1)

“A Inserção do Pensamento Computacional nas Aulas de Matemática no Ensino Básico”

Aula 1 – Definição de fluxogramas, nomes, ícones e uso de algumas simbologias

usadas em fluxogramas de processo; Definição de algoritmos Matemáticos; Noção de

Divisibilidade e Critérios de Divisibilidade.

Marque o grupo que você pertença, sua identificação e, por favor, ao finalizar

atividade, não se esqueça de entregá-la ao professor!

Grupo A com quatro alunos (A1, A2, A3 e A4);

Grupo B com quatro alunos (B1, B2, B3 e B4);

Grupo C com quatro alunos (C1, C2, C3 e C4);

Grupo D com quatro alunos (D1, D2, D3 e D4);

Grupo E com quatro alunos (E1, E2, E3 e E4).

Sugestão metodológica: caso seja possível, forneça o quadro da Figura 3.2 e a Figura

3.5 em material impresso para que os alunos possam consultar e realizar a Atividade 1 com

maestria.

Atividade 1: Conforme as definições e exemplos vistos nesta aula, com o uso devido

dos ícones e a simbologia de representação de um fluxograma. É hora de construir um

fluxograma como o da Figura 3.5, porém, construa um fluxograma que indique como

informação de saída: “se um número natural qualquer é par ou não”! Faça investigações e

tente estabelecer o processo formal de construção!

3.1.1.2 - Aula 2

Conteúdo: Critérios de divisibilidades, algoritmos de divisibilidade por 3, 4, 8, 9 e 6.

Fluxograma de processo e quadro de investigação do critério de divisibilidade por 6.

55

Orientações para o professor: Na aula anterior, já definimos e construímos de um

fluxograma de processo e enfatizamos a importância do fluxograma como ferramenta do

Pensamento Computacional como facilitador da aprendizagem. Nesta aula, o professor pode

continuar a explorar o fluxograma de processo que verifica o critério de divisibilidade por 6

(Figura 3.6). O professor pode fazer inferências e, salientar que um fluxograma pode ser

simples, porém ao fazer comparações entre o fluxograma apresentado na Aula 1 e o

fluxograma da Figura 3.6 (fluxograma de critério de divisibilidade de um número por 6), o

processo pode ser mais trabalhoso e não necessariamente simples de construir.

Nos casos em que o fluxograma parece complexo, como o fluxograma da Figura 3.6, é

preciso cautela. É o momento de dar ênfase ao algoritmo matemático descritivo.

Professor, enfatize para a turma, que quando temos descritos os passos de um

algoritmo, isso facilita na construção do fluxograma desejado! Aproveite e explore nos

conteúdos presentes nos slides desta aula, outros critérios de divisibilidade, mais definições e

exemplos com abordagens bem interessantes.

Observação: Caso não seja possível apresentar slides, não há problema, os slides

seriam apenas para apresentar figuras ou conceitos longos, portanto, faça a impressão deste

material que está nos slides e entregue aos grupos formados. As abordagens Matemáticas

podem ser realizadas no próprio quadro.

Professor, é importante uma atenção especial às definições e exemplos que estão nos

slides, para que sejam realizadas satisfatoriamente as Atividades 2 e 3 propostas. A Aula 2

traz mais critérios de divisibilidade, estes que têm como objetivo tornar o processo do

algoritmo de divisibilidade mais prático. O conteúdo apresentado nos slides é importante, mas

o foco agora é que o aluno consiga estabelecer o ‘passo a passo’ para realizar o algoritmo

matemático descritivo.

Encaminhamentos metodológicos: Na

sequência,

apresenta-se

o

conteúdo

matemático e informações importantes para a Aula 2. No final, seguem informações

metodológicas para a execução das Atividades 2 e 3.

“Os critérios de divisibilidade não estão organizados em

ordem crescente dos divisores (2, 3, 4, 5 e assim por diante), mas

sim em uma sequência que favoreça a percepção de que o critério de

divisibilidade por um número pode estar atrelado a outros critérios.

56

Por exemplo, o critério de divisibilidade por 6 está ligado aos

critérios de divisibilidade por 2 e 3. O fluxograma é usado para

representar graficamente os processos a serem automatizados. Hoje

em dia vários

setores da sociedade,

inclusive a educação,

absorveram essa técnica com o objetivo de representar de maneira

visual diversas situações e relações, facilitando a compreensão dos

processos” (trecho adaptado de Giovanni, 2018).

Os critérios de divisibilidade são regras que permitem verificar se um número natural

é divisor de outro número natural, baseando-se em propriedades da sua representação decimal

de maneira mais rápida do que efetuando a divisão. É importante lembrar que os critérios de

divisibilidade têm como objetivo tornar o processo mais prático. A seguir apresenta-se as

definições correspondentes a critérios de divisibilidade por 3, 4, 8, 9 e 6, respectivamente:

Propriedade 3.2 (Critério de divisibilidade por 3) – Um número natural será

divisível por 3 quando a soma de seus algarismos for um número divisível por 3.

Exemplo 3.6: Verificar se 62.124 é divisível por 3, de duas maneiras.





1ª: dividindo 62.124 por 3, temos resto = 0. Logo, 62.124 é divisível por 3

(seguindo a Definição 3).

2ª: somando os algarismos de 62.124. Em seguida, dividimos a soma por 3,

assim: “

. 15 é divisível por 3, com resto = 0, logo,

62.124 é divisível por 3 (seguindo a Propriedade 3.2).

6 + 2 + 1 + 2 + 4 = 15

Exemplo 3.7: Verificar se 7.092 e 6.413 são divisíveis por 3.





7.092 é divisível por 3, pois “

” e 18 é divisível por 3

(seguindo a Propriedade 3.2).

7 + 0 + 9 + 2 = 18

6.413 não é divisível por 3, pois “

” e 14 não é divisível por

3, uma vez que a soma de seus algarismos (“

6 + 4 + 1 + 3 = 14

”) não origina um

número divisível por 3 (pela Propriedade 3.2).

1 + 4 = 5

Propriedade 3.3 (Critério da divisibilidade por 4) – Um número natural será

divisível por 4 quando terminar em 00 ou quando o número formado por seus dois últimos

algarismos da direita for divisível por 4.

57

Exemplo 3.8: Verificar se os números 1.500 e 1.228 são divisíveis por 4, de acordo

com a definição 9; e verificar se os números 132, 28 e 1.164 são divisíveis por 4, de acordo

com a Definição 3.3.

 O número 100 é divisível por 4, pois seus dois últimos dígitos terminam em 00,

de acordo com a propriedade 3.3. O número 1.228 é divisível por 4 pela mesma

definição, pois, os dois últimos algarismos da direita, 28, são divisíveis por 4.

 Agora observe as divisões:

;

;

. Observa-se que, pela definição 3.3, todos estes números são

132 ÷ 4 = 33; 28 ÷ 4 = 7

1164 ÷ 4 = 291

divisíveis por 4 por terem resto zero.
144 ÷ 4 = 36

Propriedade 3.4 (Critério da divisibilidade por 8) – Um natural número será

divisível por 8 quando terminar em 000 ou quando o número formado por seus três últimos

algarismos da direita for divisível por 8.

Exemplo 3.9: Verificar se os números 3.000, 7.520 e 34.118 são divisíveis por 8.







3.000 é divisível por 8, pois termina em 000 (seguindo a Propriedade 3.4).

7.520 é divisível por 8, pois 520 é divisível por 8 (“

”) (seguindo

a Propriedade 3.4).

520 ÷ 8 = 65

34.118 não é divisível por 8, pois 118 não é divisível por 8 (seguindo a

Propriedade 3.4). Observa que “

4” (seguindo a

Definição 3.3).

118 ÷ 8 = 34, e tem resto

Propriedade 3.5 (Critério da divisibilidade por 9) – Um número natural será

divisível por 9 quando a soma dos seus algarismos for um número divisível por 9.

Exemplo 3.10: Verificar se 28.314 é divisível por 9.



. O algoritmo da divisão nos mostra que a divisão de

28.314 por 9, tem resto = 0. Logo, 28.314 é divisível por 9 (seguindo a
28.314 ÷ 9 = 3.146
Definição 3.3).

58

 Outra forma de verificar isso é aplicando o critério dado pela Propriedade 3.5,

somar os algarismos do número 28.314 e, em seguida, efetuar a divisão dessa

soma por 9. “

” e 18 é divisível por 9 (“

”).

Exemplo 3.11: Verificar se 6.408 e 27.319 são divisíveis por 9.

2 + 8 + 3 + 1 + 4 = 18

18 ÷ 9 = 2





6.408 é divisível por 9, pois “

” e 18 é divisível por 9

(“

”) (seguindo a Propriedade 3.5).

6 + 4 + 0 + 8 = 18

18 ÷ 9 = 2

27.319 não é divisível por 9, pois “

” e 22 não é

divisível por 9 (seguindo a Propriedade 3.5).

2 + 7 + 3 + 1 + 9 = 22

Propriedade 3.6 (Critério da divisibilidade por 6) – Um número natural será

divisível por 6, se ele for par e a soma de seus algarismos for um número divisível por 3.

Exemplo 3.12: Verificar se 6.528, 7.484, 1.657 e 3.572 são divisíveis por 6.









6.528 é divisível por 6, pois é par e “

” e 21 é divisível por

3 (seguindo a Propriedade 3.6).

2 + 5 + 2 + 8 = 21

7.484 não é divisível por 6, é par, porém “

” e 23 não é

divisível por 3 (propriedade 3.6). Observa-se que “

7 + 4 + 8 + 4 = 23

”,

(seguindo a Definição 3.3).

23 ÷ 3 = 7, e tem resto 2

1.657 não é divisível por 6, pois não é par e “

divisível por 3 (propriedade 3.6). Observa-se que “

1 + 6 + 5 + 7 = 19

” e 19 não é

”,

(seguindo a Definição 3.3).

19 ÷ 3 = 6, e tem resto 1

3.572 não é divisível por 6, é par, porém “

” e 17 não é

divisível por 6 (propriedade 3.6). Observa-se que “

3 + 5 + 7 + 2 = 17

”,

(seguindo a Definição 3.3).

17 ÷ 3 = 5, e tem resto 2

A seguir, apresenta-se um algoritmo com o passo a passo da aplicação do critério da

divisibilidade por 6, dado na propriedade 3.6, e na sequência, um fluxograma envolvendo esse

critério (Figura 3.6).

Exemplo 3.13: Algoritmo 2, com descrição narrativa da divisibilidade de um

número natural por 6.

59

Passo 1: escolher um número a ser dividido por 6.

Passo 2: observar a casa das unidades.

Passo 3: o algarismo nessa casa é 0, 2, 4, 6 ou 8? Se sim, siga para o “passo 4”, se não,

siga para o “passo 8”.

Passo 4: o número é par (critério dado na propriedade 3.1, terminado em 0, 2, 4, 6 ou

8), agora some os algarismos do número.

Passo 5: a soma obtida é um número entre 0 e 9? Caso a soma seja maior que 9,

considere a soma como um novo número, repita este processo até que o resultado seja um

número de 0 a 9, na sequência, siga para o “passo 6”.

Passo 6: a soma é 3, 6 ou 9? Se sim, siga para o “passo 7”. Se não, siga para o “passo

8”.

Passo 7: o número de entrada será divisível por 6.

Passo 8: este número não será divisível por 6.

Figura 3.6 - Representação de um fluxograma com os critérios de divisibilidade por 6.

Fonte: Associação Nova Escola (2017).

60

A seguir apresenta-se duas propostas de atividades práticas (Atividades 2 e 3). O

objetivo dessas propostas de atividades é a fixação de conteúdo matemático sobre os critérios

de divisibilidade de números naturais.

ATIVIDADES 2 e 3

(Material impresso e entregue a cada aluno para a Atividades 2 e 3 - Aula 2)

“A Inserção do Pensamento Computacional nas Aulas de Matemática no Ensino Básico”

Aula 2 – Critérios de divisibilidades, algoritmos de divisibilidade por 3, 4, 8, 9 e 6.

Fluxograma de processo e quadro de investigação do critério de divisibilidade por 6.

Marque o grupo que você pertença, sua identificação e, por favor, ao finalizar a

atividade, não se esqueça de entregá-la ao professor!

Grupo A com quatro alunos (A1, A2, A3 e A4);

Grupo B com quatro alunos (B1, B2, B3 e B4);

Grupo C com quatro alunos (C1, C2, C3 e C4);

Grupo D com quatro alunos (D1, D2, D3 e D4);

Grupo E com quatro alunos (E1, E2, E3 e E4).

Atividade 2: No Quadro abaixo,

temos números dispostos de 1 a 50. Vamos

investigar e marcar os números dispostos que são divisíveis por 2 e, em seguida, identificar e

marcar no mesmo quadro, os números que são divisíveis por 3? Os números marcados,

simultaneamente, por 2 e por 3, também são divisíveis por qual número?

Figura 3.7 - Quadro para realização da Atividade 2, com a aplicação do critério de

divisibilidade por 2 e 3.

1

6

2

7

3

8

4

9

11

12

13

14

5

10

15

61

16

21

26

31

36

41

46

17

22

27

32

37

42

47

18

23

28

33

38

43

48

19

24

29

34

39

44

49

20

25

30

35

40

45

50

Fonte: o próprio autor (2022)

Atividade 3: Considere os números 325d e 70b3.

a) Qual é o menor valor que se pode atribuir a d para que 325d seja divisível ao

mesmo tempo por 2 e por 3?

b) Qual é o menor valor que se pode atribuir a d para que 325d seja divisível por 6?

c) Qual é o menor valor que se pode atribuir a b para que 70b3 seja divisível por 3?

3.1.1.3 - Aula 3

Conteúdo: Critérios de divisibilidades, construídos por fluxogramas ou dados por

algoritmos de divisibilidade.

Orientações para o professor: Nas aulas anteriores, foi possível conhecer e explorar

sobre fluxogramas e alguns algoritmos descritivos, mas caso tenha avaliado, com base nas

devolutivas das atividades da turma, que tenha ficado alguma falha nos processos ou algo que

mereça uma outra abordagem para que o objetivo seja alcançado, esta aula é específica para

fazer essas observações. Mais precisamente, esta aula será uma complementação prática da

aula 2, relacionado com a descrição narrativa da divisibilidade de um número natural bem

como a construção de fluxogramas.

62

Encaminhamento metodológico: Aula específica para aprofundar, aprimorar e

corrigir falhas nos algoritmos e fluxogramas de critérios de divisibilidades, já explanados. A

seguir, seguem informações metodológicas para a execução das Atividades 4 e 5.

ATIVIDADES 4 e 5

(Material impresso e entregue a cada aluno para a Atividades 4 e 5 - Aula 3)

“A Inserção do Pensamento Computacional nas Aulas de Matemática no Ensino Básico”

Aula 3 – Aprofundar e aprimorar os critérios de divisibilidades, construídos por

fluxogramas ou algoritmos de divisibilidade.

Marque o grupo que você pertença, sua identificação e, por favor, ao finalizar a

atividade, não se esqueça de entregá-la ao professor!

Grupo A com quatro alunos (A1, A2, A3 e A4);

Grupo B com quatro alunos (B1, B2, B3 e B4);

Grupo C com quatro alunos (C1, C2, C3 e C4);

Grupo D com quatro alunos (D1, D2, D3 e D4);

Grupo E com quatro alunos (E1, E2, E3 e E4).

Atividade 4: Nesta atividade, precisamos trabalhar coletivamente, para isso, o grupo

deve criar um algoritmo com a descrição narrativa de um critério de divisibilidade diferente

dos que já foram apresentados nas aulas anteriores, e construir o fluxograma a partir desse

algoritmo.

Atividade 5: Agora é hora de responder o formulário individual (google forms) para

avaliação qualitativa e quantitativa das Aulas 1, 2 e 3 ministradas. O questionário pode ser

acessado através do link https://forms.gle/SwqUSdqrDRqp1LN8A

Observação: os alunos foram levados ao laboratório de informática para responderem

ao questionário.

63

3.1.1.4 - Avaliação realizada pelos alunos das Aulas 1, 2 e 3.

O formulário que os alunos responderam, continham os questionamentos divididos em

quatro partes, e foram descritas abaixo.

A primeira parte do questionário englobou apenas a Pergunta 1 e foi feita para

conhecer o aluno: 1. “Qual seu nome?”.

Já,

a

segunda

parte

do

questionário

buscou

determinar

se

os

temas

algoritmo/fluxograma e Pensamento Computacional já haviam sido abordados em algum

conteúdo de sala de aula. Para isso, foram elaboradas duas perguntas: 2. “Você já teve contato

com algoritmos/fluxogramas?” e 3. “Sobre o Pensamento Computacional, já havia pensado

neste tema? (como são programados os computadores e outros).”.

Enquanto, a terceira parte do questionário foi direcionada para avaliar o conteúdo de

sala de aula que expuseram os temas ‘algoritmo/fluxograma’ e ‘Pensamento Computacional’.

As perguntas elaboradas para esta avaliação foram: 4. “Como você avalia as aulas de

matemática na construção de algoritmos/fluxogramas?”, 5.

“Você acha que o uso de

algoritmos e fluxogramas nas aulas contribuíram para o seu entendimento do Pensamento

Computacional?”, 6. “De todas as atividades que foram desenvolvidas nas aulas, quais você

gostou mais? Por quê?”; e, por fim, 7. “Qual(is) a(s) maior(es) dificuldade(s) que você

encontrou para realizar as atividades?”.

A quarta e última parte do questionário foi direcionada para a importância dos

recursos lúdicos e práticos utilizados durante as atividades em sala de aula, e para sugestões

de aprimoramento para as próximas aulas sobre os temas ‘algoritmo/fluxograma’ e

‘Pensamento Computacional’. E as perguntas foram as seguintes: 8. “Para você, qual o grau

de importância das aulas de Matemática usarem mais recursos lúdicos e práticos?” e 9. “Deixe

aqui sua sugestão para que as próximas atividades sejam aprimoradas/melhoradas!”.

3.1.2 Plano das quatro aulas sobre Programação Computacional

Objetivos:

 Favorecer o desenvolvimento cognitivo dos alunos através do ensino de lógica

e linguagem de Programação;

64

 Estabelecer uma aprendizagem suficientemente contextualizada, concreta e

motivadora, e dar significado ao ensino da Matemática atrelado ao Pensamento

Computacional;

 Aprender a programar simples sistemas digitais, a fim de promover o

desenvolvimento da capacidade de abstração cognitiva, das habilidades

Matemáticas e do Pensamento Computacional;

 Criar um sistema digital usando a linguagem de Programação C# (C SHARP)

através da plataforma do Visual Studio 2022 que indique a resolução de um

problema matemático simples, por exemplo, se um número natural qualquer é

par.

Público-alvo: alunos do 6º ano do ensino fundamental II da rede básica e pública de

ensino. Alunos de 11 a 12 anos de idade.

Número de aulas: 4 aulas de 50 minutos cada.

Recursos Didáticos:

Slides no formato de Power Point; datashow para projeções; Livro Didático do aluno;

Quadro e giz; Folhas brancas; Material Impresso; Computadores do laboratório de informática;

Material pessoal dos alunos.

Conteúdo: Múltiplos e Divisores.

Conteúdos relacionados:

 Critérios de Divisibilidade;

 Lógica e Linguagem de programação;

 Sistemas Digitais no C# (C SHARP).

Objetos do Conhecimento segundo a BNCC: Algoritmo computacional para

determinar a paridade de um número natural e múltiplos e divisores de um número natural.

Habilidades específicas segundo a BNCC:

65

(EF06MA04)

- Construir algoritmo em linguagem natural e representá-lo por

fluxograma que indique a resolução de um problema simples, por exemplo, se um número

natural qualquer é par;

(EF06MA05) - Classificar números naturais em primos e compostos, estabelecer

relações entre números, expressas pelos termos “é múltiplo de”, “é divisor de”, “é fator de”, e

estabelecer, por meio de investigações, critérios de divisibilidade por 2, 3, 4, 6, 8, 9 e 10.

Unidade temática: Números.

Tema: “A Inserção do Pensamento Computacional nas Aulas de Matemática no

Ensino Básico”

Expectativa: Gostaríamos que este trabalho servisse como manual para profissionais

da educação Matemática na inserção do Pensamento Computacional nas aulas.

Local de realização das atividades: Laboratório de Informática.

Quantidade de alunos participantes: 20 alunos. A turma foi dividida em grupos

para otimização da quantidade de computadores disponíveis no laboratório de informática.

Estes grupos foram formados por livre escolha.

A divisão é importante e, caso o professor não utilize o datashow, é necessário

fornecer material impresso para os grupos. No laboratório onde foi aplicada esta sequência,

não foi usado datashow para projeções, o laboratório dispõe de uma televisão de 55” para

ampliações de tela. Durante a aula, principalmente nas execuções das atividades, o professor

deve acompanhar o desenvolvimento das atividades, mas por serem aulas de 50 minutos para

ministração de conteúdo e realização de atividades, a formação de grupos é fundamental para

otimização do tempo. Os alunos trocam informações entre si, se ajudam e facilita, caso seja

preciso a intervenção do professor.

Grupo A com quatro alunos (A1, A2, A3 e A4);

Grupo B com quatro alunos (B1, B2, B3 e B4);

Grupo C com quatro alunos (C1, C2, C3 e C4);

Grupo D com quatro alunos (D1, D2, D3 e D4);

66

Grupo E com quatro alunos (E1, E2, E3 e E4).

Formas de avaliação das aulas:

A avaliação será realizada ao término de cada aula e se dará com a participação dos alunos

nas criações de cada sistema digital:

 Consiste na investigação da importância e aplicações relevantes no dia a dia

relacionados à Programação de tecnologias utilizadas pela turma;

 “Meu primeiro programa” - entender a estrutura de um sistema digital e fazer a

compilação;

 “Par ou ímpar” – construir um sistema digital para resolver um problema matemático.

Sugestão importante para o professor: A seguir, temos o “passo a passo” de como

instalar o Visual Studio 2022. Daqui para frente, usaremos a sigla VS22 para nos referir a

Visual Studio 2022. Se possível, deixe o VS22 instalado nos computadores do laboratório. O

programa possui versão gratuita, embora existam versões pagas. Usar-se-á a versão gratuita

para a confecção dos sistemas digitais na linguagem C# (C SHARP) para as três últimas aulas

(Aulas 5, 6 e 7). O professor pesquisador que aplicou esta atividade tem conhecimento de

programação na linguagem C#, entretanto salientar-se que

a escolha da linguagem de

programação,

compilador,

etc, vai depender dos

conhecimentos de programação

computacional do professor, a turma onde será aplicada, os recursos computacionais e os

espaços físicos disponíveis.

Instalando o programa VISUAL STUDIO 2022 (VS22)

 Escolha um site de pesquisa (aqui foi utilizado o google), e pesquise VISUAL

STUDIO 2022 (VS22);

 Clique em Visual Studio IDE 2022 – Ferramenta de Programação para... ou

acesso o link https://visualstudio.microsoft.com/pt-br/vs/;

 Em seguida clique em “Baixar o Visual Studio” (seta amarela);

67

Figura 3.8 - Tela inicial do site Visual Studio 2022.

Fonte: print screen da tela do computador do autor.

 Escolha Community 2022;

Figura 3.9 - Tela inicial do site Visual Studio 2022, indicando qual versão do programa baixar
(seta amarela)

Fonte: print screen da tela do computador do autor.

68

 Ao clicar, o download é realizado automaticamente;

Figura 3.10 - Tela do site Visual Studio 2022 após o download do programa e indicação de
onde o arquivo se encontra (seta amarela).

Fonte: print screen da tela do computador do autor.

 Agora é preciso executar a instalação do programa. Clique em VisualStudioSetup

(indicado pela seta, no inferior esquerdo da tela). Na caixa “Deseja executar este

arquivo?” (seta amarela), clique em executar;

69

Figura 3.11 - Tela do site Visual Studio 2022 após o download do programa e indicação de

como proceder para instalação do programa (seta amarela).

Fonte: print screen da tela do computador do autor.

 O VS22 está instalado e pronto para a criação do primeiro projeto.

3.1.2.1 - Aula 4

Conteúdo: Lógica, linguagens de Programação, importância e aplicações.

ORIENTAÇÕES PARA O PROFESSOR: O professor pode usar esta sequência

didática de ensino para introduzir e propiciar o Pensamento Computacional através do

‘conhecimento’ de lógica e linguagem de Programação, a fim de motivar e sensibilizar sobre a

importância da lógica e da linguagem de Programação nas tecnologias dos dias atuais.

Proporcionar um momento de reflexão para que os alunos possam investigar uma aplicação

relevante no dia a dia envolvendo a Programação. No desenvolvimento da aula, o professor

deverá permitir analisar, de forma qualitativa, a reação dos alunos às propostas, bem como sua

capacidade de assimilar o conteúdo apresentado nos slides, sobre a lógica e linguagem de

Programação e o interesse dos alunos sobre esses temas. Esta análise deve permitir identificar

critérios para que a aula seja bem-sucedida e também identificar possíveis mudanças para que

a mesma seja aperfeiçoada. Professor, classicamente, ensinar Programação de computadores

envolve aprender duas coisas simultaneamente: por um lado, o conceito de Programação de

computadores e os termos associados (comando, variável, loop, estrutura de controle, função,

entrada-saída, vetor, tensor, objeto, atributo, método, herança, ponteiro, etc.), e por outro lado,

70

a própria linguagem de Programação (conhecimento dos comandos disponíveis, sua função,

sua sintaxe, seu modo de operação). Usualmente aprender Programação de computador passa

pela expertise de conhecer linguagem(ns) de Programação. Mas, aprender Programação pode

ser bem complexo dependendo do produto a ser construído. Entretanto, como já citado nesta

pesquisa, não temos a intenção de formar programadores da noite para o dia, mas sim

desenvolver o Pensamento Computacional atrelado à Matemática, de forma simples.

Caro Professor, é importante lembrar que a presente aula está destinada a alunos de 11

a 12 anos, sem conhecimento prévio de Programação e, possivelmente, alunos dessa idade

não se interessariam por um assunto apresentado de forma teórica e abstrata, sem que eles

possam aprender imediatamente sua utilidade prática e concreta. Para tal, a Atividade 6, faz

esse resgate e traz para o protagonismo da Aula 4 “as linguagens de Programação nos itens de

tecnologias usadas no dia a dia desses alunos”. Nesse caminho, os diferentes parâmetros da

sequência podem ser controlados e ajustados como desejarmos, dependendo do contexto em

que a sequência será dada.

Encaminhamentos metodológicos: Faça a projeção da tela do seu computador, no

laboratório de informática. Particularmente, utilizamos uma televisão para projeções visuais

ampliadas, sem necessidade do datashow.

O que é lógica de Programação?

A lógica de Programação é a maneira pela qual um programa de computador é escrito

para executar uma ou mais funções por meio de uma sequência de etapas, sendo a sequência

um algoritmo. Um algoritmo é uma sequência de passos que devem ser realizados até a

resolução do problema; o algoritmo computacional também é uma sequência de passos que

segue diretrizes e linguagem para a Programação computacional. Isto é, o programador

basear-se-á no algoritmo computacional para desenvolver um programa e o computador e

executará os comandos conforme foi programado. A linguagem que os computadores

entendem é uma sequência lógica de 0 e 1, o sistema binário. Para desenvolver a lógica de

Programação, ela precisa ser escrita em uma linguagem de Programação que seja "traduzida",

nesse caso ela é compilada e depois convertida em código binário para que a máquina entenda

a sequência de comandos e execute as tarefas.

De um modo geral, a lógica de Programação é baseada na lógica computacional

compartilhada por humanos e máquinas, que é o que exploramos à medida que continuamos a

71

interagir com novas tecnologias. Com isso em mente, definições de lógica de Programação

mais específicas podem ser desenvolvidas com base em trechos de códigos.

“A importância

de

conhecer

lógica

de

Programação não é apenas uma questão prática, mas algo

essencial para quem deseja ter voz ativa e participar

plenamente da sociedade. Na nova era digital que estamos

vivendo, não basta sabe usar ou interagir com as

tecnologias, é preciso ser fluente nelas. Quem aprender

lógica de Programação saberá isso e muito mais tarefas

(trecho adaptado de Giovanni Júnior, 2018).”

A lógica de Programação é a ciência que revela diferentes caminhos e conhecimentos

científicos. Serve para provar racionalmente fatos e conjecturas, e permitir distinguir o

raciocínio certo do errado. O conceito de lógica pode ser aplicado a diversas áreas de estudo,

mas a que está recebendo mais atenção é a lógica de Programação, que começou com o

avanço da Ciência da Computação ao longo dos anos, com a finalidade de expressar algumas

linguagens, como Python, Java, C++, C# etc.

Para que serve?

Hoje, programar é quase tão importante quanto saber ler e escrever. Quem não

aprender a programar nos próximos anos corre o risco de ficar dependente de outros

profissionais ou até mesmo de ser excluído do mercado de trabalho. Cada sistema de

computador é escrito em uma linguagem de Programação específica feita através da lógica de

Programação.

“À medida

que

você

aprende

lógica

de

Programação, você cresce intelectualmente e desenvolve

habilidades em escrita, pensamento crítico,

trabalho em

equipe e raciocínio lógico. É importante se aprofundar na

lógica, pois as habilidades advindas dela são atemporais. E

como se aplicam os algoritmos na lógica de Programação?

Através da criação de uma sequência de comandos que é

dada em uma ordem e devem ser executados pelo

computador. Os mesmos desafios envolvidos com a criação

de algoritmos também se aplicam à Programação. Portanto,

os algoritmos não são tão lineares, apresentando diversos

72

caminhos possíveis e combinações de caminhos” (trecho

adaptado de Giovanni Júnior, 2018).

Na Figura 3.12, temos alguns exemplos resultantes da evolução da Programação, suas

aplicações e avanços tecnológicos de uso diário no mundo contemporâneo, entre eles, jogos

individuais e coletivos no computador e/ou celular, o algoritmo implantado no buscador do

google e a robótica.

Figura 3.12 - Exemplos de aplicações, avanços e a importância da programação.

73

Fonte: TecCiencia (2022). Disponível em: < http://teccienciapiloto.ufba.br/ >.

Linguagem de Programação

Programar é dizer ao computador o que deve ser feito, sendo que os conectivos lógicos

e operadores relacionais serão os responsáveis por decidirem, ao analisar os valores, quais

blocos de códigos deverão ser executados.

C# (C Sharp) é uma linguagem de programação orientada a objetos criada pela

Microsoft como parte da plataforma de desenvolvimento “. Net”. Foi desenvolvida baseada

em: Delphi; C++; Java. Esta linguagem é o símbolo da plataforma .Net, pois foi criada a partir

do zero para “rodar” sobre a plataforma .Net e usufruir de todos os seus recursos. Por se tratar

de uma linguagem que possui uma extensa gama de recursos, classes, métodos e atributos,

não serão todos abordados, pois o intuito é introduzir a linguagem básica do C#.

Alguns exemplos de conectivos lógicos e estruturas de repetição utilizados na

linguagem de programação C#:

Figura 3.13 - Quadro com termos técnicos de programação e seus significados.

Termos técnicos de

Programação

Significado

Algoritmo

Conjunto de passos para certa tarefa.

Código Fonte

gerar uma versão do programa que é capaz de

Código de um programa. O computador o usa para

processar.

74

Console

Janela, normalmente preta, em que é possível trabalhar

na linha de comando.

Conjunto de definições (sintáticas e semânticas) usadas

Linguagem

para fazer um texto que o computador é capaz de

entender, ou seja, um programa de computador.

HELLO WORLD

Refere ao trecho de código mínimo para a impressão na

tela da frase HELLO WORLD - “Olá, mundo” com

determinada tecnologia. O principal objetivo desses

códigos é demonstrar o mínimo necessário para o

desenvolvimento de uma aplicação com determinada

tecnologia.

SubClasse

Classe filha; a classe que inicia a partir da

implementação de outra.

Fonte: Nogueira (2022).

Figura 3.14 - Quadro com termos de ferramentas de programação e seus significados.

Termos de ferramentas

de Programação

Significado

C# (C sharp)

Linguagem de programação orientada a objetos desenvolvida

pela Microsoft e que faz parte da plataforma .NET. Pode ser

utilizada para diversas plataformas, isto é, web, desktop ou

mobile.

Compilador

Transforma o código de uma linguagem de programação para

uma linguagem de máquina (ou alguma de nível mais baixo,

ou seja, mais próxima do código binário que o hardware

processa) que é lida pelo processador.

Sistema operacional

Sistema que faz comunicação entre o hardware, gerenciando e

distribuindo seus recursos, e os demais softwares e cria uma

75

plataforma comum a todos os programas utilizados. Exemplo:

Windows 10, Linux.

Terminal

Interface de linha de comando, isto é, uma interface (meio)

para a pessoa enviar comandos ao computador.

Fonte: Nogueira (2022).

O Quadro da Figura 3.15, demonstra alguns operadores lógicos, operadores relacionais e

operadores presentes na linguagem de programação C#. E a Figura 3.16 demonstra alguns

conectivos lógicos e estruturas de repetição presentes na linguagem de programação C#.

Figura 3.15 - Quadro com conectivos lógicos e operadores utilizados na linguagem de

programação C#.

Operadores

Tipos de operadores: operadores aritméticos; operadores de atribuição; operadores
relacionais e operadores lógicos

Operadores aritméticos

+

-

*

/

%

Operadores lógicos

&&

||

!

Descrição

adição

subtração

multiplicação

divisão

Resto/módulo

Descrição

e

ou

não

Fonte: Carvalho Filho (2015).

76

Figura 3.16 - Quadro com alguns exemplos de conectivos lógicos e estruturas de repetição

utilizados na linguagem de programação C#.

Alguns conectivos

if => “se”, ou seja, uma condicional.

else => “Caso contrário” ou “oposto”, ou seja, algo para ser feito caso contrário a uma

condição que é verificada pelo “se” “if”.

end if=> combinação da palavra “if” com a palavra “end” que significa “fim”, assim sendo

a tradução é “fim do se”.

Estruturas de repetição

While: do...while. Executa comando enquanto a instrução for verdadeira, verificando se a

condição é verdadeira ou não, no final do looping.

for: poder ser utilizado apenas quando se tem noção da quantidade de vezes que se

pretende repedir instruções.

Fonte: Carvalho Filho (2015).

Agora, chegou o momento de descobrir as aplicações e a importância da lógica e da

linguagem de Programação relevantes atualmente.

ATIVIDADE 6

(Material impresso e entregue a cada grupo para realização da Atividade 6 - Aula 4)

“A Inserção do Pensamento Computacional nas Aulas de Matemática no Ensino Básico”

Aula 4 – Conteúdo: Lógica, linguagens de Programação, importância e aplicações.

Identifique o grupo que realizou a atividade, por favor!

Grupo A com quatro alunos (A1, A2, A3 e A4);

Grupo B com quatro alunos (B1, B2, B3 e B4);

Grupo C com quatro alunos (C1, C2, C3 e C4);

Grupo D com quatro alunos (D1, D2, D3 e D4);

77

Grupo E com quatro alunos (E1, E2, E3 e E4).

Orientações metodológicas: A lógica e a linguagem de Programação, como vimos nos

slides, são as matérias-primas com a qual são desenvolvidos os programas de computador, os

quais tem diversas aplicações e produtos tecnológicos disponibilizados para nós, por exemplo,

sites, aplicativos de smartphones e tablets, jogos e tantos outros recursos tecnológicos que

fazem parte do nosso cotidiano. A Atividade 6 - consiste na investigação da importância da

Programação e suas aplicações relevantes no dia a dia dos alunos. Cada grupo deverá escolher

3 tópicos dos citados abaixo, ou, algum tópico que não esteja listado, e que o grupo julgue

mais relevante para realizar a atividade. É um momento importante para conhecer e perceber

a importância da Matemática nessas aplicações.

Observação: O grupo pode optar por realizar a atividade:

 De forma digitalizada, ou seja, fazer os registros das pesquisas e investigações em

algum editor de texto do computador, salvar, nomear e enviar o arquivo para o e-mail

do professor;

 Manuscrita, caso o grupo opte por esta forma de registro, entregar a atividade ao

professor ao término da aula.

 Jogos, quais jogos você mais gosta? Nesses jogos usam-se a Programação em suas

construções? Qual a linguagem utilizada na sua construção? Será que usam

conhecimentos matemáticos?

 Pesquisar sobre o algoritmo de busca do Google, qual lógica implantada? Será que usa

conhecimentos matemáticos?

 A robótica usa a linguagem de Programação? Qual(is)? Qual a mais utilizada? Será

que usam conhecimentos matemáticos?

 Sobre os sistemas operacionais dos smartphones, seja IOS ou Android, investigue

sobre as linguagens de programações utilizadas, qual sistema operacional é mais

comum no nosso país? Qual a mais utilizada? Será que usam conhecimentos

matemáticos?

 O caixa eletrônico do banco, você já deve ter presenciado seus pais e/ou responsáveis,

realizarem transações financeiras através dele. Qual a linguagem de Programação que

um caixa eletrônico utiliza? Ela é única? Qual a mais utilizada? Será que usam

conhecimentos matemáticos?

78

 Máquinas registradoras dos caixas de supermercado, que registram e identificam um

produto através de um código de barras presente no produto. Como essa máquina

registradora é programada? Qual a linguagem? Qual a mais utilizada? Será que usam

conhecimentos matemáticos?

Sugestão ao professor: Nos slides, apresenta-se, de forma geral, os componentes para

o processo de Programação, termos técnicos e comandos etc. Entretanto, queremos nesta

atividade, além de demonstrar tais termos e suas importâncias, estimular e despertar o

interesse da turma para a Programação das tecnologias mais utilizadas por eles no dia a dia e

que eles façam investigações e encontrem informações sobre as várias linguagens de

Programação dessas tecnologias.

Orientações metodológicas: Professor, acompanhe cada grupo na realização desta

atividade, veja se todos os grupos conseguiram iniciar a pesquisa. Faça intervenções caso

preciso!

3.1.2.2 - Aula 5

Conteúdo: Experimentação e prática da lógica e linguagem de Programação em C#.

Criação do "Meu primeiro programa" no VS22.

Orientações para o professor: Professor, temos a possibilidade de inspirar os alunos

envolvidos na aula e elucidar a Programação construindo um programa a partir de um

procedimento que siga ‘passo a passo’ como os algoritmos criados à mão nas atividades das

aulas anteriores. Temos o objetivo de estabelecer uma aprendizagem suficientemente

contextualizada, concreta e motivadora, e dar significado ao ensino da Matemática atrelado ao

Pensamento Computacional. Para promover a compreensão dos conceitos, é possível não

solicitar (se o tempo permitir) aos alunos que reproduzam o programa apresentado no

procedimento, mas para criar um programa um pouco diferente do apresentado no

procedimento. A ideia é induzir os alunos a compreender as diferentes etapas do processo,

com a finalidade de adaptar o procedimento apresentado na sequência para obter êxito na

elaboração do programa solicitado.

A seguir, apresenta-se a Atividade 7, que trata sobre a construção do ‘Meu primeiro

programa’.

79

Orientações metodológicas: Nesta aula, queremos reforçar a importância do passo a

passo na elaboração de um programa computacional entendendo sua estrutura e os conectivos

lógicos envolvidos.

ATIVIDADE 7

 Vamos criar o “Meu primeiro programa”?

 Abra o VS22, crie e nomeie seu projeto;

 Siga o passo a passo mostrado pelas setas amarelas.

Figura 3.17 - Criando um novo projeto no VS22.

Fonte: print screen da tela do computador do autor.

80

 Escolha ‘Aplicativo do Console’.

Figura 3.18 - Tela do programa VS22 e indicação de como proceder para criar um projeto

(seta amarela).

Fonte: print screen da tela do computador do autor.

81

 Abrirá a seguinte tela para a escrita dos códigos do programa.

Figura 3.19 - Tela do computador mostrando “Meu primeiro programa” no VS22 (print da

tela da atividade realizada pelo grupo B).

Fonte: o próprio autor (2022).

Figura 3.20 - Quadro com passo a passo para criar “Meu primeiro programa”.

Linhas Código

Estrutura do Programa

1

2

3

4

5

6

7

8

using System;

using System.Collections.Generic;

using System.Text;

namespace ‘Meu primeiro programa’

{

class Program

{

82

9

10

11

12

13

14

15

static void Main(string[] args)

{

Console.WriteLine("Este é o meu primeiro programa de

experimentação da linguagem de programação C# na aula de

Console.ReadKey();

matemática");

}

}

}

Fonte: o próprio autor (2022).

Orientações ao professor para o desenvolvimento da Atividade 7: As linhas 1, 2 e

3 começam com uma diretiva “using” que faz referência ao namespace System e já aparecem
automaticamente quando se cria o ‘novo projeto’. Na linha 5 está declarada a namespace do

programa, sendo esta, utilizada para organizar o código, neste caso, aparece “meu primeiro

programa” (aqui aparecerá o nome dado ao projeto, preenchido automaticamente). Da linha

6 a linha 15, a sequência de comandos ou símbolos devem ser preenchidos pelo usuário (no

VS22). Na linha 6, note o abre chaves, este símbolo serve para informar para o compilador

que uma sessão de comandos está sendo iniciada. Na linha 7, uma classe está sendo criada

(class Program). Estamos agrupando funções e procedimentos que estarão agrupados em um

bloco de código. Na linha 9, está a função principal do código, a instrução “static void

Main(string[] args)”, que consiste num método estático chamado “Main” que serve como
ponto de entrada de um programa em C#, ou seja, método “Main” é o ponto de entrada de um

programa executável; é onde o controle do programa começa e termina. Na linha 10, note,

mais uma vez o abre chaves, o uso do símbolo serve para informar para o compilador mais

uma sessão de comandos. Na linha 11 o Console.WriteLine (comando de tela interativa e que

escreverá numa linha o que estiver entre parênteses e aspas na sequência). A linha 12,

Console.ReadKey(); especifica a chave de leitura no console. Nas linhas 13,14 e 15 temos

chaves que, quando fecham, informam para o compilador que a sessão de comandos fora

finalizada. Este é um programa simples que vai exibir a mensagem quando compilado:

83

“Este é o meu primeiro programa de experimentação da linguagem de programação

C# na aula de matemática”.

Orientações metodológicas: Professor, acompanhe cada grupo na realização desta

atividade, veja se todos os grupos conseguiram compilar o sistema criado. Faça intervenções

caso preciso!

3.1.2.3 - Aulas 6 e 7

Conteúdo: Criação de um sistema digital/programa que identifique se um número é

par ou não.

Orientações para o professor: O objetivo das Aulas 5 e 6 desta sequência didática

consiste em fazer com que os alunos trabalhem e pensem que sim, é possível programar um

computador: para isso, os alunos terão à sua disposição dois momentos dedicados à criação ou

Programação deste sistema digital, por se tratar da criação de um programa mais extenso e um

pouco complexo para alunos do 6º ano. Dessa forma, dedicaremos duas aulas com duração de

50 minutos cada. Porém, antes de praticar no VS22, vamos retomar o algoritmo

computacional: o algoritmo computacional é semelhante com o algoritmo de resolução de um

problema matemático à mão, porém diferente, no sentido deste algoritmo estar voltado para

inserção do programa computacional. Um algoritmo computacional segue a sequência

determinada pelo algoritmo matemático de resolução de um problema: entrada, declaração de

variáveis, implementação do procedimento de solução e saída, porém incluindo os conectivos

lógicos de Programação.

ATIVIDADE 8

Orientações metodológicas: Faça o algoritmo descrito no exemplo 14 no quadro com

a turma, comente sobre a importância de estabelecer critérios, organização de ideias e o

crucial: a elucidação do ‘passo a passo’.

Exemplo 14: Par ou Ímpar

Passo 1: (Entrada de dados) - > ingresse um número:

Passo 2: Se resto da divisão de

por 2 é zero, então



é par (aqui tem que ser

observado que muitas vezes os critérios Matemáticos podem ser

implementados no





84

computador da mesma forma como são resolvidos à mão. Já outras vezes tem que ser usado a

própria linguagem de programação para que a máquina consiga mostrar o resultado desejado e

esta é a principal diferença entre algoritmo Matemático e algoritmo Computacional).

Senão,

é ímpar. Término do Programa.

Passo 3: (saída de dados): o número



é par. Término do Programa (aqui pode ser

observado que a saída de dados pode ser um número ímpar, caso o resto da divisão de



não tenha sido zero).

por 2



Na sequência, iremos construir um sistema digital/programa que identifique se um

número é par (divisível por 2 e resto zero) ou, senão, será ímpar.

 Abra o VS22 e crie um novo projeto, nomeie seu projeto e salve. (observação:

o passo a passo para criar, nomear e salvar o ‘novo projeto’, não será mais

demonstrado nesta aula, caso julgue necessário, auxilie o grupo para tal

processo ou retorne a Aula 4 para que eles possam acompanhar o passo a passo)

Orientações ao professor: Acompanhe o “passo a passo” de construção desse sistema

digital, pois ele contém termos e comandos que a turma ainda não fez uso (Figuras 3.20 e

3.21).

85

Figura 3.21 - Algoritmo computacional para criar um sistema digital/programa que identifique

se um número é “Par ou Ímpar” (print da tela do grupo D).

Fonte: o próprio autor (2022)

1

2

3

4

5

6

7

8

9

86

Figura 3.22 - Quadro com passo a passo para criar um sistema digital/programa que

identifique se um número é “Par ou Ímpar”.

Linhas Código

Comentários

Estrutura do Programa

using System;

using System.Collections.Generic;

using System.Linq;

projeto, as 5 linhas são

preenchidas automaticamente.

Após a criação e nomeação do

using System.Text;

using System.Threading.Tasks;

namespace Par ou ímpar

{

internal class Program

10

{

11

static void Main(string[] args)

Biblioteca com o nome do

projeto.

Abre chaves, este símbolo

serve para informar para o

compilador que uma sessão de

comandos está sendo iniciada.

Biblioteca de classe do

programa.

Abre chaves, este símbolo

serve para informar para o

compilador que uma nova

sessão de comandos está sendo

iniciada.

Num programa em C#, método

‘Main’ é o ponto de entrada de

um programa executável; é

87

onde o controle do programa

começa e termina.

Abre chaves, este símbolo

serve para informar para o

compilador que uma nova

sessão de comandos está sendo

iniciada.

Resumo do programa. (A frase

escrita com //, permite a escrita

em única linha.

12

{

13

14

15

16

17

18

19

20

21

//Desenvolva um algoritmo que

solicite a entrada

//de um número e calcule se o número

Continuação do resumo do

é par ou ímpar.

programa.

int número;

Declaração de variável ‘número

inteiro’.

Console.WriteLine ("Informe o

número:");

número =

Convert.ToInt32(Console.ReadLine());

No console, durante a

compilação, a tela interativa irá

solicitar um número.

É um método mais completo

que tenta fazer a conversão de

variáveis de forma mais

ampla, podendo usar tipos não

numéricos.

//Para verificar se é par ou ímpar basta

analisar se é divisível por 2

Critério de divisibilidade por 2.

//Se for divisível por 2 ==> É par

Condição.

88

//Se não for divisível por 2 ==> Não é

par

Condição.

if é um conectivo que significa

“se”.

(“SE” o número informado na

entrada for dividido por 2 e

processa resto igual a 0)

Caso o resultado da linha 23

tenha sido satisfatório, escreva

no console em linha “o número

é par”.

Chaves quando ‘fecham’,

informam para o compilador

que uma sessão de comando foi

finalizada.

“else” é um conectivo que

significa “senão”.

Caso a entrada, ou seja, o

número informado, quando

dividido por 2 deixar resto

diferente de zero, a saída será

“o número é ímpar”.

if (numero % 2 == 0)

{

Console.WriteLine("o numero é par");

}

else

{

Console.WriteLine ("O número é

ímpar");

}

{

22

23

24

25

26

27

28

29

30

31

89

Após a entrada do número, a

resposta do programa dada,

uma tecla pressionada e o

‘console’ fecha

automaticamente.

Chave de leitura do console.

Chaves que, quando ‘fecham’,

informam para o compilador

que a sessão de comandos fora

finalizada.

32

33

34

35

36

37

//Aguarde que uma tecla seja

pressionada

Console.ReadKey();

}

}

}

}

Fonte: o próprio autor (2022).

Orientações metodológicas: Professor, acompanhe cada grupo na realização desta

atividade, veja se todos os grupos conseguiram compilar o sistema criado da paridade de um

número natural. Faça intervenções caso preciso! É um momento para aprimorar, testar as

habilidades adquiridas e aumentar a bagagem de conhecimento em Programação. Caso seja

possível, incentive àqueles que terminaram a atividade antes do prazo determinado, a fazerem

um outro algoritmo computacional e crie o simples sistema digital; sobre os conteúdos de

“Múltiplos e Divisores” ou outro conteúdo de Matemática, é hora de explorar e testar as

habilidades.

3.2 Percepções de professores de Matemática sobre a Interseção do Pensamento

Computacional nas aulas de Matemática

Metodologias qualitativas e quantitativas são convencionalmente apresentadas como

opostos: quantidade versus qualidade, números versus letras. Por um lado, pesquisas de

estudos quantitativos afirmam uma pesquisa objetiva e dedutiva. Entretanto, existe o uso

conjunto destas duas metodologias (LESSARD-HÉBERT, et. al., 1997). Neste tipo de

abordagem, a combinação metodológica permite uma melhor compreensão dos objetos

estudados graças ao uso de diferentes perspectivas.

90

Na verdade, queremos obter vários níveis de análise, que nos ajudem a inserir o

Pensamento Computacional nas escolas. Dessa forma, propõe-se neste subcapitulo levantar

informações relacionadas com o Pensamento Computacional,

junto a professores de

Matemática da educação básica. Para Blanchet e Gotman (2015), quando são realizadas

entrevistas através de questionários, os dados enriquecem a compreensão e interpretação dos

resultados produzidos.

Para a execução da pesquisa, optou-se pela realização de entrevistas através de

questionários criados no google forms. As enquetes dos questionários giram em torno de três

eixos,

tornando possível

relatar

concepções de professores

sobre o Pensamento

Computacional, suas práticas em relação ao Pensamento Computacional e seu ensino. A

entrevista começou com perguntas sobre as trajetórias dos indivíduos e sua experiência no

contexto do ensino (Figura 3.23).

Figura 3.23 - Figura contendo informações do questionário respondido pelos professores e

perguntas sobre identificação pessoal e da escola que lecionam e anos de experiência

profissional.

Fonte: o próprio autor (2022).

91

O primeiro eixo (perguntas de 2 a 4) diz respeito ao conhecimento de tecnologias

aplicadas na educação, bem como o conhecimento do Pensamento Computacional que

atribuiu à disciplina de Matemática seu desenvolvimento, de acordo com a BNCC. Para

responder tais questões foram elaboradas as seguintes perguntas: Pergunta 2 “Você conhece e

domina ferramentas de tecnologias? (aplicativos, softwares e/ou programas para uso em sala

de aula)”; Pergunta 3 “Caso tenha selecionado que, "conheço, mas não domino", na questão

02, poderia relatar qual ou quais seriam?”; Pergunta 4 “Caso tenha selecionado que "conheço

e utilizo em aula", na questão 02, poderia relatar qual ou quais seriam?”.

O segundo eixo (perguntas de 5 a 7) refere-se ao material didático que os professores

utilizam em sala de aula e como estes materiais explicam algoritmos e fluxogramas e ao

preparo dos professores frente a estes assuntos. Estas questões foram respondidas através das

perguntas: Pergunta 5 “A figura abaixo (Figura 3.24), mostra o passo a passo (algoritmo) para

transformar dízimas periódicas compostas por anti-período em frações geratrizes. "Segundo a

BNCC 2018, esse tema está vinculado a Matemática e serve como uma ferramenta para

“traduzir” situações-problema em linguagem ou formatos que poderiam ser interpretados por

sistemas digitais através de algoritmos/fluxogramas." No livro didático que você utiliza nas

aulas neste ano letivo, você já notou algum fluxograma/algoritmo parecido?”;

Pergunta 6 “Na questão 05, caso tenha selecionado a opção SIM, registre o nome do

livro e editora, por favor.”; Pergunta 7 “A questão 05, mostra um algoritmo completo de

transformação de dízimas periódicas simples ou compostas nas suas frações geratrizes. Caso o

passo a passo não estivesse completo, na sua avaliação, caro(a) professor(a), qual seria o seu

grau de dificuldade para completá-lo?”.

92

Figura 3.24 - Algoritmo ou “passo a passo” para transformar dízimas periódicas compostas

por anti-período em frações geratrizes.

Fonte: Giovanni (2018).

Fo

No terceiro e último eixo, as perguntas de 8 a 13 foram focadas no Pensamento

Computacional e no preparo dos professores acerca deste tema. As perguntas elaboradas neste

eixo foram as seguintes: Pergunta 8 “De acordo com a BNCC 2018, o tema: “O Pensamento

Computacional na Matemática” entraria em vigor nas escolas brasileiras a partir de 2020.

Você conhece o termo Pensamento computacional ?”; Pergunta 9 “Já participou de cursos de

aperfeiçoamento ou alguma outra

formação para

lidar com o tema Pensamento

Computacional ?”; Pergunta 10 “Somente a consulta à BNCC 2018 pode lhe oferecer suporte

para desenvolver o Pensamento Computacional nas aulas de Matemática?”; pergunta 11 “Na

sua escola, ou nas escolas, onde você leciona: - ‘existem espaços próprios e/ou máquinas

93

disponíveis para criar sistemas digitais ou dar suporte para o desenvolvimento e prática do

Pensamento Computacional, mas o uso é restrito’; - ‘não existem espaços próprios e/ou

máquinas disponíveis para criar sistemas digitais ou dar suporte para o desenvolvimento e

prática do Pensamento Computacional’; - ‘existem máquinas disponíveis na escola, mas são

de uso restrito’; - ‘não existem máquinas disponíveis na escola’; - ‘existem máquinas, mas

não me sinto preparado(a) para criar sistemas digitais’; - ‘outros’. Pergunta 12 “Após a

confecção de algoritmos/fluxogramas feitos à mão em aula com os alunos, (como da questão

05),

seria

possível,

a partir desta prática,

criar

algoritmos de

resoluções

de

situações/problemas Matemáticos no computador ou celular (utilizando uma plataforma de

apoio)?”; Pergunta 13 “A Inserção do Pensamento Computacional nas Aulas de Matemática

no Ensino Básico”, é o tema do presente trabalho. Ele tem como propósito contribuir para o

ensino e a construção do conhecimento sobre este assunto atual e que ficou, em grande parte,

sob a responsabilidade da área de Matemática. Sobre a temática, gostaria de deixar alguma

sugestão?”.

Os resultados desta pesquisa estão descritos no Capítulo 4 deste trabalho.

94

4. RESULTADOS DA APLICAÇÃO DA SEQUÊNCIA

DIDÁTICA E AS PERCEPÇÕES DE PROFESSORES DE

MATEMÁTICA

SOBRE

A

INSERÇÃO

DO

PENSAMENTO COMPUTACIONAL

Este capítulo está dividido em 2 partes: 4.1 Resultados da aplicação da sequência

didática proposta, Aulas 1, 2, 3, 4, 5, 6 e 7 e 4.2 Resultados da pesquisa juntos aos professores

de Matemática, sobre suas percepções quanto a Inserção do Pensamento Computacional nas

Aulas.

4.1 Resultados da aplicação da sequência didática proposta

4.1.1 Resultados da aplicação das Aulas 1, 2 e 3

4.1.1.1Resultados da aplicação da Aula 1

Aula 1 – O professor/pesquisador, após as devidas autorizações dos diretores da

escola, coordenadores e equipe pedagógica, pontuou sobre o porquê das atividades que seriam

realizadas a partir daquele dia, solicitou apoio e dedicação nas realizações das atividades e

salientou a importância da contribuição de cada um. Foi preciso fazer uma apresentação,

explanar sobre o tema da pesquisa e que os resultados obtidos ali, fariam parte de um

compilado de resultados, mas que ninguém seria exposto.

A aplicação desta sequência didática, ocorreu no turno matutino em uma turma do 6º

do ensino fundamental II de uma escola pública da rede estadual de ensino da cidade de

Divinópolis no estado de Minas Gerais. A escolha do local da realização da pesquisa deu-se

em função do professor/pesquisador ministrar aulas nesta escola.

Procedemos a aplicação da sequência didática nos meses de junho de 2022 e julho de

2022, dias em que ocorriam as aulas de Matemática. Nos sete dias de aplicação, tivemos a

participação, em média, de 20 alunos. Dessa forma e seguindo o planejamento da sequência

didática, as três primeiras aulas foram realizadas na própria sala de aula da turma, exceto

quando eles foram levados ao laboratório de informática para responderem ao questionário do

Google forms. A turma foi dividida em grupos, para melhor organização e otimização dos

espaços físicos e para que os alunos pudessem trocar informações entre si. Dessa forma, segue

a divisão dos 5 grupos formados, nos quais cada grupo foi composto por 4 integrantes:

95











Grupo A, composto pelos alunos A1, A2, A3 e A4;

Grupo B, composto pelos alunos B1, B2, B3 e B4;

Grupo C, composto pelos alunos C1, C2, C3 e C4;

Grupo D, composto pelos alunos D1, D2, D3 e D4;

Grupo E, composto pelos alunos E1, E2, E3 e E4.

Na Aula 1, foram apresentados slides com os conteúdos ilustrativos sobre “noção de

divisibilidade” e alguns “critérios de divisibilidade” que trouxeram definições e exemplos.

Também foram apresentadas as definições de fluxogramas com nomenclaturas, ícones e uso

de algumas simbologias usadas no processo de construção; e algoritmos matemáticos. No

discorrer da apresentação dos slides dos conteúdos de divisibilidade, com noção e seus

critérios, os alunos não realizaram intercorrências.

Após as apresentações dos slides, passamos para as orientações e encaminhamentos da

Atividade 1, que mostra o fluxograma da Figura 3.1: “Bora tomar um cafezin mineirin?” O

fluxograma foi projetado com o uso da projeção da imagem do datashow. Os alunos acharam

“graça” do título do fluxograma e o professor/pesquisador os indagou: Quem aqui conhece

este “passo a passo” que está presente nesta imagem? Após algumas falas, solicitou aos

grupos a execução da Atividade 1. Para iniciar essa atividade, os alunos receberam o material

impresso para construir o fluxograma solicitado na Atividade 1 e as Figuras 3.2 e 3.5 também

foram entregues impressas. A seguir, dois exemplos de fluxogramas confeccionados pela

turma e selecionados para ilustração (Figuras 4.1 e 4.2), conforme combinado com a turma,

todos fariam a atividade à mão e àqueles que desejassem digitalizar seu fluxograma, isso seria

possível, mas como atividade extra, a ser realizada fora do recinto escolar.

96

Figura 4.1 - Fluxograma de processo com os critérios de divisibilidade por 2, realizado pelo
aluno B2.

Fonte: o próprio autor (2022).

Figura 4.2 - Fluxograma de processo com os critérios de divisibilidade por 2, realizado à mão
pelo aluno C3.

Fonte: o próprio autor (2022).

De forma geral, todos os alunos realizaram a atividade. Entretanto, algumas atividades

foram entregues sem muito capricho ou zelo, mas tínhamos o objetivo de construir um

fluxograma de processo e verificar a aprendizagem dos temas abordados na aula, isso sim foi

possível avaliar positivamente. Nas duas aulas seguintes, foi possível aprofundar e explorar

97

mais critérios de divisibilidade, algoritmos de divisibilidade e alguns exemplos de

fluxogramas de processo.

4.1.1.2 Resultados da aplicação da Aula 2

Aula 2 - Atividade 2 – Quando apresentado o fluxograma da Figura 2.6, que trata

sobre os critérios de divisibilidade por 6, os alunos acharam bem interessante, porém

apareceram alguns questionamentos, os quais eram naturalmente esperados:

(01) B1: Muito difícil esse professor.

(02) Professor: Calma, temos um processo de criação e prática desses fluxogramas a

seguir.

(03) A2: Existe uma forma ou programa que faça isso professor?

(04) Professor: Temos alguns programas, mas vamos pensar que, se registrarmos o

‘passo a passo’ para construção desse fluxograma, será que facilitaria?

(05) D1: Talvez.

(06) Professor: Vamos tentar turma? Temos uma aula dedicada a isso, mas sem pressa.

Nos encaminhamentos e orientações para a realização da Atividade 2, os alunos

aplicaram a Propriedade 3.6, dada na Aula 2, para fixar o critério de divisibilidade por 6 e

posteriormente marcaram no quadro, os números dispostos de forma tabular de 1 a 50,

marcando àqueles que fossem divisíveis por 2 e 3 simultaneamente. Dessa atividade,

escolhemos duas para ilustrar os resultados (Figuras 4.3 e 4.4). Foi percebido nesta atividade,

que os alunos se interessaram bastante, principalmente em “colorir” (Atividade 2). Os alunos

foram bem participativos, sendo verificado, pelas atividades entregues ao professor, que na

sua maioria os resultados foram bem-sucedidos.

98

Figura 4.3 - Números divisíveis por 6, atividade realizada pelo aluno C4.

1

6

11

16

21

26

31

36

41

46

2

7

12

17

22

27

32

37

42

47

3

8

13

18

23

28

33

38

43

48

4

9

14

19

24

29

34

39

44

49

5

10

15

20

25

30

35

40

45

50

Fonte: o próprio autor (2022).

Figura 4.4 - Números divisíveis por 6, atividade realizada pelo aluno A3.

Fonte: o próprio autor (2022).

99

Percebemos na atividade da Figura 4.4 que, a forma de registrar do aluno A3 está

correta, mas visualmente, parece confuso. Recomendamos como um aperfeiçoamento dessa

aula, que os registros da atividade proposta deveriam ser concisos e organizados.

Aula 2 – Atividade 3, os alunos da turma realizaram outra atividade a fim de fixar o

conteúdo matemático sobre os critérios de divisibilidade de números naturais. Nesta atividade,

os alunos precisaram investigar o valor numérico da letra dada no enunciado da atividade,

para verificar o critério de divisibilidade por 2, por 3 e por 6.

O escopo da Atividade 3 foi: Considere os números 325d e 70b3.

a) Qual é o menor valor que se pode atribuir a d para que 325d seja divisível ao

mesmo tempo por 2 e por 3?

Neste item, a questão levou o aluno a pensar, primeiramente, na estratégia para

descobrir o valor numérico de d para que o número dado fosse divisível por 2. O aluno teve

como opção de escolha os números 0, 2, 4, 6 e 8, conforme o critério de divisibilidade por 2.

Para verificar o critério de divisibilidade por 3 (somando os algarismos do número dado e

verificar se o número seria divisível por 3), ele precisou fazer substituições dos números que

ele tinha como ‘escolhas’ a fim de satisfazer as duas condições.

divisível por 2, pois termina em 0, mas não é divisível por 3, pois a soma 1 não é
 = ,  −   =>  +  +  +  =  =>  +  = 
divisível por 3;

, logo 3250 é

2, pois termina em 2 e é divisível por 3, pois a soma 3 é divisível por 3;
 = ,  =>  +  +  +  =  =>  +  = 

Logo, o menor valor atribuído a d para que 325d seja divisível por 2 e por 3 é

, logo 3252 é divisível por

.

b) Qual é o menor valor que se pode atribuir a d para que 325d seja divisível por 6?

 =

A resposta esperada no item b também deve ser 2, pois conforme Propriedade 3.6:

um número será divisível por 6 quando for divisível, simultaneamente, por 2 e por 3.

Como o item b consiste em encontrar o menor valor, segue que o valor atribuído a d

deve ser 2.

100

c) Qual é o menor valor que se pode atribuir a b para que 70b3 seja divisível por 3?

Neste item, buscou-se encontrar o valor b para que o número 70b3 fosse divisível

por 3, sendo os valores possíveis de b: 0, 1, 2, 3, 4, 5, 6, 7, 8 e 9

Para

tem-se 7003. Utilizando o critério de divisibilidade por 3 (somando os

algarismos do número dado e verificar se o número seria divisível por 3):

 = ,

, como 1 não é divisível por 3, o número 7003 também não
7 + 0 +

será.
0 + 3 = 10  1 + 0 = 1

Para

, tem-se 7013, sendo

. Como 2 não é

divisível por 3, o número 7013 também não será.

 = 

7 + 0 + 1 + 3 = 11  1 + 1 = 2

, tem-se 7023, sendo

e como 3 é divisível por

3, o número 7023 também será.
 = 

7 + 0 + 2 + 3 = 12  1 + 2 = 3

Como os valores verificados e atribuídos a b estão em ordem crescente, a resposta

esperada deve ser

.

Seguem dois exemplos dos resultados (Figuras 3.5 e 3.6).

 = 

Figura 4.5 - Números divisíveis por 2, por 3 e, simultaneamente, por 2 e 3, divisíveis também
por 6, atividade realizada pelo aluno B4.

Fonte: o próprio autor (2022).

101

Figura 4.6 - Números divisíveis por 2, por 3 e, simultaneamente, por 2 e 3, divisíveis também
por 6, atividade realizada pelo aluno E2

Fonte: o próprio autor (2022).

:

As respostas dadas estão corretas, porém as verificações de como foram encontradas

tais soluções não foram declaradas. Nesse caso, faltou o professor/pesquisador intervir e

solicitar os registros do procedimento da solução. Isso é importante, inclusive, para que

em caso de erro, especificar qual o procedimento matemático a ser corrigido.

4.1.1.3 Resultado da aplicação da Aula 3

Aula 3 - Atividade 4 – Foi dedicada ao aprofundamento dos critérios de

divisibilidades, porém dentro do enfoque de algoritmos e fluxogramas. Foi um momento de

trabalho em grupo. Os alunos do grupo C, construíram o algoritmo com descrição narrativa do

critério de divisibilidade por 7, utilizaram ainda da recente descoberta e citada pelo

professor/aplicador em uma aula de Matemática.

102

“Menino de 12 anos descobre fórmula matemática que ajuda o estudo da divisão. O

nigeriano Chika Ofili descobriu em um trabalho de férias uma nova fórmula para testar a

divisibilidade por sete (Lucas Pestana, 2019)”.

Segue o trabalho do Grupo C (Figuras 4.7 e 4.8).

Figura 4.7 - Trabalho realizado pelo grupo C: “Algoritmo com descrição narrativa da
divisibilidade de um número natural por 7”.

Fonte: o próprio autor (2022).

Figura 4.8 - Trabalho realizado pelo Grupo C: “Algoritmo com descrição narrativa da
divisibilidade de um número natural por 7”.

Fonte: o próprio autor (2022).

103

O Grupo C também conseguiu realizar o fluxograma da descrição narrativa do

algoritmo da divisibilidade de um número natural por 7, porém, com intervenções do

professor (Figura 4.9).

Figura 4.9 - Representação de um fluxograma com os critérios de divisibilidade por 7,
atividade realizada pelo Grupo C.

Fonte: o próprio autor (2022).

Os outros 4 grupos fizeram o critério de divisibilidade por 11, porém os resultados não

foram satisfatórios e não serão apresentados aqui, mesmo com intervenções do professor, os

outros grupos não conseguiram estabelecer uma ordem ou passo a passo e acharam muito

“grande” o critério de divisibilidade por 11 e bem ‘complexo’.

(07) B1: muito mais fácil fazer a divisão.

(08) E2: que ‘enorme’, impossível ‘decorar’ isso tudo.

(09) Professor: decorar não, melhor entender o processo e que tal ‘criar uma

sequência de passos para facilitar a construção’?

104

Mesmo estimulados pelo professor, nenhum outro grupo conseguiu finalizar a

atividade. Nas devolutivas das Atividades 1, 2 e 3, verificamos que os resultados matemáticos

foram, na sua maioria, satisfatórios, apesar da falta de capricho e zelo de alguns alunos na

elaboração dos procedimentos e construções. Ressaltamos que as atividades elaboradas foram

pensadas na realidade e nos espaços físicos da escola pública de ensino. Contudo, na

Atividade 4, 4 grupos demostraram dificuldades para criar um algoritmo descritivo do critério

de divisibilidade por 11 e por conseguinte, a construção do fluxograma desse critério. O único

grupo que finalizou a Atividade 4, foi o Grupo C.

Na verdade, na Aula 2, o único algoritmo narrativo mostrado foi o critério de

divisibilidade por 6. Logo, o esperado seria que os alunos conseguissem mostrar um

algoritmo narrativo da divisibilidade por 4, ou, 8, ou, 9. E optaram por fazer um critério que

não tinha sido ensinado em sala (divisibilidade por 7 e por 11). Talvez tenha faltado clareza

por parte do professor na proposta da atividade.

A seguir os alunos foram encaminhados ao laboratório de informática para realizar a

Atividade 5, atividade esta que o aluno respondeu, individualmente, um questionário através

do formulário do Google forms. O intuito dessa atividade foi avaliar a aprendizagem das

Aulas 1,2 e 3.

4.2 Resultados da pesquisa junto aos alunos participantes das Aulas 1, 2 e 3 da

sequência didática proposta

A primeira questão, perguntava o nome do discente e a identificação da escola, sendo

todos da EEMCF (Figura 4.10).

Figura 4.10 - Percentual de respostas para a pergunta 1: “Qual seu nome? (16 respostas).

Fonte: o próprio autor (2022).

105

A segunda pergunta questionava se o discente já havia tido algum contato com

algoritmos e fluxogramas. De acordo com as respostas 18,8%; (

respostas) dos discentes

conheciam, porém 81,3% (

respostas) responderam que nunca tiveram contato (Figura

3

4.11). Esse resultado já era esperado e vislumbra-se que a medida que o Pensamento

13

Computacional

for

implementado, as porcentagens de conhecimento de algoritmos e

fluxogramas possam melhorar.

Figura 4.11 - Percentual de respostas para a pergunta 2: “Você já teve contato com
algoritmos/fluxogramas?” (16 respostas).

Fonte: o próprio autor (2022).

Na Pergunta 3, procurou-se saber sobre o Pensamento Computacional, se o discente

já havia pensado no tema. De acordo com as respostas, 93,8% (

respostas) dos discentes

nunca ouviram falar e nem conheciam o tema e 6,2% (

resposta) responderam que conhecem

15

e já tiveram contato (Figura 4.12).

1

Figura 4.12 - Percentual de respostas para a pergunta 3: “Sobre o Pensamento Computacional,
já havia pensado no tema? (como são programados os computadores e outros)?” (16
respostas).

Fonte: o próprio autor (2022).

106

Já na Pergunta 4, o questionamento foi “Como você avalia as aulas de Matemática na

construção de algoritmos e fluxogramas?”; as respostas obtidas foram 62,5%, (

respostas)

“ótimas” e 37,5% (

respostas) citadas como ‘boas’. As respostas: ‘Não gostei’ e ‘Regulares’

10

não foram citadas (Figura 4.13).

6

A partir das respostas dadas, percebeu-se que as aulas que apresentaram e estimularam

as construções dos algoritmos e fluxogramas tiveram uma boa aceitação pelos discentes.

Figura 4.13 - Percentual de respostas para a pergunta 4: “Como você avalia as aulas de
Matemática na construção de algoritmos e fluxogramas?” (16 respostas).

Fonte: o próprio autor (2022).

A Questão 5, perguntava ao discente sobre “Você acha que o uso de algoritmos e

fluxogramas nas

aulas

contribuíram para o seu entendimento do Pensamento

Computacional ?”. As respostas foram bem positivas, com 93,8% (

respostas)

responderam que sim, contra 6,2% (

resposta) negativa (Figura 4.14).

15

As avaliações dos discentes continuaram positivas sobre o uso algoritmos e

1

fluxogramas, mostrando que estes conteúdos são importantes para desenvolver novos

‘saberes’ relacionados ao Pensamento Computacional. Além disso, as respostas demonstraram

que os discentes se mostraram interessados por esse conteúdo.

107

Figura 4.14 - Percentual de respostas para a pergunta 5: “Você acha que o uso de algoritmos e
fluxogramas nas aulas contribuíram para o seu entendimento do Pensamento
Computacional ?” (16 respostas).

Fonte: o próprio autor (2022).

A 6ª Questão perguntou: “De todas as atividades que foram desenvolvidas nas aulas,

qual você gostou mais? Por ser uma questão aberta, obtivemos variadas respostas e,

algumas delas repetidas (Figura 4.15). Dentre as respostas, destacam-se aquelas relacionadas

ao fluxograma 25% (

respostas), como: “fazer os fluxogramas” 15% (

respostas), “dos

fluxogramas” 20% (

respostas) e ‘construir o fluxograma’ 5% (
4

resposta). Pode-se também

2

citar as respostas pertinentes ao Quadro de 6, 5% (1 resposta), por exemplo: “marcar o quadro

1

3

de 6” 15% (

respostas) e “do Quadro de 6” 5% (

resposta). E podemos observar na Figura

3.15, que alguns discentes responderam que gostaram de todas as atividades 5% (

resposta).

1

2

Entretanto, obtivemos resposta negativa, na qual o discente não gostou de nenhuma

1

atividade 5% (

resposta). Dessa forma, as respostas relacionadas a fluxogramas, de forma

geral, foram as mais citadas, com 57% e tivemos somente uma resposta (5%) que respondeu

1

de forma negativa. Todavia, a avaliação aconteceu de forma individual e sem interferências

do professor.

108

Figura 4.15 - Respostas para a pergunta 6: “De todas as atividades que foram desenvolvidas
nas aulas, qual você gostou mais?” (16 respostas).

Fonte: o próprio autor (2022).

A 7ª pergunta questionava: “Qual(is) a(s) maior(es) dificuldade(s) que você

encontrou para realizar as atividades?” Analisando as respostas que os discentes deram,

percebeu-se que a maior dificuldade encontrada foi desenhar o fluxograma à mão 50%

(

respostas), a outra resposta mais citada diz respeito ao passo a passo do fluxograma 35%

(

respostas). Como podemos perceber, essas respostas estão relacionadas entre si, uma vez

8
que para a construção do fluxograma, deve ser estabelecer cada etapa/passo a passo. Notou-se
6
que, a maioria dos alunos avaliaram a construção à mão e/ou desenho de um fluxograma com

“grau de dificuldade” elevado, por acharem trabalhoso construir à mão, pois sabiam que

aquela atividade poderia ser realizada no computador de forma rápida e simples, como o

fluxograma da Figura 4.16 realizado pelo aluno B2.

Com relação a atividade da descrição do passo a passo de um algoritmo, o professor

interveio bastante para que fosse elaborada de forma concisa e organizada. Alguns alunos

relataram, durante a atividade, que dava “trabalho demais”, porém o fizeram. Acreditamos

que essa dificuldade demonstrada nas construções, seja de fluxogramas ou passo a passo de

um algoritmo, pudesse ser sanada se tivéssemos mais aulas disponíveis e a possibilidade de

construir esses fluxogramas e o passo a passo de algoritmos num programa de computador.

109

Figura 4.16 - Respostas para a pergunta 7: “Qual(is) a(s) maior(es) dificuldade(s) que você
encontrou para realizar as atividades?” (16 respostas).

Fonte: o próprio autor (2022).

Por fim, a última questão: “Para você, qual o grau de importância das aulas de

Matemática usarem mais recursos lúdicos e práticos?”. Os resultados foram bem positivos.

Os graus de importância variavam de 0 a 10, com 0 nada importante e 10 como muito

importante. Assim, as respostas mostraram que 50% das respostas avaliaram com o grau de

importância 10, 25% responderam grau de importância 9, 12,5% responderam grau de

importância 8, 6,3% responderam grau 7 e 6,3% responderam grau 6 (Figura 4.17). Através

destas respostas, percebeu-se que a utilização de diferentes recursos didáticos, como aulas

práticas, teve impacto positivo sobre os discentes. E como notado nas respostas anteriores,

esses recursos contribuíram na aceitação do tema e aprendizagem dos discentes.

Figura 4.17 - Levantamento do grau de importância sobre o tema.

Fonte: qo próprio autor (2022).

110

Dessa forma, o professor/pesquisador pôde avaliar o processo de evolução e

entendimento da turma nestas três primeiras aulas da sequência didática e foi possível

constatar que os objetivos das três primeiras aulas foram cumpridos.

4.3 Resultados da aplicação das aulas sobre a Programação Computacional

Os indicadores ligados a esta segunda parte da aplicação da sequência didática

puderam ser percebidos através da postura e reação dos alunos, relacionado, por exemplo,

com algum problema na execução de seu programa e sobre as perguntas feitas pelos alunos

durante a apresentação das aulas. No geral, os alunos tendiam a trabalhar de forma

independente. No entanto, a grande a maioria dos grupos pediu intervenção do professor

quando a execução de seu programa não apresentava o resultado esperado.

Em relação a programação computacional, apenas dois grupos tentaram entender por si

mesmos qual era o problema e corrigi-lo por conta própria e conseguiram. Isso mostra que as

habilidades dos integrantes dos grupos para a programação computacional são diferentes, o

qual também já era esperado.

Além disso, alunos perguntaram se seu programa estava correto ou não, mesmo antes

de executá-lo, o que pode revelar a pouca expertise ou prática computacional. Percebeu-se

também que, quando o professor estava ocupado e os alunos teriam que esperar longos

minutos antes de sua chegada, eles buscavam a solução por conta própria, pelo qual suponho

que estavam suficientemente motivados para alcançar (ver) o resultado.

4.3.1 Resultado da aplicação da Aula 4

Aula 4 – Atividade 6 - O objetivo desta atividade consistia na investigação das diferentes

aplicações no dia a dia relacionados à programação computacional, os quais muitas das vezes

são concretizadas em forma de tecnologias como jogos, redes sociais, buscadores de websites,

robótica, inteligência artificial, entre outros. Após a apresentação dos slides do conteúdo de

lógica e linguagem de programação com termos técnicos, conectivos lógicos e operadores,

cada grupo escolheu 3 tópicos de 6 citados na atividade, ou, algum tópico que não estivesse

listado, e que o grupo julgasse mais relevante para realizar a atividade. Foi um momento

importante para conhecer e perceber a importância da Matemática nessas aplicações.

Observação: O grupo pôde optar por realizar a atividade:

111

 De forma digitalizada, ou seja, fazer os registros das pesquisas e investigações em

algum editor de texto do computador, salvar, nomear e enviar o arquivo para o e-mail

do professor;

 Manuscrita, caso o grupo opte por esta forma de registro, entregar a atividade ao

professor ao término da aula.

O primeiro tópico disponível para escolha, trouxe os questionamentos:

Jogos, quais jogos você mais gosta? Nesses jogos usam-se a programação em suas

construções? Qual a linguagem utilizada na sua construção? Será que usam conhecimentos

matemáticos? Na Figura 4.18 temos o resultado de um único grupo que escolheu esse tópico

para pesquisa.

Figura 4.18 - Investigação sobre jogos e programação realizada pelo grupo B.

Fonte: o próprio autor (2022).

Esse primeiro resultado mostra a importância da intervenção do professor durante a

realização da atividade. O grupo não se preocupou em responder a todos os questionamentos e,

infelizmente, entregou como resultado, 3 linhas de pouca informação.

No segundo tópico disponível para escolha dos grupos tínhamos como tema:

Pesquisar sobre o algoritmo de busca do Google, qual lógica implantada? Será que

usa conhecimentos matemáticos? Na Figura 4.19 temos um exemplo com informações acerca

do assunto.

112

Figura 4.19 - Atividade realizada pelo grupo A, “Pesquisar sobre o algoritmo de busca do
Google, qual lógica implantada? Será que usa conhecimentos matemáticos?

.

Fonte: o próprio autor (2022).

A investigação e registro realizada pelo Grupo A, foi a atividade escolhida para

ilustrar o tema, pois trouxe todas as respostas de forma clara e objetiva. Aqui é importante

destacar que apesar do grupo ter respondido à questão levantada, o que eles fizeram foi

“copiar e colar” e não apresentaram a resposta nas próprias palavras deles.

113

O terceiro tópico disponível como opção de escolha para investigação indagava sobre:

A robótica usa a linguagem de Programação? Qual(is)? Qual a mais utilizada? Será que

usam conhecimentos matemáticos? Foi o tema mais escolhido, 3 grupos escolheram pesquisar

esse tema e escolhemos 2 registros para ilustrar este tópico escolhido (Figuras 4.20 e 4.21).

Figura 4.20 - Pesquisa realizada e registrada pelo Grupo E.

Fonte: o próprio autor (2022).

Figura 4.21 - Trabalho realizado pelo Grupo A.

Fonte: o próprio autor (2022).

Nas duas ilustrações (Figuras 4.20 e 4.21), observamos que o Grupo E, foi bem

sucinto e objetivo, mas responderam aos questionamentos com as próprias palavras. Já o

Grupo A, trouxe bastante informação, inclusive, cita a linguagem C# (C SHARP) que é uma

114

linguagem de programação de alto nível e a linguagem que usaremos na criação dos sistemas

digitais registrados e frutos desta pesquisa.

No quarto tópico para escolha dos grupos, queríamos saber: Sobre os sistemas

operacionais dos smartphones, seja IOS ou Android, investigue sobre as linguagens de

programações utilizadas, qual sistema operacional é mais comum no nosso país? Qual a

mais utilizada? Será que usam conhecimentos matemáticos? Três grupos optaram por esse

tópico e trouxemos 2 exemplos para demonstrar a seguir nas Figuras 4.22 e 4.23.

Figura 4.22 - Investigação realizada pelo Grupo C.

Fonte: o próprio autor (2022).

115

Figura 4.23 - Investigação realizada pelo Grupo E.

Fonte: o próprio autor (2022).

Na Figura 4.22, o Grupo C atendeu às expectativas e trouxe as informações para

responder aos questionamentos. Na Figura 4.23, novamente, observamos a necessidade da

intervenção do professor para intervenções e orientações durante a realização da atividade.

Alunos de 11 a 12 anos, na sua maioria, não são autônomos e, em grande parte, precisam de

orientações e supervisão e isto foi conferido na execução das atividades.

O quinto tópico relata sobre as diversas tecnologias que permeiam um caixa eletrônico

de um banco e indagava: O caixa eletrônico do banco, você já deve ter presenciado seus pais

e/ou responsáveis, realizarem transações financeiras através dele. Qual a linguagem de

Programação que um caixa eletrônico utiliza? Ela é única? Qual a mais utilizada? Será que

usam conhecimentos matemáticos? Um único grupo pesquisou e fez registros sobre, segue na

Figura 4.24.

116

Figura 4.24 - Pesquisa e registro do Grupo D.

Fonte: o próprio autor (2022).

O grupo não atendeu às expectativas, respondeu a primeira pergunta correta, já aos

questionamentos seguintes, quando responde sobre a linguagem mais utilizada, trata de

opções de saque de dinheiro. Quando perguntado ‘ela é única’? Traz tipos de transferência de

dinheiro e/ou pagamentos. Sobre o uso da Matemática no caixa eletrônico, de forma simples,

atende ao questionamento.

O último tópico disponível para investigação, questionava sobre: Máquinas

registradoras dos caixas de supermercado, que registram e identificam um produto através

117

de um código de barras presente no produto. Como essa máquina registradora é programada?

Qual a linguagem? Qual a mais utilizada? Será que usam conhecimentos matemáticos?

Nenhum grupo optou por fazer essa investigação.

Portanto, nessa atividade, além de demonstrar as diferentes aplicações das linguagens

de programação e a aplicabilidade da Matemática, percebemos como é muito importante

estimular e despertar o interesse da turma pela programação computacional, através de

tecnologias presentes nos seus cotidianos, o qual se apresenta como fundamental na busca da

inserção do Pensamento Computacional.

4.3.2 Resultados da aplicação da Aula 5

Aula 5 – Atividade 7, tinha-se como objetivo aprimorar o conhecimento e oferecer

uma aprendizagem de forma contextualizada e motivadora para criar o “meu primeiro

programa”. Na atividade, a mensagem no console deveria ser: “Este é o meu primeiro

programa de experimentação da linguagem de programação C# na aula de matemática”.

Vejamos na Figura 4.25 a tela do VS22:

Figura 4.25 - Tela do computador mostrando “Meu primeiro programa” no VS22, realizado
pelo Grupo B.

.

Fonte: o próprio autor (2022).

A compilação no console apresentou a mensagem programada: (Figura 4.26).

Figura 4.26 - Compilação no modo console do VS22, print da tela do computador do grupo A.

118

Fonte: o próprio autor (2022).

Usou-se a projeção na TV da tela do computador do professor, para que os alunos

pudessem acompanhar o passo a passo do algoritmo do “Meu primeiro programa”. Assim,

todos os grupos conseguiram compilar seus programas com algumas intervenções realizadas

pelo professor, pois continham pequenos erros de grafia ou pontuações/símbolos equivocados

no VS22, mesmo assim, avalio que a Atividade 7 foi realizada com sucesso. A turma ficou

muito empolgada, pois é uma escola que atende uma comunidade escolar carente, grande

parte dos alunos não possuem internet e nem aparelhos de telefonia modernos como

smartphones, por exemplo.

4.3.3 Resultados da aplicação das Aulas 6 e 7

Aulas 6 e 7 – Atividade 8: Após a realização do algoritmo matemático descrito no

“exemplo 14” do Capítulo 2 – se um número é par ou ímpar, junto com os critérios de

passos estabelecidos, organização de ideias e a ênfase sobre as diferenças do algoritmo

matemático e o computacional, construímos na linguagem de programação C#, usando o

compilador VS22, os comandos para que o compilador conseguisse mostrar o resultado

desejado, ou seja, se o número inserido/informado seria par ou ímpar.

119

Figura 4.27 - Algoritmo computacional sobre paridade de um número natural, print da tela do
Grupo D.

Fonte: o próprio autor (2022).

A compilação no console apresentou a mensagem “O número é ímpar” para o número

121 sugerido pelo grupo E (Figura 4.28).

120

Figura 4.28 - Impressão da compilação do programa do Grupo E, para o número, 121,
inserido.

Fonte: o próprio autor (2022).

A compilação no console apresentou a mensagem “o número é par” para o número

‘125636’ sugerido pelo grupo B (Figura 4.29).

Figura 4.29 - Print da tela do Grupo B para o número, 125636, inserido.

Fonte: o próprio autor (2022).

O tema "algoritmos e programação", de acordo com a BNCC 2018, define: "escrever,

compilar e executar um programa simples”, levando em considerações as “pluralidades e a

realidade” da educação básica brasileira. O desenvolvimento inclui a fase de tentativa e erro

onde o aluno constrói gradualmente um programa que responde ao problema que ele próprio

se propôs. Dessa forma, avaliamos que a presente experiência de ensinar a programar e

compilar um código computacional simples foi bem-sucedida.

121

4.4 Resultados da pesquisa junto aos professores de Matemática sobre a

percepção e quanto a Inserção do Pensamento Computacional

Ao todo, participaram da pesquisa sobre a Inserção do Pensamento Computacional, 41

professores de Matemática, os quais lecionam em diferentes escolas da rede pública básica de

ensino. A seguir, apresentam-se as respostas do questionário.

Iniciando o primeiro eixo do questionário, a primeira pergunta “Há quanto tempo você

leciona Matemática na rede pública básica de ensino?” indicou que mais de 60% dos

professores (

respostas) responderam que dão aula há mais de 10 anos (Figura 4.30). Esse

resultado aponta que os professores começaram a lecionar antes das alterações propostas pela

26

BNCC 2018, e que, o ensino do Pensamento Computacional não foi abordado em suas

formações profissionais.

Figura 4.30 - Percentual de respostas para a Pergunta 1: “Há quanto tempo você leciona
Matemática na rede pública básica de ensino?” (41 respostas).

Fonte: o próprio autor (2022).

De acordo com as respostas da segunda pergunta “Você conhece e domina ferramentas

de tecnologias? (aplicativos, softwares e/ou programas para uso em sala de aula)”, percebeu-

se que a maioria 88% (36 respostas) dos professores conhecem algumas ferramentas, porém

apenas 39% (16 respostas) responderam que conhecem e as utilizam em sala de aula. No

entanto, cinco professores (12%) responderam que não conheciam e não utilizavam qualquer

tipo de ferramenta de tecnologias em sala de aula (Figura 4.31). Esses resultados demonstram

que o uso de diferentes recursos didáticos e tecnológicos não são explorados pelos professores.

122

Entretanto, como notamos através da experiência com os alunos (ver seção 3.1.1.4, pergunta

7), os recursos lúdicos auxiliam na compreensão do tema da aula.

Figura 4.31 - Percentual de respostas para a pergunta 2: “Você conhece e domina ferramentas
de tecnologias? (aplicativos, softwares e/ou programas para uso em sala de aula)” (41
respostas).

Fonte: o próprio autor (2022).

Conectada à pergunta 2, a pergunta 3 “Caso tenha selecionado que, "conheço, mas não

domino", na questão 02, poderia relatar qual ou quais seriam?” e a pergunta 4 “Caso tenha

selecionado que "conheço e utilizo em aula", na questão 02, poderia relatar qual ou quais

seriam?” foram direcionadas para aqueles professores que responderam que conheciam

alguma ferramenta de tecnologias. Na pergunta 3, procurou-se saber quais ferramentas os

professores que responderam “conheço, mas não domino” utilizavam; e, como respostas

tivemos “geogebra” 50% (1 resposta) e “aplicativos, calculadoras grátis” 50% (1 resposta).

Em relação à pergunta 4, o direcionamento foi para aqueles que responderam “conheço e

utilizo em sala de aula”; as respostas obtidas foram “geogebra, Excel” 50% (1 resposta) e

“geogebra, mesa digital e slides” 50% (1 resposta). Analisando as respostas, percebe-se que a

ferramenta de tecnologia mais utilizada era “geogebra” que é um aplicativo de Matemática

gratuito e que pode ser usado em diferentes níveis de ensino e para diferentes conteúdos,

como álgebra e geometria. No entanto, vale mencionar que tivemos uma baixa participação

nestas perguntas, sendo que apenas dois professores responderam à pergunta 3, e outros 2

respondendo à pergunta 4; isto demonstra que poucos professores usam ferramentas de

tecnologia.

123

O segundo eixo do questionário começa com a pergunta 5 “A figura abaixo, mostra o

passo a passo (algoritmo) para transformar dízimas periódicas compostas por anti-período em

frações geratrizes. "Segundo as normas da BNCC 2018, esse tema está vinculado a

Matemática e serve como uma ferramenta para “traduzir” situações-problema em linguagem

ou

formatos

que

poderiam ser

interpretados

por

sistemas

digitais

através

de

algoritmos/fluxogramas." No livro didático que você utiliza nas aulas neste ano letivo, você já

notou algum fluxograma/algoritmo parecido?” (ver Figura 3.22). A maioria 66% (27 respostas)

dos entrevistados responderam que não (ver a Figura 4.32). Este resultado demonstra que a

maioria dos atuais livros didáticos não estão de acordo com as normas da BNCC 2018 e isso

pode atrapalhar a abordagem deste tema pelos professores bem como o aprendizado dos

alunos em relação ao Pensamento Computacional.

Figura 4.32 - Percentual de respostas para a pergunta 5: “No livro didático que você utiliza
nas aulas, você já notou algum fluxograma/algoritmo parecido com o Figura 2.33?” (41
respostas).

\

Fonte: o próprio autor (2022).

A pergunta 6 “Na questão 05, caso tenha selecionado a opção SIM, registre o nome do

livro e editora, por favor.” foi voltada para aqueles que responderam “sim” na pergunta

anterior e busca conhecer quais eram os livros didáticos e as respectivas editoras que os

professores utilizam em sala de aula. Das quatro respostas que tivemos, o livro “Positivo

Sistema de Ensino” da Editora Positivo e o livro “A conquista da Matemática” da Editora

FTD foram mencionados uma vez. Também foram mencionadas as editoras FDT Moderna e

SAS, porém sem especificar quais livros didáticos eram usados. O resultado indica que

124

existem, ao menos, quatro editoras que atualizaram os seus conteúdos de acordo com as

normas da BNCC 2018.

Ainda retomando a figura mostrada na pergunta 5, os professores foram indagados

quanto a facilidade ou dificuldade que teriam se tivessem que completar o algoritmo

esquematizado. Esta pergunta foi respondida por 29 professores, sendo que apenas 14% (4

respostas) responderam que teriam facilidade em completar o algoritmo, caso necessário

(Figura 4.33). Tal fato demonstra o despreparo que a maioria dos professores apresentam,

sendo difícil que esse tema seja abordado em sala de aula.

Figura 4.33 - Percentual de respostas para a pergunta 7: “Qual seria o seu grau de dificuldade
para completar o algoritmo que transforma dízimas periódicas em suas frações geratrizes?”
(29 respostas).

Fonte: o próprio autor (2022).

A pergunta 8 foi “De acordo com a BNCC 2018, o tema: “O Pensamento

Computacional na Matemática” entraria em vigor nas escolas brasileiras a partir de 2020.

Você conhece o termo Pensamento Computacional?”, sendo que apenas 20% (8 respostas)

responderam que conheciam o termo Pensamento Computacional

(Figura 4.34).

Isto

demonstra o pouco conhecimento sobre o Pensamento Computacional e a falta de atualização

e formação continuada dos professores frente as mudanças propostas pela BNCC 2018.

125

Figura 4.34 - Percentual de respostas para a pergunta 8: Você conhece o termo Pensamento
Computacional conforme BNCC, em vigor desde 2018? (41 respostas).

Fonte: o próprio autor (2022).

Os professores também foram perguntados quanto a participação em cursos de

aperfeiçoamento ou outra formação sobre o tema Pensamento Computacional, através da

pergunta 9. “Já participou de cursos de aperfeiçoamento ou alguma outra formação para lidar

com o tema Pensamento Computacional?” e, novamente uma pequena porcentagem, 12% (5

respostas), respondeu que sim (Figura 4.35). Estes resultados corroboram o resultado da

pergunta anterior, na qual a maioria dos professores responderam que desconheciam o tema

Pensamento Computacional.

Figura 4.35 - Percentual de respostas para a pergunta 9: “Já participou de cursos de
aperfeiçoamento ou alguma outra formação para lidar com o tema Pensamento
Computacional ?” (41 respostas).

Fonte: o próprio autor (2022).

126

No que diz respeito a BNCC 2018, foi perguntado “Somente a consulta à BNCC 2018

pode lhe oferecer suporte para inserção do Pensamento Computacional nas aulas de

Matemática?”; e as respostas ficaram divididas entre “não” 49% (20 respostas) e “preciso me

informar” 51% (21 respostas) (Figura 4.36). Os resultados apontam que o conteúdo fornecido

pela BNCC 2018 não dá o suporte necessário para a atualização dos professores quanto o

desenvolvimento do Pensamento Computacional. Por outro lado, as respostas apontam

também que os professores ainda não estão familiarizados com a BNCC de 2018.

Figura 4.36 - Percentual de respostas para a pergunta 10: “Somente a consulta à BNCC 2018
pode lhe oferecer suporte para desenvolver o Pensamento Computacional nas aulas de
Matemática?” (41 respostas).

Fonte: o próprio autor (2022).

Em relação aos espaços escolares, procurou-se saber se existiam espaços adequados

e/ou máquinas para criar sistemas digitais e inserir o Pensamento Computacional, se o uso era

restrito ou não, e se o professor se sentia apto criar sistemas digitais e implementar o

Pensamento Computacional, através da pergunta 11 “Na sua escola, ou nas escolas, onde você

leciona:”. Assim, 32% (13 respostas) dos professores responderam que existem máquinas,

mas não se sentem aptos para criar sistemas digitais. Entretanto, foi apontado pelo 20% dos

entrevistados que não existiam máquinas disponíveis nas escolas e por 17% que não existiam

espaços adequados e/ou máquinas para criar sistemas digitais e inserir o Pensamento

Computacional (Figura 4.37). As respostas continuam apontando para o despreparo dos

professores. Todavia, as escolas também têm o desafio de dar condições acadêmicas,

laboratoriais e curriculares para que os professores de Matemática possam implementar de

forma gradativa o Pensamento Computacional.

127

Figura 4.37 - Percentual de respostas para a pergunta 11: “Na sua escola, ou nas escolas, onde
você leciona:” (41 respostas).

Fonte: o próprio autor (2022).

Quando questionados sobre “Após a confecção de algoritmos/fluxogramas feitos à

mão em aula com os alunos, (como da pergunta 05), seria possível, a partir desta prática, criar

algoritmos de resoluções de situações/problemas matemáticos no computador ou celular

(utilizando uma plataforma de apoio)?”, dos oito professores que responderam à questão, 63%

(5 respostas) apontaram não ser possível a realização de tal tarefa (Figura 4.38). Mais uma vez,

as respostas apontaram o despreparo e a falta de atualização dos professores em relação a

confecção de algoritmos/fluxogramas.

128

Figura 4.38 - Percentual de respostas para a pergunta 12: “Após a confecção de
algoritmos/fluxogramas feitos à mão em aula com os alunos, seria possível criar algoritmos de
resoluções de situações/problemas matemáticos no computador ou celular? (41 respostas)

Fonte: o próprio autor (2022).

Por fim, foi criado um espaço para sugestões dos professores sobre o tema Pensamento

Computacional (Pergunta 13: “A Inserção do Pensamento Computacional nas Aulas de

Matemática no Ensino Básico”, é o tema do presente trabalho. Ele tem como propósito

contribuir para o ensino e a construção do conhecimento sobre este assunto e que ficou, em

grande parte, sob a responsabilidade da área de Matemática. Sobre a temática, gostraia de

deixar alguma sugestão?”), e obtivemos as seguintes respostas (Figura 4.39).

Figura 4.39 - Quadro com as respostas dadas pelos professores para a Pergunta 13.

Respostas dos professores para a Pergunta 13

“Preciso me informar primeiro sobre o assunto”

“Preciso de formação”

“Treinamento”

“Tema muito complexo para os professores que não tiveram formação acadêmica e para as escolas

públicas brasileiras”

“Capacitação dos docentes”

129

“Apesar de não conhecer muito bem o conceito de Pensamento Computacional, acredito que é muito

complicado trabalhar a ideia de algoritmo, ao menos nas turmas de primeiro ano em que estou

lecionando. Os alunos têm muita dificuldade de interpretar questões, mesmo as que envolvem

operações básicas da Matemática (somar, subtrair, dividir e multiplicar) e muitas vezes não sabem

realizar o cálculo. Logo, acredito que construir algum tipo de algoritmo seja extremamente desafiador

para eles”

“Bem válido esse assunto no entendimento e domínio da Matemática. Mas deveria ser abordado por

exemplo em uma aula específica. E não na grade de Matemática”

“Bem válido esse assunto no entendimento e domínio da Matemática. Mas deveria ser abordado por

exemplo em uma aula específica. E não na grade de Matemática”

“É um tema atual e importante, formação urgente aos professores”

“Formação”

“Não”

Fonte: o próprio autor (2022).

Apesar que a maioria das respostas sugerem que os professores necessitam de

capacitação para poder abordar este tema em sala de aula, alguns comentários assinalaram que

a aplicação deste tema nas escolas pública seria bastante complicada, devido à dificuldade que

os alunos têm em compreender temas mais básicos. Outra sugestão apontada foi o tratamento

desse tema fora da grade de Matemática. Por outro lado, foi apontado também que os recursos

de tecnologias são pouco utilizados pelos professores, muitas vezes, porque eles não sabem

como utilizar tais recursos ou porque as escolas não têm máquinas disponíveis para isso. Isso

pode atrapalhar o desenvolvimento de conteúdo que seriam mais bem abordados com o uso de

tecnologias, além de utilizá-las como ferramenta pedagógica, fazem a ligação entre o

conteúdo de Matemática e o mundo tecnológico que vivemos atualmente.

Outro fato que as respostas demonstram é que o conteúdo disponível na BNCC 2018

não garante a formação necessária para os professores abordarem alguns temas, como é o caso

do algoritmo/fluxograma e Pensamento Computacional. Para isso é necessário que de forma

gradativa os gestores do setor educação de Estados e Municípios, gestores escolares e

professores entendam a importância de implantação de formação continuada, e estabelecer

condições de trabalho apropriadas para a abordagem deste assunto.

130

5. CONSIDERAÇÕES FINAIS

Apesar que não se conta com um consenso sobre uma definição única sobre o

Pensamento Computacional, pode-se ter clareza que este envolve diversas dimensões.

Brennan e Resnik (2012) propõem distinguir três dimensões em Pensamento Computacional:

conceitos computacionais, práticas computacionais e perspetivas computacionais. Nesse

trabalho desenvolveu-se essas três dimensões de forma elementar, pois os alunos tiveram

noções de conceitos computacionais

(algoritmos,

fluxogramas,

termos

técnicos de

programação, operadores aritméticos e lógicos), práticas computacionais (elaboração de

algoritmos computacionais, elaboração de códigos computacionais e compilação de um

programa computacional) e perspectivas computacionais (compreensão da relação que existe

entre a resolução de problemas matemáticos e a programação computacional). Nesse sentido,

esse trabalho teve como alvo principal a indução do desenvolvimento e compilação de um

primeiro programa computacional, envolvendo um conteúdo matemático específico, o qual

está de acordo com a proposta da BNCC 2018:

“...aprender

Álgebra

contribui

para

o

desenvolvimento do Pensamento Computacional nos alunos.

Posto desta forma, entende-se que, assim como as

competências gerais deverão ser desenvolvidas durante o

processo

de

ensino

das

aprendizagens

essenciais

(conhecimentos, habilidades, atitudes, valores), o mesmo se

aplica ao Pensamento Computacional, desde que este

também seja concebido de forma

articulada a tais

aprendizagens”

A interrogante que esse trabalho tratou de responder foi: Como possibilitar a Inserção

do Pensamento Computacional nas Aulas de Matemática no Ensino Básico?

As competências e habilidades da BNCC que buscou-se alcançar foram: (EF06MA04):

Construir algoritmo em linguagem natural e representá-lo por fluxograma que indique a

resolução de um problema simples, por exemplo, se um número natural qualquer é par;

(EF06MA05): Classificar números naturais em primos e compostos, estabelecer relações

entre números, expressas pelos termos “é múltiplo de”, “é divisor de”, “é fator de”, e

estabelecer, por meio de investigações, critérios de divisibilidade por 2, 3, 4, 6, 8, 9 e 10.

131

Dessa forma, tendo em vista as diretrizes, competências e habilidades da BNCC no

que se refere ao ensino da Matemática para o 6º ano do ensino fundamental, estruturou-se

uma sequência didática para verificar como o Pensamento Computacional pode contribuir

para o ensino da Matemática, com construções de algoritmos/fluxogramas e criações de

sistemas digitais. Para elaborar a sequência didática e posteriormente aplicá-la em sala de aula,

foi preciso estabelecer estratégias para introduzir, desenvolver e inserir o Pensamento

Computacional. Nesse sentido, os planos de aulas da sequência didática foram elaborados

com o intuito de buscar a(s) resposta(s) a interrogante levantada.

Nas Aulas 1, 2, e 3, buscou-se apresentar e introduzir os conceitos de fluxogramas e

algoritmos com alguma aplicabilidade nos conteúdos de Matemática, em especial dos

critérios de divisibilidade, passando por definições e exemplos. Em relação as atividades das

referidas aulas, avaliamos que, os resultados obtidos foram satisfatórios, pois a maioria de

estudantes conseguiram concluir as atividades propostas. Na parte de fluxogramas e

algoritmos, tínhamos a expectativa de como os alunos iriam receber estes conceitos novos e,

através das atividades e do formulário respondido, podemos constatar que eles se sentem

motivados e interessados pelo tema, isso nos fazem pensar que, em relação aos estudantes, a

introdução destes novos conhecimentos não irá encontrar resistência. Entretanto, alguns

estudantes e/ou grupos não se atentaram para os detalhes de como apresentar o trabalho,

devolvendo apenas respostas numéricas, sem justificar os procedimentos. Avaliamos que

estes detalhes podem ser aperfeiçoados colocando as questões de forma mais clara em relação

ao que se espera das devolutivas.

Com a aplicação das Aulas 4, 5, 6 e 7, realizadas no laboratório de informática,

conclui-se que, mesmo com as adaptações do espaço físico, os resultados das atividades

realizadas foram bem positivos. Na verdade, toda a sequência didática foi planejada para

possibilitar à criação de um sistema digital que informasse se um número natural qualquer “de

entrada” fosse par ou ímpar. Na habilidade da BNCC EF06MA04, espera-se que o aluno

construa um algoritmo e o representasse por meio de um fluxograma, porém nesse trabalho,

explorou-se, de forma introdutória, um pouco além dessa habilidade, pois foi possível a

criação e compilação de um programa computacional. Os participantes das atividades

demonstraram grande entusiasmo com as criações e compilações de seus programas, porém

em vista que os alunos estão iniciando o segundo ciclo do ensino fundamental, foi notória a

dependência e a necessidade da presença e intervenção direta do professor nas realizações das

atividades.

132

As práticas computacionais desenvolvidas, contribuiu para que os alunos pudessem

visualizar a Matemática de outra perspectiva, diferente daquela puramente calculista e sem

nexo com a realidade. Mais ainda,

trouxe um conhecimento muito relevante para o

professor/pesquisador, sobre “um novo olhar para a Matemática e suas aplicações no mundo

contemporâneo”. Portanto, após as práticas desenvolvidas em sala de aula e embasados nos

resultados

e

avaliações

geradas,

pode-se

concluir

que,

as

construções

de

algoritmos/fluxogramas criados com o intuito de aprender o conteúdo de critérios de

divisibilidades e a criação de um sistema digital sobre a paridade de um número natural,

contribui de forma decisiva para a inserção do Pensamento Computacional. Além disso,

tornou possível o entendimento sobre a conexão do conhecimento matemático e lógico com o

mundo tecnológico em que estamos inseridos.

Apesar que a presente sequência didática aplicada, trouxe conhecimentos mínimos,

sobre a dimensão das perspectivas computacionais do Pensamento Computacional para alunos

do 6º ano do ensino fundamental II, já é possível perceber que a inserção do Pensamento

Computacional nas aulas de Matemática no ensino básico se apresenta como um desafio,

porém vislumbra-se como possível a sua inserção, pois como essa base, e a sequência de

conhecimentos matemáticos e computacionais nos anos seguintes, nos fazer esperar um futuro

melhor em relação ao ensino-aprendizagem de Matemática no mundo contemporâneo.

É preciso disser que, para que esse trabalho pudesse gerar os resultados apresentados,

foi necessário de conhecimento prévio (porém elementar) em programação, em que o

professor/pesquisador

teve que aprender e aprimorar

seus conhecimentos

sobre a

programação e compilação de um sistema digital, pois não possuía formação prévia sobre o

assunto. Essa capacitação foi fundamental para ensinar aos alunos a criarem seus programas, e

avaliamos que sem essa capacitação não seria possível a realização das aulas ministradas, pois

a formação de professores de Matemática que atuam na rede básica de ensino, não contempla

um currículo voltado para esta especificidade.

Por outro lado, precisou-se também de realizar adaptações para otimização do espaço

físico, pois os computadores não eram suficientes e a rede de internet instável, o que demostra

que para a Inserção do Pensamento Computacional, a escola tem que possuir espaços

adequados, computadores suficientes, internet estável, projetor, entre outros, ou seja, os

gestores têm que estar cientes da contrapartida institucional para possibilitar a sua inserção.

133

Nas entrevistas

realizadas com colegas professores de Matemática sobre o

Pensamento Computacional, perceberam-se alguns desafios a serem superados para que a sua

inserção aconteça: primeiramente, constatou-se que, apesar que se conta como professores

experientes (mais de 10 anos de prática profissional), percebe-se a falta de atualização frente

as mudanças do currículo escolar e também em relação ao uso de ferramenta tecnológicas, o

que acaba inibindo e/ou desencorajando a sua prática. Por outro lado, comprovou-se também,

a falta de materiais didáticos atualizados para propiciar a inserção do Pensamento

Computacional de forma articulada e sequencial.

A partir dessas considerações, podemos observar a defasagem encontrada na forma

como foi proposta a inserção do Pensamento Computacional nas Aulas de Matemática no

ensino básico e a prática em sala de aula. É possível constatar, que a maior resistência para

sua inserção não se encontra nos alunos, os quais já vivem, de alguma maneira, inseridos nas

mudanças tecnológicas. Mas, as maiores resistências serão encontradas nos professores, pela

falta de capacitação e conhecimentos/práticas prévias sobre o assunto, e também pela gestão

escolar, que desconhece a contrapartida da escola para a realização das práticas escolares em

relação a recursos pedagógicos, materiais e tecnológicos.

Não podemos desprezar o tamanho do nosso país, seja em territorialidade ou em

diversidade, nem ignorar a desigualdade econômica e social ainda presente em diversas

pesquisas e dados estatísticos. Um de nossos desafios, na área da educação, é propiciar

oportunidades iguais para todos os estudantes, sem perder a particularidade e singularidade de

cada região ou grupo. Entretanto, nesse mesmo documento (BNCC, 2018), podemos

encontrar indicações da necessidade de resguardar os valores culturais e artísticos, nacionais e

regionais. Destaca-se, que a partir da nova BNCC, alguns autores de livros didáticos do

PNLD já adaptaram seus exemplares de acordo com estas diretrizes, porém, políticas públicas,

seja a nível municipal, estadual ou federal, tanto para formação continuada de professores ou

para estruturar

instituições de ensino, ainda precisam ser entendidas, estimuladas e

implantadas, pois sem uma articulação local,

regional ou nacional, pode-se esperar

desigualdades, mesmo relacionadas à implantação do Pensamento Computacional.

Mesmo que os resultados da sequência didática proposta pareçam confirmar de forma

positiva o questionamento sobre a possibilidade de inserção do Pensamento Computacional

nas escolas, ainda há um caminho longo a ser trilhado. Devemos, uma vez, mas, considerar

relevantes o resultado das entrevistas com os professores. Nesse sentido, este trabalho

pretende auxiliar o professor que ainda carece de formação para lidar com o tema, e que ele

134

possa ser utilizado como manual básico de como introduzir e inserir o Pensamento

Computacional nas aulas de Matemática no 6º ano de ensino fundamental.

Finalmente, espera-se que este trabalho contribua para o grande desafio que se

apresenta, em tempos de pós-pandemia, sobre a inserção do Pensamento Computacional nas

Aulas de Matemática no ensino básico. Nossa expectativa é que a presente sequência didática

seja aprimorada, adaptada e contextualizada às diferentes realidades escolares em que for

aplicada e que possa agregar valor à aprendizagem e prática dos alunos e colegas professores,

ampliando seus horizontes.

135

REFERÊNCIAS BIBLIOGRÁFICAS

AHO, Alfred. Computation and computational thinking. Ubiquity symposium, 2011.
Disponível em: https://ubiquity.acm.org/article.cfm?id=1922682. Acesso em: 01 jun. 2019.

ALA, JM. Pensamento Computacional. Ponto de Vista do CACM, p. 33-35, 2006.

ASCENCIO, Ana Fernanda Gomes; CAMPOS, Edilene Aparecida Veneruchi. Fundamentos
da programação de computadores: algoritmos, PASCAL, C/C++ (padrão ANSI) e
JAVA. 3. ed. São Paulo: Pearson Education do Brasil, 2012.

BARBOSA, Luciana Leal da Silva. A inserção do Pensamento Computacional na Base
Nacional Comum Curricular: reflexões acerca das implicações para a formação inicial
dos professores de Matemática. In: Congresso Brasileiro de Informática na Educação, 2019.

BARR, Valerie; STEPHENSON, Chris. Bringing computational thinking to K-12: What is
involved and what is the role of the computer science education community? ACM
Inroads, v. 2, n.1, p. 48-54, 2011.

BASE NACIONAL COMUM CURRICULAR (BNCC). Base Nacional Comum Curricular:
em:
Educação
http://basenacionalcomum.mec.gov.br/images/BNCC_EI_EF_110518_versaofinal_site.pdf.
Acesso em: 1 jun. 2019.

Disponível

Brasília:

2018.

Base.

DF,

a

é

BERS, Henri. Méthodes, méthodologie, péedagogie. Le français dans le monde Recherches
et Applications, Méthodes et méthodologies, n. spécial, p. 96-108, 2014.

BOHL, O., J. SCHEUHASE, R. SENGLER et U. WINAND (2018). The sharable content

object reference model (SCORM) - a critical review. In : t. 2, p. 950–951 (cf. p. 26).

BORDINI, Adriana. Computação na educação básica no Brasil: o estado da arte. Revista

de Informática Teórica e Aplicada, [s. l.], v. 23, n. 2, p. 210-238, 2016.

BOUVIER, Alain; GEORGE, Michel; LE LIONNAIS. Dictionnaire des mathématiques.
Puf, 2005.

BRENNAN, Karen; RESNICK, Mitchel. Using artifact-based interviews to study the
development of computational thinking in interactive media design. In: American
Educational Research Association Meeting, Vancouver, BC, Canada. 2012.

CARVALHO FILHO, Cláudio Rogério. Operadores lógicos do C++. Curso de C++.
eXcript, 2015. Disponível em: http://excript.com/cpp/operador-logico-cpp.html. Acesso em:
10 mar. 2022.

CASTILHO, Maria Inês; BORGES Karen Selbach; FAGUNDES, Léa da Cruz. A abstração
reflexionante no pensamento computacional e no desenvolvimento de projetos de
robótica em um makerspace educacional. RENOTE, v. 16, n. 1, 2018.

DANTE, Luiz Roberto. Matemática. Contexto & Aplicações. 3 ed. São Paulo: Ática, 2018.

136

DA ROSA, Tânia. Gamificação: uma prática para revitalizar a educação. Trabalho de
Conclusão de Curso (Mídias em Educação), UFRGS, 2018.

GIOVANNI JÚNIOR, José Ruy; CASTRUCCI, Benedicto. A conquista da matemática: 6o
ano: ensino fundamental: anos ﬁnais. 4 ed. São Paulo: FTD, 2018.

GROVER, Shuchi; PEA, Roy. Computational Thinking in K—12: A Review of the State
of the Field. Educational Researcher, v. 42, n. 1, p. 38-43, 2013.

HEMMENDINGER, David. A Plea for Modesty. ACM Inroads, v. 1, n. 2, p. 4-7, 2010.

HEFEZ, 1993 (Apud Paiva...2016), Computation, Colection maths.

IBALDO, Adriana; SCHWANTES, Cíntia. Ada Lovelace, a encantadora de números. Revista
XIX, v1. n.4, p.162-176, 2017.

LESSARD-HÉBERT, Michelle; GOYETTE, Gabriel; BOUTIN, Gérald. Investigação
qualitativa: fundamentos e práticas. Lisboa: Instituto PIAGET, 1990.

LIUKAS, Linda. Hello Ruby. Adventures in coding. [S.l.]: Macmillan, 2015.

MESS. Sciences informatiques et mathématiques (200.C0). Programmes d’études pré-
universitaires.
em:
http://www.education.gouv.qc.cafileadminsite_webdocumentsenseignementsuperieurcollegial
200.C0_2008_Sciences_informatiques_et_mathematiques__2018.pdf. Acesso em: 10 jun.
2022.

Disponível

2017.

MODESTE, Simon. Teaching algorithm, what for? Some new questions for mathematics
and issues for proof learning. Tese de doutorado. Université de Grenoble, 2012.

MORETTI, Vinícius Fernandes. O Pensamento Computacional no ensino básico:
potencialidades de desenvolvimento com o uso do Scratch. Trabalho de Conclusão de
Curso. Universidade Federal do Rio Grande do Sul, 2019.

NOGUEIRA, Alexandre. 100 termos de programação para você entender. Hostgator, 2022.
Disponível em: https://www.hostgator.com.br/blog/100-termos-programacao/. Acesso em: 11
mar. 2022.

NOVA ESCOLA. Resolução da atividade principal - MAT6_02NUM. Associação Nova
https://nova-escola-
Escola,
producao.s3.amazonaws.com/jfzdQuYg6HCXVnt3vTpw4CtFznbrbtnFwheeBq28C7K5rWCv
Ud2pezKrs6Nn/resol-ativaula-mat6-02num04.pdf. Acesso em: 9 jun. 2022.

Disponível

2017.

em:

O'TOOLE, Brian; STANKOV, Lazar. Ultimate validity of psychological tests. Personality
and
em:
https://doi.org/10.1016/0191-8869(92)90241-G. Acesso em: 22 fev. 2022.

Individual Differences,

1992. Disponível

699–716,

13,

6,

p.

v.

n.

PAIVA, Maria Auxiliadora Vilela; PEREIRA, Rúbia Carla. Análise da transposição
didática do conceito de divisibilidade em uma turma do 6º ano do Ensino Fundamental.
In: I Simpósio Latino-Americano de Didática da Matemática, 2016. Resumos. Bonito-

137

Mato
content/uploads/2020/05/PAIVA-PEREIRA.pdf. Acesso em: 20 jun. 2022.

Disponível

Grosso

Sul.

em:

do

http://grupoddmat.pro.br/wp-

PAPERT, Seymour. Mindstorms: Children, computers, and powerful ideas. New York,
NY: Basic Books, Inc., 1980.

PAPERT, Seymour. The children’s machine: Rethinking school
computer. Reprint edition. Basic Books, 1988.

in the age of the

PARLONS SCIENCES. Pensée computationnelle. Ce document d'information présente
en détails ce qu’implique la pensée computationnelle (CT) et pourquoi elle est
importante pour les élèves d’aujourd’hui. Parlons Sciences, 2020. Disponível em:
https://parlonssciences.ca/ressources-pedagogiques/documents-dinformation/pensee-
computationnelle. Acesso em: 22 fev. 2022.

divisão.

PESTANA, Lucas. Menino de 12 anos descobre fórmula matemática que ajuda o estudo
em:
da
https://www.correiobraziliense.com.br/app/noticia/mundo/2019/11/19/interna_mundo,807535
/menino-de-12-anos-descobre-formula-matematica-que-ajuda-o-estudo-da-di.shtml. Acesso
em: 20 fev. 2022.

Braziliense.

Disponível

Correio

POCHON, et Blanchet .O computador na escola, a introdução à integração, 1997.

RASHED, Roshdi. Modernidade Clássica
http://www.hottopos.com/collat6/roshdi2.htm. Acesso em: 23 mar. 2019.

e Ciência Árabe. Disponível

em:

ROMERO, Margarida. De
la programmation à
l’intégration interdisciplinaire de la programmation créative. Formation et profession, v.
24, n. 1, p. 87-89, 2016.

l’apprentissage procédural de

ROMERO, Margarida; LILLE, Benjamin; PATIÑO, Azeneth. Usages créatifs du
numérique pour l’apprentissage au XXIe siècle. Presses de l’Université du Québec, p. 1-
190, 2017.

ROSHDI, R. (1997). Mathématiques et physique (Vol. 2). Seuil.

SAMPAIO, Fausto Arnaud. Trilhas da Matemática, 6  ano: ensino fundamental, anos
finais. 1 ed. São Paulo: Saraiva, 2018.

SHERIDAN, Kimberly. Learning in the Making: A Comparative Case Study of Three
Makerspaces. Journal Harvard Educational Review, v. 84, n. 4, p. 505-531, 2014.

SILVA, Leonardo Cintra Lopes. A relação do pensamento computacional com o ensino de
matemática na educação básica. Dissertação de mestrado. Universidade Estadual Paulista
(Unesp), Faculdade de Ciências e Tecnologia, Presidente Prudente, 2019.

VALENTE, José Armando; ALMEIDA, Fernando José de. Visão analítica da informática
na educação no Brasil: a questão da formação do professor. Revista Brasileira de
Informática na Educação, n.1, v. 1, 28p., 1997.

138

VICARI, Rosa Maria; MOREIRA, Álvaro; MENEZES, Paulo Blauth (cols. MENEZES,
Crediné Silva; NUNES, Daltro; LIVI, Maria Aparecida C. Pensamento Computacional.
Revisão Bibliográfica. Desenvolvido no âmbito do Projeto UFRGS/MEC, 2018.

WING, Jeannette. Computational thinking. Communications of the ACM, v. 49, n. 3, p. 33-
35, 2006.

WING, Jeannette. Computational thinking. Arquivo disponível no diretório da School of
Computer Science/Carnegie Mellon University, Pittsburgh,
em:
http://www.cs.cmu.edu/afs/cs/usr/wing/www/Computational_Thinking.pdf. Acesso em: 26
abr. 2018.

2006. Disponível

WING, Jeannette. Computational thinking and thinking about computing. Philosophical
Transactions. Series A, Mathematical, Physical, and Engineering Sciences, v. 366, p. 3717–25,
2008.

WING, Jeannette. Computational thinking: what and why? Arquivo disponível no diretório
da School of Computer Science/Carnegie Mellon University, Pittsburgh, 2010. Disponível em:
http://www.cs.cmu.edu/~CompThink/resources/TheLinkWing.pdf. Acesso em: 26 abr. 2018.

WING, Jeannette. Computational Thinking Benefits Society. Social Issues in Computing
em:
Press,
New
http://socialissues.cs.toronto.edu/index.html%3Fp=279.html. Acesso em: 27 abr. 2018.

Disponível

Academic

York:

2014.

WING, Jeannette.(2011). Research Notebook: Computational Thinking-What and Why?
Retrieved from http://www.cs.cmu.edu/link/research-notebook-computational-thinking-what-
and-why

