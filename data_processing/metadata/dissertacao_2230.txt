Universidade Federal de Vi¸cosa
Disserta¸c˜ao de Mestrado

Jos´e Magno dos Santos Fonseca

Jogos de Computador no Ensino de
Matem´atica

Florestal
Minas Gerais – Brasil
2018

Jos´e Magno dos Santos Fonseca

JOGOS DE COMPUTADOR NO ENSINO DE
MATEM ´ATICA

Disserta¸c˜ao apresentada `a Universidade Federal de Vi¸cosa,
como parte das exigˆencias do Programa de P´os-Gradua¸c˜ao
Mestrado Proﬁssional em Matem´atica em Rede Nacional,
para obter o t´ıtulo Magister Scientiae.

Florestal
Minas Gerais – Brasil
2018

Ficha catalográfica preparada pela Biblioteca da Universidade Federalde Viçosa - Câmpus Florestal T Fonseca, José Magno dos Santos, 1968-F676j2018        Jogos de computador no ensino de matemática :  Jogos decomputador / José Magno dos Santos Fonseca. – Florestal, MG,2018.         viii, 44f. : il. ; 29 cm.           Orientador: Luis Alberto D'Afonseca.         Dissertação (mestrado) - Universidade Federal de Viçosa.         Referências bibliográficas: f. 43-44.           1.  Jogos de computador. 2.  Geometria computacional.I. Universidade Federal de Viçosa. Matemática. Mestrado emMatemática - Profissional. II. Título.  510 Jos´e Magno dos Santos Fonseca

JOGOS DE COMPUTADOR NO ENSINO DE
MATEM ´ATICA

Disserta¸c˜ao apresentada `a Universidade Federal de Vi¸cosa,
como parte das exigˆencias do Programa de P´os-Gradua¸c˜ao
Mestrado Proﬁssional em Matem´atica em Rede Nacional,
para obter o t´ıtulo Magister Scientiae.

Aprovada: 27 de fevereiro de 2018.

Carlos Magno Martins Cosme

Mehran Sabeti

Luis Alberto D’Afonseca
(Orientador)

Dedicat´oria

Dedico esse trabalho `as minhas ﬁlhas, Isabela e Bruna,
agradecendo pela paciˆencia nos momentos em que me ausentei
e pelo incentivo e carinho de sempre.

`A minha fam´ılia, especialmente minha irm˜a, Dulce, sempre

com uma palavra de apoio.

`A minha esposa Gizelle (in memoriam) pois sei que onde

estiver est´a feliz com essa minha vit´oria.

E a meus pais, pelo amor e conﬁan¸ca de uma vida.

ii

Agradecimentos

Agrade¸co a Deus pela vida e por me dar for¸cas a cada dia.
Agrade¸co a meus colegas de trabalho que sempre me incentivaram
e vibraram com cada passo dado. N˜ao citarei nomes para n˜ao ser
injusto caso omita algum. S´o posso dizer que nunca esquecerei o
apoio que todos me deram.

Segundo a psic´ologa Kate Borteze,

Pessoas gratas s˜ao mais felizes!

Seguindo essa linha de racioc´ınio, sou feliz por ter encontrado colegas
de turma que sempre foram companheiros.

Do latin “cum panis”; aquele com quem dividimos o
p˜ao. Aquele que conﬁamos o suﬁciente para sentar-lo em
nossa mesa e dividir nossas ideias, vit´orias, derrotas ou
um simples peda¸co de p˜ao.

Tive a alegria de dividir com eles alegrias, tristezas, ang´ustias e
algumas pipocas... Mais que colegas, nos ﬁzemos amigos.

Sou feliz por ter algu´em a meu lado que me fortalece e incentiva.
N˜ao poderia deixar de agradecer, tamb´em, ao professor Luis
Alberto D’Afonseca, que me orientou nesse trabalho, sempre com
muita paciˆencia e dedica¸c˜ao.

iii

Resumo

FONSECA, Jos´e Magno dos Santos, M.Sc., Universidade Federal de Vi¸cosa, fevereiro
de 2018. Jogos de Computador no Ensino de Matem´atica. Orientador: Luis
Alberto D’Afonseca.

Dada a necessidade, cada vez maior, de contextualiza¸c˜ao dos assuntos ensinados,

buscamos com esse trabalho apresentar um campo com v´arias aplica¸c˜oes dos conte´udos

Matem´aticos, os jogos eletrˆonicos para computadores, celulares, tablets e consoles, que

aqui chamaremos apenas de Jogos de Computador. Apresentamos um breve hist´orico

sobre os jogos de computador, classiﬁcando-os de acordo com suas caracter´ısticas,

destacando alguns conte´udos matem´aticos presentes em sua elabora¸c˜ao. Trazemos,

tamb´em, um estudo sobre a Geometria Computacional, um ramo da Matem´atica

especiﬁcamente voltado para a computa¸c˜ao, com grande aplica¸c˜ao na elabora¸c˜ao de

Jogos de Computador. Por ﬁm, apresentamos algumas sugest˜oes de atividades que

podem ser desenvolvidas nas aulas de Matem´atica, tanto no Ensino Fundamental

como no Ensino M´edio, baseadas em situa¸c˜oes presentes nos Jogos de Computador,

que podem auxiliar no desenvolvimento de habilidades matem´aticas.

iv

Abstract

FONSECA, Jos´e Magno dos Santos, M.Sc., Universidade Federal de Vi¸cosa, February,
2018. Teaching Matematics with Computer Games. Adviser: Luis Alberto
D’Afonseca.

Given the growing need for contextualization of the subjects taught, we seek with this

work to present a ﬁeld with several applications of Mathematical content, electronic

games for computers, cell phones, tablets and consoles, which we will call here only

Computer Games We present a brief history of computer games, showing some of

the Mathematics applied on them. We also show a classiﬁcation for games according

to their characteristics and pointing to a few features present into the elaboration

of an electronic game. The Computational Geometry theory is presented due its

important application to the development of Computer Games. Lastly is shown some

suggestions of activities, based in computer games situations, which may help to

develop mathematical skills of elementary or high school students.

v

Lista de Figuras

2.1 Tennis For Two . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4
2.2 Atari . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5
2.3 Sistema Cartesiano . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
2.4 Superf´ormula . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
8
9
2.5 Mira com Vetores . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.6 Contornando Obst´aculos . . . . . . . . . . . . . . . . . . . . . . . . . . . 10

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
3.1 Soma de Vetores
3.2 Norma de um Vetor . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
3.3 Multiplica¸cao por Escalar
. . . . . . . . . . . . . . . . . . . . . . . . . . 17
ˆAngulo Entre Dois Vetores . . . . . . . . . . . . . . . . . . . . . . . . . . 18
3.4
ˆAngulo Orientado . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
3.5
3.6 Rela¸c˜ao Entre ˆAngulo e Pseudo-ˆangulo . . . . . . . . . . . . . . . . . . . 20
3.7 Pseudo- ˆAngulo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
21
3.8 Produto Vetorial
21
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . 22
3.9 Orienta¸c˜ao do Produto Vetorial
3.10 Signiﬁcado do Sinal do Produto Vetorial
. . . . . . . . . . . . . . . . . . 22
3.11 Interse¸c˜ao de Segmentos . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
3.12 ´Area do Paralelogramo . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
3.13 Coordenadas Baricˆentricas . . . . . . . . . . . . . . . . . . . . . . . . . . 25
3.14 Distˆancia Entre Dois Pontos . . . . . . . . . . . . . . . . . . . . . . . . . 25
3.15 Distˆancia Ente Dois Pontos A e B . . . . . . . . . . . . . . . . . . . . . . 25
3.16 Ponto em Pol´ıgono . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27
3.17 Distˆancia Euclidiana × Distˆancia de Manhattan . . . . . . . . . . . . . . 27
3.18 Compara¸c˜ao Entre a Distˆancia Euclidiana e de Manhattan . . . . . . . . 28

31
4.1 Distˆancias Euclidiana e de Manhattan . . . . . . . . . . . . . . . . . . .
31
4.2 Pontos do conjunto de base mais pr´oximos de k . . . . . . . . . . . . . .
4.3 Erro comum com a distˆancia de Manhattan.
. . . . . . . . . . . . . . . . 32
4.4 Medi¸c˜ao Direta . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
4.5 Medi¸c˜ao no Plano Cartesiano . . . . . . . . . . . . . . . . . . . . . . . . 33
4.6 Medi¸c˜ao com Obst´aculos . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
4.7 Atividade Distˆancias . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34

vi

Lista de Figuras

vii

4.8 Labirinto
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
4.9 Atividade Futebol . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40

Sum´ario

1

Introdu¸c˜ao

Contexto Hist´orico e Rela¸c˜ao com a Matem´atica

2
2.1 Contexto Hist´orico . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2 Tipos de Jogos de Computador . . . . . . . . . . . . . . . . . . . . . . .
2.3 Matem´atica e Jogos de Computador . . . . . . . . . . . . . . . . . . . .

1

4
4
5
7

Geometria Computacional

11
3
11
3.1 Algoritmo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
3.2 Tipos de Problemas
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
3.3 Aplica¸c˜oes
3.4
Instˆancia de um Problema . . . . . . . . . . . . . . . . . . . . . . . . . . 13
3.5 Problemas Cl´assicos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
3.6 Primitivas Geom´etricas
. . . . . . . . . . . . . . . . . . . . . . . . . . . 16
3.7 Resolu¸c˜ao de Problemas . . . . . . . . . . . . . . . . . . . . . . . . . . . 26
3.7.1 Localiza¸c˜ao de Pontos em Rela¸c˜ao a Pol´ıgonos
. . . . . . . . . . . . . . 26
3.7.2 Par Mais Pr´oximo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27

Aplica¸c˜oes em Sala de Aula

4
29
4.1 Determina¸c˜ao do Ponto Mais Pr´oximo . . . . . . . . . . . . . . . . . . . 30
4.2 Menor Caminho Para Sair de Um Labirinto . . . . . . . . . . . . . . . . 34
4.3 Trajet´oria de Um Projetil
. . . . . . . . . . . . . . . . . . . . . . . . . . 36
4.4 Posi¸c˜ao Relativa de Ponto e Pol´ıgono . . . . . . . . . . . . . . . . . . . . 39
41
4.5 Coment´arios

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

5

Conclus˜oes

Bibliograﬁa

42

43

viii

Introdu¸c˜ao

1

Ao longo de sua trajet´oria como educador, quem nunca ouviu de seus alunos
a cl´assica pergunta: “Para que estudamos isso?” Al´em de precisar responder de
maneira coerente a seus alunos, os professores enfrentam exigˆencias de cunho legal
e institucional. O artigo 35 da Lei de Diretrizes e Bases da Educa¸c˜ao Nacional
(LDB) [4] diz:

O ensino m´edio, etapa ﬁnal da educa¸c˜ao b´asica, com dura¸c˜ao m´ınima de
trˆes anos, ter´a como ﬁnalidades: [...]
IV - a compreens˜ao dos fundamentos cient´ıﬁco-tecnol´ogicos dos proces-
sos produtivos, relacionando a teoria com a pr´atica, no ensino de cada
disciplina.

Essa diretriz pode ser encontrada, tamb´em, no Manual do Professor da maioria
das escolas particulares. Por Exemplo, o Manual do Educador Verbita, do Col´egio
Arnaldo de Belo Horizonte traz, entre os princ´ıpios de suas a¸c˜oes pedag´ogicas [10]:

Realizar uma vis˜ao dinˆamica e ampla do processo ensino/aprendizagem,
integrando n˜ao s´o as diversas ´areas do conhecimento entre si, mas tamb´em
esse conhecimento `a vida e `a cidadania.

Tamb´em a Educa¸c˜ao Matem´atica se ocupa do tema. Em palestra durante o XII
Encontro de Educa¸c˜ao Matem´atica, o Prof. Dr. Marcelo de Carvalho Borba, da
UNESP – Rio Claro [6], aﬁrmou:

O ambiente virtual ﬁrma-se como lugar onde o pensamento matem´atico
passa a ser desenvolvido e compartilhado de forma mais democr´atica ao
integrar artefatos midi´aticos que moldam o ser humano e s˜ao moldadas
por ele, inﬂuenciando a maneira como o conhecimento ´e gerado.

Nessa perspectiva o professor deve estar atento `as diversas aplica¸c˜oes de cada
assunto abordado, procurando levar aos estudantes, informa¸c˜oes que tornem mais
atraente e interessante cada uma de suas aulas. Para tanto, faz-se necess´ario o
conhecimento de diferentes campos da ciˆencia nos quais a Matem´atica se apresenta
como ferramenta. Al´em disso, aprofundar-se em algum desses campos, auxilia

1

Cap´ıtulo 1.

Introdu¸c˜ao

2

na melhor contextualiza¸c˜ao de suas aulas. Autores renomados de livros did´aticos
adotados em todo pa´ıs, como Luiz Roberto Dante [11] e Gelson Iezzi [16], sugerem que
o uso de computadores enriquece as aulas e auxilia no desenvolvimento dos alunos.
Pensando nisso, procuramos, com esse trabalho, estudar um dos tantos campos
em que a Matem´atica se faz presente, procurando conhecer as diferentes formas
de aplica¸c˜ao da mesma: os jogos eletrˆonicos para v´ıdeo-games, celulares, tablets e
computadores, que nesse trabalho chamaremos apenas de Jogos de Computador.
Com esse intuito, procuramos fazer um relato hist´orico desses jogos, identiﬁcando os
conte´udos matem´aticos que se aplicam a eles.

Por exemplo, ´e poss´ıvel encontrar diversos sites tratando do assunto, entre eles

podemos destacar os seguintes.

Fabrica de Jogos www.fabricadejogos.net [1] que apresenta tutoriais com aplica¸c˜oes

de conte´udos matem´aticos a jogos digitais.

S´o Matem´atica www.somatematica.com.br/mundo.php [14] que traz exemplos de

campos em que a Matem´atica pode ser aplicada.

Desenvolvimento de Jogos www.desenvolvimentodejogos.wikidot.com/matematica

[7], que aborda conte´udos matem´aticos usados no desenvolvimento de jogos.

Techtudo www.techtudo.com.br [24], que traz v´arios tutoriais sobre elabora¸c˜ao de

jogos digitais.

Trazemos tamb´em, um estudo sobre a Geometria Computacional, surgida na
d´ecada de 1970 com a ﬁnalidade de estudar problemas geom´etricos no ambiente de
computadores. Esse estudo busca relacionar as bases da Geometria Computacional,
as chamadas “Primitivas Geom´etricas”, aos conte´udos tradicionalmente estudados na
educa¸c˜ao b´asica, como forma de apresenta-los aos estudantes, com uma abordagem
contextualizada e atrativa.

Buscamos mostrar os pontos de interse¸c˜ao entre a Matem´atica dos Jogos de
Computador e a Matem´atica da escola, atrav´es de atividades pr´aticas. Essas ativi-
dades est˜ao voltadas para alunos a partir do 9o ano do Ensino Fundamental. Nas
Se¸c˜oes 2.1 e 2.2 do Cap´ıtulo 2 trouxemos um pouco da hist´oria dos Jogos de Com-
putador, apresentando as principais categorias de jogos. Com isso o professor pode
escolher o tipo de jogo que mais agrada a seus alunos para trabalhar. Na Se¸c˜ao 2.3
relacionamos a Matem´atica da sala de aula com a Matem´atica dos jogos, identiﬁcando
os conte´udos que podem ser relacionados aos jogos.

No Cap´ıtulo 3 fazemos um estudo da Geometria Computacional, que tem por
ﬁnalidade b´asica resolver problemas geom´etricos no meio eletrˆonico. Apresentamos,
nesse cap´ıtulo, os elementos b´asicos dessa geometria e os problemas cl´assicos que ela
resolve.

No Cap´ıtulo 4 apresentamos sugest˜oes de atividades que podem ser trabalhadas
em sala de aula, relacionando a Geometria Computacional com a Geometria estudada
pelos alunos. Nessas atividades os alunos dever˜ao realizar medidas, determinar
distˆancias e veriﬁcar posi¸c˜oes relativas entre entes geom´etricos usando a Geometria

Cap´ıtulo 1.

Introdu¸c˜ao

3

tradicional e alguns conceitos da Geometria Computacional. Dessa forma, ter˜ao a
oportunidade de conhecer um pouco do funcionamento dos Jogos de Computador,
fazendo uma compara¸c˜ao com a teoria estudada nas aulas de Matem´atica. Esse
paralelo pode facilitar o envolvimento do aluno nas aulas, o que favorece seu aprendi-
zado. Esperamos que este trabalho possa auxiliar os professores a encontrar novas
maneiras de contextualizar suas aulas, buscando novas estrat´egias em um campo que
´e de grande interesse para a maioria dos jovens de hoje.

Contexto Hist´orico e
Rela¸c˜ao com a Matem´atica

2

Neste Cap´ıtulo apresentamos um breve hist´orico dos Jogos de Computador com
uma poss´ıvel classiﬁca¸c˜ao e alguns conte´udos matem´aticos que est˜ao relacionados
com sua elabora¸c˜ao.

2.1 Contexto Hist´orico

Desde que surgiram, os Jogos de Computador tem fascinado e divertido crian¸cas,
jovens e adultos. Acredita-se que o percussor desses jogos foi o “Tennis for Two”,
criado pelo f´ısico norte americano William Higinbotham [2], em 1958. Nesse jogo
a representa¸c˜ao de uma bola “salta” de um lado para outro ao longo de uma linha
vertical, na tela de um oscilosc´opio.

Esse jogo foi criado para uma expo-
si¸c˜ao anual no Laborat´orio Nacional de
Brookhaven em conjunto com o t´ecnico
Robert V. Dvorak. Os dois constru´ıram
o jogo em trˆes semanas e ele era jogado
com dois controladores de alum´ınio per-
sonalizados. Ele mostra a representa¸c˜ao
de uma quadra de tˆenis vista de lado
e o jogador ajusta o ˆangulo de suas ra-
quetadas com um bot˜ao rotativo e tenta
acertar a bola sobre a rede pressionando
outro bot˜ao no controlador. O jogo fez
grande sucesso, especialmente entre os
estudantes, mas foi praticamente esque-
cido at´e ﬁnal da d´ecada de 1970.

Figura 2.1: Um ponto luminoso salta de
um lado a outro da tela de um
oscilosc´opio [5]

4

Cap´ıtulo 2. Contexto Hist´orico e Rela¸c˜ao com a Matem´atica

5

Com o passar do tempo, aparelhos
foram criados com a ﬁnalidade espec´ıﬁca
de “abrigar” Jogos de Cletrˆonicos. Na
d´ecada de 1970 o mundo dos jogos so-
freu verdadeira revolu¸c˜ao, quando Nolan
Bushnell, um engenheiro formado pela
Universidade de Utah, nos EUA, fundou
a Atari, que se tornaria uma gigante no
ramo dos Jogos de Computador [17].

A partir dessa ´epoca surgiram, tam-
b´em, estudos espec´ıﬁcos sobre o desen-
volvimento de jogos. Dentre esses desta-
camos a Geometria Computacional, que
apresentamos no Cap´ıtulo 3. De l´a para
c´a houve uma verdadeira revolu¸c˜ao no
setor, com o lan¸camento de equipamentos e jogos cada vez mais soﬁsticados. Al´em
disso, com a populariza¸c˜ao dos computadores e celulares, um sem n´umero de jogos
foram desenvolvidos e constantemente aperfei¸coados.

Figura 2.2: O video-game Atari tornou-
se uma febre entre os jovens na
d´ecada de 70.

2.2 Tipos de Jogos de Computador

Os Jogos de Computador podem ser classiﬁcados de diversas formas, como
por meio de sua hist´oria, tipos de gr´aﬁcos (2D ou 3D). Com rela¸c˜ao ao estilo de
jogabilidade apresentamos uma classiﬁca¸c˜ao poss´ıvel [21].

A¸c˜ao/aventura ´E um dos mais diversiﬁcados. Nesse tipo de jogo um personagem
deve ser guiado por um roteiro para coletar itens, transpor obst´aculos, descobrir
tesouros, matar inimigos. Normalmente s˜ao baseados em ﬁlmes, seriados,
desenhos animados e em quadrinhos. S˜ao exemplos desse tipo o cl´assicos
“Super M´ario” (Nintendo, 1985) e “Sonic” (Sega Universe, 1991).

RPG Vers˜ao eletrˆonica do Role-Playing Game. Nessa modalidade o jogador deve
incorporar um personagem e seguir um roteiro no qual ´e comum encontrar
inimigos, obst´aculos, cavernas. Trˆes elementos principais formam um jogo
de RPG: miss˜oes, processos para evolu¸c˜ao de seu personagem, aquisi¸c˜ao e
gest˜ao de itens e acess´orios para seu personagem. Vocˆe geralmente tem alguma
inﬂuˆencia sobre as decis˜oes que toma no jogo, mas isso n˜ao ´e verdade para todos
os jogos de RPG. S˜ao exemplos de jogos de RPG “Final Fantasy” (Nintendo
1987), “Baldur’s Gate” (BioWare, 1998).

Esportes Representam em jogo os mais variados tipos de esporte existentes no
mundo real. Podem conter elementos de RPG. Nesses jogos os jogadores se
tornam os pr´oprios competidores. O jogador pode vivenciar ser campe˜ao de
um grande torneio de tˆenis, ser campe˜ao de uma copa do mundo ou outro
campeonato importante de futebol, correr com carros super r´apidos nos melhores
circuitos do mundo de rally, F1 ou outra corrida como de motos ou triciclos,

Cap´ıtulo 2. Contexto Hist´orico e Rela¸c˜ao com a Matem´atica

6

al´em de experimentar esportes que n˜ao s˜ao t˜ao corriqueiros como os citados
anteriormente como esportes das olimp´ıadas de inverno, lutas livres, skateboard,
basquetebol. O mais famoso desses jogos ´e o “Fifa” (Eletronic Arts, 1983) de
futebol.

Corrida Trazem diversos tipos de corridas de carros, motos, e outros. ´E comum
serem ambientados de acordo com a modalidade de corrida. Por exemplo as
corridas de F1, com os aut´odromos caracterizados. Um cl´assico desse gˆenero ´e
o “Need for Speed” (Electronic Arts, 2009).

Plataforma Jogos em que se deve percorrer mapas em side-scrollin, movimento
em duas dimens˜oes, para frente ou para tr´as. Jogos dentro deste gˆenero s˜ao
geralmente identiﬁcados pela navega¸c˜ao em ambientes que exigem o tempo certo
para dar cada salto a ﬁm de chegar a um destino, evitando e/ou eliminando
inimigos no caminho. S˜ao exemplos desse tipo de jogos: “Bubble Bobble” (Taito,
1986), “Burgertime” (Data East,1982), “Donkey Kong” (Nintendo, 1981).

Luta Nesse gˆenero, geralmente em duas dimens˜oes, aparecem personagens que
simulam lutas, podendo o jogador variar os tipos de golpes aplicados. S˜ao
famosos o “Street Fighter” (Capcom, 1987) e o “Mortal Kombat” (Midway
Games, 1992).

M´usica S˜ao jogos que trazem a m´usica como principal elemento. Podem incorporar,
tamb´em, elementos de dan¸ca. S˜ao jogos famosos dessa modalidade o “Guitar
Hero” (Harmonix, 2005) e o “Just Dance” (Ubisoft, 2009).

Estrat´egia Jogos em que o jogador deve utilizar diferentes estrat´egias. Pode-se
jogar sozinho (contra o computador), contra outras pessoas, usando mais de um
console, ou online, contra advers´arios reais, via internet. Jogos de estrat´egia
tentam capturar um senso de realismo para oferecer ao jogador. Como exemplos
desse tipo de jogos citamos: “DOTA” (Vale Corporation, 2013), “League Of
Legends” (Riot Games, 2009).

Tiro Jogos onde o principal elemento ´e o tiro. Seja com arma de fogo, arco e ﬂecha,
catapulta. O importante nesse jogo ´e acertar os alvos que podem ser patos,
zumbis, castelos, pessoas. Podem ser ambientados em 2D ou 3D. S˜ao jogos
geralmente em primeira pessoa, nos quais o jogador conduz o seu personagem
pelo mapa na inten¸c˜ao de conseguir o seu objetivo. S˜ao exemplos de jogos
assim os que retratam guerras como “Call of duty” (Inﬁnity Ward, 2003) e
“Medal of Honor” (Steven Spielberg, 1999) que transforma o jogador em um
soldado da guerra.

Puzzle Geralmente esses jogos trazem desaﬁos ou quebra cabe¸cas para serem solu-
cionados. S˜ao usados tamb´em como artif´ıcios para enredos de RPG’s. Jogos
de quebra-cabe¸ca n˜ao s˜ao muito diferentes dos enigmas tradicionais. O que
eles oferecem s˜ao ambientes ´unicos que n˜ao s˜ao t˜ao facilmente colocados sobre

Cap´ıtulo 2. Contexto Hist´orico e Rela¸c˜ao com a Matem´atica

7

uma mesa para vocˆe solucionar. Um dos mais famosos ´e “Tetris” (Pajitnov,
Pavlovsky e Vadim, 1984).

2.3 Matem´atica e Jogos de Computador

Nesta se¸c˜ao vamos discutir o que ´e um Jogo de Computador do ponto de vista da
Matem´atica. Os Jogos de Computador s˜ao criados a partir de modelos matem´aticos
que buscam recriar, no ambiente virtual, locais, personagens, movimentos. V´arios
conceitos matem´aticos s˜ao utilizados na elabora¸c˜ao de um jogo, e podem ser usados
como exemplos para enriquecer uma aula de Matem´atica, tornando-a mais atrativa
aos jovens. Citamos a seguir alguns conte´udos Matem´aticos estudados na Educa¸c˜ao
B´asica e presentes na elabora¸c˜ao de jogos eletrˆonicos.

Nas s´eries ﬁnais do Ensino Fundamental, a partir do 6o ano, inicia-se o estudo do
Plano Cartesiano. Esse conte´udo conecta-se ao estudo dos jogos de computador pois,
para localizar um personagem ou objeto do jogo utilizam-se coordenadas cartesianas,
considerando a tela do computador como um plano associado a dois eixos ortogonais.
No entanto, nos computadores em geral h´a algumas diferen¸cas no que diz respeito
aos eixos coordenados. Nos computadores o sentido de crescimento do eixo vertical
´e de cima para baixo e a ordena¸c˜ao dos quadrantes ´e feita no sentido hor´ario. A
Figura 2.3 ilustra essa situa¸c˜ao.

Figura 2.3: Diferen¸cas entre os Sistemas Cartesianos tradicional e o usado em
computadores.

Al´em da diferen¸ca no sentido de crescimento os objetos localizados nesse sistema
s´o s˜ao vis´ıveis quando est˜ao nos limites da tela, ou seja, suas dimens˜oes n˜ao podem
ultrapassar as dimens˜oes da tela do monitor, aparelho de televis˜ao ou celular.

Para jogos em trˆes dimens˜oes, os chamados “Jogos 3D”, ´e usado um sistema com
trˆes eixos chamados de eixo das Abscissas, eixo de Afastamento e eixo da Cota. ´E
comum usar o terceiro eixo coordenado como eixo de vis˜ao externa ou a chamada
God Vision do jogo. Em um ponto desse eixo o “mundo do jogo” ´e visto “de fora”.
As Equa¸c˜oes, cujo estudo se inicia por volta do 7o ano do Ensino fundamental
e vai sendo aprofundado at´e o ﬁnal do Ensino M´edio, s˜ao largamente usadas na
elabora¸c˜ao de jogos. O movimento dos personagens e objetos do jogo pode ser
simulado a partir de equa¸c˜oes de retas e curvas, que indicam uma trajet´oria. Os

Cap´ıtulo 2. Contexto Hist´orico e Rela¸c˜ao com a Matem´atica

8

saltos e as quedas s˜ao obtidos atrav´es de c´alculos de distˆancia entre pontos no plano
cartesiano. Por exemplo, se a distˆancia de um personagem a um obst´aculo ´e igual
a zero houve uma colis˜ao entre eles. Al´em disso, Fun¸c˜oes s˜ao utilizadas quando ´e
necess´ario relacionar grandezas. Por exemplo, para estipular o tempo de dura¸c˜ao de
uma fase do jogo.

Uma equa¸c˜ao em que alguns jogos se baseiam ´e a chamada “superf´ormula” [8, 9]

r(ϕ) =





(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:1)

cos (cid:0) m1ϕ
a

4

n2

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

+

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:1)

sen (cid:0) m2ϕ
b

4

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

n3

− 1
n1



(2.1)

Ela foi proposta pelo geneticista belga Johan Gielis, e ´e uma generaliza¸c˜ao da
superelipse em coordenadas polares, podendo ser usada para descrever v´arias curvas
e formas presentes na natureza, desde as mais simples, como as Figuras 2.4a e 2.4b,
at´e as mais elaboradas, como as Figuras 2.4c e 2.4d. As diferen¸cas, para ﬁguras
bidimensionais, s˜ao obtidas variando os parˆametros a, b, m1, m2, n1, n2, n3 da f´ormula.
Pode-se estender essa f´ormula para 3 ou mais dimens˜oes a partir do produto de
superf´ormulas. Para trˆes dimens˜oes, por exemplo, multiplicam-se duas superf´ormulas
r1 e r2. As coordenadas s˜ao deﬁnidas pelas rela¸c˜oes

x = r1(θ) cos θ r2(φ) cos φ
y = r1(θ) sen θ r2(φ) sen φ
z = r2(φ) sen φ

Onde φ, que indica a latitude, varia de −π/2 a π/2 e θ, longitude, est´a entre −π e π.

(a) 2D

(b) 2D

(c) 3D

(d) 3D

Figura 2.4: Imagens geradas a partir da Superf´ormula de Johan Gielis.

Cap´ıtulo 2. Contexto Hist´orico e Rela¸c˜ao com a Matem´atica

9

As mudan¸cas de tamanho e forma dos objetos de um jogo podem ser obtidas
atrav´es de transforma¸c˜oes geom´etricas, como escala, rota¸c˜ao, transla¸c˜ao, que utilizam
fun¸c˜oes, representadas comumente na forma matricial, conte´udos estudados no Ensino
M´edio.

Por exemplo, se queremos fazer a transla¸c˜ao de um ponto P (x, y), adicionamos
quantidades inteiras `as suas coordenadas. Chamando estas quantidades inteiras de
∆x e ∆y e P (cid:48) as coordenadas do ponto ap´os a transla¸c˜ao, podemos deﬁnir uma
fun¸c˜ao f como sendo

f (P ) = f (xp, yp) = (xp + ∆x, yp + ∆y)

Na forma matricial, teremos

P (cid:48) = P + T

onde

T =

(cid:21)

(cid:20)∆x
∆y

(2.2)

(2.3)

Em jogos de Tiro, numa vis˜ao simpliﬁcada, cada alvo pode ser representado por
um ponto no plano cartesiano. Quando o jogador “mira” nesse ponto, ele indica a
dire¸c˜ao que o proj´etil deve seguir, normalmente uma reta ou par´abola, para atingir
o alvo. Dessa forma, ao selecionar um alvo, o atirador dever´a girar e posicionar a
arma sobre a reta que passa pelo ponto que se quer atingir. Todas as opera¸c˜oes de
giro s˜ao “controladas” por f´ormulas matem´aticas (equa¸c˜oes, ˆangulos, matrizes).

Figura 2.5: Mira com Vetores

Na Figura 2.5, o atirador est´a no centro do plano e est´a mirando no bal˜ao P . Ao
clicar nesse bal˜ao ´e gerado um vetor que indica a trajet´oria do tiro. Em alguns jogos
pode-se solicitar do jogador que insira o ˆangulo.

Em jogos de tiro s˜ao utilizadas equa¸c˜oes semelhantes `as do estudo de trajet´orias
de proj´eteis usadas em F´ısica. Algumas dessas equa¸c˜oes ser˜ao apresentadas na
Se¸c˜ao 4.3 do Cap´ıtulo 4.

Distˆancias entre pontos e posi¸c˜oes relativas entre entes geom´etricos, estudados
em Geometria Anal´ıtica, informam, por exemplo, se duas naves v˜ao colidir. Nesse
caso, as duas naves podem ser representadas por circunferˆencias ou pol´ıgonos e ir˜ao

Cap´ıtulo 2. Contexto Hist´orico e Rela¸c˜ao com a Matem´atica

10

colidir se a distˆancia entre seus centros ﬁcar menor ou igual `a soma de seus raios, ou
se algum dos lados de um pol´ıgono tiver interse¸c˜ao com um lado do outro.

As opera¸c˜oes com vetores permitem simular movimentos que contornam obst´acu-
los. Por exemplo, na Figura 2.6, um personagem do jogo deve ir de A at´e B, tendo
entre eles um lago. Para isso ele deve seguir os vetores (cid:126)u, (cid:126)v, (cid:126)w, (cid:126)a e (cid:126)b uma vez que
n˜ao ´e poss´ıvel ir em linha reta, por sobre o lago.

Figura 2.6: O deslocamento do personagem, desviando do lago, ´e representado
pela soma dos vetores (cid:126)u, (cid:126)v, (cid:126)w, (cid:126)a e (cid:126)b .

Outros conceitos como ponto m´edio de um segmentos, pontos not´aveis, altura,
mediana, bissetriz e mediatriz de um triˆangulo podem ser usados para representar a
posi¸c˜ao em que o personagem do jogo ser´a submetido a algum tipo de desaﬁo ou um
ponto seguro, equidistante de duas “rotas perigosas”.

Assim como os citados, v´arios outros conte´udos matem´aticos tem aplica¸c˜ao na
elabora¸c˜ao de um Jogo de Computador. Ao professor cabe selecionar o exemplo mais
pertinente ao n´ıvel de seus alunos e ao assunto que est˜ao estudando.

Geometria Computacional

3

A Geometria Computacional ´e um ramo da Matem´atica e da Computa¸c˜ao que
estuda de maneira sistˆemica os algoritmos destinados `a resolu¸c˜ao de problemas
geom´etricos. Ela surgiu na d´ecada de 70 na ´area de desenvolvimento e an´alise de
algoritmos. Seu crescimento, desde ent˜ao, se deve `a atratividade dos problemas
propostos e solu¸c˜oes obtidas e, tamb´em, por ser uma ferramenta fundamental em
diversas ´areas da Computa¸c˜ao que necessitam de uma abordagem geom´etrica, tais
como Computa¸c˜ao Gr´aﬁca, Rob´otica, Sistemas de Informa¸c˜oes Geogr´aﬁcas e Vis˜ao
Computacional.

De acordo com Luiz Henrique de Figueiredo [15], o objetivo principal da Geometria
Computacional ´e estudar problemas geom´etricos sob a ´otica algor´ıtmica. Destina-
se a resolver problemas geom´etricos com o menor n´umero poss´ıvel de opera¸c˜oes
elementares, buscando sempre a eﬁciˆencia dos procedimentos. Decidir se um ponto
est´a no interior ou no exterior de um pol´ıgono, determinar os pontos mais pr´oximos
de um ponto dado, estabelecer o caminho mais curto entre dois pontos s˜ao alguns dos
problemas que a Geometria Computacional busca resolver, na Se¸c˜ao 3.2 mostramos
os mais comuns.

3.1 Algoritmo

Um Algoritmo ´e um conjunto de procedimentos destinados `a resolu¸c˜ao de um
problema. Um algoritmo deve ser mais ou menos detalhado, dependendo de quem
ou o que vai utiliz´a-lo. Em se tratando de algoritmos para computadores, todos os
comandos devem ser inclu´ıdos, sob pena de n˜ao se conseguir resolver o problema,
uma vez que o computador s´o realiza aquilo para que foi programado detalhadamente.
Segundo Pedro J. de Rezende e Jorge Stolﬁ [19],

Um algoritmo deve conter os seguintes ingredientes:

1. um enunciado;

2. um modelo computacional;

3. uma descri¸c˜ao da sequencia de opera¸c˜oes a efetuar;

4. uma prova de corre¸c˜ao; e

5. uma analise de desempenho.

11

Cap´ıtulo 3. Geometria Computacional

12

O enunciado deve descrever os dados, o resultado e as rela¸c˜oes entre eles. O
modelo computacional deﬁne as opera¸c˜oes que devem ser realizadas e d´a condi¸c˜oes
de aferir sua eﬁciˆencia. As opera¸c˜oes a efetuar dependem da ﬁnalidade do algoritmo
e devem ser listadas numa sequˆencia l´ogica de execu¸c˜ao. A prova de corre¸c˜ao ´e um
conjunto de a¸c˜oes que mostram que o algoritmo ´e sempre v´alido naquela situa¸c˜ao,
que ele para ap´os um determinado n´umero de a¸c˜oes e que o resultado est´a dentro
do que se espera. An´alise de desempenho envolve a compara¸c˜ao entre o “esfor¸co
despendido” e o resultado oferecido. O n´umero de opera¸c˜oes, o tempo de execu¸c˜ao, o
custo, tudo isso deve ser avaliado.

Em Geometria Computacional os algoritmos devem apresentar opera¸c˜oes com
entes geom´etricos que podem ser manipulados atrav´es de regras das Geometrias
Euclidiana e Anal´ıtica, respeitando as especiﬁcidades do ambiente de computa¸c˜ao.
Os objetos geom´etricos s˜ao geralmente deﬁnidos por n´umeros reais, atrav´es de
coordenadas ou equa¸c˜oes. Eles s˜ao cont´ınuos, mas tˆem um descri¸c˜ao discreta, o
que permite que eles sejam representados em um computador. Por exemplo, um
pol´ıgono ´e uma regi˜ao do plano, com um n´umero inﬁnito de pontos, mas que pode ser
representada pela sua fronteira, que por sua vez pode ser representada pela sequˆencia
ﬁnita dos seus v´ertices.

3.2 Tipos de Problemas

Podemos classiﬁcar os problemas abordados em Geometria Computacional em

quatro tipos: Sele¸c˜ao, Constru¸c˜ao, Decis˜ao, Consulta.

Sele¸c˜ao Nesses problemas queremos selecionar um subconjunto da entrada de dados.
N˜ao temos que construir nenhum objeto geom´etrico novo, mas possivelmente
temos que descobrir rela¸c˜oes topol´ogicas.

Selecionar, em um conjunto de pontos, aquele que ´e interior ou exterior a um
pol´ıgono ´e um problema se Sele¸c˜ao com diversas aplica¸c˜oes no universo dos
jogos, como selecionar o jogador que est´a mais pr´oximo daquele que det´em a
bola para receber um passe, em um jogo de futebol.

Constru¸c˜ao Nesses problemas temos que construir um ou mais objetos geom´etricos,
al´em de possivelmente rela¸c˜oes topol´ogicas envolvendo tanto objetos originais
quanto objetos novos. A constru¸c˜ao de novos pol´ıgonos a partir da intersec¸c˜ao
de outros ´e um exemplo desse tipo de problema.

Decis˜ao Nesses problemas temos somente que responder sim ou n˜ao a uma pergunta.
N˜ao precisamos construir nada, nem novos objetos geom´etricos nem novas
rela¸c˜oes topol´ogicas. Como exemplo desse tipo podemos citar a veriﬁca¸c˜ao
da interse¸c˜ao entre dois segmentos de um conjunto dado. Nesse caso n˜ao ´e
necess´ario determinar o ponto de interse¸c˜ao, somente responder se existe um
par que se intersecta ou n˜ao.

Consulta Dado um conjunto ﬁxo de objetos geom´etricos, queremos process´a-lo de
modo a poder responder eﬁcientemente a consultas repetidas sobre ele. Por

Cap´ıtulo 3. Geometria Computacional

13

exemplo encontrar o par de pontos mais pr´oximos dentre os elementos de um
conjunto.

3.3 Aplica¸c˜oes

Os problemas mencionados na Se¸c˜ao 3.2 s˜ao aplic´aveis em diversos campos da
computa¸c˜ao. Em Computa¸c˜ao Gr´aﬁca, muitas vezes, numa interface gr´aﬁca, devemos
selecionar dentre todos os objetos desenhados aquele que est´a mais pr´oximo da
posi¸c˜ao do mouse. Para fazer uma anima¸c˜ao realista, ´e necess´ario detectar se h´a
colis˜oes entre os objetos que est˜ao se movendo e o resto da cena.

Em Rob´otica um dos problemas fundamentais ´e o planejamento de movimentos.
O robˆo precisa analisar o seu ambiente e descobrir uma forma de se mover de um
ponto a outro sem colidir com os objetos no ambiente. Al´em disso, o robˆo deve fazer
isso da maneira mais eﬁciente poss´ıvel, o que implica na necessidade de identiﬁcar o
caminho mais curto (e vi´avel) entre os dois pontos.

Sistemas de Informa¸c˜ao Geogr´aﬁca lidam com enormes quantidades de dados
geom´etricos para poder representar ﬁelmente a geometria de estradas, rios, fronteiras,
curvas de n´ıvel, ´areas verdes. Um problema t´ıpico nessa ´area ´e saber que objetos
geogr´aﬁcos est˜ao perto de outros, por exemplo, se um rio amea¸ca transbordar, quais
as cidades e estradas que ser˜ao afetadas.

3.4 Instˆancia de um Problema

Problema ´e tudo aquilo que se quer resolver. Por exemplo, veriﬁcar se um ponto
´e interior ou exterior a um pol´ıgono, obter o ponto mais pr´oximo de um ponto dado,
ordenar uma s´erie de n´umeros. Instˆancia de um problema ´e cada uma das poss´ıveis
combina¸c˜oes entre elementos do problema. Para determinar a posi¸c˜ao relativa entre
um ponto e um pol´ıgono, cada par (pol´ıgono, ponto) ´e uma instˆancia. Um algoritmo
para resolver esse problema ´e uma lista de passos que, dada uma instˆancia (P, p),
ap´os um n´umero ﬁnito de passos, retorna com a conclus˜ao correta a respeito da
inclus˜ao de p no pol´ıgono P [15].

´E comum encontrarmos problemas que possam ser resolvidos por mais de um
algoritmo. Um ponto importante ´e determinar qual algoritmo ´e mais eﬁciente. As
duas formas principais de se veriﬁcar essa eﬁciˆencia s˜ao pelo desempenho m´edio em
todas as instˆancias de mesmo tamanho ou considerando o caso mais desfavor´avel.
O mais comum ´e considerar o caso mais desfavor´avel pois nem sempre h´a uma
distribui¸c˜ao conhecida de probabilidade para uma instˆancia, al´em da complexidade
da an´alise dessas probabilidades.

A complexidade de um algoritmo ´e, ent˜ao, expressa por uma fun¸c˜ao que fornece
o n´umero de passos necess´arios para resolver o problema em sua instˆancia mais
desfavor´avel. A fun¸c˜ao f , que expressa a complexidade, associa a cada natural n o
n´umero f (n) que indica quantos passos s˜ao necess´arios para resolver o problema da
“pior” maneira para a instˆancia de tamanho n. Quando n˜ao ´e poss´ıvel determinar
exatamente o n´umero de passos para se resolver um problema na instˆancia n, trabalha-
se com uma cota superior, kf (n). Nesse caso o algoritmo ´e dito de complexidade
assint´otica O(f (n)).

Cap´ıtulo 3. Geometria Computacional

14

Como exemplo analisemos o seguinte problema: Dados n n´umeros reais x1, . . . ,xn
coloc´a-los em ordem crescente. Um algoritmo bem simples que pode resolvˆe-lo ´e o
de Ordena¸c˜ao por Sele¸c˜ao [15], descrito no Algoritmo 3.1.

Algorithm 3.1 Ordenar o vetor x de n elementos pelo m´etodo de Sele¸c˜ao

fun¸c˜ao Selection(x,n)

para i ← 1 at´e n-1 fa¸ca

m ← i
para j ← i+1 at´e n fa¸ca
se xj < xm ent˜ao

m ← j

ﬁm
troque xi com xm

ﬁm

ﬁm

ﬁm

Para analisar esse algoritmo deve-se, inicialmente, observar que o tamanho da
instˆancia ´e igual ao n´umero n de elementos a ordenar. Na primeira execu¸c˜ao s˜ao
feitas n opera¸c˜oes a saber, n − 1 compara¸c˜oes e 1 troca. Na segunda execu¸c˜ao, n − 2
compara¸c˜oes e 1 troca, e assim por diante. Logo, o n´umero de passos exigido pelo
algoritmo ´e

n + (n − 1) + (n − 2) + · · · + 1 =

n(n − 1)
2

=

n2
2

+

n
2

(3.1)

Assim o algoritmo tem complexidade assint´otica O(n2).

Um algoritmo mais soﬁsticado, que pode ser usado para resolver o mesmo pro-
blema, ´e o chamado Mergesort, conhecido tamb´em como Dividir para Conquistar [15].
Nesse algoritmo o conjunto ´e dividido em dois conjuntos de n/2 elementos cada,
ordena-se cada um desses conjuntos e, em seguida, re´une-se os conjuntos ordenados.
Para ordenar cada um dos conjuntos repete-se o processo da divis˜ao do n´umero de
elementos por dois, como descrito no Algoritmo 3.2.

Para veriﬁcar se esse algoritmo ´e mais eﬁciente que o de Ordena¸c˜ao por Sele¸c˜ao
suponhamos que n ´e da forma n = 2p, com p inteiro positivo. Seja T (n) a complexi-
dade do algoritmo, expressa pelo n´umero de passos necess´arios `a sua execu¸c˜ao. O
algorimo apresenta duas chamadas recursivas do nesmo algoritmo para instˆancias de
tamanho n/2, seguidas por uma etapa na qual, partindo de dois conjuntos ordenados,
deve-se obter a uni˜ao, tamb´em ordenada. Essa uni˜ao pode ser obtida em um n´umero
de passos que ´e proporcional a n. Logo a complexidade T (n) ´e dada por

T (n) = 2 T

(cid:17)

(cid:16)n
2

+ kn

onde k ´e uma constante. Por sua vez, T (n/2) ´e dada por

T (n/2) = 2 T

(cid:17)

(cid:16)n
4

+ k

n
2

Cap´ıtulo 3. Geometria Computacional

15

o que fornece

T (n) = 4 T

(cid:17)

(cid:16)n
4

+ 2kn

continuando o processo

T (n) = 8 T

(cid:17)

(cid:16)n
8

+ 3kn

T (n) = 2p T

(cid:17)

(cid:16) n
2p

Da´ı conclu´ımos que

+ pkn = n T (1) + k (log2 n) n

T (n) = O(n log2 n)

Como o crescimento da sequˆencia n log n ´e mais lento que o de n2 (no sentido que
limn→∞ n log n/n2 = 0), este algoritmo ´e superior ao anterior do ponto de vista
assint´otico.

Algorithm 3.2 Ordenar o vetor x de n elementos pelo m´etodo Dividir para Con-
quistar

fun¸c˜ao MergeSort(x,n)
se n < 2 ent˜ao retorna
ﬁm
m ←

n
2
l ← x[1 : m]
r ← x[m + 1 : n]
MergeSort(l,n − m)
MergeSort(r,n − m)
i ← 1
j ← 1
para k ← 1 at´e n fa¸ca
ﬁm
se li < rj ent˜ao
xk ← li
i ← i + 1

sen˜ao

xk ← rj
j ← j + 1

ﬁm

ﬁm

3.5 Problemas Cl´assicos

Em Geometria Computacional h´a v´arios problemas aplicados em situa¸c˜oes diversas
mas que tem tratamento algor´ıtmico semelhante. Historicamente, o primeiro problema
geom´etrico a ser completamente analisado foi o dos chamados Inv´olucros Convexos.
O Inv´olucro Convexo de um conjunto de pontos, S ⊆ Rn, ´e o menor conjunto convexo

Cap´ıtulo 3. Geometria Computacional

16

de Rn que cont´em S [3]. Esse problema tem uma estreita rela¸c˜ao com o problema de
ordena¸c˜ao pois sua complexidade est´a intimamente ligada `a de ordena¸c˜ao e muitos
algoritmos para ordena¸c˜ao tˆem vers˜oes an´alogas para inv´olucros convexos. Foi a
partir dos estudos desse tipo de problema que foi desenvolvido, na d´ecada de 70, o
primeiro algor´ıtmo de complexidade de tempo O(n log n). Uma aplica¸c˜ao importante
desse problema aparece em rob´otica. Um robˆo n˜ao colide com obst´aculos se seu
inv´olucro convexo n˜ao o faz.

Outro problema importante ´e o chamado Par Mais Pr´oximo, em inglˆes (The
Closest Pair Problem). Nesse caso, dados n pontos queremos encontrar o par cuja
distˆancia entre eles ´e m´ınima. Esse problema tem importante aplica¸c˜ao em programas
para controle de tr´afego a´ereo, pois os dois avi˜oes que est˜ao em maior perigo de
colis˜ao s˜ao aqueles que est˜ao mais pr´oximos. Este problema pode ser resolvido em
O(d n2); onde d ´e a dimens˜ao do espa¸co. Por´em pode ser mais eﬁciente resolvˆe-lo
utilizando um algoritmo de dividir para conquistar em tempo O(d n log n).

3.6 Primitivas Geom´etricas

Para a resolu¸c˜ao dos diferentes problemas em Geometria Computacional ´e utilizado
um conjunto de opera¸c˜oes ou constru¸c˜oes geom´etricas elementares, que por sua vez,
envolvem opera¸c˜oes elementares entre n´umeros reais. Problemas desse tipo podem ser
resolvidos usando t´ecnicas da Geometria Anal´ıtica, uma vez que as ﬁguras geom´etricas
em quest˜ao s˜ao representadas por conjuntos de pontos descritos por coordenadas
cartesianas. As opera¸c˜oes com vetores s˜ao as principais ferramentas para essas
tarefas. Listaremos a seguir as principais primitivas geom´etricas. Algumas delas
correspondem `as deﬁni¸c˜oes da Geometria Anal´ıtica, por´em, outras s˜ao deﬁni¸c˜oes
espec´ıﬁcas para a Geometria Computacional.

A primeira dessas primitivas ´e a Soma vetorial, que pode ser deﬁnida como a

seguir.

Deﬁni¸c˜ao 3.1: A adi¸c˜ao de vetores ´e uma opera¸c˜ao que a cada par de vetores
(cid:126)u = (cid:126)AB e (cid:126)v = (cid:126)BC associa o vetor (cid:126)AC, designado (cid:126)u + (cid:126)v e chamado soma dos vetores
(cid:126)u e (cid:126)v [13].

´E o vetor que pode “substituir” outros dois ou mais vetores. Sejam (cid:126)u e (cid:126)v dois
vetores tais que (cid:126)u = (x1, y1) e (cid:126)v = (x2, y2). Temos que a soma dos vetores (cid:126)u e (cid:126)v ´e
dada por (cid:126)u + (cid:126)v = (x1 + x2, y1 + y2), como pode ser visto na Figura 3.1.

Figura 3.1: Uma primitiva geom´etrica ´e a soma de vetores. Essa ﬁgura ilustra
a soma dos vetores (cid:126)V1 e (cid:126)V2 que produz o vetor (cid:126)VS

Cap´ıtulo 3. Geometria Computacional

17

Figura 3.2: C´alculo da Norma de um vetor (cid:126)v em R2.

Outra primitiva ´e a Norma de um vetor (cid:126)v, representada por (cid:107)(cid:126)v(cid:107), que ´e o compri-

mento do vetor.

Deﬁni¸c˜ao 3.2: Consideremos, em R2, um vetor (cid:126)v = (x,y), como mostrado na
Figura 3.2. Pelo Teorema de Pit´agoras, o comprimento de (cid:126)v ´e igual a (cid:112)x2 + y2.
Extrapolando, para Rn, temos (cid:126)v = (x1, x2, · · · xn), logo a norma de (cid:126)v ´e igual a

(cid:107)(cid:126)v(cid:107) =

(cid:113)

1 + x2
x2

2 + · · · + x2
n

(3.2)

A distˆancia entre dois pontos X e Y pode ser obtida pela norma do vetor que

tem esses pontos como extremidades.

Deﬁni¸c˜ao 3.3: Sendo X = (x1, x2) e Y = (y1, y2) temos o vetor

(cid:126)XY = (y1 − x1, y2 − x2)

cuja Norma ´e igual `a distˆancia entre X e Y .

Figura 3.3: Na Multiplica¸c˜ao de um vetor por um escalar o vetor obtido tem
a norma igual `a do primeiro vetor multiplicada pelo escalar. O sinal do escalar
indica se o novo vetor tem mesmo sentido ou sentido contr´ario do primeiro.

Deﬁni¸c˜ao 3.4: A Multiplica¸c˜ao de vetor por escalar, real, ´e uma opera¸c˜ao pela
qual obtemos um vetor “m´ultiplo” do primeiro, ou seja, temos como resultado um

Cap´ıtulo 3. Geometria Computacional

18

vetor colinear ao primeiro, com Norma igual ao produto da Norma do vetor inicial
pelo m´odulo do escalar. Esse novo vetor ter´a mesma dire¸c˜ao e sentido, caso o escalar
seja positivo e mesma dire¸c˜ao e sentido contr´ario para um escalar negativo, como
mostra a Figura 3.3. Matematicamente podemos escrever que se α ´e um escalar e
(cid:126)a = (x, y) um vetor, temos

α · (cid:126)a = (α · x, α · y)

(3.3)

O Produto escalar de dois vetores ´e um n´umero real, que pode ser usado, por
exemplo, para determinar se os vetores s˜ao ou n˜ao ortogonais. Caso em que o produto
escalar ´e igual a zero.

Deﬁni¸c˜ao 3.5: Considerando os vetores de Rn, (cid:126)u = (x1, . . . , xn) e (cid:126)v = (y1, . . . , yn),
o Produto Escalar (cid:126)u · (cid:126)v ´e dado por

(cid:126)u · (cid:126)v = x1y1 + x2y2 + · · · + xnyn

(3.4)

Sendo ϕ o ˆangulo entre os vetores (cid:126)u e (cid:126)v, com ϕ assumindo valores entre 0 e π temos

(cid:126)u · (cid:126)v = (cid:107)(cid:126)u(cid:107) (cid:107)(cid:126)v(cid:107) cos ϕ

Figura 3.4: ϕ ´e o ˆangulo entre os vetores (cid:126)u e (cid:126)v

Deﬁni¸c˜ao 3.6: O ˆAngulo entre dois vetores ´e o menor ˆangulo formado por eles,
como mostra a Figura 3.4. Como (cid:126)u · (cid:126)v = (cid:107)(cid:126)u(cid:107) (cid:107)(cid:126)v(cid:107) cos ϕ, o ˆangulo entre os vetores (cid:126)u e
(cid:126)v ´e igual a

((cid:126)u, (cid:126)v) = arccos

(cid:18) (cid:126)u · (cid:126)v

(cid:19)

(cid:107)(cid:126)u(cid:107) (cid:107)(cid:126)v(cid:107)

(3.5)

Pela Deﬁni¸c˜ao 3.6 o ˆangulo n˜ao possui o conceito de orienta¸c˜ao, por´em, essa
informa¸c˜ao ´e muitas vezes necess´aria. Dessa forma deﬁnimos outra primitiva o ˆangulo
orientado.

Cap´ıtulo 3. Geometria Computacional

19

(a) ˆAngulo Positivo

(b) ˆAngulo Negativo

Figura 3.5: O ˆangulo ser´a orientado no sentido anti-hor´ario caso o valor do
ˆangulo ((cid:126)u, (cid:126)x) seja positivo e no sentido hor´ario caso ((cid:126)u, (cid:126)x) seja negativo

Deﬁni¸c˜ao 3.7: Dado um vetor (cid:126)x = (x1, x2) deﬁne-se o ˆangulo orientado como
sendo o comprimento do arco correspondente ao c´ırculo unit´ario, orientado no sentido
anti-hor´ario, tomado a partir do eixo horizontal, como mostra a Figura 3.5. Sendo
(cid:126)u = (1,0) o vetor unit´ario na dire¸c˜ao do semieixo horizontal positivo tem-se que

ˆangulo-orientado(x) =

(cid:40) ˆangulo((cid:126)u, (cid:126)x),

se x2 ≥ 0

− ˆangulo((cid:126)u, (cid:126)x),

se x2 < 0

Veriﬁca-se que

ˆangulo-orientado((cid:126)u, (cid:126)x) = arccos

(cid:18) (cid:126)u · (cid:126)x

(cid:19)

(cid:107)(cid:126)u(cid:107) (cid:107)(cid:126)x(cid:107)

= arccos

(cid:33)

(cid:32)

x1
(cid:112)x2
1 + x2
2

Nesse caso o ˆangulo deﬁnido assume valores do intervalo [−π,π].

(3.6)

(3.7)

Do ponto de vista computacional, tanto o ˆangulo orientado quanto o ˆangulo
entre vetores apresentam desvantagens. Ambos dependem do c´alculo da fun¸c˜ao
arccos que n˜ao ´e alg´ebrica e, portanto, deve ser calculada aproximadamente por
um algoritmo complexo. Al´em disso, na maioria dos casos dos quais se ocupa a
Geometria Computacional, o que se quer ´e uma compara¸c˜ao entre os ˆangulos e n˜ao o
seu valor. Para fazer essa compara¸c˜ao ´e poss´ıvel deﬁnir uma outra fun¸c˜ao usando,
por exemplo a fun¸c˜ao cosseno. Dessa forma deﬁne-se o Pseudo- ˆAngulo.

Deﬁni¸c˜ao 3.8: O Pseudo- ˆAngulo ´e deﬁnido pela fun¸c˜ao

f (ϕ) = 1 − cos ϕ

(0 ≤ ϕ ≤ π)

(3.8)

conhecendo os vetores (cid:126)x e (cid:126)y podemos calcular o pseudo-ˆangulo realizando apenas
opera¸c˜oes alg´ebricas

pseudo-ˆangulo((cid:126)x, (cid:126)y) = 1 −

(cid:126)x · (cid:126)y
(cid:107)(cid:126)x(cid:107) (cid:107)(cid:126)y(cid:107)

(3.9)

Essa fun¸c˜ao ´e mon´otona crescente em ϕ e assume valores do intervalo [0, 2]. O
c´alculo dessa primitiva envolve apenas opera¸c˜oes aritm´eticas, sem aproxima¸c˜oes, o

Cap´ıtulo 3. Geometria Computacional

20

Figura 3.6: Rela¸c˜ao Entre ˆAngulo e Pseudo-ˆangulo

que apresentar´a um menor tempo de execu¸c˜ao. Dessa forma, ao tomar um ˆangulo de
60◦, obteremos o pseudo-ˆangulo igual a

pseudo-ˆangulo(60◦) = 1 − cos 60◦ = 1 − 0,5− = 0,5

Se o ˆangulo for de 120◦ o pseudo-ˆangulo ser´a

pseudo-ˆangulo(120◦) = 1 − cos 120◦ = 1 − (−0,5) = 1,5

O gr´aﬁco da Figura 3.6 mostra a rela¸c˜ao entre ˆangulo (em graus) e pseudo-ˆangulo

obtido por essa fun¸c˜ao.

Essa primitiva tamb´em admite uma vers˜ao orientada, contudo h´a uma alternativa
melhor do ponto de vista geom´etrico. Como o ˆangulo orientado ´e igual ao comprimento
do arco orientado correspondente, tomado sobre o c´ırculo unit´ario com centro na
origem, podemos substituir o c´ırculo por qualquer curva cont´ınua que seja cortada
uma ´unica vez por toda semirreta partindo da origem, isto ´e, uma fun¸c˜ao em
coordenadas polares. Isso ocorre porque cada ˆangulo tomado sobre essa curva ser´a
uma fun¸c˜ao do arco tomado sobre o circulo unit´ario. Como consequˆencia a fun¸c˜ao
pseudo-ˆangulo pode ser usada para comparar ˆangulos [12]. Nesse processo o pseudo-
ˆangulo ´e calculado a partir de um pol´ıgono centrado na origem. A Figura 3.7 mostra
a obten¸c˜ao do pseudo-ˆangulo a partir de um quadrado de centro na origem.

Deﬁni¸c˜ao 3.9: O valor do pseudo-ˆangulo((cid:126)x, (cid:126)y) corresponde `a medida do desloca-
mento de A at´e M , sobre os lados do quadrado, passando pelo ponto (1, 1).

Na Figura 3.7, ao medir o pseudo-ˆangulo correspondente ao ˆangulo de 90◦

obteremos

pseudo-ˆangulo(cid:50) 90◦ = 1 + 1 = 2

Cap´ıtulo 3. Geometria Computacional

21

Figura 3.7: A primitiva pseudo-ˆangulo substitui o c´alculo do arccos pela deter-
mina¸c˜ao de um comprimento, sobre os lados de um pol´ıgono.

Para um ˆangulo de 180◦ teremos

pseudo-ˆangulo(cid:50) 180◦ = 1 + 2 + 1 = 4

Os valores encontrados dessa forma s˜ao diferentes dos determinados atrav´es da
equa¸c˜ao (3.8), pois assumem valores no intervalo [0, 8]. No entanto s˜ao igualmente
´uteis nos problemas computacionais, nos quais necessita-se apenas da ordena¸c˜ao dos
entes geom´etricos.

Outra primitiva importante ´e o Produto Vetorial, utilizado para determinar a

orienta¸c˜ao relativa de vetores no R2 e R3.

Deﬁni¸c˜ao 3.10: O Produto Vetorial ´e a opera¸c˜ao × : R3 → R3, deﬁnida por

(x1, x2, x3) × (y1, y2, y3) = (x2y3 − x3y2, x3y1 − x1y3,x1y2 − x2y1)

(3.10)

(a) Produto Vetorial (cid:126)a × (cid:126)b

(b) Produto vetorial(cid:126)b × (cid:126)a

Figura 3.8: O produto vetorial (cid:126)a × (cid:126)b ´e um vetor ortogonal, ao mesmo tempo,
aos vetores (cid:126)a e (cid:126)b.

O resultado do Produto Vetorial de dois vetores (cid:126)u e (cid:126)v, n˜ao colineares, em R3 ´e um
vetor simultaneamente ortogonal a (cid:126)u e (cid:126)v e orientado de tal modo que a orienta¸c˜ao
(cid:126)u × v ´e a mesma do triedro deﬁnido pelos eixos x, y e
do triedro deﬁnido por (cid:126)u, (cid:126)v e
z, como mostram as Figuras 3.8 e 3.9. Podemos identiﬁcar um vetor de R2 como um
vetor de R3 com terceira componente nula. Dessa forma, o produto vetorial (cid:126)u × (cid:126)v
pode ser usado para determinar a posi¸c˜ao relativa entre (cid:126)u e (cid:126)v, tomando-se o valor

Cap´ıtulo 3. Geometria Computacional

22

escalar de sua terceira componente, ou seja, em R2,

(x1, y1, 0) × (x2, y2 0) = (0, 0, x1y2 − x2y1)

que se costuma escrever, na forma simpliﬁcada, na qual preservamos apenas os valores
n˜ao trivialmente nulos

(x1, y1) × (x2, y2) = x1y2 − x2y1

Figura 3.9: Orienta¸c˜ao do Produto Vetorial

O sinal positivo ou negativo de (cid:126)u × (cid:126)v, para vetores no plano, indica se o ˆangulo
orientado de (cid:126)u para (cid:126)v ´e positivo ou negativo, ou seja, se (cid:126)u est´a `a esquerda ou `a direita
de (cid:126)v, como mostra a Figura 3.10.

(a) Produto Positivo

(b) Produto Negativo

Figura 3.10: Se o Produto Vetorial (cid:126)u × (cid:126)v ´e positivo, (cid:126)v est´a `a esquerda de (cid:126)u.
Se ´e negativo, (cid:126)v est´a `a direita de (cid:126)u.

Uma aplica¸c˜ao do Produto vetorial ´e veriﬁcar se dois segmentos ab e cd, do plano,
se interceptam, como ilustrado na Figura 3.11. Isso ocorre se c e d est˜ao em lados
opostos em rela¸c˜ao a ab e, ao mesmo tempo, a e b est˜ao em lados opostos em rela¸c˜ao
a cd. Caso isso ocorra, os produtos vetoriais ( (cid:126)ab × (cid:126)ac) e ( (cid:126)ab × (cid:126)ad) ter˜ao sinais opostos,

Figura 3.11: Interse¸c˜ao de Segmentos

Cap´ıtulo 3. Geometria Computacional

23

pois os vetores (cid:126)ac e (cid:126)ad tem orienta¸c˜ao oposta ao vetor (cid:126)ab. Da mesma forma, ( (cid:126)cd × (cid:126)ca)
e ( (cid:126)cd × (cid:126)cb) devem ter sinais opostos.

O m´odulo do Produto Vetorial de dois vetores tem valor igual `a ´area do paralelo-
gramo determinado por eles, como mostra a Figura 3.12. Essa rela¸c˜ao entre ´area e
produto vetorial decorre do fato que a norma do produto vetorial de dois vetores (cid:126)u e
(cid:126)v, no R2 satisfaz

(cid:107)(cid:126)u × (cid:126)v(cid:107) = (cid:107)(cid:126)u(cid:107)(cid:107)(cid:126)v(cid:107) sen θ

(3.11)

em que θ ´e o ˆangulo formado pelos vetores (cid:126)u e (cid:126)v.

Figura 3.12: ´Area do Paralelogramo

Como consequˆencia, conclu´ımos que a norma de (cid:126)u × (cid:126)v ´e igual ao dobro da ´area do
triˆangulo que tem (cid:126)u e (cid:126)v como lados, o que ´e igual `a ´area do paralelogramo formado
por eles.

No caso de vetores no R2, o valor do produto vetorial (cid:126)u × (cid:126)v pode ser entendido
como a primitiva ´area orientada do paralelogramo formado por (cid:126)u e (cid:126)v. A ´area ´e
positiva quando a orienta¸c˜ao do ˆangulo θ ´e de (cid:126)u para (cid:126)v e negativa em caso contr´ario.
Um problema muito importante em Geometria Computacional ´e determinar se
um ponto ´e interior a um pol´ıgono. No caso desse pol´ıgono ser um triˆangulo pode-se
utilizar as chamadas coordenadas baricˆentricas, baseando-se no seguinte teorema.

Teorema 3.1: Sejam p1, p2 e p3 pontos n˜ao colineares de R2. Ent˜ao cada ponto do
plano pode ser escrito de modo ´unico na forma

p = λ1p1 + λ2p2 + λ3p3

onde λ1, λ2 e λ3 s˜ao n´umeros reais satisfazendo

λ1 + λ2 + λ3 = 1

Os coeﬁcientes λ1, λ2 e λ3 s˜ao denominados as coordenadas baricˆentricas de p em
rela¸c˜ao a p1, p2 e p3.

Demonstra¸c˜ao. Sejam os pontos p, p1, p2 e p3, sendo p = (x, y) e pi = (xi, yi),
com i = 1,2,3. Os termos (λ1, λ2, λ3) que satisfazem as condi¸c˜oes dadas s˜ao as

Cap´ıtulo 3. Geometria Computacional

24

solu¸c˜oes do sistema linear de trˆes inc´ognitas






λ1x1 + λ2x2 + λ3x3 = x
λ1y1 + λ2y2 + λ3y3 = y
= 1
λ1

+ λ2

+ λ3

O determinante do sistema ´e

D =

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

x1 x2 x3
y1 y2 y3
1
1
1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

=

(cid:12)
(cid:12)
(cid:12)
(cid:12)

x1x2 x3x1
y3y1
y1y2

(cid:12)
(cid:12)
(cid:12)
(cid:12)

= x1x2y1y3 − x1x3y1y3

(3.12)

que representa o dobro da ´area S do triˆangulo p1p2p3 e ´e, portanto, n˜ao-nulo.
Logo o sistema dado tem solu¸c˜ao ´unica para cada p.

Os valores de λ1, λ2 e λ3 podem ser facilmente obtidos no sistema anterior

utilizando a regra de Cramer. Temos, por exemplo,

λ1 =

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

x x1 x2
y y1 y2
1
1
1

x1 x2 x3
y1 y2 y3
1
1
1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

=

S1
S

(3.13)

Onde S1 e S s˜ao as ´areas orientadas dos triˆangulos pp2p3 e p1p2p3, respectivamente.
De modo an´alogo, podemos calcular as demais coordenadas fazendo λ2 = S2/S e
λ3 = S3/S.

As express˜oes mostradas permitem associar o sinal das coordenadas baricˆentricas
com as regi˜oes do plano determinadas pelas retas que cont´em os lados do triˆangulo.
Por exemplo λ1 > 0, se e s´o se, o triˆangulo de v´ertices pp2p3 tem a mesma orienta¸c˜ao
de p1p2p3, o que ocorre se p pertence ao mesmo semiplano de p1, em rela¸c˜ao `a
reta que cont´em p2p3. A localiza¸c˜ao de um ponto p em rela¸c˜ao a um triˆangulo,
conhecidos seus v´ertices p1, p2 e p3, ´e imediata com uso das suas coordenadas
baricˆentricas. Por exemplo, se todas forem positivas, o ponto ´e interior ao triˆangulo.
Se uma das coordenadas for igual a zero, o ponto pertence a um de seus lados. A
Figura 3.13 mostra as regi˜oes do plano e os sinais correspondentes das coordenadas
baricˆentricas [15].

Para calcular a distˆancia entre os pontos, pode ser utilizada a Distˆancia Euclidiana,
calculada utilizando-se o Teorema de Pit´agoras ou usar a Distˆancia de Manhattan, que
´e o menor caminho entre dois pontos obtido apenas com deslocamentos horizontais e
verticais.

Deﬁni¸c˜ao 3.11: A Distˆancia Euclidiana (Figura 3.14a) entre os pontos A = (xA, yA)
e B = (xB, yB) ´e calculada por

d(A,B) = (cid:112)(xB − xA)2 + (yB − yA)2

(3.14)

Cap´ıtulo 3. Geometria Computacional

25

Figura 3.13: As Coordenadas Baricˆentricas podem ser utilizadas para decidir
se um ponto ´e interior ou exterior a um triˆangulo.

(a) Distˆancia Euclidiana

(b) Distˆancia de Manhattan

Figura 3.14: A distˆancia de Manhattan ´e mais simples de ser calculada pois
depende apenas de opera¸c˜oes de adi¸c˜ao e subtra¸c˜ao.

Deﬁni¸c˜ao 3.12: A Distˆancia de Manhattan (Figura 3.14b)entre os pontos A =
(xA, yA) e B = (xB, yB) ´e obtida fazendo

d(A,B) = |xB − xA| + |yB − yA|

(3.15)

Na segunda op¸c˜ao os c´alculos s˜ao mais r´apidos pois necessitam apenas de opera¸c˜oes
de adi¸c˜ao e subtra¸c˜ao.
Isso faz com que esse m´etodo seja o mais utilizado em
programas de computadores, pois seu algoritmo tem uma complexidade menor e,
consequentemente um tempo de execu¸c˜ao mais curto. Na Subse¸c˜ao 3.7.2 fazemos
uma compara¸c˜ao entre esses dois c´alculos.

Figura 3.15: Distˆancia Ente Dois Pontos A e B

Cap´ıtulo 3. Geometria Computacional

26

3.7 Resolu¸c˜ao de Problemas

Como mencionado na Se¸c˜ao 3.6, as primitivas geom´etricas s˜ao utilizadas para
resolver uma s´erie de problemas relacionados `a Geometria Computacional. A seguir
destacamos dois desses problemas, com algoritmos que podem ser utilizados para
resolvˆe-los.

O Cap´ıtulo 4 traz sugest˜oes de aplica¸c˜ao desses problemas em aulas do Ensino

Fundamental e M´edio.

3.7.1 Localiza¸c˜ao de Pontos em Rela¸c˜ao a Pol´ıgonos

Considerando um pol´ıgono simples, n˜ao triˆangulo e descrito pela sequˆencia de
seus v´ertices P = p1p2 . . . pn, a determina¸c˜ao da posi¸c˜ao relativa de um ponto p em
rela¸c˜ao a P pode ser feita seguindo o Algor´ıtimo 3.3 descrito a seguir.

Algorithm 3.3 Algor´ıtimo para determinar se o ponto P (x0,y0) est´a contido no
pol´ıgono de n v´ertices Vi(xi,yi). Nesse algoritmo ´e necess´ario que Vn+1 = V1.

fun¸c˜ao PontoPoligono(P,Vi,n)

N ← 0
L ← reta horizontal que passa pelo ponto P
para i ← 1 at´e n fa¸ca
se yi (cid:54)= yi+1 ent˜ao

(cid:46) Para cada lado ViVi+1 do pol´ıgono
(cid:46) Lado n˜ao ´e horizontal

(x,y) ← interse¸c˜ao da reta que passa por Vi e Vi+1 com a reta L
se x = x0 ent˜ao

P est´a na fronteira de V retorna

sen˜ao

se x > x0 e y ∈ [yi,yi+1] ent˜ao

N ← N + 1

ﬁm

ﬁm
sen˜ao

se P pertence ao lado ViVi+1 ent˜ao
P est´a na fronteira de V retorna

(cid:46) P est´a na fronteira

ﬁm

ﬁm

ﬁm
se N ´e impar ent˜ao

P est´a no interior de V

sen˜ao

P est´a no exterior de V

ﬁm

ﬁm

Consideremos uma semirreta L partindo de p e determinemos suas interse¸c˜oes
com a linha poligonal. O mais comum ´e se usar uma semirreta horizntal. Se p
coincidir com um desses pontos, conclu´ımos que p est´a na fronteira de P . Caso
contr´ario, basta contar o n´umero de interse¸c˜oes de L com a poligonal. Se o n´umero
de cruzamentos for ´ımpar, p ´e interior a P , caso seja par, p ´e exterior. Isso ocorre

Cap´ıtulo 3. Geometria Computacional

27

Figura 3.16: Ponto em Pol´ıgono

pois, no inﬁnito, a semirreta est´a fora do pol´ıgono. A cada interse¸c˜ao ela passa de
fora para dentro, ou vice-versa.

3.7.2 Par Mais Pr´oximo

Este problema consiste em determinar qual o par de pontos mais pr´oximo em
um conjunto de pontos, ou qual o ponto mais pr´oximo a um ponto dado como
referˆencia. Para resolvˆe-lo um algoritmo deve calcular as distˆancias entre todos
os pares poss´ıveis do conjunto (ou entre todos os pontos e o ponto de referˆencia),
ordenar essas distˆancias e, em seguida, determinar qual a menor.

Apesar da distˆancia de Manhattan apresentar um valor superior `a distˆancia eucli-
diana, no caso de os pontos terem coordenadas x e y diferentes, para a determina¸c˜ao
do par mais pr´oximo essa distˆancia ´e bastante ´util pois os erros s˜ao m´ınimos.

Esse tipo de erro ocorre porque a distˆancia euclidiana ´e calculada pela f´ormula

d = (cid:112)(∆x)2 + (∆y)2

(3.16)

que ´e a equa¸c˜ao de uma c´ırculo de raio d. Usando essa medida de distˆancia e
selecionando todos os pontos equidistantes da origem obtemos uma circunferˆencia
como mostrado na Figura 3.17a. J´a a distˆancia de Manhattan calcula-se fazendo

d = |∆x| + |∆y|

(3.17)

Usando essa medida de distˆancia e selecionando todos os pontos equidistantes da
origem obtemos um quadrado, como mostrado na Figura 3.17b.

(a) C´ırculo Euclidiano

(b) C´ırculo de Manhattan

Figura 3.17: Compara¸c˜ao entre um c´ırculo obtido pela Distˆancia Euclidiana e
pela Distˆancia de Manhattan

Cap´ıtulo 3. Geometria Computacional

28

A Figura 3.18 exempliﬁca um poss´ıvel erro. Os pontos A e C est˜ao `a mesma
distˆancia do centro B pela Distˆancia de Manhattan no entanto, a distˆancia Euclidiana
entre A e B ´e maior que a Distˆancia Euclidiana entre B e C.

Figura 3.18: Compara¸c˜ao Entre a Distˆancia Euclidiana e de Manhattan. A
circunferˆencia indica os pontos que tem a mesma distˆancia Euclidiana at´e B e o
quadrado s˜ao os pontos que tem a mesma distˆancia de Manhattan at´e B.

Em Geometria Computacional existem v´arios outros problemas importantes,
como o Fecho Convexo de um conjunto de pontos, que ´e o menor conjunto convexo
que cont´em esses pontos e o problema das Triangula¸c˜oes, que consiste em limitar o
Fecho Convexo a um triˆangulo. Para cada um desses problemas existem diferentes
algoritmos, dependendo da ﬁnalidade de cada um. Como sugest˜ao, indicamos a
leitura de Introdu¸c˜ao `a Geometria Computacional [15], que traz outros exemplos
interessantes.

Aplica¸c˜oes em Sala de Aula

4

Como dissemos na introdu¸c˜ao desse trabalho, a tarefa educativa exige, cada vez
mais, uma aproxima¸c˜ao da realidade e dos interesses dos educandos. Antoni Zabala,
em artigo para a revista Educatrix [23], fala da necessidade de uma educa¸c˜ao para a
vida. Uma educa¸c˜ao que traga aos alunos situa¸c˜oes ligadas a seu cotidiano que sejam
capazes de ajud´a-lo a desenvolver habilidades e competˆencias que possam modiﬁcar
seu modo de vida e de sua comunidade. Assim, diz o educador espanhol,

Educar para a vida requer que o in´ıcio de uma se¸c˜ao ou aula parta
sempre de uma situa¸c˜ao da realidade que seja o mais pr´oxima poss´ıvel dos
interesses dos alunos, para que tudo aquilo que se aprenda seja entendido
como um instrumento a servi¸co da compreens˜ao e da interven¸c˜ao na
realidade.

Por sua vez, o soci´ologo su´ı¸co Philippe Perrenoud fala das competˆencias cruciais na
forma¸c˜ao de um professor. Uma delas ´e [18]

Envolver os alunos em suas aprendizagens e no trabalho.

Para conseguir esse envolvimento e levar aos alunos assuntos de seu interesse, no
intuito de facilitar a aprendizagem, muitas s˜ao as ferramentas e os ingredientes que
podem ser utilizadas. O uso dos Jogos de Computador nas aulas de Matem´atica
oferece alguns desses ingredientes, pois trata-se de um assunto de interesse da quase
totalidade dos jovens. Al´em disso, pode servir de inspira¸c˜ao para futuros progra-
madores, desenvolvedores ou engenheiros. Para utilizar os conceitos matem´aticos
relacionados aos Jogos de Computador em sala de aula, em primeiro lugar deve-se
escolher um jogo e analisar suas caracter´ısticas.

Escolhendo um jogo podemos observar algumas aplica¸c˜oes da Geometria Compu-
tacional que se relacionam com os conte´udos da educa¸c˜ao b´asica. Por exemplo, em
um jogo de futebol, um jogador est´a com a posse da bola quando esta se encontra
no interior de um c´ırculo ou pol´ıgono que representa a ´area de a¸c˜ao do jogador, um
passe ´e tanto mais eﬁciente quanto mais pr´oximo est´a o companheiro que o receber´a;
o gol acontece quando a bola se coloca no interior do retˆangulo que representa a
meta.

29

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

30

A trajet´oria de um proj´etil, em um jogo de tiro, pode ser analisada a partir de
uma fun¸c˜ao, deﬁnida pela for¸ca e pelo ˆangulo de inclina¸c˜ao da arma. Em jogos de
plataforma, sair r´apido de um labirinto signiﬁca encontrar o caminho mais curto,
contornando objetos. Partindo dessas observa¸c˜oes propomos algumas atividades
que se baseiam em jogos e tem por ﬁnalidade desenvolver conte´udos espec´ıﬁcos da
Educa¸c˜ao B´asica.

Os planos de aula das Se¸c˜oes 4.1 e 4.2 s˜ao indicados para o 9o ano do Ensino
Fundamental, mas podem ser utilizados, com algumas adapta¸c˜oes, tamb´em para os
anos seguintes, pois tratam de assuntos comuns a v´arias s´eries. O plano de aula da
Se¸c˜ao 4.3 ´e mais apropriado para o 1o ano do Ensino M´edio e pode ser utilizado em
um trabalho interdisciplinar envolvendo F´ısica, pois trata de movimentos, Geograﬁa
e Hist´oria, uma vez que apresenta assunto relacionado com guerras e tens˜oes entre
pa´ıses. O Plano da Se¸c˜ao 4.4 ´e mais espec´ıﬁco para o 3o ano do Ensino M´edio, pois
exige conhecimentos de Geometria Anal´ıtica.

4.1 Determina¸c˜ao do Ponto Mais Pr´oximo

Esta atividade ´e destinada aos alunos do 9o ano do Ensino Fundamental, podendo
ser adaptada para as s´eries seguintes. Nela fazemos referˆencia `a Primitiva Geom´etrica
Distancia de Manhattan e a situa¸c˜oes presentes em jogos nos quais um personagem
deve se deslocar de um ponto a outro, pelo caminho mais curto, contornando
obst´aculos, o que ´e comum em jogos de Plataforma, como o “Super M´ario” ou
o “Sonic”, ou ainda se precisa determinar o companheiro mais pr´oximo para, por
exemplo, passar a bola num jogo de Futebol.

Objetivo Geral

Levar aos alunos diferentes abordagens para a distˆancia entre pontos comparando
o m´etodo pr´atico com os procedimentos usados em um programa, ou jogo, de
computador.

Objetivos Espec´ıﬁcos

• Medir distˆancias.

• Calcular distˆancias a partir de rela¸c˜oes matem´aticas.

• Determinar o ponto mais pr´oximo de um ponto dado usando diferentes abor-
dagens como medi¸c˜ao direta, c´alculo, coordenadas cartesianas, “Distˆancia de
Manhatthan” (Deﬁni¸c˜ao 3.12)

• Conhecer os comandos e a dinˆamica de um algoritmo usado por um programa

ou jogo de computador.

• Comparar medidas e orden´a-las.

Conte´udo Program´atico

• Grandezas e Medidas.

• Teorema de Pit´agoras.

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

31

• Teorema de Tales.

• Plano Cartesiano.

• Combinat´oria.

Metodologia

Os alunos ler˜ao um texto que explica como ´e feita a determina¸c˜ao do ponto mais
pr´oximo usando um algoritmo para computador. A seguir inclu´ımos um exemplo
de Texto Motivador Aplica¸c˜oes da Geometria Computacional em Jogos, baseado no
artigo Geometria Computacional: Determinar vizinho mais pr´oximo [22].

(a) Distˆancia Euclidiana

(b) Distˆancia de Manhattan

Figura 4.1: Distˆancias Euclidiana e de Manhattan

Aplica¸c˜oes da Geometria Computacional em Jogos

Dado um conjunto de pontos no plano (R2) e tomando um ponto k, determinar os
n vizinhos mais pr´oximos de k. Ao elaborar um Algoritmo (conjunto de procedimentos
que o computador dever´a executar) a possibilidade mais simples e direta ´e calcular
as distˆancias de k a cada um dos pontos no conjunto, dispor esses valores em ordem
crescente, e ent˜ao escolher os pontos com as n menores distˆancias. Essa distˆancia
pode ser Euclidiana ou de Manhattan.

Figura 4.2: Ponto k e os 4 pontos do conjunto de base que est˜ao mais pr´oximos
de k.

A Distˆancia Euclidiana (Figura 4.1a), que nada mais ´e do que o c´alculo da
distˆancia entre dois pontos em um plano, os pontos P e k, produz a distˆancia real

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

32

e direta entre os dois pontos. Por´em ela requer o c´alculo de uma raiz quadrada,
cujo processamento ´e bastante custoso. Uma alternativa que pode ser ´util ´e utilizar
a Distˆancia de Manhattan, tamb´em chamada de Geometria ou M´etrica do T´axi
(Figura 4.1b). Essa distˆancia tem esse nome porque simula o trajeto que um t´axi
faria ao se deslocar entre os dois pontos nos quarteir˜oes da cidade de Manhattan.
Para ter essa distˆancia, basta somar as diferen¸cas absolutas entre os valores dos eixos
x e y nos dois pontos. O resultado pode ser maior do que a distˆancia real, mas em
muitos casos pode servir como uma boa aproxima¸c˜ao a um custo computacional
consideravelmente menor.

Figura 4.3: Erro comum com a distˆancia de Manhattan.

A Figura 4.2 mostra o resultado para a busca dos 4 pontos mais pr´oximos de um

k aleat´orio, dentre um conjunto de 10 pontos (tamb´em aleat´orios).

Como pode-se perceber, o resultado nesse caso foi o mesmo para os dois m´etodos.
Mas vale lembrar que a Distˆancia de Manhattan pode errar, uma vez que ela n˜ao
produz a distˆancia real, mas sim uma alternativa. Por exemplo, observe o ponto
circundado na Figura 4.3. Calculando a Distˆancia Euclidiana ele n˜ao se inclui entre
os quatro mais pr´oximos. No entanto, pela distˆancia de Manhattan ele pertence a
esse conjunto.

Esse ´e um dos erros que pode acontecer. Ainda assim, essa op¸c˜ao ´e bem ´util
em diversas situa¸c˜oes (em jogos, por exemplo, quando se precisa decidir com quais
outros objetos a nave do jogador colidiu e o desempenho ´e mais importante do que a
precis˜ao). Por mais que tenha erros, a execu¸c˜ao com a distˆancia de Manhattan ´e
praticamente imediata enquanto que a execu¸c˜ao com a distˆancia Euclidiana leva um
tempo a mais por causa dos c´alculos. Na atividade de sala os alunos podem perceber
essa diferen¸ca uma vez que a Distˆancia de Manhattan ´e determinada apenas por
uma soma, enquanto a Distˆancia Euclidiana depende do c´alculo de duas potˆencias e
uma raiz quadrada que, em alguns casos, necessita de uma calculadora.

Atividade Pr´atica

Em uma quadra, ser˜ao dispostos cones em diferentes posi¸c˜oes, como mostrados

nas Figuras 4.4, 4.5 e 4.6

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

33

Figura 4.4: Medi¸c˜ao Direta

Figura 4.5: Medi¸c˜ao no Plano Cartesiano

Figura 4.6: Medi¸c˜ao com Obst´aculos

Os alunos dever˜ao determinar o cone mais pr´oximo do centro da quadra fazendo

1. Medi¸c˜ao direta com uma trena (Figura 4.4).

2. C´alculo da distˆancia entre os pontos usando coordenadas cartesianas, Teorema

de Pit´agoras e Teorema de Tales (semelhan¸ca). (Figura 4.5)

3. C´alculo da “Distˆancia de Manhatthan” (Figura 4.5)

4. C´alculo da distˆancia contornando obst´aculos, que ´e uma soma vetorial (Fi-

gura 4.6)

5. Ordena¸c˜ao das medidas encontradas.

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

34

Avalia¸c˜ao

Os alunos dever˜ao responder quest˜oes e resolver exerc´ıcios sobre a atividade.

Seguem algumas sugest˜oes.

1. Vocˆe encontrou diferen¸cas signiﬁcativas entre os resultados das atividades

realizadas?

2. Qual das op¸c˜oes vocˆe considera mais segura para resolver o problema?

3. Caso vocˆe n˜ao pudesse fazer a medi¸c˜ao direta, qual das op¸c˜oes vocˆe usaria?

Por que?

4. Vocˆe saberia dizer por que os programas de computador utilizam a Distˆancia

de Manhattan?

5. Observe o esquema da Figura 4.7 e determine o ponto mais pr´oximo do ponto

O pelos trˆes m´etodos usados na atividade pr´atica.

6. Compare seus resultados e veriﬁque se h´a diferen¸cas signiﬁcativas entre eles.

7. Qual a principal diferen¸ca que vocˆe pode apontar entre a atividade pr´atica e a

atividade do item 5?

Figura 4.7: Atividade Distˆancias

4.2 Menor Caminho Para Sair de Um Labirinto

Esta atividade tem como motivadores jogos de Plataforma, como o “Super M´ario”
e “Maze” e destina-se a alunos do 9o ano do Ensino Fundamental e s´eries subsequentes.

Objetivo Geral

Levar aos alunos diferentes abordagens para o estudo da distˆancia entre pontos
comparando o m´etodo pr´atico com os procedimentos usados em um programa, ou
jogo, de computador.

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

35

Objetivos Espec´ıﬁcos

• Medir distˆancias.

• Calcular distˆancias a partir de rela¸c˜oes matem´aticas.

• Determinar o ponto mais pr´oximo de um ponto dado usando diferentes abor-
dagens (medi¸c˜ao direta, c´alculo, coordenadas cartesianas, “Distˆancia de Ma-
nhatthan”).

• Comparar medidas e orden´a-las.

Conte´udo Program´atico

• Grandezas e medidas.

• Plano Cartesiano.

• Combinat´oria.

Metodologia

Os alunos ler˜ao o texto a seguir, “Distˆancia Euclidiana e Distˆancia de Manhattan”,
que explica como ´e feita a determina¸c˜ao do ponto mais pr´oximo usando um algoritmo
para computador.

Distˆancia Euclidiana e Distˆancia de Manhattan

A distˆancia Euclidiana nada mais ´e do que o c´alculo da distˆancia entre dois pontos
em um plano. Produz a distˆancia real e direta entre os dois pontos. Mas ela requer
o c´alculo de uma raiz quadrada, cujo processamento ´e bastante custoso.

d = (cid:112)(∆x)2 + (∆y)2

(4.1)

Uma alternativa que pode ser ´util ´e utilizar a distˆancia de Manhattan (tamb´em
chamada de Geometria ou M´etrica do T´axi). Essa distˆancia tem esse nome porque
simula o trajeto que um t´axi faria ao se deslocar entre os dois pontos nos quarteir˜oes
da cidade de Manhattan. Para ter essa distˆancia, basta somar as diferen¸cas absolutas
entre os valores dos eixos x e y nos dois pontos.

d = |∆x| + |∆y|

(4.2)

O resultado ´e maior do que a distˆancia real, mas em muitos casos pode servir como
uma boa aproxima¸c˜ao a um custo computacional consideravelmente menor.

Atividade Pr´atica

Os alunos receber˜ao o labirinto (Figura 4.8) impresso e dever˜ao encontrar e colorir
todos os poss´ıveis caminhos para atravess´a-lo, indo do ponto A ao ponto B ou C. A
seguir determinar qual a menor trajet´oria. Em seguida dever˜ao calcular a Distˆancia
Euclidiana correspondente aos deslocamentos AB e AC.

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

36

Figura 4.8: Labirinto

Avalia¸c˜ao

Os alunos devem comparar os resultados encontrados. Uma sugest˜ao ´e uma
discuss˜ao em pequenos grupos, ap´os a qual um representante de cada grupo apresenta
`a turma suas considera¸c˜oes e conclus˜oes.

4.3 Trajet´oria de Um Projetil

Essa atividade ´e voltada para alunos do Ensino M´edio e tem como motivadores
os Jogos de Tiro como o “Appel Shooter” e o “Impale”. Pode ser desenvolvida em
conjunto com outras ´areas do conhecimento como F´ısica, Geograﬁa e Sociologia, pois
aborda um tema comum. Para a F´ısica o trabalho aborda o estudo dos movimentos,
para a Geograﬁa e a Sociologia, ´e um bom pretexto para se discutir conﬂitos mundiais.
Para facilitar os c´alculos a atividade pode ser realizada com o uso de uma planilha
eletrˆonica, como o Excel.

Objetivo Geral

Levar aos alunos diferentes abordagens para o estudo de fun¸c˜oes.

Objetivos Espec´ıﬁcos

• Determinar a equa¸c˜ao da trajet´oria de um proj´etil.

• Veriﬁcar se um ponto pertence a essa trajet´oria.

Conte´udo Program´atico

• Fun¸c˜ao Quadr´atica.

• ˆAngulos.

• Raz˜oes Trigonom´etricas.

• Equa¸c˜oes de Movimento.

• Plano Cartesiano.

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

37

Metodologia

Os alunos ler˜ao o texto a seguir, “Lan¸camento de Proj´etil”, que explica como ´e

feita a determina¸c˜ao das equa¸c˜oes para se estudar o lan¸camento obl´ıquo.

Lan¸camento de Proj´etil

O movimento de um proj´etil, lan¸cado obliquamente em rela¸c˜ao `a horizontal, com
uma velocidade inicial v0 e um ˆangulo de inclina¸c˜ao θ pode ser estudado com base
nas equa¸c˜oes que seguem [20].

1. A componente de v0, na dire¸c˜ao do eixo x ´e dada pela equa¸c˜ao

v0x = v0 cos θ

2. A componente de v0, na dire¸c˜ao do eixo y ´e dada pela equa¸c˜ao

v0y = v0 sen θ

(4.3)

(4.4)

J´a as equa¸c˜oes de posi¸c˜ao e velocidade est˜ao agrupadas de acordo com o tipo
de movimento, al´em de considerarmos a origem dos eixos de referˆencia na posi¸c˜ao
de lan¸camento da part´ıcula, o que faria de x0 e y0 valores nulos. Nessas equa¸c˜oes
representamos a acelera¸c˜ao da gravidade por g e o tempo decorrido desde o lan¸camento
por t.

1. Movimento na dire¸c˜ao x (Movimento Retil´ıneo Uniforme)

x = x0 + v0xt

2. Movimento na dire¸c˜ao y (Movimento Uniformemente Variado)

(a) Deslocamento Vertical

y =y0 + y0yt −

y =v0 sen θt −

1
2
1
2

gt2

gt2

(b) Velocidade

vy = v0y − gt

vy = v0y sen θ − gt

(c) Equa¸c˜ao de Torricelli

y = v2
v2

0y − 2g∆y

y = (v0 sen θ)2 − 2g∆y
v2

(4.5)

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

38

Os resultados para o estudo do lan¸camento de um proj´etil ser˜ao obtidos conside-
rando uma referˆencia positiva para cima e tendo a origem no ponto de lan¸camento.
Esses resultados s˜ao

Altura M´axima - ymax Por Torricelli (4.5) e sabendo-se que vy ´e nulo, temos que

0 = v2

0y − 2g∆y

∆y =

v2
0y
2g

escrevendo ∆y = ymax − 0 temos

ymax =

v2
0y
2g

=

(v0 sen θ)2
2g

Tempo de Subida Partindo-se da equa¸c˜ao de velocidade e sabendo-se que vy ´e

nulo, encontra-se para o tempo de subida (ts)

0 = v0y − gts

ts =

v0 sen θ
g

Alcance M´aximo O alcance ´e m´aximo quando o tempo t ´e igual ao tempo de
queda tq. Sendo o tempo de queda o dobro do tempo de subida, pois y = 0 e
usando-se a equa¸c˜ao de movimento

0 = v0 sen θtq

v0 sen θ =

g
2

t2
q

obt´em-se o tempo de queda

tq =

2v0 sen θ
g

e substituindo-se o tempo de queda na equa¸c˜ao de movimento horizontal
encontra-se

xmax = v0 cos θtq

=

2v0 sen θv0 cos θ
g

rearrumando

xmax =

v2
0 sen θ
g

Posi¸c˜ao y em fun¸c˜ao de x Devemos isolar o tempo na equa¸c˜ao de movimento

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

39

para o eixo x e substitui-lo na equa¸c˜ao de movimento para o eixo y encontrando

y = v0 sen θ

x
v0 cos θ

−

g
2

(cid:18) x

(cid:19)2

v0 cos θ

de onde se tem y em fun¸c˜ao de x mostrado na equa¸c˜ao

y = x tan θ −

g
2

(cid:18) x

(cid:19)2

v0 cos θ

Atividade

Os alunos dever˜ao determinar a equa¸c˜ao da trajet´oria de um proj´etil a partir
do ˆangulo e da velocidade de lan¸camento. Em seguida, dever˜ao veriﬁcar se os alvos
localizados em determinados pontos ser˜ao atingidos pelo proj´etil. Para os c´alculos
ser˜ao considerados os valores da Tabela 4.1.

Alvo

Velocidade de lan¸camento (m/s)

ˆAngulo de lan¸camento θ (graus)

5
5
10
510

30
45
45
10

Tabela 4.1: Dados para c´alculo das trajet´orias

(1, 2)
(5, 8)
(10,10)
(2,8)

Avalia¸c˜ao

Em grupos, os alunos discutir˜ao os resultados obtidos e responder˜ao a perguntas,

como as seguintes.

1. Mantendo ﬁxa a velocidade de lan¸camento e variando o ˆangulo ´e poss´ıvel que

um alvo inicialmente n˜ao atingido o seja?

2. Considere um alvo que n˜ao foi atingido. Varie a velocidade e o ˆangulo de
lan¸camento e encontre pares de valores que fa¸cam com que o alvo ﬁque sobre a
trajet´oria do proj´etil.

3. Determine os valores m´ınimos para o ˆangulo e para a velocidade de lan¸camento

para que cada um dos alvos seja atingido pelo proj´etil.

4.4 Posi¸c˜ao Relativa de Ponto e Pol´ıgono

Esta atividade destina-se a alunos do 3o ano do Ensino M´edio. Est´a baseada nos
problemas computacionais Ponto em Pol´ıgono e Par Mais Pr´oximo, mencionadas
na Se¸c˜ao 3.7 desse trabalho. Esses problemas encontram aplica¸c˜oes em games de
futebol, como o “FIFA”.

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

40

Objetivo Geral

Levar aos alunos diferentes abordagens para a posi¸c˜ao relativa entre pontos e

pol´ıgonos.

Objetivos Espec´ıﬁcos

• Medir distˆancias.

• Calcular distˆancias a partir de rela¸c˜oes matem´aticas.

• Determinar a posi¸c˜ao relativa entre pontos e pol´ıgonos.

• Comparar medidas e orden´a-las.

Conte´udo Program´atico

• Grandezas e Medidas.

• Teorema de Pit´agoras.

• Teorema de Tales.

• Plano Cartesiano.

• Distˆancia entre dois pontos no plano.

Metodologia

Um campo de futebol ser´a representado em um sistema cartesiano, com vista

superior (Figura 4.9).

Figura 4.9: Atividade Futebol

Os alunos dever˜ao determinar se um jogador det´em a posse da bola ou n˜ao, a

partir de sua posi¸c˜ao em trˆes diferentes casos.

1. O jogador tem a posse da bola se ela estiver a uma distˆancia de 1 metro dele,

calculada pelo m´etodo Euclidiano.

2. O jogador tem a posse da bola se ela estiver a uma distˆancia 1 metro dele,

calculada pelo m´etodo de Manhattam.

3. O jogador tem a posse da bola se ela estiver dentro de um pol´ıgono que “envolve

o jogador”, deﬁnido pelas retas y = 0, y = 1, y = 2x − 1 e y = −2x − 1.

Cap´ıtulo 4. Aplica¸c˜oes em Sala de Aula

41

Desenvolvimento

• Considerar o jogador no centro do campo (origem dos eixos cartesianos, com o

eixo x apontando para a dire¸c˜ao do gol).

• Desenhar os pol´ıgonos correspondentes `a regi˜ao na qual a bola est´a de posse

do jogador.

• Veriﬁcar a posi¸c˜ao relativa entre a bola e o pol´ıgono.

• Determinar se a bola est´a de posse do jogador.

Para isso ir˜ao dever˜ao considerar a bola nos pontos

R = (1/2, 1/2)

√

S = (

√

2)

2,

T = (1, 0)

U = (0,1)

V = (1, 1/3)

Avalia¸c˜ao

Os alunos dever˜ao comparar os resultados obtidos discutindo sobre qual das
situa¸c˜oes mais se aproxima da realidade de um Jogo de Computador, analisando
qual pol´ıgono melhor representa o espa¸co em que a bola est´a de posse do jogador.

4.5 Coment´arios

Al´em dessas atividades, v´arias outras podem ser montadas, contemplando con-
te´udos como Geometria Plana, Geometria Anal´ıtica, Combinat´oria, ´Algebra Vetorial
etc, utilizando o tema Jogos Eletrˆonicos como catalizador para despertar o interesse
dos alunos. O importante ´e que o professor escolha o jogo mais adequado ao n´ıvel
dos alunos e ao conte´udo a trabalhar.

Conclus˜oes

5

Os jogos de computador, por serem de grande interesse dos jovens em geral, s˜ao

uma valiosa ferramenta para o enriquecimento das aulas de Matem´atica.

S˜ao v´arios os conte´udos matem´aticos que se aplicam ao universo dos jogos
eletrˆonicos, cabe ao professor selecion´a-los de forma adequada. ´E importante que,
antes de utilizar um jogo como exemplo, o professor procure conhecer um pouco de
suas rotinas, de modo a melhor aproveitar tudo que ele pode oferecer.

Nesse sentido, o conhecimento das Primitivas Geom´etricas e suas aplica¸c˜oes em
Geometria Computacional faz-se necess´ario, uma vez que d´uvidas poder˜ao surgir por
parte dos alunos.

Atividades pr´aticas, como as sugeridas no Cap´ıtulo 4, aumentam as possibilidades
de envolvimento dos alunos, promovem a intera¸c˜ao e a coopera¸c˜ao entre eles e podem
auxiliar grandemente no desenvolvimento de habilidades e competˆencias ligadas `a
Matem´atica. Tais atividades podem ser desenvolvidas nas diversas s´eries da Educa¸c˜ao
B´asica, bastando que o professor fa¸ca as devidas adequa¸c˜oes.

42

Bibliograﬁa

[1] Almeida, Thalisson Christiano de: Tutorial - Matem´atica Aplicada a jogos digitais,
abril 2017. http://www.fabricadejogos.net/posts/tutorial-matematica-aplicada-a-
jogos-digitais-parte-1-sistemas-de-coordenadas, (acesso em 12 de out. 2017).

[2] Amoroso, Danilo: A hist´oria dos video games: do oscilosc´opio aos gr´aﬁcos 3D, 2009.
https://www.tecmundo.com.br/xbox-360/3236-a-historia-dos-video-games-do-
osciloscopio-aos-graﬁcos-3d.htm, (acesso em 30 de set. 2017).

[3] Bajuelos, Antonio L.: Inv´olucros Convexos no Plano, 2009.

http://sweet.ua.pt/leslie/Geocomp/Slides/GC 09 10 5 Involucros Convexos I.pdf,
(acesso em 26 de ago. 2017).

[4] Brasil: Lei de Diretrizes e Bases da Educa¸c˜ao Nacional (LDB 9394/96), 1996.

[5] C, Dan: Tennis For Two - The second ever computer game, 2007.

https://www.youtube.com/watch?v=s2E9iSQfGdg, (acesso em 30 de set. 2017).

[6] Carvalho Borba, Marcelo de: Fases das tecnologias digitais e a reinven¸c˜ao da sala de
aula. 2016. http://sbem.com.br/enem2016/anais/palestras-1.html, (acesso em 26 de
ago. 2017).

[7] Colaboradores da WikiDot: Desenvolvimento de Jogos, abril 2017.

http://desenvolvimentodejogos.wikidot.com/matematica, (acesso em 12 de out. 2017).

[8] Colaboradores da Wikip´edia: Superformula, 2017.

https://en.wikipedia.org/wiki/Superformula#/media/File:Sf3d 4.5.54.svg, (acesso em
26 de ago. 2017).

[9] Colaboradores da Wikip´edia: Superformula, wiki2017.

https://en.wikipedia.org/wiki/Superformula, (acesso em 26 de ago. 2017).

[10] Col´egio Arnado: Manual do Educador Verbita. 2017.

[11] Dante, Luiz Roberto: Matem´atica Projeto Tel´aris. ´Atica, S˜ao Paulo, 2016.

[12] davibrg: Pseudo- ˆAngulo, 2013.

https://geometriacomp.wordpress.com/2013/06/12/pseudo-angulo, (acesso em 25 de
nov. 2017).

[13] Delgado, Jorge, Katia Frensel e Lhaylla Crissaﬀ: Geometria Anal´ıtica. SBM, Rio de

Janeiro, 2017.

[14] Equipe do S´o Matem´atica: Mundo Matem´atico, maio 2017.

www.somatematica.com.br/mundo.php, (acesso em 12 de out. 2017).

[15] Figueiredo, Luiz Henrique de e Paulo C´esar Pinto Carvalho: Introdu¸c˜ao `a Geometria

Computacional. IMPA, Rio de Janeiro, 1991.

[16] Iezzi, Gelson, Osvaldo Dolce, David Degenszajn, Roberto P´erigo e Nilze deAlmeida:

Matem´atica: Ciˆencia e Aplica¸c˜oes. Saraiva, S˜ao Paulo, 2010.

[17] Juon, Steve ’Flash’, 2017.

http://www.rapreviews.com/news/Printable.php?ArticleID=36220, (acesso em 30 de
set. 2017).

[18] Perrenoud, Philippe: Dez Novas Competˆencias para Ensinar. Artmed, Porto Alegre,

2000.

43

Bibliograﬁa

44

[19] Rezende, Pedro J. de e Jorge Stolﬁ: Fundamentos de Geometria Computacional.

Universidade Estadual de Campinas Campinas, Campinas, 1994.

[20] Santos, Jos´e Nazareno dos: Lan¸camento de Proj´etil, 2001.

http://www.ﬁsica.ufpb.br/prolicen/Cursos/Curso1/mr35lp.html, (acesso em 18 de
nov. 2017).

[21] Toschi, Gabriel: A¸c˜ao, RPG, Plataforma? Saiba mais sobre os gˆeneros de jogos e

quais games se classiﬁcam nos mais conhecidos, 2012. http:
//www.nintendoblast.com.br/2012/04/gamedev-conheca-os-tipos-de-jogos.html,
(acesso em 26 de ago. 2017).

[22] Vieira, Luiz: Geometria Computacional: Determinar vizinho mais pr´oximo, 2017.

https://pt.stackoverﬂow.com/questions/163899/geometria-computacional-
determinar-vizinho-mais-pr%C3%B3ximo, (acesso em 25 de nov. 2017).

[23] Zabala, Antoni: Educar para a Vida. Educatrix, 2016.

[24] Zambarda, Pedro: Falta base matem´atica aos programadores de games, outubro 2013.

http://www.techtudo.com.br/noticias/noticia/2013/10/falta-base-matematica-aos-
programadores-de-games-diz-professor-da-uﬀ.html, (acesso em 12 de out. 2017).

