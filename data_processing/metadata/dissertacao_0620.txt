COLÉGIO PEDRO II

Pró-Reitoria de Pós-Graduação, Pesquisa, Extensão e Cultura
Mestrado Proﬁssional em Matemática em Rede Nacional

Felipe Almeida de Oliveira

Atividades em
Circuitos Lógicos para o Estudo e Desenvolvimento de
Potencialidades acerca da Compreensão de Conectivos

Rio de Janeiro

2020

Felipe Almeida de Oliveira

Atividades em Circuitos Lógicos para o Estudo e Desenvolvimento de
Potencialidades acerca da Compreensão de Conectivos

Dissertação de Mestrado apresentada ao
Programa de Mestrado Proﬁssional em
Matemática em Rede Nacional, vinculado
à Pró-Reitoria de Pós-Graduação, Pesquisa,
Extensão e Cultura do Colégio Pedro II, como
requisito parcial para obtenção do título de
Mestre em Matemática.

Orientador: Prof(a) Dr.Sc. Daniel Felipe Neves Martins

Rio de Janeiro

2020

                                      COLÉGIO PEDRO II PRÓ-REITORIA DE PÓS-GRADUAÇÃO, PESQUISA, EXTENSÃO E CULTURA BIBLIOTECA PROFESSORA SILVIA BECHER CATALOGAÇÃO NA FONTE                    Ficha catalográfica elaborada pela Bibliotecária Simone Alves – CRB7 5692.   O48    Oliveira, Felipe Almeida de       Atividades em circuitos lógicos para o estudo e desenvolvimento de potencialidades acerca da compreensão de conectivos / Felipe Almeida de Oliveira. – Rio de Janeiro, 2020.                  152 f.        Dissertação (Mestrado Profissional em Matemática em Rede Nacional) – Colégio Pedro II. Pró-Reitoria de Pós-Graduação, Pesquisa, Extensão e Cultura.   Orientador: Daniel Felipe Neves Martins.                                     1. Matemática – Estudo e ensino. 2. Lógica algébrica. 3. Álgebra booleana.  4. Circuitos lógicos. I. Martins, Daniel Felipe Neves. II. Colégio Pedro II. III. Título.                                                                                                                                                                                                                    CDD 510                                                                                                                 Felipe Almeida de Oliveira

Atividades em Circuitos Lógicos para o Estudo e Desenvolvimento de
Potencialidades acerca da Compreensão de Conectivos

Dissertação de Mestrado apresentada ao
Programa de Mestrado Proﬁssional em
Matemática em Rede Nacional, vinculado
à Pró-Reitoria de Pós-Graduação, Pesquisa,
Extensão e Cultura do Colégio Pedro II, como
requisito parcial para obtenção do título de
Mestre em Matemática.

Aprovado em: ___/___/___.

Banca Examinadora:

Prof(a) Dr.Sc. Daniel Felipe Neves Martins
Colégio Pedro II
Orientador

Prof(a) Dra Aline de Lima Guedes
IME- UERJ

Prof(a) Dra Andreia C. Maciel Barbosa
Colégio Pedro II

Prof(a) Dr. Rodrigo Trevisan de Barros
Colégio Pedro II

Rio de Janeiro

2020

Esta pesquisa é dedicada a todos aqueles que
contribuíram direta ou indiretamente para a
conclusão da mesma: Deus, família, alunos,
amigos e professores.

AGRADECIMENTOS

Primeiramente quero agradecer a Deus por me permitir chegar até aqui com saúde
e paz no coração. Agradecer meus pais Adriana e Júlio que me permitiram chegar onde
estou hoje dando todas as condições e apoio necessários para minha formação pessoal e
academica, em especial minha esposa Camila por todo apoio, compreensão e força nos
momentos mais difíceis durante essa árdua caminhada, minha irmã Juliana pelo apoio
tecnológico durante esses dois duradouros anos e aos meus amigos de longa data Rafael
Lima e Rafael Coelho por todos os conselhos dados e pela paciância nos momentos de
frustração acadêmica. Reforço o agradecimento a todos citados a cima por toda paciência
que tiveram comigo ao longo desses anos de estudo, independente da tempestade que
a vida apresentou sempre estiveram ao meu lado como pilares de sustentação e nunca
permitiram que eu esmorecesse. Sem vocês esse momento poderia não existir.

Agradeço, e muito, meu orientador Daniel por todo o apoio acadêmico e compro-
metimento, aﬁm de apresentarmos o melhor trabalho possível. Agradeço pela paciência e
compreensão nos momentos de desanimo, pelas palavras de incentivos, cada conselho e
esporro que somaram para meu crescimento proﬁssional e pessoal.

E por ﬁm, mas não menos importante, quero deixar minha enorme gratidão aos
amigos que ﬁz no PROFMAT por me apoiar e incentivar em cada fase do curso, em
especial Jeﬀerson, Diego, Flávio, Maria, Gisele e Evandro. Suas palavras de encorajamento
e demostração de companheirismo foram fundamentais, em especial neste momento de
escrita da pesquisa, onde contribuiram com críticas que me ajudaram a atingir um patamar
diferenciado.

O presente trabalho foi realizado com apoio da Coordenação de Aperfeiçoamento

de Pessoal de Nível Superior - Brasil (CAPES) - Código de Financiamento 001.

“A matemática é o alfabeto com

o qual Deus escreveu o

universo”.

Pitágoras

RESUMO

OLIVEIRA, Felipe Almeida de. Atividades em Circuitos Lógicos para o Estudo e
Desenvolvimento de Potencialidades a cerca da Compreensão de Conectivos.
2020. 152 f. Dissertação (Mestrado) - Colégio Pedro II, Pró-Reitoria de Pós-Graduação,
Pesquisa, Extensão e Cultura. Programa de Mestrado Proﬁssional em Matemática em
Rede Nacional, Rio de Janeiro, 2020.

Tradicionalmente nos livros didáticos o assunto lógica matemática é apresentado com uma
linguagem que, muitas vezes, deixam os alunos desinteressados. Após o conhecimento da
metodologia STEM (acrônimo em inglês utilizado para designar as quatro áreas do conhe-
cimento: Ciência, tecnologia, engenharia e matemática), aﬁm de tornar a implementação
desses conceitos matemáticos no ensino médio mais atrativo, a proposta é apresentar os
mesmos conectivos baseado nesta metodologia. Para que esse objetivo fosse alcançado,
aborda-se esses conceitos através de conteúdos pertencentes a eletrônica, a saber, a Álgebra
Booleana e os Circuitos Digitais.

Palavras-chave: Metodologia STEM; Circuitos Lógicos; Álgebra Booleana.

ABSTRACT

OLIVEIRA, Felipe Almeida de. Atividades em Circuitos Lógicos para o Estudo e
Desenvolvimento de Potencialidades a cerca da Compreensão de Conectivos.
2020. 152 f. Dissertação (Mestrado) - Colégio Pedro II, Pró-Reitoria de Pós-Graduação,
Pesquisa, Extensão e Cultura. Programa de Mestrado Proﬁssional em Matemática em
Rede Nacional, Rio de Janeiro, 2020.

Traditionally in textbooks the mathematical logic subject is presented with a language that
often leaves students uninterested. After knowledge of the STEM methodology used to
designate the four areas of knowledge: Science, Technology, Engineering and Mathematics,
in order to make the implementation of these mathematical concepts in high school more
attractive, the proposal is to present the same connective based. in this methodology. To
achieve this goal, these concepts are approached through content belonging to electronics,
namely, Boolean Algebra and Digital Circuits.

Keywords: STEM Methodology; Logic Circuits; Boolean Algebra.

LISTA DE ILUSTRAÇÕES

Figura 1 – Por trás da origem STEM . . . . . . . . . . . . . . . . . . . . . . . . .
21
Figura 2 – Etapas metodologia 4Cs . . . . . . . . . . . . . . . . . . . . . . . . . . 23
Figura 3 – Professor e aluno trabalhando juntos . . . . . . . . . . . . . . . . . . . 24
. . . . . . . . . . . . . . . . . . . . . 59
Figura 4 – Porta lógica E de duas variáveis.
. . . . . . . . . . . . . . . . . . . . 59
Figura 5 – Porta lógica OU de duas variáveis.
Figura 6 – Pora lógica inversora. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60
. . . . . . . . . . . . . . . . . . . . . . . 60
Figura 7 – Circuito da expressão a + b0c.
61
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
Figura 8 – Circuito exemplo 20.
Figura 9 – Circuito dividido em quatro blocos. . . . . . . . . . . . . . . . . . . . .
61
Figura 10 – Circuito com as expressões resultantes. . . . . . . . . . . . . . . . . . . 62
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
Figura 11 – Um circuito lógico.
Figura 12 – Circuito correspondente à expressão a0bc0 + ab0c0 + ab0c + abc0
. . . . . 64
Figura 13 – Circuito correspondente à expressão ab’+bc . . . . . . . . . . . . . . . 65
Figura 14 – Porta NÃO-E. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
Figura 15 – Porta NÃO-OU.
Figura 16 – Circuito da função OU Esclusivo.
. . . . . . . . . . . . . . . . . . . . . 67
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 67
Figura 17 – Porta OU-Exclusivo.
Figura 18 – Circuito da função NÃO-OU-Exclusivo. . . . . . . . . . . . . . . . . . . 68
Figura 19 – Porta NÃO-OU-Exclusivo. . . . . . . . . . . . . . . . . . . . . . . . . . 69
. . . . . . . . . . . . . . . . . . . . . . 69
Figura 20 – Porta NE executando inversão.
. . . . . . . . . . 69
Figura 21 – Combinação de portas NE executando adição lógica.
. . . . . . 70
Figura 22 – Combinação de portas NE executando multiplicação lógica.
. . . . . . . . . . . . . . . . . . . . . 70
Figura 23 – Porta NOU executando inversão.
. . . . . 70
Figura 24 – Combinação de portas NOU executando multiplicação lógica.
71
. . . . . . . . .
Figura 25 – Combinação de portas NOU executando adição lógica.
Figura 26 – Circuito da ﬁgura 7 redesenhado com portas lógicas NÃO-E. . . . . . .
71
Figura 27 – Um circuito para expressão D = AB0 + A0B . . . . . . . . . . . . . . . 73
Figura 28 – Simulação 1: problema do carrinho. . . . . . . . . . . . . . . . . . . . . 74
Figura 29 – Simulação 2: problema do carrinho. . . . . . . . . . . . . . . . . . . . . 74
Figura 30 – Simulação 3: problema do carrinho. . . . . . . . . . . . . . . . . . . . . 75
Figura 31 – Simulação 4: problema do carrinho. . . . . . . . . . . . . . . . . . . . . 75
Figura 32 – Construção do circuito da atividade 1 no LogicCircuit: passo 1 . . . . . 78
Figura 33 – Construção do circuito da atividade 1 no LogicCircuit: passo 2 . . . . . 79
Figura 34 – Construção do circuito da atividade 1 no LogicCircuit: passo 3 . . . . . 79
Figura 35 – Construção do circuito da atividade 1 no LogicCircuit: passo 4 . . . . . 80
Figura 36 – Construção do circuito da atividade 1 no LogicCircuit: passo 5 . . . . . 80

Figura 37 – Construção do circuito da atividade 2 no LogicCircuit: passo 1 . . . . . 83
Figura 38 – Construção do circuito da atividade 2 no LogicCircuit: passo 2 . . . . . 83
Figura 39 – Construção do circuito da atividade 2 no LogicCircuit: passo 3 . . . . . 84
Figura 40 – Construção do circuito da atividade 2 no LogicCircuit: passo 4 . . . . . 84
Figura 41 – Construção do circuito da atividade 2 no LogicCircuit: passo 5 . . . . . 85
Figura 42 – Construção do circuito da atividade 3 no LogicCircuit: passo 1 . . . . . 87
Figura 43 – Construção do circuito da atividade 3 no LogicCircuit: passo 2 . . . . . 88
Figura 44 – Construção do circuito da atividade 3 no LogicCircuit: passo 3 . . . . . 88
Figura 45 – Construção do circuito da atividade 3 no LogicCircuit: passo 4 . . . . . 89
Figura 46 – Construção do circuito da atividade 3 no LogicCircuit: passo 5 . . . . . 89
Figura 47 – Circuito da subexpressão (b + c) . . . . . . . . . . . . . . . . . . . . . . 93
Figura 48 – Circuito da expressão a.(b + c)
. . . . . . . . . . . . . . . . . . . . . . 94
Figura 49 – Circuito dado: atividade 6 . . . . . . . . . . . . . . . . . . . . . . . . . 95
Figura 50 – Circuito item (a) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96
Figura 51 – Circuito item (b) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
Figura 52 – Circuito item (c) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
Figura 53 – Construção do circuito executado pela expressão ∼ p ∨ q no LogicCircuit104
Figura 54 – Simulação 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
Figura 55 – Simulação 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
Figura 56 – Simulação 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106
Figura 57 – Simulação 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106
Figura 58 – Construção do circuito executado pela expressão (∼ p ∨ q) ∧ (p ∨ ∼ q)

no LogicCircuit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107
Figura 59 – Simulação 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108
Figura 60 – Simulação 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108
Figura 61 – Simulação 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109
Figura 62 – Simulação 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109
Figura 63 – FESTMAT CP2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114
Figura 64 – Apresentação da oﬁcina no FESTMAT . . . . . . . . . . . . . . . . . . 115
Figura 65 – Apresentação da oﬁcina no FESTMAT . . . . . . . . . . . . . . . . . . 115
Figura 66 – Apresentação da oﬁcina no FESTMAT . . . . . . . . . . . . . . . . . . 116
Figura 67 – Resultado simulação atividade 1: linha 1 . . . . . . . . . . . . . . . . . 121
Figura 68 – Resultado simulação atividade 1: linha 2 . . . . . . . . . . . . . . . . . 121
Figura 69 – Resultado simulação atividade 1: linha 3 . . . . . . . . . . . . . . . . . 122
Figura 70 – Resultado simulação atividade 1: linha 4 . . . . . . . . . . . . . . . . . 122
Figura 71 – Resultado simulação atividade 2: linha 1 . . . . . . . . . . . . . . . . . 123
Figura 72 – Resultado simulação atividade 2: linha 2 . . . . . . . . . . . . . . . . . 123
Figura 73 – Resultado simulação atividade 2: linha 3 . . . . . . . . . . . . . . . . . 124
Figura 74 – Resultado simulação atividade 2: linha 4 . . . . . . . . . . . . . . . . . 124

Figura 75 – Resultado simulação atividade 3: linha 1 . . . . . . . . . . . . . . . . . 125
Figura 76 – Resultado simulação atividade 3: linha 2 . . . . . . . . . . . . . . . . . 125
Figura 77 – Resultado simulação atividade 4: linha 1 . . . . . . . . . . . . . . . . . 126
Figura 78 – Resultado simulação atividade 4: linha 2 . . . . . . . . . . . . . . . . . 126
Figura 79 – Resultado simulação atividade 4: linha 3 . . . . . . . . . . . . . . . . . 127
Figura 80 – Resultado simulação atividade 4: linha 4 . . . . . . . . . . . . . . . . . 127
Figura 81 – Resultado simulação atividade 4: linha 5 . . . . . . . . . . . . . . . . . 128
Figura 82 – Resultado simulação atividade 4: linha 6 . . . . . . . . . . . . . . . . . 128
Figura 83 – Resultado simulação atividade 4: linha 7 . . . . . . . . . . . . . . . . . 129
Figura 84 – Resultado simulação atividade 4: linha 8 . . . . . . . . . . . . . . . . . 129
Figura 85 – Resultado simulação atividade 5: linha 1 . . . . . . . . . . . . . . . . . 131
Figura 86 – Resultado simulação atividade 5: linha 2 . . . . . . . . . . . . . . . . . 131
Figura 87 – Resultado simulação atividade 5: linha 3 . . . . . . . . . . . . . . . . . 132
Figura 88 – Resultado simulação atividade 5: linha 4 . . . . . . . . . . . . . . . . . 132
Figura 89 – Resultado simulação atividade 5: linha 5 . . . . . . . . . . . . . . . . . 133
Figura 90 – Resultado simulação atividade 5: linha 6 . . . . . . . . . . . . . . . . . 133
Figura 91 – Resultado simulação atividade 5: linha 7 . . . . . . . . . . . . . . . . . 134
Figura 92 – Resultado simulação atividade 5: linha 8 . . . . . . . . . . . . . . . . . 134
Figura 93 – Circuito atividade 6 . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136
Figura 94 – Resultado simulação atividade 6: linha 1 . . . . . . . . . . . . . . . . . 137
Figura 95 – Resultado simulação atividade 6: linha 2 . . . . . . . . . . . . . . . . . 137
Figura 96 – Resultado simulação atividade 6: linha 3 . . . . . . . . . . . . . . . . . 138
Figura 97 – Resultado simulação atividade 6: linha 4 . . . . . . . . . . . . . . . . . 138
Figura 98 – Resultado simulação atividade 6: linha 5 . . . . . . . . . . . . . . . . . 139
Figura 99 – Resultado simulação atividade 6: linha 6 . . . . . . . . . . . . . . . . . 139
Figura 100 – Resultado simulação atividade 6: linha 7 . . . . . . . . . . . . . . . . . 140
Figura 101 – Resultado simulação atividade 6: linha 8 . . . . . . . . . . . . . . . . . 140
Figura 102 – Resultado simulação atividade 8: linha 1 . . . . . . . . . . . . . . . . . 145
Figura 103 – Resultado simulação atividade 8: linha 2 . . . . . . . . . . . . . . . . . 145
Figura 104 – Resultado simulação atividade 8: linha 3 . . . . . . . . . . . . . . . . . 146
Figura 105 – Resultado simulação atividade 8: linha 4 . . . . . . . . . . . . . . . . . 146
Figura 106 – Resultado simulação atividade 8: linha 5 . . . . . . . . . . . . . . . . . 147
Figura 107 – Resultado simulação atividade 8: linha 6 . . . . . . . . . . . . . . . . . 147
Figura 108 – Resultado simulação atividade 8: linha 7 . . . . . . . . . . . . . . . . . 148
Figura 109 – Resultado simulação atividade 8: linha 8 . . . . . . . . . . . . . . . . . 148
Figura 110 – Construção do circuito executado pela expressão (a + b)0, (a.b)0, a0b0 e

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149
Figura 111 – Construção do circuito no LogicCircuit . . . . . . . . . . . . . . . . . . 152

a0 + b0.

LISTA DE TABELAS

Tabela 1 – Tabela de valores para uma proposição.
. . . . . . . . . . . . . . . . . 27
Tabela 2 – Tabela de valores para duas proposições. . . . . . . . . . . . . . . . . . 27
. . . . . . . . . . . . . . . . . 28
Tabela 3 – Tabela de valores para três proposições.
Tabela 4 – Tabela-verdade ∼ p
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
Tabela 5 – Tabela-verdade da p ∧ q . . . . . . . . . . . . . . . . . . . . . . . . . . 29
Tabela 6 – Exemplo 6.1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
Tabela 7 – Exemplo 6.2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
Tabela 8 – Tabela-verdade da p ∨ q . . . . . . . . . . . . . . . . . . . . . . . . . . 30
Tabela 9 – Exemplo 7.1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
Tabela 10 – Exemplo 7.2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
31
Tabela 11 – Tabela-verdade da p (cid:89) q . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela 12 – Tabela-verdade da proposição ∼ (∼ p ∨ q) . . . . . . . . . . . . . . . . 32
Tabela 13 – Tabela-verdade da proposição p ∨ (∼ p ∧ q)
. . . . . . . . . . . . . . . 32
. . . . . . . . . . . . 33
Tabela 14 – Tabela-verdade da proposição (p ∨ q) ∧ (∼ q ∨ r)
Tabela 15 – Tabela-verdade da proposição p ∨ (q ∨ ∼ p) . . . . . . . . . . . . . . . 33
Tabela 16 – Tabela-verdade da proposição (p ∧ q) ∧ ∼ (p ∨ q) . . . . . . . . . . . . 34
Tabela 17 – Tabela-verdade da proposição p ∨ (∼ p ∧ ∼ q) . . . . . . . . . . . . . . 34
Tabela 18 – Dupla negação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34
Tabela 19 – Prova Idempotente da conjunção . . . . . . . . . . . . . . . . . . . . . 35
Tabela 20 – Prova Comutatividade da conjunção . . . . . . . . . . . . . . . . . . . 35
Tabela 21 – Prova Associatividade da conjunção
. . . . . . . . . . . . . . . . . . . 36
Tabela 22 – Prova Identidade da conjunção . . . . . . . . . . . . . . . . . . . . . . 36
Tabela 23 – Prova Idempotente da disjunção . . . . . . . . . . . . . . . . . . . . . . 37
Tabela 24 – Prova Comutativa da disjunção . . . . . . . . . . . . . . . . . . . . . . 37
Tabela 25 – Prova Associatividade da disjunção . . . . . . . . . . . . . . . . . . . . 37
Tabela 26 – Prova Identidade da disjunção . . . . . . . . . . . . . . . . . . . . . . . 38
Tabela 27 – Prova Distributiva (p ∧ (q ∨ r) ⇐⇒ (p ∧ q) ∨ (p ∧ r))
. . . . . . . . . . 38
. . . . . . . . . . 39
Tabela 28 – Prova Distributiva (p ∨ (q ∧ r) ⇐⇒ (p ∨ q) ∧ (p ∨ r))
Tabela 29 – Prova Absorção p ∧ (p ∨ q) ⇐⇒ p . . . . . . . . . . . . . . . . . . . . . 39
. . . . . . . . . . . . . . . . . . . 40
Tabela 30 – Prova Absorção (p ∨ (p ∧ q) ⇐⇒ p)
. . . . . . . . . . . . 40
Tabela 31 – Prova DE MORGAN (∼ (p ∧ q) ⇐⇒ ∼ p ∨ ∼ q)
Tabela 32 – Prova DE MORGAN (∼ (p ∨ q) ⇐⇒ ∼ p ∧ ∼ q)
41
. . . . . . . . . . . .
Tabela 33 – Operador E . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
Tabela 34 – Operador OU . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
Tabela 35 – Operador Complementar (Negação) . . . . . . . . . . . . . . . . . . . . 44
Tabela 36 – Prova da propriedade booleana comutatividade. . . . . . . . . . . . . . 47

. . . . . . . . . . . . . . . . . . . . . . . . . . .

Tabela 37 – Prova da propriedade booleana distributiva a + (b · c) = (a + b) · (a + c). 47
Tabela 38 – Prova da propriedade elemento neutro. . . . . . . . . . . . . . . . . . . 48
. . . . . . . . . . . . . . . . . . . 48
Tabela 39 – Prova da propriedade complemento.
Tabela 40 – Prova da propriedade complemento.
. . . . . . . . . . . . . . . . . . . 48
Tabela 41 – Tabela-verdade para função booleana a + bc . . . . . . . . . . . . . . . 55
. . 55
Tabela 42 – Outra repreentação para tabela-verdade da função booleana a + bc
Tabela 43 – Mintermos e Maxtermos . . . . . . . . . . . . . . . . . . . . . . . . . . 57
Tabela 44 – Uma função booleana . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
Tabela 45 – Operador NÃO-E.
Tabela 46 – Operador NÃO-OU.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
Tabela 47 – Operador OU-Exclusivo. . . . . . . . . . . . . . . . . . . . . . . . . . . 67
. . . . . . . . . . . . . . . . . . . . . . 68
Tabela 48 – Operador NÃO-OU-Exclusivo.
Tabela 49 – Função booleana referente ao deslocamento do carrinho.
. . . . . . . . 72
Tabela 50 – Proposta de atividade 1 . . . . . . . . . . . . . . . . . . . . . . . . . . 78
Tabela 51 – Operador booleano E.
81
Tabela 52 – Tabela-verdade da p ∧ q . . . . . . . . . . . . . . . . . . . . . . . . . . 82
Tabela 53 – Proposta de atividade 2 . . . . . . . . . . . . . . . . . . . . . . . . . . 82
Tabela 54 – Operador booleano OU.
. . . . . . . . . . . . . . . . . . . . . . . . . . 86
Tabela 55 – Tabela-verdade da p ∨ q . . . . . . . . . . . . . . . . . . . . . . . . . . 86
Tabela 56 – Proposta de atividade 3 . . . . . . . . . . . . . . . . . . . . . . . . . . 87
Tabela 57 – Operador booleano inversão . . . . . . . . . . . . . . . . . . . . . . . . 90
Tabela 58 – Tabela-verdade ∼ p
91
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
91
Tabela 59 – Proposta de atividade 4 . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela 60 – Proposta de atividade 5 . . . . . . . . . . . . . . . . . . . . . . . . . . 92
Tabela 61 – Proposta de atividade 6 . . . . . . . . . . . . . . . . . . . . . . . . . . 94
Tabela 62 – Proposta de atividade 7 . . . . . . . . . . . . . . . . . . . . . . . . . . 95
Tabela 63 – Proposta de atividade 8 . . . . . . . . . . . . . . . . . . . . . . . . . . 98
Tabela 64 – Proposta de atividade 9 . . . . . . . . . . . . . . . . . . . . . . . . . . 99
Tabela 65 – Proposta de atividade 10 . . . . . . . . . . . . . . . . . . . . . . . . . . 99
Tabela 66 – Tabela-verdade da p → q . . . . . . . . . . . . . . . . . . . . . . . . . . 102
Tabela 67 – Exemplo 9.1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102
Tabela 68 – Exemplo 9.2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102
Tabela 69 – Tabela-verdade da p ↔ q . . . . . . . . . . . . . . . . . . . . . . . . . . 103
Tabela 70 – Exemplo 10.1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
Tabela 71 – Exemplo 10.2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
Tabela 72 – Pergunta 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112
Tabela 73 – Pergunta 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112
Tabela 74 – Pergunta 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112
Tabela 75 – Pergunta 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113

Tabela 76 – Pergunta 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113
Tabela 77 – a ∧ (b ∧ c) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 130
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135
Tabela 78 – a · (b + c)
Tabela 79 – a ∧ (b ∨ c) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135
Tabela 80 – a + (b0 · c) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
Tabela 81 – a ∨ (∼ b ∧ c)
Tabela 82 – a + (b + a0) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142
Tabela 83 – a ∨ (b ∨ ∼ a . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142
Tabela 84 – a + (a0 · b0)
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142
Tabela 85 – a ∨ (∼ a ∧ ∼ b) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143
Tabela 86 – a0 · (a · b0) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143
Tabela 87 – ∼ a ∧ (a ∧ ∼ b)
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143
Tabela 88 – p · (q + r) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144
Tabela 89 – (p · q) + (p · r) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144
Tabela 90 – (a + b)0
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149
Tabela 91 – (a.b)0 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150
Tabela 92 – a0b0 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150
Tabela 93 – a0 + b0
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151
Tabela 94 – (a ∧ b) ∨ (c ∧ ∼ b)

SUMÁRIO

INTRODUÇÃO . . . . . . . . . . . . . . . . . . . . . . . . . . . .

18

METODOLOGIA STEM . . . . . . . . . . . . . . . . . . . . . .
O STEM no Brasil
Papel do professor . . . . . . . . . . . . . . . . . . . . . . . . . . .

20
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
23

ASPECTOS DE LÓGICA MATEMÁTICA RELEVANTES
PARA O DESENVOLVIMENTO DESTA PESQUISA . . . .
Sobre a lógica matemática dos conectivos E (∧) e OU (∨): A
aboredagem tradicional
. . . . . . . . . . . . . . . . . . . . . . . .
Proposição . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Princípios básicos da logica matemática . . . . . . . . . . . . . . . . .
Proposição simples
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
Proposição composta . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela-Verdade
. . . . . . . . . . . . . . . . . .
Operações Lógicas Sobre Proposições
Negação (∼) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Conjunção (∧) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Disjunção (∨)
Disjunção Exclusiva ((cid:89)) . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . .
Construção de Tabelas-Verdade
. . . . . . . . . . . . . .
Tabela-Verdade de uma proposição composta
Número de linhas de uma Tabela-Verdade . . . . . . . . . . . . . . . .
Construção da Tabela-Verdade . . . . . . . . . . . . . . . . . . . . . .
Tautologia, Proposição logicamente falsa (Contradição) e Contingência
Tautologia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Proposição logicamente falsa (Contradição) . . . . . . . . . . . . . . .
Contingência . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Equivalência Lógica . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . .
Álgebra das Proposições
Propriedades da Conjunção . . . . . . . . . . . . . . . . . . . . . . . .
Propriedades da Disjunção . . . . . . . . . . . . . . . . . . . . . . . .
Propriedades da Conjunção e da Disjunção . . . . . . . . . . . . . . .

25

25
25
26
26
26
27
28

28
29
29
30
31

31
31
32
33

33
33
34
34
35

35
36
38

42
42

1

2
2.1
2.2

3

3.1

3.1.1
3.1.2
3.1.3
3.1.4
3.1.5
3.1.6

3.1.6.1
3.1.6.2
3.1.6.3
3.1.6.4
3.1.7

3.1.7.1
3.1.7.2
3.1.7.3
3.1.8

3.1.8.1
3.1.8.2
3.1.8.3
3.1.9
3.1.10

3.1.10.1
3.1.10.2
3.1.10.3

4
4.1

ÁLGEBRA DE BOOLE E CIRCUITOS DIGITAIS . . . . . .
História de Boole . . . . . . . . . . . . . . . . . . . . . . . . . . . .

4.2
4.2.1

4.2.1.1
4.2.1.2
4.2.1.3
4.2.2

4.2.2.1
4.2.2.2
4.2.2.3
4.2.2.4
4.2.2.5
4.2.3
4.2.4
4.2.5
4.2.6
4.2.7
4.2.8

4.2.8.1
4.3
4.3.1

4.3.1.1
4.3.1.2
4.3.1.3
4.3.2
4.3.3

4.3.3.1
4.3.3.2
4.3.3.3
4.3.3.4

4.3.4

4.3.5

5
5.1
5.2
5.3
5.4
5.5

Elementos da Álgebra de Boole . . . . . . . . . . . . . . . . . . .
Operações Básicas da Álgebra Booleana . . . . . . . . . . . . . . . . .
Operador E . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Operador OU . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Complementação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Deﬁnição, Postulados e Propriedades da Álgebra de Boole . . . . . . .
Deﬁnição da Álgebra de Booleana . . . . . . . . . . . . . . . . . . . .
Postulados . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Propriedade Dual ou Princípio da Dualidade . . . . . . . . . . . . . .
Prova das Propriedades Utilizando a Tabela-Verdade . . . . . . . . . .
Teoremas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Expressões Booleanas . . . . . . . . . . . . . . . . . . . . . . . . . . .
Funções Booleanas
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela-Verdede Extraida de Expressões Booleanas . . . . . . . . . . .
Expressões Booleanas Extraidas de Tabelas-Verdade . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . .
Mintermos e Maxtermos
. . . . . . . . . . . . . . . . . . .
Minimização de Funções Booleanas
Método Álgebrico . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Circuitos Lógicos e sua relação com a Álgebra de Boole . . . .
Portas Lógicas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Função e Porta Lógica E . . . . . . . . . . . . . . . . . . . . . . . . .
Função e Porta Lógica OU . . . . . . . . . . . . . . . . . . . . . . . .
Função e Porta Lógica Inversora (Negação) . . . . . . . . . . . . . . .
Exemplo de um Circuito Lógico . . . . . . . . . . . . . . . . . . . . .
Outras Portas Lógicas . . . . . . . . . . . . . . . . . . . . . . . . . . .
Função e Porta Lógica NÃO-E (ou NE, ou Negação de E) . . . . . . .
Função e Porta Lógica NÃO-OU (ou NOU, ou Negação de OU) . . . .
. . . . . . . . . . . . . . . . . .
Função e Porta Lógica OU-Exclusivo.
Função e Porta Lógica NÃO-OU-Exclusivo (ou Coincidência, ou NOU
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Exclusivo).
Implementação de Funções Booleanas Usando as Portas Lógicas NÃO-E
e NÃO-OU . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Construção de uma Função Booleana pela Descrição de um Problema

43
43

43
44
44
45

45
45
46
46
48
54
54
54
55
56
57

57
58
58

59
59
59
60
65

65
66
66

68

69
71

76
ATIVIDADES . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
78
Atividade 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
82
Atividade 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Atividade 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
87
Atividade 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
92
Atividade 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

5.6
5.7
5.8
5.9
5.10

6

7

8

Atividade 6 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Atividade 7 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Atividade 8 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Atividade 9 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Atividade 10 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

94
95
98
99
99

SOBRE A NECESSIDADE DE CRIAR SOLIDARIEDADE
LÓGICA PARA EXEMPLIFICAR O “SE..., ENTÃO” E O
“SE E SOMENTE SE” ATRAVÉS DOS CIRCUITOS LÓGICOS101

VALIDAÇÃO DA PROPOSTA CONTIDA NESTA PESQUISA111

CONSIDERAÇÕES FINAIS . . . . . . . . . . . . . . . . . . . . 117

REFERÊNCIAS . . . . . . . . . . . . . . . . . . . . . . . . . . . 119

APÊNDICE A – GABARITO DA ATIVIDADE 1 . . . . . . 121

APÊNDICE B – GABARITO DA ATIVIDADE 2 . . . . . . 123

APÊNDICE C – GABARITO DA ATIVIDADE 3 . . . . . . 125

APÊNDICE D – GABARITO DA ATIVIDADE 4 . . . . . . 126

APÊNDICE E – GABARITO DA ATIVIDADE 5 . . . . . . 131

APÊNDICE F – GABARITO DA ATIVIDADE 6 . . . . . . 136

APÊNDICE G – GABARITO DA ATIVIDADE 7 . . . . . . 142

APÊNDICE H – GABARITO DA ATIVIDADE 8 . . . . . . 144

APÊNDICE I – GABARITO DA ATIVIDADE 9 . . . . . . 149

APÊNDICE J – GABARITO DA ATIVIDADE 10 . . . . . . 151

1 INTRODUÇÃO

18

Este trabalho trata-se de uma tentativa de dinamizar o ensino da lógica matemática
para além do que é apresentado tradicionalmente nos livros didáticos, apostilas, aulas
organizadas por professores e apresentações em midias digitais. Todos esses materiais
serviram de ferramentas para que pensassemos numa nova abordagem para o assunto já
que versam muito sobre análise de tabelas, quando muito ligados a problemas de linguagem
e conjuntos.

Na tentativa de estimular esse tipo de conteúdo que é árduo tanto para alunos
quanto para professores, procuramos um embasamento matemática que justiﬁcasse a teoria
da lógica. A Álgebra de Boole é o conteúdo matemático que justiﬁca a teoria, que tem nos
circuitos digitais o campo fértil para prática. Os circuitos digitais aparecem com a função
de simular um circuito dando uma maior concretização ao aprendizado e trazendo os alunos
para um campo mais interessante e prático, já que os circuitos lógicos estão presentes de
maneira direta em suas vidas. Dessa forma estruturamos o texto dessa pesquisa em sete
capítulos de modo que:

No capítulo 2 apresentamos o conceito da metodologia STEM (acrônimo em
inglês utilizado para designar as quatro áreas do conhecimento: Ciência, Tecnologia,
Engenharia e Matemática), que servirá de justiﬁcativa teórica para o uso de um conteúdo
pertencente à eletrônica para o ensino de conectivos. Trata-se de uma metodologia baseada
em projetos que tem como principal objetivo trazer o aluno para o envolvimento direto
com o conteúdo através de atividades que os levem a um aprendizado mais eﬁciente,
colocando-o como protagonista do seu próprio conhecimento.

No capítulo 3 procuramos descrever a lógica proposicional de primeira ordem
evidenciando os conectivos E, OU e a negação lógica, com o objetivo de situar o leitor
de como ela é apresentada tradicionalmente, com os seus principais conceitos e argumentos.
Tais conceitos serviram como pano de fundo para o desenvolvimento da parte teórica do
trabalho.

No capítulo 4 foi apresentado um breve histórico do matemático George Boole
destacando suas principais obras, dentre elas a “An investigation into the Laws of Thought”
(As Leis do Pensamento) onde viu a lógica com um novo olhar, chegando a uma álgebra
mais simples, que futuramente seria a base para a computação. Em seguida, apresentamos
a teoria que compreende a Álgebra Booleana descrevendo seus principais elementos,
deﬁnições, operações, postulados e teoremas. Por ﬁm, exibimos a relação entre Circuitos
Lógicos e a Álgeba Booleana, apresentando as principais portas lógicas, a construção de
circuitos lógicos a partir de uma expressão booleana, a simpliﬁcação de um circuito através

Capítulo 1.

introdução

19

de sua expressão entre outros aspectos necessários para o desenvolvimento das atividades
que serão propostas mais adiante.

No capítulo 5 descrevemos uma proposta para implementação da lógica mate-
mática para o ensino médio regular, em particular, a negação lógica e os conectivos E e
OU. Essa proposta tem como objetivo elaborar atividades a serem resolvidas baseadas
na metodologia STEM, relacionando a Álgebra de Boole, os circuitos digitais e a lógica
proposicional. Foi utilizado um software (LogicCircuit) que cria e simula circuitos lógicos,
aﬁm de dar uma maior concretização ao aprendizado.

No capítulo 6 pensamos em uma proposta para trabalharmos com os conectivos “
se..., então” e “se e somente se” de maneira indireta, já que não existem portas lógicas que
tratem diretamente desses conectivos. As propostas de atividades contidas neste capítulo
foram intencionalmente pensadas e delineadas de modo que o professor possa criar o seu
proprio material a partir das dicas e sugestões presentes no capítulo.

No capítulo 7 temos o resultado de duas oﬁcinas, uma apresentada no Festival
da Matemática (FESTMAT) do Colégio Pedro II e outra feita com 29 alunos do curso
de informática do ensino médio integrado do Colégio Pedro II, campus São Cristovão
III, onde apresentamos um relato de como se desenvolveu as atividades e comentamos os
resultados obtidos em um momento destinado a reﬂexão da oﬁcina junto aos alunos.

2 METODOLOGIA STEM

20

Com a evolução da era digital, houve uma demanda signiﬁcativa de trabalhadores
que serão ou terão relação com a tecnologia, portanto se faz necessário que o aluno
desde a educação básica tenha o aprendizado de conteúdos relacionados com a educação
STEM. cuja a sigla é um acrônimo em inglês utilizado para designar as quatro áreas do
conhecimento: Ciência, Tecnologia, Engenharia e Matemática (em inglês Science, Techology,
Engineering, and Mathematics).

Em um planeta altamente globalizado, a interação entre sistemas políticos,
econômicos e culturais é bastante intrincada. Algumas nações tendem a
atuar como produtoras de tendências globais, enquanto outras, em maior
ou menor intensidade, incorporam essas tendências nos seus sistemas
internos. As novas diretrizes econômicas são fortemente inﬂuenciadas
pelas grandes corporações que produzem ou demandam conhecimento de
alta complexidade e especialização, e isso gera consequências em outros
setores além do econômico. No que diz respeito aos sistemas educacionais,
diversos países têm se voltado para um formato de educação que enfatiza
a Ciência, Tecnologia, Engenharia e Matemática, o chamado STEM
Education. (PUGLIESE, 2017, p.38)

De acordo com (PUGLIESE, 2017) ao longo da década de 1990, especialistas
alardeavam nos Estados Unidos a existência de uma crise no mercado de trabalho motivada
pela escassez de pessoas qualiﬁcadas para ocupar cargos ou posições técnicas relacionadas
as ciências. E foi dessa demanda que surgiu o conceito de educação STEM , popularizada
a partir dos anos 2000 pela Fundação Nacional da Ciência, agência governamental norte-
americana que promove pesquisa e educação em ciência e engenharia.

Em https://desaﬁosdaeducacao.com.br/microsoft-desenvolve-ia-e-programas-em-
stem-para-revolucionar-ensino/, encontramos a entrevista ao site desaﬁo da Educação
(2019), dada por Antônio Moraes, diretor de Educação da Microsoft Brasil, onde aﬁrma
que STEM é baseado em um modelo de ensino com ênfase em projetos, em que propõe o
envolvimento dos estudantes em atividades que os levam a uma aprendizagem mais prática
e atrativa, que foge de metodologias conteudistas e pouco atraente. Colocando o aluno
como centralizador do seu aprendizado, fazendo com que ele debata, interaja e arquitete o
mundo com o seu olhar.

Segundo (PUGLIESE, 2017) a educação STEM apresenta-se como uma metodologia
inovadora no ensino de ciência. Difundindo a ideia do ensino tradicional, onde o aluno
pouco interage com o conteúdo trabalhado e não vê conexões com o mundo em que vivem.
Em geral, o programa educacional STEM defende que é uma forma libertadora do ensino
tradicional e não participativo, sendo substituído pela aprendizagem baseada em projetos
e atrelada as futuras decisões proﬁssionais.

Capítulo 2. Metodologia STEM

21

De acordo com (PARK; KO, 2012 apud LOPES et al., 2017), com o avanço da
Ciência, Tecnologia e Engenharia, houve uma defasagem no ensino da educação cientíﬁca
fazendo com que os jovens, que estão familiarizados com esse avanço tecnológico, percam
o interesse. Ocasionando uma defasagem na criatividade na educação cientiﬁca durante
os anos escolares. Desta maneira, torna-se desaﬁador para o professor manter o ensino
na atualidade algo atrativo. De acordo com (FREIRE; LEMOS, 2008), os jovens de
hoje se destacam pela facilidade no manuseio de novas tecnologias. Detentores de muita
criatividade, esses jovens necessitam de atividades que os desaﬁem e diversiﬁcadas para
manter o foco em suas tarefas.

Na sala de aula, isso se torna um grande desaﬁo para o educador, uma
vez que o docente de outra geração precisa compreender essa divergência
de prioridades e auxiliar os estudantes a construir sua própria maneira de
aprender. Para isso, as metodologias ativas de aprendizagem procuram
atender essa geração, uma vez que pretendem mudar a forma de aprender
e ensinar, tornando o ensino mais dinâmico e divertido, sendo as aulas
mais interessantes para os alunos. (LIMA, 2016 apud SILVA, 2017, p.2)

Figura 1 – Por trás da origem STEM

Fonte – https://www.fenep.org.br/single-de-noticia/nid/stem-o-movimento-as-criticas-e-o-que-esta-em-

jogo/

2.1 O STEM no Brasil

O programa STEM é algo relativamente novo no Brasil. Segundo (PUGLIESE,
2017) nas principais revistas especializadas em ciências, não existe nenhuma publicação

Capítulo 2. Metodologia STEM

22

relativa à educação STEM, já na mídia, tem-se pequenas reportagem introdutórias referente
ao programa, mas sem o aprofundamento metodológico.

Um dos principais agentes da área no país, o programa STEM Brasil, surgiu em
2009 com o objetivo de melhorar a educação no país por meio dessa metodologia. O projeto,
criado pela organização internacional Worldfund. O STEM Brasil forma professores da
rede pública para inserirem o STEM em suas aulas regulares, seguindo uma metodologia
própria, que enfatiza a pratica de resolução de problemas reais dando mais sentido ao
currículo obrigatório de ciências e matemática dos estados brasileiros. Utilizam o ensino
baseado em atividades práticas facilitando o aprendizado de conceitos teóricos. Professores
são treinados a fazer estudantes colaborarem em projetos e a resolverem problemas juntos,
com o professor como facilitador. O principal objetivo é fazer com que, aos poucos, os
professores treinados substituam a metodologia tradicional, baseada em memorização e
cálculos mecânicos, para algo que desenvolva habilidades reais nos alunos, diz Marcos
Paim, Diretor do STEM Brasil.

A metodologia envolve quatro áreas de conhecimento: Física, Química, Biologia
e Matemática e a todas elas, são incorporadas as habilidades do século XXI necessárias
ao mundo do trabalho, a saber, a resolução de problemas, o trabalho em equipe, o
pensamento crítico e a comunicação. Cada professor passa por intensas 180 horas de
formação distribuídas em 2 anos. Desde o lançamento do STEM Brasil, em 2009, atua
hoje em 17 estados e já atendeu quase 724 escolas, 6225 professores e 574.771 alunos.

De acordo com os dados publicados pelo site Educando (2019), na Secretaria de
Educação do Estado de São Paulo, veriﬁca-se que dos 84% das escolas que incorporaram a
metodologia STEM Brasil, 20% delas mostraram um aumento nas notas de matemática
dos alunos. Entre as escolas participantes do STEM Brasil, 88% mantém o programa após
a primeira fase, que tem duração de dois anos. Não há informações qualitativas sobre
ganhos ou perdas que envolvem a aplicação da metodologia.

A aplicação da metodologia não se restringe a sua aplicação no espaço escolar.
Desde 1980, a LEGO®Education (2019), braço educacional da LEGO, se dedica ao
desenvolvimento de métodos de ensino focados em STEM por meio de recursos lúdicos que
envolvem os blocos LEGO®, softwares, materiais e formação de professores. Com ênfase
na Educação Infantil, Ensino Fundamental I e II, e ensino médio, a metodologia LEGO
abrange currículos na área de Linguagem, Ciências, Tecnologia, Engenharia e Matemática.
Esta metodologia baseia-se na estrutura conhecida por 4Cs, sigla referente as quatro
etapas do modelo de aprendizado: connect (conectar), constructo (construir), contemplate
(analisar) e continue (continuar).

Capítulo 2. Metodologia STEM

23

Figura 2 – Etapas metodologia 4Cs

Fonte – O autor, 2019.

2.2 Papel do professor

Segundo (BRIGHENTI; BIAVATTI; SOUZA, 2015), o papel do professor deixa
de ser o de detentor do saber e transmissor do conteúdo e passa a ser um orientador,
um mentor, cuja principal função é fazer os questionamentos certos, provocar novas
descobertas. Nesse novo olhar, o aluno deixa de ser apenas receptor e passa a ser produtor
de conhecimento, assumindo o protagonismo de sua própria aprendizagem.

Dessa forma o processo de aprendizagem torna-se mais prazeroso para o aluno
quanto para o professor. Pois o professor passa a ajudar o aluno a buscar respostas, resolver
problemas, pensar de forma sistemática. O estudante precisa buscar tais conhecimentos
para resolver os problemas, trabalhar em equipe, e quem faz isso é o próprio jovem, o
docente atua como mentor.

Capítulo 2. Metodologia STEM

24

Figura 3 – Professor e aluno trabalhando juntos

Fonte – O autor, 2019.

Com isso, através da metodologia educacional STEM, mostraremos neste trabalho
uma proposta da aplicação desta metodologia, no cenário brasileiro. Com foco no ensino
médio regular da rede estadual do Rio de Janeiro.

3 ASPECTOS DE LÓGICA MATEMÁTICA RELEVANTES PARA O DE-

SENVOLVIMENTO DESTA PESQUISA

25

Tradicionalmente nos livros didáticos que trazem o assunto lógica matemática,
em particular, a negação lógica e os conectivos E e OU são apresentados através de
tabelas, diagramas e exploração de linguagem corrente que muitas vezes deixam o aluno
extremamente desinteressado.

Após o conhecimento da metodologia STEM, aﬁm de tornar a implementação desses
conceitos matemáticos no ensino médio mais atrativos fugindo desse ensino tradicional,
onde o aluno pouco interage com o conteúdo trabalhado, a proposta desse capítulo é
apresentar os mesmos conectivos segundo esta metodologia.

Para que esse objetivo fosse alcançado, aborda-se esses conceitos nesse trabalho
através de conteúdos pertencente à eletrônica, a saber, a álgebra booleana e os circuitos
digitais.

Estes dois conteúdos servirão de pano de fundo para justiﬁcar esta proposta de

intervenção no ensino de lógica no ensino médio.

Vamos analisar a abordagem tradicional do tema:

3.1 Sobre a lógica matemática dos conectivos E (∧) e OU (∨): A aboredagem

tradicional

Em geral os livros didáticos abrem esta seção com a deﬁnição de proposição da se-
guinte maneira. (Foram utilizados como referências os autores: (IEZZI, 2013), (DAGHLIAN,
2006) e (ALENCAR, 2011)).

3.1.1 Proposição

Chama-se proposição ou sentença toda oração declarativa que exprime um pensa-
mento que pode ser classiﬁcada como verdadeira ou falsa. Toda proposição deve possuir
sujeito e predicado, ser declarativa, ou seja, não é exclamativa nem interrogativa e possui
somente um valor lógico: verdadeira (V ) ou falsa (F ).

Exemplo 1. Proposição:

1. 3 é maior do que 2.

2. 1 é um número primo.

3. 5 é divisor de 100.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

26

4. O Rio de Janeiro é a capital do Brasil.

Note que todas as orações são declarativas e que as proposições, 1 e 3 possuem

valor lógico verdadeiro enquanto as proposições 2 e 4 possuem valores lógicos falso.

Exemplo 2. Não são proposições:

1. 2 é um número primo?

2. (4 · 5 − 1).

3. Que sorvete gostoso!

A frase 1 é interrogativa, a frase 2 não possui predicado e a frase 3 é exclamativa.

3.1.2 Princípios básicos da logica matemática

1. Principio do terceiro excluído: toda proposição ou é verdadeira ou é falsa, isto é,

veriﬁca-se somente um desses casos e nunca um terceiro.

2. Principio da não contradição: uma proposição não pode ser verdadeira e falsa ao

mesmo tempo.

3.1.3 Proposição simples

Toda proposição que não contém nenhuma outra sentença integrada a ela é deno-
minada proposição simples. Geralmente são designadas por letras minúsculas p, q, r, s, ...,
chamadas letras proposicionais.

Exemplo 3.

p : A matemática é linda.

q : O número 17 é um número primo.

3.1.4 Proposição composta

A proposição composta é formada por duas ou mais proposições simples, através de
símbolos lógicos chamados de conectivos: o conectivo (∧) (lê-se: e), o conectivo (∨) (lê-se:
ou), o conectivo ((cid:89)) (lê-se: ou exclusivo), o conectivo(→) (lê-se; se... então...) e o conectivo
(↔) (lê-se: ...se, e somente se,...). Geralmente é representada por uma letra maiúscula
P, Q, R, ...

Exemplo 4.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

27

P: A matemática é linda e todo quadrado é um retângulo.

Q: 2 > 8 ou

√

16

R: Ou o Flamengo é o melhor time carioca ou o Vasco é campeão.

3.1.5 Tabela-Verdade

Pelo Principio do terceiro excluído, toda proposição ou é verdadeira ou é falsa, isto

é, veriﬁca-se somente um desses casos e nunca um terceiro.

Tabela 1 – Tabela de valores para uma proposição.

p
V
F

Fonte – O autor, 2019.

O valor lógico de qualquer proposição composta depende unicamente dos valores
lógicos das proposicões simples componentes, ﬁcando por eles univocamente determinado.
Então para determinar o valor lógico de uma proposição composta, deve-se recorrer a tabela-
verdade, onde encontram-se todos os possíveis valores lógicos atribuídos às proposições
simples componentes.

Portanto, as atribuições de valores lógicos de uma proposição composta por duas

proposições simples componentes estão denotados na tabela abaixo:

Tabela 2 – Tabela de valores para duas proposições.

p
q
V V
V F
F V
F F

Fonte – O autor, 2019.

No caso de uma proposição composta formada pelas proposições simples com-
ponentes p, q e r, temos as seguinte atribuições de valores lógicos, descritos na tabela
abaixo:

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

28

Tabela 3 – Tabela de valores para três proposições.

p
r
q
V V V
V V F
V F V
V F F
F V V
F V F
F F V
F F F

Fonte – O autor, 2019.

3.1.6 Operações Lógicas Sobre Proposições

3.1.6.1 Negação (∼)

A partir de uma proposição p qualquer, sempre podemos construir outra, denomi-

nada negação de p e indicada com o símbolo ∼ p.

Exemplo 5.

1. p: Quatro é um número múltiplo de dois.

(cid:118) p: Quatro não é um número múltiplo de dois.

2. p: Sete é um número ímpar.

(cid:118) p: Sete é um número par.

A proposição ∼ p possui o valor lógico sempre oposto ao valor lógico de p, ou seja,
quando o valor lógico de p é verdadeiro ∼ p é falso e quando o valor lógico de p é falso
∼ p é verdadeiro.

O que pode ser simpliﬁcado na tabela abaixo, denominada tabela-verdade da

proposição ∼ p.

Tabela 4 – Tabela-verdade ∼ p

p ∼ p
F
V
V
F

Fonte – O autor, 2019.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

29

3.1.6.2 Conjunção (∧)

Unindo duas proposições p e q através do conectivo ∧, obtemos uma nova proposição,
p ∧ q, denominada conjunção das sentenças p e q. A conjunção p ∧ q é verdadeira se as
proposições p e q são ambas verdadeiras, se pelo menos uma proposição for falsa, então
p ∧ q é falsa.

A tabela abaixo nos permite veriﬁcar todas as possibilidades de resultado para a

conjunção p ∧ q. Denominada tabela-verdade da proposição p ∧ q.

Tabela 5 – Tabela-verdade da p ∧ q

p
q
V V
V F
F V
F F

p ∧ q
V
F
F
F

Fonte – O autor, 2019.

Tabela 6 – Exemplo 6.1

Proposição
5 > 4
(3|27)

Valor lógico
Verdadeiro
Verdadeiro
5 > 4 e 3|27(V ) Verdadeiro

p
q
p ∧ q

Fonte – O autor, 2019.

Tabela 7 – Exemplo 6.2

Exemplo 6.

1.

2.

Proposição

p
q

√
Um triângulo equilátero de lado a tem altura a

3
Um triângulo equilátero de lado a tem área a2.
e área a2.

√
p ∧ q Um triângulo de lado a tem altura a

3

2

Valor lógico
2 . Verdadeiro

Falso
falso

Fonte – O autor, 2019.

3.1.6.3 Disjunção (∨)

Unindo duas proposições p e q através do conectivo ∨, obtemos uma nova proposição,
p ∨ q, denominada disjunção das sentenças p e q. A disjunção p ∨ q é verdadeira se pelo

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

30

menos uma das proposições p e q são verdadeiras, se ambas as proposições p e q são falsas,
então p ∨ q é falsa.

A tabela abaixo nos permite veriﬁcar todas as possibilidades de resultado para a

disjunção p ∨ q. Denominada tabela-verdade da proposição p ∨ q.

Tabela 8 – Tabela-verdade da p ∨ q

p
q
V V
V F
F V
F F

p ∨ q
V
V
V
F

Fonte – O autor, 2019.

Tabela 9 – Exemplo 7.1

Exemplo 7.

1.

Valor lógico
Verdadeiro
Verdadeiro
p ∨ q Dois é divisor de quatro ou Sete é um número primo. Verdadeiro

Proposição
Dois é divisor de quatro.
Sete é um número primo.

p
q

Fonte – O autor, 2019.

2.

Tabela 10 – Exemplo 7.2

Proposição
2 + 8 = 13
(−1)6 = −1
2 + 8 = 13 ou (−1)6 = −1

Valor lógico
Falso
Falso
Falso

p
q
p ∨ q

Fonte – O autor, 2019.

3.1.6.4 Disjunção Exclusiva ((cid:89))

Conectando duas proposições p e q através do conectivo, (cid:89) obtemos uma nova
proposição, p (cid:89) q, denominada disjunção exclusiva das sentenças p e q, (lê-se: ou p ou
q, mas não ambas). A disjunção exclusiva p (cid:89) q é verdadeira quando as proposições p e
q possuem valores lógicos opostos e falsa se ambas as proposições tiverem valor lógicos
iguais.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

31

Exemplo 8.

Consideremos as duas proposições compostas a seguir:

P : Jeﬀerson é marinheiro ou professor.

Q: Um número natural não nulo é par ou ímpar.

Note que a proposição P , composta pelas proposições: “Jeﬀerson é marinheiro” e
“Jeﬀerson é professor”, pode assumir valor verdadeiro se pelo menos uma das proposições
forem verdadeiras ou se ambas forem verdadeiras. Mas, a proposição Q, nos permite inferir
que apenas uma das proposições pode assumir o valor verdadeiro, ou seja, ou “um número
natural não nulo é par” ou “um número natural não nulo é ímpa”, mas não ambos.

A tabela abaixo nos permite veriﬁcar todas as possibilidades de resultado para a

disjunção exclusiva p (cid:89) q. Denominada tabela-verdade da proposição p (cid:89) q.

Tabela 11 – Tabela-verdade da p (cid:89) q

p
q
V V
V F
F V
F F

p (cid:89) q
F
V
V
F

Fonte – O autor, 2019.

3.1.7 Construção de Tabelas-Verdade

3.1.7.1 Tabela-Verdade de uma proposição composta

Podemos combinar as proposições simples p, q, r, ..., com os conectivos lógicos:
negação (∼), conjunção (∧), disjunção (∨) e disjunção exclusiva ((cid:89)), e construir proposições
compostas.

Com o uso das tabelas-verdade das operações fundamentais, podemos construir as
tabelas-verdade das proposições compostas para determinar exatamente o seu valor lógico,
verdadeira(V) ou falsa(F).

3.1.7.2 Número de linhas de uma Tabela-Verdade

O enunciado e a demonstração do teorema abaixo pode ser encontrados em vários

textos, destacamos o de (ALENCAR, 2011).

Teorema 1 (Número de linhas de uma Tabela-Verdade). A tabela-verdade de uma propo-
sição composta com n proposições simples componentes contém 2n linhas.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

32

Demonstração. Com efeito, toda proposição simples tem dois valores lógicos: V e F, que
se excluem. Portanto, para uma proposição composta P(p1, p2, ..., pn) com n proposições
simples componentes p1, p2, ..., pn há tantas possibilidades de atribuições dos valores lógicos
V e F a tais componentes quantos são os arranjos com repetição n a n dos dois elementos
V e F, isto é, A2,n = 2n, segundo ensina a Análise Combinatória.

3.1.7.3 Construção da Tabela-Verdade

Para construção da tabela-verdade de uma proposição composta, devemos seguir

os seguintes passos:

1. Determinar o número de linhas da tabela-verdade;

2. Formar o par de colunas correspondente as proposições simples componentes;

3. Determinar a forma das proposições que ocorrem na composição;

4. Aplicar as operações lógicas que a composição exige.

Exemplo 9. Construir a tabela-verdade das proposições:

1. ∼ (∼ p ∨ q)

Tabela 12 – Tabela-verdade da proposição ∼ (∼ p ∨ q)

q ∼ p ∼ p ∨ q ∼ (∼ p ∨ q)

p
F
V V
V F
F
F V V
V
F F

V
F
V
V

F
V
F
F

Fonte – O autor, 2019.

2. p ∨ (∼ p ∧ q)

Tabela 13 – Tabela-verdade da proposição p ∨ (∼ p ∧ q)

q ∼ p ∼ p ∧ q

p
F
V V
V F
F
F V V
V
F F

p ∨ (∼ p ∧ q)
V
V
V
F

F
F
V
F

Fonte – O autor, 2019.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

33

3. (p ∨ q) ∧ (∼ q ∨ r)

Tabela 14 – Tabela-verdade da proposição (p ∨ q) ∧ (∼ q ∨ r)

r ∼ q
p
q
F
V V V
F
V V F
V F V V
V
V F F
F V V
F
F
F V F
F F V V
V
F F F

p ∨ q ∼ q ∨ r

V
V
V
V
V
V
F
F

V
F
V
V
V
F
V
V

(p ∨ q) ∧ (∼ q ∨ r)
V
F
V
V
V
F
F
F

Fonte – O autor, 2019.

3.1.8 Tautologia, Proposição logicamente falsa (Contradição) e Contingência

3.1.8.1 Tautologia

Chama-se tautologia toda a proposição composta cuja o valor lógico é sempre

verdadeiro.

Exemplo 10. É tautologia a seguinte proposição:

Tabela 15 – Tabela-verdade da proposição p ∨ (q ∨ ∼ p)

q ∼ p
p
F
V V
F
V F
F V V
V
F F

q ∨ ∼ p
V
F
V
V

p ∨ (q ∨ ∼ p)
V
V
V
V

Fonte – O autor, 2019.

3.1.8.2 Proposição logicamente falsa (Contradição)

Chama-se contradição toda a proposição composta cuja última coluna da sua

tabela-verdade encerra somente a letra F (falsidade).

Exemplo 11. É contradição a seguinte proposição:

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

34

Tabela 16 – Tabela-verdade da proposição (p ∧ q) ∧ ∼ (p ∨ q)

p
q
V V
V F
F V
F F

p ∧ q
V
F
F
F

p ∨ q ∼ (p ∨ q)

V
V
V
F

F
F
F
V

(p ∧ q) ∧ ∼ (p ∨ q)
F
F
F
F

Fonte – O autor, 2019.

3.1.8.3 Contingência

Chama-se contingência todo a proposição composta em que a última coluna da sua

tabela-verdade ﬁguram valores lógicos distintos, ou seja, V e F, pelo menos uma vez.

Exemplo 12. É contingência a seguinte proposição:

Tabela 17 – Tabela-verdade da proposição p ∨ (∼ p ∧ ∼ q)

q ∼ p ∼ q ∼ p ∧ ∼ q

p
F
V V
V F
F
F V V
V
F F

F
V
F
V

F
F
F
V

p ∨ (∼ p ∧ ∼ q)
V
V
F
V

Fonte – O autor, 2019.

3.1.9 Equivalência Lógica

Quando duas proposições p e q dadas possuem tabelas-verdade iguais, dizemos que
as proposições são equivalente ou logicamente equivalentes, ou seja, quando p e q têm o
mesmo valor lógico.

Indica-se que a proposição p é logicamente equivalente a proposição q com a notação:

p ⇐⇒ q.

Exempliﬁcação

A proposições p e ∼∼ p são equivalentes, ou seja, p ⇐⇒∼∼ p (Regra da dupla

negação). Como podemos ver na Tabela 18.

Tabela 18 – Dupla negação

p ∼ p ∼∼ p
V
F

V
F

F
V

Fonte – O autor, 2019.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

35

Logo, a dupla negação equivale à aﬁrmação.

3.1.10 Álgebra das Proposições

3.1.10.1 Propriedades da Conjunção

Sendo p, q e r proposições simples e sejam s e u proposições também simples em
que seus valores lógicos são, respectivamente, verdade (V) ou falsa (F), demonstra-se
propriedades:

(a) Idempotente: p ∧ p ⇐⇒ p

Demonstração. Com efeito, são idênticas as tabelas-verdade das proposições p ∧ p e
p, ou seja, a bicondicional p ∧ p ←→ p é tautológica:

Tabela 19 – Prova Idempotente da conjunção

p
V
F

p ∧ p
V
F

p ∧ p ←→ p
V
V

Fonte – O autor, 2019.

(b) Comutatividade: p ∧ q ⇐⇒ q ∧ p

Demonstração. Com efeito, são idênticas as tabelas-verdade das proposições p ∧ q e
q ∧ p, ou seja, a bicondicional p ∧ q ←→ q ∧ p é tautológica:

Tabela 20 – Prova Comutatividade da conjunção

p
q
V V
V F
F V
F F

p ∧ q
V
F
F
F

q ∧ p
V
F
F
F

p ∧ q ←→ q ∧ p
V
V
V
V

Fonte – O autor, 2019.

(c) Associatividade: (p ∧ q) ∧ r ⇐⇒ p ∧ (q ∧ r)

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

36

Demonstração. Com efeito, são idênticas as tabelas-verdade das proposições (p∧q)∧r
e p ∧ (q ∧ r), ou seja, a bicondicional (p ∧ q) ∧ r ←→ p ∧ (q ∧ r) é tautológica:

Tabela 21 – Prova Associatividade da conjunção

p
r
q
V V V
V V F
V F V
V F F
F V V
F V F
F F V
F F F

p ∧ q
V
V
F
F
F
F
F
F

(p ∧ q) ∧ r
V
F
F
F
F
F
F
F

q ∧ r
V
F
F
F
V
F
F
F

p ∧ (q ∧ r)
V
F
F
F
F
F
F
F

(p ∧ q) ∧ r ←→ p ∧ (q ∧ r)
V
V
V
V
V
V
V
V

Fonte – O autor, 2019.

(d) Identidade: p ∧ s ⇐⇒ p e p ∧ u ⇐⇒ u

Demonstração. Com efeito, são idênticas as tabelas-verdade das proposições p ∧ s e
p p ∧ u e u, ou seja, a bicondicional p ∧ s ←→ p e p ∧ u ←→ u é tautológica:

Tabela 22 – Prova Identidade da conjunção

p
s
V V F
F V F

u p ∧ s

p ∧ u p ∧ s ←→ p

V
F

F
F

V
V

Fonte – O autor, 2019.

p ∧ u ←→ u
V
V

3.1.10.2 Propriedades da Disjunção

Sendo p, q e r proposições simples e sejam s e u proposições também simples em

que seus valores lógicos são, respectivamente, verdade(V) ou falsa(F).

(a) Idempotente: p ∨ p ⇐⇒ p

Demonstração. Com efeito, são idênticas as tabelas-verdade das proposições p ∨ p e
p, ou seja, a bicondicional p ∨ p ←→ p é tautológica:

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

37

Tabela 23 – Prova Idempotente da disjunção

p
V
F

p ∨ p
V
F

p ∨ p ←→ p
V
V

Fonte – O autor, 2019.

(b) Comutativa: p ∨ q ⇐⇒ q ∨ p

Demonstração. Com efeito, são idênticas as tabelas-verdade das proposições p ∨ q e
q ∨ p, ou seja, a bicondicional p ∨ q ←→ q ∨ p é tautológica:

Tabela 24 – Prova Comutativa da disjunção

p
q
V V
V F
F V
F F

p ∨ q
V
V
V
F

q ∨ p
V
V
V
F

p ∨ q ←→ q ∨ p
V
V
V
V

Fonte – O autor, 2019.

(c) Associatividade: (p ∨ q) ∨ r ⇐⇒ p ∨ (q ∨ r)

Demonstração. Com efeito, são idênticas as tabelas-verdade das proposições (p∨q)∨r
e p ∨ (q ∨ r), ou seja, a bicondicional (p ∨ q) ∨ r ←→ p ∨ (q ∨ r) é tautológica:

Tabela 25 – Prova Associatividade da disjunção

r
q
p
V V V
V V F
V F V
V F F
F V V
F V F
F F V
F F F

p ∨ q
V
V
V
V
V
V
F
F

(p ∨ q) ∨ r
V
V
V
V
V
V
V
F

q ∨ r
V
V
V
F
V
V
V
F

p ∨ (q ∨ r)
V
V
V
V
V
V
V
F

(p ∨ q) ∨ r ←→ p ∨ (q ∨ r)
V
V
V
V
V
V
V
V

Fonte – O autor, 2019.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

38

(d) Identidade: p ∨ s ⇐⇒ s e p ∨ u ⇐⇒ p

Demonstração. Com efeito, são idênticas as tabelas-verdade das proposições p ∨ s e
s p ∨ u e u, ou seja, a bicondicional p ∨ s ←→ s e p ∨ u ←→ p é tautológica:

Tabela 26 – Prova Identidade da disjunção

s
p
V V F
F V F

u p ∨ s

p ∨ u p ∨ s ←→ s

V
V

V
F

V
V

Fonte – O autor, 2019.

p ∨ u ←→ p
V
V

3.1.10.3 Propriedades da Conjunção e da Disjunção

Dadas p, q e r proposições simples quaisquer temos as seguintes propriedades:

(a) Distributiva:

(i) p ∧ (q ∨ r) ⇐⇒ (p ∧ q) ∨ (p ∧ r)

Demonstração. É possível identiﬁcar que as tabelas-verdade das proposições P :
p ∧ (q ∨ r) e Q : (p ∧ q) ∨ (p ∧ r) são idênticas, logo a bicondicional p ∧ (q ∨ r) ←→
(p ∧ q) ∨ (p ∧ r) é uma tautologia.

Tabela 27 – Prova Distributiva (p ∧ (q ∨ r) ⇐⇒ (p ∧ q) ∨ (p ∧ r))

r
q
p
V V V
V V F
V F V
V F F
F V V
F V F
F F V
F F F

q ∨ r
V
V
V
F
V
V
V
F

p ∧ (q ∨ r)
V
V
V
F
F
F
F
F

p ∧ q
V
V
F
F
F
F
F
F

p ∧ r
V
F
V
F
F
F
F
F

(p ∧ q) ∨ (p ∧ r) P ←→ Q

V
V
V
F
F
F
F
F

V
V
V
V
V
V
V
V

Fonte – O autor, 2019.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

39

(ii) p ∨ (q ∧ r) ⇐⇒ (p ∨ q) ∧ (p ∨ r)

Demonstração. Analogamente, é possível identiﬁcar que as tabelas-verdade das
proposições R : p ∨ (q ∧ r) e S : (p ∨ q) ∧ (p ∨ r) são idênticas, logo a bicondicional
p ∨ (q ∧ r) ←→ (p ∨ q) ∧ (p ∨ r) é uma tautologia.

Tabela 28 – Prova Distributiva (p ∨ (q ∧ r) ⇐⇒ (p ∨ q) ∧ (p ∨ r))

p
r
q
V V V
V V F
V F V
V F F
F V V
F V F
F F V
F F F

q ∧ r
V
F
F
F
V
F
F
F

p ∨ (q ∧ r)
V
V
V
V
V
F
F
F

p ∨ q
V
V
V
V
V
V
F
F

p ∨ r
V
V
V
V
V
F
V
F

(p ∨ q) ∧ (p ∨ r) R ←→ S

V
V
V
V
V
F
F
F

V
V
V
V
V
V
V
V

Fonte – O autor, 2019.

(b) Absorção:

(i) p ∧ (p ∨ q) ⇐⇒ p

Demonstração. É possível identiﬁcar que as tabelas-verdade das proposições p∧(p∨q)
e p são idênticas, logo a bicondicional p ∧ (p ∨ q) ←→ p é uma tautologia.

Tabela 29 – Prova Absorção p ∧ (p ∨ q) ⇐⇒ p

p
q
V V
V F
F V
F F

p ∨ q
V
V
V
F

p ∧ (p ∨ q)
V
V
F
F

p ∧ (p ∨ q) ←→ p
V
V
V
V

Fonte – O autor, 2019.

(ii) p ∨ (p ∧ q) ⇐⇒ p

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

40

Demonstração. Analogamente, é possível identiﬁcar que as tabelas-verdade das
proposições p ∨ (p ∧ q) e p são idênticas, logo a bicondicional p ∨ (p ∧ q) ←→ p é
uma tautologia.

Tabela 30 – Prova Absorção (p ∨ (p ∧ q) ⇐⇒ p)

q
p
V V
V F
F V
F F

p ∧ q
V
F
F
F

p ∨ (p ∧ q)
V
V
F
F

p ∨ (p ∧ q) ←→ p
V
V
V
V

Fonte – O autor, 2019.

(c) Regras de DE MORGAN:

(i) ∼ (p ∧ q) ⇐⇒ ∼ p ∨ ∼ q

Demonstração. É possível identiﬁcar que as tabelas-verdade das proposições ∼ (p∧q)
e ∼ p ∨ ∼ q são idênticas, logo a bicondicional ∼ (p ∧ q) ←→ ∼ p ∨ ∼ q é uma
tautologia.

q
p
V V
V F
F V
F F

Tabela 31 – Prova DE MORGAN (∼ (p ∧ q) ⇐⇒ ∼ p ∨ ∼ q)

p ∧ q ∼ (p ∧ q) ∼ p ∼ q ∼ p ∨ ∼ q ∼ (p ∧ q) ←→ ∼ p ∨ ∼ q

V
F
F
F

F
V
V
V

F
F
V
V

F
V
F
V

F
V
V
V

Fonte – O autor, 2019.

V
V
V
V

Exemplo 13.

P : “Pedro é alto e Camila é baixa.”

∼ P : “Pedro não é alto ou Camila é alta.”

(ii) ∼ (p ∨ q) ⇐⇒ ∼ p ∧ ∼ q

Demonstração. Analogamente, é possível identiﬁcar que as tabelas-verdade das
proposições ∼ (p ∨ q) e ∼ p ∧ ∼ q são idênticas, logo a bicondicional ∼ (p ∨ q) ←→
∼ p ∧ ∼ q é uma tautologia.

Capítulo 3. Aspectos de Lógica Matemática relevantes para o desenvolvimento desta pesquisa

41

p
q
V V
V F
F V
F F

Tabela 32 – Prova DE MORGAN (∼ (p ∨ q) ⇐⇒ ∼ p ∧ ∼ q)

p ∨ q ∼ (p ∨ q) ∼ p ∼ q ∼ p ∧ ∼ q ∼ (p ∨ q) ←→ ∼ p ∧ ∼ q

V
V
V
F

F
F
F
V

F
F
V
V

F
V
F
V

F
F
F
V

Fonte – O autor, 2019.

V
V
V
V

Estas regras de DE MORGAM nos diz que a negação transforma a conjunção em disjunção
e a disjunção em conjunção.

Exemplo 14.

Q: “Felipe é médico ou engenheiro.”

∼ Q: “Felipe não é medico e não é engenheiro.”

4 ÁLGEBRA DE BOOLE E CIRCUITOS DIGITAIS

42

4.1 História de Boole

Atualmente o modo em que vivemos depende da matemática. Nossos computadores,
celulares, TVs, transporte, aparelhos domésticos tudo que utiliza circuitos elétricos depende
de um conceito chamado Lógica booleana. A Lógica booleana é à base da computação mo-
derna. George Boole foi o criador desse conceito determinante para evolução da tecnologia
e informação moderna. Boole foi uma das primeiras pessoas a propor que nosso jeito de
pensar é utilizando à lógica.

Nasceu em 2 de novembro de 1815 em Lincoln, Inglaterra, onde começou a frequentar
a escola. Foi de seu pai, Jhon Boole, um sapateiro de proﬁssão que mata sua sede de
conhecimento estudando ciências, matemática, literatura e uma paixão por astronomia,
que Boole herdou o apetite por conhecimento. Enquanto seu pai lutava para manter o
negócio vivo dava total apoio a George para manter seus estudos. Quando começou a se
interessar por idiomas, Boole aprendeu mais de cinco línguas e aos catorze anos traduziu
o poema “Ode a Primavera” para o inglês, seu pai, orgulhoso, enviou para o jornal local
o que causou muita desconﬁança na época. Boole acreditava que esse conhecimento o
ajudaria a melhorar sua condição social.

Boole não teve formação acadêmica, mas aos 16 anos já era um professor assistente.
Aos 20 anos, ainda quando trabalhava como professor de escola, Boole escreveu mais de 50
artigos sobre álgebra. Um deles ganhou uma medalha de ouro da Royal Society por uma
publicação na Trasactions of the Royal Society sobre métodos algébricos para a solução de
equações diferenciais e a partir de então o seu trabalho começou a ser conhecido.

Seu primeiro trabalho em matemática teve como base os estudos de Laplace e
Lagrange sendo encorajado por Duncan Gregory que estava em Cambridge. Boole não
pode aceitar o conselho de Duncan para frequentar cursos em Cambridge, pois precisou
cuidar de seus pais, mas ele começou a fazer publicações na recém fundada Cambridge
Mathematical Journal.

Tornou-se amigo de De Morgan e interessou-se por uma controvérsia sobre lógica
que o ﬁlósofo escocês Sir William Hamilton (1788-1856) tinha iniciado com De Morgan. O
resultado foi que Boole em 1847 publicou uma obra curta chamada The Mathematical
Analysis Logic, um pequeno livro que marcou época.

Em 1849 se candidatou e ganhou a cadeira de matemática no Queens College em
Cork, com as indicações dos principais matemáticos da época, já que não tinha formação
acadêmica. Onde passou o resto de sua vida ensinando.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

43

Publicou, em 1854, An investigation into the Laws of Thought (As Leis do Pensa-
mento) onde deﬁniu as teorias matemáticas da lógica e da probabilidade estabelecendo ao
mesmo tempo a lógica formal e uma nova álgebra. Boole viu a lógica de um modo novo
e chegou a uma álgebra mais simples. Ele fez uma analogia entre os símbolos algébricos
e os que representavam a lógica. E isso deu inicio a álgebra da lógica conhecida como
Álgebra Booleana, que levou 80 anos para ser aplicada. Em 1937, Claude Shannon, então
estudante no MIT - Boston, USA - estabeleceu a relação entre a Álgebra de Boole e os
circuitos eletrônicos.

Boole teve muitos outros trabalhos publicados, em 1859 um Tratado em Equações
Diferenciais, em 1860 um Tratado em Cálculo de Diferenças Finitas, além de mais de 50
documentos sobre as propriedades básicas dos números.

No seu trabalho Boole foi reconhecido como gênio. Ele recebeu títulos das Univer-
sidades de Dublin e Oxford e foi eleito Fellow of Royal Society em 1857. Mas Boole teve
uma carreira curta, pois começou tarde e terminou com sua morte aos 49 anos.

4.2 Elementos da Álgebra de Boole

Como visto em 4.1, a Álgebra Booleana foi apresentada pelo matemático inglês
George Boole, através da obra An investigation into the Laws of Thought, em que trata-se
de um sistema matemático de análise lógica.

Somente em 1937, o engenheiro americano Claude Elwood Shannon utilizou a
teoria da álgebra de Boole para a solução de problemas de circuitos de telefonia com relés.

As variáveis Booleanas, representada por letras, só podem assumir dois valores,
cada variável pode assumir um único dentre os dois valores possíveis; 0 e 1. Esses valores
podem representar condições associadas com verdadeiro e falso, aberto e fechado, ligado e
desligado, etc. Podemos determinar a relação de 0 para falso e 1 para verdadeiro, 0 para
aberto e 1 para fechado e assim por diante.

4.2.1 Operações Básicas da Álgebra Booleana

Existe três operações básicas na álgebra Booleana; operador E, operador OU e

complementação.

4.2.1.1 Operador E

A operação E, também denominada de multiplicação lógica, resulta em 0 se pelo
menos uma de suas variáveis de entrada for 0 e terá resultado igual a 1 se, e somente se,
todas as entradas valerem 1. Indicamos a operação a E b por a · b.

A tabela-verdade representa o comportamento da expressão a · b.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

44

Tabela 33 – Operador E

a
0
0
1
1

b
0
1
0
1

a · b
0
0
0
1

Fonte – O autor, 2019.

4.2.1.2 Operador OU

Pela operação OU, também denominada de adição lógica, assumirá o valor 0 quando
todas as variáveis de entrada for 0 e quando pelo menos uma das variáveis de entrada for
1 resultará em 1. Indicamos a operação a OU b por a + b.

A tabela-verdade representa o comportamento da expressção a + b.

Tabela 34 – Operador OU

a
0
0
1
1

b
0
1
0
1

a + b
0
1
1
1

Fonte – O autor, 2019.

4.2.1.3 Complementação

A operação complementação, também chamada de inversão ou negação, executa a
inversão do valor ao qual a variável apresenta. Já que uma variável Booleana pode assumir
somente um valor dos dois valores, ou seja, será 1 se a variável for 0 e resultará em 0 se a
variável for 1. Indicamos a operação complementar de a por ¯a ou a0.

A tabela-verdade representa o comportamento da operação ¯a.

Tabela 35 – Operador Complementar (Negação)

a
0
1

¯a
1
0

Fonte – O autor, 2019.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

45

4.2.2 Deﬁnição, Postulados e Propriedades da Álgebra de Boole

4.2.2.1 Deﬁnição da Álgebra de Booleana

Deﬁnição 1. Uma álgebra de Boole é um conjunto B no qual estão deﬁnidas duas
operações binárias, + ( operador OU) e · (operador E), e uma uma operação unária, ¯
(complementação), e que contém dois elementos distintos, 0 e 1. Tais que os seguintes
propriedades são válidas, quaisquer que sejam a, b e c ∈ B.

(P1)

(P2)

(P3)

(P4)

(P5)

(P6)

(P7)

(P8)

(P9)

(P10)

a + b ∈ B

a · b ∈ B
a + b = b + a
a · b = b · a
a + (b · c) = (a + b) · (a + c)
a · (b + c) = (a · b) + (a · c)
a + 0 = a
a.1 = a
a + ¯a = 1
a · ¯a = 0

Comutatividade da Soma

Comutatividade da Multiplicação

Distributiva da Soma

Distributiva da Multiplicação

Elemento Neutro da Soma

Elemento Neutro da Multiplicação

Complemento da Soma

Complemento da Multiplicação

4.2.2.2 Postulados

Sendo B = {0, 1} e a representação binárias + e · em B por a + b e a · b. Podemos

representar as operações pelos seguintes postulados:

1. Postulado da complementação

Se a = 0, então ¯a = 1 e

Se a = 1, então ¯a = 0

2. Postulado da adição

(1) 0 + 0 = 0

(2) 0 + 1 = 1

(3) 1 + 0 = 1

(4) 1 + 1 = 1

Capítulo 4. Álgebra de Boole e Circuitos Digitais

46

3. Postulado da multiplicação

(1) 0 · 0 = 0

(2) 0 · 1 = 0

(3) 1 · 0 = 0

(4) 1 · 1 = 1

Através desses postulados podemos provar as propriedades descritas acima veriﬁ-

cando todos os casos possíveis.

4.2.2.3 Propriedade Dual ou Princípio da Dualidade

Toda propriedade na álgebra Booleana apresenta sua propriedade dual como parte

da deﬁnição, em que representa a permutação de + com · e 0 com 1.

Exemplo 15.

1. X = a · b + c · d, então a expressão dual de X é Y = (a + b) · (c + d)

2. Se a + 0 = a, então a P8 (elemento neutro da multiplicação) a · 1 = a é a dual de P7

(elemento neutro da soma).

Logo, toda vez que uma propriedade da álgebra de Boole é demonstrada, cada
passo na demonstração pode ser substituído pelo seu dual. Então, uma vez demonstrada
uma propriedade, sua propriedade dual também é válida.

4.2.2.4 Prova das Propriedades Utilizando a Tabela-Verdade

As propriedades serão provadas veriﬁcando todos os casos possíveis de acordo com
os postulado visto em 4.2.2.1. Será utilizada as tabelas-verdade para fazer a veriﬁcação
dessas propriedades.

(1) Comutativa

P 3 : a + b = b + a

P 4 : a · b = b · a

Na construção da tabela-verdade 36 veriﬁca-se que as colunas a + b e b + a são
equivalentes, logo ﬁca provado para P 3 e as colunas a · b e b · a também são equivalentes e,
portanto, ﬁca provado para P 4.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

47

Tabela 36 – Prova da propriedade booleana comutatividade.

a
0
0
1
1

b
0
1
0
1

a + b
0
1
1
1

b + a
0
1
1
1

a · b
0
0
0
1

b · a
0
0
0
1

Fonte – O autor, 2019.

(2) Distributiva

P 5 : a + (b · c) = (a + b) · (a + c)

P 6 : a · (a + b) = (a · b) + (a · c)

Nota-se que as colunas a + (b · c) e (a + b) · (a + c) são iguais, portanto a propriedade

é válida pela Tabela 37.

Tabela 37 – Prova da propriedade booleana distributiva a + (b · c) = (a + b) · (a + c).

a
0
0
0
0
1
1
1
1

b
0
0
1
1
0
0
1
1

c
0
1
0
1
0
1
0
1

b · c
0
0
0
1
0
0
0
1

a + (b · c)
0
0
0
1
1
1
1
1

a + b
0
0
1
1
1
1
1
1

a + c
0
1
0
1
1
1
1
1

(a + b) · (a + c)
0
0
0
1
1
1
1
1

Fonte – O autor, 2019.

A distributiva da multiplicação (P 6) é dual da (P 5) logo, pela propriedade da

dualidade, o seu dual também está válido.

(3) Elemento Neutro (Identidade)

Prova feita através da tabela-verdade 38, pois as colunas a e a + 0 são equivalentes

para P 7 e a e a · 1 são equivalentes para P 8.

P 7 : a + 0 = a

P 8 : a.1 = a

Capítulo 4. Álgebra de Boole e Circuitos Digitais

48

Tabela 38 – Prova da propriedade elemento neutro.

a
0
1

a + 0
0
1

a · 1
0
1

Fonte – O autor, 2019.

(4) Complemento

Prova feita através da tabela-verdade. Tabela 39 para P 9 e Tabela 40 para P 10.

(P9) a + ¯a = 1

(P10) a · ¯a = 0

Tabela 39 – Prova da propriedade complemento.

a
0
1

¯a
1
0

a + ¯a
1
1

Fonte – O autor, 2019.

Tabela 40 – Prova da propriedade complemento.

a
0
1

¯a
1
0

a · ¯a
0
0

Fonte – O autor, 2019.

4.2.2.5 Teoremas

Existem outras propriedades que são validas na álgebra Booleana, onde denotaremos
na forma de teoremas. Podemos provar esses teoremas usando as propriedades apresentadas
na deﬁnição.

(1) Idempotência.

T1.a. a + a = a

T1.b. a · a = a

Capítulo 4. Álgebra de Boole e Circuitos Digitais

49

P8

P9

P5

P10

P7

P8

P9

P5

P8

P9

Prova

a + a = (a + a) · 1

= (a + a) · (a + ¯a)
= a + (a · ¯a)
= a + 0
= a
Portanto, a + a = a

Pelo Princípio da Dualidade, ﬁca provado que:

a · a = a

(2) Elemento Unitário.

T2.a. a + 1 = 1

T2.b. a · 0 = 0

Prova

a + 1 = (a + 1) · 1

= (a + 1) · (a + ¯a)
= a + (1 · ¯a)
= a + ¯a
= 1

Logo, a + 1 = 1

Pelo Princípio da Dualidade, ﬁca provado que:

a · 0 = 0

(3) Lei da Absorção.

T3.a. a + (a · b) = a

T3.b. a · (a + b) = a

Capítulo 4. Álgebra de Boole e Circuitos Digitais

50

P8

P6

P3

T2.a

P8

P5

P9

P8

Prova

a + (a · b) = (a · 1) + (a · b)

= a · (1 + b)
= a · (b + 1)
= a · 1
= a
Portanto, a + (a · b) = a

Pelo Princípio da Dualidade, ﬁca provado que:

a · (a + b) = a

(4) Eliminação.

T4.a. a + (¯a · b) = a + b

T4.b. a · (¯a + b) = a · b

Prova

a + (¯a · b) = (a + ¯a) · (a + b)

= 1 · (a + b)
= (a + b)
Logo, a + (¯a · b) = a + b

E pela Dualidade, temos:

a · (¯a + b) = a · b

(5) Associativa.

T5.a. (a + b) + c = a + (b + c)

T5.b. a · (b · c) = (a · b) · c

Capítulo 4. Álgebra de Boole e Circuitos Digitais

51

Prova

(a + b) + c = ((a + b) + c) · (a + ¯a)

= (((a + b) + c) · a) + (((a + b) + c) · ¯a)
= (a · ((a + b) + c)) + (¯a · ((a + b) + c))
= ((a · (a + b)) + (a · c)) + ((¯a · (a + b)) + (¯a · c))
= (a + (a · c)) + (((¯a · a) + (¯a · b)) + (¯a · c))
= a + ((0 + (¯a · b)) + (¯a · c))
= a + ((¯a · b) + (¯a · c))
= a + (¯a · (b + c))
= a + (b + c)
Então, (a + b) + c = a + (b + c)

P8 e P9

P6

P4

P6

T3.b e P6

T3.a, P4 e P10

P3 e P7

P6

T4.a

Pelo Princípio da Dualidade, ﬁca provado que:

a · (b · c) = (a · b) · c
(6) T6. ¯¯a = a.

Prova

Supondo que ¯a seja o complemento de a, então temos que:

a + ¯a = 1
a · ¯a = 0

Estas equações mostram que a é o complemento de ¯a, logo a = ¯¯a.

(7) T7. a · b + a · ¯b = a

Prova

a · b + a · ¯b = a · (b + ¯b)

= a · 1
= a
Portanto, a · b + a · ¯b = a

P6

P9

P8

(8) T8. ¯0 = 1 e ¯1 = 0

Capítulo 4. Álgebra de Boole e Circuitos Digitais

52

Prova

0 + 1 = 0
Portanto, ¯0 = 1

P3 e P7

P9

E pelo Princípio da Dualidade ¯1 = 0 é válida.

(9) De Morgan

T9.a. (a · b) = a + b

T9.b. (a + b) = a · b

Prova

Temos que:

(a + b) + (a · b) = (a + b + a) · (a + b + b)

= (1 + b) · (1 + a)
= 1 · 1
= 1

e

(a + b) · (a · b) = (a · b · a) + (a · b · b)

= 0 · b + 0 · a
= 0 + 0

= 0

P5

P9

T2.a

P6

P10

T2.b

Logo, (a · b) é o complemento de (a + b), ou seja, (a · b) = a + b. E pelo princípio

da dualidade, temos que (a + b) = a · b.

(10) T10. a · b + ¯a · c + b · c = a · b + ¯a · c.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

53

Prova

a · b + ¯a · c + b · c = a · b + ¯a · c + b · c · (a + ¯a)

= a · b + ¯a · c + a · b · c + ¯a · b · c
= a · b · (1 + c) + ¯a · c · (1 + b)
= a · b + ¯a · c
Logo, a · b + ¯a · c + b · c = a · b + ¯a · c

(11) T11. (a + b) · (¯a + c) · (b + c) = a · c + ¯a · b.

Prova

(a + b) · (¯a + c) · (b + c) = (a · ¯a + a · c + ¯a · b + b · c) · (b + c)

= 0 + a · b · c + ¯a · b · b + b · b · c + a · c · c + ¯a · b · c + b · c · c
= a · b · c + ¯a · b + b · c + a · c + ¯a · b · c + b · c
= a · b · c + ¯a · b + b · c + a · c + ¯a · b · c
= a · c · (1 + b) + ¯a · b · (1 + c) + b · c
= a · c + ¯a · b + b · c
= a · c + ¯a · b
Portanto, (a + b) · (¯a + c) · (b + c) = a · c + ¯a · b

(12) T12. (a + b) · (¯a + c) = a · c + ¯a · b.

Prova

(a + b) · (¯a + c) = (a · ¯a + a · c + ¯a · b + b · c)

= a · c + ¯a · b + b · c
= a · c + ¯a · b + b · c · (a + ¯a)
= a · c + ¯a · b + a · b · c + ¯a · ¯b · c
= ¯a · b · (1 + c) + a · c · (1 + b)
= ¯a · b + a · c
Então, (a + b) · (¯a + c) = a · c + ¯a · b

Essas propriedades e teoremas são de grande utilidade na simpliﬁcação de expressões
Booleanas e ainda no desenvolvimento de circuitos digitais que veremos em tópicos
posteriores.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

54

4.2.3 Expressões Booleanas

Deﬁnição 2. Uma expressão booleana é qualquer agrupamento ﬁnito de n variáveis
booleanas. Se a e b, são expressões booleanas, então (a + b), (a · b) e ¯a também são.

Quando em uma expressão booleana aparecem as operações ·, + e¯é necessário
seguir as ordem de precedência, onde a multiplicação lógica tem precedência sobre a adição
lógica e¯tem precedência sobre + ou ·. Na multiplicação lógica o símbolo · pode ser omitido
e utilizar a justaposição, ou seja a · b será representado por ab.

Temos que, a(b + c), ab, (ab + a¯c)b e ¯ab¯c são exemplos de expressões booleanas.

4.2.4 Funções Booleanas

Deﬁnição 3. Uma função booleana é uma função f tal que f : {0, 1} → {0, 1} para
algum inteiro n ≥ 1. A notação {0, 1}n representa o conjunto de todas as n-uplas formadas
por 0 e 1. Uma função booleana, então, associa um valor 0 ou 1 a cada uma dessas n-uplas.

As operações booleanas + e · são representadas por uma tabela-verdade que
descreve uma função booleana f com n = 2 e a operação¯descreve uma função booleana
com n = 1.

Qualquer expressão booleana deﬁne uma única função booleana.

4.2.5 Tabela-Verdede Extraida de Expressões Booleanas

Dada uma expressão booleana que deﬁne uma função booleana qualquer, pode-
se avaliar o comportamento dessas funções utilizando a tabela-verdade, onde descreve
um mapa com todas as possibilidades possíveis de uma dada combinação de variáveis
booleanas.

O procedimento para obter a tabela-verdade de uma expressão booleana, segue os

seguintes passos:

1. Construir o quadro de possibilidades e criar colunas para as variáveis de entrada

listando todos os resultados possíveis.

2. Construir uma coluna para cada variável de entrada que apareça complementada na

expressão e anotar os resultados.

3. Avaliar a expressão de acordo com a ordem de precedência descrita em 4.2.3.

4. Criar uma coluna para o resultado ﬁnal e preenche-la com os resultados ﬁnais.

Exemplo 16. A expressão booleana a + bc deﬁne a função booleana f (a, b, c) descrita na
Tabela 41.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

55

Tabela 41 – Tabela-verdade para função booleana a + bc

a
0
0
0
0
1
1
1
1

b
0
0
1
1
0
0
1
1

c
0
1
0
1
0
1
0
1

b
1
1
0
0
1
1
0
0

bc
0
1
0
0
0
1
0
0

a + bc
0
1
0
0
1
1
1
1

Fonte – O autor, 2019.

A função booleana do exemplo 16 também pode ser representada pela Tabela 42.

Tabela 42 – Outra repreentação para tabela-verdade da função booleana a + bc

a
0
0
0
0
1
1
1
1

b
0
0
1
1
0
0
1
1

c
0
1
0
1
0
1
0
1

f (a, b, c)
0
1
0
0
1
1
1
1

Fonte – O autor, 2019.

4.2.6 Expressões Booleanas Extraidas de Tabelas-Verdade

Tomando uma uma expressão booleana, descrita por sua tabela verdade, extrair a

expressão que a representa é o processo inverso apresentado no item anterior.

Existem dois algoritmos para determinar a expressão derivada de uma tabela-
verdade. Primeiro é chamado de forma normal disjuntiva ou forma canônica em
soma de produtos (SPD), que consiste em descrever todas as situações das variáveis de
entrada cujos os valores da função corresponde a 1, enquanto que o segundo é denominado
forma normal conjuntiva ou forma canônica em produto de somas (PDS), onde
determina-se todas as situações das variáveis de entrada para as quais a função vale 0.

A metodologia para a obtenção da expressão booleana extraída de uma tabela-

verdade será introduzida através da aplicação do exemplo 17.

Exemplo 17. Considere a função booleana f dada pela Tabela 42 do exemplo 16.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

56

Note que a tabela possui cinco combinações de entrada (linhas 2, 5, 6, 7 e 8) em
que a função é igual a 1 e três combinações (linhas 1, 3 e 4) onde a função tem valor igual
a 0.

Para a obtenção da expressão na forma normal disjuntiva, deve-se associar a
cada combinação de entrada, que possui valor 1, uma operação E entre as variáveis da
seguinte forma: se a variável correspondente vale 0, ela deve aparecer negada; se a variável
vale 1, ela deve aparecer não negada, ou seja:

Linha 2 → abc
Linha 5 → abc
Linha 6 → abc
Linha 7 → abc
Linha 8 → abc

Em seguida construir a expressão com o operador OU entre as combinações

formadas.

f (a, b, c) = abc + abc + abc + abc + abc

Por outro lado, na obtenção da expressão em sua forma normal conjuntiva,
deve-se associar a cada combinação de entrada, que possui valor 0, uma operação OU
entre as variáveis da seguinte forma: se a variável correspondente vale 0, ela deve aparecer
não negada; se a variável vale 1, ela deve aparecer negada, ou seja:

Linha 1 → abc
Linha 3 → abc
Linha 4 → abc

Em seguida construir a expressão com o operador E entre as combinações formadas.

f (a, b, c) = (a + b + c)(a + b + c)(a + b + c)

4.2.7 Mintermos e Maxtermos

A representação de uma tabela-verdade pode ser feita em soma de produtos e em
produto de soma. Essas representações podem sofrer simpliﬁcações utilizando os teoremas
da álgebra de Boole.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

57

Quando as expressões não sofrem simpliﬁcações, ou seja, em cada termo soma e
em cada termo produto todas as variáveis da função estão presentes, ela é dita forma
canônica, que pode ser representada como na seção anterior ou pela posição da combinação
de entradas na tabela-verdade. As combinações de entradas por produto são denominadas
mintermos e as combinações por soma é denominada maxtermos. A Tabela 43 lista todos
os mintermos e maxtermos da função do exemplo 16.

Tabela 43 – Mintermos e Maxtermos

i
0
1
2
3
4
5
6
7

a
0
0
0
0
1
1
1
1

b
0
0
1
1
0
0
1
1

c
0
1
0
1
0
1
0
1

f (a, b, c) M intermos

M axtermos

0
1
0
0
1
1
1
1

m0 = abc M0 = (a + b + c)
m1 = abc M1 = (a + b + c)
m2 = abc M2 = (a + b + c)
m3 = abc M3 = (a + b + c)
m4 = abc M4 = (a + b + c)
m5 = abc M5 = (a + b + c)
m6 = abc M6 = (a + b + c)
m7 = abc M2 = (a + b + c)

Fonte – O autor, 2019.

Portanto, a função f (a, b, c) pode se representada por:

f (a, b, c) = m1 + m4 + m5 + m6 + m7 = Σ(1, 4, 5, 6, 7)
f (a, b, c) = M0 + M2 + M3 = Π(0, 2, 3)

4.2.8 Minimização de Funções Booleanas

Uma função booleana dada pode ser representada por mais de uma expressão
booleana. Minimizar ou simpliﬁcar uma função booleana é reduzir ao mínimo o número de
termos. Temos três métodos para a simpliﬁcação de uma função ou expressão booleana.

1. Método Algébrico;

2. Método do Mapa de Karnaugh;

3. Método de Quine-McKluskey.

4.2.8.1 Método Álgebrico

A simpliﬁcação pelo método algébrico necessitará das propriedades e teoremas

visto na seção 4.2.2.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

58

Exemplo 18. Simpliﬁcar a função booleana, f (a, b, c) = abc + abc + abc + abc + abc, dada
pela tabela 41, representada pela expressão em sua forma canônica por soma de produtos.

abc + abc + abc + abc + abc = abc + abc + abc + abc + abc + abc
= abc + abc + abc + abc + abc + abc
= bca + bca + acb + acb + acb + acb
= bc(a + a) + ac(b + b) + ac(b + b)
= bc1 + ac1 + ac1
= bc + ac + ac
= bc + a(c + c)
= bc + a(1)
= bc + a

T1.a

P3

P4

P6

P9

P8

P6

P9

P8

Observção Os métodos de simpliﬁçação Mapa de Karnaugh e Quine-McKluskey
não serão abordados neste trabalho por estar fora do objetivo a ser alcançado com o
público alvo (Ensino Médio regular).

4.3 Circuitos Lógicos e sua relação com a Álgebra de Boole

A combinação de blocos lógicos básicos, conhecidos como portas lógicas, são
denominados de circuitos lógicos. Portanto, é extremamento importante a correlação desses
blocos na realização de uma função lógica e, a Álgebra de Boole é a principal ferramenta
usada para análise e execução de circuitos lógicos.

Circuitos lógicos podem ser executados a partir de expressões lógicas, que são
montadas através das combinações das operações básicas da álgebra boolena. Com essas
expressões, podem-se construir circuitos lógicos que as implementam, utilizando as portas
lógicas.

4.3.1 Portas Lógicas

A combinação de portas lógicas criam circuitos que executam expressões booleanas,
ou seja, portas lógicas são símbolos que representam de forma gráﬁca cada operador de
uma função booleana.

A porta Lógica E se compara como a operação booleana ·, a porta lógica OU
representa a operação booleana + e um inversor corresponde à operação complemento 0
ou¯.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

59

4.3.1.1 Função e Porta Lógica E

A função lógica E é aquela que executa a multiplicação lógica, descrita na seção
4.2.1.1, de duas ou mais variáveis. A porta lógica E é um circuito que executa a função
E, sendo representada através do símbolo apresentado na Figura 4. À esquerda então
dispostas as entradas e a direita a única saída. As linhas podem ser imaginadas como ﬁos
que carregam os sinais elétricos associados às variáveis.

Figura 4 – Porta lógica E de duas variáveis.

Fonte – O autor, 2019.

4.3.1.2 Função e Porta Lógica OU

A função lógica OU é aquela que executa a adição lógica, descrita na seção 4.2.1.2,
de duas ou mais variáveis. A porta lógica OU é um circuito que executa a função OU,
sendo representada através do símbolo apresentado na Figura 5.

Figura 5 – Porta lógica OU de duas variáveis.

Fonte – O autor, 2019.

4.3.1.3 Função e Porta Lógica Inversora (Negação)

A porta lógica que simboliza o operador complementação é denominado inversor
ou porta lógica inversora, como mostra a Figura 6. A função lógica inversora (negação)
é aquela que executa a complementação lógica, descrita na seção 4.2.1.3. A porta lógica
inversora só possui uma entrada e uma saída, pois o operador complementação só pode
ser realizado sobre uma variável ou sobre o resultado de uma subexpressão.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

60

Figura 6 – Pora lógica inversora.

Fonte – O autor, 2019.

4.3.2 Exemplo de um Circuito Lógico

A combinação das portas lógicas E, OU e inversão, constroem circuitos lógicos que
representam uma expressão booleana e monta a mesma função booleana que a expressão.

O processo para construir um circuito lógico a partir de uma expressão booleana,
é o mesmo utilizado na avaliação da expressão, ou seja, é necessário seguir a ordem
de precedência, onde a multiplicação lógica tem precedência sobre a adição lógica, a
complementação tem precedência sobre + ou · e parênteses devem respeitar a ordem dos
mais internos para os mais externos.

Exemplo 19. Tomemos como exemplo a expressão simpliﬁcada do exemplo 18: S = a+b0c.

Figura 7 – Circuito da expressão a + b0c.

Fonte – O autor, 2019.

Como visto anteriormente, pode-se determinar um circuito lógico a partir de uma
expressão booleana dada. O processo inverso também é valido, ou seja, obter a expressão
booleana que é executada por um circuito lógico. Utilizaremos o exemplo 20 para mostras
o procedimento de obter a expressão de um circuito.

Exemplo 20. Determinar a expressão para o circuito representado na Figura 8.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

61

Figura 8 – Circuito exemplo 20.

Fonte – O autor, 2019.

Primeiro, deve-se separar o circuitos em partes e determinar as subexpressões das
saídas dos blocos lógicos básicos que compõe o circuito, aﬁm de melhorar a leitura e
organização.

Figura 9 – Circuito dividido em quatro blocos.

Fonte – O autor, 2019.

Note que, no bloco 1 e 3 temos uma porta lógica E, onde as suas expressões de
saída são, respectivamente, ab e cd, o bloco 2 trata-se de uma porta inversora c0 e, por
ﬁm, o bloco 4 representa a porta lógica OU, onde suas entradas são o resultado dos blocos
anteriores.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

62

Figura 10 – Circuito com as expressões resultantes.

Fonte – O autor, 2019.

Portanto, a expressão obtida do circuito lógico apresentado é S= ab + c0 + cd.

Exemplo 21. Uma expressão booleana para o circuito lógico da Figura 11, utilizando o
processe descrito no exemplo anterior, é S = abc + (a + b)c.

Figura 11 – Um circuito lógico.

Fonte – O autor, 2019.

Vimos com os exemplos 20 e 21, respectivamente, como de uma expressão booleana
encontrar um circuito lógico que a representa, e como determinar a expressão booleana
que tem a mesma função booleana dado um circuito. Logo dado um circuito qualquer

Capítulo 4. Álgebra de Boole e Circuitos Digitais

63

podemos determinar a função booleana que o implemente, pois vimos na seção 4.2.5 como
extrair uma tabela-verdade de uma expressão que produz a mesma função booleana.

No próximo exemplo, determinaremos um circuito a partir de uma função booleana
dada, ou seja, extrairemos a expressão booleana da tabela-verdade de acordo com a seção
4.2.6 e em seguida construir o circuito através de sua expressão.

Exemplo 22.

Dada a Tabela 44:

Tabela 44 – Uma função booleana

a
0
0
0
0
1
1
1
1

b
0
0
1
1
0
0
1
1

c
0
1
0
1
0
1
0
1

f (a, b, c)
0
0
1
0
1
1
1
0

Fonte – O autor, 2019.

(a) Encontrar a expressão derivada da Tabela 44 em sua forma normal disjuntiva.

Deve-se associar a cada combinação de entrada, que possui valor 1, uma operação E
entre as variáveis da seguinte forma: se a variável correspondente vale 0, ela deve aparecer
negada; se a variável vale 1, ela deve aparecer não negada.

Linha 3 → a0bc0
Linha 5 → ab0c0
Linha 6 → ab0c
Linha 7 → abc0

Em seguida construir a expressão com o operador OU entre as combinações

formadas.

f (a, b, c) = a0bc0 + ab0c0 + ab0c + abc0

(b) Construir o circuito correspondente à expressão no item (a).

Capítulo 4. Álgebra de Boole e Circuitos Digitais

64

Figura 12 – Circuito correspondente à expressão a0bc0 + ab0c0 + ab0c + abc0

Fonte – O autor, 2019.

(c) Simpliﬁcar a expressão encontrada no item (a), utilizando os teoremas da

álgebra booleana.

a0bc0 + ab0c0 + ab0c + abc0 = ab0c0 + ab0c + a0bc0 + abc0
= ab0c0 + ab0c + c0a0b + cab
= ab0(c0 + c) + c0(a0b + ab)
= ab0(c0 + c) + c0(ba0 + ba)
= ab0(c0 + c) + c0(b(a0 + a))
= ab01 + c0(b1)
= ab0 + c0b
= ab0 + bc0

(d) Construir o circuito encontrado no item (c).

P3

P4

P6

P4

P6

P9

P8

P4

Capítulo 4. Álgebra de Boole e Circuitos Digitais

65

Figura 13 – Circuito correspondente à expressão ab’+bc

Fonte – O autor, 2019.

Portando, podemos converter informação de uma função booleana para uma
expressão e determinar o circuito que a representa, mas a volta também é valida, ou seja,
de um circuito podemos encontrar a expressão e determinar a função.

4.3.3 Outras Portas Lógicas

Existem outras portas lógicas resultantes da combinação dos blocos lógicos básicos,

que descreveremos a seguir.

4.3.3.1 Função e Porta Lógica NÃO-E (ou NE, ou Negação de E)

A função booleana NÃO-E, apresentada pela Tabela 45 e representada algebrica-
mente por (ab) ou (ab)0, é uma composição entre a função lógica E com a função lógica
inversão, ou seja, trata-se da inversão lógica da função E.

Tabela 45 – Operador NÃO-E.

a
0
0
1
1

b
0
1
0
1

(ab)0
1
1
1
0

Fonte – O autor, 2019.

A porta lógica NÃO-E executa a função lógica NÃO-E representada pelo símbolo

da Figura 14.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

66

Figura 14 – Porta NÃO-E.

Fonte – O autor, 2019.

4.3.3.2 Função e Porta Lógica NÃO-OU (ou NOU, ou Negação de OU)

Formada pela função lógica OU com a função inversora, ou seja, uma inversão
da função lógica OU, representada algebricamente por (a + b) ou (a + b)0. A Tabela 46
apresenta a função NÃO-E para duas variáveis.

Tabela 46 – Operador NÃO-OU.

a
0
0
1
1

b
0
1
0
1

(a + b)0
1
0
0
0

Fonte – O autor, 2019.

A porta lógica NÃO-OU executa a função NÃO-OU como mostra a Figura 15.

Figura 15 – Porta NÃO-OU.

Fonte – O autor, 2019.

4.3.3.3 Função e Porta Lógica OU-Exclusivo.

A função OU Exclusivo, para duas variáveis, representada por a ⊕ b, é aquela que
executa valor lógico 1 quando as variáveis de entrada possuem valores distintos entre si. A
Tabela 47 exibe a função OU Exclusivo.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

67

Tabela 47 – Operador OU-Exclusivo.

a
0
0
1
1

b
0
1
0
1

a ⊕ b
0
1
1
0

Fonte – O autor, 2019.

Note que a leitura em sua forma normal disjuntiva é representada pela expressão

a0b + ab0.

Figura 16 – Circuito da função OU Esclusivo.

Fonte – O autor, 2019.

A porta lógica OU-Exclusivo pode ser representada pelo circuito da Figura 16 ou,

de modo mais simples, pelo símbolo da Figura 17.

Figura 17 – Porta OU-Exclusivo.

Fonte – O autor, 2019.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

68

4.3.3.4 Função e Porta Lógica NÃO-OU-Exclusivo (ou Coincidência, ou NOU Exclusivo).

A função NÂO-OU-Exclusivo, para duas variáveis, representada por a (cid:12) b, é aquela
que executa valor lógico 1 quando as variáveis coincidem noa seus valores de entrada. A
Tabela 48 exibe a função NÃO-OU-Exclusivo.

Tabela 48 – Operador NÃO-OU-Exclusivo.

a
0
0
1
1

b
0
1
0
1

a (cid:12) b
1
0
0
1

Fonte – O autor, 2019.

A Representação da função booleana coincidência em sua forma normal disjuntiva

é representada pela expressão a0b0 + ab.

Figura 18 – Circuito da função NÃO-OU-Exclusivo.

Fonte – O autor, 2019.

A porta lógica Coincidência pode ser representada pelo circuito da Figura 18 ou,

de modo mais simples, pelo símbolo da Figura 19.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

69

Figura 19 – Porta NÃO-OU-Exclusivo.

Fonte – O autor, 2019.

4.3.4 Implementação de Funções Booleanas Usando as Portas Lógicas NÃO-E e NÃO-OU

Os blocos lógicos NÃO-E e NÃO-OU, sozinhos, podem executar qualquer função
booleana, pois a combinação de portas NE e NOU, entre si mesmas, realizam o papel de
inversor, de portas E e portas OU.

(1) Implementação da porta lógica NÃO-E.

Figura 20 – Porta NE executando inversão.

Fonte – O autor, 2019.

Figura 21 – Combinação de portas NE executando adição lógica.

Fonte – O autor, 2019.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

70

Figura 22 – Combinação de portas NE executando multiplicação lógica.

Fonte – O autor, 2019.

(2) Implementação da porta lógica NÃO-OU.

Figura 23 – Porta NOU executando inversão.

Fonte – O autor, 2019.

Figura 24 – Combinação de portas NOU executando multiplicação lógica.

Fonte – O autor, 2019.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

71

Figura 25 – Combinação de portas NOU executando adição lógica.

Fonte – O autor, 2019.

Exemplo 23. Reconstruindo o circuito da Figura 7 substituindo as portas lógicas E, OU
e inversora por portas NÃO-E.

Figura 26 – Circuito da ﬁgura 7 redesenhado com portas lógicas NÃO-E.

Fonte – O autor, 2019.

4.3.5 Construção de uma Função Booleana pela Descrição de um Problema

Um carrinho de controle remoto é controlado por dois botões, um onde o carrinho

se desloca para frente e outro onde se desloca pra trás. Encontre:

(a) uma função booleana que permita que o carrinho se desloque;

Vamos supor que o botão em que o carrinho de desloca para frente seja A e o
que ele se desloca para trás B. Então o carrinho só irá se deslocar quando um dos dois
botões, não os dois, forem acionados. Associando o valor 1 quando o botão A ou B forem
acionados, mas não ambos e 0 para quando os botões não forem acionados ou ambos,
temos a seguinte função booleana dada pela Tabela 49.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

72

Tabela 49 – Função booleana referente ao deslocamento do carrinho.

A B D
0
0
0
1
1
0
1
0
1
0
1
1

Fonte – O autor, 2019.

(b) uma expressão booleana para o item (a);

Deve-se associar a cada combinação de entrada, que possui valor 1, uma operação E
entre as variáveis da seguinte forma: se a variável correspondente vale 0, ela deve aparecer
negada; se a variável vale 1, ela deve aparecer não negada.

Linha 2 → AB0
Linha 3 → A0B

Em seguida construir a expressão com o operador OU entre as combinações

formadas.

D = AB0 + A0B.

(c) um circuito que permita que o carrinho ande para frente ou para trás.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

73

Figura 27 – Um circuito para expressão D = AB0 + A0B

Fonte – O autor, 2019.

Agora, vamos simular a situação através de um software chamado LogicCircuit.
Onde o circuito ganhará duas alimentações, uma em A e outa em B. A mediada que
variarmos as entradas das variáveis, de acordo com os valores da tabela-verdade, uma luz
de led em sua saída representará o valor da função, ou seja, quando a luz acender indicará
que o carrinho se deslocou para frente ou para trás, caso contrário a luz permanecerá
apagada.

Simulação 1: representa a primeira linha da tabela verdade.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

74

Figura 28 – Simulação 1: problema do carrinho.

Fonte – O autor, 2019.

Simulação 2: representa a segunda linha da tabela verdade.

Figura 29 – Simulação 2: problema do carrinho.

Fonte – O autor, 2019.

Simulação 3: representa a terceira linha da tabela verdade.

Capítulo 4. Álgebra de Boole e Circuitos Digitais

75

Figura 30 – Simulação 3: problema do carrinho.

Fonte – O autor, 2019.

Simulação 4: representa a quarta linha da tabela verdade.

Figura 31 – Simulação 4: problema do carrinho.

Fonte – O autor, 2019.

Foram utilizados como referência teórica para a abordagem dos coteúdos contidos
neste capítulo os autores: (GÜNTZEL; NASCIMENTO, 2001), (GERSTING;, 2010),
(PIMENTA, 2017), (DAGHLIAN, 2006) e (CAPUANO, 2014).

5 ATIVIDADES

76

Com o avanço da tecnologia e dos recursos digitais, é notório que os alunos se
interessem cada vez mais por conteúdos ligados diretamente à tecnologia. Pensando em
uma maior interação entre alunos, professores e o próprio conteúdo a ser apresentado,
utilizaremos nesse trabalho atividades baseada na metodologia STEM, apresentada no
capítulo 2. Lembrando que esta metodologia baseia-se em projetos buscando o envolvimento
dos alunos em atividades que os levem a uma aprendizagem mais eﬁcaz, colocando-os
na situação de protagonistas do seu próprio aprendizado, é que tais atividades foram
pensadas.

Neste capítulo descreveremos uma proposta para abordagem da lógica proposicional,
em particular, a negação lógica e os conectivos E e OU apresentados no capítulo 3. A
Álgebra Booleana, os Circuitos Lógicos e o software LogicCircuit, que simula um circuito
lógico, dão uma maior concretização ao aprendizado levando o aluno a um patamar superior
em relação a aquisição do conhecimento, pelo fato deste ambiente virtual de aprendizagem
desenvolver a criatividade e as potencialidades de experimentação e raciocínio combinatório
dos alunos.

O objetivo do uso de um conteúdo pertencente a eletrônica é trazer os alunos para
algo que os interessem, já que os circuitos lógicos estão presentes de maneira direta no
dia a dia, pois segundo Pimenta (2017) são base do funcionamento dos telefones móveis,
tablets, computadores, televisores, jogos eletrônicos, entre outros.

Os circuitos digitais estão tão intensamente presentes em nossas vidas,
que é difícil imaginar viver sem eles. Eles estão claramente presentes em
telefones móveis, tablets, computadores, televisores, jogos eletrônicos,
equipamentos de acesso à internet, máquinas fotográﬁcas, reproduto-
res de áudio e vídeo, entre outros. Os circuitos digitais também estão
presentes em nossa infraestrutura de energia, telecomunicações e radio-
difusão, saneamento, transportes e outros. Esses circuitos permitem a
operações de equipamentos de alta tecnologia, como satélites e sondas
especiais, equipamentos militares médicos, assim como eletrodomésticos
(geladeiras, lava-roupas, lava-louças, máquinas de café, etc.), automóveis
caminhões, tratores, barcos e aviões. Muitas vezes nem mesmo percebe-
mos ou sabemos de seu emprego, como em rodovias e ferrovias, produção
agrícola, portos e aeroportos. Ainda há a área de automação industrial e
recentemente a automação residencial. Enﬁm, é difícil pensar em algum
produto que não empregue circuitos digitais em sua operação, ou em sua
produção. De fato a quase totalidade de produtos eletrônicos os emprega
de alguma forma. (PIMENTA, 2017, p.1)

Dessa forma, vamos propor que através da aplicação dos circuitos lógicos na
construção e simulação de circuitos com o auxilio do software LogicCircuit, os alunos
possam conjecturar e tirar suas próprias conclusões em relação aos operadores E, OU

Capítulo 5. Atividades

77

e Inversão. Neste momento a mediação do professor deve ser feita de modo a instigar
o aluno a questionamentos, principalmente em relação a inversão por ser um operador
pouco natural na utilização de área, além de possibilitar aos alunos a visão de que cada
inversão também é uma porta lógica. Esta prática é muito importante de ser realizada
desta maneira, uma vez que um circuito lógico é a combinação de portas lógicas que
representam graﬁcamente as operações booleanas E, OU e Inversor, descritas na seção 4.3.

O trabalho contará com 10 atividades progressivas em níveis de diﬁculdade crescente.
O objetivo é fazer com que o aluno atinja gradativamente um grau de abstração capaz de
inserir o valor lógico da saída ou mesmo descobrir ao longo do circuito que valor lógico de
uma saída erroneamente classiﬁcada pode inﬂuenciar no valor lógico ﬁnal do circuito.

Iniciaremos as atividades explicando o que são circuitos lógicos, sua importância
e aplicabilidade. Em seguida, será dado os conceitos iniciais sobre álgebra de boole e
circuitos lógicos necessários para iniciarmos as atividades. A medida que formos passando
de uma atividade para a outra, cobriremos todo o conteúdo da álgebra booleana suﬁciente
para o que o trabalho se propõem (o estudo do E, OU e das inversões). Todo cuidado
com a linguagem de apresentação da atividade assim como do conteúdo será uma atenção
especial do professor mediador uma vez que são atividades para o ensino médio regular.

Ao ﬁnal de cada atividade será implementada a relação da álgebra de boole com
a lógica proposicional. Para cada atividade, iremos propor um projeto de simulação de
um circuito, a ser solucionado pelo software LogicCircuit. O aluno receberá um roteiro
apresentado pelo professor mediador. Em seguida, será feito alguns questionamentos sobre
a solução do projeto proposto e, por ﬁm, o professor formaliza a teoria associando os
conteúdos presentes nos tópicos: circuitos lógicos, álgebra booleana e lógica proposicional
de primeira ordem.

No início de cada atividade o professor fará uma breve apresentação dos conceitos
iniciais presentes nos tópicos citados anteriormente. Será introduzido no início de cada
atividade uma tabela que apresentará a proposta do projeto, o embasamento teórico
necessário para o desenvolvimento da atividade, o objetivo que se deseja ser alcançado
pelo aluno e o nível de diﬁculdade.

Conceitos iniciais sobre álgebra de boole necessários para o desenvolvimento das

atividades:

- Um pouco da História;

- Explicar o que são variáveis booleanas e os valores que podem assumir, ou seja,
que as variável booleana só pode assumir dois valores 0 ou 1 e que cada variável só pode
assumir um dos dois valores possíveis;

- Mostras que existem três operações básicas na álgebra de boole: operadores E,

OU e complementação (inversão).

Capítulo 5. Atividades

78

Conceitos iniciais sobre circuitos lógicos necessários para o desenvolvimento das

atividades:

- Explicar o que são e para que serve os circuitos lógicos;

- Explicar o que são portas lógicas (seção 4.3.1);

- Mostrar exemplos e aplicações dos circuitos lógicos (seção 4.3.2).

5.1 Atividade 1

Tabela 50 – Proposta de atividade 1

Projeto

Construir um circuito lógico formado por uma única
porta lógica E, com dua variáveis, para a simulação de
uma lâmpada de led.

Embasamento teórico Saber o conceito de circuito lógico e conhecer a represen-

tação da porta lógica E.
Entender o operador lógico E.
Nível de diﬁculdade Médio (Por ser a 1º atividade do aluno com o software).

Objetivo

Fonte – O autor, 2019.

Para as primeiras atividades o aluno deve seguir os seguintes passos iniciais com

bastante atenção, pois será seu primeiro contato com o software.

1. Abra o software LogicCircuit.

Figura 32 – Construção do circuito da atividade 1 no LogicCircuit: passo 1

Fonte – O autor, 2019.

Capítulo 5. Atividades

79

2. Em projetos, vá até a aba Elementos, clique na porta lógica E (para duas variáveis)

e arraste-a até a tela principal.

Figura 33 – Construção do circuito da atividade 1 no LogicCircuit: passo 2

Fonte – O autor, 2019.

3. Ainda em projetos, na aba Entrada-Saída, clique em constantes e arraste para a
tela principal, repita por duas vezes. Em seguida, dê uma identiﬁcação para cada
constante, por exemplo, a e b.

Figura 34 – Construção do circuito da atividade 1 no LogicCircuit: passo 3

Fonte – O autor, 2019.

Capítulo 5. Atividades

80

4. Ligue as entradas da porta lógica E as constantes. (As constantes representam as

variáveis do circuito)

Figura 35 – Construção do circuito da atividade 1 no LogicCircuit: passo 4

Fonte – O autor, 2019.

5. Agora selecione e arraste para a tela principal uma lâmpada de led em Entradas-

Saídas, em seguida ligue-a a saída da porta E.

Figura 36 – Construção do circuito da atividade 1 no LogicCircuit: passo 5

Fonte – O autor, 2019.

Capítulo 5. Atividades

81

6. Por ﬁm, na parte inferior da tela, clique no botão de ligar para que a simulação
comece. Em comandos, varie todas as possibilidades possíveis de valores para as
variáveis de entrada, anotando os valores de entrada e saída. Associe o valor 1 de
saída quando a lâmpada de led acender, caso contrário será 0.

7. Construa uma tabela, como achar melhor, relacionando os valores de entrada e saída.

É importante que o professor facilite a aprendizagem através de questionamentos

que proporcione a exploração do tema. São sugestões de questionamentos:

Mediação do professor

- O que podemos observar com as combinações de valores nas variáveis de entrada?

- Professor mostra a correlação da porta lógica E com a operação lógica E dando a

deﬁnição formal, da seguinte maneira:

Note que:

A porta lógica E é aquela que executa a operação E, também denominada de
multiplicação lógica. Em que resulta em 0 se pelo menos uma de suas variáveis de entrada
for 0 e terá resultado igual a 1 se, e somente se, todas as entradas valerem 1. Indicamos a
operação a E b por a · b.

A tabela-verdade representa o comportamento do operador E.

Tabela 51 – Operador booleano E.

a
0
0
1
1

b
0
1
0
1

a · b
0
0
0
1

Fonte – O autor, 2019.

- Em seguida, o professor faz a associação da operação booleana E com a lógica

proposicional.

Primeiro deve-se deﬁnir matematicamente os seguintes tópicos da lógica matemá-

tica:

(1º) O que é proposição (seção 3.1.1).

(2º) Princípios básicos da lógica matemática (seção 3.1.2).

(3º) Proposição simples e composta (seções 3.1.3 e 3.1.4).

Capítulo 5. Atividades

82

Após formalização do operador booleano E e deﬁnições dos tópicos acima iremos

associar os símbolos e elementos que possuem o mesmo signiﬁcado.

Multiplicação lógica = Conjunção

· = ∧

- Por ﬁm, deﬁniremos formalmente o que é uma conjunção lógica.

Conjunção (∧)

Unindo duas proposições p e q através do conectivo ∧, obtemos uma nova proposição,
p ∧ q, denominada conjunção das sentenças p e q. A conjunção p ∧ q é verdadeira se as
proposições p e q são ambas verdadeiras, se pelo menos uma proposição for falsa, então
p ∧ q é falsa.

A tabela abaixo nos permite veriﬁcar todas as possibilidades de resultado para a

conjunção p ∧ q. Denominada tabela-verdade da proposição p ∧ q.

Tabela 52 – Tabela-verdade da p ∧ q

q
p
V V
V F
F V
F F

p ∧ q
V
F
F
F

Fonte – O autor, 2019.

5.2 Atividade 2

Tabela 53 – Proposta de atividade 2

Projeto

Construir um circuito lógico formado por uma única
porta lógica OU, com dua variáveis, para a simulação de
uma lâmpada de led.

Embasamento teórico Saber o conceito de circuito lógico e conhecer a represen-

Objetivo
Nível de diﬁculdade

tação da porta lógica OU.
Entender o operador lógico OU.
Baixo (pelo fato do aluno ter experimentado a atividade
1).

Fonte – O autor, 2019.

1. Abra o software LogicCircuit.

Capítulo 5. Atividades

83

Figura 37 – Construção do circuito da atividade 2 no LogicCircuit: passo 1

Fonte – O autor, 2019.

2. Em projetos, vá até a aba Elementos, clique na porta lógica OU (para duas variáveis)

e arraste-a até a tela principal.

Figura 38 – Construção do circuito da atividade 2 no LogicCircuit: passo 2

Fonte – O autor, 2019.

3. Ainda em projetos, na aba Entrada-Saída, clique em constantes e arraste para a tela

principal, repita por duas vezes.

Capítulo 5. Atividades

84

Figura 39 – Construção do circuito da atividade 2 no LogicCircuit: passo 3

Fonte – O autor, 2019.

4. Ligue as entradas da porta lógica OU as constantes. (As constantes representam as

variáveis do circuito)

Figura 40 – Construção do circuito da atividade 2 no LogicCircuit: passo 4

Fonte – O autor, 2019.

5. Agora selecione e arraste para a tela principal uma lâmpada de led em Entradas-

Saídas, em seguida ligue-a a saída da porta OU.

Capítulo 5. Atividades

85

Figura 41 – Construção do circuito da atividade 2 no LogicCircuit: passo 5

Fonte – O autor, 2019.

6. Por ﬁm, na parte inferior da tela, clique no botão de ligar para que a simulação
comece. Em comandos, varie todas as possibilidades possíveis de valores para as
variáveis de entrada, anotando os valores de entrada e saída. Associe o valor 1 de
saída quando a lâmpada de led acender, caso contrário será 0.

Mediação do professor

- O que podemos observar com as combinações de valores nas variáveis de entrada?

- Professor mostra a correlação da porta lógica OU com a operação lógica OU

dando a deﬁnição formal, da seguinte maneira:

Note que:

A porta lógica OU é aquela que executa a operação OU, também denominada de
adição lógica. Que assumirá o valor 0 quando todas as variáveis de entrada for 0 e quando
pelo menos uma das variáveis de entrada for 1 resultará em 1. Indicamos a operação a OU
b por a + b.

A tabela-verdade representa o comportamento do operador OU

Capítulo 5. Atividades

86

Tabela 54 – Operador booleano OU.

a
0
0
1
1

b
0
1
0
1

a + b
0
1
1
1

Fonte – O autor, 2019.

- Em seguida, o professor faz a associação da operação booleana OU com a lógica

proposicional e também dos símbolos e elementos que possuem o mesmo sentido.

Adição lógica = Disjunção

+ = ∨

- Por ﬁm, deﬁniremos formalmente o que é uma disjunção lógica.

Disjunção (∨)

Unindo duas proposições p e q através do conectivo ∨, obtemos uma nova proposição,
p ∨ q, denominada disjunção das sentenças p e q. A disjunção p ∨ q é verdadeira se pelo
menos uma das proposições p e q são verdadeiras, se ambas as proposições p e q são falsas,
então p ∨ q é falsa.

A tabela abaixo nos permite veriﬁcar todas as possibilidades de resultado para a

disjunção p ∨ q. Denominada tabela-verdade da proposição p ∨ q.

Tabela 55 – Tabela-verdade da p ∨ q

p
q
V V
V F
F V
F F

p ∨ q
V
V
V
F

Fonte – O autor, 2019.

Capítulo 5. Atividades

5.3 Atividade 3

87

Tabela 56 – Proposta de atividade 3

Projeto

Construir um circuito lógico formado por uma única
porta lógica inversora para a simulação de uma lâmpada
de led.

Embasamento teórico Saber o conceito de circuito lógico e conhecer a represen-

Objetivo
Nível de diﬁculdade

tação da porta lógica inversora.
Entender o operador lógico negação.
Baixo.

Fonte – O autor, 2019.

1. Abra o software LogicCircuit.

Figura 42 – Construção do circuito da atividade 3 no LogicCircuit: passo 1

Fonte – O autor, 2019.

2. Em projetos, vá até a aba Elementos, clique na porta lógica inversora e arraste-a até

a tela principal.

Capítulo 5. Atividades

88

Figura 43 – Construção do circuito da atividade 3 no LogicCircuit: passo 2

Fonte – O autor, 2019.

3. Ainda em projetos, na aba Entrada-Saída, clique em constantes e arraste para a tela

principal.

Figura 44 – Construção do circuito da atividade 3 no LogicCircuit: passo 3

Fonte – O autor, 2019.

4. Ligue as entradas da porta lógica inversora a constante.

Capítulo 5. Atividades

89

Figura 45 – Construção do circuito da atividade 3 no LogicCircuit: passo 4

Fonte – O autor, 2019.

5. Agora selecione e arraste para a tela principal uma lâmpada de led em Entradas-

Saídas, em seguida ligue-a a saída da porta inversora.

Figura 46 – Construção do circuito da atividade 3 no LogicCircuit: passo 5

Fonte – O autor, 2019.

6. Por ﬁm, na parte inferior da tela, clique no botão de ligar para que a simulação
comece. Em comandos, varie todas as possibilidades possíveis de valores para a

Capítulo 5. Atividades

90

variável de entrada, anotando os valores de entrada e saída.

Mediação do professor

Professor: O que podemos observar com as combinações de valores nas variáveis de

entrada?

Sugestão: Professor mostra a correlação da porta lógica inversora com a negação

lógica dando a deﬁnição formal, da seguinte maneira:

Note que:

E a porta inversora implementada pela operação complementação, também chamada
de negação, executa a inversão do valor ao qual a variável apresenta. Já que uma variável
pode assumir somente um valor dos dois valores,ou seja, será 1 se a variável for 0 e resultará
em 0 se a variável for 1. Indicamos a operação complementar de a por ¯a ou a0.

A tabela-verdade representa o comportamento da operação Negação.

Tabela 57 – Operador booleano inversão

a
0
1

a0
1
0

Fonte – O autor, 2019.

Em seguida, o professor faz a associação da operação booleana inversão com a
lógica proposicional e também dos símbolos e elementos que possuem o mesmo sentido.

Inversão = Negação

0 =∼

- Por ﬁm, deﬁniremos formalmente o que é uma disjunção lógica.

Negação (∼)

A partir de uma proposição p qualquer, sempre podemos construir outra, denomi-

nada negação de p e indicada com o símbolo ∼ p.

A proposição ∼ p possui o valor lógico sempre oposto ao valor lógico de p, ou seja,
quando o valor lógico de p é verdadeiro ∼ p é falso e quando o valor lógico de p é falso
∼ p é verdadeiro.

O que pode ser simpliﬁcado na tabela abaixo, denominada tabela-verdade da

proposição ∼ p.

Capítulo 5. Atividades

91

Tabela 58 – Tabela-verdade ∼ p

p ∼ p
F
V
V
F

Fonte – O autor, 2019.

5.4 Atividade 4

Tabela 59 – Proposta de atividade 4

Projeto

Construir um circuito lógico formado por uma única
porta lógica E, com três variáveis, para a simulação de
uma lâmpada de led.
Embasamento teórico Conceitos trabalhado nas atividades anteriores.

Objetivo

Número de linhas da tabela-verdade e construção da
tabela-verdade.

Nível de diﬁculdade Difícil.

Fonte – O autor, 2019.

1. Abra o software LogicCircuit.

2. Em projetos, vá até a aba Elementos, clique na porta lógica E (para três variáveis) e

arraste-a até a tela principal.

3. Ainda em projetos, na aba Entrada-Saída, clique em contantes e arraste para a tela

principal, repita por duas vezes.

4. Ligue as entradas da porta lógica E as contantes. (As constantes representam as

variáveis do circuito)

5. Agora selecione e arraste para a tela principal uma lâmpada de led em Entradas-

Saídas, em seguida ligue-a a saída da porta E.

6. Por ﬁm, na parte inferior da tela, clique no potão de ligar para que a simulação
comece. Em comandos, varie todas as possibilidades possíveis de valores para as
variáveis de entrada, anotando os valores de entrada e saída em uma tabela-verdade.

7. Construa a tabela-verdade associando p, q e r para as variáveis de entrada e S para

o resultado ﬁnal do problema.

8. Repita o mesmo processo para uma porta lógica OU com quatro variáveis.

Capítulo 5. Atividades

92

Mediação do professor

Professor: O que podemos observar com as combinações de valores nas variáveis de

entrada?

Professor: Qual a diferença entre está atividade e a atividade 1, a qual aumentamos

o número de variáveis?

Sugestão: Professor deve mostrar a deﬁnição formal da tabela-verdade de uma

proposição composta e do número de linhas da tabela-verdade;

Tabela-Verdade de uma proposição composta

Podemos combinar as proposições simples p, q, r, ..., com os conectivos lógicos: (∼),
conjunção (∧), disjunção (∨) e disjunção exclusiva ((cid:89)), e construir proposições compostas.

Com o uso das tabelas-verdade das operações fundamentais, podemos construir as
tabelas-verdade das proposições compostas para determinar exatamente o seu valor lógico,
verdadeira(V) ou falsa(F).

Número de linhas de uma Tabela-Verdade

Teorema: A tabela-verdade de uma proposição composta com n proposições simples

componentes contém 2n linhas.

Demonstração. Com efeito, toda proposição simples tem dois valores lógicos: V e F, que
se excluem. Portanto, para uma proposição composta P(p1, p2, ..., pn) com n proposições
simples componentes p1, p2, ..., pn há tantas possibilidades de atribuições dos valores lógicos
V e F a tais componentes quantos são os arranjos com repetição n a n dos dois elementos
V e F, isto é, A2,n = 2n.

5.5 Atividade 5

Tabela 60 – Proposta de atividade 5

Projeto

Dada uma expressão booleana o aluno constrói o circuito
(no software) e sua tabela-verdade.

Embasamento teórico Conceitos trabalhado nas atividades anteriores e deﬁni-

Objetivo

ção de uma expressão booleana.
Construção da tabela verdade de uma proposição com
mais de um conectivo.

Nível de diﬁculdade Médio.

Fonte – O autor, 2019.

Iniciaremos a atividade fazendo a deﬁnição formal do que são expressões booleanas:

Expressões Booleanas

Capítulo 5. Atividades

93

Uma expressão booleana é qualquer agrupamento ﬁnito de n variáveis booleanas.

Se a e b, são expressões booleanas, então (a + b), (a · b) e a0 também são.

Quando em uma expressão booleana aparecem as operações ·, + e 0 é necessário
seguir as ordem de precedência, onde a multiplicação lógica tem precedência sobre a adição
lógica e 0 tem precedência sobre + ou ·. Na multiplicação lógica o símbolo · pode ser
omitido e utilizar a justaposição, ou seja a · b será representado por ab.

Temos que, a(b + c), ab, (ab + ac0)b e a0bc0 são exemplos de expressões booleanas.

1. Construir o circuito para a expressão a · (b + c), no software (enfatizar para o aluno
que na montagem do circuito deve-se respeitar as ordens de precedência de uma
expressão booleana).

- Para uma melhor compreensão faremos o circuito por partes, respeitando a ordem
de precedência.

2. Montar o circuito da subexpressão (b + c) (como feita na atividade 2).

Figura 47 – Circuito da subexpressão (b + c)

Fonte – O autor, 2019.

3. Variar os valores das variáveis de entrada e montar a tabela-verdade da subexpressão.

4. Montar o circuito da expressão a · (b + c), unindo a variável a a saída do circuito da
subexpressão (b + c), do item anterior, mantendo a lâmpada de LED conectada ao
ﬁo que leva o sinal lógico até a porta lógica E e outra lâmpada de LED a saída da
porta lógica E. Como mostra a ﬁgura 49.

Capítulo 5. Atividades

94

Figura 48 – Circuito da expressão a.(b + c)

Fonte – O autor, 2019.

5. Fazer a simulação do circuito variando todas as possibilidades de entrada e montar

a tabela-verdade da expressão.

6. Reescrever a expressão e tabela-verdade trocando os operadores booleanos pelos

conectivos lógicos.

Mediação do professor

- Professor deﬁne os passos para a construção da tabela-verdade de uma proposição
composta.

Construção da Tabela-Verdade

Para construção da tabela-verdade de uma proposição composta, devemos seguir os
seguintes passos:

a) Determinar o número de linhas da tabela-verdade;

b) Formar o par de colunas correspondente as proposições simples componentes;

c) Determinar a forma das proposições que ocorrem na composição;

d) Aplicar as operações lógicas que a composição exige.

5.6 Atividade 6

Tabela 61 – Proposta de atividade 6

Projeto

Dado um circuito, extrair sua expressão e tabela-verdade.

Embasamento teórico Conceitos trabalhado nas atividades anteriores.

Objetivo

Construção da tabela verdade de uma proposição com
mais de um conectivo.

Nível de diﬁculdade Médio.

Fonte – O autor, 2019.

Capítulo 5. Atividades

95

1. Será dado ao aluno o circuito lógico.

Figura 49 – Circuito dado: atividade 6

Fonte – O autor, 2019.

2. Aluno deve designar para cada entrada uma letra minúscula do alfabeto.

3. Determinar as subexpressões das saídas de cada bloco lógico que compõe o circuito,

anotando o resultado após cada saída e encontrar a expressão ﬁnal.

4. Construir a tabela-verdade da expressão booleana.

5. Construir o circuito dado, no software, variando todas as possibilidades e comparar

com a tabela encontrada no item anterior.

6. Reescreve a expressão e a tabela-verdade trocando os operadores booleanos pelos

conectivos lógicos.

Observação Atividade com a mesma abordagem teórica da atividade 5, porém

com uma dinâmica inversa a anterior.

5.7 Atividade 7

Tabela 62 – Proposta de atividade 7

Projeto

Apresentar três circuitos e o aluno identiﬁcar qual deles
é uma tautologia, Proposição logicamente falsa (Contra-
dição) ou contingência.

Embasamento teórico Conceitos trabalhado nas atividades anteriores, deﬁnição
de tautologia, proposição logicamente falsa e contingên-
cia.
Entender na prática a diferença entre tautologia, propo-
sição logicamente falsa e contingência.

Objetivo

Nível de diﬁculdade Médio.

Fonte – O autor, 2019.

Capítulo 5. Atividades

96

Iniciaremos a atividade fazendo a deﬁnição de tautologia, proposição logicamente

falsa (contradição) e contingência.

Tautologia, Proposição logicamente falsa (Contradição) e Contingência

a) Tautologia

Chama-se tautologia toda a proposição composta cuja o valor lógico é sempre

verdadeiro.

b) Proposição logicamente falsa (Contradição)

Chama-se contradição toda a proposição composta cuja última coluna da sua

tabela-verdade encerra somente a letra F (falsidade).

c) Contingência

Chama-se contingência todo a proposição composta em que a última coluna da sua

tabela-verdade ﬁguram valores lógicos distintos, ou seja, V e F, pelo menos uma vez.

1. Será apresentado três circuitos lógicos, onde cada um deles representará umas das

três deﬁnições dada acima.

(a)

Figura 50 – Circuito item (a)

Fonte – O autor, 2019.

(b)

Capítulo 5. Atividades

97

Figura 51 – Circuito item (b)

Fonte – O autor, 2019.

(c)

Figura 52 – Circuito item (c)

Fonte – O autor, 2019.

2. Extrair a expressão booleana de cada circuito e construir sua tabela verdade.

3. Trocar os operadores booleanos pelos conectivos lógicos.

Observação Professor pode propor que o aluno construa cada circuito das Figuras
50, 51 e 52 no software e faça a simulação, como nas atividades anteriores. Para uma
melhor visualização e ﬁxação.

Capítulo 5. Atividades

5.8 Atividade 8

98

Tabela 63 – Proposta de atividade 8

Projeto

Dado duas proposições lógicas, o aluno reescrever as
proposições na forma de uma expressão booleana e pos-
teriormente montar o circuito.

Embasamento teórico Conceitos trabalhado nas atividades anteriores.

Objetivo

Entender o conceito de equivalência lógica.

Nível de diﬁculdade Médio.

Fonte – O autor, 2019.

1. Dar duas proposições equivalentes, de preferência umas das propriedades algébricas

das proposições. Daremos as proposições p ∧ (q ∨ r) e (p ∧ q) ∨ (p ∧ r).

2. Aluno reescreve as proposições trocando os conectivos lógicos pelos operadores

booleanos, assim, transformando as proposições em expressões booleanas.

3. Em seguida, aluno constrói os circuito lógicos no software e faz a simulação de ambos

construindo suas tabelas-verdade, como feito em atividades anteriores.

Mediação do professor

- O que podemos observar com as tabelas-verdade das expressões?

- Professor deﬁne o que são proposições equivalentes.

Equivalência Lógica

Quando duas proposições p e q dadas possuem tabelas-verdade iguais, dizemos que
as proposições são equivalente ou logicamente equivalentes, ou seja, quando p e q têm o
mesmo valor lógico.

Indica-se que a proposição p é logicamente equivalente a proposição q com a notação:

p ⇐⇒ q.

Observação Professor pode aproveitar para aprofundar a assunto e deﬁnir a

Álgebra das Proposições, como na seção 3.1.10.

Capítulo 5. Atividades

5.9 Atividade 9

99

Tabela 64 – Proposta de atividade 9

Projeto

Construção e simulação de circuitos.

Embasamento teórico Conceitos trabalhado nas atividades anteriores e a exis-

Objetivo

tências de outras portas lógicas.
Compreender as regras de De MORGAN

Nível de diﬁculdade Difícil.

Fonte – O autor, 2019.

Iniciaremos a atividade mostrando que existem outras portas lógicas (seção 4.3.3).

1. Construir os circuitos, no software, referentes as expressões booleanas (a + b)0, (a.b)0,

a0b0 e a0 + b0 (utilizando as portas lógicas NOU e NE quando necessário).

2. Construir as tabelas-verdade para cada um dos circuitos acima.

Mediação do professor

- O que podemos observar com as tabelas-verdade das expressões?

- Houve alguma semelhança entre as tabelas-verdades?

- Professor propõe ao aluno a transformação das expressões em proposições lógicas,
trocando os operadores booleanos pelos conectivos lógicos e Reforça a deﬁnição de
equivalência dada na atividade 8.

- Em seguida, Professor deﬁne as regras de DE MORGAN.

(i) ∼ (p ∧ q) ⇐⇒ ∼ p ∨ ∼ q

(ii) ∼ (p ∨ q) ⇐⇒ ∼ p ∧ ∼ q

Estas regras de DE MORGAM nos diz que a negação transforma a conjunção em
disjunção e a disjunção em conjunção.

5.10 Atividade 10

Tabela 65 – Proposta de atividade 10

Projeto

Construir um circuito para um problema real

Embasamento teórico Conceitos trabalhado nas atividades anteriores.

Objetivo

Conseguir extrair o sentido lógico de uma situação real.

Nível de diﬁculdade Muito difícil.

Fonte – O autor, 2019.

Capítulo 5. Atividades

100

Uma carro possui 3 sensores, nas portas, na ignição e nos faróis.

- Sensor 1: Quando alguma porta está aberta o sensor envia sinal igual a 1, caso

contrário envia 0.

- Sensor 2: Quando a ignição está ligada o sensor envia sinal lógico igual a 1, caso

contrário envia 0.

- Sensor 3: Quando o farol está ligado o sensor também envia sinal lógico igual a 1,

caso contrário envia 0.

Projete um circuito lógico que faça acionar um sinal sonoro para o funcionamento

do sistema que deverá atuar sob as seguintes premissas:

(i) Quando as portas estiverem abertas com a ignição ligada.

(ii) Quando os faróis estiverem acesos com a ignição desligada.

1. Determinar a proposição referente ao acionamento do sinal sonoro do carro, adotando

letras para as variáveis componentes do sistema.

2. Construir a tabela-verdade da proposição encontrada no item 1, respeitando os

passos de construção visto na atividade 5.

3. Trocar os conectivos lógicos pelos operadores booleanos, aﬁm de determinar a

expressão referente ao sistema dado.

4. Construir o circuito lógico para o acionamento sonoro do sistema.

6 SOBRE A NECESSIDADE DE CRIAR SOLIDARIEDADE LÓGICA
PARA EXEMPLIFICAR O “SE..., ENTÃO” E O “SE E SOMENTE SE”
ATRAVÉS DOS CIRCUITOS LÓGICOS

101

O desenvolvimento deste trabalho girou em torno dos conectivos E e OU e da
negação lógica implementados através dos circuitos digitais. Como em circuitos digitais
não existem portas lógicas que representam diretamente os conectivos “se..., então” e
“se e somente se”, fez-se necessário uma abordagem indireta para representação desses
conectivos utilizando a equivalência lógica. Trabalharemos com duas equivalências lógicas:

(i) p → q ⇐⇒ ∼ p ∨ q

(ii)p ↔ q ⇐⇒ (∼ p ∨ q) ∧ (p ∨ ∼ q)

Para iniciar a abordagem deve-se apresentar a deﬁnição corrente dos conectivos,
pois como não existem representações gráﬁcas que associem os conectivos à portas lógicas,
ﬁca inviável construirmos o conhecimento dos conectivos como feito nas atividades 1, 2 e 3
do capitulo anterior.

Iniciaremos as atividades deﬁnindo os conectivos, apresentado suas tabelas e
exempliﬁcações. Espera-se que a absorção dos mesmo, pelos alunos, ocorra de maneira
mais natural, visto que estes já estão familiarizados com as notações e tabelas.

Então deﬁniremos:

Condicional (→)

Chama-se proposição condicional a composição de duas proposições p e q represen-
tadas por “se p então q”, cujo valor lógico é a falsidade(F) no caso em que p é verdadeira
e q é falsa e a verdade(V) nos demais casos. Indica-se com a notação: p → q, que também
lê-se das seguintes maneiras: p é condição suﬁciente para q e q é condição necessária para
p.

Em uma condicional p → q, temos que p é o antecedente e q é o conseguente. O

símbolo → é denominado símbolo de implicação.

A tabela abaixo nos permite veriﬁcar todas as possibilidades de resultado para a

condicional p → q. Denominada tabela-verdade da proposição p → q.

Capítulo 6. Sobre a necessidade de criar solidariedade lógica para exempliﬁcar o “Se..., então” e o “Se e
102
somente se” através dos circuitos lógicos

Tabela 66 – Tabela-verdade da p → q

p
q
V V
V F
F V
F F

p → q
V
F
V
V

Fonte – O autor, 2019.

Tabela 67 – Exemplo 9.1

Exemplo 24.

1.

Valor lógico
Verdadeiro
Verdadeiro
p → q Se 9 é um número ímpar, então o Rio de Janeiro é uma cidade. Verdadeiro

Proposição
9 é um número múltiplo de 3.
Rio de Janeiro é uma cidade.

p
q

Fonte – O autor, 2019.

Tabela 68 – Exemplo 9.2

Proposição
π é um número irracional.
15 é um número primo.

2.

p
q

p → q Se π é um número irracional, então 15 é um número primo.

Fonte – O autor, 2019.

Valor lógico
Verdadeira
Falso
Falso

Bicondicional (↔)

Chama-se proposição bicondicional a composição de duas proposições p e q repre-
sentadas por “p se e somente se q”, cujo valor lógico é a verdade (V) no caso em que p e q
são ambas verdadeiras ou ambas falsas e falsidade (F) nos demais casos. Indica-se com
a notação: p ↔ q, que também lê-se das seguintes maneiras: p é condição necessária e
suﬁciente para q e q é condição necessária e suﬁciente para p.

A tabela abaixo nos permite veriﬁcar todas as possibilidades de resultado para a

condicional p ↔ q. Denominada tabela-verdade da proposição p ↔ q.

Capítulo 6. Sobre a necessidade de criar solidariedade lógica para exempliﬁcar o “Se..., então” e o “Se e
103
somente se” através dos circuitos lógicos

Tabela 69 – Tabela-verdade da p ↔ q

p
q
V V
V F
F V
F F

p ↔ q
V
F
F
V

Fonte – O autor, 2019.

Exemplo 25.

1.

2.

Tabela 70 – Exemplo 10.1

Proposição
24 é múltiplo de 3
6 é ímpar
24 é múltiplo de 3 se, e somente se, 6 é ímpar.

Valor lógico
Verdadeiro
Falso
Falso

p
q
p ↔ q

Fonte – O autor, 2019.

Tabela 71 – Exemplo 10.2

Valor lógico
Verdadeiro
Verdadeiro
p ↔ q Todo quadrado é retângulo se, e somente se, 4+2 > 3. Verdadeiro

Proposição
Todo quadrado é retângulo.
4+2 > 3

p
q

Fonte – O autor, 2019.

Após a deﬁnição dos conectivos, sugerimos algumas atividades que permitam uma
melhor compreensão do signiﬁcado lógico desses conectivos, seguido da validação de tais
atividades.

Proposta 1: Esta proposta de atividade leva em consideração o domínio relativo do
software pelo aluno, que deverá construir um circuito a partir da equivalência p → q ⇐⇒
∼ p ∨ q proposta pelo professor. Para turmas mais avançadas o professor pode sugerir
circuitos mais complexos.

Espera-se que o aluno não encontre muita diﬁculdade, pois já terá sido trabalhado

a montagem de circuitos em atividades anteriores.

Capítulo 6. Sobre a necessidade de criar solidariedade lógica para exempliﬁcar o “Se..., então” e o “Se e
104
somente se” através dos circuitos lógicos

A intenção é a veriﬁcação de que ambas proposições são equivalentes, mostrando a

possibilidade da construção de um circuito com o mesmo sentido lógico da condicional.

A proposta pode seguir o seguinte roteiro:

1. Construir o circuito para a proposição ∼ p ∨ q.

Figura 53 – Construção do circuito executado pela expressão ∼ p ∨ q no LogicCircuit

Fonte – O autor, 2019.

2. Fazer a simulação do circuito no software.

Capítulo 6. Sobre a necessidade de criar solidariedade lógica para exempliﬁcar o “Se..., então” e o “Se e
105
somente se” através dos circuitos lógicos

Figura 54 – Simulação 1

Fonte – O autor, 2019.

Figura 55 – Simulação 1

Fonte – O autor, 2019.

Capítulo 6. Sobre a necessidade de criar solidariedade lógica para exempliﬁcar o “Se..., então” e o “Se e
106
somente se” através dos circuitos lógicos

Figura 56 – Simulação 3

Fonte – O autor, 2019.

Figura 57 – Simulação 4

Fonte – O autor, 2019.

3. Após a simulação, pedir ao aluno que construa a tabela-verdade referente a proposição

dada.

Com isso, espera-se que o aluno consiga perceber a equivalência p → q ⇐⇒ ∼ p ∨ q
de maneira prática.

Capítulo 6. Sobre a necessidade de criar solidariedade lógica para exempliﬁcar o “Se..., então” e o “Se e
107
somente se” através dos circuitos lógicos

Proposta 2: É uma proposta que procura deduzir a equivalência p ↔ q ⇐⇒ (∼
p ∨ q) ∧ (p ∨ ∼ q), montar o circuito, construir a tabela e comparar o resultado com a
tabela-verdade da bicondicional.

Esta atividade deve ser realizada quando o professor avaliar pedagogicamente que
a proposta 1 foi bem sucedida, caso contrário, haverá necessidade de realizar a proposta 1
novamente, uma vez que o atual exercício procura encontrar uma equivalência lógica para
bicondicional baseado na atividade anterior.

A proposta pode seguir o seguinte roteiro:

1. Construir o circuito para a proposição (∼ p ∨ q) ∧ (p ∨ ∼ q).

Figura 58 – Construção do circuito executado pela expressão (∼ p ∨ q) ∧ (p ∨ ∼ q) no

LogicCircuit

Fonte – O autor, 2019.

2. Fazer a simulação do circuito no software.

Capítulo 6. Sobre a necessidade de criar solidariedade lógica para exempliﬁcar o “Se..., então” e o “Se e
108
somente se” através dos circuitos lógicos

Figura 59 – Simulação 1

Fonte – O autor, 2019.

Figura 60 – Simulação 2

Fonte – O autor, 2019.

Capítulo 6. Sobre a necessidade de criar solidariedade lógica para exempliﬁcar o “Se..., então” e o “Se e
109
somente se” através dos circuitos lógicos

Figura 61 – Simulação 3

Fonte – O autor, 2019.

Figura 62 – Simulação 4

Fonte – O autor, 2019.

3. Após a simulação, pedir ao aluno que construa a tabela-verdade referente a proposição

dada.

Analogamente a proposta anterior, espera-se que o aluno consiga perceber a equiva-
lência p ↔ q ⇐⇒ (∼ p ∨ q) ∧ (p ∨ ∼ q) de maneira prática.

Capítulo 6. Sobre a necessidade de criar solidariedade lógica para exempliﬁcar o “Se..., então” e o “Se e
110
somente se” através dos circuitos lógicos

Proposta 3: É uma proposta que requer um raciocínio lógico formal mais apurado,

pois procura determinar a negação para condicional e bicondicional.

Pode-se implementar a negação da condicional e da bicondicional aplicando as
regras de DE MORGAN, trabalhadas na atividade 9 da seção anterior. Tais equivalências
estão presentes nas propostas 1 e 2. É importante que o professor solicite a construção dos
circuitos referentes as negações das equivalências para que o aluno veriﬁque na prática a
negação destes conectivos.

7 VALIDAÇÃO DA PROPOSTA CONTIDA NESTA PESQUISA

111

No primeiro momento foi pensado uma apresentação que auxiliasse o professor na
dinamização do conteúdo de lógica apresentado no ensino médio que fugisse da tradicional
análise das tabelas-verdade e de problemas associados à linguagem. Concluída esta etapa,
a necessidade de validação da proposta se fez presente. Como foi feito a validação?

(1) Apresentação de uma oﬁcina no Festival da Matemática (FESTMAT) do Colégio

Pedro II.

(2) Oﬁcina com 29 alunos do curso de informática do ensino médio integrado do

Colégio Pedro II.

A oﬁcina no FESTMAT iniciou-se com uma sucinta apresentação sobre como o tema
foi escolhido, e em seguida, como tradicionalmente aprendemos e ensinamos os conectivos
no curso de lógica. Foi dada palavra aos alunos presentes cujas falas foram ao encontro
dos resultados apresentados sobre uma pequena pesquisa feita com alunos da 2º série
do curso de informática do ensino médio integrado do Colégio Pedro II. Esta entrevista
abordou o que os estudantes achavam sobre o ensino de lógica e o seu desenvolvimento na
matriz curricular. As principais respostas foram: (1) o tema é ensinado via decoreba de
tabelas-verdades, (2) tema visto como complicado e (3) temática que dá margem a má
interpretação e confusão em relação à compreensão plena do assunto, pois os signiﬁcados
das conjunções em lógica divergem das conjunções da língua portuguesa. Foi explicado
aos participantes qual a proposta da pesquisa, destacando seus três principais pontos:
trazer mais dinamismo ao conteúdo, associação com a metodologia STEM e exercício e
desenvolvimento da criatividade. A primeira etapa da oﬁcina foi ﬁnalizada com a deﬁnição
de circuitos lógicos, suas aplicações e a apresentação do programa LogicCircuit.

Na segunda etapa foram escolhidas 5 atividades e uma atividade desaﬁo. Essas
atividades foram implementadas a partir de uma sequencia de problemas oriundos de
tabelas-verdade pré deﬁnidas. O último problema trouxe da vida real um problema a ﬁm
de que os alunos o modelassem (atividade 10 já apresentada aqui).

Já a oﬁcina com os 29 alunos do curso de informática seguiu a mesma abordagem
da oﬁcina do FESTMAT, porém ao ﬁnal da oﬁcina separamos um momento para reﬂexão
junto com os alunos e se chegou a seguinte conclusão em relação a prática das atividades:

(1) Facilidade na compreensão do softwar

Capítulo 7. Validação da proposta contida nesta pesquisa

112

Tabela 72 – Pergunta 1

Nível de diﬁculdade Número de alunos

Muito fácil
Fácil
Médio
Difícil
Muito difícil
Total

0
28
0
1
0
28

Fonte – O autor, 2019.

(2) Reconhecimento dos símbolos e associação com os conectivos

Tabela 73 – Pergunta 2

Nível de diﬁculdade Número de alunos

Muito fácil
Fácil
Médio
Difícil
Muito difícil
Total

26
2
0
0
0
28

Fonte – O autor, 2019.

(3) Relacionamento com a tabele-verdade

Tabela 74 – Pergunta 3

Nível de diﬁculdade
Muito fácil
Fácil
Médio
Difícil
Muito difícil
Não entendeu o que foi perguntado
Total

Número de alunos
0
20
5
0
0
1
28

Fonte – O autor, 2019.

(4) Reconhecimento da saída de portas lógicas

Capítulo 7. Validação da proposta contida nesta pesquisa

113

Tabela 75 – Pergunta 4

Nível de diﬁculdade Número de alunos

Muito fácil
Fácil
Médio
Difícil
Muito difícil
Não respondeu
Total

0
4
19
5
0
1
28

Fonte – O autor, 2019.

(5) Possibilidade de redução do circuito à circuitos mais simples

Tabela 76 – Pergunta 5

Nível de diﬁculdade Número de alunos

Muito fácil
Fácil
Médio
Difícil
Muito difícil
Total

5
20
1
3
0
28

Fonte – O autor, 2019.

(6) Associação com funções booleanas: Como os alunos foram introduzidos ao
conteúdo através das oﬁcinas, todos escreveram não ter tido conhecimento do tema na
justiﬁcativa, após terem assinalado não observado.

(7) Observações mais relevantes: A matéria teria sido muito mais assimilada

caso tivesse sido dada no formato dessas atividades.

Capítulo 7. Validação da proposta contida nesta pesquisa

114

Figura 63 – FESTMAT CP2

Fonte – Cartaz FESTMAT

Capítulo 7. Validação da proposta contida nesta pesquisa

115

Figura 64 – Apresentação da oﬁcina no FESTMAT

Fonte – O autor, 2019.

Figura 65 – Apresentação da oﬁcina no FESTMAT

Fonte – O autor, 2019.

Capítulo 7. Validação da proposta contida nesta pesquisa

116

Figura 66 – Apresentação da oﬁcina no FESTMAT

Fonte – O autor, 2019.

8 CONSIDERAÇÕES FINAIS

117

Num primeiro momento foi pensado em escrever um trabalho que contribuísse
para o ensino e aprendizagem da lógica matemática no ensino médio de uma maneira
diferente da abordada tradicionalmente, porém após uma detalhada revisão bibliográﬁca
nas tradicionais bases de dados que guardam os textos e produções acadêmicas na área,
encontra-se um certo numero de materiais muito criativos e interessantes, porém o que
embasa o desenvolvimento didático do conteúdo proposto ao estudo desta pesquisa era
sempre o mesmo ou com o mesmo pano de fundo.

A procura de uma atitude não passiva do aluno frente ao desenvolvimento e a
aprendizagem do tema incentivou a busca de uma metodologia ativa que proporcionasse
estabelecer conexão entre diversas áreas do conhecimento humano. Assim, as estruturas
algébricas, a Física, a eletrônica digital, a lógica de primeira ordem, a álgebra booleana,
a história de matemática e porque não as artes/design em momentos de delinear um
circuito, estiveram presentes neste trabalho. Este enlace, ilustra e caracteriza bem as
potencialidades da metodologia STEM para salas de aula da educação básica.

O movimento STEM contribuiu bastante para a realização desta pesquisa. Na
verdade, é uma agregação de metedologias e apropriações de saberes e pensares próprios de
cada área do conhecimento citadas para promover o desenvolvimento intelectual-cientíﬁco,
ético, social, estético e político dos alunos na modernidade em que vivem.

O estudo dos conectivos básicos e da lógica básica de primeira ordem voltados
para esta proposta atingiram os objetivos esperados e todas as atividades propostas foram
pensadas num crescente nível de diﬁculdade, além de dialogar diretamente com o referencial
teórico escolhido. Tal fato ocorreu tanto em relação ao referencial que sustentou a lógica
matemática quanto aos aspectos algébricos que sustentam matematicamente a teoria, a
história da matemática e a eletrônica digital. Esta vista aqui, como a grande cereja do
bolo.

Como as atividades foram desenvolvidas e aplicadas para um grupo de alunos que
cursam um ensino médio técnico em informática, tanto nos encontros presenciais quanto
nos retornos de suas impressões pessoais (através das auto avaliações e nas atividades
mais complexas apresentadas no Festival da Matemática do Colégio Pedro II), os alunos
sinalizaram grande ganho de aprendizagem. Alunos repetentes (02) ou alunos em cursos
mais avançados (09) chegaram aﬁrmar que a compreensão concreta do tema só se deu a
partir da experimentação em laboratório, o que ratiﬁcou o que foi hipótese deste trabalho.

Dos 29 alunos deste ensino médio técnico em informática participantes das oﬁci-
nas, cerca de 78 % desejam continuar seus estudos na área. Indecisos ainda sobre qual

Capítulo 8. Considerações Finais

118

carreira especíﬁca, mas todos ﬂutuando entre Informática, Ciência da Computação ou
Engenharia de Sistemas e Computação, os alunos viram nas atividades a possibilidade de
expandirem conhecimento e não verem o tema como um amontoado de tabelas ou mesmo
de procedimentos que precisam ser decorados.

A compilação destas avaliações incentivou a procura e a análise das grades cur-
riculares destes cursos de graduação citados. Os alvos foram as instituições públicas no
município do Rio de Janeiro e sua região metropolitana, uma vez que nenhum aluno
sinalizou desejo em cursar o nível superior fora desta área. Todos os cursos das instituições
estudadas (UFRJ, UERJ, UFF, CEFET, UNIRIO e UFRRJ) possuem a disciplina Lógica
Matemática ou Circuitos Lógicos ou Lógica ou Álgebra Booleana em seus cursos, fato este
que ratiﬁca a importância de dar uma signiﬁcação mais concreta a esta aprendizagem no
ensino médio, principalmente se levarmos em consideração a complexidade do tema e os
aspectos cognitivos que caracterizam adolescentes e jovens adultos que são expostos ao
tema ainda na educação básica.

Espera-se com este trabalho incentivar os professores da área e aos professores de
matemática que têm a oportunidade de desenvolver em sala de aula este assunto. Deseja-se
que a produção de outros tantos materiais embasados na metodologia STEM a ﬁm de que
o aluno se aproprie deste conhecimento de maneira mais signiﬁcativa sejam propostos,
que as temáticas sejam incentivadoras para a procura de soluções em grupo e para o
desenvolvimento de projetos que permitam dar acima de tudo autonomia para o aluno
e desenvolver plenamente sua criticidade, a partir de diferentes olhares que este aluno
adquirirá frente a uma mesma temática.

REFERÊNCIAS

119

ALENCAR, E. de F. Iniciação à Lógica Matemática. 3. ed. São Paulo: Nobel, 2011.

BRIGHENTI, J.; BIAVATTI, V. T.; SOUZA, T. R. de. Medodologias de ensino-
aprendizagem: uma abordagem sob a percepção dos alunos. Revista Gestão Universi-
tária na América Latina, Florianópolis, v. 8, n. 3, p. 281–304, set. 2015. Disponível em:
<https://periodicos.ufsc.br/index.php/gual/article/view/34582>. Acesso em: 27 ago 2019.

CAPUANO, F. G. Sistemas Digitais: circuitos combinacional e sequenciais. 1. ed.
São Paulo: Érica, 2014.

DAGHLIAN, J. Lógica e Álgebra de Boole. 4. ed. São Paulo: Atlas S.A, 2006.

EDUCAÇÃO. Competências STEM: a nova fronteira do ensino e da
aprendizagem. 2019. Disponível em: <https://desaﬁosdaeducacao.grupoa.com.br/
competencias-stem-a-nova-fronteira-do-ensino/>. Acesso em: 10 abr 2019.

EDUCANDO. Stem Brasil: Inovação para as Escolas Públicas. 2019. Disponível
em: <https://educando.org/stembrasil/>. Acesso em: 27 abr 2019.

FREIRE, J. F.; LEMOS, J. F. de. Imperativos de conduta juvenil no século xxi: a “geração
digital” na mídia impressa brasileira. Comunicação, mídia e consumo, São Paulo,
v. 5, n. 13, p. 11–25, jul. 2008. Disponível em: <http://revistacmc.espm.br/index.php/
revistacmc/article/view/124/125>. Acesso em: 10 ago 2019.

GERSTING;, J. L. Fundamentos Matemáticos para a Ciência da Computação:
um tratamento moderno de matemática discreta. 5. ed. Rio de Janeiro: Tradução:
Valéria de Magalhães Iório - LTC, 2010.

GÜNTZEL, J. L.; NASCIMENTO, F. A. do. Álgebra booleana e circuitos lógicos. Uni-
versidadee Federal de Santa Catarina, Santa Catarina, v. 1, n. 2, p. 2–41, mar. 2001.
Disponível em: <http://www.inf.ufsc.br/~j.guntzel/isd/isd.html>. Acesso em: 20 out
2019.

IEZZI, C. M. G. Fundamentos de Matemática Elementar, 1: conjuntos e funções.
9. ed. São Paulo: LTC, 2013.

LEGO®EDUCATION. 2019. Disponível em: <https://tecnologia.educacional.com.br/
project/lego-education/>. Acesso em: 5 maio 2019.

LIMA, V. V. Espiral construtivista: uma metodologia ativa de ensino-aprendizagem.
Interface (Botucatu), São Paulo, v. 21, n. 61, p. 421–434, out. 2016. Disponí-
vel em: <http://www.scielo.br/scielo.php?pid=S1414-32832017000200421&script=sci_
abstract&tlng=pt>. Acesso em: 5 out 2019.

LOPES, T. B. et al. Atividades de campo e steam: possíveis interações na construção
de conhecimento em visita ao parque mãe bonifácia em cuiabá-mt. Reviata Reamec,
Cuiabá, v. 5, n. 2, p. 1–20, jul./dez. 2017. Disponível em: <http://periodicoscientiﬁcos.
ufmt.br/ojs/index.php/reamec/article/view/5739>. Acesso em: 20 set 2019.

Referências

120

PARK, N.; KO, Y. Métodos de ensino-aprendizagem da educação por computador usando
linguagem de programação educacional baseada na educação steam. Conferência Interna-
cional IFIP sobre Redes e Computação Paralela, v. 7513, n. 1, p. 320–327, jul./dez.
2012. Disponível em: <https://link.springer.com/chapter/10.1007/978-3-642-35606-3_
38>. Acesso em: 17 out 2019.

PIMENTA, T. C. Circuitos Digitais: análise e síntese lógica: aplicações em FGPA.
1. ed. Rio de Janeiro: Elsevier, 2017.

PUGLIESE, G. O. Os Modelos Pedagógicos de Ensino de Ciências em Dois
Programas Educacionais Baseados em STEM (Science, Technology, Enginee-
ring and Mathematics). 2017. Dissertação (Mestrado) — Universidade Estadual de
Campinas, São Paulo, 2017.

SILVA, P. da. Uso do Programa STEM como Alternativa de Aprendizagem para
Alunos de 9º Ano em Escola Pública e Privada da Rede de Ensino de Joinville -
Santa Catarina. 2017. Artigo (Especialização) - Universidade Federal de Santa Catarina,
programa de especialização em Ciência e Tecnologia, Joinville, 2017. Disponível em:
<https://repositorio.ufsc.br/handle/123456789/182217?show=full>. Acesso em: 20 out
2019.

APÊNDICE A – GABARITO DA ATIVIDADE 1

121

Resultados da simulação do circuito.

(a) Linha 1: 0 . 0 = 0

Figura 67 – Resultado simulação atividade 1: linha 1

Fonte – O autor, 2019

(b) Linha 2: 0 . 1 = 0

Figura 68 – Resultado simulação atividade 1: linha 2

Fonte – O autor, 2019.

APÊNDICE A. Gabarito da Atividade 1

122

(c) Linha 3: 1 . 0 = 0

Figura 69 – Resultado simulação atividade 1: linha 3

Fonte – O autor, 2019.

(d) Linha 4: 1 . 1 = 1

Figura 70 – Resultado simulação atividade 1: linha 4

Fonte – O autor, 2019.

APÊNDICE B – GABARITO DA ATIVIDADE 2

123

Resultados da simulação do circuito.

(a) Linha 1: 0 + 0 = 0

Figura 71 – Resultado simulação atividade 2: linha 1

Fonte – O autor, 2019.

(b) Linha 2: 0 + 1 = 1

Figura 72 – Resultado simulação atividade 2: linha 2

Fonte – O autor, 2019.

APÊNDICE B. Gabarito da Atividade 2

124

(c) Linha 3: 1+ 0 = 1

Figura 73 – Resultado simulação atividade 2: linha 3

Fonte – O autor, 2019.

(d) Linha 4: 1 + 1 = 1

Figura 74 – Resultado simulação atividade 2: linha 4

Fonte – O autor, 2019.

APÊNDICE C – GABARITO DA ATIVIDADE 3

125

Resultados da simulação do circuito.

(a) Linha 1: 0’ = 1

Figura 75 – Resultado simulação atividade 3: linha 1

Fonte – O autor, 2019.

(b) Linha 2: 1’ = 0

Figura 76 – Resultado simulação atividade 3: linha 2

Fonte – O autor, 2019.

APÊNDICE D – GABARITO DA ATIVIDADE 4

126

1. Resultados da simulação do circuito.

(a) Linha 1: 0 . 0 . 0 = 0

Figura 77 – Resultado simulação atividade 4: linha 1

Fonte – O autor, 2019.

(b) Linha 2: 0 . 0 . 1 = 0

Figura 78 – Resultado simulação atividade 4: linha 2

Fonte – O autor, 2019.

APÊNDICE D. Gabarito da Atividade 4

127

(c) Linha 3: 0 . 1 . 0 = 0

Figura 79 – Resultado simulação atividade 4: linha 3

Fonte – O autor, 2019.

(d) Linha 4: 0 . 1 . 1 = 0

Figura 80 – Resultado simulação atividade 4: linha 4

Fonte – O autor, 2019.

(e) Linha 5: 1 . 0 . 0 = 0

APÊNDICE D. Gabarito da Atividade 4

128

Figura 81 – Resultado simulação atividade 4: linha 5

Fonte – O autor, 2019.

(f) Linha 6: 1 . 0 . 1 = 0

Figura 82 – Resultado simulação atividade 4: linha 6

Fonte – O autor, 2019.

(g) Linha 7: 1 . 1 . 0 = 0

APÊNDICE D. Gabarito da Atividade 4

129

Figura 83 – Resultado simulação atividade 4: linha 7

Fonte – O autor, 2019.

(h) Linha 8: 1 . 1 . 1 = 1

Figura 84 – Resultado simulação atividade 4: linha 8

Fonte – O autor, 2019.

2. Tabela-verdade para a proposição a ∧ (b ∧ c).

APÊNDICE D. Gabarito da Atividade 4

130

Tabela 77 – a ∧ (b ∧ c)

a
c
b
V V V
V V F
V F V
V F F
F V V
F V F
F F V
F F F

b ∧ c
V
F
F
F
F
F
F
F

a ∧ (b ∧ c)
V
F
F
F
F
F
F
F

Fonte – O autor, 2019.

APÊNDICE E – GABARITO DA ATIVIDADE 5

131

1. Resultados da simulação do circuito.

(a) Linha 1: 0 . (0 + 0) = 0

Figura 85 – Resultado simulação atividade 5: linha 1

Fonte – O autor, 2019.

(b) Linha 2: 0 . (0 + 1) = 0

Figura 86 – Resultado simulação atividade 5: linha 2

Fonte – O autor, 2019.

APÊNDICE E. Gabarito da Atividade 5

132

(c) Linha 3: 0 . (1 + 0) = 0

Figura 87 – Resultado simulação atividade 5: linha 3

Fonte – O autor, 2019.

(d) Linha 4: 0 . (1 + 1) = 0

Figura 88 – Resultado simulação atividade 5: linha 4

Fonte – O autor, 2019.

(e) Linha 5: 1 . (0 + 0) = 0

APÊNDICE E. Gabarito da Atividade 5

133

Figura 89 – Resultado simulação atividade 5: linha 5

Fonte – O autor, 2019.

(f) Linha 6: 1 . (0 + 1) = 1

Figura 90 – Resultado simulação atividade 5: linha 6

Fonte – O autor, 2019.

(g) Linha 7: 1 . (1 + 0) = 1

APÊNDICE E. Gabarito da Atividade 5

134

Figura 91 – Resultado simulação atividade 5: linha 7

Fonte – O autor, 2019.

(h) Linha 8: 1 . (1 + 1) = 1

Figura 92 – Resultado simulação atividade 5: linha 8

Fonte – O autor, 2019.

2. Tabela-verdade para a expressão: a · (b + c).

APÊNDICE E. Gabarito da Atividade 5

135

Tabela 78 – a · (b + c)

a
0
0
0
0
1
1
1
1

b
0
0
1
1
0
0
1
1

c
0
1
0
1
0
1
0
1

b + c
0
1
1
1
0
1
1
1

a · (b + c)
0
0
0
0
0
1
1
1

Fonte – O autor, 2019

3. Tabela-verdade para a proposição: a ∧ (b ∨ c).

Tabela 79 – a ∧ (b ∨ c)

a
c
b
V V V
V V F
V F V
V F F
F V V
F V F
F F V
F F F

b ∨ c
V
V
V
F
V
V
V
F

a ∧ (b ∨ c)
V
V
V
F
F
F
F
F

Fonte – O autor, 2019

APÊNDICE F – GABARITO DA ATIVIDADE 6

136

1. Determinação da expressão booleana do circuito dado.

Figura 93 – Circuito atividade 6

Fonte – O autor, 2019.

2. Tabela-verdade para expressão booleana: a + (b0 · c).

Tabela 80 – a + (b0 · c)

a
0
0
0
0
1
1
1
1

b
0
0
1
1
0
0
1
1

c
0
1
0
1
0
1
0
1

b0
1
1
0
0
1
1
0
0

b0 · c
0
1
0
0
0
1
0
0

a + (b0 · c)
0
1
0
0
1
1
1
1

Fonte – O autor, 2019.

3. Resultados da simulação do circuito.

(a) Linha 1: 0 + (0’ . 0) = 0

APÊNDICE F. Gabarito da Atividade 6

137

Figura 94 – Resultado simulação atividade 6: linha 1

Fonte – O autor, 2019.

(b) Linha 2: 0 + (0’ . 1) = 0

Figura 95 – Resultado simulação atividade 6: linha 2

Fonte – O autor, 2019.

(c) Linha 3: 0 + (1’ . 0) = 1

APÊNDICE F. Gabarito da Atividade 6

138

Figura 96 – Resultado simulação atividade 6: linha 3

Fonte – O autor, 2019.

(d) Linha 4: 0 + (1’ . 1) = 0

Figura 97 – Resultado simulação atividade 6: linha 4

Fonte – O autor, 2019.

(e) Linha 5: 1 + (0’ . 0) = 1

APÊNDICE F. Gabarito da Atividade 6

139

Figura 98 – Resultado simulação atividade 6: linha 5

Fonte – O autor, 2019.

(f) Linha 6: 1 + (0’ . 1) = 1

Figura 99 – Resultado simulação atividade 6: linha 6

Fonte – O autor, 2019.

(g) Linha 7: 1 + (1’ . 0) = 1

APÊNDICE F. Gabarito da Atividade 6

140

Figura 100 – Resultado simulação atividade 6: linha 7

Fonte – O autor, 2019.

(h) Linha 8: 1 + (1’ . 1) = 1

Figura 101 – Resultado simulação atividade 6: linha 8

Fonte – O autor, 2019.

4. Tabela-verdade para a proposição: a ∨ (∼ b ∧ c).

APÊNDICE F. Gabarito da Atividade 6

141

Tabela 81 – a ∨ (∼ b ∧ c)

c ∼ b ∼ b ∧ c

b

a
V V V F
V V F
F
V F V V
V F F V
F V V F
F V F
F
F F V V
F F F V

a ∧ (∼ b ∨ c)
V
V
V
V
F
F
V
F

F
F
V
F
F
F
V
F

Fonte – O autor, 2019.

APÊNDICE G – GABARITO DA ATIVIDADE 7

142

(a) É uma tautologia.

1- Expressão booleana e tabela-verdade.

Tabela 82 – a + (b + a0)

a
0
0
1
1

b
0
1
0
1

a0
1
1
0
0

b + a0
1
1
0
1

a + (b + a0)
1
1
1
1

Fonte – O autor, 2019.

2- Conversão para lógica proposicional.

Tabela 83 – a ∨ (b ∨ ∼ a

b ∼ a
a
F
V V
V F
F
F V V
V
F F

b ∨ ∼ a
V
F
V
V

a ∨ (b ∨ ∼ a)
V
V
V
V

Fonte – O autor, 2019.

(b) É uma contingência.

1- Expressão booleana e tabela-verdade.

Tabela 84 – a + (a0 · b0)

a
0
0
1
1

b
0
1
0
1

a0
1
1
0
0

b0
1
0
1
0

a0 · b0
1
0
0
0

a + (a0 · b0)
1
0
1
1

Fonte – O autor, 2019.

2- Conversão para lógica proposicional.

APÊNDICE G. Gabarito da Atividade 7

143

Tabela 85 – a ∨ (∼ a ∧ ∼ b)

b ∼ a ∼ b ∼ a ∧ ∼ b

a
F
V V
V F
F
F V V
V
F F

F
V
F
V

F
F
F
V

a ∨ (∼ a ∧ ∼ b)
V
V
F
V

Fonte – O autor, 2019.

(c) É uma Contradição.

1- Expressão booleana e tabela-verdade.

Tabela 86 – a0 · (a · b0)

a
0
0
1
1

b
0
1
0
1

a0
1
1
0
0

b0
1
0
1
0

a · b0
0
0
1
0

a0 · (a · b0)
0
0
0
0

Fonte – O autor, 2019.

2- Conversão para lógica proposicional.

Tabela 87 – ∼ a ∧ (a ∧ ∼ b)

b ∼ a ∼ b
a
F
F
V V
V
V F
F
F
F V V
V
V
F F

a ∧ ∼ b ∼ a ∧ (a ∧ ∼ b)

F
V
F
F

F
F
F
F

Fonte – O autor, 2019.

APÊNDICE H – GABARITO DA ATIVIDADE 8

144

1. p · (q + r) e (p · q) + (p · r)

2. Tabelas-verdade para as expressões.

Tabela 88 – p · (q + r)

p
0
0
0
0
1
1
1
1

q
0
0
1
1
0
0
1
1

r
0
1
0
1
0
1
0
1

q + r
0
1
1
1
0
1
1
1

p · (q + r)
0
0
0
0
0
1
1
1

Fonte – O autor, 2019.

Tabela 89 – (p · q) + (p · r)

p
0
0
0
0
1
1
1
1

q
0
0
1
1
0
0
1
1

r
0
1
0
1
0
1
0
1

p · q
0
0
0
0
0
0
1
1

p · r
0
0
0
0
0
1
0
1

(p · q) + (p · r)
0
0
0
0
0
1
1
1

Fonte – O autor, 2019.

3. Simulação dos circuitos.

(a) Linha 1: 0 . (0 + 0) = 0 e (0 . 0) + (0 . 0) = 0

APÊNDICE H. Gabarito da Atividade 8

145

Figura 102 – Resultado simulação atividade 8: linha 1

Fonte – O autor, 2019.

(b) Linha 2: 0 . (0 + 1) = 0 e (0 . 0) + (0 . 1) = 0

Figura 103 – Resultado simulação atividade 8: linha 2

Fonte – O autor, 2019.

(c) Linha 3: 0 . (1 + 0) = 0 e (0 . 1) + (0 . 0) = 0

APÊNDICE H. Gabarito da Atividade 8

146

Figura 104 – Resultado simulação atividade 8: linha 3

Fonte – O autor, 2019.

(d) Linha 4: 0 . (1 + 1) = 0 e (0 . 1) + (0 . 1) = 0

Figura 105 – Resultado simulação atividade 8: linha 4

Fonte – O autor, 2019.

(e) Linha 5: 1 . (0 + 0) = 0 e (1 . 0) + (1 . 0) = 0

APÊNDICE H. Gabarito da Atividade 8

147

Figura 106 – Resultado simulação atividade 8: linha 5

Fonte – O autor, 2019.

(f) Linha 6: 1 . (0 + 1) = 1 e (1 . 0) + (1 . 1) = 1

Figura 107 – Resultado simulação atividade 8: linha 6

Fonte – O autor, 2019.

(g) Linha 7: 1 . (1 + 0) = 1 e (1 . 1) + (1 . 0) = 1

APÊNDICE H. Gabarito da Atividade 8

148

Figura 108 – Resultado simulação atividade 8: linha 7

Fonte – O autor, 2019.

(h) Linha 8: 1 . (1 + 1) = 1 e (1 . 1) + (1 . 1) = 1

Figura 109 – Resultado simulação atividade 8: linha 8

Fonte – O autor, 2019.

APÊNDICE I – GABARITO DA ATIVIDADE 9

149

1. Circuitos paras expressões (a + b)0, (a.b)0, a0b0 e a0 + b0.

Figura 110 – Construção do circuito executado pela expressão (a + b)0, (a.b)0, a0b0 e a0 + b0.

Fonte – O autor, 2019.

2. Tabelas-verdade para as expressões:

(a) (a + b)0

Tabela 90 – (a + b)0

a
0
0
1
1

b
0
1
0
1

(a + b)0
1
0
0
0

Fonte – O autor, 2019.

(b) (a.b)0

APÊNDICE I. Gabarito da Atividade 9

150

(c) a0b0

(d) a0 + b0

Tabela 91 – (a.b)0

a
0
0
1
1

b
0
1
0
1

(ab)0
1
1
1
0

Fonte – O autor, 2019.

Tabela 92 – a0b0

a
0
0
1
1

b
0
1
0
1

(a0 · b0)
1
0
0
0

Fonte – O autor, 2019.

Tabela 93 – a0 + b0

a
0
0
1
1

b
0
1
0
1

(a0 + b0)
1
1
1
0

Fonte – O autor, 2019.

APÊNDICE J – GABARITO DA ATIVIDADE 10

151

1.

a: portas estiverem abertas.

b: ignição ligada.

c: farois acesos.

∼ b: ignição desligada.

(a ∧ b)∨ (c ∧ ∼ b)

2.

Tabela 94 – (a ∧ b) ∨ (c ∧ ∼ b)

b

a
c ∼ b
V V V F
F
V V F
V F V V
V F F V
F V V F
F
F V F
F F V V
F F F V

a ∧ b
V
V
F
F
F
F
F
F

c ∧ ∼ b
F
F
V
F
F
F
V
F

(a ∧ b) ∨ (c ∧ ∼ b)
V
V
V
F
F
F
V
F

Fonte – O autor, 2019.

3.

a.b + c. ∼ b

4.

APÊNDICE J. Gabarito da Atividade 10

152

Figura 111 – Construção do circuito no LogicCircuit

Fonte – O autor, 2019.

