UNIVERSIDADE FEDERAL DE SANTA CATARINA
DEPARTAMENTO DE MATEM ´ATICA

Antˆonio Jo˜ao

MODELAGEM DO JOGO LIGHTS OUT USANDO
SISTEMAS LINEARES

Florian´opolis

2016

Antˆonio Jo˜ao

MODELAGEM DO JOGO LIGHTS OUT USANDO
SISTEMAS LINEARES

Disserta¸c˜ao submetida ao Programa
de Mestrado Proﬁssional em Matem´a-
tica para a obten¸c˜ao do Grau de Mes-
tre em Matem´atica com ´area de con-
centra¸c˜ao PROFMAT-UFSC associado
ao Programa de Mestrado Proﬁssio-
nal em Matem´atica em Rede Nacional
(PROFMAT).
Orientadora: Profa. Dra. Maria Inez
Cardoso Gon¸calves

Florian´opolis

2016

Ficha de identiﬁca¸c˜ao da obra elaborada pelo autor, atrav´es do

Programa de Gera¸c˜ao Autom´atica da Biblioteca Universit´aria da UFSC.

Jo~ao, Ant^onio

Modelagem do Jogo Lights Out usando Sistemas Lineares /

Ant^onio Jo~ao; Orientadora, Maria Inez Cardoso Gon¸calves -
Florian´opolis, SC, 2016.

86 p.

Disserta¸c~ao (mestrado profissional) - Universidade Federal

de Santa Catarina, Centro de Ci^encias F´ısicas e Matem´aticas.
Programa de P´os-Gradua¸c~ao em Matem´atica.

Inclui refer^encias.

1.

Matem´atica.

2.

5.

mas Lineares.
II. Universidade Federal de Santa Catarina.
Gradua¸c~ao em Matem´atica.

III. T´ıtulo.

Lights Out.

´Algebra Linear.

Matriz.
I. Gon¸calves, Maria Inez Cardoso.

Siste-

4.

3.

Programa de P´os-

MODELAGEM DO JOGO LIGHTS OUT USANDO
SISTEMAS LINEARES
por
Antˆonio Jo˜ao

Esta Disserta¸c˜ao foi julgada aprovada para a obten¸c˜ao do T´ı-
tulo de “Mestre em Matem´atica”, e aprovada em sua forma ﬁnal pelo
Programa de Mestrado Proﬁssional em Matem´atica.

Prof. Dr. Celso Melchiades Doria
Coordenador do Curso

Banca Examinadora

Profa. Dra. Maria Inez Cardoso Gon¸calves
UFSC
Orientadora

Prof. Dr. Airton Kist
UEPG

Prof. Dr. Celso Melchiades Doria
UFSC

Prof. Dr. Douglas Soares Gon¸calves
UFSC

Florian´opolis, 12 de Maio 2016.

A Minha fam´ılia.

AGRADECIMENTOS

A todos os professores que de certa forma contribu´ıram ao longo
da minha vida acadˆemica para meu crescimento acadˆemico e proﬁssio-
nal, em especial a minha Orientadora, Maria Inez Cardoso Gon¸calves,
pelo empenho dedicado `a elabora¸c˜ao deste trabalho.

A todos os meus amigos.
A CAPES, pela concess˜ao da bolsa de estudos durante a reali-

za¸c˜ao deste trabalho.

Tudo que fa¸co ou medito
Fica sempre na metade
Querendo, quero o inﬁnito.
Fazendo, nada ´e verdade.
Que nojo de mim me ﬁca
Ao olhar para o que fa¸co!
Minha alma ´e l´ucida e rica,
E eu sou um mar de sarga¸co
Um mar onde b´oiam lentos
Fragmentos de um mar de al´em...
Vontades ou pensamentos?
N˜ao o sei e sei-o bem.

Fernando Pessoa

RESUMO

O objetivo deste trabalho ´e o estudo da ´algebra linear aplicada na
modelagem e resolu¸c˜ao do jogo Lights Out. Para tal, faremos uma breve
apresenta¸c˜ao sobre os conceitos b´asicos da ´algebra linear referentes a
resolu¸c˜ao de sistemas lineares. Buscamos aqui modelar um algoritmo
que encontre solu¸c˜oes, bem como solu¸c˜oes ´otimas para o jogo Lights
Out e tamb´em mostrar uma poss´ıvel aplica¸c˜ao matem´atica na educa¸c˜ao
b´asica.
Palavras-chave: ´Algebra Linear. Matriz. Sistemas Lineares. Lights
Out.

ABSTRACT

The objective of this work is the study of linear algebra applied in
modelling and solving the Lights Out game. To do this, we will make
a brief presentation on the basic concepts of linear algebra related to
solving linear systems of equations. Here we seek to model an algorithm
to ﬁnd solutions and optimal solutions for the Lights Out game and also
show a possible mathematical application in basic education.

Keywords: Linear Algebra. Matrix. Linear Systems. Lights Out.

LISTA DE FIGURAS

Figura 1 Vers˜ao f´ısica do jogo Lights Out . . . . . . . . . . . . . . . . . . . . . . . 47
Figura 2 Uma conﬁgura¸c˜ao do Jogo Lights Out . . . . . . . . . . . . . . . . . 48
Figura 3 Associa¸c˜ao das teclas do jogo a n´umeros . . . . . . . . . . . . . . . 48
Figura 4 Pressionando as Teclas x1 e x18 . . . . . . . . . . . . . . . . . . . . . . . . 49
Figura 5 Pressionando a Tecla x8 duas vezes . . . . . . . . . . . . . . . . . . . . 49
Figura 6 Estados das Teclas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50
Figura 7 Um jogo qualquer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50
Figura 8 Pressionando a tecla x7 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
Figura 9 Pressionando a tecla x16 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
Figura 10 Um jogo qualquer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
Figura 11 Um certo jogo. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52
Figura 12 Um jogo sem solu¸c˜ao.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53
Figura 13 Maple R(cid:13) 18 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
Figura 14 Os quatro padr˜oes inalterados . . . . . . . . . . . . . . . . . . . . . . . . . 65
Figura 15 Conﬁgura¸c˜ao do Jogo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
Figura 16 Jogo e sua solu¸c˜ao ´otima . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69
Figura 17 Apagando as Luzes da Primeira Linha . . . . . . . . . . . . . . . . . 70
Figura 18 Caso 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
Figura 19 Estado da ´ultima linha e a tecla a ser pressionada na
primeira linha. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
Figura 20 Caso 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73
Figura 21 Estado da ´ultima linha e sua respectiva conﬁgura¸c˜ao a
ser pressionada na primeira linha . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73
Figura 22 Pressionamento das teclas x1 e x2 ou x4 e x5 . . . . . . . . . . 74
Figura 23 As 24 conﬁgura¸c˜oes n˜ao vi´aveis . . . . . . . . . . . . . . . . . . . . . . . . 74
Figura 24 Estado da ´ultima linha e respectivas teclas a serem pres-
sionadas na primeira linha . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75
Figura 25 Conﬁgura¸c˜ao de um jogo 3 × 3. . . . . . . . . . . . . . . . . . . . . . . . . 78
Figura 26 Solu¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81

SUM ´ARIO

19

1
2

INTRODU ¸C ˜AO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
PRINC´IPIOS B ´ASICOS DA ´ALGEBRA LINEAR
NA RESOLU ¸C ˜AO DE SISTEMAS LINEARES . .
21
MATRIZES E OPERA ¸C ˜OES ELEMENTARES . . . . . . . . . 21
2.1
2.2
SISTEMAS LINEARES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
2.2.1 Sistemas Lineares Homogˆeneos . . . . . . . . . . . . . . . . . . . . 29
2.2.2 Resolu¸c˜ao de Sistemas Lineares . . . . . . . . . . . . . . . . . . . 29
2.3

SUBESPA ¸COS FUNDAMENTAIS ASSOCIADOS A UMA
MATRIZ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35
POSTO E NULIDADE DE UMA MATRIZ . . . . . . . . . . . . . 41
2.4
RELA ¸C ˜OES DE ORTOGONALIDADE . . . . . . . . . . . . . . . . 43
2.5
2.5.1 Subespa¸cos Ortogonais . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
O JOGO LIGHTS-OUT . . . . . . . . . . . . . . . . . . . . . . . .
3
47
MODELO USANDO VETORES . . . . . . . . . . . . . . . . . . . . . . 48
3.1
ALGUMAS OBSERVA ¸C ˜OES INICIAIS . . . . . . . . . . . . . . . . 49
3.2
MODELANDO O JOGO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53
3.3
ALGORITMO PARA A SOLU ¸C ˜AO DO JOGO
4
LIGHTS OUT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
INTRODU ¸C ˜AO AO MAPLE: SISTEMAS LINEARES E
ESCALONAMENTO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
N ´UMERO DE SOLU ¸C ˜OES PARA QUALQUER CON-
FIGURA ¸C ˜AO VI ´AVEL DO JOGO 5 × 5 . . . . . . . . . . . . . . . 62
SOLU ¸C ˜OES ´OTIMAS PARA O JOGO LIGHTS OUT . . 65
RESOLVENDO O JOGO USANDO O M´ETODO DE
PERSEGUI ¸C ˜AO DAS LUZES . . . . . . . . . . . . . . . . . . . . . . . . 70
APLICA ¸C ˜AO AO ENSINO M´EDIO . . . . . . . . . . . . .
5
77
CONSIDERA ¸C ˜OES FINAIS . . . . . . . . . . . . . . . . . . . .
6
83
Referˆencias . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
85

4.3
4.4

4.2

4.1

57

19

1 INTRODU ¸C ˜AO

Este trabalho surgiu da experiˆencia como professor, onde por
muitas vezes se ouve os alunos perguntarem para que serve ou onde
se aplica a ´algebra linear. Desta forma foi escolhido um jogo digital,
intitulado Lights Out, que trataremos por problema de apagar as luzes,
como motiva¸c˜ao para sanar tais d´uvidas dos alunos.

O objetivo principal ser´a, apresentar a teoria necess´aria para
solucionar o jogo, teoria esta que versa sobre a resolu¸c˜ao de sistemas
de equa¸c˜oes lineares, subespa¸cos fundamentais associados a uma matriz,
posto e nulidade de uma matriz e rela¸c˜oes de ortogonalidade.

Uma vez tendo feito tais apresenta¸c˜oes, seguimos para a modela-
gem do jogo, que neste trabalho ´e de ordem 5×5, o que ir´a gerar em sua
modelagem um sistema de equa¸c˜oes lineares de ordem 25 × 25, que de
certa forma causa um pouco de desconforto, pois, sistemas lineares de
ordem elevada s˜ao em geral trabalhosos de serem resolvidos com l´apis
e papel. Para isso utilizaremos o programa computacional Maple R(cid:13) 18,
a ﬁm encontrar a solu¸c˜ao do problema de apagar as luzes.

Salientamos ainda que, como cada tecla do jogo possui apenas
dois estados, acesa ou apagada, que ser´a associados aos n´umeros 1 e 0,
respectivamente. Sendo assim, faz-se necess´ario, que al´em dos conheci-
mentos de ´algebra linear j´a citados, o leitor tamb´em tenha familiaridade
com a aritm´etica em Z2.

Uma vez tendo modelado o problema de apagar as luzes, pode-

remos responder algumas perguntas que surgem naturalmente.

i) Toda conﬁgura¸c˜ao inicial do jogo, possui solu¸c˜ao?

ii) Se uma dada conﬁgura¸c˜ao inicial possui solu¸c˜ao, como devemos

proceder para encontrar a solu¸c˜ao?

iii) Quando h´a solu¸c˜ao para uma certa conﬁgura¸c˜ao, ela ´e ´unica?

iv) Caso n˜ao seja ´unica, ´e poss´ıvel encontrar a solu¸c˜ao que levar´a o
jogo a seu estado ﬁnal com todas as luzes apagadas com o menor
n´umero de teclas pressionadas?

O leitor interessado em testar o algoritmo, bem como jogar o
jogo em outros formatos poder´a baixar os arquivos nos links abaixo,
lembrando que primeiramente o leitor dever´a baixar e instalar o pro-
grama CDF-Player que ´e gratuito para poder jogar e em seguida baixar
o jogo. Para testar o algoritmo o leitor necessitar´a ter o pragrama com-
putacional Maple R(cid:13) 18 instalado em seu computador.

20

1) CDF Player:

http://education.wolfram.com/cdf-player-download.html

2) Jogo Lights Out, vers˜ao CDF Player:

https://discovirtual.ifsc.edu.br/index.php/s/fUJ9cdj7XMKwBFN

3) Algoritmo no Maple:

https://discovirtual.ifsc.edu.br/index.php/s/EYp9ZE3Kg1TVeJ6

A organiza¸c˜ao deste trabalho se d´a da seguinte forma: No Cap´ı-
tulo 2 ´e feita uma breve introdu¸c˜ao aos princ´ıpios b´asicos da ´algebra
linear na resolu¸c˜ao de sistemas lineares, algumas deﬁni¸c˜oes e teoremas
que ser˜ao utilizados nos cap´ıtulos seguintes. Ainda no cap´ıtulo 2 apre-
sentamos os Subespa¸cos fundamentais assossiados a uma matriz, bem
como as rela¸c˜oes de ortogonalidade entre esses subespa¸cos fundamen-
tais.

O Cap´ıtulo 3, inicia apresentando o jogo Lights Out e em seguida
a modelagem para a solu¸c˜ao do jogo. No Cap´ıtulo 4, ´e apresentado o
software Maple R(cid:13) 18 bem como que comandos utilizar para trabalhar
na resolu¸c˜ao de sistemas lineares, em seguida ´e apresentado o algoritmo
para encontar a solu¸c˜ao ´otima de uma conﬁgura¸c˜ao vi´avel do jogo, ´e
mostrado ainda uma m´etodo alternativo para encontrar a solu¸c˜ao do
jogo. No Cap´ıtulo 5, apresentamos uma poss´ıvel aplica¸c˜ao do que foi
apresentado nos cap´ıtulos anteriores para os professores que lecionam
na disciplina de Matem´atica do Ensino M´edio.

21

2 PRINC´IPIOS B ´ASICOS DA ´ALGEBRA LINEAR NA

RESOLU ¸C ˜AO DE SISTEMAS LINEARES

Neste cap´ıtulo apresentaremos alguns conceitos de ´Algebra Li-
near, os quais ser˜ao usados posteriormente para resolver o jogo Lights
Out.

2.1 MATRIZES E OPERA ¸C ˜OES ELEMENTARES

Muitas vezes precisamos organizar algum tipo de informa¸c˜ao em
linhas e colunas formando assim um tipo de tabela, chamadas de ma-
trizes.

Deﬁni¸c˜ao 2.1.1. Uma matriz A ∈ Rm×n ´e um arranjo retangular de
mn n´umeros (reais ou complexos), fun¸c˜oes, ou ainda outras matrizes
arrumados em m linhas e n colunas:

A =

A i-´esima linha de A ´e

a12
a11
a22
a21
...
...
am1 am2








a1n
. . .
a2n
. . .
...
. . .
. . . amn

.








(2.1)

A =

ai1
(cid:2)

A j -´esima coluna de A ´e

ai2

. . . ain

(1 ≤ i ≤ m);

(cid:3)

(1 ≤ j ≤ n).








a1j
a2j
...
amj








Dizemos que A ´e m por n (e escrevemos m × n). Se m = n,
dizemos que A ´e uma matriz quadrada de ordem n e que as entradas
a11, a22, . . . , amn formam a diagonal principal de A e escrevemos,
frequentemente a matriz A na forma

A =

aij
(cid:2)

(cid:3)

(2.2)

22

Vamos nos referir ao n´umero aij, que est´a na i-´esima linha e

j-´esima coluna, como o elemento (i,j) ou o coeﬁciente (i,j) de A.

Deﬁni¸c˜ao 2.1.2. Uma matriz A ∈ Rm×n est´a na forma escada se:

a) Todas as linhas nulas, se existirem, ocorrem abaixo de todas as

linhas n˜ao nulas.

b) O primeiro elemento n˜ao nulo da esquerda para a direita de cada

linha n˜ao nula ´e 1, este elemento ´e chamado de pivˆo.

c) Se as linhas i e i + 1 s˜ao duas linhas sucessivas n˜ao nulas, ent˜ao
o primeiro elemento n˜ao nulo da linha i + 1 est´a `a direita do
primeiro elemento n˜ao nulo da linha i.

Deﬁni¸c˜ao 2.1.3. Uma matriz A ∈ Rm×n est´a na forma escada redu-
zida se:

a) Ela est´a na forma escada.

b) Se uma coluna cont´em o primeiro elemento n˜ao nulo de alguma
linha, ent˜ao os outros elementos desta coluna s˜ao iguais a zero.

Exemplo 2.1.4. Vamos analisar as seguintes matrizes quanto a forma
escada e escada reduzida.

1
A = 
0
0


0
1
0

.

0
7

1


N˜ao est´a na forma escada reduzida, pois n˜ao satisfaz a segunda
condi¸c˜ao de (2.1.3).

1 0
0 1
0 0

A = 



0 0
0 3
1 1





Est´a na forma escada reduzida, uma vez que todas as condi¸c˜oes
de (2.1.3) s˜ao satisfeitas.

a)

b)

c)

1
0
0
0

0 0
1 0
0 1
0 0

1
0
0
0
1 −5
0
0







A = 




Est´a na forma escada reduzida, uma vez que todas as condi¸c˜oes
de (2.1.3) s˜ao satisfeitas.

23

A =

0 0
1 0
0 1
0 0







0 0
0 0
0 0
1 1

0
1

0

5



N˜ao est´a na forma escada, pois n˜ao satisfaz a primeira condi¸c˜ao
de (2.1.2).

d)

e)

1 0
0 2
0 0

0 0
0 0
1 1

A = 



1
0

1


N˜ao est´a na forma escada, pois n˜ao satisfaz a segunda condi¸c˜ao
de (2.1.2).

Deﬁni¸c˜ao 2.1.5. Uma opera¸c˜ao elementar nas linhas de uma matriz
Am×n = [aij] ´e uma das seguintes opera¸c˜oes:

a) Permuta das linhas r e s de A, isto ´e, troca-se ar1, ar2, . . . , arn
por as1, as2, . . . , asn e as1, as2, . . . , asn por ar1, ar2, . . . , arn res-
pectivamente.

b) Multiplica¸c˜ao da r-´esima linha de A por um escalar c 6= 0 , isto ´e,
troca-se ar1, ar2, . . . , arn por car1, car2, . . . , carn respectivamente.

c) Adi¸c˜ao de d vezes a r-´esima linha de A `a s-´esima linha de A, d
´e um escalar n˜ao nulo, isto ´e, troca-se as1, as2, . . . , asn por as1 +
dar1, as2 + dar2, . . . , asn + darn respectivamente.

Qualquer matriz pode ser transformada em uma matriz na forma
escada ou forma escada reduzida usando as opera¸c˜oes elementares.
Mais precisamente podemos multiplicar uma sequˆencia de matrizes in-
vers´ıveis E1, E2, · · · , Ek a uma matriz A de tal forma que R = Ek . . . E1A,
onde U = Ek . . . E1 ´e uma matriz invers´ıvel, visto que ´e um produto de
matrizes invers´ıveis. O leitor poder´a obter mais informa¸c˜oes sobre este
assunto em [Leon].
Teorema 2.1.6. Toda matriz Am×n sobre um corpo1 F ´e equivalente
por linha a uma matriz na forma escada reduzida.

1Segundo [Hoﬀman]: A grosso modo, um corpo F ´e um conjunto munido de algu-

24

Demonstra¸c˜ao. Seja a matriz Am×n sobre um corpo F. Se todo
elemento na primeira linha de A ´e zero, ent˜ao da condi¸c˜ao ”a” da de-
ﬁni¸c˜ao (2.1.5) podemos trocar a linha 1 por outra linha de forma que
a primeira linha tenha elementos diferentes de zero. Se a primeira li-
nha tem um elemento diferente de zero, seja o menor inteiro k tal que
1
a1k 6= 0. Multipliquemos ent˜ao a primeira linha pelo n´umero real
a1k
satisfazendo assim a condi¸c˜ao ”b” com rela¸c˜ao a primeira linha. Agora,
para cada i ≥ 2, adicionamos (−aik) vezes a primeira linha `a i-´esima
linha. Sendo assim, obteremos uma matriz cujo primeiro elemento da
primeira linha ´e 1 e ocorre na k-´esima coluna. Al´em disto, todos os
outros elementos da coluna k s˜ao nulos. Agora seja B a matriz obtida
anteriormente. Se todo elemento na linha 2 ´e nulo, podemos trocar
a linha 2 por outra linha abaixo desta, de forma que a segunda linha
tenha elementos diferentes de zero. Caso haja um elemento diferente
de zero na linha 2, multiplicamos a linha 2 por um escalar de modo que
o primeiro elemento n˜ao nulo seja 1. Para o caso em que a primeira
linha tenha um primeiro elemento n˜ao nulo na coluna k, este primeiro
elemento diferente de zero na segunda linha n˜ao poder´a ocorrer na co-
luna k; digamos que esse elemento aparece na coluna k′ 6= k. Somando
m´ultiplos adequados da linha 2 `as v´arias linhas, podemos fazer com que
todos os elementos na coluna k′ sejam nulos, com exce¸c˜ao do 1 na se-
gunda linha. O fato importante a ser notado ´e que ao efetuarmos estas
´ultimas opera¸c˜oes, n˜ao alteramos os elementos da linha 1 nas colunas
1, . . . , k, al´em disso, n˜ao alteramos nenhum elemento da coluna k. Mas
observe que, se a primeira linha tivesse todos os seus elementos iguais
a zero, as opera¸c˜oes com a linha 2 n˜ao afetariam a primeira linha.

Portanto, trabalhando com uma linha de cada vez como descrito
acima, ﬁca claro que em um n´umero ﬁnito de passos, chegaremos a uma
matriz linha reduzida.

Exemplo 2.1.7. Mostre que a matriz R, dada por

1 0
0 1
0 0

0
7
0 −3
1 −1

,





R = 



que est´a na forma escada reduzida, ´e equivalente por linhas a matriz

mas opera¸c˜oes sobre seus objetos, as quais se comportam como a adi¸c˜ao, subtra¸c˜ao,
multiplica¸c˜ao e divis˜ao usuais de n´umeros no sentido de que elas obdecem `as nove
regras de ´algebra, como por exemplo, a adi¸c˜ao ´e comutativa, a adi¸c˜ao ´e associativa,
etc..

25

.



A,

A = 

1
2
1

1
4
0
0
2
4
3 −1 −1





Resolu¸c˜ao. Observe que, ao somarmos -2 vezes a linha 1 de A `a sua
segunda linha, obtemos a matriz B,

1
0
1

0
1
4
2 −6
0
3 −1 −1

.





B = 



Agora ao somarmos -1 vezes a linha 1 de A `a sua terceira linha, obtemos
a matriz C,

0
1 1
4
0
0 2 −6
0 2 −5 −1

.





C = 



Observe que o primeiro elemento da segunda linha n˜ao ´e 1. Sendo assim
multiplicando a linha 2 por 1

2 obtemos a matriz D

1
0
0

0
1
4
1 −3
0
2 −5 −1

.





D = 



Continuando com as opera¸c˜oes elementares, diminuindo a linha 1 da
linha 2 da matriz D obtemos a matriz E,

1 0
7
0
0
0 1 −3
0 2 −5 −1

.





E = 



Agora, aplicando a seguinte opera¸c˜ao, adicionando -2 vezes a linha 2 `a
linha 3 obtemos a matriz F ,

1
0
0

0
7
1 −3
0

0
0
1 −1

.





F = 



Adicionando agora -7 vezes a linha 3 `a linha 1, obtemos a matriz G,

1 0
0
0 1 −3
0 0

7
0
1 −1

.





G = 



26

E por ´ultimo aplicando a opera¸c˜ao, 3 vezes a linha 3 mais a linha 2 na
matriz G, obtemos a matriz R

1 0
0 1
0 0

0
7
0 −3
1 −1

.





R = 



Observe que segundo a deﬁni¸c˜ao (2.1.3), a matriz R est´a na forma
escada reduzida. Sendo assim, R ´e equivalente por linhas a matriz A.
Quando uma matriz R for equivalente por linhas a uma matriz A,
escreveremos R ∼ A.

Exemplo 2.1.8. Mostre que a matriz R, dada por

R =

1
0
0
0







0 1
1 0
0 1
0 1

.







que est´a na forma escada reduzida, ´e equivalente por linhas a matriz
A,

1
2
1
1 −1 1
2
3
3
2 −1 3



.





A = 




Resolu¸c˜ao. Observe que, ao somarmos -1 vezes a linha 1 de A `a sua
segunda linha, obtemos a matriz B,

B =

1
2 1
0 −3 0
3 3
2
2 −1 3







.







Agora ao somarmos -2 vezes a linha 1 de A `a sua terceira linha, obtemos
a matriz C,

C =

1
2
0 −3
0 −1
2 −1







1
0
1
3

.







J´a ao somarmos -2 vezes a linha 1 de A `a sua quarta linha, obtemos a

27

matriz D,

D =

1
1
2
0 −3 0
0 −1 1
0 −5 1







.







Observe que o primeiro elemento da segunda linha n˜ao ´e 1. Sendo assim
multiplicando a linha 2 por − 1

3 obtemos a matriz E

E =

2 1
1
0
1 0
0 −1 1
0 −5 1







.







Continuando com as opera¸c˜oes elementares, adicionando -2 vezes a li-
nha 2 de A `a sua primeira linha, obtemos a matriz F ,

0
1
0
1
0 −1
0 −5

1
0
1
1

.







F = 




Agora, aplicando a seguinte opera¸c˜ao, adicionando a linha 2 `a linha 3
obtemos a matriz G,

1
0
1
0
1
0
0
1
0
0 −5 1

.







G =







Adicionando agora 5 vezes a linha 3 `a linha 4, obtemos a matriz H,

H =

1 0
0 1
0 0
0 0







1
0
1
1

.







E por ´ultimo aplicando a opera¸c˜ao, -1 vezes a linha 3 mais a linha 1 na
matriz H, obtemos a matriz R

R =

1 0
0 1
0 0
0 0







1
0
1
1

.







28

Ent˜ao, da deﬁni˜ao (2.1.3), a matriz R est´a na forma escada reduzida.
Sendo assim, R ∼ A.

2.2 SISTEMAS LINEARES

Um sistema de equa¸c˜oes lineares com m equa¸c˜oes e n inc´ognitas

´e um conjunto de equa¸c˜oes do tipo:

a11x1 + a12x2 + . . . + a1nxn = b1
a21x1 + a22x2 + . . . + a2nxn = b2
...
...
am1x1 + am2x2 + . . . + amnxn = bm

...

...

...

,

(2.3)

em que aij , 1 ≤ i ≤ m e 1 ≤ j ≤ n, s˜ao todos n´umeros reais.

Uma solu¸c˜ao do sistema linear (2.3) ´e um conjunto de n n´umeros
s1, s2, . . . , sn, com a propriedade de que cada uma das m equa¸c˜oes
em (2.3) ser´a satisfeita quando ﬁzermos a substitui¸c˜ao x1 = s1, x2 =
s2, . . . , xn = sn.

Chamando

A =

a11
a12
a21
a22
...
...
am1 am2








. . .
a1n
. . .
a2n
...
. . .
. . . amn








, x =

x1
x2
...
xm








b1
b2
...
bm








e b =








o sistema (2.3) pode ser representado por



a12
a11
a22
a21
...
...
am1 am2





ou seja, Ax = b.

a1n
. . .
a2n
. . .
...
. . .
. . . amn








x1
x2
...
xm








=








b1
b2
...
bm








,








,








(2.4)

(2.5)

2.2.1 Sistemas Lineares Homogˆeneos

Um sistema linear da forma

a11x1 + a12x2 + . . . + a1nxn = 0
a21x1 + a22x2 + . . . + a2nxn = 0
...
am1x1 + am2x2 + . . . + amnxn = 0

...

...

...

...

29

(2.6)

´e chamado sistema linear homogˆeneo. O sistema (2.6) escrito na forma
matricial ﬁca:

A solu¸c˜ao

Ax = 0.

x1 = x2 = · · · = xn = 0

(2.7)

(2.8)

do sistema homogˆeneo (2.7), ´e chamada de solu¸c˜ao trivial. Uma solu¸c˜ao
x1, x2, . . . , xn de um sistema homogˆeneo, onde nem todos os xi s˜ao
nulos ´e dita uma solu¸c˜ao n˜ao trivial. Desta forma, um sistema linear
homogˆeneo sempre possui solu¸c˜ao, uma vez que sempre tem a solu¸c˜ao
trivial.

Apresentamos a seguir dois exemplos, a ﬁm de exempliﬁcar a sua

resolu¸c˜ao e suas solu¸c˜oes.

2.2.2 Resolu¸c˜ao de Sistemas Lineares

O que vimos na se¸c˜ao anterior ser´a aplicado na resolu¸c˜ao de

sistemas lineares.

Teorema 2.2.1. Sejam Ax = b e Cx = d dois sistemas lineares de
m equa¸c˜oes e n inc´ognitas. As matrizes [A |b] e [C |d] s˜ao chamadas
matrizes aumentadas dos sistemas Ax = b e Cx = d, respectivamente.
Se as matrizes aumentadas desses sistemas s˜ao equivalentes por linha,
ent˜ao os dois sistemas tˆem exatamente as mesmas solu¸c˜oes.

A demonstra¸c˜ao do teorema (2.2.1) pode ser encontrada em [An-

ton].

Corol´ario 2.2.2. Sejam A e C matrizes m × n equivalentes por linha.
Ent˜ao os sistemas lineares Ax = 0 e Cx = 0, possuem exatamente as
mesmas solu¸c˜oes.

Demonstra¸c˜ao. Formando a matriz aumentada de cada sistema obte-
mos [A|0] e [C |0]. Ent˜ao do teorema (2.2.1) ambos os sistemas possuem

30

a mesma solu¸c˜ao.

Um dos m´etodos utilizados para resolver sistemas lineares do
tipo Ax = b ´e conhecido como redu¸c˜ao de Gauss-Jordan (ou sim-
plesmente elimina¸c˜ao Gaussiana). Os passos do algoritmo s˜ao dados a
seguir:

i) Dado um sistema linear Ax = b, construa a matriz aumentada

[A |b] do sistema.

ii) Reduza a matriz aumentada a uma matriz na forma escada redu-

zida, usando opera¸c˜oes elementares nas linhas de A.

iii) Uma vez que se tenha chegado a forma escada reduzida de A,

conclua se o sistema possui ou n˜ao solu¸c˜ao.

Apresentamos a seguir quatro exemplos a ﬁm de exempliﬁcar a

resolu¸c˜ao e solu¸c˜oes de sistemas de equa¸c˜oes lineares.

Exemplo 2.2.3. Resolva o sistema linear, pelo m´etodo de Gauss-
Jordan

3x − y + 12w =

1
x + y − z + 2w = 10
− 3x + z − 10w = −9
6x − 2y + 24w =
2

.

(2.9)

Solu¸c˜ao.
Passo 1. Primeiramente constru´ımos a matriz aumentada do sistema
linear (2.9):

3 −1
1
−3

0
1 −1
0
6 −2

12
2
1 −10
24
0







1
10
−9
2

.







(2.10)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

Passo 2. Veriﬁque que a matriz aumentada (2.10) ´e equivalente por
linhas `a matriz

1 0
0 1
0 0
0 0

0 4
0 0
1 2
0 0







2
5
−3
0

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

.







(2.11)

Observe ainda que, (2.11) est´a na forma escada reduzida.
Passo 3. Sendo assim, o sistema (2.9) pode ser representado por:

x + 4w =
2
y =
5
z + 2w = −3

.

(2.12)

Temos w como vari´avel livre e portanto:

x =
y =
z = −3 − 2w

2 − 4w
5

31

(2.13)

Fazendo w = t com t ∈ R temos que a solu¸c˜ao do sistema linear (2.9)
´e dada por:

2 − 4t
5

x =
y =
z = −3 − 2t
w =

t

.

(2.14)

Como t pode assumir qualquer valor real, o sistema (2.9) possui inﬁnitas
solu¸c˜oes.

Exemplo 2.2.4. Considere o sistema linear homogˆeneo

x − y + z = 0
3x − 2y + z = 0
.
5x + 2y − z = 0

(2.15)

Formando a matriz aumentada desse sistema,

1 −1
3 −2
5

1
1
2 −1

0
0
0



(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
e realizando opera¸c˜oes elementares nas linhas da matriz aumentada,
obtemos a matriz equivalente por linhas:

(2.16)







1
0
0





0 0
1 0
0 1

0
0
0

.





(2.17)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

Observe que a matriz (2.17) est´a na forma escada reduzida. Portanto,
o sistema homogˆeneo dado em (2.15) possui apenas a solu¸c˜ao trivial:

x = y = z = 0.

32

Exemplo 2.2.5. Considere o sistema linear homogˆeneo

x − 2y + 3z = 0
2x + y − z = 0
4x − 3y + 5z = 0

cuja matriz aumentada ´e

1 −2
2 −1
1 −5

3
3
6





que ´e equivalente por linhas a

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

0
0
0

0
0
0

,





.





1 0
1
0 1 −1
0
0 0





(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(2.18)

(2.19)

(2.20)

Observe que a matriz (2.20) est´a na forma escada reduzida. Portanto,
o sistema homogˆeneo dado em (2.18) possui a seguinte solu¸c˜ao: x =
−t, y = t e z = t, sendo t ∈ R.
Exemplo 2.2.6. Resolva o sistema linear em Z2, pelo m´etodo de
Gauss-Jordan

x + y + z − w = 1
+ z − w = 0
x
y + z + w = 1

(2.21)

Solu¸c˜ao
Passo 1. Primeiramente constru´ımos a matriz aumentada do sistema
linear (2.21):

1 1
1 0
0 1

1 −1
1 −1
1
1





1
0
1

.





(2.22)

Passo 2. Adicionando a linha 1 a linha 2 e substituindo na linha 2
obtemos a matriz aumentada (2.23), que ´e equivalente por linhas `a
matriz (2.22)

1
0
0





1 1 −1
0
1 0
1
1 1

1
1
1





(2.23)

Passo 3. Adicionando a linha 2 a linha 3 e substituindo na linha

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

3 obtemos a matriz aumentada (2.24) que ´e equivalente por linhas `a
matriz (2.22)

33

1
0
0





1 1 −1
0
1 0
1
0 1

1
1
0





(2.24)

Passo 4. Adicionando a linha 1 a linha 2 e substituindo na linha
1 obtemos a matriz aumentada (2.25) que ´e equivalente por linhas `a
matriz (2.22)

1
0
0





0 1 −1
0
1 0
1
0 1

0
1
0





(2.25)

Passo 5. Por ´ultimo, adicionando a linha 1 a linha 3 e substituindo
na linha 1 obtemos a matriz aumentada (2.26) que ´e equivalente por
linhas `a matriz (2.22)

1 0
0 1
0 0

0 0
0 0
1 1





0
1
0





(2.26)

Observe ainda que, (2.26) est´a na forma escada reduzida.
Passo 6. Sendo assim, o sistema (2.21) pode ser representado por:

x = 0
y = 1
z + w = 0

Temos w como vari´avel livre e portanto;

x =
0
y =
1
z = −w

(2.27)

(2.28)

Fazendo w = t com t ∈ Z2 temos que a solu¸c˜ao do sistema linear (2.21)
´e dada por:

x =
0
y =
1
z = −t
t
w =

(2.29)

Como t pode assumir apenas os valores 0 ou 1, o sistema (2.21)

possui as seguintes solu¸c˜oes.

34

Solu¸c˜ao 1: fazendo t = 0 temos, x = 0, y = 1, z = 0 e w = 0.
Solu¸c˜ao 2: fazendo t = 1 temos, x = 0, y = 1, z = 1 e w = 1.

Lembre-se que como estamos em Z2 temos, 1 = −1 e

1 + 1 = 1 − 1 = −1 − 1 = 0.

Exemplo 2.2.7. Resolva o sistema linear dado abaixo em Z2, pelo
m´etodo de Gauss-Jordan

x + y + z = 1
x − y − z = 1
− x + y + z = 1
x − y + z = 1

(2.30)

Solu¸c˜ao
Passo 1. Primeiramente constru´ımos a matriz aumentada do sistema
linear (2.30):

1
1
1
1 −1 −1
1
1
1
1 −1

−1







1
1
1
1

.







(2.31)

e realizando opera¸c˜oes elementares nas linhas da matriz aumentada,
obtemos a matriz equivalente por linhas:

1
0
0
0







1 1
0 0
0 0
0 0

1
0
0
0

.







(2.32)

Observe que a matriz (2.32) est´a na forma escada reduzida. Portanto,
o sistema dado em (2.30) possui a seguinte solu¸c˜ao x = 1 − y − z.

Fazendo y = t1 e z = t2 com {t1, t2} ∈ Z2 temos que a solu¸c˜ao

do sistema linear (2.30) ´e dada por:

x = 1 − t1 − t2
y = t1
z = t2

(2.33)

Como t1 e t2 podem assumir apenas os valores 0 ou 1, o sistema

(2.30) possui as seguintes solu¸c˜oes:
Solu¸c˜ao 1: fazendo t1 = t2 = 0 temos, x = 1, y = 0 e z = 0.
Solu¸c˜ao 2: fazendo t1 = 1 e t2 = 0 temos, x = 0, y = 1 e z = 0.
Solu¸c˜ao 3: fazendo t1 = 0 e t2 = 1 temos, x = 0, y = 0 e z = 1.

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

35

Solu¸c˜ao 4: fazendo t1 = t2 = 1 temos, x = 1, y = 1 e z = 1.

2.3 SUBESPA ¸COS FUNDAMENTAIS ASSOCIADOS A UMA MA-

TRIZ

Nesta se¸c˜ao faremos uma breve revis˜ao sobre os quatro subes-
pa¸cos associados a uma matriz Am×n. Tais subespa¸cos s˜ao conhecidos
como subespa¸cos fundamentais. Assumimos que o leitor possua fami-
liaridade com os conceitos de espa¸cos vetoriais, a teoria sobre espa¸cos
vetoriais pode ser encontrada em [Hoﬀman].

A seguir apresentaremos as deﬁni¸c˜oes dos quatro subespa¸cos fun-

damentais e suas rela¸c˜oes com sistemas de equa¸c˜oes lineares.

Seja A uma matriz m × n, cujas entradas s˜ao n´umeros reais;

A =

a12
a11
a22
a21
...
...
am1 am2








a1n
. . .
a2n
. . .
...
. . .
. . . amn








e um vetor x ∈ Rn dado por;

x =

x1
x2
...
xn








.








O produto Ax, pode ser visto como:

(2.34)

(2.35)



,



a1n
a2n
...
amn

a11
a21
...
am1

a12
a22
...
am2









Ax = x1

+ x2

+ · · · + xn

(2.36)















ou seja, o produto Ax resulta em um vetor y ∈ Rm, o qual ´e uma
combina¸c˜ao linear das colunas da matriz A, como podemos ver em
(2.36).
















O espa¸co coluna de A, denotado por col(A), ´e deﬁnido por

col(A) = {y ∈ Rm|y = Ax, para algum x ∈ Rn}.

(2.37)

36

Sendo assim, col(A) ´e um subespa¸co vetorial de Rm, vocˆe poder´a
veriﬁcar isto em [Strang], e comparando sua deﬁni¸c˜ao com (2.36), temos
que o espa¸co coluna de A ´e o conjunto de todas as combina¸c˜oes lineares
das colunas de A, ou ainda, col(A) ´e gerado pelos vetores colunas da
matriz A.

Assim, saber se um dado sistema de equa¸c˜oes lineares Ax = b
possui solu¸c˜ao, ´e equivalente a saber se o vetor b pertence ao espa¸co
coluna de A.

Olhando agora para o subespa¸co gerado por todas as combina-
¸c˜oes lineares das linhas de A, as quais s˜ao as colunas de AT , ´e deﬁnido
o espa¸co linha de A, o qual ´e chamado por row(A),

row(A) = {z ∈ Rn|z = AT x, para algum x ∈ Rm}.

(2.38)

O espa¸co linha de A ´e um subespa¸co de Rn, veja em [Strang].
Temos ainda, que o n´ucleo de A, tamb´em chamado de espa¸co

nulo de A, denotado por N (A) ´e deﬁnido por

N (A) = {x ∈ Rn|Ax = 0}.

(2.39)

Ou seja, N (A) ´e o subespa¸co solu¸c˜ao do sistema linear homogˆeneo
associado `a matriz A, o n´ucleo de A ´e um subespa¸co de Rn, como pode
ser visto em [Strang].

E por ´ultimo temos o n´ucleo de AT , denotado por N (AT ), deﬁ-

nido por

N (AT ) = {z ∈ Rm|AT z = 0},

(2.40)

o qual ´e um subespa¸co de Rm, veja em [Strang].

A seguir faremos uma discuss˜ao de como calcular tais subespa¸cos
e de como eles podem ser usados na resolu¸c˜ao do problema de Apagar as
Luzes. Como vimos na subse¸c˜ao 2.2.2, as opera¸c˜oes elementares sobre
as linhas de uma matriz n˜ao alteram o conjunto solu¸c˜ao de um sistema
homogˆeneo, logo as opera¸c˜oes elementares n˜ao alteram o espa¸co nulo
de A. Temos ent˜ao o seguinte teorema.

Teorema 2.3.1. As opera¸c˜oes elementares sobre linhas n˜ao alteram o
espa¸co nulo de uma matriz A.

Assim, para encontrarmos o n´ucleo de uma matriz, basta resolver
o sistema homogˆeneo associado `a esta matriz, usando o m´etodo da
elimina¸c˜ao gaussiana.

Dada uma matriz A, sabemos que row(A) ´e gerado pelas linhas
de A e col(A) ´e gerado pelas colunas de A, por´em algumas linhas podem
ser linearmente dependentes ou algumas colunas podem ser linearmente

37

dependentes, fazendo com que as respectivas bases para estes subespa-
¸cos apresentem um n´umero menor de vetores do que o n´umero de linhas
ou colunas n˜ao nulas. Sendo assim, como devemos proceder para de-
terminar uma base para col(A) ou row(A) nestes casos? No que segue
faremos uma discuss˜ao sobre este problema.

Com rela¸c˜ao ao espa¸co linha de A, os dois teoremas a seguir nos

mostram como encontrar uma base para row(A).

Teorema 2.3.2. As opera¸c˜oes elementares sobre as linhas n˜ao alteram
o espa¸co linha de uma matriz.

Demonstra¸c˜ao. Sejam A e R matrizes m × n. Se R ´e equivalente
por linhas a matriz A, ent˜ao as linhas de R s˜ao combina¸c˜oes lineares
das linhas de A. Temos ent˜ao que, qualquer combina¸c˜ao linear das
linhas de R, tamb´em ser´a uma combina¸c˜ao linear das linhas de A, logo
row(R) ⊆ row(A). Por outro lado, como as opera¸c˜oes elementares s˜ao
revers´ıveis, as linhas de A s˜ao combina¸c˜oes lineares das linhas de R e
pelo argumento acima, temos que row(A) ⊆ row(R).
Portanto, row(A) = row(R).

Teorema 2.3.3. Seja R uma matriz na forma escada, ent˜ao uma base
para o espa¸co linha de R ´e formada pelas linhas n˜ao nulas de R.

Demonstra¸c˜ao. Seja R uma matriz m × n na forma escada, e

r1, r2, . . . , rp

as suas linhas n˜ao nulas, onde 1 ≤ p ≤ n. Ent˜ao por deﬁni¸c˜ao row(R) =
span{r1, r2, . . . , rp}2. Vamos mostrar a seguir que {r1, r2, . . . , rp} ´e li-
nearmente independente. Para tanto suponha que existam α1, α2, . . . , αp ∈
R tais que

α1r1 + α2r2 + · · · + αprp = 0.

Temos ent˜ao que α1 = 0, pois como R est´a na forma escada, a primeira
entrada n˜ao nula da linha r1 est´a a esquerda da primeira entrada n˜ao
nula das demais linhas.
Temos ent˜ao que:

α2r2 + . . . + αprp = 0,

2Segundo [Leon]: Seja v1, v2, . . . , vn vetores de um espa¸co V. A soma α1v1 +
α2v2 +· · ·+αnvn, onde α1, . . . , αn s˜ao escalares, ´e chamada de combina¸c˜ao linear
de v1, v2, . . . , vn. O conjunto de todas as combina¸c˜oes lineares de v1, v2, . . . , vn ´e
chamada de span de v1, v2, . . . , vn. O span de v1, v2, . . . , vn ser´a denotado por
Span(v1, v2, . . . , vn).

38

novamente, como R est´a na forma escada, temos que α2 = 0.

Continuando com este racioc´ınio, temos que

α1 = α2 = · · · = αp = 0,

o que implica que {r1, r2, . . . , rp} ´e um conjunto linearmente indepen-
dente.

Portanto, para encontrar uma base para o espa¸co linha de uma
matriz A, basta usar a elimina¸c˜ao gaussiana para encontrar uma matriz
R em forma escada. Uma base para row(A) ser´a formada pelas linhas
n˜ao nulas de R.

Exemplo 2.3.4. Encontre uma base para row(A), com A dada abaixo.

3

3

4
1
1 −1 −1 0
3
2

1

1





A = 



Resolu¸c˜ao: Come¸caremos por reduzir a matriz A a forma escada;

3

1
3 4
1 −1 −1 0
1 3
2

1

1
0
0

3 3
4 4
5 5

4
4
5







∼ 





A = 



Ou seja,

1 3
0 1
0 0

3 4
1 1
0 0

1
0
0

0 0
1 1
0 0

1
1
0

.







∼ 





A ∼ 



Sendo assim, a matriz;

1 0
0 1
0 0

0 1
1 1
0 0





R = 



´e equivalente por linhas a matriz A. Temos ent˜ao que uma base para
o espa¸co linha de R ´e o conjunto formado pelas linhas que cont´em os
pivˆos em R, portanto, row(R) = {(1, 0, 0, 1), (0, 1, 1, 1)}, mas sabemos
que row(A) = row(R), ent˜ao row(A) = {(1, 0, 0, 1), (0, 1, 1, 1)}.

J´a para o espa¸co coluna nem sempre acontece o mesmo, ou seja,
se R ´e a forma escada reduzida de uma matriz A, em geral col(A) 6=
col(R). Veja o exemplo abaixo.

39

Exemplo 2.3.5. Seja

observe que

A =

1
1

(cid:20)

2
2 (cid:21)

,

2
2 (cid:21)

(cid:20)

= 2

(cid:20)

1
1 (cid:21)

ou seja, a segunda coluna de A ´e m´ultipla da primeira. Portanto, uma
base para col(A) ´e formada pelo vetor

1
1 (cid:21)

.

(cid:20)

Assim, o espa¸co coluna de A consiste de todos os vetores de R2

da forma

x
x (cid:21)

{

(cid:20)

|x ∈ R}

Escalonando a matriz A, obtemos a matriz

Novamente, observe que

R =

1 2
0 0 (cid:21)

.

(cid:20)

2
0 (cid:21)

(cid:20)

= 2

(cid:20)

1
0 (cid:21)

,

ou seja, a segunda coluna de R ´e m´ultipla da primeira coluna de R.

Assim, uma base para o espa¸co coluna de R ´e formada pelo vetor

1
0 (cid:21)

, ou seja, o espa¸co coluna de R consiste de todos os vetores cuja

(cid:20)
segunda entrada ´e igual a zero. Como podemos observar, col(A) 6=
col(R).

Como j´a vimos, o espa¸co coluna de uma matriz ´e o subespa¸co
gerado pelos vetores coluna da matriz. Assim, para encontrar uma base
para o espa¸co coluna, precisamos descobrir quais dos vetores coluna da
matriz s˜ao linearmente independentes.

Apesar de em geral col(A) 6= col(R), onde R ´e uma matriz em
forma escada equivalente a matriz A, as opera¸c˜oes elementares entre
linhas n˜ao alteram as rela¸c˜oes de dependˆencia linear entre as colunas
de A e as colunas de R, como veremos a seguir.

Lema 2.3.6. Seja R uma matriz m × n na forma escada, ent˜ao as

40

colunas de R que cont´em os pivˆos formam uma base para col(R).

Demonstra¸c˜ao. A demonstra¸c˜ao ´e an´aloga a demonstra¸c˜ao do espa¸co
linha de R, aplicada as colunas de R.

Teorema 2.3.7. Seja A uma matriz m × n e R a matriz em forma
escada a qual ´e equivalente por linhas a matriz A. Se os pivˆos aparecem
nas colunas j1, . . . , jk de R, ent˜ao as correspondentes colunas j1, . . . , jk
de A formam uma base para col(A).

Demonstra¸c˜ao. Denote as colunas de A por C1, . . . , Cn, isto ´e,

A =

C1

. . . Cn

e as colunas de R por C′

(cid:2)
1, . . . , C′
n.

Precisamos mostrar que:

(cid:3)

1) O conjunto {Cj1 , . . . , Cjk } ´e linearmente independente;

2) O conjunto {Cj1 , . . . , Cjk } gera col(A).

Como R ´e equivalente por linhas a matriz A, existe uma matriz

invers´ıvel U tal que R = U A, usando a nota¸c˜ao acima temos que:

Assim,

R = U A = U

C1

. . . Cn

=

U C1

. . . U Cn

.

(cid:2)

(cid:3)

(cid:2)

(cid:3)

C′

j1 = U Cj1 , C′

j2 = U Cj2 , . . . , C′

jr = U Cjr ,

(2.41)

j1 , . . . , C′
j1 , . . . , C′

mas como {C′
jr } consiste das colunas de R que cont´em os pivˆos,
temos que {C′
jr } ´e linearmente independente e como U ´e uma
matriz invers´ıvel, multiplicando (2.41) por U −1 pela esquerda obtemos
{Cj1 = U −1C′
jr } que tamb´em ´e
linearmente independente. Portanto o conjunto {Cj1 , . . . , Cjr } ´e line-
armente independente.

j2 , . . . , Cjr = U −1C′

j1 , Cj2 = U −1C′

Vamos mostrar agora que {Cj1, . . . , Cjr } gera col(A).
Pelo lema (2.3.6), temos que {C′

jr } ´e uma base para
col(R), ou seja, {U Cj1 , . . . , U Cjr } ´e uma base para col(R). Seja Cjk
uma coluna qualquer de A, ent˜ao U Ck = C′
k ∈ col(R) e portanto U Ck
´e uma combina¸c˜ao linear de {C′
jk} = {U Cj1 , . . . , U Cjk }, isto
´e, existem α1, . . . , αr ∈ R tal que

j1 , . . . , C′

j1, . . . , C′

U Ck =
U Ck =

α1U Cj1 + . . . + αrU Cjr
U (α1Cj1 + . . . + αrCjr )
U −1U Ck = U −1U (α1Cj1 + . . . + αrCjr )
α1Cj1 + . . . + αrCjr .

Ck =

41

Ou seja, Ck ´e uma combina¸c˜ao linear de Cj1 , . . . , Cjr , o que implica
que {Cj1 , . . . , Cjr } gera col(A).

Portanto, temos que Cj1 , . . . , Cjr ´e uma base para col(A).

Exemplo 2.3.8. Encontre uma base para col(A), onde A ´e a matriz

1
2

2
4
−1 −2 −4
2

4
10
6
2
8 −2
2
4
2 −12 −6

1

.







A = 




Resolu¸c˜ao: Observe que a matriz A pode ser reduzida a sua forma
escada, dada pela matriz R,

R =

1
0
0
0







2 6
0 1
0 0
0 0

10
11
2
1
0

4
3
2
1
0

.







Apesar de col(A) 6= col(R), por´em, segue do teorema (2.3.7) que
uma base para col(A) ´e dada pelos vetores coluna de A correspondentes
ao conjunto de vetores coluna de R que formam uma base para col(R).
Sendo assim, as, primeira, terceira e quarta colunas de R cont´em

os pivˆos dos vetores linha, onde temos

C′

1 =

1
0
0
0







,







C′

3 =

6
1
0
0













e C′

4 =

10
11
2
1
0







,







formam uma base para col(R), e portanto, os correspondentes vetores
coluna de A, que formam uma base para col(A), s˜ao,

C1 =

1
2
−1
1







,







C3 =

6
8
−4
2













e C4 =

10
−2
4
−12







.







2.4 POSTO E NULIDADE DE UMA MATRIZ

A seguir, apresentaremos as rela¸c˜oes entre as dimens˜oes do es-
pa¸co linha, espa¸co coluna e n´ucleo de uma matriz. Tais rela¸c˜oes ser˜ao

42

usadas na solu¸c˜ao de sistemas de equa¸c˜oes lineares.

Teorema 2.4.1. Seja A uma matriz m × n. Ent˜ao,

dim(row(A)) = dim(col(A)).

Demonstra¸c˜ao: Seja R a matriz em forma escada reduzida equiva-
lente a matriz A. Pelo teorema 2.3.2, temos que, row(A) = row(R),
assim,

dim(row(A)) = dim(row(R)).

(2.42)

Pelo teorema 2.3.7, temos que

dim(col(A)) = dim(col(R)).

(2.43)

Mas, do Teorema 2.3.3, temos que, a dimens˜ao do espa¸co linha de R
´e o n´umero de linhas n˜ao nulas de R, e pelo Lema 2.3.6, a dimens˜ao
do espa¸co coluna de R ´e o n´umero de colunas de R que cont´em os
pivˆos. Como cada pivˆo ocorre em uma linha n˜ao nula de R, temos que
a dimens˜ao do espa¸co linha de R e a dimens˜ao do espa¸co coluna de R
s˜ao iguais. De (2.42) e (2.43) temos ent˜ao que

dim(row(A)) = dim(col(A)).

Deﬁni¸c˜ao 2.4.2. Seja A uma matriz m × n. Temos as seguintes deﬁ-
ni¸c˜oes.

i) O posto de A, denotado por posto(A) ou rank(A), ´e a dimens˜ao

do espa¸co linha de A (ou do espa¸co coluna de A).

ii) A nulidade de A, denotada por null(A) ´e a dimens˜ao do espa¸co

nulo de A.

Observe que a nulidade de uma matriz A nos fornece o n´umero

de vari´aveis livres na solu¸c˜ao do sistema homogˆeneo Ax = 0.

O teorema a seguir relaciona o posto e a nulidade de uma matriz,

cuja demonstra¸c˜ao pode ser encontrada em [Anton].

Teorema 2.4.3. Seja A uma matriz m × n. Ent˜ao

posto(A) + null(A) = n.

43

Exemplo 2.4.4. Encontre o posto da matriz A.

1
0
2 −1
1
3
0
4
0 −3 5
2
2 −6 1
1

2
1
2
2







A =







Resolu¸c˜ao. Observe que a matriz A ´e equivalente por linhas a matriz
R dada por:

1 2
0 0
0 0
0 0

0
0 0
1 0
0
0 1 −1
0
0 0

.







R = 




Observe que o n´umero de linhas n˜ao nulas de R ´e 3, portanto o posto
da matriz A ´e igual 3.

2.5 RELA ¸C ˜OES DE ORTOGONALIDADE

Nesta se¸c˜ao iremos deﬁnir a no¸c˜ao de ortogonalidade entre os
quatro subespa¸cos fundamentais de uma matriz, a qual ser´a fundamen-
tal para a solu¸c˜ao do problema de apagar as luzes. Iniciamos a se¸c˜ao
fazendo algumas observa¸c˜oes sobre ortogonalidade em espa¸cos vetoriais.
Dois vetores x e y em Rn podem ser pensados como matrizes
n × 1. N´os podemos ent˜ao formar o produto matricial xT y. Este
produto ´e uma matriz 1 × 1 que pode ser pensado como um vetor do
R ou, mais precisamente, pode ser pensado como um n´umero real.

Deﬁni¸c˜ao 2.5.1. O produto xT y ´e chamado produto escalar de x
por y e ´e denotado por hx, yi. Em particular, se x = [x1, . . . , xn]T e
y = [y1, · · · , yn]T , ent˜ao

hx, yi = xT y = x1y1 + x2y2 + . . . + xnyn = yT x = hy, xi

(2.44)

Exemplo 2.5.2. Sejam os vetores



x =




Determine o produto xT y.

−2
4
6
0







e y =

5
−1
2
−3







.







44

Resolu¸c˜ao. Temos que o produto xT y ser´a:

xT y =

−2 4 6

(cid:2)

5
−1
2
−3







0
(cid:3)







= −2 · 5 + 4 · (−1) + 6 · 2 + 0 · (−3) = −2.

Deﬁni¸c˜ao 2.5.3. Dois vetores x e y em Rn s˜ao ditos ortogonais se

hx, yi = xT y = yT x = 0.

(2.45)

Exemplo 2.5.4. Observe que os seguintes vetores s˜ao ortogonais.

a) Os vetores x = 




−2
3
1
0







e y = 




1
−1
5
−3

.







b) x =





e y =





.

3
4
−1
1

1
−1
−2
−1








c) O vetor nulo 0 ∈ Rn ´e ortogonal a todo e qualquer vetor do Rn.









2.5.1 Subespa¸cos Ortogonais

Deﬁni¸c˜ao 2.5.5. Dois subespa¸cos X e Y do Rn s˜ao ortogonais se
hx, yi = 0 para todo x ∈ X e y ∈ Y . Se X e Y s˜ao ortogonais,
escreveremos X⊥Y .

Segundo [Leon], o conceito de subespa¸cos ortogonais nem sempre
concorda com a nossa ideia intuitiva de perpendicularidade. Por exem-
plo, o piso e a parede da sala de aula s˜ao ortogonais, mas o plano xy
e o plano yz n˜ao s˜ao subespa¸cos ortogonais. Com efeito, n´os podemos
tomar os vetores x = [1, 2, 0]T ∈ xy e y = [0, 2, 1]T ∈ yz . Observe que;

xT y =

1

2 0



= 1 · 0 + 2 · 2 + 0 · 1 = 4


os subespa¸cos n˜ao s˜ao ortogonais.

(cid:2)

0
2

1


(cid:3)

45

Exemplo 2.5.6. Seja Π o plano gerado pelos vetores u = [1, 0, 1]T
e v = [0, 1, 1]T . Seja R a reta cujo vetor diretor ´e w = [−1, −1, 1]T ,
ent˜ao, w ´e simultˆaneamente ortogonal a u e v, ou mais precisamente a
reta R ser´a ortogonal a todo e qualquer vetor do plano Π.

Deﬁni¸c˜ao 2.5.7. Seja Y um subespa¸co do Rn. O conjunto de todos
os vetores no Rn que s˜ao ortogonais a todo vetor em Y ser´a denotado
por Y ⊥, onde

Y ⊥ = {x ∈ Rn | hx, yi = 0 para todo y ∈ Y }.

O conjunto Y ⊥ ´e chamado complemento ortogonal de Y .

Observa¸c˜oes:

1) Se X e Y s˜ao subespa¸cos ortogonais do Rn, ent˜ao X ∩ Y = {0}.

2) Se Y ´e um subespa¸co do Rn, ent˜ao Y ⊥ tamb´em ´e um subespa¸co

de Rn.

A demonstra¸c˜ao destas observa¸c˜oes poder˜ao ser encontradas em [Leon].
Observe que, row(A) = col(AT ), pois as linhas de A s˜ao as

colunas de AT . Assim, y ∈ col(AT ), se e somente se yT ∈ row(A).

Teorema 2.5.8. Seja A uma matriz de ordem m × n, ent˜ao

N (A) = row(A)⊥ e N (AT ) = col(A)⊥.

Demonstra¸c˜ao. Seja x ∈ N (A), vamos mostrar que x ´e ortogonal a
cada vetor de row(A) = col(AT ).

Seja tamb´em y ∈ col(AT ), ent˜ao existe z ∈ Rm tal que y = AT z.
Assim,

hx, yi = xT y = xT AT z,

mas xT AT = (Ax)T , como x ∈ N (A), temos que,

xT AT z = (Ax)T z = 0 · z = 0.

Sendo assim,

hx, yi = xT y = x1y1 + x2y2 + . . . + xnyn = 0.

Logo, se x ∈ col(AT )⊥ = row(A)⊥, ou seja, N (A) ⊆ row(A)⊥.

Seja agora w ∈ row(AT )⊥, isto ´e, dado q = AT u, temos que

0 = wT q = wT AT u = (Aw)T u.

46

Como u ´e arbitr´ario ent˜ao,

Aw ⊥ u, ∀u ∈ Rm.

Logo, Aw = 0 ⇒ w ∈ N (A). O que implica que row(A)⊥ ⊆ N (A).
Assim, temos que row(A)⊥ = N (A).

Em particular, seja a matriz B = AT , ent˜ao

N (AT ) = N (B) = row(B)⊥ = col(BT )⊥ = col(A)⊥.

47

3 O JOGO LIGHTS-OUT

O jogo chamado Lights Out, surgiu de uma vers˜ao f´ısica produ-
zida por uma empresa de jogos eletrˆonicos chamada Tiger R(cid:13), essa vers˜ao
f´ısica consiste de um tabuleiro formado por 25 teclas, dispostas num re-
tˆangulo 5 × 5, onde as 25 teclas possuem apenas dois estados: acesa ou
apagada. Uma vers˜ao do jogo ´e mostrado na ﬁgura 1. O leitor poder´a
jogar na vers˜ao digital aqui: http://www.logicgamesonline.com/lightsout/.

Figura 1 – Vers˜ao f´ısica do jogo Lights Out

O jogo funciona como um quebra cabe¸cas como explicado a se-

guir.

Ao pressionarmos uma tecla a mesma mudar´a de estado, ou seja,
se estava acesa ﬁcar´a apagada e vice-versa, o mesmo acontecer´a com
suas teclas adjacentes na horizontal e na vertical, j´a as teclas que est˜ao
em suas diagonais n˜ao ser˜ao afetadas. O objetivo do jogo ´e que, dada
uma conﬁgura¸c˜ao inicial, possamos chegar com um n´umero ﬁnito de
toques a um estado em que o tabuleiro esteja com todas as teclas (luzes)
apagadas. Com o avan¸co da tecnologia surgiram ent˜ao vers˜oes digitais
com o mesmo princ´ıpio do jogo original.

A ﬁgura 2 apresenta uma conﬁgura¸c˜ao aleat´oria para o jogo,
onde a tecla em azul representa a luz acesa, a tecla em preto representa
a luz apagada e a m˜ao mostra a tecla a ser pressionada.

Sendo assim, para cada tecla do jogo associamos um n´umero
que corresponde a sua posi¸c˜ao no tabuleiro 5 × 5, ou seja cada tecla
corresponder´a a um elemento bi onde 1 ≤ i ≤ 25 representa a posi¸c˜ao

48

Figura 2 – Uma conﬁgura¸c˜ao do Jogo Lights Out

de cada tecla, a ﬁgura 3 mostra tais correspondˆencias.

Figura 3 – Associa¸c˜ao das teclas do jogo a n´umeros

Temos ainda que, para cada tecla pressionada tamb´em associa-
mos um n´umero que corresponde a posi¸c˜ao de pressionamento no tabu-
leiro 5 × 5, ou seja cada tecla pressionada corresponder´a a um elemento
xi onde 1 ≤ i ≤ 25.

A ﬁgura 4 mostra a altera¸c˜ao de estado das teclas de posi¸c˜ao
x1 e x18 ao serem pressionadas, bem como o novo estado das teclas
vizinhas.

Observe que as teclas em diagonal n˜ao tem seu estado alterado.

3.1 MODELO USANDO VETORES

Nosso objetivo agora ´e modelar matematicamente o jogo e res-

ponder as seguintes perguntas:

1) Toda conﬁgura¸c˜ao inicial possui solu¸c˜ao?

49

Figura 4 – Pressionando as Teclas x1 e x18

2) Se uma dada conﬁgura¸c˜ao inicial possui solu¸c˜ao, como podemos

proceder para encontrar a solu¸c˜ao?

3) Quando h´a solu¸c˜ao para uma certa conﬁgura¸c˜ao, ela ´e ´unica?
Caso n˜ao seja ´unica, podemos encontrar a solu¸c˜ao que levar´a o
jogo a seu estado ﬁnal com o menor n´umero de teclas pressiona-
das?

A seguir, veremos que as respostas que procuramos ser˜ao respon-
didas usando os conceitos de ´Algebra Linear apresentados no Cap´ıtulo
2, mais especiﬁcamente, elimina¸c˜ao de Gauss-Jordan, espa¸co nulo e
espa¸co coluna de uma matriz.

Antes de modelarmos a solu¸c˜ao para o jogo, vamos observar o
que acontece com o estado das teclas pressionadas e suas teclas vizinhas.

3.2 ALGUMAS OBSERVA ¸C ˜OES INICIAIS

(i) Pressionando uma tecla duas vezes ´e equivalente a n˜ao pression´a-

la, ou seja o estado permanece o mesmo.

Figura 5 – Pressionando a Tecla x8 duas vezes

(ii) O estado de uma tecla depende apenas se a pressionamos um
n´umero par ou ´ımpar de vezes e se teclas vizinhas a ela forem
pressionadas. Sendo assim, a ordem em que as teclas s˜ao pressi-
onadas n˜ao importa.

50

Para modelar nosso jogo matematicamente, iremos associar o
estado de cada tecla aos n´umeros 0 e 1, conforme a tecla esteja apagada
ou acesa, respectivamente ﬁgura 6.

Figura 6 – Estados das Teclas

Com essas associa¸c˜oes do estado das teclas aos n´umeros 0 e 1,
o estado de cada tecla pode ser representado como um elemento de
Z2 = {0, 1}. A conﬁgura¸c˜ao para um estado inicial do jogo, pode
ser representado por um vetor b ∈ M25×1(Z2), onde a entrada bi ´e
representada por 1 quando a tecla de posi¸c˜ao i est´a acesa e por 0 quando
a tecla de posi¸c˜ao i est´a apagada. Esse vetor ser´a chamado de Vetor
Conﬁgura¸c˜ao Inicial, que ser´a representado por:

b = {[bi]T , 1 ≤ i ≤ 25, bi ∈ Z2 = {0, 1}}.

(3.1)

Figura 7 – Um jogo qualquer

Observe que a representa¸c˜ao vetorial para o jogo dado na ﬁgura

7 ´e,

b = [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0]T.

Observe ainda que, se uma tecla ´e pressionada o estado das teclas
vizinhas ´e alterado. Para o jogo apresentado na ﬁgura 8, ao pressionar-
mos a tecla que se encontra na segunda linha e segunda coluna (tecla
x7) vemos que as teclas vizinhas a ela, na vertical e horizontal mudar˜ao
de estado, como j´a enunciamos anteriormente. Ent˜ao para cada tecla xi
h´a uma vetor conﬁgura¸c˜ao b, onde a entrada ´e 1, para as teclas acesas
e 0 para as teclas apagadas. Observe tais mudan¸cas ao pressionarmos
as teclas x7 e x16.

51

Figura 8 – Pressionando a tecla x7

O vetor b que representa o vetor conﬁgura¸c˜ao nesse caso ´e

b = [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]T .

(3.2)

Se pressionarmos a tecla x16 partindo do jogo com todas as luzes

apagadas obtemos o seguinte estado, conforme a ﬁgura 9.

Figura 9 – Pressionando a tecla x16

Neste caso o vetor conﬁgura¸c˜ao para o jogo ´e dado por;

b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0]T .

(3.3)

De modo geral uma conﬁgura¸c˜ao qualquer do jogo pode ser re-

presentada atrav´es de um vetor, chamado Vetor Conﬁgura¸c˜ao.

Figura 10 – Um jogo qualquer

52

O vetor conﬁgura¸c˜ao para o jogo da ﬁgura 10 ´e:

b = [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0]T .

(3.4)

Exemplo 3.2.1. Vamos analisar o jogo dado pela ﬁgura 11 cujo vetor
conﬁgura¸c˜ao ´e dado por:

b = [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1]T .

e propor duas solu¸c˜oes.

Figura 11 – Um certo jogo.

Para a conﬁgura¸c˜ao inicial dada pela ﬁgura 11, o vetor

x1 = [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0]T ,

´e uma solu¸c˜ao para o jogo e que a quantidade de teclas a ser pressionada
´e 9.

Uma outra solu¸c˜ao para o mesmo jogo ´e o vetor

x2 = [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1]T ,

cuja quantidade de teclas a ser pressionada ´e 17. Olhando bem para
os vetores b e x2 vemos que x2 = b. Assim, a solu¸c˜ao dada por x1 ´e
melhor que a solu¸c˜ao dada por x2 uma vez que a quantidade de teclas
pressionadas em x1 ´e menor que em x2.

Exemplo 3.2.2. Vejamos agora o jogo representado pela ﬁgura 12.
Neste caso, o jogo n˜ao apresenta solu¸c˜ao, ou seja, n˜ao h´a qualquer
conﬁgura¸c˜ao de pressionamento das teclas que apagar´a todas as luzes.
Veremos mais adiante, quando um jogo (conﬁgura¸c˜ao) ´e vi´avel, ou seja,
possui solu¸c˜ao e quando uma conﬁgura¸c˜ao ´e dita n˜ao vi´avel (n˜ao possui
solu¸c˜ao).

53

Figura 12 – Um jogo sem solu¸c˜ao.

O que queremos ´e, dada qualquer conﬁgura¸c˜ao inicial, com algu-
mas teclas (luzes) acesas e outras apagadas, que representaremos pelo
vetor conﬁgura¸c˜ao b = [bi]T (onde cada elemento bi representa o estado
de cada tecla), possamos solucion´a-lo, ou seja, chegar a um estado onde
todas as teclas estejam apagadas.

Veremos que solucionar o jogo Lights Out ´e equivalente a resolver

um sistema do tipo:

Ax = b,
para os (25 × 1) coeﬁcientes xi ∈ Z2 e

(3.5)

b = [b1, b2, b3, b4, b5, b6, . . . , b24, b25]T .

Os coeﬁcientes xi s˜ao usados para dizer qual bot˜ao precisamos
pressionar em cada etapa do jogo. O vetor x = [xi]T ser´a chamado
convenientemente de Vetor Estrat´egia, podemos ent˜ao escrever [xi] da
seguinte forma,

x = [x1, x2, x3, x4, x5, x6, . . . , x24, x25]T ,

uma vez que trataremos do jogo de ordem 5 × 5. A matriz da equa-
¸c˜ao (3.5) representa um sistema de 5 × 5 = 25 equa¸c˜oes lineares (uma
equa¸c˜ao para cada componente da equa¸c˜ao matricial). Vamos supor
que no in´ıcio o jogo esteja com todas as luzes apagadas e vamos ana-
lisar algumass situa¸c˜oes que nos auxiliar˜ao a modelar o nosso Vetor
Estrat´egia.

3.3 MODELANDO O JOGO

Cada tecla do jogo possui um estado, que indicaremos por ei
onde i indica a posi¸c˜ao da tecla. Sendo assim, as teclas que ao serem

54

pressionadas alterar˜ao o estado da tecla e1, s˜ao os pressionamentos
x1, x2 e x6 o que nos d´a:

x1 + x2 + x6 = e1.

(3.6)

Do mesmo modo a equa¸c˜ao linear correspondente a mudan¸ca de

estado da tecla e14 ´e;

x9 + x13 + x14 + x15 + x19 = e14.

(3.7)

Sendo assim cada estado da tecla ei pode ser alterado pelas com-

bina¸c˜oes de pressionamentos das teclas xi:

e1 = x1 + x2 + x6
e2 = x1 + x2 + x3 + x7
e3 = x2 + x3 + x4 + x8
e4 = x3 + x4 + x5 + x9
e5 = x4 + x5 + x10
e6 = x1 + x6 + x7 + x11
e7 = x2 + x6 + x7 + x8 + x12
...
...
e14 = x9 + x13 + x14 + x15 + x19
...
...
e24 = x19 + x23 + x24 + x25
e25 = x20 + x24 + x25

(3.8)

Lembrando que [ei]T ´e um vetor coluna 25 × 1 dado por ;

e = [e1, e2, . . . , e24, e25]T .

O sistema 3.8 pode ser reescrito na forma matricial:

Ax = e.

(3.9)

Portanto, dado um jogo com uma conﬁgura¸c˜ao inicial b e uma
sequˆencia de pressionamento qualquer x levar˜ao o jogo aum estado e.
Matematicamente temos:

Ax + b = e.

(3.10)

Mas queremos encontrar uma estrat´egia vencedora que leve o jogo ao
seu estado ﬁnal com todas as luzes apagadas, ou seja, e = 0. Sendo

55

assim, uma estrat´egia vencedora x levar´a a equa¸c˜ao (3.10) a ser escrita
como:

Ax + b = 0.

(3.11)

Adicionando b a ambos os lados lados da equa¸c˜ao (3.11) temos que:

Ax + b + b = 0 + b.

Por´em, como b ∈ Z2 ⇒ b + b = 0, portanto:

Onde a matriz A ∈ M25×25(Z2) ´e dada por:

Ax = b.

(3.12)

(3.13)

A=

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0
































































































1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

1

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

1

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1
































































































Observando melhor a matriz A, podemos escrevˆe-la como a ma-

triz (3.14):

56

A =









C I5
0
I5 C I5
0
0
0

0
0
I5 C I5
0
0

0
0
0
I5 C I5
I5 C
0

,









(3.14)

onde a matriz C de ordem 5 × 5 ´e dada por (3.15), 0 ´e a matriz nula
tamb´em de ordem 5 × 5 e I5 ´e a matriz identidade de ordem 5

C =

1 1
1 1
0 1
0 0
0 0









0 0
1 0
1 1
1 1
0 1

0
0
0
1
1


.






(3.15)

A matriz A ser´a chamada de Matriz Conﬁgura¸c˜ao do jogo, ou
seja para qualquer jogo a matriz A sempre ser´a a mesma. Olhando
novamente para a matriz C podemos veriﬁcar que a mesma ´e sim´etrica
o que torna A sim´etrica. Sendo assim, para solucionar o jogo, dada a
matriz A e uma conﬁgura¸c˜ao geral b n´os devemos encontrar uma es-
trat´egia x que satisfa¸ca o sistema linear de 25 equa¸c˜oes e 25 inc´ognitas,
Ax = b usando a aritm´etica de Z2.

Assim, saber se uma dada conﬁgura¸c˜ao b ´e vi´avel, ´e equivalente

a saber se existe x, tal que Ax = b.

Da teoria estudada no Cap´ıtulo 2, temos que, um sistema Ax = b

possui solu¸c˜ao se e somente se b ∈ col(A).

Na pr´oxima se¸c˜ao, usando os conceitos estudados no Cap´ıtulo 2,
estudaremos a solu¸c˜ao do sistema linear que modela a solu¸c˜ao do jogo
usando os conceitos de simetria e do espa¸co nulo de uma matriz.

57

4 ALGORITMO PARA A SOLU ¸C ˜AO DO JOGO

LIGHTS OUT

Por tornar poss´ıvel realizar as opera¸c˜oes em Z2, usaremos o
Maple R(cid:13) 18 para realizar nossos c´alculos. Com o objetivo de facilitar a
compreens˜ao do leitor que n˜ao possui familiaridade como Maple R(cid:13) 18,
faremos simultaneamente uma apresenta¸c˜ao dos comandos e pacotes
utilizados.

Uma vez que se saiba avaliar se uma dada conﬁgura¸c˜ao inicial
´e vi´avel, vamos apresentar um algoritmo a ﬁm de encontrar solu¸c˜oes
para o jogo.

4.1 INTRODU ¸C ˜AO AO MAPLE: SISTEMAS LINEARES E ESCA-

LONAMENTO

A vers˜ao aqui utilizada ´e a vers˜ao 18 do programa computa-
cional Maple R(cid:13), salientamos que o programa Maple R(cid:13) 18 n˜ao ´e livre
e mais informa¸c˜oes sobre este programa podem ser encontradas em
www.maplesoft.com.

Figura 13 – Maple R(cid:13) 18

Vamos recordar algumas t´ecnicas sobre escalonamento de matri-
zes com aplica¸c˜oes na solu¸c˜ao de sistemas lineares utilizando o Maple R(cid:13)
18. Lembramos que alguns pacotes devem ser carregados antes de efe-
tuarmos os comandos necess´arios para que o programa reconhe¸ca os
comandos apresentados.

58

with(LinearAlgebra): # carrega o pacote de ´Algebra Linear
A := matrix(m,n, [a11,a12,...,a1n, a21,a22,...,a2n,...,
am1, m2,...,amn]);
# define a matriz 3x3 cujas entradas da primeira linha s~ao
0, 1, 1; da segunda linha s~ao 0, 1, 1 e da terceira linha
s~ao 0, 0, 1.
A := matrix( 3, 3, [ 0,1,1,0,1,1,0,0,1] );
# define a matriz dos coeficientes A do sistema dado acima
B := matrix( 3, 1, [1, 1, 0] ); # define B como matriz co-
luna com 3 linhas
B := vector( [0, 1, 0] ); # define B como um vetor coluna
B := [0, 1, 0]; # define B como uma lista ordenada (list)
# qualquer uma das estruturas acima cria o mesmo tipo de
vetor
AB := concat(A,B); # justap~oe A e B formando a matriz am-
pliada
AB := augment(A,B); # ´ıdem
linsolve(A,B); # resolve o sistema AX = B, diretamente.
X0 := linsolve(A,B); # define X0 como a solu¸c~ao do sistema
evalm(A &* X0); # multiplica A por X0. Deve resultar em
B.

Assim, para resolver o sistema

−1 −2
1
3 −1 −1
4
0
1

x
y
z









−2
−2
13

,







= 









(4.1)

cuja solu¸c˜ao ´e:

procedemos como a seguir:

(cid:2)

x0 =

1

2 3

T

(cid:3)

with(LinearAlgebra):
A := Matrix(3,3,[-1, -2, 1, 3, -1, -1, 1, 0, 4]):
b := Vector([-2, -2, 13]):
x_0:=Linsolve(a,b)mod 10;# Solu¸c~ao do Sistema Ax=b

x0 =

1

2 3

(cid:2)

T

(cid:3)

Voltando a solu¸c˜ao do jogo, conforme discutimos anteriormente,
uma dada conﬁgura¸c˜ao b ´e vi´avel se e somente se b ∈ col(A), onde A

´e a matriz conﬁgura¸c˜ao do jogo. Como encontrar col(A)?

Como A ´e uma matriz sim´etrica, A = AT , temos que

col(A) = col(AT ) = row(A),

mas, conforme vimos no Teorema 2.5.8,

row(A)⊥ = N (A).

59

(4.2)

(4.3)

Assim, uma dada conﬁgura¸c˜ao b ´e vi´avel se, e somente se, b ´e
ortogonal aos vetores da base do n´ucleo de A. Precisamos ent˜ao en-
contrar uma base para N (A). Vimos no Cap´ıtulo 2 que para encontrar
uma base para o n´ucleo de uma matriz A devemos usar a elimina¸c˜ao
de Gauss-Jordan a ﬁm de encontrar uma matriz R em forma escada
reduzida, equivalente por linhas a matriz A, pois N (R) = N (A).

Vimos que a matriz A dos coeﬁcientes associada ao jogo ´e dada

por:

C I5
0
I5 C I5
0
0
0

0
0
I5 C I5
0
0

0
0
0
I5 C I5
I5 C
0

A =









.









(4.4)

Abaixo seguem os comandos no Maple para gerar a matriz A

restart;
with(LinearAlgebra):
with(linalg):
interface(rtablesize = 26):
C := Matrix([[1, 1, 0, 0, 0], [1, 1, 1, 0, 0],
[0, 1, 1, 1, 0], [0, 0, 1, 1, 1], [0, 0, 0, 1, 1]]):
I5 := IdentityMatrix(5):
N := Matrix(1 .. 5, 1 .. 5, shape = zero):
A := (Matrix(blockmatrix(5, 5, [C, I5, N, N, N, I5, C, I5,
N, N, N, I5, C, I5, N, N, N, I5, C, I5, N, N, N, I5,
C]))mod 2

Uma vez tendo gerada a matriz A, vamos mostrar como encon-
trar a forma escada reduzida de A usando o Maple R(cid:13) 18, ou seja, como
realizar a elimina¸c˜ao gaussiana no Maple R(cid:13) 18.

60

restart:
with(LinearAlgebra):
with(linalg):
interface(rtablesize = 26):
C := Matrix([[1, 1, 0, 0, 0], [1, 1, 1, 0, 0],
[0, 1, 1, 1, 0], [0, 0, 1, 1, 1], [0, 0, 0, 1, 1]]):
I5 := IdentityMatrix(5):
N := Matrix(1 .. 5, 1 .. 5, shape = zero):
A := (Matrix(blockmatrix(5, 5, [C, I5, N, N, N, I5, C,I5,
N, N, N, I5, C, I5, N, N, N, I5, C, I5, N, N, N, I5,
C]))mod 2:
R :=ReducedRowEchelonForm(<A>)mod 2:

A matriz R forma escada reduzida de A, est´a representada abaixo:

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1

1

1

0

1

0

1

0

1

1

1

0

1

1

1

0

1

0

1

0

1

1

0

0

1

0

1

0

1

1

0

1

0

1

0

0

0

0

0

1

0

1

0

1

1

0

1

0

0
































































































1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0
































































































R =

61

Observe que todos os c´alculos feitos acima foram em Z2.

Assim, seja

x = [x1, x2, x3, x4, x5, x6, . . . , x24, x25]T .

Podemos escrever o sistema Rx = 0 como segue:

x1 + x25 = 0
x2 + x24 = 0
x3 + x24 + x25 = 0
...
x22 + x24 = 0
x23 + x24 + x25 = 0

...

...

.

(4.5)

Isolando as vari´aveis dependentes em fun¸c˜ao das vari´aveis livres temos:

1
0
1
...
1
0
1

0
1
1
...
1
1
0

x1
x2
x3
...
x23
x24
x25













+ x25

= x24











Os vetores resultantes formam uma base para N (R). Portanto,
























































(4.6)

.

uma base para N (R) ´e dada por:

n1 = [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0]T

n2 = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1]T .

Para veriﬁcar se esses dois vetores formam uma base ortogonal,
basta ver que o produto interno deles ´e nulo, ou seja, hn1, n2i = 0 o

(4.7)

62

que ´e f´acil de veriﬁcar pois,

hn1, n2i =

0

1 1

1

0 . . . 0 1

1

1 0

(cid:2)

1
0
1
0
1
...
1
0
1
0
1











































(cid:3)

(4.8)

Fazendo o produto obtemos hn1, n2i = 8 mas, como estamos em Z2,
temos que 8 ≡ 0 mod 2 e portanto

hn1, n2i = 0.

Desta forma, temos que n1 e n2 formam uma base ortogonal

para N (R).

Ent˜ao b ´e vi´avel se, e somente se, b for ortogonal aos vetores n1

e n2.

Temos ent˜ao o seguinte teorema.

Teorema 4.1.1. Uma dada conﬁgura¸c˜ao b ´e vi´avel se, e somente se,
b for ortogonal aos vetores n1 e n2.

Observe ainda, como dim(N (A)) = 2, ent˜ao dim(col(A)) = 25 −
2 = 23, portanto de fato podem existir conﬁgura¸c˜oes iniciais, as quais
n˜ao s˜ao vi´aveis.

4.2 N ´UMERO DE SOLU ¸C ˜OES PARA QUALQUER CONFIGURA-

¸C ˜AO VI ´AVEL DO JOGO 5 × 5

Queremos saber ent˜ao se para um jogo com uma dada conﬁgu-
ra¸c˜ao vi´avel, ela ´e ´unica, ou se existem outras conﬁgura¸c˜oes que levem
o jogo a um estado ﬁnal com todas as luzes apagadas.

Teorema 4.2.1. Para qualquer conﬁgura¸c˜ao b vi´avel e uma estrat´egia
vencedora x0 h´a exatamente quatro estrat´egias vencedoras x ∈ {x0, x0 +
n1, x0 + n2, x0 + n1 + n2}.

63

Demonstra¸c˜ao. Existem sequˆencias de pressionamento das teclas que
n˜ao mudam o estado ﬁnal do jogo. Esses padr˜oes s˜ao chamados de
padr˜oes inalterados. Tal sequˆencia x ´e uma solu¸c˜ao do sistema linear
homogˆeneo Ax = 0.
Isto ´e, x ∈ N (A). A dimens˜ao deste espa¸co ´e
a nulidade de A ou seja null(A) = 25 − dim(col(A)) = 25 − 23 = 2.
Portanto uma base para o espa¸co nulo de A ´e o conjunto {n1, n2} que
encontramos em (4.7).

Ent˜ao, se o jogo est´a com todas as luzes apagadas:

N (A) = Span{n1, n2} = {k1n1 + k2n2 | k1, k2 ∈ Z2}

e como k1, k2 ∈ {0, 1} temos:
se k1 = k2 = 0 implica que

se k1 = 1 e k2 = 0 temos:

se k1 = 0 e k2 = 1

k1n1 + k2n2 = 0;

k1n1 + k2n2 = n1;

k1n1 + k2n2 = n2;

e por ´ultimo, se k1 = k2 = 1

k1n1 + k2n2 = n1 + n2.

Portando o espa¸co nulo de A ´e dado por;

N (A) = {0, n1, n2, n1 + n2}.

(4.9)

Portanto, se x0 for uma estrat´egia vencedora para a conﬁgura¸c˜ao vi´avel
b, temos as seguintes possibilidades como estrat´egias vencedoras;

{x0, x0 + n1, x0 + n2, x0 + n1 + n2}.

O que mostra que h´a apenas 4 solu¸c˜oes vencedoras.

Assim, se tivermos Ax0 = b e fazendo x = x0 + n1, temos:

A(x0 + n1) = Ax0 + An1 = Ax0 = b,

(4.10)

pois An1 = 0 j´a que n1 pertence ao espa¸co nulo de A. O mesmo

64

acontece para n2, pois:

A(x0 + n2) = Ax0 + An2 = Ax0 = b.

J´a, para n1 + n2, temos;

A(x0 + n1 + n2) = Ax0 + An1 + An2 = Ax0 = b.

Sendo assim, podemos usar o Maple para encontrar essses veto-

res. O comando para calcular o espa¸co nulo de A no Maple ´e:

restart:
with(LinearAlgebra):
with(linalg):
interface(rtablesize = 26):
C := Matrix([[1, 1, 0, 0, 0], [1, 1, 1, 0, 0],
[0, 1, 1, 1, 0], [0, 0, 1, 1, 1], [0, 0, 0, 1, 1]]):
I5 := IdentityMatrix(5):
N := Matrix(1 .. 5, 1 .. 5, shape = zero):
A := (Matrix(blockmatrix(5, 5, [C, I5, N, N, N, I5, C, I5,
N, N, N, I5, C, I5, N, N, N, I5, C, I5, N, N, N, I5,
C]))mod 2:
Espa¸co Nulo(A):= NullSpace(A)mod 2

ou seja:

n1 = [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0]T (4.11)
n2 = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1]T (4.12)

Como temos:

N (A) = {0, n1, n2, n1 + n2},

(4.13)

e lembrando que o vetor nulo n˜ao altera o estado do jogo e portanto,
temos os seguintes padr˜oes de jogo dados na ﬁgura 14.

Esses quatro padr˜oes que se mant´em inalterados, s˜ao as teclas
que correspondem as sequˆencias do espa¸co nulo de A mais o vetor nulo.
Ent˜ao, iniciando o jogo com todas as luzes apagadas e pressio-
nando as teclas acesas (teclas em azul) em qualquer um destes quatro
padr˜oes, o jogo retornar´a ao seu estado inicial, com todas as teclas
apagadas novamente.

De modo geral se tivermos o jogo com uma conﬁgura¸c˜ao vi´avel

65

(a) 0

(b) n1

(c) n2

(d) n1 + n2

Figura 14 – Os quatro padr˜oes inalterados
qualquer e usarmos quaisquer uma dessas sequˆencias de pressionamen-
tos o jogo retornar´a a sua conﬁgura¸c˜ao inicial.

4.3 SOLU ¸C ˜OES ´OTIMAS PARA O JOGO LIGHTS OUT

Observe que se b for uma conﬁgura¸c˜ao vi´avel para o jogo e x0
um vetor estrat´egia vencedora, ou seja x0 ´e solu¸c˜ao do sistema Ax =
b, como vismo na se¸c˜ao anterior o conjunto de todas as estrat´egias
vencedoras ´e

{x0, x0 + n1, x0 + n2, x0 + n1 + n2}.

(4.14)

Deﬁnimos como solu¸c˜ao ´otima aquela em que o vetor possui a menor
quantidade de uns nas entradas.

Exemplo 4.3.1. Suponha que vocˆe tenha o seguinte jogo dado pela
ﬁgura 15 para solucionar. Encontre a solu¸c˜ao ´otima.

Figura 15 – Conﬁgura¸c˜ao do Jogo

Apresentamos a seguir um algoritmo desenvolvido no Maple que
escolher´a dentre as solu¸c˜oes que resolvem o Jogo Lights Out, aquela que
apresenta a menor quantidade de n´umeros 1’s.

Primeiramente vamos formar a matriz de conﬁgura¸c˜ao A:

66

restart;
with(LinearAlgebra):
with(linalg):
with(Optimization):
interface(rtablesize = 26):
C := Matrix([[1, 1, 0, 0, 0], [1, 1, 1, 0, 0], [0, 1, 1,
1, 0],
[0, 0, 1, 1, 1], [0, 0, 0, 1, 1]]):
I5 := IdentityMatrix(5):
N := Matrix(1 .. 5, 1 .. 5, shape = zero):
A :=Matrix(blockmatrix(5, 5, [C, I5, N, N, N, I5, C, I5,
N, N,
N, I5, C, I5, N, N, N, I5, C, I5, N, N, N, I5, C]))mod 2:

Uma vez tendo formada a matriz conﬁgura¸c˜ao A no Maple, de-
vemos entrar com o vetor conﬁgura¸c˜ao do jogo que identiﬁcaremos por
b. Lembrando que o jogo apresentado a vocˆe tem a conﬁgura¸c˜ao da
ﬁgura 15 onde,

b = [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1].

A forma como escrevemos o vetor b no Maple ´e dada abaixo:

b ´e o vetor que representa o estado das 25 teclas do jogo
b := Vector([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,
0, 0, 0, 0, 0, 1, 1, 1, 1, 1])mod 2:

Estamos aptos a formar o sistema Ax = b no Maple e ent˜ao
dar o comando necess´ario para que o mesmo resolva o sistema linear
usando a aritm´etica mod 2, os comandos para encontrar a solu¸c˜ao se-
guem abaixo:

Resolu¸c~ao do sistema Ax = b
y := Linsolve(A, b)mod 2:
ytransposto:= Transpose(y)

Com o comando dado acima, obtemos a solu¸c˜ao nas vari´aveis livres
t24 e t25:

y = [t25, t24, 1 + t24 + t25, t24, t25, 1 + t24 + t25, 1, 1 + t24 + t25, 0, 1 +
t24 + t25, t24, 1 + t24, 0, 1 + t24, 1 + t24, t24 + t25, 1, t24 + t25, 0, 1 + t24 +

67

t25, 1 + t25, t24, 1 + t24 + t25, t24, t25]

Sendo assim, podemos ent˜ao, atribuir valores as vari´aveis livres

t24 e t25, onde t24, t25 ∈ {0, 1} pois estamos em Z2.

Para a solu¸c˜ao 1 atribuiremos os seguintes valores `as vari´aveis

livres, t24 = t25 = 0.

Solu¸c~ao 1
_t[24] := 0:
_t[25] := 0:
X := Vector(y):
X1 := Transpose(X)
[0,0,1,0,0,1,1,1,0,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,0]

Para a solu¸c˜ao 2 atribuiremos os seguintes valores `as vari´aveis livres,
t24 = 0 e t25 = 1.

Solu¸c~ao 2
_t[24] := 0:
_t[25] := 1:
X := Vector(y)mod 2:
X2 := Transpose(X)
[1,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1]

J´a a solu¸c˜ao 3, ´e encontrada substituindo t24 = 1 e t25 = 0 o

que nos d´a;

Solu¸c~ao 3
_t[24] := 1:
_t[25] := 0:
X := Vector(y)mod 2:
X3 := Transpose(X)
[0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,1,0,0,1,1,0,1,0]

Por ´ultimo a solu¸c˜ao 4 ´e encontrada fazendo t24 = 1 e t25 = 1.

Solu¸c~ao 4
_t[24] := 1:
_t[25] := 1:
X := Vector(y)mod 2:
X4 := Transpose(X)
[1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,1,1,1,1]

68

Vamos ent˜ao calcular o quadrado da norma dos vetores X1, X2, X3
e X4 pois o mesmo dar´a exatamente a quantidade de n´umeros 1’s pre-
sentes em cada vetor, onde a posi¸c˜ao de cada n´umero 1 corresponde
a tecla a ser pressionada e destacamos que estamos procurando aquele
vetor que possui a menor quantidade de 1’s.

Contando a Quantidade de 1’s
n1 := norm(X1, 2)^ 2
12
n2 := norm(X2, 2)^ 2
10
n3 := norm(X3, 2)^ 2
10
n4 := norm(X4, 2)^ 2
16

Vamos listar as quatro solu¸c˜oes para o jogo dado na ﬁgura 15 e em
seguida encontrar a solu¸c˜ao ´otima.

MOSTRANDO TODAS AS SOLU¸C~OES
X1
[0,0,1,0,0,1,1,1,0,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,0]
X2
[1,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1]
X3
[0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,1,0,0,1,1,0,1,0]
X4
[1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,1,1,1,1]

O seguinte algoritmo, em conjunto com os demais processos uti-
lizados acima, fornece uma maneira de encontrarmos a solu¸c˜ao ´otima
para qualquer jogo.

69

ENCONTRANDO A SOLU¸C~AO ´OTIMA
X:= proc (a, b, c, d)
if min(a, b, c, d) = a then ’ A_solu¸c~ao_´Otima_´e_X1’ = X1
else
if min(a, b, c, d) = b then ’ A_solu¸c~ao_´Otima_´e_X2’= X2
else
if min(a, b, c, d) = c then ’ A_solu¸c~ao_´Otima_´e_X3’ = X3
else
if min(a, b, c, d) = d then ’ A_solu¸c~ao_´Otima_´e_X4’ = X4
end if
end if
end if
end if
end proc;
solu¸c~ao ´otima: X(n1, n2, n3, n4)
A_solu¸c~ao_´Otima_´e_X2 =
[1,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1]

Podemos observar que a quantidade de 1’s em X1, X2, X3 e X4 ´e
respectivamente igual a 12, 10, 10 e 16, portanto a solu¸c˜ao ´otima ´e X2
ou X3, pois ambas possuem a menor quantidade de 1′s. Escolheremos
X2 como solu¸c˜ao ´otima

X2 = [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]

O jogo, bem como sua solu¸c˜ao ´otima ´e apresentado na ﬁgura 16.

Figura 16 – Jogo e sua solu¸c˜ao ´otima

70

4.4 RESOLVENDO O JOGO USANDO O M´ETODO DE PERSEGUI-

¸C ˜AO DAS LUZES

Uma forma de se resolver o jogo lights out sem a utiliza¸c˜ao da
´Algebra Linear foi introduzida pela primeira vez por [Madsen], o m´e-
todo ﬁcou conhecido como m´etodo bin´ario e em seguida conhecido como
M´etodo de Persegui¸c˜ao das Luzes.

A ideia deste m´etodo, consiste em separar a matriz 5×5 em uma
matriz 1 × 5 e outra 4 × 5 e ent˜ao trabalhar de modo que o objetivo
seja transformar o jogo inicial numa matriz 1 × 5. Uma maneira f´acil de
se fazer isso ´e primeiramente apagar as luzes da 1a linha que pode ser
feito simplesmente pressionando as teclas na segunda linha que est˜ao
abaixo das teclas acesas na primeira linha, conforme a ﬁgura 17.

Procedendo desta forma, a primeira linha ter´a todas as suas luzes

apagadas.

Figura 17 – Apagando as Luzes da Primeira Linha

O m´etodo consiste em repetir este processo para a segunda, ter-
ceira e quarta linhas ou seja perseguir (apagar) as luzes nas linhas
superiores.

Agindo desta forma, vocˆe poder´a ter resolvido o jogo, ou ´e mais
prov´avel que vocˆe chegar´a a um estado em que o jogo ter´a algumas
luzes acesas na ´ultima linha. Se isso acontecer, h´a apenas sete poss´ıveis
conﬁgura¸c˜oes para solucionar o jogo. Dependendo de qual conﬁgura¸c˜ao
vocˆe obteve na ´ultima linha ap´os usar o m´etodo citado acima, vocˆe
ter´a que voltar a linha 1 e reiniciar o m´etodo, seguindo uma certa
conﬁgura¸c˜ao que apresentaremos a seguir.

O problema com o m´etodo de persegui¸c˜ao das luzes ´e que al-
gumas teclas ser˜ao pressionadas mais de uma vez, o que signiﬁca que
vocˆe n˜ao vai resolver o jogo pressionando a menor quantidade de teclas
poss´ıvel e vai acabar repetindo jogadas. Vocˆe pode pensar nos estados
das cinco teclas da primeira linha como uma sequˆencia bin´aria de 5
d´ıgitos.

Se vocˆe usar o m´etodo e n˜ao apagar todas as luzes, vocˆe pode vol-

71

tar na primeira linha e ent˜ao tentar umas das 32 conﬁgura¸c˜oes poss´ıves.
Por exemplo, primeiro tente 00000 esse seria o caso em que o jogo esta-
ria com todas as luzes apagadas ap´os utilizar o m´etodo de persegui¸c˜ao
das luzes, caso o jogo n˜ao seja solucionado na primeira tentativa, res-
tam ent˜ao 31 conﬁgura¸c˜oes distintas 10000, 01000 e 00100, . . . , 11111
onde o n´umero 1 representa a posi¸c˜ao correspondente a tecla a ser pres-
sionada e em seguida vocˆe dever´a utilizar o m´etodo de persegui¸c˜ao das
luzes.

A esta altura vocˆe deve estar se perguntando, ap´os usar o m´etodo
de persegui¸c˜ao da luzes e ter encontrado uma conﬁgura¸c˜ao qualquer na
´ultima linha, qual conﬁgura¸c˜ao de pressionamento na primeira linha ir´a
solucionar o jogo atrav´es do m´etodo de persegui¸c˜ao das luzes?

O que ser´a feito na verdade ´e pensarmos da seguinte maneira:

1) Imagine que vocˆe tenha um jogo com todas as luzes apagadas.

2) Pressionando a tecla x1 na primeira linha, as teclas x1, x2 e x6 se

acender˜ao.

3) Utilizando o m´etodo de persegui¸c˜ao das luzes obteremos a se-
guinte conﬁgura¸c˜ao para a ´ultima linha, conforme a ﬁgura 18.

Assim para apagar todas as luzes do jogo, basta voltar na pri-
meira linha, pressionar a tecla x1 e ent˜ao repetir o processo de perse-
gui¸c˜ao das luzes at´e a ´ultima linha, uma vez procedendo desta maneira
vocˆe ter´a solucionado o jogo.

A ﬁgura 19 mostra o estado da ´ultima linha ap´os o pressiona-
mento da tecla x1 na primeira linha a partir de um jogo com todas as
luzes apagadas e a utiliza¸c˜ao do m´etodo de persegui¸c˜ao das luzes.

Continuaremos a analisar o estado ﬁnal das teclas na ´ultima linha
ao pressionarmos algumas teclas na primeira linha usando o m´etodo de
persegui¸c˜ao das luzes. Agora a tecla a ser pressionada ser´a a tecla x2,
e desta forma vamos veriﬁcar qual a conﬁgura¸c˜ao na ´ultima linha.

Observe que para solucionar o jogo, ap´os ter apagado todas as
luzes das linhas 1, 2, 3 e 4, basta voltar na primeira linha e pressionar a
tecla x2 e ent˜ao repetir o processo de persegui¸c˜ao das luzes at´e a ´ultima
linha e vocˆe ter´a solucionado o jogo.

A ﬁgura 21 mostra o estado da ´ultima linha ap´os o m´etodo de
persegui¸c˜ao das luzes tendo ocorrido o pressionamento da tecla x2 na
primeira linha a partir de um jogo com todas as luzes apagadas.

Do total de 32 possibilidades existentes, se continuarmos o pro-
cesso fazendo todas as combina¸c˜oes poss´ıveis de pressionamento das

72

Figura 18 – Caso 1

Figura 19 – Estado da ´ultima linha e a tecla a ser pressionada na
primeira linha

teclas na primeira linha, pode-se veriﬁcar que algumas destas conﬁgu-

73

Figura 20 – Caso 2

Figura 21 – Estado da ´ultima linha e sua respectiva conﬁgura¸c˜ao a ser
pressionada na primeira linha

74

ra¸c˜oes ir˜ao gerar as mesmas conﬁgura¸c˜oes na ´ultima linha que outros
pressionamentos, como por exemplo as sequˆencias de pressionamentos
consecutivos na primeira linha das teclas x1 e x2 ir´a gerar a mesma
sequˆencia na ´ultima linha que o pressionamento das teclas x4 e x5 ap´os
a utiliza¸c˜ao do m´etodo de persegui¸c˜ao das luzes dadas na ﬁgura 22.

Figura 22 – Pressionamento das teclas x1 e x2 ou x4 e x5

Continuando assim podemos veriﬁcar que do total de 32 combi-
na¸c˜oes poss´ıveis que podem ser encontradas na ´ultima linha, apenas 7
destas resultar˜ao em conﬁgura¸c˜oes vi´aveis distintas. Temos ent˜ao, um
total de 24 conﬁgura¸c˜oes n˜ao vi´aveis para a ´ultima linha, uma vez que
n˜ao formam uma base ortogonal para o epa¸co nulo da matriz conﬁgu-
ra¸c˜ao A. Alguns destes vetores (conﬁgura¸c˜oes n˜ao vi´aveis) s˜ao:

b1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],

b2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0]

e

b3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1].

A ﬁgura 23 apresenta as 24 conﬁgura¸c˜oes n˜ao vi´aveis para a

´ultima linha ap´os a utiliza¸c˜ao do m´etodo de persegui¸c˜ao das luzes.

Figura 23 – As 24 conﬁgura¸c˜oes n˜ao vi´aveis

J´a a ﬁgura 24 apresenta as 7 conﬁgura¸c˜oes vi´aveis para a ´ultima
linha e suas respectivas conﬁgura¸c˜oes de pressionamento na primeira
linha.

75

Figura 24 – Estado da ´ultima linha e respectivas teclas a serem pressi-
onadas na primeira linha

76

77

5 APLICA ¸C ˜AO AO ENSINO M´EDIO

Como o estudo de Matrizes e Sistemas Lineares s˜ao conte´udos
presentes nos Parˆametros Curriculares Nacionais (PCN), apresen-
tamos ent˜ao um plano de aula que trata de uma aplica¸c˜ao de matrizes
e sistemas lineares na busca por uma solu¸c˜ao para o jogo Lights Out.
O plano de aula pode ser aplicado a uma turma do 2◦ ano do
ensino m´edio, buscando apresentar novas formas de se apresentar o con-
te´udo de matrizes e sistemas lineares.

Unidade Curricular: Matem´atica.
Turma: 2o ano do ensino m´edio.
Tema: Matrizes e Sistemas Lineares.

Objetivo Geral

A partir dos conhecimentos b´asicos sobre a teoria de matrizes
e sistemas lineares, busca-se apresentar estrat´egias que visem atrair a
aten¸c˜ao dos alunos para aplicar a teoria estudada em sala de aula na
modelagem para a solu¸c˜ao do jogo Lights Out.

Objetivos Espec´ıﬁcos

Apresentar os conceitos b´asicos da `Algebra Linear usando o jogo

Lights Out como motiva¸c˜ao.

Desenvolver a capacidade de racioc´ınio l´ogico e organizado.
Perceber e compreender o interrelacionamento das diversas ´areas

de Matem´atica na sua vida cotidiana.

Aplicar as t´ecnicas de resolu¸c˜ao de sistema lineares para soluci-

onar uma dada conﬁgura¸c˜ao vi´avel do jogo Lights Out.

Trabalhar com um conjunto numa aritm´etica diferente da usual.
Identiﬁcar e resolver modelos matem´aticos atrav´es dos t´opicos

desenvolvidos em sala de aula.

Conte´udo Program´atico

1) Matrizes

2) Posto e nulidade de uma matriz.

3) Resolu¸c˜ao de sistemas lineares.

78

4) Solu¸c˜oes para o jogo Lights Out de ordem 3 × 3.

Metodologia

Uma vez que se tenha desenvolvido a teoria necess´aria de matri-
zes e sistemas lineares em aulas anteriores, bem como a apresenta¸c˜ao
e funcionamento do jogo, a turma ser´a dividida em grupos, onde cada
grupo ter´a duas conﬁgura¸c˜oes do jogo para solucionar. Lembrando
que, os alunos dever˜ao utilizar os conceitos de matrizes e resolu¸c˜ao de
sistemas lineares.

Primeiramente cada grupo ser´a orientado a formar a matriz con-
ﬁgura¸c˜ao do jogo e ent˜ao, a partir do jogo apresentado eles dever˜ao
identiﬁcar o vetor conﬁgura¸c˜ao b e ent˜ao montar o sistema Ax = b.
Em seguida os alunos dever˜ao resolver esse sistema 9 × 9 e encontrar
uma solu¸c˜ao para o jogo que lhes foi apresentado.

Jogo 1. Seja o jogo dado pela ﬁgura 25, encontre o que se pede:

Figura 25 – Conﬁgura¸c˜ao de um jogo 3 × 3

a) Apresente a matriz conﬁgura¸c˜ao.

b) Encontre o vetor b conﬁgura¸c˜ao do jogo.

c) Forme o sistema linear Ax = b.

d) Encontre a matriz R forma escada reduzida de A e conclua quan-

tas solu¸c˜oes poss´ıveis uma dada conﬁgura¸c˜ao poder´a ter.

e) Encontre a solu¸c˜ao para o jogo da ﬁgura 25 utilizando a elimina-

¸c˜ao Gaussiana.

Resolu¸c˜ao.

79

a) A matriz conﬁgura¸c˜ao para o jogo Lights Out de ordem 3 × 3 ´e
encontrada observando quais teclas ao serem pressionadas alteram
o estado de uma tecla espec´ıﬁca, come¸cando pela tecla x1 at´e a
tecla x9 n´os temos o seguinte sistema:

b1 = x1 + x2 + x4
b2 = x1 + x2 + x3 + x5
b3 = x2 + x3 + x6 +
b4 = x1 + x4 + x5 + x7
b5 = x2 + x4 + x6 + x8
b6 = x3 + x5 + x6 + x9
b7 = x4 + x7 + x8
b8 = x5 + x7 + x8 + x9
b9 = x6 + x8 + x9

(5.1)

Portanto, a matriz conﬁgura¸c˜ao para qualquer jogo 3 × 3 ´e

A =

1
1
0
1
0
0
0
0
0

















1 0
1 1
1 1
0 0
1 0
0 1
0 0
0 0
0 0

1 0
0 1
0 0
1 1
1 1
0 1
1 0
0 1
0 0

0 0
0 0
1 0
0 1
1 0
1 0
0 1
0 1
1 0

0 0
0 0
0 0
0 0
1 0
0 1
1 0
1 1
1 1

.

















b) Da ﬁgura 25 obtemos o vetor conﬁgura¸c˜ao:

b = [1, 0, 0, 0, 0, 1, 1, 1, 1]T.

c) Assim do item a) temos que o sistema que modela o jogo ´e dado

por:

x1 + x2 + x4
= 1
x1 + x2 + x3 + x5 = 0
x2 + x3 + x6
= 0
x1 + x4 + x5 + x7 = 0
x2 + x4 + x6 + x8 = 0
x3 + x5 + x6 + x9 = 1
x4 + x7 + x8
= 1
x5 + x7 + x8 + x9 = 1
x6 + x8 + x9
= 1

(5.2)

80

que na forma matricial ﬁca:

1 1
1 1
0 1
1 0
0 1
0 0
0 0
0 0
0 0

















0 1
1 0
1 0
0 1
0 1
1 0
0 1
0 0
0 0

0 0
1 0
0 1
1 0
1 1
1 1
0 0
1 0
0 1

0 0
0 0
0 0
1 0
0 1
0 0
1 1
1 1
0 1

0
0
0
0
0
1
0
1
1

x1
x2
x3
x4
x5
x6
x7
x8
x9

















































=

1
0
0
0
0
1
1
1
1

































(5.3)

d) ´E f´acil veriﬁcar que a matriz R, forma escada reduzida de A ´e,

1 0
0 1
0 0
0 0
0 0
0 0
0 0
0 0
0 0

















0 0
0 0
1 0
0 1
0 0
0 0
0 0
0 0
0 0

0 0
0 0
0 0
0 0
1 0
0 1
0 0
0 0
0 0

0
0
0
0
0
0
1
0
0

0 0
0 0
0 0
0 0
0 0
0 0
0 0
1 0
0 1

















Observe que posto(R) = 9, portanto toda e qualquer conﬁgura¸c˜ao
para o jogo 3 × 3 ser´a vi´avel e ter´a uma ´unica solu¸c˜ao.

e) Utilizando a elimina¸c˜ao Gaussiana para resolver o sistema (5.3)

obtemos o sistema de equa¸c˜oes lineares (5.4):

1 0
0 1
0 0
0 0
0 0
0 0
0 0
0 0
0 0

















0 0
0 0
1 0
0 1
0 0
0 0
0 0
0 0
0 0

0 0
0 0
0 0
0 0
1 0
0 1
0 0
0 0
0 0

0 0
0 0
0 0
0 0
0 0
0 0
1 0
0 1
0 0

0
0
0
0
0
0
0
0
1

x1
x2
x3
x4
x5
x6
x7
x8
x9

















































=

0
1
1
0
0
0
0
1
0

































(5.4)

e a ´unica conﬁgura¸c˜ao que apagar´a todas as luzes do jogo dado

81

neste exemplo ´e:

b = [0, 1, 1, 0, 0, 0, 0, 1, 0]T.

A ﬁgura 26 mostra as teclas a serem pressionadas para apagar todas as
luzes do jogo dado pela ﬁgura 25.

Figura 26 – Solu¸c˜ao

Exemplo 5.0.1. Encontre a solu¸c˜ao para as seguintes conﬁgura¸c˜oes.

(a)

(b)

(c)

(d)

Vocˆe poder´a jogar a vers˜ao online do jogo Lights Out no seguinte

endere¸co, http://www.logicgamesonline.com/lightsout/.

82

83

6 CONSIDERA ¸C ˜OES FINAIS

Ainda que as teorias aqui apresentadas sejam comumente tra-
tadas em cursos de gradua¸c˜ao, ´e poss´ıvel fazer certas adapta¸c˜oes para
que tais teorias sejam trabalhadas no ensino m´edio.

O intuito deste trabalho foi mostrar como certos conceitos da
´algebra linear podem ser utilizados na modelagem do jogo lights out.
Uma vez que a modelagem do jogo nos levou a um sistema de equa¸c˜oes
lineares, o estudo da teoria dos subespa¸cos fundamentais de uma matriz
se fez necess´ario visto que o conjunto solu¸c˜ao de um sistema de equa¸c˜oes
lineares est´a diretamente ligada a tais subespa¸cos.

Vimos tamb´em que ao trabalharmos em Z2 as opera¸c˜oes ele-
mentares realizadas para transformar uma matriz na sua forma escada
reduzida se tornam mais simples e que tamb´em reduz a quantidade de
solu¸c˜oes de um sistema com mais de uma solu¸c˜ao se comparado com
sistema de equa¸c˜oes lineares em R, uma vez que os valores atribu´ıdos
as vari´aveis livres s˜ao 0 ou 1.

Uma outra forma de modelar o problema de apagar as luzes ´e
atrav´es da teoria de grafos, o leitor pode obter maiores informa¸c˜oes
em [Ito].

Esperamos assim, que este trabalho sirva de motiva¸c˜ao para que
professores possam trabalhar as aplica¸c˜oes da ´algebra linear com seus
alunos em sala de aula, bem como utilizar uma ferramenta computaci-
onal capaz de auxili´a-los em seus estudos.

84

85

REFERˆENCIAS

ANDERSON, M., FEIL, T., Turning Lights Out with Linear Algebra,
vol. Math Magazine, 71, no. 4, October 1998, pp. 300-303. 2001.
<https://www.math.ksu.edu/math551/math551a.f06/lights-out.pdf>
Acesso em: 18 agosto 2015).

ANTON, Howard, RORRES, C., ´Algebra linear com aplica¸c˜oes,
Bookman, 8a. Edi¸c˜ao, 2001.

BOLDRINI, Jos´e L. et al., ´Algebra Linear, Ed. Harbra, 1a. Edi¸c˜ao,
1978.

CARVALHO, Jo˜ao Pitombeira de, ´Algebra linear: Introdu¸c˜ao, Livros
T´ecnicos e Cient´ıﬁcos, 2a. Edi¸c˜ao, 1977.

HEFEZ, A., FERNANDEZ, Cec´ılia S., Introdu¸c˜ao `a ´Algebra Linear.
Rio de Janeiro: SBM, 2012. Cole¸c˜ao PROFMAT.

HOFFMAN, K.,KUNZE, R., Linear Algebra, Prentice Hall, 2nd
Edition, 1971 (edi¸c˜ao em portuguˆes: ´Algebra Linear, Livros T´ecnicos
e Cient´ıﬁcos Ed., 3a. Edi¸c˜ao, 1979).

ITO, H., KANO, M., KATOH, N. UNO, Y., Computational
Geometry and Graph Theory: International Conference, KyotoCGGT
2007, Kyoto, Japan, June 11-15, 2007. Revised Selected Papers.
<https://books.google.com.br/books?id=h9CpCAAAQBAJ&
lpg=PP1& hl=pt-BR& pg=PP1# v=onepage& q& f=false> Acesso
em: 15 mar¸co 2016.

KOLMAN, Bernard, Introdu¸c˜ao `a ´Algebra Linear com Aplica¸c˜oes,
Prentice Hall do Brasil, 6a. Edi¸c˜ao, 1998.

LEON, Bernard, Steven J., Linear algebra with application, Prentice
Hall, 8a. Edi¸c˜ao, 2010.

MADSEN, Matthew A., Lights Out: Soluti-
ons Using Linear Algebra, May 2010, pp. 36-39.
2001.<http://cau.ac.kr/ mhhgtx/courses/LinearAlgebra/references/
MadsenLightsOut.pdf> Acesso em: 15 agosto 2015.

MULHOLLAND, J., Permutation Puzzles: A Mathematical Perspec-
tive.<http://www.sfu.ca/ jtmulhol/math302/notes/302notes.pdf>
Acesso em: 15 agosto 2015).

86

S ´ANCHES, ´Oscar M.,FLORES, C. Pareja, Two Reﬂected Analyses
of Lights Out, Mathematics Magazine, 74, 4, pp. 295?304,
2001.<http://www.jstor.org/stable/2691099> Acesso em: 15 agosto
2015.

STRANG, Gilbert, ´Algebra Linear e suas aplica¸c˜oes. S˜ao Paulo,
Cengage Learning, 2009.

