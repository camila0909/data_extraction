Centro Federal de Educa¸c˜ao Tecnol´ogica de Minas Gerais
PROFMAT - Mestrado Profissional em Matem´atica em Rede Nacional

Samuel Duque Gon¸calves

Grupos matriciais aplicados `a cinem´atica
direta de bra¸co rob´otico

Belo Horizonte
2020

Samuel Duque Gon¸calves

GRUPOS MATRICIAIS APLICADOS `A CINEM ´ATICA
DIRETA DE BRA ¸CO ROB ´OTICO

Disserta¸c˜ao apresentada ao Centro Federal de Edu-
ca¸c˜ao Tecnol´ogica de Minas Gerais como parte das
exigˆencias do Programa de P´os-Gradua¸c˜ao Mestrado
Proﬁssional em Matem´atica em Rede Nacional, para
obter o t´ıtulo de Mestre.

Orientadora

Marcela Richele Ferreira

Coorienta¸c˜ao

Geraldo Magela Couto Oliveira

Banca Examinadora

Carlos Alexandre Silva
Saulo Furletti
´Eden Santana Campos Amorim

Belo Horizonte
2020

                                                      Elaboração da ficha catalográfica pela bibliotecária Jane Marangon Duarte, CRB 6​o 1592 / Cefet/MG   Gonçalves, Samuel Duque G635g Grupos matriciais aplicados à cinemática direta de braço robótico / Samuel Duque Gonçalves. – 2020.  127 f.    Dissertação de mestrado apresentada ao Programa de Mestrado Profissional em Matemática em Rede Nacional.  Orientadora: Marcela Richele Ferreira. Coorientador: Geraldo Magela Couto Oliveira.  Dissertação (mestrado) – Centro Federal de Educação Tecnológica de Minas Gerais.    1. Matemática aplicada – Teses. 2. Geometria analítica – Teses. 3. Álgebra linear – Teses. 4. Grupos matriciais – Teses. 5. Robótica – Teses. I. Ferreira, Marcela Richele. II. Oliveira, Geraldo Magela Couto. III.  Centro Federal de Educação Tecnológica de Minas Gerais. IV. Título.   CDD 519   `As minhas queridas Lara e Maria Alice

Agradecimentos

Agrade¸co primeiramente a Deus, criador e sustentador de todas
as coisas, que me proporcionou tudo que precisava para chegar at´e a
conclus˜ao desse trabalho. A Ele toda a Gl´oria!

`A minha amada esposa Lara minha profunda gratid˜ao, pelo compa-
nheirismo, incentivo e amor manifestados a cada momento, n˜ao somente
durante a elabora¸c˜ao da disserta¸c˜ao, mas durante todo o mestrado. Agra-
de¸co, tamb´em, `a nossa ﬁlha Maria Alice pela compreens˜ao, pelo carinho e
por se preocupar pelas noites mal dormidas de seu pai. O apoio de vocˆes
foi o combust´ıvel para eu ir at´e o ﬁm.

Agrade¸co muito `a minha orientadora Marcela pela paciˆencia, pres-
teza e pelas orienta¸c˜oes precisas dadas. Ao meu coorientador Geraldo
Magela, minha gratid˜ao pelos coment´arios relevantes e oportunos. A
experiˆencia e o conhecimento de vocˆes, bem como todo o suporte dado,
foram essenciais nessa trajet´oria.

Aos professores doutores Carlos Alexandre Silva, Saulo Furletti,
´Eden Santana Campos Amorim e Pedro Henrique Pereira Daldegan meus
sinceros agradecimentos por comporem minha banca. Os coment´arios
e sugest˜oes dados foram de alt´ıssimo valor e contribu´ıram grandemente
para o meu conhecimento e para a qualidade ﬁnal do trabalho.

Minha gratid˜ao, tamb´em, aos demais professores e `a coordena¸c˜ao
do PROFMAT do Cefet-MG por todo o proﬁssionalismo apresentado
durante o decorrer do curso.

Por ﬁm, aos amigos, familiares, colegas, tanto de trabalho quanto
de turma, e demais pessoas que de alguma maneira contribu´ıram para o
desenvolvimento desse trabalho, meus sinceros agradecimentos.

O presente trabalho foi realizado com apoio da Coordena¸c˜ao de Aperfei-
¸coamento de Pessoal de N´ıvel Superior – Brasil (CAPES) – C´odigo de
Financiamento 001.

Resumo

O desempenho dos estudantes brasileiros nas edi¸c˜oes do Programa Internacional de Ava-
lia¸c˜ao de Alunos (PISA) at´e 2018, com o foco em Matem´atica, demonstrou que estes
obtiveram uma nota bem aqu´em da m´edia internacional. Com base no resultado obtido na
edi¸c˜ao de 2012 do PISA, um texto apresentado pela Sociedade Brasileira de Matem´atica
levantou, entre outras, a seguinte quest˜ao a ser respondida pelos professores: “O meu
ensino deve enfatizar os conceitos matem´aticos ou como esses conceitos s˜ao aplicados
no mundo real?” Como resposta, foi incentivado o ensino da Matem´atica em sua forma
aplicada, ao inv´es de apenas em sua forma pura. Dentre as ´areas do ensino da Matem´atica
inclu´ıdas no plano da Educa¸c˜ao B´asica, optou-se, ent˜ao, por apresentar uma aplica¸c˜ao da
Geometria Anal´ıtica e da ´Algebra Linear. A proposta desse trabalho ´e uma aplica¸c˜ao de
grupos alg´ebricos matriciais na Rob´otica, por meio de um ambiente de programa¸c˜ao e
um simulador de robˆos, como material alternativo e vi´avel para o ensino-aprendizagem de
Matem´atica. Dentre as atividades poss´ıveis, este trabalho trata da Cinem´atica Direta de
um bra¸co rob´otico, que ´e a descri¸c˜ao do posicionamento e orienta¸c˜ao do efetuador, que
´e o ´ultimo elemento deste equipamento, tendo a informa¸c˜ao da localiza¸c˜ao de sua base,
o tamanho de seus elos e a posi¸c˜ao de suas juntas. A aplica¸c˜ao dos grupos matriciais se
deu por meio da nota¸c˜ao apresentada por Denavit e Hartenberg. Como produto ﬁnal, s˜ao
apresentadas algumas atividades que podem ser aplicadas no ambiente escolar. Como
incentivo `a aplica¸c˜ao dos m´etodos sugeridos por este trabalho, foram utilizadas ferramentas
gratuitas de programa¸c˜ao e de simula¸c˜ao de Rob´otica.

Palavras-chave: Matem´atica Aplicada. Geometria Anal´ıtica. ´Algebra Linear. Grupos
Matriciais. Rob´otica.

Abstract

The performance of brazilian students in the editions of the Programme for International
Student Assessment (PISA) until 2018, with a focus on Mathematics, showed that they
obtained a grade below the international average. Based on the result obtained in PISA
of 2012, a text presented by the Brazilian Mathematical Society raised, among others,
the following question to be answered by teachers: “Should my teaching emphasize
mathematical concepts or how those concepts are applied in the real world?” As an answer,
the teaching of mathematics in its applied form was encouraged, instead of just in its pure
form. Among the areas of Mathematics education included in the basic education plan, it
was decided, then, to present an application of Analytical Geometry and Linear Algebra.
The purpose of this work is an application of matrix algebraic groups in Robotics, through
a programming environment and a robot simulator, as an alternative and viable material
for the teaching-learning of Mathematics. Among the possible activities, this work deals
with the Direct Kinematics of a robotic arm, which is the description of the positioning
and orientation of the end-eﬀector, that is last element of this equipment, with information
on the location of its base, the size of its links and the position of its joints. The matrix
groups was applied through the notation presented by Denavit and Hartenberg. As ﬁnal
product, some activities that can be applied in the school environment are presented. As
an incentive to apply the methods suggested by this work, free programming and robotics
simulation tools were used.

Keywords: Applied Mathematics. Analytical Geometry. Linear Algebra. Matrix Groups.
Robotics.

Lista de Abreviaturas

Abreviaturas utilizadas neste trabalho:

API

Interface de programa¸c˜ao de aplica¸c˜oes

BNCC

Base Nacional Curricular Comum

OCDE

Organiza¸c˜ao para a Coopera¸c˜ao e Desenvolvimento Econˆomico

PCN

PISA

Parˆametros Curriculares Nacionais

Programa Internacional de Avalia¸c˜ao de Alunos

PROFMAT Mestrado Proﬁssional em Matem´atica

SBM

Sociedade Brasileira de Matem´atica

Lista de S´ımbolos

S´ımbolos e nota¸c˜oes utilizadas neste trabalho:

α letra grega Alfa

β letra grega Beta

γ

θ

letra grega Gama

letra grega Teta

π letra grega Pi

σ letra grega Sigma

φ letra grega Fi

[A]ij

termo da i-´esima linha e da j-´esima
coluna de uma matriz A

B base de espa¸co vetorial
−→
AB vetor que liga o ponto A ao ponto B

(cid:126)v vetor

v vetor coluna

[F ((cid:126)u)] vetor coluna de uma transforma¸c˜ao

linear F sobre um vetor (cid:126)u

∀ para todo

∈ pertence a

∃ existe

;

tal que (em express˜oes matem´aticas)

R conjunto dos n´umeros reais

Z conjunto dos n´umeros inteiros

≡ congruente a

≈ aproximadamente igual a

(cid:107) paralelo a

⊥ perpendicular (ou ortogonal) a

(cid:107)(cid:126)v(cid:107) norma de um vetor (cid:126)v

∗ opera¸c˜ao bin´aria

Lista de Figuras

Isometrias diretas em R2 e R3

2.1 Produto Vetorial
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
2.2 Regra da m˜ao direita . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39
2.3 Coordenadas Esf´ericas
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39
. . . . . . . . . . . . . . . . . . . . . . . . . 43
2.4
2.5 Representa¸c˜ao das matrizes identidade . . . . . . . . . . . . . . . . . . . . 47
2.6 Rota¸c˜ao de 30◦ no plano . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50
2.7 Representa¸c˜ao de Rot ((cid:126)z, 45◦)
. . . . . . . . . . . . . . . . . . . . . . . . . 52
2.8 Representa¸c˜ao de Trans ((cid:126)p) Rot ((cid:126)z, 30◦) em SE (3)
. . . . . . . . . . . . . . 56

3.1 Posicionamento do triˆangulo no plano . . . . . . . . . . . . . . . . . . . . . 58
3.2 Posicionamento do prisma no espa¸co . . . . . . . . . . . . . . . . . . . . . 60
3.3 Bra¸co rob´otico IRB 140 da marca Asea Brown Boveri (ABB)
. . . . . . . 63
3.4 Bra¸co rob´otico planar . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
3.5 Ambiente de programa¸c˜ao do Octave . . . . . . . . . . . . . . . . . . . . . 66
3.6 Ambiente de Simula¸c˜oes do CoppeliaSim . . . . . . . . . . . . . . . . . . . 68
3.7 Bra¸co IRB 140 no CoppeliaSim ap´os sua conﬁgura¸c˜ao . . . . . . . . . . . . 69
3.8 Bra¸co IRB 140 no CoppeliaSim, com a junta 5 selecionada na Hierarquia

da Cena e descrita no Texto de Informa¸c˜ao . . . . . . . . . . . . . . . . . . 70
3.9 Dimens˜oes do bra¸co rob´otico IRB 140 da ABB em mil´ımetros
. . . . . . . 71
3.10 Posi¸c˜ao inicial do bra¸co rob´otico simulado no Octave . . . . . . . . . . . . 76
3.11 Compara¸c˜ao das simula¸c˜oes no Octave e no CoppeliaSim - Teste 1 . . . . . 78
3.12 Compara¸c˜ao das simula¸c˜oes no Octave e no CoppeliaSim - Teste 2 . . . . . 79
3.13 Compara¸c˜ao das simula¸c˜oes no Octave e no CoppeliaSim - Teste 3 . . . . . 80
3.14 Interface gr´aﬁca de usu´ario para controle do bra¸co rob´otico no Octave e no

CoppeliaSim . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81
3.15 Interface gr´aﬁca em 3D com ˆangulos aleat´orios . . . . . . . . . . . . . . . . 82
3.16 Interface gr´aﬁca em 2D com ˆangulos aleat´orios . . . . . . . . . . . . . . . . 83
. . . . . . . . . . . . . . . 85
3.17 Teste online com interfaces, em trˆes dimens˜oes
3.18 Teste online com interfaces, em duas dimens˜oes . . . . . . . . . . . . . . . 86

4.1
Isometria aplicada a elipse . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
4.2 Descrevendo as coordenadas do ponto D e o ˆangulo entre o vetor (cid:126)xf e o eixo (cid:126)x 91
. . . . . . . . . . . . 94
4.3 Bra¸co rob´otico no plano com juntas em estado inicial
. . . . . . . . . . . . . . . . 95
4.4 Bra¸co rob´otico no plano com juntas alteradas

B.1 Janelas de transla¸c˜ao e rota¸c˜ao de objetos no CoppeliaSim . . . . . . . . . 121
B.2 Janela de propriedades de juntas e janela de scripts no CoppeliaSim . . . . 123

C.1 Arquivos contidos na pasta de simula¸c˜ao . . . . . . . . . . . . . . . . . . . 127

Lista de Tabelas

3.1 Juntas do bra¸co rob´otico . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70
3.2 Elos do bra¸co rob´otico . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
. . . . . . . . . . . . . . . . . . . . . . . . 77
3.3 Resultado dos testes no Octave

Sum´ario

1 Introdu¸c˜ao

13

2 Fundamenta¸c˜ao Te´orica

2.1 No¸c˜oes de ´Algebra Linear

18
. . . . . . . . . . . . . . . . . . . . . . . . . . . 18
2.1.1 Adi¸c˜ao e Multiplica¸c˜ao de Matrizes . . . . . . . . . . . . . . . . . . 20
2.1.2 Matriz Transposta . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
2.1.3 Determinante . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
2.1.4 Matriz Inversa . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
2.1.5 Espa¸co Vetorial Real
. . . . . . . . . . . . . . . . . . . . . . . . . . 34
2.1.6 Transforma¸c˜ao Geom´etrica . . . . . . . . . . . . . . . . . . . . . . . 41
2.2 Grupos Matriciais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
2.2.1 Grupo Ortogonal Especial
. . . . . . . . . . . . . . . . . . . . . . . 45
2.2.2 Grupo Euclidiano Especial . . . . . . . . . . . . . . . . . . . . . . . 53

3 Desenvolvimento

57
3.1 Posicionamento de um Objeto R´ıgido . . . . . . . . . . . . . . . . . . . . . 57
3.1.1 Posicionamento no Plano . . . . . . . . . . . . . . . . . . . . . . . . 57
3.1.2 Posicionamento no Espa¸co . . . . . . . . . . . . . . . . . . . . . . . 59
3.1.3 Graus de Liberdade . . . . . . . . . . . . . . . . . . . . . . . . . . . 61
3.2 Simula¸c˜ao do bra¸co rob´otico . . . . . . . . . . . . . . . . . . . . . . . . . . 61
3.2.1 Deﬁni¸c˜ao de bra¸co rob´otico . . . . . . . . . . . . . . . . . . . . . . 62
3.2.2 Nota¸c˜ao de Denavit-Hartenberg . . . . . . . . . . . . . . . . . . . . 64
3.2.3 A linguagem de programa¸c˜ao Octave . . . . . . . . . . . . . . . . . 66
3.2.4 O software CoppeliaSim . . . . . . . . . . . . . . . . . . . . . . . . 67
3.2.5 Descri¸c˜ao dos elementos do bra¸co rob´otico . . . . . . . . . . . . . . 69
3.2.6 Montagem do bra¸co rob´otico no Octave . . . . . . . . . . . . . . . . 73
Simula¸c˜ao por interface gr´aﬁca de usu´ario . . . . . . . . . . . . . . 81
3.2.7

4 Atividades para sala de aula

87
4.1 Atividade 1: Elipse transladada e rotacionada . . . . . . . . . . . . . . . . 88
4.2 Atividade 2: Cinem´atica direta no plano . . . . . . . . . . . . . . . . . . . 91
4.3 Atividade 3: Simula¸c˜ao computacional de bra¸co rob´otico em duas dimens˜oes 93
4.4 Atividade 4: Utiliza¸c˜ao de interface gr´aﬁca do Octave . . . . . . . . . . . . 96

5 Considera¸c˜oes ﬁnais

Referˆencias

Anexos

99

102

A Algoritmos do Octave

105
. . . . . . . . . . . . . . . . . . . . . . . 105
A.1 Simula¸c˜ao de robˆo 3D no Octave
. . . . . . . . . . . . . . . . . . . . . . . 108
A.2 Simula¸c˜ao de robˆo 2D no Octave
A.3 C´odigo para criar a Interface Gr´aﬁca (create gui.m) . . . . . . . . . . . . . 110
A.4 Fun¸c˜ao conect.m . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116
A.5 Fun¸c˜ao set target.m . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116
A.6 Fun¸c˜ao robot plot.m . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117

B Conﬁgura¸c˜ao do CoppeliaSim para as simula¸c˜oes

120
B.1 Conﬁgura¸c˜ao para o levantamento das juntas e elos . . . . . . . . . . . . . 120
B.2 Conﬁgura¸c˜ao para o in´ıcio da anima¸c˜ao . . . . . . . . . . . . . . . . . . . . 121

C Conﬁgura¸c˜ao de interfaces para o Octave

126

1 Introdu¸c˜ao

O resultado dos estudantes brasileiros na edi¸c˜ao de 2018 da prova do Programa

Internacional de Avalia¸c˜ao de Alunos (PISA, da sigla em inglˆes) demonstrou que o desem-

penho nacional na disciplina Matem´atica est´a abaixo da m´edia mundial[1]. Um relat´orio

preliminar emitido pelo Minist´erio da Educa¸c˜ao constatou que, por mais que a m´edia

tenha crescido entre 2003 e 2018, tal crescimento n˜ao foi estatisticamente signiﬁcativo[2].

Fundamentado nos resultados da edi¸c˜ao de 2015 do PISA, um texto da Organiza¸c˜ao

para a Coopera¸c˜ao e Desenvolvimento Econˆomico (OCDE), organizadora do teste, traduzido

pela Sociedade Brasileira de Matem´atica (SBM) levantou, dentre outras, a seguinte quest˜ao:

“O meu ensino deve enfatizar os conceitos matem´aticos ou como esses conceitos s˜ao aplicados

no mundo real?”[3, p. 76]. Como resposta, foi evocado o debate cl´assico sobre se ensinar a

Matem´atica em sua forma pura ou em sua forma aplicada, como resolu¸c˜ao de situa¸c˜oes-

problema do cotidiano.

Sobre a abordagem aplicada do ensino, Andrade[4] constatou, por meio de sua

pesquisa, que h´a “a necessidade de uma nova vis˜ao diante do modelo atual sob o qual

acontece o ensino da Matem´atica, de modo que o aluno perceba sua importˆancia e utilidade

no seu cotidiano e assim, comece a adquirir interesse por tal disciplina”.

Em um contexto de baixo desempenho escolar, Brito, Moita e Lopes[5] frisaram a

importˆancia de se “discutir alternativas metodol´ogicas no processo de ensino com objetivo

de alcan¸car melhores resultados de aprendizagem”.

O desenvolvimento de tecnologias e a inclus˜ao digital podem ser facilitadores do

ensino da Matem´atica. Peralta e Guimar˜aes[6] ressaltaram que surge a necessidade de

formar professores atuantes em contextos informatizados e essa forma¸c˜ao deveria contem-

plar a¸c˜oes que encorajassem e subsidiassem o professor para interagir com tecnologias,

transformando-a.

Ainda como resposta `a pergunta levantada sobre o ensino de Matem´atica em sua

forma Pura e Aplicada, o texto apresentado pela SBM incentiva o professor para que

13

Cap´ıtulo 1.

Introdu¸c˜ao

14

Dˆe aos alunos uma variedade de problemas que incluam problemas
contextualizados, nos quais eles precisam aplicar o conhecimento para
encontrar uma solu¸c˜ao para um problema com o qual j´a se depararam
na vida cotidiana. Pedagogias como aprendizado baseado em projetos
ou baseado em problemas apresentam ao aluno problemas do mundo
real que eles precisam resolver, geralmente como um time, aplicando as
habilidades que acabaram de aprender. [3, p. 86]

Para que seja realizada uma aplica¸c˜ao eﬁcaz de conceitos matem´aticos em ambiente

de sala de aula para a resolu¸c˜ao de problemas, interagindo com tecnologias, ´e necess´ario que

os docentes sejam treinados para tal. Dentre as solu¸c˜oes coordenadas pela SBM que visam

o aperfei¸coamento da forma¸c˜ao de professores, pode-se destacar o mestrado proﬁssional

em Matem´atica, o PROFMAT. Este programa visa incentivar a pesquisa e a produ¸c˜ao de

materiais e pr´aticas pedag´ogicas inovadoras para o enriquecimento do processo de ensino e

aprendizagem de Matem´atica na escola[7].

Baseado no incentivo de promover uma pr´atica pedag´ogica para a resolu¸c˜ao de

problemas e tendo em vista a necessidade de contextualizar o ensino da Matem´atica

com atividades pr´aticas que sejam relevantes, optou-se pela elabora¸c˜ao de um trabalho

na ´area de Matem´atica Aplicada. Dentre as ´areas do ensino, a Geometria Anal´ıtica e a
´Algebra Linear foram as escolhidas para o desenvolvimento desta disserta¸c˜ao. Este trabalho

busca abranger uma aplica¸c˜ao de conceitos matem´aticos dessas ´areas em um ambiente

computacional, fazendo o uso dos conhecimentos e forma¸c˜ao do autor em engenharia

alinhados com o conte´udo e o objetivo do PROFMAT.

Mais especiﬁcamente, a situa¸c˜ao-problema escolhida foi a cinem´atica direta do

bra¸co rob´otico, isto ´e, a descri¸c˜ao do posicionamento de seu elemento ﬁnal de posse de

algumas conﬁgura¸c˜oes relevantes pr´evias. O trabalho foi desenvolvido em um ambiente

computacional, por meio da linguagem de programa¸c˜ao Octave[8] integrada com o simulador

de rob´otica CoppeliaSim[9].

O produto ﬁnal apresentado nessa disserta¸c˜ao ´e uma lista de atividades com

aplica¸c˜oes de conceitos alg´ebricos de grupos matriciais, os quais podem ser interpretados

como transforma¸c˜oes geom´etricas que modiﬁcam a posi¸c˜ao de objetos no plano e no espa¸co,

incluindo elementos que comp˜oem os bra¸cos rob´oticos.

O p´ublico-alvo dessa disserta¸c˜ao s˜ao os professores da Educa¸c˜ao B´asica que queiram

apresentar os conceitos matem´aticos contidos nesse trabalho em sua forma aplicada. Alunos

de gradua¸c˜ao de Matem´atica e alunos da Educa¸c˜ao B´asica sob tutoria tamb´em podem

Cap´ıtulo 1.

Introdu¸c˜ao

15

fazer o uso dos conte´udos apresentados. Al´em disso, devido `as diversas ´areas abordadas,

professores do ensino t´ecnico, engenheiros, proﬁssionais de computa¸c˜ao e de outras ´areas

correlacionadas tamb´em podem fazer o uso do material exposto.

Como a inten¸c˜ao ´e propor um material que seja relevante para o uso em sala de aula,

fez-se necess´ario que o conte´udo fosse adequado `as exigˆencias do Minist´erio da Educa¸c˜ao.

Dessa forma, as atividades foram elaboradas de acordo com os requisitos presentes na

Base Nacional Curricular Comum (BNCC), “[...] um documento de car´ater normativo que

deﬁne o conjunto orgˆanico e progressivo de aprendizagens essenciais que todos os alunos

devem desenvolver ao longo das etapas e modalidades da Educa¸c˜ao B´asica”[10, p. 7].

Quanto ao conte´udo para o Ensino M´edio, a BNCC determina que, no que tange ao

conhecimento em rela¸c˜ao ao pensamento geom´etrico, os estudantes desenvolvam habilidades

para interpretar e representar a localiza¸c˜ao e o deslocamento de uma ﬁgura no plano

cartesiano, al´em de identiﬁcar transforma¸c˜oes isom´etricas[10, p. 527].

Sobre o ensino de ´Algebra Linear na Educa¸c˜ao B´asica, a BNCC n˜ao possui uma

orienta¸c˜ao expl´ıcita, uma vez os termos “matriz”, “determinante” e correlatos n˜ao constam

no texto. No entanto, a orienta¸c˜ao de ensinar sistemas lineares torna este estudo impl´ıcito.

Cristov˜ao e Spiller[11] acreditam que o ensino de matrizes “deve ser paralelo ao ensino de

sistemas, para auxiliar na sua compreens˜ao, como ferramenta na resolu¸c˜ao e interpreta¸c˜ao

de problemas, e n˜ao como um t´opico isolado da matem´atica”.

Os Parˆametros Curriculares Nacionais (PCN) apontam tamb´em que

O desenvolvimento da Geometria e o aparecimento da ´Algebra marcaram
uma ruptura com os aspectos puramente pragm´aticos da Matem´atica e
impulsionaram a sistematiza¸c˜ao dos conhecimentos matem´aticos, gerando
novos campos: Geometria Anal´ıtica, Geometria Projetiva, ´Algebra Linear
entre outros[12, p. 24].

Dessa forma, pode-se concluir que alguns problemas geom´etricos podem ser resolvidos por

ferramentas alg´ebricas e vice-versa.

Quanto ao uso de tecnologias no estudo da Matem´atica, a BNCC prop˜oe que

sua utiliza¸c˜ao seja realizada a partir dos anos iniciais do Ensino Fundamental e aﬁrma

ainda que “tal valoriza¸c˜ao possibilita que, ao chegarem aos anos ﬁnais, eles possam ser

estimulados a desenvolver o pensamento computacional, por meio da interpreta¸c˜ao e da

elabora¸c˜ao de algoritmos”[10, p. 529].

O estudo de grupos matriciais, bem como das demais estruturas alg´ebricas, n˜ao

Cap´ıtulo 1.

Introdu¸c˜ao

16

fazem parte do conte´udo exigido pela BNCC, logo n˜ao est˜ao no cotidiano do docente.

No entanto, como esse assunto ´e abordado em cursos de licenciatura em Matem´atica,

espera-se que o professor tenha alguma familiaridade com os conceitos apresentados.

Uma vez que os grupos matriciais s˜ao utilizados neste trabalho como ferramentas para a

cinem´atica direta dos bra¸cos rob´oticos, como um meio para esse ﬁm, tais grupos podem

ser expostos em sala apenas pelas suas propriedades e pelo seu signiﬁcado geom´etrico, sem

a necessidade de apresentar as demonstra¸c˜oes em um primeiro momento. E, apesar das

diﬁculdades que possam existir, a SBM orienta tamb´em que “os professores devem cobrir

os elementos fundamentais do curr´ıculo de matem´atica, mas ainda assim encontrar tempo

para expor os alunos a problemas que promovam um entendimento conceitual e ativem

suas habilidades cognitivas”[10, p. 529]. Dessa forma, o curto tempo a ser utilizado para

explicar o signiﬁcado geom´etrico das matrizes que pertencem aos grupos apresentados

contribuir´a para a sua utiliza¸c˜ao, tornando a explica¸c˜ao, ent˜ao, relevante para a resolu¸c˜ao

dos problemas propostos.

Entre as disserta¸c˜oes mais relevantes do acervo do PROFMAT que apresentam o

conte´udo de posicionamento de bra¸cos rob´oticos, pode-se destacar Costa[13], que enfatizou

o uso da nota¸c˜ao de Denavit-Hartenberg, a qual ´e exposta na Se¸c˜ao 3.2.2.

Mesquita[14] abordou as transforma¸c˜oes ortogonais envolvidas na cinem´atica direta

do bra¸co rob´otico. Ap´os apresentar uma aplica¸c˜ao por meio do software Geogebra,

Carvalho[15] pˆode concluir que o “[...] procedimento de modelagem e ensino de matem´atica

por meio da rob´otica, em especial, do bra¸co mecˆanico, permite trabalhar diversos conceitos

matem´aticos, relacion´a-los com a pr´atica de forma interdisciplinar e contextualizada e n˜ao

apenas os citados nas situa¸c˜oes de aprendizagens”.

Quanto `a introdu¸c˜ao do uso do Octave no estudo de matrizes, Neto aﬁrma que esta

linguagem de programa¸c˜ao ´e

[...] uma ferramenta que agrega valor tanto para os estudantes quanto
para professores. Os professores obtˆem uma nova ferramenta, que pode ser
de grande aux´ılio nos mais diversos conte´udo de matem´atica, auxiliando
no despertar de um maior interesse pela matem´atica. Os alunos, por
sua vez, ganham uma nova perspectiva sobre a matem´atica, al´em de
conhecer e manusear um software que propicia grandes possibilidades
intelectuais[16].

Nunes[17] optou por desenvolver um estudo usando linguagem de programa¸c˜ao, com

o software Octave, para trabalhar os conte´udos de matrizes, como alternativa metodol´ogica,

Cap´ıtulo 1.

Introdu¸c˜ao

obtendo bons resultados.

17

A relevˆancia do ensino de Rob´otica na atualidade pode ser notado, tamb´em, pelo

fato de Rousseau e Saint-Abin[18] dedicarem um cap´ıtulo do seu livro, que pertence `a

Cole¸c˜ao PROFMAT, para tratar deste assunto.

O diferencial deste trabalho ´e a ˆenfase te´orica dada `a vantagem da representa¸c˜ao

do posicionamento de objetos r´ıgidos por meio de grupos matriciais e na sugest˜ao de

atividades de rob´otica por meio de ambientes computacionais ainda n˜ao apresentados.

Vale ressaltar que os softwares apresentados neste trabalho s˜ao solu¸c˜oes gratuitas.

Al´em do ambiente de ensino de programa¸c˜ao e de conceitos matem´aticos, espera-se

que seja desenvolvido um bom racioc´ınio l´ogico e no¸c˜ao espacial. Pode-se ressaltar tamb´em

a possibilidade de integra¸c˜ao com a disciplina F´ısica, al´em da ludicidade do tema proposto,

que pode inﬂuenciar positivamente o interesse dos alunos.

Quanto `a disposi¸c˜ao do conte´udo neste trabalho, no Cap´ıtulo 2 ´e apresentada a

fundamenta¸c˜ao te´orica de Matem´atica utilizada ao longo da disserta¸c˜ao. Na primeira
se¸c˜ao s˜ao expostas as no¸c˜oes de ´Algebra Linear, incluindo matrizes, determinantes, espa¸co

vetorial e transforma¸c˜oes lineares e geom´etricas. Na segunda se¸c˜ao ´e exposto o conte´udo

de grupos matriciais.

No Cap´ıtulo 3 ´e apresentado o desenvolvimento, sendo aplicados os conceitos

expostos no cap´ıtulo anterior. Na Se¸c˜ao 3.1 s˜ao expostas algumas considera¸c˜oes sobre o

posicionamento de objetos r´ıgidos no plano e no espa¸co. Na Se¸c˜ao 3.2 ´e feita uma breve

deﬁni¸c˜ao de bra¸co rob´otico e, em seguida, ´e realizada a simula¸c˜ao deste equipamento em

ambiente computacional.

No Cap´ıtulo 4 ´e apresentado o produto ﬁnal dessa disserta¸c˜ao, que ´e a lista contendo

quatro atividades para sala de aula, fazendo uso dos conceitos abordados neste trabalho.

Por ﬁm, no Cap´ıtulo 5 s˜ao expostas as considera¸c˜oes ﬁnais acerca da elabora¸c˜ao

desta disserta¸c˜ao, al´em de sugest˜oes de trabalhos futuros.

2 Fundamenta¸c˜ao Te´orica

Neste cap´ıtulo s˜ao expostos os conceitos utilizados no desenvolvimento dessa dis-
serta¸c˜ao. Na Se¸c˜ao 2.1 s˜ao abordadas no¸c˜oes de ´Algebra Linear, conceituando matrizes,

vetores, espa¸co vetorial e conceitos relacionados, al´em de transforma¸c˜oes lineares e geom´e-

tricas. Na Se¸c˜ao 2.2, por sua vez, s˜ao expostos os conceitos de grupos matriciais, que s˜ao

aplicados no Cap´ıtulo 3.

2.1 No¸c˜oes de ´Algebra Linear

A ﬁm de facilitar a compreens˜ao das se¸c˜oes a seguir, vale relembrar alguns conceitos

de ´Algebra Linear. Inicialmente, tem-se a seguinte deﬁni¸c˜ao:

Deﬁni¸c˜ao 2.1: Sejam m, n ∈ N. Deﬁne-se como matriz Am×n, a tabela de dimens˜oes
m × n, isto ´e, m linhas e n colunas, onde os seus termos podem ser descritos como aij ∈ R,

sendo 1 ≤ i ≤ m e 1 ≤ j ≤ n. Dessa forma, tem-se que:

Am×n =














a11

a21

a12

a22

a13

a23

· · · a1n

· · · a2n

a31
a32
a33
...
...
...
am1 am2 am3

· · · a3n
...
. . .
· · · amn














O ´ındice i indica a linha da matriz e o ´ındice j, sua coluna. Se m = n, diz-se que a

matriz ´e quadrada e de ordem n.

Para facilitar a compreens˜ao em algumas express˜oes, as dimens˜oes da matriz foram

suprimidas. As matrizes quadradas foram denotadas com somente um sub´ındice, como,

por exemplo, a matriz A de ordem n, que ser´a escrita An ao inv´es de An×n. Quando

houve a necessidade de numerar as matrizes, tal numera¸c˜ao foi escrita entre parˆenteses no

sub´ındice, como, por exemplo, em A(1), A(2), A(3) etc.

18

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

19

Os termos da diagonal da matriz s˜ao aqueles das posi¸c˜oes cujos ´ındices s˜ao iguais,

isto ´e, i = j. A matriz quadrada que possui os termos de sua diagonal com valor 1 e

os demais termos 0 ´e chamada de matriz identidade. A matriz identidade de ordem n ´e

denotada In.

Exemplo 2.1.1: A matriz I3 =















1 0 0

0 1 0

0 0 1

´e a matriz identidade de ordem 3.

Deﬁni¸c˜ao 2.2: Seja a matriz Am×n. Para i, j ∈ {1, 2, . . . , m} , i (cid:54)= j, k ∈ R e k (cid:54)= 0,

deﬁne-se como opera¸c˜oes elementares nas linhas as seguintes transforma¸c˜oes:

1. Troca de linhas, denotada por e : Li ↔ Lj;

2. Multiplica¸c˜ao de linha por uma constante n˜ao nula k, denotada e : Li → kLi;

3. Adi¸c˜ao de linha, onde ´e adicionada a uma linha Li os termos de uma linha Lj

multiplicados por uma constante k. ´E denotada e : Li → Li + kLj.

As opera¸c˜oes realizadas nas linhas para se obter as matrizes elementares podem,

tamb´em, ser realizadas nas colunas Ci e Cj, com i, j ∈ {1, 2, . . . , n}. Dessa forma, tem-se

as opera¸c˜oes Ci ↔ Cj, Ci → kCi e Ci → Ci + kCj, de acordo com as nota¸c˜oes apresentadas

anteriormente. No entanto, neste trabalho s˜ao utilizadas apenas as opera¸c˜oes envolvendo

as linhas.

Proposi¸c˜ao 2.3: Toda opera¸c˜ao elementar ´e revers´ıvel, isto ´e, seja e uma opera¸c˜ao

elementar e uma matriz A, existe uma opera¸c˜ao e(cid:48), tal que e(cid:48) (e (A)) = e (e(cid:48) (A)) = A.

Demonstra¸c˜ao. Se e : Li ↔ Lj, ent˜ao e(cid:48) : Li ↔ Lj. Se e : Li → kLi, ent˜ao
e(cid:48) : Li → 1
k Li. Por ´ultimo, se e : Li → Li + kLj, ent˜ao e(cid:48) : Li → Li − kLj.

Deﬁni¸c˜ao 2.4: Deﬁne-se como matriz elementar de ordem n a matriz E obtida por meio

de uma opera¸c˜ao elementar na matriz identidade In. Seja uma opera¸c˜ao elementar e,

tem-se, ent˜ao, a nota¸c˜ao:

E = e (In)

Exemplo 2.1.2: S˜ao exemplos de matrizes elementares a matriz E(1) = e1 (I2) =





0 1

1 0



,

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

20

com e1 : L1 ↔ L2, a matriz E(2) = e2 (I3) =

0 1 0

, com e2 : L3 → 4L3 e a matriz















1 0 0

0 0 4

E(3) = e3 (I3) =

0 1 0

, com e3 : L1 → L1 + 3L2.















1 3 0

0 0 1

Deﬁni¸c˜ao 2.5: As matrizes Am×n e Bm×n s˜ao chamadas de equivalentes por linhas,

denotado A ∼ B, se existem um n´umero ﬁnito de opera¸c˜oes elementares que, aplicadas a

uma matriz, se obt´em a outra. Em s´ımbolos, tem-se que, com k ∈ N:

A = ek (. . . (e2 (e1 (B))))

A matriz que possui dimens˜oes m × 1 ´e chamada de matriz coluna. A matriz que,

por sua vez, possui dimens˜oes 1 × m ´e chamada de matriz linha.

A matriz de dimens˜oes m × n cujos termos s˜ao 0 ´e chamada matriz nula, e ´e

denotada como 0m×n. Por exemplo, 02×3 =







0 0 0

0 0 0

 e 04 =











0 0 0 0

0 0 0 0

0 0 0 0

0 0 0 0






.





As matrizes contidas no interior de uma matriz s˜ao denominadas submatrizes dessa.

Exemplo 2.1.3: A matriz A =















1 2 3

4 5 6

7 8 9

possui como submatrizes a matriz quadrada

B =





1 2

4 5



, a matriz linha C =

(cid:104)

7 8

(cid:105)
, a matriz coluna D =



3
 e a matriz E =

6

(cid:104)

(cid:105)
, e
9

pode ser escrita como A3 =





B2 D2×1

C1×2 E1



 .

2.1.1 Adi¸c˜ao e Multiplica¸c˜ao de Matrizes

Sejam as matrizes A e B de dimens˜oes m × n. A adi¸c˜ao C = A + B se d´a termo a

termo, ou seja, o termo geral cij ´e:

cij = aij + bij,

21








Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

onde 1 ≤ i ≤ m e 1 ≤ j ≤ n, com i, j, m, n ∈ N.

Exemplo 2.1.4: A adi¸c˜ao das seguintes matrizes de ordem 3 ´e da forma:














1 −5

3

0 −2

5

1 + 0 −5 + (−2)

3 + 5

1 −7 8






−4

−2

+











0

2

10

9











4 10 −3

=

−4 + 4

0 + 10

10 + (−3)

=

0 10 7

7 −2 −5

−2 + 7

2 + (−2)

9 + (−5)

0

4










5

Sejam as matrizes A, B e C, de dimens˜oes m × n, e tamb´em a matriz nula 0m×n,

de mesmas dimens˜oes, valem as seguintes propriedades, quanto `a adi¸c˜ao de matrizes:

Comutatividade A + B = B + A

Associatividade (A + B) + C = A + (B + C)

Elemento neutro A + 0m×n = 0m×n + A = A

Sejam as matrizes Am×n e Bo×p, com m, n, o, p ∈ N, tem-se que o produto

C = A · B = AB ´e uma matriz de dimens˜oes m × p, e s´o ´e poss´ıvel se n = o. Para

os termos de A descritos por aij, com 1 ≤ i ≤ m e 1 ≤ j ≤ n, e os termos de B descritos
por bkl, com 1 ≤ k ≤ n e 1 ≤ l ≤ p, onde i, j, k, l ∈ N, tem-se que o termo geral crs da

matriz C = AB, com 1 ≤ r ≤ m e 1 ≤ s ≤ p, ´e dado por:

crs =

n
(cid:88)

t=1

art · bts

(2.1)

Sendo assim, o valor de C ´e obtido da seguinte forma:

C = A · B =

a11 · b11 + a12 · b21

a11 · b12 + a12 · b22

+ · · · + a1n · bn1

+ · · · + a1n · bn2

a21 · b11 + a22 · b21

a21 · b12 + a22 · b22

+ · · · + a2n · bn1

+ · · · + a2n · bn2

...

...

am1 · b11 + am2 · b21

am1 · b12 + am2 · b22

a11 · b1p + a12 · b2p

+ · · · + a1n · bnp

a21 · b1p + a22 · b2p

+ · · · + a2n · bnp

...

am1 · b1p + am2 · b2p

· · ·

· · ·

. . .

· · ·

+ · · · + amn · bn1

+ · · · + amn · bn2

+ · · · + amn · bnp

























































Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

22

Exemplo 2.1.5: Se A4×3 =





















2

1

4 7

0 3

10 8 6

11 9 5

e B3×2 =

2 3








1 4

7 6



, tem-se que:
















A · B =

2 · 1 + 4 · 2 + 7 · 7

2 · 4 + 4 · 3 + 7 · 6

1 · 1 + 0 · 2 + 3 · 7

1 · 4 + 0 · 3 + 3 · 6

59

22

62

22

10 · 1 + 8 · 2 + 6 · 7 10 · 4 + 8 · 3 + 6 · 6

68 100

11 · 1 + 9 · 2 + 5 · 7 11 · 4 + 9 · 3 + 5 · 6

64 101





















=











Sejam as matrizes Am, Bm×n, Cn×m, Dn, Em, Fm×n, Gn×m e Hn. Utilizando a

nota¸c˜ao de submatrizes, tem-se que:





A B

C D





 ·



E F

G H





 =



A · E + B · G A · F + B · H

C · E + D · G C · F + D · H





Sejam as matrizes quadradas A, B e C, de ordem m, e tamb´em as matrizes nula 0m

e identidade Im, de mesma ordem, tem-se as seguintes propriedades, quanto `a multiplica¸c˜ao

de matrizes:

Associatividade (A · B) · C = A · (B · C)

Elemento nulo A · 0m = 0m · A = 0m

Elemento neutro (identidade) A · Im = Im · A = A

Al´em das propriedades listadas, a multiplica¸c˜ao de matrizes n˜ao ´e comutativa, isto

´e, em geral A · B (cid:54)= B · A, sendo v´alida a igualdade em alguns casos especiais. E quanto `a

multiplica¸c˜ao em rela¸c˜ao `a adi¸c˜ao, tˆem-se a propriedade:

Distributividade A · (B + C) = A · B + A · C

A multiplica¸c˜ao de um escalar r ∈ R por uma matriz Am×n ´e da forma:

r · Am×n = r











a11

a12

· · · a1n

ra11

ra12

a21
a22
...
...
am1 am2

· · · a2n
...
. . .
· · · amn

ra21
...

ra22
...
ram1 ram2











=





















· · ·

· · ·
. . .

ra1n

ra2n
...

· · · ramn

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

23

2.1.2 Matriz Transposta



Deﬁni¸c˜ao 2.6: Seja a matriz A =

denotada AT , ´e dada por:



a11

a12

· · · a1n









a22
a21
...
...
am1 am2

· · · a2n
...
. . .
· · · amn

a11 a21

· · · am1









a12 a22
...
...
a1n a2n

· · · am2
...
. . .
· · · amn











AT =



. A matriz transposta de A,









Sendo assim, o elemento geral da matriz transposta ´e tal que:

(cid:2)AT (cid:3)

ij = [A]ji

As dimens˜oes de AT s˜ao n × m. Se A ´e quadrada, tem-se que AT tamb´em ´e

quadrada. Os termos da diagonal da matriz quadrada mantˆem-se na mesma posi¸c˜ao em

sua transposta.

Exemplo 2.1.6:

A transposta da matriz A =








1 15

7 12

8

2








4 10 14

´e a matriz








1

7

4

AT =

15 12 10

8

2

14





.



Proposi¸c˜ao 2.7: Para a transposta do produto de matrizes vale o seguinte resultado:

(AB)T = BT AT

Demonstra¸c˜ao. Seja

tem-se que:

(cid:104)

(AB)T (cid:105)

ij

o termo geral da matriz (AB)T . Dessa forma,

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

24

(cid:104)

(AB)T (cid:105)

ij

=[AB]ji
p
(cid:88)

=

Ajk · Bki

k=1
p
(cid:88)

k=1
p
(cid:88)

k=1

=

=

(cid:2)AT (cid:3)

kj · (cid:2)BT (cid:3)

ik

(cid:2)BT (cid:3)

ik · (cid:2)AT (cid:3)

kj

=(cid:2)BT AT (cid:3)

ij

Como (cid:2)BT AT (cid:3)

ij ´e o termo geral da matriz BT AT , tem-se a validade da

igualdade enunciada.

2.1.3 Determinante

Seja o natural n ≥ 1 e o conjunto Nn = {1, 2, 3, . . . , n}.

Deﬁni¸c˜ao 2.8: Uma fun¸c˜ao bijetiva σ : Nn → Nn ´e denominada uma permuta¸c˜ao do
conjunto Nn e indicada como:





σ =

1

2

· · ·

n

σ (1) σ (2)

· · · σ (n)





O conjunto de todas as permuta¸c˜oes de Nn ´e denominado Sn. A cardinalidade de

Sn, denotada #Sn, ´e dada por n · (n − 1) · . . . · 2 · 1 = n!.

Exemplo 2.1.7: Uma das permuta¸c˜oes para n = 3 ´e

σ =









1 2 3

2 3 1

Deﬁni¸c˜ao 2.9: Seja uma permuta¸c˜ao σ =





1

2

· · ·

n

σ (1) σ (2)

· · · σ (n)


 de Nn. Atribuindo

ao natural r a quantidade de pares (i, j), sendo 1 ≤ i < j ≤ n ∈ N, tais que σ (i) > σ (j),

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

25

tem-se que a paridade da permuta¸c˜ao σ, denotada sgn (σ), ´e dada por

sgn (σ) =




1,

se r ´e par



−1,

se r ´e ´ımpar

Exemplo 2.1.8: Para a permuta¸c˜ao σ =







1 2 3

2 3 1

, os pares (i, j), tais que σ (i) > σ (j),

s˜ao (1, 3) e (2, 3), pois 2 > 1 e 3 > 1, respectivamente. Dessa forma, tem-se que r = 2,

que ´e par, logo sgn (σ) = 1.

Deﬁni¸c˜ao 2.10: Determinante ´e uma fun¸c˜ao que atribui um n´umero real a uma

matriz quadrada. Uma forma de se obter o valor do determinante de uma matriz













a11 a12

· · · a1n

a21 a22
...
...
an1 an2

· · · a2n
...
. . .
· · · ann

An =

guir:

, denotado det (A) = |A|, ´e pela equa¸c˜ao de Leibniz a se-









det (A) =

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

a11 a12

· · · a1n

a21 a22
...
...
an1 an2

· · · a2n
...
. . .
· · · ann

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:88)

=

σ∈Sn

(cid:32)

sgn (σ)

(cid:33)

aiσ(i)

n
(cid:89)

i=1

(2.2)

Exemplo 2.1.9: O determinande da matriz quadrada A1 =

(cid:105)

(cid:104)

a11

´e a11, pois s´o existe

uma permuta¸c˜ao em N1, a saber σ =



1
, logo r = 0 e sgn (σ) = 1, obtendo, ent˜ao, que:

1

det (A) = 1 · a11 = a11

Exemplo 2.1.10: Para calcular o determinante da matriz B =





b11

b12



, de ordem 2,

b21

b22

basta observar que:

1. As permuta¸c˜oes em N2 s˜ao σ1 =





1 2

1 2



 e σ2 =





1 2

2 1



, isto ´e, S2 = {σ1, σ2}. Ent˜ao,

r1 = 0 e r2 = 1 e, por ﬁm, sgn (σ1) = 1 e sgn (σ2) = −1.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

26

2. Utilizando a Equa¸c˜ao 2.2, vale que:

det (B) = 1 · b11 · b22 + (−1) · b12 · b21 = b11b22 − b12b21

Exemplo 2.1.11: Encontrar o determinante da matriz C =








c11

c21

c31

c12

c22

c32



.






c13

c23

c33

Como a matriz C ´e de ordem 3, ser˜ao listadas todas as permuta¸c˜oes σ de N3, com

seus respectivos valores de sgn (σ):

σ1 =

σ2 =

σ3 =



















1 2 3

1 2 3

1 2 3

2 3 1

1 2 3

3 1 2

 sgn (σ1) = 1 σ4 =



 sgn (σ4) = −1

 sgn (σ2) = 1 σ5 =



 sgn (σ5) = −1

 sgn (σ3) = 1 σ6 =



 sgn (σ6) = −1













1 2 3

1 3 2

1 2 3

2 1 3

1 2 3

3 2 1

Aplicando a Equa¸c˜ao 2.2, o determinante da matriz C ´e dado por:

det (C) =1 · c11 · c22 · c33 + 1 · c12 · c23 · c31 + 1 · c13 · c21 · c32+

(−1) · c11 · c23 · c32 + (−1) · c12 · c21 · c33 + (−1) · c13 · c22 · c31

det (C) =c11c22c33 + c12c23c31 + c13c21c32 − (c11c23c32 + c12c21c33 + c13c22c31)

Exemplo 2.1.12: Aplicando a Equa¸c˜ao 2.2 `a matriz D =

veriﬁcar que seu determinante ´e:











d11 d12 d13 d14

d21 d22 d23 d24

d31 d32 d33 d34

d41 d42 d43 d44



, ´e poss´ıvel









det (D) = + d11 (d22d33d44 + d23d34d42 + d24d32d43 − d22d34d43 − d23d32d44 − d24d33d42)

− d12 (d21d33d44 + d23d34d41 + d24d31d43 − d21d34d43 − d23d31d44 − d24d33d41)

+ d13 (d21d32d44 + d22d34d41 + d24d31d42 − d21d34d42 − d22d31d44 − d24d32d41)

− d14 (d21d32d43 + d22d33d41 + d23d31d42 − d21d33d42 − d22d31d43 − d23d32d41)

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

27

Proposi¸c˜ao 2.11: O determinante da matriz transposta ´e da forma:

det (cid:0)AT (cid:1) = det (A)

Demonstra¸c˜ao. A cada itera¸c˜ao do somat´orio da Equa¸c˜ao de Leibniz 2.2 ´e utilizado

um elemento de cada linha e de cada coluna da matriz, o que ´e equivalente a dizer

que ´e usado um elemento de cada coluna e cada linha da transposta. Sendo assim,

o determinante da matriz ´e o mesmo que o da sua transposta.

Ao se aplicar a Equa¸c˜ao 2.2 `a matriz identidade In ´e poss´ıvel observar que a ´unica







1 2 . . . n

1 2 . . . n

 e, neste

permuta¸c˜ao que n˜ao possui termos nulos no produt´orio ´e σ =

caso, sgn (σ) = 1. Conclui-se, ent˜ao, que:

det (In) = 1 · 1n = 1

Proposi¸c˜ao 2.12: Seja a matriz Am×n e a matriz elementar Em, originada da aplica¸c˜ao

da opera¸c˜ao elementar e `a matriz identidade Im. Ent˜ao a matriz EA resulta da aplica¸c˜ao

da opera¸c˜ao e na matriz A. Em s´ımbolos, tˆem-se que:

e (I) A = EA = e (A)

Demonstra¸c˜ao. Seja o produto EA = F . Ser˜ao analisados trˆes casos, de acordo

com as opera¸c˜oes elementares apresentadas:

1. e : Li ↔ Lj

Ao se multiplicar E por A, de acordo com a Equa¸c˜ao 2.1, os elementos da

matriz F = EA s˜ao da forma:

frs =

m
(cid:88)

t=1

ert · ats

De acordo com a forma dos elementos da matriz E, com i, j, s ∈ {1, 2, . . . , m},

tem-se que:

• Para toda linha r ∈ {1, 2, . . . , m}, com r (cid:54)= i e r (cid:54)= j, tem-se que o

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

28

elemento err = 1 e ers = 0, para r (cid:54)= s. Dessa forma, tem-se que:

frs =

m
(cid:88)

t=1

ert · ats = err · ars = ars

• Para a linha i, tem-se que eii = 0, eij = 1 e eis = 0, para s (cid:54)= j. Ent˜ao,

tem-se que:

fis =

m
(cid:88)

t=1

eit · ats = eij · ajs = ajs

• Para a linha j, tem-se que ejj = 0, eji = 1 e ejs = 0, para s (cid:54)= i. Logo,

tem-se que:

fjs =

m
(cid:88)

t=1

ejt · ats = eji · ais = ais

Sendo assim, a i-´esima linha de F ´e igual a j-´esima linha de A, a j-´esima

linha de F ´e igual a i-´esima linha de A e as demais linhas s˜ao iguais em F

e A. Conclui-se, ent˜ao, que o produto EA ´e igual `a aplica¸c˜ao da opera¸c˜ao

e : Li ↔ Lj `a matriz A.

2. e : Li → kLi

Aplicando a Equa¸c˜ao 2.1 `a matriz F = EA, tem-se:

• Para toda linha r ∈ {1, 2, . . . , m}, com r (cid:54)= i, tem-se que o elemento

err = 1 e ers = 0, para r (cid:54)= s. Dessa forma, tem-se que os elementos de F

s˜ao da forma:

frs =

m
(cid:88)

t=1

ert · ats = err · ars = ars

• Para a linha i, tem-se que eii = k, eis = 0, para s (cid:54)= i. Ent˜ao, tem-se que:

fis =

m
(cid:88)

t=1

eit · ats = eii · ais = kais

Dessa forma, a i-´esima linha de F ´e igual a k vezes a i-´esima linha de A, e

as demais linhas s˜ao iguais em F e em A. Conclui-se, ent˜ao, que F ´e igual `a

aplica¸c˜ao da opera¸c˜ao e : Li → kLi `a matriz A.

3. e : Li → Li + kLj

Por ﬁm, ao se aplicar a Equa¸c˜ao 2.1 `a matriz F = EA, tem-se:

• Para toda linha r ∈ {1, 2, . . . , m}, com r (cid:54)= i, tem-se que o elemento

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

29

err = 1 e ers = 0, para r (cid:54)= s. Dessa forma, tem-se que os elementos de F

s˜ao da forma:

frs =

m
(cid:88)

t=1

ert · ats = err · ars = ars

• Para a linha i, tem-se que eii = 1, eij = k e eis = 0, para s (cid:54)= i e s (cid:54)= j.

Ent˜ao, tem-se que:

fis =

m
(cid:88)

t=1

eit · ats = eii · ais + eij · aks = ais + kajs

Ent˜ao, a i-´esima linha de F ´e igual a i-´esima linha de A somada a k vezes a

i-´esima linha de A, e as demais linhas s˜ao iguais em F e em A. Conclui-se,

ﬁnalmente, que o produto E·A ´e igual `a aplica¸c˜ao da opera¸c˜ao e : Li → Li+kLj

`a matriz A.

Proposi¸c˜ao 2.13: Sejam as matrizes elementares E(1), E(2) e E(3), obtidas a partir

das opera¸c˜oes elementares Li ↔ Lj, Li → k1Li e Li → k2Lj, respectivamente, com
i, j ∈ {1, 2, . . . , n} e k1, k2 ∈ R. Tˆem-se, ent˜ao, que:

1. det (cid:0)E(1)

(cid:1) = −1

2. det (cid:0)E(2)

(cid:1) = k1

3. det (cid:0)E(3)

(cid:1) = 1

Demonstra¸c˜ao. Ao aplicar a Equa¸c˜ao 2.2 `as matrizes elementares E(1), E(2) e E(3),

tem-se os seguintes resultados, respectivamente:

1. Ao se permutar duas linhas Li e Lj, a permuta¸c˜ao que n˜ao possui valor nulo

´e da forma σ =

1 . . .

i

. . .

j

. . . n







. . . n
sem perda de generalidade. Nesse caso, de acordo com a Deﬁni¸c˜ao 2.9, como

1 . . .

. . .

j

i

, com i, j ∈ {1, 2, . . . , n} e i < j,

σ (i) = j > i = σ (j), tem-se que r = 1 e, portanto, sgn (σ) = −1. Dessa
forma, conclui-se que det (cid:0)E(1)

(cid:1) = −1.




1 2 . . . n

1 2 . . . n

2. Na ´unica permuta¸c˜ao n˜ao nula σ =



, com sgn (σ) = 1, a i-

´esima linha possui o valor k1, o que implica que ao produt´orio ´e atribu´ıdo esse
valor. Dessa forma, det (cid:0)E(2)

(cid:1) = k1.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

30

3. A permuta¸c˜ao σ =





1 . . .

1 . . .

i

j

. . .

. . .

j

i

. . . n

. . . n



, com sgn (σ) = 1, ´e um resul-

tado n˜ao nulo para o somat´orio. Como a permuta¸c˜ao que utilizasse a j-´esima

coluna da i-´esima linha utilizaria valores nulos da j-´esima linha, n˜ao existe
outra permuta¸c˜ao n˜ao nula. Sendo assim, tˆem-se que det (cid:0)E(3)

(cid:1) = 1.

2.1.4 Matriz Inversa



Deﬁni¸c˜ao 2.14: Seja a matriz quadrada A =

a11

a12

· · · a1m









a21
a22
...
...
am1 am2

· · · a2m
...
. . .
· · · amm



, de termo geral aij.









O n´umero real Aij, chamado cofator do elemento aij de A, ´e o determinante da matriz

quadrada de ordem (m − 1) formada pelos termos de A, exceto a linha i e a coluna j,
multiplicado por (−1)i+j.

Exemplo 2.1.13: Na matriz A =

´e dado por:















1 2 3

7 8 9

4 5 6

, o cofator A21, referente ao termo a21 = 4,

A21 = (−1)2+1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

2 3

8 9

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

= 6

Uma outra maneira de calcular os determinantes de uma matriz de ordem n ≥ 2,

por meio do uso de cofatores, ´e utilizando o teorema de Laplace, onde, escolhida uma linha

i, ´e realizado o somat´orio do produto de todos os termos desta linha por seus cofatores em

todas as colunas. O teorema de Laplace ´e descrito pela seguinte equa¸c˜ao:

det (A) =

n
(cid:88)

j=1

aijAij

(2.3)

Ao se aplicar a Equa¸c˜ao 2.3 `a matriz de ordem 4 do Exemplo 2.1.12, tomando a

linha i = 1, encontra-se:

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

det (D) =

4
(cid:88)

j=1

d1jD1j = d11

+d13















(−1)1+1

(−1)1+3

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

d22 d23 d24

d32 d33 d34

d42 d43 d44

d21 d22 d24

d31 d32 d34

d41 d42 d44















(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)



+ d12

(−1)1+2













+ d14

(−1)1+4

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

d21 d23 d24

d31 d33 d34

d41 d43 d44

d21 d22 d23

d31 d32 d33

d41 d42 d43

31















(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

=

+d11 (d22d33d44 + d23d34d42 + d24d32d43 − d22d34d43 − d23d32d44 − d24d33d42)

−d12 (d21d33d44 + d23d34d41 + d24d31d43 − d21d34d43 − d23d31d44 − d24d33d41)

+d13 (d21d32d44 + d22d34d41 + d24d31d42 − d21d34d42 − d22d31d44 − d24d32d41)

−d14 (d21d32d43 + d22d33d41 + d23d31d42 − d21d33d42 − d22d31d43 − d23d32d41)

O resultado encontrado ´e o mesmo do Exemplo 2.1.12, obtido utilizando a Equa¸c˜ao

2.2, de Leibniz.

Deﬁni¸c˜ao 2.15: Entende-se como matriz adjunta de uma matriz quadrada A, denotada

adj (A), a matriz transposta dos cofatores de cada termo de A, ou seja:

adj (A) =











A11 A21

· · · Am1

· · · Am2
...
. . .

A12 A22
...
...
A1m A2m · · · Amm











Quanto ao determinante da matriz adjunta, vale a seguinte equa¸c˜ao:

det (adj (A)) = (det (A))n−1

Deﬁni¸c˜ao 2.16: Seja a matriz quadrada A, de ordem m. A matriz inversa de A, denotada

A−1, ´e a que satisfaz:

A · A−1 = A−1 · A = Im

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

32

Proposi¸c˜ao 2.17: Toda matriz elementar E ´e invert´ıvel, e sua inversa E−1 tamb´em ´e

elementar.

Demonstra¸c˜ao. Seja a matriz E = e (I). Dessa forma, de acordo com a Proposi¸c˜ao

2.3, existe uma opera¸c˜ao elementar e(cid:48), tal que e(cid:48) (e (I)) = e(cid:48) (E) = I. De forma

similar, podemos escrever que E(cid:48) · E = I, de acordo com a Proposi¸c˜ao 2.12. Assim,

E(cid:48) = E−1, isto ´e, inversa de E, e, como e(cid:48) ´e uma opera¸c˜ao elementar, E−1 ´e uma

matriz elementar.

Proposi¸c˜ao 2.18: Uma matriz A ser invert´ıvel ´e equivalente a, ou A ser elementar, ou

A puder ser escrita como um produto de matrizes elementares. Nesse caso, tem-se que

A ∼ I e det (A) (cid:54)= 0. Se forem aplicadas a mesma sequˆencia de opera¸c˜oes elementares que

transformam A em I na pr´opria matriz I, ser´a obtida a inversa A−1.

O c´alculo da inversa de uma matriz A se d´a por meio da equa¸c˜ao a seguir:

A−1 =

1
det (A)

adj (A)

Se uma matriz A ´e invert´ıvel, o determinante de sua inversa ´e dada por:

det (cid:0)A−1(cid:1) =

1
det (A)

(2.4)

Exemplo 2.1.14: A matriz A =

4 −2

possui determinante 1, logo ´e invert´ıvel.

A inversa de A ´e A−1 =

39 −2 −14

, pois A · A−1 = I3.

Proposi¸c˜ao 2.19: Seja a matriz elementar E e a matriz quadrada A, de mesma ordem.

Sendo det (E) = d, ´e v´alido que:

det (EA) = d det (A)

Teorema 2.20 (de Binet): Dadas as matrizes quadradas A e B de mesma ordem, tem-se

que:

det (AB) = det (A) det (B)


2




5

0

7








3 −1

1















−19

1

7

22 −1 −8

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

33

Demonstra¸c˜ao. S˜ao considerados os seguintes casos:

1. An n˜ao ´e invert´ıvel.

Se det (A) = 0, ent˜ao det (AB) = 0, pois, caso contr´ario, haveria uma matriz

C tal que (AB) C = In, o que n˜ao ´e poss´ıvel, uma vez que, por associatividade

da multiplica¸c˜ao, a matriz BC seria inversa de A. Logo, tem-se que:

0 = 0 det (B)

⇒ det (AB) = det (A) det (B)

2. An ´e invert´ıvel

Uma vez que det (A) (cid:54)= 0, de acordo com a Proposi¸c˜ao 2.18, essa pode ser

escrita como um produto de matrizes elementares, obtendo:

A = E(1)E(2) . . . E(k)

(2.5)

Dessa forma, para det (cid:0)E(i)
Proposi¸c˜ao 2.19 sucessivamente, o determinante de A ´e:

(cid:1) = di, ∀i ∈ {1, 2, . . . , k}, aplicando o resultado da

det (A) = det (cid:0)E(1)
det (A) = d1 det (cid:0)E(2)
...

(cid:0)E(2) . . . E(k)

(cid:1)(cid:1)

(cid:0)E(3) . . . E(k)

(cid:1)(cid:1)

det (A) = d1d2 . . . dk

(2.6)

Escrevendo A na forma da Equa¸c˜ao 2.5, aplicando a Proposi¸c˜ao 2.19 e a

associativa da multiplica¸c˜ao de matrizes, e, por ﬁm, substituindo o valor

determinante de A obtido na Equa¸c˜ao 2.6, pode-se concluir que:

det (AB) = det (cid:0)E(1)

(cid:0)E(2) . . . E(k)B(cid:1)(cid:1)

(cid:0)E(3) . . . E(k)B(cid:1)(cid:1)

= d1 det (cid:0)E(2)
...

= d1d2 . . . dk det (B)

= det (A) det (B)

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

34

2.1.5 Espa¸co Vetorial Real

Deﬁni¸c˜ao 2.21: O espa¸co Rn ´e o conjunto de n-uplas ordenadas (x1, x2, . . . , xn) reais.

Em s´ımbolos, tem-se que:

Rn = {(x1, x2, . . . , xn) ; x1, x2, . . . , xn ∈ R}

Seja o segmento orientado

−→
AB, que liga o ponto A = (a1, a2, . . . , an) ao ponto

B = (b1, b2, . . . , bn), com A, B ∈ Rn. Os segmentos equipolentes a

−→
AB s˜ao aqueles que

possuem:

• O mesmo comprimento de

−→
AB;

• A mesma dire¸c˜ao de

−→
AB, isto ´e, s˜ao paralelos ou colineares;

• O mesmo sentido de

−→
AB.

Deﬁni¸c˜ao 2.22: Deﬁne-se como vetor (cid:126)v =

−→
AB, o conjunto de todos os segmentos

orientados equipolentes a

−→
AB. Cada segmento orientado equipolente a

−→
AB ´e chamado

representante de (cid:126)v.

Por padr˜ao, o representante do vetor (cid:126)v a ser utilizado ´e aquele cujo ponto inicial ´e

o ponto O = (0, 0, 0, . . . , 0), com n zeros. Dessa forma, suas coordenadas s˜ao:

(cid:126)v = (v1, v2, , . . . , vn) ,

onde vi = bi − ai, ∀ i ∈ {1, 2, . . . , n}, sendo ai e bi coordenadas dos pontos A e B,

respectivamente.

O comprimento do vetor, tamb´em chamado de norma, ´e a distˆancia entre as

extremidades do vetor, e pode ser dado por:

(cid:112)

(cid:107)(cid:126)v(cid:107) =

v1

2 + v2

2 + · · · + vn

2

Os vetores cuja norma tem valor 1 s˜ao chamados de vetores unit´arios.
Denomina-se o como vetor nulo, denotado como (cid:126)0, aquele que possui norma nula e,

por isso, n˜ao possui dire¸c˜ao nem sentido.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

35

Para algumas opera¸c˜oes, os vetores da forma (cid:126)v = (v1, v2, . . . , vn) foram escritos como

matrizes coluna, chamados ent˜ao de vetores coluna, da forma v =

Fazendo o uso dessa nota¸c˜ao, a norma de um vetor ´e dada por:













v1

v2
...
vn

= [v1 v2 . . . vn]T .









√

(cid:107)(cid:126)v(cid:107) =

vT · v =

(cid:118)
(cid:117)
(cid:117)
(cid:117)
(cid:117)
(cid:117)
(cid:117)
(cid:117)
(cid:117)
(cid:117)
(cid:116)

[v1, v2, . . . , vn] ·











(cid:112)

v1

=

2 + v2

2 + · · · + vn

2











v1

v2
...
vn

Sendo assim, como (cid:107)(cid:126)v(cid:107) ≥ 0, ´e v´alido que:

(cid:107)(cid:126)v(cid:107)2 = vT · v

(2.7)

Sejam os vetores (cid:126)u = (u1, u2, . . . , un) e (cid:126)v = (v1, v2, . . . , vn), e o escalar ρ ∈ R. O

vetor (cid:126)r = (cid:126)u + (cid:126)v ´e da forma (cid:126)r = (u1 + v1, u2 + v2, . . . , un + vn). O vetor (cid:126)s = ρ(cid:126)u ´e da forma

(cid:126)s = (ρu1, ρu2, . . . , ρun).

Deﬁni¸c˜ao 2.23: Pode-se somar um ponto A = (a1, a2, . . . , an) com um vetor

(cid:126)v = (v1, v2, . . . , vn), resultando em um ponto B = (a1 + v1, a2 + v2, . . . , an + vn). Essa

opera¸c˜ao signiﬁca fazer uma transla¸c˜ao do ponto A na dire¸c˜ao, sentido e norma do vetor

(cid:126)v, o que ser´a explicitado posteriormente na Deﬁni¸c˜ao 2.40.

Deﬁni¸c˜ao 2.24: Sejam os vetores (cid:126)u = (u1, u2, . . . , un) e (cid:126)v = (v1, v2, . . . , vn). Deﬁne-se

como produto escalar a opera¸c˜ao entre vetores que resulta em um escalar, da forma:

(cid:126)u · (cid:126)v = u1 · v1 + u2 · v2 + · · · + un · vn

Deﬁni¸c˜ao 2.25: A ortogonalidade entre dois vetores se d´a quando o produto escalar

entre dois vetores ´e nulo. Sendo assim, se (cid:126)u · (cid:126)v = 0, diz-se que os vetores s˜ao ortogonais, e

denota-se (cid:126)u ⊥ (cid:126)v.

Se dois vetores unit´arios s˜ao ortogonais, diz-se que s˜ao ortonormais.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

36

Deﬁni¸c˜ao 2.26: O conjunto n˜ao vazio V, de vetores n-dimensionais com coordenadas

reais, ´e deﬁnido como espa¸co vetorial real, com as seguintes propriedades:

• Quanto `a adi¸c˜ao de vetores (cid:126)u, (cid:126)v, (cid:126)w ∈ V:

Comutatividade (cid:126)u + (cid:126)v = (cid:126)v + (cid:126)u

Associatividade ((cid:126)u + (cid:126)v) + (cid:126)w = (cid:126)u + ((cid:126)v + (cid:126)w)
Elemento neutro (cid:126)u + (cid:126)0 = (cid:126)0 + (cid:126)u = (cid:126)u
Elemento inverso ∃ − (cid:126)u; (cid:126)u + (−(cid:126)u) = (cid:126)0

• Quanto `a multiplica¸c˜ao por escalar, com r, s ∈ R e (cid:126)u ∈ V:

Associatividade r (s(cid:126)u) = (rs) (cid:126)u

Elemento neutro 1(cid:126)u = (cid:126)u1 = (cid:126)u

• Quanto `a adi¸c˜ao de escalares e `a multiplica¸c˜ao por escalar, com r, s ∈ R e (cid:126)u, (cid:126)v ∈ V:

Distributiva de escalar pela soma de vetores

r ((cid:126)u + (cid:126)v) = r(cid:126)u + r(cid:126)v

Distributiva de soma de escalares por vetor

(r + s) (cid:126)u = r(cid:126)u + s(cid:126)u

A representa¸c˜ao dos espa¸cos vetoriais ´e feita por uma letra mai´uscula e, quando a

dimens˜ao do espa¸co vetorial for relevante, este ser´a notado com o expoente da dimens˜ao.

Por exemplo, o espa¸co vetorial V3 ´e formado por vetores da forma (cid:126)v = (v1, v2, v3), com
v1, v2, v3 ∈ R.

Deﬁni¸c˜ao 2.27: Um vetor (cid:126)v ∈ Vn ´e uma combina¸c˜ao linear dos vetores (cid:126)v1, (cid:126)v2, . . . , (cid:126)vn,
se existem escalares k1, k2, , . . . , kn ∈ R tais que:

(cid:126)v = k1(cid:126)v1 + k2(cid:126)v2 + · · · + kn(cid:126)vn

Um conjunto de vetores de Vn ´e linearmente independente quando ´e v´alida a

equivalˆencia:

k1(cid:126)v1 + k2(cid:126)v2 + . . . + kn(cid:126)vn = (cid:126)0 ⇐⇒ k1, k2, . . . , kn = 0

Caso haja um escalar ki

(cid:54)= 0, com i ∈ {1, 2, . . . , n}, em que seja v´alido que

k1(cid:126)v1 + k2(cid:126)v2 + · · · + kn(cid:126)vn = (cid:126)0, diz-se que h´a uma dependˆencia linear entre os vetores.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

37

Deﬁni¸c˜ao 2.28: Em Vn, os vetores (cid:126)v1, (cid:126)v2, . . . , (cid:126)vn, nesta ordem, formam uma base do
espa¸co vetorial se s˜ao linearmente independentes e todo vetor (cid:126)v ∈ Vn pode ser escrito

como combina¸c˜ao linear de (cid:126)v1, (cid:126)v2, . . . , (cid:126)vn.

Uma base B = {(cid:126)e1, (cid:126)e2, . . . , (cid:126)en} ´e dita ortonormal se (cid:107)(cid:126)e1(cid:107) = (cid:107)(cid:126)e2(cid:107) = · · · = (cid:107)(cid:126)en(cid:107) = 1

e ainda (cid:126)ei ⊥ (cid:126)ej, para todo i, j ∈ {1, 2, . . . , n}, com i (cid:54)= j. Se ainda (cid:126)e1 = (1, 0, . . . , 0),

(cid:126)e2 = (0, 1, . . . , 0), . . . , (cid:126)en = (0, 0, . . . , 1), diz-se que a base B ´e canˆonica.

Exemplo 2.1.15: Os vetores (cid:126)e1 = (1, 0, 0), (cid:126)e2 = (0, 1, 0) e (cid:126)e3 = (0, 0, 1) formam a base
canˆonica de V3, pois qualquer vetor do tipo (cid:126)v = (a, b, c) ∈ V3, com a, b, c ∈ R, pode ser

escrito como (cid:126)v = a(cid:126)e1 + b(cid:126)e2 + c(cid:126)e3 e ainda (cid:107)(cid:126)e1(cid:107) = (cid:107)(cid:126)e2(cid:107) = (cid:107)(cid:126)e3(cid:107) = 1, (cid:126)e1 ⊥ (cid:126)e2, (cid:126)e2 ⊥ (cid:126)e3 e

(cid:126)e1 ⊥ (cid:126)e3.

Para localizar um ponto P no espa¸co tridimensional, ´e necess´ario fazer uso da

Deﬁni¸c˜ao 2.29 de Sistemas de Coordenadas a seguir, conforme apresentado por Boulos e

Camargo[19]:

Deﬁni¸c˜ao 2.29: Sejam um ponto O do espa¸co tridimensional e uma base ortonormal

B = {(cid:126)e1, (cid:126)e2, (cid:126)e3} de V3. Deﬁne-se como sistema de coordenadas ortogonal de V3 o par

(O, B). Ao ponto O = (0, 0, 0) se d´a o nome de origem, e, sendo os pontos A = O + (cid:126)e1,

B = O + (cid:126)e2 e C = O + (cid:126)e3, os vetores

−→
OA,

−−→
OB e

−→
OC correspondem aos eixos (cid:126)x, (cid:126)y e (cid:126)z,

respectivamente.

Dessa forma, todo vetor (cid:126)v ∈ V3 pode ser representado por um terno (a, b, c).

Esse representante ´e o que possui como ponto inicial a origem do sistema e a outra

extremidade no ponto de coordenadas (a, b, c), sendo representado pela combina¸c˜ao linear

(cid:126)v = a(cid:126)x + b(cid:126)y + c(cid:126)z.

De forma similar, o ponto O = (0, 0) e uma base ortonormal de V2 descrevem um

sistema de coordenadas do plano cartesiano, com os eixos (cid:126)x e (cid:126)y.

Deﬁni¸c˜ao 2.30: Sejam os vetores (cid:126)u, (cid:126)v ∈ V3, e os seus paralelos unit´arios (cid:126)u1, (cid:126)v1 ∈ V3,

respectivamente. Deﬁne-se como ˆangulo entre os vetores, o comprimento do arco da

circunferˆencia de raio unit´ario contida no plano O(cid:126)u1(cid:126)v1 entre os vetores (cid:126)u1 e (cid:126)v1. Como

existem dois arcos entre os vetores, opta-se por representar o ˆangulo pelo de menor valor.

Tal comprimento ´e denotado em radianos.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

38

Uma outra maneira de representar os ˆangulos ´e por graus. Sendo ω a representa¸c˜ao

do ˆangulo em radianos e α a representa¸c˜ao em graus, ´e v´alido que:

ω
π

=

α
180◦

Deﬁni¸c˜ao 2.31: Sejam os vetores (cid:126)u, (cid:126)v ∈ V3. Deﬁne-se como produto vetorial de (cid:126)u por (cid:126)v,

denotado por (cid:126)u × (cid:126)v, o vetor cuja norma ´e (cid:107)(cid:126)u(cid:107) (cid:107)(cid:126)v(cid:107) sen α, sendo α o menor ˆangulo entre (cid:126)u e

(cid:126)v, dire¸c˜ao normal ao plano O(cid:126)u(cid:126)v, e sentido como o descrito na Figura 2.1.

Figura 2.1: Produto Vetorial

Fonte: Elaborado pelo autor.

Uma base ortonormal ((cid:126)e1, (cid:126)e2, (cid:126)e3) de V3 ´e dita positiva se (cid:126)e1 × (cid:126)e2 = (cid:126)e3, e negativa

se (cid:126)e1 × (cid:126)e2 = −(cid:126)e3. Uma representa¸c˜ao de uma base positiva ´e dada pela “regra da m˜ao

direita”, que pode ser visto na Figura 2.2a.

Outra maneira de se representar objetos no espa¸co ´e por meio de coordenadas

esf´ericas, as quais s˜ao deﬁnidas a seguir.

Deﬁni¸c˜ao 2.32: Deﬁne-se como coordenadas esf´ericas de um ponto P no espa¸co, a tripla

ordenada (ρ, θ, φ), onde ρ, tamb´em chamado de raio, ´e a distˆancia do ponto P `a origem, θ

´e o ˆangulo entre o segmento OP e o eixo (cid:126)z e φ ´e ˆangulo entre o eixo (cid:126)x e a proje¸c˜ao de OP

no plano O(cid:126)x(cid:126)y. As coordenadas esf´ericas s˜ao representadas na Figura 2.3.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

39

Figura 2.2: Regra da m˜ao direita

(a) Base ortogonal ((cid:126)x, (cid:126)y, (cid:126)z) positiva

(b) Rota¸c˜ao positiva em torno de um

eixo

Fonte: Lynch e Park[20], com adapta¸c˜oes do autor.

Deﬁni¸c˜ao 2.33: Sejam os espa¸cos vetoriais U sobre Rn e V sobre Rm. Uma fun¸c˜ao
F : U → V ´e chamada transforma¸c˜ao linear se, e somente se, ∀u1, u2 ∈ U e ρ ∈ R, vale

que:

1. F (u1 + u2) = F (u1) + F (u2)

2. F (ρu1) = ρF (u1)

Figura 2.3: Coordenadas Esf´ericas

Fonte: Stewart[21].

Proposi¸c˜ao 2.34: Sejam os espa¸cos vetoriais U e V , de dimens˜oes n e m, respectivamente.

A transforma¸c˜ao linear F : U → V pode ser descrita por uma matriz de dimens˜oes m × n.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

40

Demonstra¸c˜ao. Sejam as bases B1 = {u1, u2, . . . ,un} e B2 = {v1, v2, . . . ,vm} de U

e V , respectivamente. Dessa forma, pode-se determinar, de forma ´unica, n´umeros
aij ∈ R, com 1 ≤ i ≤ m e 1 ≤ j ≤ n, tais que:

F ( (cid:126)uj) = a1jv1 + a2jv2 + · · · + amjvm

(2.8)

Escrevendo um vetor (cid:126)u = (k1, k2, . . . , kn), pertencente a U , da forma
(cid:126)u = k1u1 + k2u2 + · · · + knun, com ki ∈ R para 1 ≤ i ≤ n, tem-se que, de

acordo com a Deﬁni¸c˜ao 2.33 e com a Equa¸c˜ao 2.8:

F ((cid:126)u) =k1F ( (cid:126)u1) + k2F ( (cid:126)u2) + · · · + knF ( (cid:126)un)

=k1 (a11v1 + · · · + am1vm) + · · · + kn (a1nv1 + · · · + amnvm)

= (a11k1 + · · · + a1nkn) v1 + · · · + (am1k1 + · · · + amnkn) vm

Utilizando a nota¸c˜ao de vetor coluna e escrevendo da forma matricial, tem-se

que:



[F ((cid:126)u)] =

a11

a12

· · · a1n









a22
a21
...
...
am1 am2

· · · a2n
...
. . .
· · · amn































k1

k2
...
kn

=A · u

A matriz A apresentada descreve a transforma¸c˜ao linear.

Deﬁni¸c˜ao 2.35: Um escalar λ ´e deﬁnido como autovalor de uma transforma¸c˜ao linear

F : Rn −→ Rn, se existir um vetor v n˜ao-nulo tal que Av = λv. Ao vetor v d´a-se o nome

de autovetor.

Proposi¸c˜ao 2.36: Seja a matriz quadrada A e os seus autovalores λ1, λ2, . . . , λn. Tem-se

a seguinte propriedade:

det (A) = λ1 · λ2 · . . . · λn

Deﬁni¸c˜ao 2.37: Sejam as bases B = {(cid:126)v1, (cid:126)v2, . . . , (cid:126)vn} e B(cid:48) = { (cid:126)v(cid:48)
n}, ambas do
espa¸co vetorial Vn. Deﬁne-se como mudan¸ca de base, a transforma¸c˜ao linear F , tal que
F ((cid:126)vi) = (cid:126)v(cid:48)

i ∀i ∈ {1, 2, . . . , n}.

2, . . . , (cid:126)v(cid:48)

1, (cid:126)v(cid:48)

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

41

2.1.6 Transforma¸c˜ao Geom´etrica

Deﬁni¸c˜ao 2.38: Deﬁne-se como objeto r´ıgido um conjunto de pontos que formam uma

ﬁgura, quando no plano, ou um s´olido, quando no espa¸co.

Deﬁni¸c˜ao 2.39: Deﬁne-se como transforma¸c˜ao geom´etrica a fun¸c˜ao cujo dom´ınio e

a imagem s˜ao conjuntos de pontos. Essa fun¸c˜ao ´e bijetiva, ou seja, para uma dada

transforma¸c˜ao f , para cada ponto A no dom´ınio, existe apenas um ´unico ponto B tal

que f (A) = B e, para cada ponto D do contra-dom´ınio existe ´unico ponto C tal que

f (C) = D.

Deﬁni¸c˜ao 2.40: Isometrias s˜ao as transforma¸c˜oes geom´etricas que preservam as distˆancias

e os ˆangulos. As isometrias se classiﬁcam entre diretas e opostas, sendo que as diretas s˜ao

as que preservam a orienta¸c˜ao e as opostas, as que a invertem.

As isometrias diretas em R3 s˜ao as seguintes:

• Transla¸c˜ao: ´E o deslocamento do objeto no espa¸co, para alguma dire¸c˜ao e sentido

deﬁnidos. Para tal transforma¸c˜ao, soma-se a cada ponto do objeto r´ıgido, com

coordenadas no espa¸co cartesiano, as coordenadas de um vetor que representa a

transforma¸c˜ao. Dessa forma, para cada dois pontos A = (a1, a2, a3) e B = (b1, b2, b3)

do objeto r´ıgido, ser˜ao somados as coordenadas do vetor (cid:126)v = (v1, v2, v3) resultando

nos pontos A(cid:48) = (a1 + v1, a2 + v2, a3 + v3) e B(cid:48) = (b1 + v1, b2 + v2, b3 + v3), de forma

−−→
AA(cid:48) ≡

−−→
BB(cid:48) ≡ (cid:126)v e

−−→
AA(cid:48) (cid:107)

−−→
BB(cid:48).

que

Sendo assim, a transforma¸c˜ao geom´etrica Ω : R3 → R3, que representa a transla¸c˜ao

descrita por um vetor (cid:126)v, ´e da forma:

Ω ((cid:126)u) = (cid:126)u + (cid:126)v

Para representar uma transla¸c˜ao no espa¸co ´e utilizada a nota¸c˜ao Trans ((cid:126)v), onde (cid:126)v ´e

o vetor pertencente a V3 que representa a transla¸c˜ao.

• Rota¸c˜ao: ´E o giro do objeto em torno de um eixo representado por um vetor que

passa pela origem.

A representa¸c˜ao da rota¸c˜ao se dar´a por meio da nota¸c˜ao Rot ((cid:126)v, α), onde (cid:126)v ´e o eixo

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

42

da rota¸c˜ao e α o ˆangulo da rota¸c˜ao.

A nota¸c˜ao da transforma¸c˜ao linear associada `a transforma¸c˜ao geom´etrica de rota¸c˜ao

´e apresentada na Proposi¸c˜ao 2.51.

O sentido de rota¸c˜ao positivo pode ser descrito pela “regra da m˜ao direita”, conforme

a Figura 2.2b. Com isso, ´e v´alido dizer que:

Rot ((cid:126)v, −α) = Rot (−(cid:126)v, α)

• Transla¸c˜ao e rota¸c˜ao: ´E a composi¸c˜ao simultˆanea da transla¸c˜ao e da rota¸c˜ao apresen-
tadas anteriormente. ´E interpretado como uma transla¸c˜ao seguida de uma rota¸c˜ao,

nessa ordem.

A nota¸c˜ao adotada ´e Trans ((cid:126)v) Rot ((cid:126)z, α), sendo (cid:126)v o vetor que caracteriza a transla¸c˜ao,

(cid:126)z o eixo da rota¸c˜ao e α o ˆangulo da rota¸c˜ao.

A representa¸c˜ao por s´ımbolos da opera¸c˜ao da transforma¸c˜ao geom´etrica de transla¸c˜ao

e rota¸c˜ao ´e apresentada na Proposi¸c˜ao 2.57.

A Figura 2.4 ilustra alguns exemplos de isometrias diretas no plano e no espa¸co,

com as nota¸c˜oes adequadas.

Quando a transla¸c˜ao ocorre no plano, a nota¸c˜ao tamb´em ´e Trans ((cid:126)v). O que muda

´e que (cid:126)v ∈ V2. A rota¸c˜ao, por sua vez, ´e denotada apenas Rot (α), pois se d´a em torno da

origem O = (0, 0).

Este trabalho aborda as isometrias diretas, uma vez que essas transforma¸c˜oes podem

ser aplicadas a objetos r´ıgidos, conforme ´e apresentado na Se¸c˜ao 3.1.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

43

Figura 2.4: Isometrias diretas em R2 e R3

(a) Trans ((cid:126)v), com (cid:126)v = (3, 2)

(b) Trans ((cid:126)v), com (cid:126)v = (−1, 1, 2)

(c) Rot (α), com α = 30◦

(d) Rot ((cid:126)z, α), com α = 30◦

(e) Trans ((cid:126)v) Rot (α), com (cid:126)v = (3, 1) e α = 30◦

(f) Trans ((cid:126)v) Rot ((cid:126)z, α), com (cid:126)v = (−2, 1, 1) e

α = 30◦

Fonte: Elaborado pelo autor.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

44

2.2 Grupos Matriciais

Nessa se¸c˜ao ´e feita a apresenta¸c˜ao do conceito de grupo alg´ebrico e tamb´em s˜ao

relacionados os grupos matriciais que foram utilizados no desenvolvimento deste trabalho.

Deﬁni¸c˜ao 2.41: Grupos s˜ao conjuntos em que dois elementos se associam por meio

de uma opera¸c˜ao bin´aria para formar um terceiro, e esta opera¸c˜ao ´e dotada de certas

propriedades. Por exemplo, seja o grupo G, os elementos a, b, c ∈ G, e a opera¸c˜ao bin´aria

∗, tˆem-se, ent˜ao, as seguintes propriedades:

Fechamento a ∗ b ∈ G

Associatividade (a ∗ b) ∗ c = a ∗ (b ∗ c)

Elemento neutro ∃ n ∈ G ; a ∗ n = n ∗ a = a

Elemento inverso ∃ a−1 ∈ G ; a ∗ a−1 = a−1 ∗ a = n

Exemplo 2.2.1: O conjunto dos n´umeros inteiros Z ´e um grupo quanto `a opera¸c˜ao

bin´aria adi¸c˜ao (+). Al´em das propriedade de fechamento e de associatividade, o elemento

neutro ´e o 0 ∈ Z, e o inverso de k ∈ Z ´e −k ∈ Z.

Exemplo 2.2.2: O conjunto {1} ´e o menor grupo quanto `a opera¸c˜ao bin´aria multiplica¸c˜ao

(·), pois o elemento 1 ´e neutro na multiplica¸c˜ao e inverso multiplicativo de si mesmo.

Antes de apresentar os grupos matriciais utilizados nesse trabalho, faz-se necess´ario

apresentar a seguinte deﬁni¸c˜ao:

Deﬁni¸c˜ao 2.42: Deﬁne-se como Mn (R) o conjunto das matrizes reais quadradas de

ordem n.

Quanto `a adi¸c˜ao, o conjunto Mn (R) ´e um grupo, com elemento neutro 0n e, como
elemento inverso de uma matriz An ∈ Mn (R), a matriz −An ∈ Mn (R). No entanto,
quanto `a multiplica¸c˜ao, Mn (R) n˜ao ´e um grupo, pois n˜ao s˜ao todas as matrizes de ordem

n que possuem inverso multiplicativo.

Deﬁni¸c˜ao 2.43: O subconjunto de Mn (R) com matrizes invert´ıveis de ordem n, dotado
da opera¸c˜ao multiplica¸c˜ao, ´e deﬁnido como grupo linear real, denotado GLn (R). A

representa¸c˜ao simb´olica ´e:

GLn (R) = {A ∈ Mn; det (A) (cid:54)= 0}

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

45

Exemplo 2.2.3: A matriz A =

det (A) = −18 (cid:54)= 0.















1 2 3

3 1 2

2 3 1

∈ M3 tamb´em pertence a GL3, pois

Deﬁni¸c˜ao 2.44: Deﬁne-se como grupo ortogonal de dimens˜ao n o subgrupo de GLn em

que as matrizes transpostas s˜ao iguais `as inversas de cada elemento. A representa¸c˜ao

simb´olica ´e:

O (n) = {Qn ∈ GLn (R) ; Qn

−1 = Qn

T }

Proposi¸c˜ao 2.45: Seja Q ∈ O (n). Tˆem-se, ent˜ao, que det (Q) = ±1.

Demonstra¸c˜ao. Pela deﬁni¸c˜ao, tem-se que Q · QT = I. Dessa forma, se d ´e o

determinante de Q, ent˜ao, pelo Teorema de Binet 2.20 e pela Proposi¸c˜ao 2.11,

conclui-se que:

det (cid:0)Q · QT (cid:1) = det (I)
det (Q) det (cid:0)QT (cid:1) = det (I)

d · d = 1
√

d =

1

d = ±1

Os grupos matriciais utilizados no desenvolvimento desse trabalho s˜ao o Grupo

Ortogonal Especial e o Grupo Euclidiano Especial, apresentados nas Subse¸c˜oes 2.2.1 e

2.2.2, respectivamente. As propriedades de ambos os grupos se d´a quanto `a opera¸c˜ao de

multiplica¸c˜ao.

2.2.1 Grupo Ortogonal Especial

Deﬁni¸c˜ao 2.46: Tamb´em conhecido como grupo das matrizes rotacionais, o grupo

ortogonal especial ´e o subgrupo de O (n) com matrizes de determinante 1. O grupo ´e

denotado como SO (n) e, por s´ımbolos, tem-se que:

SO (n) = {Rn ∈ GLn (R) ; Rn

−1 = Rn

T e det (Rn) = 1}

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

46

No espa¸co vetorial V2 tˆem-se que R ∈ SO (2) ´e da forma:

R =





r11 r12

r21 r22





onde tem-se que os vetores unit´arios (cid:126)x = (r11, r21) e (cid:126)y = (r12, r22), com a rela¸c˜ao ˆx ⊥ ˆy,
formam uma base ortonormal de V2.

No espa¸co vetorial V3, por sua vez, tˆem-se que R ∈ SO (3) ´e da forma:








r11 r12 r13

R =

r21 r22 r23

r31 r32 r33








onde o terno de vetores (cid:126)x = (r11, r21, r31), (cid:126)y = (r12, r22, r32) e (cid:126)z = (r13, r23, r33) formam
uma base ortonormal de V3.

As propriedades de grupo de SO (n), ou seja, fechamento, associatividade, elemento

neutro e elemento inverso, s˜ao demonstradas nas Proposi¸c˜oes 2.47, 2.48, 2.49 e 2.50 a

seguir, respectivamente.

Proposi¸c˜ao 2.47 (Fechamento em SO (n)): Se R(1) ∈ SO (n) e R(2) ∈ SO (n), ent˜ao

R(1)R(2) ∈ SO (n).

Demonstra¸c˜ao. Ao multiplicar R(1)R(2) pela sua transposta, tem-se que:

(cid:0)R(1)R(2)

(cid:1) (cid:0)R(1)R(2)

(cid:1)T

(a)

= (cid:0)R(1)R(2)

(cid:1) (cid:0)R(2)

T R(1)

T (cid:1)

(b)
= R(1)

(cid:0)R(2)R(2)

T (cid:1) R(1)

T

(c)
= R(1)R(1)

T

= In

A igualdade (a) vem da Proposi¸c˜ao 2.7, a (b) vem da associatividade da

multiplica¸c˜ao de matrizes e a igualdade (c) vem do fato da transposta ser igual `a

inversa em SO (n), logo R(2)R(2)

T = In, que ´e elemento neutro na multiplica¸c˜ao.

Como a multiplica¸c˜ao pela transposta resultou em uma matriz identidade,
(cid:1)−1.
(cid:1) = 1, pelo Teorema de Binet 2.20, tem-se que

pode-se concluir que a matriz R(1)R(2) ´e ortogonal, pois (cid:0)R(1)R(2)
Uma vez que det (cid:0)R(1)
det (cid:0)R(1)R(2)

(cid:1) = 1. Dessa forma, conclui-se que R(1)R(2) ∈ SO (n).

(cid:1)T = (cid:0)R(1)R(2)

(cid:1) = det (cid:0)R(2)

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

47

Proposi¸c˜ao 2.48 (Associatividade de SO (n)): Se R(1), R(2), R(3) ∈ SO (n), ent˜ao
(cid:0)R(1)R(2)

(cid:1) R(3) = R(1)

(cid:0)R(2)R(3)

(cid:1).

Demonstra¸c˜ao. O resultado ´e obtido aplicando a propriedade de associatividade

da multiplica¸c˜ao de matrizes.

Proposi¸c˜ao 2.49 (Elemento Neutro de SO (n)): Se R ∈ SO (n), ent˜ao existe o

elemento In ∈ SO (n) tal que R · In = In · R = R.

Demonstra¸c˜ao. O produto segue da propriedade de elemento neutro da multipli-

ca¸c˜ao de matrizes. Basta, ent˜ao, veriﬁcar se In ∈ SO (n), o que ´e verdade, pois

det (In) = 1 e In

−1 = In

T .

Por deﬁni¸c˜ao, as matrizes pertencentes a SO (2) e SO (3) representam bases ortonor-

mais de V2 e V3, respectivamente. Logo essas matrizes podem representar geometricamente

o sistema de coordenadas, uma vez que tal representa¸c˜ao depende de uma base, conforme

a Deﬁni¸c˜ao 2.29. Por exemplo, as matrizes I2 e I3, que representam as bases canˆonicas do

plano e do espa¸co, nessa ordem, podem ser representadas conforme exposto na Figura 2.5.

Figura 2.5: Representa¸c˜ao das matrizes identidade

(a) I2 no plano.

(b) I3 no espa¸co.

Fonte: Elaborado pelo autor.

As matrizes diferentes de I2 e I3, mas que tamb´em pertencem a SO (2) e SO (3),

possuem uma representa¸c˜ao similar no plano e no espa¸co, respectivamente, mantendo as

ortogonalidades. Por´em no plano os eixos n˜ao coincidem com os representados por I2, e,

no espa¸co, dois ou trˆes eixos n˜ao coincidem com os representados por I3.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

48

Proposi¸c˜ao 2.50 (Elemento Inverso de SO (n)): Se R ∈ SO (n), ent˜ao existe

R−1 ∈ SO (n), tal que R · R−1 = In.

Demonstra¸c˜ao. Como det (R) = 1, ent˜ao a matriz possui inverso multiplicativo.

O produto segue, ent˜ao, da propriedade de elemento inverso da multiplica¸c˜ao de

matrizes. Basta, ent˜ao, veriﬁcar se R−1 ∈ SO (n). De acordo com a Equa¸c˜ao 2.4,
1 = 1, e, como R−1 · (cid:0)R−1(cid:1)−1 = R−1 · R = I,
tem-se que det (cid:0)R−1(cid:1) = 1
conclui-se que R−1 ∈ SO (n).

det(R) = 1

Proposi¸c˜ao 2.51: Toda matriz R ∈ SO (n) descreve uma mudan¸ca de base em Vn.

Demonstra¸c˜ao. Seja a base B = {(cid:126)e1, (cid:126)e2, . . . , (cid:126)en} representada pela matriz

(cid:104)

R(1) =

e1 e2

. . . en

(cid:105)

∈ SO (n), no qual cada ei representa o vetor coluna cor-

respondente ao i-´esimo vetor da base, com 1 ≤ i ≤ n. De acordo com a Proposi¸c˜ao

2.47, o produto RR(1) tamb´em pertence a SO (n), logo descreve uma base ortonor-
mal de Vn.Escrevendo da forma RR(1) =

(cid:105)
, tem-se o seguinte

(cid:104)

(cid:48)

(cid:48)

e1

(cid:48) e2

. . . en

resultado:

(cid:104)

e1

(cid:48) e2

(cid:48)

. . . en

(cid:105)

(cid:48)

= R

(cid:104)
e1 e2

(cid:105)

. . . en

Pela Deﬁni¸c˜ao 2.37, ´e poss´ıvel aﬁrmar, ent˜ao, que a multiplica¸c˜ao `a esquerda por R

signiﬁca

uma

transforma¸c˜ao

linear

de mudan¸ca

de

base.

Caso

ei

(cid:48) = ei ∀i ∈ {1, 2, . . . , n}, ent˜ao R = In.

Corol´ario 2.52: Sejam as matrizes R(1), R(2) ∈ SO (n). Existe uma matriz R ∈ SO (n),

tal que R(1) = RR(2).

Demonstra¸c˜ao. O resultado ´e obtido quando R = R(1)R(2)

−1.

Os resultados da Proposi¸c˜ao 2.51 e do Corol´ario 2.52 aﬁrmam n˜ao somente que uma

matriz R ∈ SO (n) representa uma transforma¸c˜ao linear de mudan¸ca de base, mas que

toda mudan¸ca de base possui uma matriz representante pertencente a este grupo. Caso

R = I, ´e realizada uma transforma¸c˜ao identidade, a qual todo vetor permanece inalterado.

Quando a nota¸c˜ao AR ∈ SO (n) ´e utilizada, signiﬁca que a matriz representa uma

transforma¸c˜ao do sistema de coordenadas de referˆencia, cuja base ´e a matriz identidade,

para o sistema de coordenadas A. A nota¸c˜ao A

BR ∈ SO (n), por sua vez, signiﬁca a

transforma¸c˜ao do sistema de coordenadas A para o sistema de coordenadas B.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

49

A implica¸c˜ao geom´etrica da mudan¸ca de base ocorrida ao se multiplicar um vetor `a

esquerda por uma matriz pertencente a SO (n) ´e veriﬁcada no resultado a seguir:

Proposi¸c˜ao 2.53: Seja um vetor u = R · v, onde u, v ∈ Vn e R ∈ SO (n). ´E v´alido que

(cid:107)u(cid:107) = (cid:107)v(cid:107).

Demonstra¸c˜ao. Como (cid:107)u(cid:107) ≥ 0, fazendo uso da Equa¸c˜ao 2.7, tem-se que:

(cid:107)u(cid:107)2 = uT · u = (R · v)T · (R · v) = vT · RT · R · v = vT · v = (cid:107)v(cid:107)2

O resultado apresentado pela Proposi¸c˜ao 2.53 aﬁrma que a multiplica¸c˜ao `a esquerda

por A

BR n˜ao altera a norma do vetor. A representa¸c˜ao geom´etrica dessa opera¸c˜ao consiste

na altera¸c˜ao do sistema de coordenadas do vetor, que muda do sistema A para o B.

Como R0n×1 = 0n×1 e todo vetor de Vn possui a origem como ponto inicial, a opera¸c˜ao de

multiplicar `a esquerda por A

BR representa a rota¸c˜ao do vetor, mantendo a origem inalterada.

No plano, a matriz R ∈ SO (2) representa a transforma¸c˜ao geom´etrica Rot (α),

sendo α o ˆangulo de rota¸c˜ao em torno da origem. Sendo assim, a matriz R ´e da seguinte

forma:



R =



cos α − sen α

sen α

cos α





(2.9)

Exemplo 2.2.4: Seja o vetor v = [2, 3]T . Ao se multiplicar este vetor `a esquerda pela ma-

√







cos 30◦ − sen 30◦



triz R =

v(cid:48) = Rv =

(cid:104)√

sen 30◦

cos 30◦
(cid:105)T
√

3 − 3

2, 1 − 3

3
2

3

2 − 1

2

1
2

√

3
2

 =



 ∈ SO (2) ´e obtido o vetor

≈ [0,232 3,598]T . A representa¸c˜ao geom´etrica dessa mul-

tiplica¸c˜ao, demonstrada pela Figura 2.6, apresenta uma rota¸c˜ao do vetor em 30◦ em torno

da origem, isto ´e, Rot (30◦), segundo a nota¸c˜ao de transforma¸c˜ao geom´etrica no plano.

Para veriﬁcar o signiﬁcado da matriz R ∈ SO (3) como uma rota¸c˜ao no espa¸co,

faz-se necess´ario veriﬁcar os resultados a seguir.

Proposi¸c˜ao 2.54: O m´odulo dos autovalores de uma transforma¸c˜ao linear descrita por

uma matriz R ∈ SO (n) ´e 1.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

50

Figura 2.6: Rota¸c˜ao de 30◦ no plano

Fonte: Elaborado pelo autor.

Demonstra¸c˜ao. A Deﬁni¸c˜ao 2.35, quanto a autovalores e autovetores, aﬁrma que:

Rv = λv

Considerando a norma dos vetores, tem-se que:

(cid:107)Rv(cid:107)2 = (cid:107)λv(cid:107)2

(cid:107)Rv(cid:107)2 = |λ|2(cid:107)v(cid:107)2

Uma vez que, pela Proposi¸c˜ao 2.53, (cid:107)Rv(cid:107)2 = (cid:107)v(cid:107)2, segue que:

(cid:107)v(cid:107)2 = |λ|2(cid:107)v(cid:107)2 ⇒ |λ|2 = 1

Como o m´odulo ´e sempre n˜ao-negativo, conclui-se que |λ| = 1.

Teorema 2.55 (Teorema de Rota¸c˜ao de Euler): Qualquer rota¸c˜ao no espa¸co que

mant´em constante um ponto, tamb´em mant´em constante um eixo. Em outras palavras, se

R ∈ SO (3), ent˜ao existe um vetor n˜ao nulo v, tal que Rv = v.

Demonstra¸c˜ao. Utilizando a deﬁni¸c˜ao de autovetor e autovalor, v ´e o autovetor

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

51

associado ao autovalor 1. Logo, ´e necess´ario provar a existˆencia deste autovalor

unit´ario.

A equa¸c˜ao Rv = λv, que deﬁne autovetores e autovalores, pode ser escrita

da forma:

Rv = λIv ⇒ (R − λI) v = 03×1

Essa ´ultima equa¸c˜ao somente tem solu¸c˜ao n˜ao-trivial, isto ´e, com v n˜ao-nulo,

se o polinˆomio caracter´ıstico p (λ) = det (R − λI) possuir ra´ızes reais.

Como o polinˆomio ´e de terceiro grau, ele possui ao menos uma raiz real.

Levando em conta que det (R) = 1, e as Proposi¸c˜oes 2.36 e 2.54, tem-se os seguintes

casos:

1. O polinˆomio possui trˆes ra´ızes reais λ1, λ2, λ3. Como as ra´ızes possuem m´odulo

unit´ario e o produto das ra´ızes ´e igual a 1, ou as ra´ızes s˜ao (−1, − 1, 1) ou

s˜ao (1, 1, 1);

2. O polinˆomio possui uma raiz real λ1 e duas ra´ızes complexas conjugadas λ2 e

2. Como λ2 · λ∗
λ∗

2 = λ2

2 = 1, tem-se que λ1 = 1.

Em ambos os casos existe a raiz 1. Sendo assim, como R possui um autovalor

unit´ario, existe um autovetor v tal que Rv = v.

Geometricamente, o vetor pertencente a V3 que permanece inalterado ao ser multi-

plicado `a esquerda por uma matriz de rota¸c˜ao R ∈ SE (3), conforme demonstrado pelo

Teorema de Euler 2.55, ´e o eixo da rota¸c˜ao no espa¸co. O sentido do vetor deﬁne o sentido

da rota¸c˜ao, conforme a regra da m˜ao direita apresentada na Figura 2.2b.

As rota¸c˜oes no espa¸co que s˜ao mais relevantes para o desenvolvimento desse trabalho

s˜ao as que acontecem em torno dos vetores que representam os eixos (cid:126)x, (cid:126)y e (cid:126)z do sistema

de coordenadas. As matrizes AR = Rot ((cid:126)x, α), BR = Rot ((cid:126)y, β) e CR = Rot ((cid:126)z, γ), com

AR, BR, CR ∈ SO (3), s˜ao representadas da seguinte forma, respectivamente:


1





0

0

AR =

0 cos α − sen α

0 sen α

cos α








Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

52















BR =

CR =

cos β

0 sen β

0

1

0

− sen β 0 cos β

cos γ − sen γ 0

sen γ

cos γ

0

0












0



1

Exemplo 2.2.5: A rota¸c˜ao de 45◦ em torno do eixo (cid:126)z, representado como Rot ((cid:126)z, 45◦),

exempliﬁcado pela Figura 2.7, ´e dado pela seguinte matriz:

cos 45◦ − sen 45◦ 0

0,707 −0,707 0

AR =

sen 45◦

cos 45◦

≈

0,707

0,707

0

0

0

0





0



1






















0

1

Figura 2.7: Representa¸c˜ao de Rot ((cid:126)z, 45◦)

Fonte: Elaborado pelo autor.

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

53

2.2.2 Grupo Euclidiano Especial

Deﬁni¸c˜ao 2.56: Denotado por SE (n), o grupo euclidiano especial ´e aquele que cont´em

matrizes que descrevem as isometrias diretas de um espa¸co n-dimensional.

A representa¸c˜ao se d´a por matrizes de dimens˜oes (n + 1) × (n + 1), chamadas

matrizes de transforma¸c˜ao homogˆenea, que s˜ao da forma:

T =

onde R ∈ SO (n) e p ∈ Vn.





R p

01×n 1





Proposi¸c˜ao 2.57: Todas as isometrias diretas do plano e do espa¸co podem ser descritas

por uma matriz pertencente a SE (2) e SE (3), respectivamente.

Demonstra¸c˜ao. Escrevendo o vetor (cid:126)v = (v1, v2) ∈ V2 como v(cid:48) = (cid:2)vT 1(cid:3)T =
[v1 v2 1]T , ao se multiplicar T ∈ SE (2) por v(cid:48), obt´em-se:

T · v(cid:48) =





R p

01×n 1



 ·



 =





v

1





R · v + p

1





O vetor [R · v + p]T ´e o vetor v ap´os uma transforma¸c˜ao de transla¸c˜ao

descrita por p e uma rota¸c˜ao descrita por R. Se a transforma¸c˜ao for de somente
transla¸c˜ao, tem-se que R = I2, e se for somente de rota¸c˜ao, tem-se que p = [0 0]T .

A demonstra¸c˜ao para o espa¸co, com T ∈ SE (3), ´e an´aloga.

Dessa forma, a transforma¸c˜ao geom´etrica Ω : R3 → R3, que representa isometrias

diretas no espa¸co, ´e da forma:

[Ω (v)] = Tv,

(2.10)

onde T ∈ SE (3), e os vetores coluna [Ω (v)] e v possuem quatro elementos, sendo os trˆes
primeiros as coordenadas de R3 e o quarto, o valor 1, ou seja, s˜ao da forma [v1, v2, v3, 1]T .

Como, segundo a Deﬁni¸c˜ao 2.29, um sistema de referˆencia pode ser representado

por um par composto por um ponto e uma base ortonormal , isto ´e, (O, B), ao se aplicar

uma transla¸c˜ao ao ponto O e uma rota¸c˜ao, que representa uma mudan¸ca de base em B, ´e

realizada, ent˜ao, uma mudan¸ca do sistema de referˆencia.

As quatro proposi¸c˜oes a seguir provam as propriedades de grupo de SE (n).

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

54

Proposi¸c˜ao 2.58 (Fechamento em SE (n)): Se AT ∈ SE (n) e BT ∈ SE (n) ent˜ao

ATBT ∈ SE (n).

Demonstra¸c˜ao. Ao se multiplicar as matrizes, obt´em-se:













ATBT =

=

=





 ·



AR pA

BR pB

01×n

11

01×n

11









AR ·B R + pA · 01×n

AR · pB + pA · 11

01×n ·B R + 11 · 01×n 01×n · pB + 11 · 11


ARBR ARpB + pA

01×n

11



Conforme a Proposi¸c˜ao 2.47, a submatriz ARBR ∈ SO (n). Como a submatriz

ARpB + pA tem dimens˜oes n × 1, pode-se concluir que ATBT ∈ SE (n).

Proposi¸c˜ao 2.59 (Associatividade de SE (n)): Se AT ∈ SE (n), BT ∈ SE (n) e

CT ∈ SE (n), ent˜ao (ATBT)C T =A T (BTCT).

Demonstra¸c˜ao. O resultado ´e obtido aplicando a propriedade de associatividade

da multiplica¸c˜ao de matrizes.

Proposi¸c˜ao 2.60 (Elemento Neutro de SE (n)): Se T ∈ SE (n), ent˜ao existe o

elemento In+1 ∈ SE (n) tal que T · In+1 = In+1 · T = T.

Demonstra¸c˜ao. Como a matriz T ∈ SE (n) possui ordem n + 1, o produto segue

da propriedade de elemento neutro da multiplica¸c˜ao de matrizes. Basta, ent˜ao,



In

0n×1





01×n

11

veriﬁcar se In+1 ∈ SE (n), o que ´e verdade, pois In+1 =

, e, como

In ∈ SO (n) conforme a Proposi¸c˜ao 2.49, tem-se que In+1 ∈ SE (n).

Em SE (3) a matriz I4 signiﬁca o sistema de referˆencia dos eixos das coordenadas

reais (cid:126)x, (cid:126)y e (cid:126)z. Signiﬁca, tamb´em, aplicar nenhuma transla¸c˜ao e nenhuma rota¸c˜ao ao

sistema de coordenadas. A Figura 2.5 representa I4 em SE (3).

Proposi¸c˜ao 2.61 (Elemento Inverso de SE (n)): Se T =

T−1 ∈ SE (n), tal que T · T−1 = In+1.





R

p

01×n 11



 ∈ SE (n), existe

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

55

Demonstra¸c˜ao. O produto segue da propriedade de elemento inverso da multiplica-

¸c˜ao de matrizes. Basta, ent˜ao, veriﬁcar se T−1 ∈ SE (n). Suponha a existˆencia de

tal matriz da forma T−1 =

 ∈ SE (n). Sendo assim, tem-se que:



R(cid:48)

p(cid:48)





01×n 11













TT−1 =

=

=

R

p

01×n 11





 ·



R(cid:48)

p(cid:48)

01×n 11





R · R(cid:48) + p · 01×n
01×n · R(cid:48) + p · 01×n 01×n · p(cid:48) + 11 · 11

R · p(cid:48) + p · 11





R · R(cid:48) R · p(cid:48) + p · 11

01×n

11





(2.11)

Dessa forma, para que R·R(cid:48) = In, tem-se que R(cid:48) = RT , conforme a Proposi¸c˜ao

2.50. Para que R · p(cid:48) + p · 11 = 0n×1, tem-se que R · p(cid:48) = −p ⇒ p(cid:48) = −RT p.



R

p





01×n 11

Por ﬁm, conclui-se que, para a matriz T =

, a sua inversa ´e





T−1 =

RT −RT p

01×n

11



.



Proposi¸c˜ao 2.62: Sejam as matrizes T(1) =



01×n
pertencentes a SE (n), as quais representam as transla¸c˜oes Trans (cid:0)p(1)
respectivamente. A matriz T = T(1) · T(2) equivale `a transla¸c˜ao Trans (cid:0)p(1) + p(2)

01×n

11

11

(cid:1).

(cid:1) e Trans (cid:0)p(2)

(cid:1),

In

p(1)





 e T(2) =





In

p(2)

, ambas

Proposi¸c˜ao 2.63: A matriz T =





R

p

01×n 11



 ∈ SE (n), com R (cid:54)= In, n = {2, 3} e o vetor

p n˜ao nulo, tem-se que T equivale `a aplica¸c˜ao de uma transla¸c˜ao e uma rota¸c˜ao, nessa

ordem.

Demonstra¸c˜ao. A prova se d´a ao multiplicar as matrizes equivalentes `as transfor-

ma¸c˜oes geom´etricas, pois





I

p

01×n 11





 ·





R 0n×1

01×n

11

 = T.

Exemplo 2.2.6:

A matriz AT ∈ SE (3) que equivale `as

transforma¸c˜oes

Cap´ıtulo 2. Fundamenta¸c˜ao Te´orica

56

Trans ((cid:126)p) Rot ((cid:126)z, 30◦), onde (cid:126)p = (1, − 1, 0), exempliﬁcada pela Figura 2.8, ´e dada por:

AT =











cos 30◦ − sen 30◦ 0

1

sen 30◦

cos 30◦

0 −1

0

0

0

0

1

0

0

1











Figura 2.8: Representa¸c˜ao de Trans ((cid:126)p) Rot ((cid:126)z, 30◦) em SE (3)

Fonte: Elaborado pelo autor.

3 Desenvolvimento

Nesse cap´ıtulo s˜ao utilizados os conte´udos apresentados na fundamenta¸c˜ao te´orica

em atividades pr´aticas, sendo a primeira a de posicionamento de objetos r´ıgidos no plano

e no espa¸co, e a segunda, a descri¸c˜ao de um bra¸co rob´otico no espa¸co, por meio de uma

abordagem computacional.

3.1 Posicionamento de um Objeto R´ıgido

O problema abordado nessa se¸c˜ao consiste em especiﬁcar quantas e quais s˜ao as

informa¸c˜oes necess´arias para descrever o posicionamento de um objeto tanto no plano

quanto no espa¸co.

Como exemplo, para a an´alise no plano ´e considerado um triˆangulo escaleno,

onde os lados possuem dimens˜oes inalter´aveis a, b e c, opostos aos v´ertices A, B e C,

respectivamente. Para a realiza¸c˜ao da an´alise no espa¸co ´e utilizado um prisma, cuja face

da base seja congruente ao triˆangulo analisado no plano, e a altura desprez´ıvel.

Para que seja poss´ıvel ter referencial no posicionamento, este foi realizado no plano

e no espa¸co cartesianos, isto ´e, em R2 e R3, respectivamente.

3.1.1 Posicionamento no Plano

O posicionamento do objeto no plano se inicia com a escolha livre de um ponto

no plano cartesiano para posicionar o ponto A. Essa escolha envolve duas vari´aveis, que

representam as coordenadas do ponto A no plano OXY de referˆencia. Essas vari´aveis

ser˜ao representadas como xA e yA.

Uma vez deﬁnido o ponto A, ´e posicionado o ponto B do objeto. ´E f´acil veriﬁcar que

a escolha da posi¸c˜ao do ponto B n˜ao ´e livre, isto ´e, n˜ao se pode tomar quaisquer coordenadas
(xB − xA)2 + (yB − yA)2 = c.

xB e yB, pois ´e necess´ario satisfazer a restri¸c˜ao d(A,B) =

(cid:113)

Dessa maneira, para que a restri¸c˜ao seja facilmente cumprida, ´e utilizada uma

vari´avel α, que representa o ˆangulo compreendido entre a reta r, paralela ao eixo OX que

57

Cap´ıtulo 3. Desenvolvimento

passa por A, e a semirreta

−→
AB.

58

ser posicionado, obedecendo `as restri¸c˜oes d(C,A) =

Uma vez ﬁxados os pontos A e B, o ponto C possui somente um local para
(xA − xC)2 + (yA − yC)2 = b e
(xB − xC)2 + (yB − yC)2 = a. Para o posicionamento do objeto no plano n˜ao

d(C,B) =

(cid:113)

(cid:113)

´e considerada a op¸c˜ao de vir´a-lo em torno do eixo AB, uma vez que exigiria um movimento

em uma terceira dimens˜ao. A Figura 3.1 exempliﬁca o posicionamento ﬁnal do triˆangulo

no plano.

Figura 3.1: Posicionamento do triˆangulo no plano

Fonte: Elaborado pelo autor.

Conclui-se, ent˜ao, que bastam trˆes vari´aveis para representar o posicionamento de

um objeto no plano, a saber as duas coordenadas de um ponto qualquer do s´olido e uma

vari´avel que representa um giro deste no plano.

Para utilizar a nota¸c˜ao do grupo euclidiano especial SE (2), conforme a Se¸c˜ao 2.2.2,

tem-se que:

• O referencial do objeto ´e o ponto A, que passa a ser a origem do sistema de referˆencia;

• O deslocamento inicial do ponto A no plano ´e dado pelo vetor (cid:126)p = (xA, yA);

Cap´ıtulo 3. Desenvolvimento

59

• O giro do objeto em torno do ponto A ´e no valor do ˆangulo α;

Dessa forma, a matriz de transforma¸c˜ao homogˆenea T ∈ SE (2) equivalente ao

deslocamento ´e a seguinte:



cos α − sen α xA






T =

sen α

cos α

0

0








yA

1

3.1.2 Posicionamento no Espa¸co

Semelhantemente ao que foi feito no plano, ao iniciarmos o posicionamento do

prisma no espa¸co, s˜ao ﬁxados um de trˆes pontos n˜ao-colineares pertencentes ao s´olido.

Tomando um ponto A aleat´orio, os dados necess´arios para seu posicionamento s˜ao as suas

coordenadas no espa¸co (xA, yA, zA).

Ap´os ﬁxarmos o ponto A, deve-se posicionar um ponto B, pertencente ao s´olido.

Como a distˆancia entre A e B ´e constante, h´a uma restri¸c˜ao na escolha do local de

posicionamento do ponto B, que tem que estar contido na esfera com centro em A e com

raio d(A,B) =

(xB − xA)2 + (yB − yA)2 + (zB − zA)2 = c.

(cid:113)

De forma a facilitar a representa¸c˜ao, s˜ao utilizados dois ˆangulos, θ e φ, que represen-

tam as referentes coordenadas esf´ericas, conforme a Deﬁni¸c˜ao 2.32, do ponto B em rela¸c˜ao

aos vetores paralelos a (cid:126)x, (cid:126)y e (cid:126)z que passam no ponto A. O comprimento do segmento AB

´e a coordenada ρ restante.

Uma vez ﬁxado os pontos A e B, ´e posicionado, ent˜ao, um ponto C, tamb´em contido
no prisma, e n˜ao colinear a AB. ´E poss´ıvel observar que o ponto C necessariamente tem

que estar contido no c´ırculo de raio d (AB,C) e centro em C (cid:48), que ´e a interse¸c˜ao da reta

perpendicular a AB que passa por C e a pr´opria reta AB. Esse c´ırculo ´e a interse¸c˜ao

entre as esferas com centro em A e raio d (A,C) e com centro em B e raio d (B,C), uma

vez que, pelo fato de A, B e C n˜ao serem colineares, d (A,B) < d (A,C) + d (B,C). Para

posicionar o ponto no c´ırculo, basta que haja uma representa¸c˜ao por meio de um ˆangulo γ,

em rela¸c˜ao a um plano qualquer que contenha AB.

Ap´os ﬁxar os pontos A, B e C, ´e realiza uma tentativa, ent˜ao, de ﬁxar um quarto

ponto D, contido no s´olido. No entanto, por haver trˆes restri¸c˜oes, isto ´e, a distˆancia do

ponto D a qualquer um dos trˆes pontos j´a ﬁxados, resta apenas uma posi¸c˜ao para o quarto

ponto, e qualquer vari´avel associada ao seu posicionamento seria redundante. Dessa forma,

Cap´ıtulo 3. Desenvolvimento

60

pode-se aﬁrmar que, para posicionar um objeto s´olido no espa¸co, bastam se utilizar seis

vari´aveis, sendo trˆes coordenadas e trˆes ˆangulos. A Figura 3.2 exempliﬁca o posicionamento

ﬁnal do prisma no espa¸co.

Figura 3.2: Posicionamento do prisma no espa¸co

Fonte: Elaborado pelo autor.

Utilizando a nota¸c˜ao do grupo euclidiano especial SE (3), conforme a Se¸c˜ao 2.2.2,

tem-se que:

• A origem do sistema de referˆencia do objeto no espa¸co ´e o ponto A;

• O eixo (cid:126)y do objeto, denotado (cid:126)yo ´e colinear a

−→
AB e o eixo (cid:126)z do objeto, denotado (cid:126)zo ´e

colinear a

−→
AC;

• O deslocamento inicial do ponto A no espa¸co ´e dado pelo vetor (cid:126)p = (xA, yA, zA);

• Se forem feitas as convers˜oes α = 90◦ − φ e β = 90◦ − θ, os ˆangulos α, β e γ

representar˜ao rota¸c˜oes sucessivas em torno dos eixos (cid:126)xo, (cid:126)y(cid:48)
onde (cid:126)y(cid:48)

o e (cid:126)z(cid:48)(cid:48)
o ´e o eixo (cid:126)yo ap´os a primeira rota¸c˜ao em torno de (cid:126)xo, e (cid:126)z(cid:48)(cid:48)

o , respectivamente,

o ´e o eixo (cid:126)zo ap´os

as duas primeiras rota¸c˜oes sucessivas. Os ˆangulos α, β e γ, que descrevem as trˆes
rota¸c˜oes sucessivas, s˜ao denominados ˆAngulos de Euler[22].

Dessa forma, a matriz de transforma¸c˜ao homogˆenea T ∈ SE (3) equivalente ao

deslocamento ´e a seguinte:

Cap´ıtulo 3. Desenvolvimento











T =

1 0 0 xA

0

0

0 s β 0

c γ − s γ 0 0

0 1 0 yA

0 c α − s α 0

1

0

0

0 0 1 zA

0 s α

0 0 0

c α

0

0

− s β 0 c β 0

0

0

0

1

s γ

c γ

0 0

0

0

0

0

1 0

0 1

c β

0





0






0



1

·



















·


1







0











·











1











c β c γ

− c β s γ

s β

xA

c α s γ + c γ s α s β c α c γ − s α s β s γ − c β s α yA

s α s γ − c α c γ s β c γ s α + c α s β s γ

0

0

c α c β

0

zA

1











61











=

em que c α = cos α, s α = sen α etc.

3.1.3 Graus de Liberdade

Graus de liberdade, na Mecˆanica, ´e o de conjunto de vari´aveis que representam

a posi¸c˜ao e o deslocamento de um objeto r´ıgido ou de um sistema em um espa¸co n-

dimensional.

Tomando como referˆencia o posicionamento de objetos r´ıgidos realizado nas se¸c˜oes

anteriores, ´e v´alido que:

• No plano s˜ao necess´arias 2 + 1 = 3 vari´aveis para representar a posi¸c˜ao do objeto,

totalizando 3 graus de liberdade;

• No espa¸co tridimensional s˜ao necess´arias 3 + 2 + 1 = 6 vari´aveis para posicionar o

objeto, totalizando 6 graus de liberdade;

3.2 Simula¸c˜ao do bra¸co rob´otico

Nessa se¸c˜ao s˜ao apresentados os conceitos relativos a bra¸cos rob´oticos, a nota¸c˜ao

de Denavit-Hartenberg e o processo de simula¸c˜ao por meio de ambiente computacional.

O objetivo principal ´e comparar a representa¸c˜ao do efetuador de um bra¸co rob´otico

por meio da nota¸c˜ao de Denavit-Hartenberg, ou seja, por um produto de matrizes de

SE (3), com a posi¸c˜ao e orienta¸c˜ao do efetuador de um bra¸co real. A representa¸c˜ao dada ´e

por meio do ambiente computacional da linguagem de programa¸c˜ao Octave e a veriﬁca¸c˜ao

da posi¸c˜ao do bra¸co, por meio do simulador de rob´otica CoppeliaSim, ambos apresentados

nas pr´oximas subse¸c˜oes.

Cap´ıtulo 3. Desenvolvimento

62

3.2.1 Deﬁni¸c˜ao de bra¸co rob´otico

O termo robˆo foi originado da palavra tcheca robota, que signiﬁca trabalho escravo,
e surgiu pela primeira vez na obra de ﬁc¸c˜ao “R.U.R.”, do escritor Karel ˇCapek, em 1920.

No enredo, human´oides s˜ao criados a partir de mat´eria orgˆanica, a ﬁm de exercerem

atividades servi¸cais a humanos.

O autor que ganhou mais fama com o tema rob´otica, a partir do ano 1950, foi Isaac

Asimov, com os livros “Eu, Robˆo”, “O Homem Bicenten´ario”, os livros da s´erie Robˆos entre

outros.

Dentre alguns robˆos conhecidos na ﬁc¸c˜ao, pode-se destacar a empregada dom´estica

Rosie, do desenho animado Os Jetsons, os droides C-3PO e R2-D2, da saga Star Wars, o

Bender, da s´erie Futurama, Wall-E, do ﬁlme homˆonimo, entre outros.

Na vida real, no entanto, o conceito de robˆos n˜ao ´e unˆanime. Enquanto alguns

consideram robˆo qualquer equipamento automatizado que realize uma tarefa, o que

incluiria, por exemplo, as m´aquinas de lavar roupas, o conceito mais aplicado se restringe

aos equipamentos que podem ser reprogramados, de forma a executar fun¸c˜oes que n˜ao

foram pr´e-programadas em sua constru¸c˜ao.

Por mais que haja robˆos no ambiente dom´estico, como aspiradores de p´o autom´aticos,

segundo Mihelj et al.[23], os sistemas rob´oticos mais ´uteis e eﬁcientes, atualmente, s˜ao

os manipuladores rob´oticos industriais, que podem substituir os trabalhadores humanos

em trabalhos dif´ıceis ou mon´otonos, ou onde o homem pudesse se deparar com condi¸c˜oes

perigosas.

O manipulador rob´otico mais comum ´e o bra¸co rob´otico, que ´e um equipamento

mecˆanico similar aos membros superiores humanos, com articula¸c˜oes e partes s´olidas,
podendo executar tarefas diversas. `A jun¸c˜ao das partes do bra¸co rob´otico se d´a o nome

de cadeia aberta, pois podem ser representados por um conjunto de mecanismos simples

ligados, que possuem movimenta¸c˜ao independente. Os componentes que formam a cadeia

do bra¸co rob´otico, conforme o exemplo da Figura 3.3, s˜ao os seguintes:

• Base: onde o bra¸co ´e ﬁxado, podendo ser classiﬁcada como ﬁxa, quando instalada em

uma estrutura im´ovel, ou m´ovel, quando ´e instalada em um carro, trilho ou algum

outro equipamento que se desloque;

• Elos: objetos r´ıgidos respons´aveis por dar comprimento e sustenta¸c˜ao ao bra¸co;

Cap´ıtulo 3. Desenvolvimento

63

Figura 3.3: Bra¸co rob´otico IRB 140 da marca Asea Brown Boveri (ABB)

Fonte: ABB[24], com marca¸c˜oes do autor.

• Juntas: mecanismos que transmitem movimento ao conjunto. Est˜ao instaladas entre

os elos, mudando a posi¸c˜ao relativa entre estes. Elas s˜ao classiﬁcadas quanto ao tipo

de movimenta¸c˜ao que exercem, sendo as de movimento linear chamadas de juntas

deslizantes ou prism´aticas e as de movimento rotacional, juntas rotacionais ou de

revolu¸c˜ao;

• Efetuador: elemento ﬁnal da cadeia. ´E onde ´e instalada a ferramenta que exercer´a

a atividade ﬁnal proposta pelo bra¸co rob´otico. Alguns exemplos de ferramentas

comuns instaladas nos efetuadores s˜ao garras, eletro´ım˜as, ventosas, parafusadeiras,

equipamentos de soldagem, entre outros.

Deﬁne-se como cinem´atica direta o uso de recursos matem´aticos para se localizar

o efetuador do bra¸co rob´otico, fazendo o uso de informa¸c˜oes da localiza¸c˜ao da base, do

tamanho dos elos e da posi¸c˜ao das juntas.

Ao conjunto de todas as posi¸c˜oes e orienta¸c˜oes as quais o bra¸co rob´otico pode

alcan¸car ´e dado o nome de espa¸co de trabalho.

Al´em da cinem´atica direta, outras ´areas de estudo de bra¸cos rob´oticos s˜ao os

seguintes:

• Cinem´atica inversa, na qual, dada uma posi¸c˜ao para o efetuador, ´e veriﬁcada o

conjunto de solu¸c˜oes de posi¸c˜ao das juntas para alcan¸c´a-la, caso seja poss´ıvel;

Cap´ıtulo 3. Desenvolvimento

64

• Dinˆamica, onde ´e veriﬁcado o torque, momento, e demais for¸cas envolvidas na tarefa

do bra¸co rob´otico;

• Controle, que lida com a maneira a qual ´e poss´ıvel enviar comandos para o bra¸co, de

forma a alterar a posi¸c˜ao de juntas, e/ou operar as ferramentas acopladas em seu

efetuador;

• Automa¸c˜ao, que ´e a ´area que lida com a sequˆencia de tarefas a serem executadas,

bem como na gera¸c˜ao de trajet´orias, tendo em considera¸c˜ao algumas vari´aveis, como

o tempo e a resposta de sensores externos `a m´aquina.

O estudo de caso desse trabalho se ateve `a cinem´atica direta do bra¸co rob´otico.

3.2.2 Nota¸c˜ao de Denavit-Hartenberg

Denavit e Hartenberg[25] apresentaram uma proposta de utiliza¸c˜ao de matrizes

para representar mecanismos. Em suma, propuseram a utiliza¸c˜ao de matrizes para a

descri¸c˜ao de mecanismos, incluindo seus componentes, contendo as informa¸c˜oes necess´arias

para, n˜ao somente descrever seu posicionamento, mas tamb´em sua orienta¸c˜ao.

A representa¸c˜ao de um elo de um bra¸co rob´otico se d´a por meio de uma transla¸c˜ao

com valor constante. As juntas rotacionais s˜ao representadas por uma rota¸c˜ao com ˆangulo

vari´avel e as prism´aticas, como uma transla¸c˜ao com comprimento vari´avel. O sistema

de coordenadas adotado na descri¸c˜ao de um elemento leva em considera¸c˜ao o sistema de

coordenadas de todos os elementos anteriores reunidos.

Por exemplo, o bra¸co rob´otico planar apresentado por Siciliano et al.[26], presente

na Figura 3.4, possui trˆes elos e trˆes juntas rotacionais, e o ponto P descreve a posi¸c˜ao do

ﬁnal da cadeia, isto ´e, seu efetuador. Segundo a nota¸c˜ao de Denavit-Hartenberg, a cada

um desses elementos ´e atribu´ıda uma matriz de transforma¸c˜ao homogˆenea.

Como o exemplo ´e no plano, a matriz de rota¸c˜ao que equivale a cada junta ´e similar

`a matriz apresentada na Equa¸c˜ao 2.9, s´o variando o ˆangulo em quest˜ao. Com as juntas

em estado inicial, isto ´e, com valor 0◦ atribu´ıdo aos ˆangulos ϑ1, ϑ2 e ϑ3 da Figura 3.4, os

elos s˜ao representados como transla¸c˜oes ao longo do eixo (cid:126)x. A descri¸c˜ao de cada elemento

acontece, ent˜ao, da seguinte forma:

Cap´ıtulo 3. Desenvolvimento

65

Figura 3.4: Bra¸co rob´otico planar

Fonte: Siciliano et al.[26].

Junta 1: T(J1) =

Junta 2: T(J2) =

Junta 3: T(J3) =






















cos ϑ1 − sen ϑ1 0

sen ϑ1

cos ϑ1

0

0

cos ϑ2 − sen ϑ2 0

sen ϑ2

cos ϑ2

0

0

cos ϑ3 − sen ϑ3 0

sen ϑ3

cos ϑ3

0

0





0



1





0



1





0



1

Elo 1: T(E1) =

Elo 2: T(E2) =

Elo 3: T(E3) =











































1 0 a1

0 1

0 0

0

1

1 0 a2

0 1

0 0

0

1

1 0 a3

0 1

0 0

0

1

Ainda segundo a nota¸c˜ao, a matriz T(Ef) que representa o efetuador do bra¸co

rob´otico, descrevendo o sistema de coordenadas ao qual o ponto P ´e a origem, ´e dada pelo

produto:

T(Ef) = T(J1)T(E1)T(J2)T(E2)T(J3)T(E3)

Cap´ıtulo 3. Desenvolvimento

66

3.2.3 A linguagem de programa¸c˜ao Octave

O Octave ´e uma linguagem de programa¸c˜ao de alto n´ıvel, destinada inicialmente a

c´alculos num´ericos, mas que possui muitas ferramentas para resolver problemas comuns de
´Algebra Linear[8]. Al´em da sintaxe simples e da facilidade de manipula¸c˜ao de matrizes, a

escolha da linguagem de programa¸c˜ao Octave se mostrou conveniente devido ao seu bom

ambiente de programa¸c˜ao, sua f´acil customiza¸c˜ao, as ferramentas de plotagem de gr´aﬁcos

e a cria¸c˜ao de interface gr´aﬁca de usu´ario. A vers˜ao do Octave utilizada ´e a 5.2.0, em um

computador com sistema operacional Microsoft Windows 10.

O ambiente de programa¸c˜ao do Octave, ilustrado pela Figura 3.5, possui, basica-

mente, os seguintes itens em sua interface gr´aﬁca:

Figura 3.5: Ambiente de programa¸c˜ao do Octave

Fonte: Captura de tela do software Octave com anota¸c˜oes do autor.

1. Barra de menus, com as op¸c˜oes “Arquivo”, “Editar” etc;

2. Barra de ferramentas, com os bot˜oes “Novo”, “Abrir” etc;

Cap´ıtulo 3. Desenvolvimento

67

3. Navegador de Arquivos, onde ´e exibida a pasta ativa e os arquivos contidos nela;

4. Ambiente de Trabalho, que concentra as vari´aveis globais que foram declaradas e

tem valor atribu´ıdo;

5. Hist´orico de Comandos, onde ﬁcam registradas as ´ultimas linhas de comando;

6. Janela de Comandos, onde s˜ao escritos as linhas de comandos a serem executados

uma a uma, e exibidas o progresso da execu¸c˜ao de comandos elaborados no Editor;

7. Editor, onde s˜ao escritos os c´odigos a serem executados, e que podem ser salvos.

Vale ressaltar que o Octave ´e um software livre e seu ambiente de programa¸c˜ao ´e

distribu´ıdo gratuitamente.

3.2.4 O software CoppeliaSim

De forma a veriﬁcar se a descri¸c˜ao do posicionamento e da orienta¸c˜ao do bra¸co

rob´otico por meio de grupos matriciais, segundo a nota¸c˜ao de Denavit-Hartenberg, podem

representar uma descri¸c˜ao ﬁel, foi realizada a compara¸c˜ao com um exemplar de bra¸co

rob´otico. No entanto, ao inv´es de utilizar um bra¸co rob´otico real, o estudo foi feito em um

modelo de bra¸co rob´otico dispon´ıvel em um ambiente de simula¸c˜ao.

Foi utilizado, ent˜ao, o simulador de robˆo CoppeliaSim[9], que possui ambiente de

desenvolvimento integrado e ´e baseado em uma arquitetura de controle distribu´ıda, em

que cada objeto pode ser controlado individualmente. O controle pode ser feito tanto por

scripts embarcados no pr´oprio software, quanto externamente, por meio de ferramentas,

como, por exemplo, interface de programa¸c˜ao de aplica¸c˜oes (API, da sigla em inglˆes)

escrita na linguagem Octave.

A vers˜ao do CoppeliaSim utilizada foi a Edu, n´umero 4.1.0, em computador com

sistema operacional Microsoft Windows 10. Por mais que n˜ao haja requisitos b´asicos para

o uso do software, este foi utilizado em um computador com 8 gigabytes de mem´oria RAM,

processador com 2,5 gigahertz de frequˆencia e placa de v´ıdeo dedicada de 1 gigabyte.

Dentre as aplica¸c˜oes do CoppeliaSim informadas pelo desenvolvedor, pode-se desta-

car o uso em educa¸c˜ao relacionada `a rob´otica.

A janela da aplica¸c˜ao do CoppeliaSim, conforme ilustrado na Figura 3.6, possui,

entre outros, os seguintes elementos relevantes a este trabalho:

Cap´ıtulo 3. Desenvolvimento

68

Figura 3.6: Ambiente de Simula¸c˜oes do CoppeliaSim

Fonte: Coppelia Robotics[9].

• Barra de menus (Menu bar ), onde s˜ao acessadas a maioria das funcionalidades do

simulador. Possui as op¸c˜oes “File”, “Edit”, “Add ” etc;

• Barras de ferramentas (Toolbar ), onde est˜ao os bot˜oes de ferramentas que s˜ao

acessadas mais frequentemente;

• Navegador de modelos (Model browser ), onde ´e poss´ıvel acessar as pastas com os

modelos de robˆos, bem como de equipamentos, ferramentas e demais componentes

da simula¸c˜ao. Ao selecionar a pasta, s˜ao exibidas miniaturas dos itens abaixo;

• Hierarquia da cena (Scene hierarchy), que ´e a lista de nomes dos itens contidos na

cena;

• P´agina (Page), que ´e onde s˜ao exibidos os elementos que comp˜oem a simula¸c˜ao.

Durante a execu¸c˜ao da simula¸c˜ao, ´e o local onde ´e poss´ıvel ver as anima¸c˜oes;

• Texto de informa¸c˜ao (Information text), localizado logo acima da p´agina da simula¸c˜ao,

com informa¸c˜oes sobre o item selecionado na Hierarquia da cena;

Cap´ıtulo 3. Desenvolvimento

69

• Editor de comandos Lua (Lua Commander ), localizado na posi¸c˜ao extrema inferior.
´E onde se insere comandos na linguagem de programa¸c˜ao Lua, que ´e a embarcada

no simulador.

A vers˜ao Edu do CoppeliaSim ´e distribu´ıda gratuitamente, possibilitando seu uso

em ambiente acadˆemico sem grandes investimentos.

3.2.5 Descri¸c˜ao dos elementos do bra¸co rob´otico

Ap´os a apresenta¸c˜ao das ferramentas computacionais que foram utilizadas, para

iniciar a simula¸c˜ao por meio de matrizes, fez-se necess´ario escolher um modelo de bra¸co

rob´otico para o estudo de casos. Dentre os modelos dispon´ıveis no ambiente de simula¸c˜ao

do CoppeliaSim, optou-se pelo IRB 140, da marca Asea Brown Boveri (ABB), por ter sua

ﬁcha de dados dispon´ıvel na internet[24] e por possuir 6 graus de liberdade, o que signiﬁca

que, dentro do seu espa¸co de trabalho, qualquer posi¸c˜ao e orienta¸c˜ao pode ser alcan¸cada.

A Figura 3.3 ilustra o bra¸co em quest˜ao.

Uma vez feita a escolha do bra¸co, foi realizado o levantamento das juntas e dos elos

do bra¸co rob´otico por meio das dimens˜oes descritas pelo manual fornecido pelo fabricante

e pela an´alise dos elementos que comp˜oem o bra¸co no modelo fornecido pelo CoppeliaSim.

Para analisar o modelo do simulador, alinhando-o ao eixo (cid:126)y, ´e necess´ario realizar as etapas

de conﬁgura¸c˜ao no ambiente de simula¸c˜ao descritas no Anexo B. A Figura 3.7 representa

o bra¸co rob´otico ap´os a conﬁgura¸c˜ao.

Figura 3.7: Bra¸co IRB 140 no CoppeliaSim ap´os sua conﬁgura¸c˜ao

Fonte: Elaborado pelo autor.

Cap´ıtulo 3. Desenvolvimento

70

A justiﬁcativa para o alinhamento do bra¸co rob´otico com o eixo (cid:126)y ´e explicada

quando a simula¸c˜ao for por meio de interface gr´aﬁca de usu´ario, na Subse¸c˜ao 3.2.7.

Figura 3.8: Bra¸co IRB 140 no CoppeliaSim, com a junta 5 selecionada
na Hierarquia da Cena e descrita no Texto de Informa¸c˜ao

Fonte: Elaborado pelo autor.

Com a Hierarquia da cena expandida, ´e poss´ıvel veriﬁcar todos os itens que comp˜oem

o modelo. Para o levantamento da posi¸c˜ao das juntas do bra¸co no espa¸co, basta clicar na

junta correspondente (“IRB140 joint5”, por exemplo) e veriﬁcar as coordenadas no Texto

de Informa¸c˜ao, como descrito na Figura 3.8. A Tabela 3.1 exibe as informa¸c˜oes das juntas,

utilizando os dados do manual do fabricante e do modelo do CoppeliaSim.

N´umero
da Junta das Juntas (m) de Trabalho

Coordenadas

Alcance

1
2
3
4
5
6

(0 0,069 0)
(0 0,139 0,352)
(0 0,139 0,712)
(0 0,365 0,712)
(0 0,519 0,712)
(0 0,565 0,712)

360◦
200◦
280◦
Ilimitado
230◦
Ilimitado

Escala da
Simula¸c˜ao
−180◦ a +180◦
−100◦ a +100◦
−140◦ a +140◦
−180◦ a +180◦
−115◦ a +115◦ −90◦
−180◦ a +180◦

0◦
0◦
0◦
0◦

0◦

(cid:126)z
(cid:126)x
(cid:126)x
(cid:126)y
(cid:126)x
(cid:126)y

Valor Eixo da
Inicial Rota¸c˜ao

Tabela 3.1: Juntas do bra¸co rob´otico

Por mais que as juntas 4 e 6 possuam movimenta¸c˜ao ilimitada, optou-se por utilizar

a faixa de −180◦ a +180◦, para que n˜ao haja posi¸c˜oes alcan¸c´aveis com ˆangulos diferentes.

A matriz de transforma¸c˜ao homogˆenea T(Ji) =



, com 1 ≤ i ≤ 6,

corresponde `a i-´esima junta do bra¸co rob´otico, sendo a submatriz R(i) a matriz de rota¸c˜ao,





R(i)

03×1

01×3

1

Cap´ıtulo 3. Desenvolvimento

71

em torno do eixo exibido na ´ultima coluna da Tabela 3.1, que descreve a movimenta¸c˜ao

da junta.

A obten¸c˜ao dos vetores que descrevem os elos que est˜ao entre juntas adjacentes,

segundo a nota¸c˜ao de Denavit-Hartenberg, ´e por meio da diferen¸ca das coordenadas

de tais juntas. O primeiro elo ´e descrito pela diferen¸ca entre a junta 1 e o ponto de

origem, e o ´ultimo, entre o ponto (0 0,584 0,712), referente `a conex˜ao do efetuador

(“IRB140 connection” na Hierarquia da cena), e a junta 6. Comparando com vetores

calculados com as dimens˜oes dispon´ıveis no manual do bra¸co rob´otico, conforme descrito

na Figura 3.9, obt´em-se a Tabela 3.2, onde os elos s˜ao apresentados, com os elementos que

os limitam e os vetores de suas transla¸c˜oes correspondentes, com coordenadas em metros.

Figura 3.9: Dimens˜oes do bra¸co rob´otico IRB 140 da ABB em mil´ımetros

Fonte: ABB[24].



A matriz de transforma¸c˜ao homogˆenea T(Ei) =





, com 1 ≤ i ≤ 7,

I3

p(i)

01×3

1

corresponde ao i-´esimo elo do bra¸co rob´otico, sendo o vetor p(i) o descrito na ´ultima coluna

da Tabela 3.2.

Ap´os a descri¸c˜ao das juntas e dos elos, a descri¸c˜ao do efetuador do bra¸co rob´otico,

—We reserve the right to make technical changes or modify the contents of this document without prior notice. With re-gard to purchase orders, the agreed par-ticulars shall prevail. ABB does not accept any responsibility whatsoever for potential errors or possible lack of information in this document.We reserve all rights in this document and in the subject matter and illustrations con-tained therein. Any reproduction, disclo-sure to third parties or utilization of its contents – in whole or in parts – is forbidden without prior written consent of ABB. Copyright© 2019 ABBAll rights reserved—abb.com/roboticsPR10031EN  Rev.D  January 2019Working range—MovementAxis movementWorking rangeVelocity*IRB 140Velocity*IRB 140TAxis 1 rotation+360°200°/s250°/sAxis 2 arm+200°200°/s250°/sAxis 3 arm+280°260°/s260°/sAxis 4 wristUnlimited (Default: 400°)360°/s360°/sAxis 5 bend+230°360°/s360°/sAxis 6  turnUnlimited  (Default: 800°)450°/s450°/s* Max. velocity is reduced at single phase power supply, e.g. Compactcontroller. —Performance (according to ISO 9283)IRB 140IRB 140T5 kg picking side25 x 300 x 25 mm0.85 s0.77 sMax. TCP velocity2.5 m/s2.5 m/sMax. TCP acceleration20 m/s220 m/s2Acceleration time 0-1 m/s0.15 s0.15 sPosition repeatability0.03 mm0.03 mm810656707038010927123521514866708107070352712109238065486810704863521092670Electrical ConnectionsSupply voltage200-600 V, 50/60 HzRated power transformer rating4.5 kVAPower consumption 0.4 kW—Technical informationPhysicalRobot base400 x 450 mmRobot controller950 x 800 x 620 mmRobot manipulator weight 98 kgEnvironmentAmbient temperature for robot manipulatorDuring operation+5° C (41° F) to + 45°C (113°F)Relative humidityMax. 95% OptionsFoundry Plus 2 SteamWash (High pressure steam washable) Clean Room, class 6 (certified by IPA)Noise levelMax. 70 dB (A)SafetyDouble circuits with supervisions, emergency stops and safety func- tions. 3-position enable deviceEmissionEMC/EMI shieldedData and dimensions may be changed without notice.—SpecificationRobot  versionReach of 5th axis(m)Handling capacity (kg)Supplementary load:- on upper   - onarm (kg)      wrist (kg)IRB 140/ IRB 140T0.8610.5IRB 140F/ IRB 140TF0.8610.5IRB 140CR/ IRB 140TCR0.8610.5IRB 140W/ IRB 140TW0.8610.5Number of axes6ProtectionIP67, IRB 140F/IRB 140TF: Foundry Plus 2,  IRB 140CR/IRB 140TCR: Clean Room, IRB 140W/IRB 140TW: SteamWash MountingAny angleControllerIRC5 Compact/IRC5 Single Cabinet/ IRC5 PMC Panel MountedIntegrated  signal supply 12 signals on upper armIntegrated  air supplyMax. 8 bar on upper armCap´ıtulo 3. Desenvolvimento

72

N´umero
do Elo

Elementos que
Limitam

1
2
3
4
5
6
7

Origem e Junta 1
Junta 1 e Junta 2
Junta 2 e Junta 3
Junta 3 e Junta 4
Junta 4 e Junta 5
Junta 5 e Junta 6
Junta 6 e Ponto de Conex˜ao

Vetor
Correspondente (m)
[0 0,069 0,000]T
[0 0,070 0,352]T
[0 0,000 0,360]T
[0 0,226 0,000]T
[0 0,154 0,000]T
[0 0,046 0,000]T
[0 0,019 0,000]T

Tabela 3.2: Elos do bra¸co rob´otico

segundo a nota¸c˜ao de Denavit-Hartenberg para a cadeia aberta, ´e dada por:

T(Ef) = T(E1)T(J1)T(E2)T(J2)T(E3)T(J3)T(E4)T(J4)T(E5)T(J5)T(E6)T(J6)T(E7)

(3.1)

No entanto, para simpliﬁcar a nota¸c˜ao, foi utilizado o resultado apresentado na

Proposi¸c˜ao 2.63. Dessa forma, a matriz de transforma¸c˜ao que descreve o bra¸co rob´otico ´e:

T(Ef) = T(1)T(2)T(3)T(4)T(5)T(6)T(7),

(3.2)

onde, sendo αi o ˆangulo descrito pela i-´esima junta, tem-se que:

T(1) = T(E1)T(J1) =

T(2) = T(E2)T(J2) =

T(3) = T(E3)T(J3) =












1







0


1







0

cos α1 − sen α1 0

0

sen α1

cos α1

0 0,069

0

0

0

0

1

0

0

0

0

1

0

0 cos α2 − sen α2 0,070

0 sen α2

0,352

cos α2

0

0

0

0

0 cos α3 − sen α3

0 sen α3

cos α3

0,360

0

0

1

1

0

0































Cap´ıtulo 3. Desenvolvimento

73

T(4) = T(E4)T(J4) =

T(5) = T(E5)T(J5) =

T(6) = T(E6)T(J6) =












1







0











cos α4

0 sen α4

0

0

1

0

0,226

− sen α4 0 cos α4

0

0

0

0

0

0 cos α5 − sen α5 0,154

0 sen α5

cos α5

0

0

cos α6

0 sen α6

0

1

0

− sen α6 0 cos α6

0

0

0































0

1

0

0

1

0

0

1

0,046

T(7) = T(E7) =











1 0 0

0 1 0 0,019

0 0 1

0 0 0











0

0

1

3.2.6 Montagem do bra¸co rob´otico no Octave

Antes de iniciar a programa¸c˜ao no ambiente do Octave, ´e necess´ario criar uma pasta

espec´ıﬁca no sistema, a qual deve ser selecionada no Navegador de Arquivos para que

todos os arquivos criados sejam salvos nela. No Editor, selecionar Arquivo/Novo Script,

para que seja aberto um editor de texto, onde o c´odigo ´e inserido. Selecionar, ent˜ao, o

cursor do mouse na primeira linha do editor, para in´ıcio da escrita.

A sintaxe do Octave ´e simples e n˜ao requer que se insira um “;” ao ﬁnal de cada

linha. No entanto, a n˜ao inser¸c˜ao acarreta em exibi¸c˜ao de cada linha compilada na Janela

de Comandos, o que pode gerar excesso de informa¸c˜ao.

Ao se inserir o caractere “#”, o texto escrito ap´os este ´e considerado coment´ario e,

portanto, n˜ao ´e compilado. Para o in´ıcio da escrita, ´e comumente utilizado os seguintes

comandos, com o seu signiﬁcado escrito no coment´ario da linha:

clear all; #Apaga as variáveis do Ambiente de Trabalho

close all; #Fecha todas as figuras abertas

Cap´ıtulo 3. Desenvolvimento

74

clc; #Limpa a Janela de Comandos

Em seguida, s˜ao declaradas as vari´aveis correspondentes aos ˆangulos das juntas, e

atribu´ıdo o valor 0◦. Dessa forma, tem-se que:

j1=0; #Ângulo da junta 1

j2=0; #Ângulo da junta 2

j3=0; #Ângulo da junta 3

j4=0; #Ângulo da junta 4

j5=0; #Ângulo da junta 5

j6=0; #Ângulo da junta 6

Logo ap´os, para declarar a primeira matriz de transforma¸c˜ao homogˆenea, usa-se o

seguinte c´odigo:

T(:,:,1)=[cosd(j1),-sind(j1),0,0;

sind(j1),cosd(j1),0,70;

0,0,1,0;

0,0,0,1];

No c´odigo, a vari´avel T possui trˆes dimens˜oes num´ericas, sendo a primeira referente

`as linhas da matriz, a segunda referente `as colunas, e a terceira, um n´umero sequencial,

que vai de 1 a 7. A escrita T(:,:,1) signiﬁca que s˜ao atribu´ıdos valores para as linhas e

colunas da matriz n´umero 1.

Os valores da matriz s˜ao delimitados por colchetes, e s˜ao declarados linha a linha,

sendo as linhas separadas por “;” e os valores separados por “,”. As fun¸c˜oes sind(j1) e

cosd(j1) representam as fun¸c˜oes seno e cosseno da vari´avel j1, respectivamente, com

argumentos em graus.

A declara¸c˜ao das demais matrizes de transforma¸c˜ao homogˆeneas foram omitidas,

de forma a dar sequˆencia.

A matriz de transforma¸c˜ao homogˆenea do efetuador, que ´e o produto de todas as

matrizes dos elos e juntas, ´e obtida por meio de um la¸co, isto ´e, de uma estrutura em que

o mesmo c´odigo ´e executado repetidamente. Dessa forma, tem-se que:

Tef=eye(4);

for ind=1:7

Cap´ıtulo 3. Desenvolvimento

75

Tef=Tef*T(:,:,ind);

pef(:,ind)=Tef(1:3,4);

end;

A linha Tef=eye(4); atribui `a matriz Tef um valor inicial, que ´e a matriz

identidade de ordem 4.

O la¸co descrito em seguida descreve que, para a vari´avel de ´ındice ind variando de

1 a 7, s˜ao executadas as duas linhas de comando a seguir at´e o ﬁnal do la¸co descrito pelo

comando end;, totalizando 7 itera¸c˜oes.

O comando Tef=Tef*T(:,:,ind); atribui `a vari´avel Tef o valor da itera¸c˜ao

anterior (ou a matriz identidade, caso seja a primeira itera¸c˜ao) multiplicado pela “ind-

´esima” matriz T, que foi declarada anteriormente.

A linha de comando pef(:,ind)=Tef(1:3,4); atribui os valores das posi¸c˜oes

de cada junta `a vari´avel pef. Esse valor ´e obtido do vetor que signiﬁca a transla¸c˜ao da

matriz de transforma¸c˜ao homogˆenea ap´os cada multiplica¸c˜ao que ocorre no la¸co.

Ao ﬁnal desse c´odigo, a matriz Tef deve possuir dimens˜oes 4 × 4, sendo a matriz de

transforma¸c˜ao homogˆenea referente ao efetuador do bra¸co rob´otico. A vari´avel pef, por

sua vez, deve possuir dimens˜oes 3 × 7, sendo que os 6 primeiros vetores coluna representam

as coordenadas das juntas, em ordem, e o ´ultimo vetor coluna representa as coordenadas

do efetuador.

Para testar o c´odigo escrito at´e ent˜ao, basta clicar, no Editor, em Executar/Salvar
Arquivo e Execut´a-lo. ´E aberta, ent˜ao, uma janela para salvar o arquivo, caso essa seja

a primeira vez que este comando ´e executado. Ap´os salvar, o c´odigo ´e compilado e as

vari´aveis declaradas aparecem no Ambiente de Trabalho.

Ao digitar o nome da vari´avel Tef na Janela de Comandos e teclar Enter, ´e exibido

o seguinte resultado:

Tef=

1.00000 0.00000 0.00000 0.00000

0.00000 1.00000 0.00000 0.58400

0.00000 0.00000 1.00000 0.71200

0.00000 0.00000 0.00000 1.00000

Cap´ıtulo 3. Desenvolvimento

76

A tabela de dados exibida ´e a matriz de transforma¸c˜ao homogˆenea do efetuador.

Pode-se observar que a submatriz de rota¸c˜ao, pertencente a SO (3), ´e a matriz identidade,

logo a orienta¸c˜ao do efetuador ´e a mesma da referˆencia. O vetor coluna que representa a

transla¸c˜ao exibe as coordenadas do efetuador e ´e o mesmo que foi visto no CoppeliaSim

durante a montagem e elabora¸c˜ao da Tabela 3.2.

O c´odigo completo do Octave, n˜ao somente para simular as matrizes referentes ao

bra¸co rob´otico, mas tamb´em plotar gr´aﬁcos em trˆes dimens˜oes que representam os elos e

os vetores ortonormais da referˆencia da base do bra¸co e do efetuador, est´a dispon´ıvel no

Anexo A.1, com os devidos coment´arios. Ap´os a execu¸c˜ao do c´odigo, com os ˆangulos das

juntas com o valor de 0◦, obt´em-se a Figura 3.10.

Figura 3.10: Posi¸c˜ao inicial do bra¸co rob´otico simulado no Octave

Fonte: Elaborado pelo autor.

Para veriﬁcar se o bra¸co rob´otico simulado no Octave ´e uma boa representa¸c˜ao do

bra¸co rob´otico IRB 140 da marca ABB, ´e realizada uma compara¸c˜ao com o bra¸co deste

modelo no CoppeliaSim, utilizando as mesmas posi¸c˜oes das juntas em ambos os ambientes.

Para alterar a posi¸c˜ao do bra¸co rob´otico no Octave, basta alterar os valores atribu´ıdos

para o ˆangulo das juntas, e executar o c´odigo novamente. Um bot˜ao da barra de ferramentas

do Editor que tamb´em funciona como Salvar Arquivo e Execut´a-lo ´e o bot˜ao

Cap´ıtulo 3. Desenvolvimento

77

homˆonimo.

Para o in´ıcio da compara¸c˜ao, foram escolhidos, de forma aleat´oria, ˆangulos para

as juntas do bra¸co rob´otico. A Tabela 3.3 apresenta os ˆangulos utilizados nos testes e a

matriz de transforma¸c˜ao homogˆenea do efetuador ao ﬁnal de cada teste.

N´umero
do Teste

1

2

3

ˆAngulos
das Juntas
j1=90; j2=45;
j3=-30; j4=-90;
j5=-45; j6=180;

j1=180; j2=0;
j3=90; j4=-45;
j5=115; j6=45;

j1=0; j2=-90;
j3=135; j4=90;
j5=45; j6=-45;

Matriz de Transforma¸c˜ao
Homogˆenea do Efetuador
-0.25882 -0.68301 0.68301 -0.22689
0.00000 0.70711 0.70711 0.11496
-0.96593 0.18301 -0.18301 0.71681
0.00000 0.00000 0.00000 1.00000
-0.28869 0.64086 -0.71131 0.04166
0.71131 0.64086 0.28869 0.04066
0.64086 -0.42262 -0.64086 1.06453
0.00000 0.00000 0.00000 1.00000
0.50000 0.70711 0.50000 0.04596
0.14645 0.50000 -0.85355 0.80020
-0.85355 0.50000 0.14645 0.65320
0.00000 0.00000 0.00000 1.00000

Tabela 3.3: Resultado dos testes no Octave

Com o bra¸co rob´otico do CoppeliaSim j´a previamente parametrizado pelas etapas

descritas no Anexo B, basta iniciar a simula¸c˜ao em “Simulation/Start simulation” para

possibilitar a anima¸c˜ao. Ao iniciar, o bra¸co est´a com todas as juntas com o ˆangulo 0◦ e ´e

aberta uma janela contendo a matriz de transforma¸c˜ao homogˆenea do efetuador.

Para alterar o valor das juntas durante a anima¸c˜ao, basta inserir o comando abaixo

no Editor de comandos Lua e teclar Enter :

sim.setJointTargetPosition(sim.getObjectHandle(‘IRB140 joint1’),90*math.pi/180)

No comando do exemplo acima ´e alterado o valor da junta 1 para 90◦, que ´e

convertido para radianos.

Ap´os a altera¸c˜ao de cada junta, foi comparado tanto o posicionamento e a ori-

enta¸c˜ao das representa¸c˜ao gerada pelo Octave e pelo CoppeliaSim, quanto as matrizes

de transforma¸c˜ao homogˆenea. As Figuras 3.11, 3.12 e 3.13 exibem as orienta¸c˜oes e as

matrizes do CoppeliaSim referentes aos testes 1, 2 e 3, respectivamente. As matrizes do

CoppeliaSim podem ser comparadas com as matrizes exibidas na Tabela 3.3.

Cap´ıtulo 3. Desenvolvimento

78

Figura 3.11: Compara¸c˜ao das simula¸c˜oes no Octave e no CoppeliaSim -
Teste 1

(a) Teste 1 no Octave

(b) Teste 1 no CoppeliaSim

Fonte: Elaborado pelo autor.

Cap´ıtulo 3. Desenvolvimento

79

Figura 3.12: Compara¸c˜ao das simula¸c˜oes no Octave e no CoppeliaSim -
Teste 2

(a) Teste 2 no Octave

(b) Teste 2 no CoppeliaSim

Fonte: Elaborado pelo autor.

Cap´ıtulo 3. Desenvolvimento

80

Figura 3.13: Compara¸c˜ao das simula¸c˜oes no Octave e no CoppeliaSim -
Teste 3

(a) Teste 3 no Octave

(b) Teste 3 no CoppeliaSim

Fonte: Elaborado pelo autor.

Cap´ıtulo 3. Desenvolvimento

81

3.2.7 Simula¸c˜ao por interface gr´aﬁca de usu´ario

De modo a facilitar a altera¸c˜ao dos ˆangulos das juntas tanto no Octave quanto no

CoppeliaSim, foi desenvolvida uma interface gr´aﬁca de usu´ario no Octave que comunica

com o CoppeliaSim, enviando comando de altera¸c˜ao dos ˆangulos do bra¸co rob´otico. A

cria¸c˜ao das interfaces ´e descrita no Anexo C.

A Figura 3.14 exibe a interface gr´aﬁca de usu´ario em seu estado inicial, onde ´e

poss´ıvel observar a representa¸c˜ao do bra¸co rob´otico, similar ao apresentado na Figura 3.10,

e os controles das juntas com o valor inicial, isto ´e, 0◦. Na posi¸c˜ao inferior ´e exibida a

matriz de transforma¸c˜ao homogˆenea do efetuador do bra¸co rob´otico.

Figura 3.14: Interface gr´aﬁca de usu´ario para controle do bra¸co rob´otico
no Octave e no CoppeliaSim

Fonte: Elaborado pelo autor.

Na parte superior direita est˜ao localizados bot˜oes de op¸c˜ao, onde ´e poss´ıvel escolher

se o controle do bra¸co rob´otico ser´a em duas ou trˆes dimens˜oes. A op¸c˜ao inicial ´e “3D”,

que habilita o controle de todas as juntas. A op¸c˜ao “2D” ser´a abordada mais adiante.

O in´ıcio do c´odigo da interface gr´aﬁca apresenta a seguinte linha de comando:

h.online=true; #true=conectado; false=desconectado

Cap´ıtulo 3. Desenvolvimento

82

Esta linha de c´odigo habilita a conex˜ao ao CoppeliaSim se for atribu´ıdo o valor

true, que ´e o valor l´ogico verdadeiro, `a vari´avel h.online. Caso se queira executar o

c´odigo de forma oﬄine, basta atribuir o valor false `a vari´avel. Para o desenvolvimento

deste trabalho, optou-se, inicialmente, pelo teste oﬄine.

Na interface gr´aﬁca, a altera¸c˜ao das juntas pode se dar tanto por meio da rolagem

das barras horizontais, quanto pela caixa de texto posicionada `a direita dessa barra. Os

valores limites de cada junta, em graus, est˜ao escritos entre parˆenteses e s˜ao os mesmos

descritos na Tabela 3.1. Ao se alterar a posi¸c˜ao da barra de rolagem, ´e alterado o valor na

caixa de texto correspondente, e vice-versa. Em seguida ´e atualizada a representa¸c˜ao e a

matriz de transforma¸c˜ao homogˆenea do efetuador exibida. Por exemplo, na Figura 3.15, ´e

exibido um teste da interface com ˆangulos aleat´orios.

Figura 3.15: Interface gr´aﬁca em 3D com ˆangulos aleat´orios

Fonte: Elaborado pelo autor.

O bot˜ao “2D” altera a op¸c˜ao para duas dimens˜oes, desabilitando o controle das

juntas 1, 3 e 6 e mudando a forma de apresenta¸c˜ao do bra¸co rob´otico, de forma a interpret´a-

lo como um bra¸co planar. As juntas 2, 4 e 5, que continuaram alter´aveis, s˜ao as que

possuem rota¸c˜ao em torno do eixo (cid:126)x, conforme descrito na Tabela 3.1. Esse foi o motivo de

Cap´ıtulo 3. Desenvolvimento

83

alinhar o bra¸co rob´otico ao eixo (cid:126)y, pois, caso estivesse alinhado ao eixo (cid:126)x como ´e o padr˜ao

do modelo, as rota¸c˜oes positivas n˜ao seriam em torno deste eixo, mas sim em torno de −(cid:126)y,

o que diﬁcultaria a visualiza¸c˜ao em duas dimens˜oes com o padr˜ao de rota¸c˜ao estabelecido.

Escolhendo valores aleat´orios para os ˆangulos, com o controle em duas dimens˜oes, obt´em-se

a conﬁgura¸c˜ao descrita pela Figura 3.16.

Figura 3.16: Interface gr´aﬁca em 2D com ˆangulos aleat´orios

Fonte: Elaborado pelo autor.

A matriz de transforma¸c˜ao homogˆenea do efetuador obtida na Figura 3.16 ´e a

seguinte:

T=

1.0000 0.0000 0.0000 0.0000

0.0000 0.7660 0.6430 0.7450

0.0000 -0.6430 0.7660 0.7810

0.0000 0.0000 0.0000 1.0000

´E poss´ıvel observar que, como as juntas rotacionam em torno do eixo (cid:126)x, o primeiro
vetor coluna da matriz ´e sempre [1 0 0 0]T , bem com o primeiro vetor linha ´e [1 0 0 0],

Cap´ıtulo 3. Desenvolvimento

84

independente dos ˆangulos escolhidos. Assim sendo, ´e f´acil assimilar as simula¸c˜oes como

sendo em duas dimens˜oes, com as matrizes pertencentes a SE (2), como no exemplo a

seguir:

T=

0.7660 0.6430 0.7450

-0.6430 0.7660 0.7810

0.0000 0.0000 1.0000

Para executar a interface gr´aﬁca no modo online, isto ´e, enviando comandos

ao CoppeliaSim, ´e necess´ario iniciar a simula¸c˜ao no CoppeliaSim em “Simulation/Start

simulation”. Logo em seguida, executar o c´odigo do Octave referente `a interface gr´aﬁca,

ap´os atribuir o valor true `a vari´avel h.online.

No teste inicial, ´e marcado o controle em “3D” na interface gr´aﬁca atribuindo, por

exemplo, 45◦ a todas as juntas, o que resulta na Figura 3.17. No segundo teste, com o

controle em “2D”, foram atribu´ıdos os valores, aleatoriamente, de −30◦, 30◦ e −90◦ `as

juntas 2, 4 e 5, respectivamente, conforme ilustrado na Figura 3.18.

Comparando as matrizes de transforma¸c˜ao obtidas nos dois testes, tanto do Octave

quanto do CoppeliaSim, e, tamb´em, as demais matrizes obtidas em testes n˜ao registrados,

foi poss´ıvel veriﬁcar que o erro ´e muito baixo, na ordem de mil´esimos. As diferen¸cas

obtidas podem ser atribu´ıdas ao fato do levantamento das coordenadas das juntas ter sido

feito com apenas trˆes casas decimais. Outro motivo pode ser os eixos de rota¸c˜ao das juntas

do modelo do CoppeliaSim n˜ao serem paralelas aos do sistema de coordenadas e tamb´em

pelo fato de a simula¸c˜ao alterar os valores com o passar do tempo, mesmo n˜ao havendo

altera¸c˜oes nas juntas e na base. Al´em disso, um fator que deve ser levado em considera¸c˜ao

´e o fato de, no c´alculo de ra´ızes, senos e cossenos, o Octave trabalhar com n´umero ﬁnito

de casas decimais.

Cap´ıtulo 3. Desenvolvimento

85

Figura 3.17: Teste online com interfaces, em trˆes dimens˜oes

(a) Teste online com interfaces em trˆes dimens˜oes no Octave

(b) Teste online com interfaces em trˆes dimens˜oes no CoppeliaSim

Fonte: Elaborado pelo autor.

Cap´ıtulo 3. Desenvolvimento

86

Figura 3.18: Teste online com interfaces, em duas dimens˜oes

(a) Teste online com interfaces em duas dimens˜oes no Octave

(b) Teste online com interfaces em duas dimens˜oes no CoppeliaSim

Fonte: Elaborado pelo autor.

4 Atividades para sala de aula

Neste cap´ıtulo ´e apresentado o produto ﬁnal dessa disserta¸c˜ao. Trata-se de algumas

atividades poss´ıveis de serem aplicadas em sala de aula, utilizando o conte´udo exposto at´e

ent˜ao. Sua elabora¸c˜ao foi baseada nas exigˆencias da Base Nacional Curricular Comum[10].

A lista n˜ao faz parte de uma sequˆencia de did´atica, logo cada atividade pode ser

aplicada individualmente, independente da ordem, conforme a inten¸c˜ao do professor. No

entanto, como o grau de diﬁculdade e de aprofundamento no assunto ´e progressivo, o

professor pode apresentar os exerc´ıcios de forma sequencial, o que contribui, inclusive,

para o aumento do interesse do aluno no assunto.

As habilidades da BNCC[10, p. 543] utilizadas na elabora¸c˜ao da lista de atividade

s˜ao as seguintes:

EM13MAT301 Resolver e elaborar problemas do cotidiano, da Matem´atica e de outras

´areas do conhecimento, que envolvem equa¸c˜oes lineares simultˆaneas, usando t´ecnicas

alg´ebricas e gr´aﬁcas, com ou sem apoio de tecnologias digitais.

EM13MAT405 Utilizar conceitos iniciais de uma linguagem de programa¸c˜ao na imple-

menta¸c˜ao de algoritmos escritos em linguagem corrente e/ou matem´atica.

EM13MAT105 Utilizar as no¸c˜oes de transforma¸c˜oes isom´etricas (transla¸c˜ao, reﬂex˜ao,

rota¸c˜ao e composi¸c˜oes destas) e transforma¸c˜oes homot´eticas para construir ﬁguras e

analisar elementos da natureza e diferentes produ¸c˜oes humanas (fractais, constru¸c˜oes

civis, obras de arte, entre outras).

EM13MAT308 Aplicar as rela¸c˜oes m´etricas, incluindo as leis do seno e do cosseno ou

as no¸c˜oes de congruˆencia e semelhan¸ca, para resolver e elaborar problemas que

envolvem triˆangulos, em variados contextos.

87

Cap´ıtulo 4. Atividades para sala de aula

88

4.1 Atividade 1: Elipse transladada e rotacionada

Ano(s): 1◦ ao 3◦ anos do Ensino M´edio

Habilidade(s) da BNCC: EM13MAT105 e EM13MAT308

Recursos: Quadro-negro e impress˜ao da atividade (opcional)

Objetivo: Utilizar grupos matriciais para localizar vetores no plano

Descri¸c˜ao:

Quando ´e feito o estudo de cˆonicas em Geometria, como elipse e c´ırculo, ´e comum

se deparar com estas ﬁguras transladadas em rela¸c˜ao `a origem ou rotacionadas em torno

do seu centro. Por exemplo, a elipse constru´ıda pela Figura 4.1a e descrita pela equa¸c˜ao

244x2 − 384xy − 2368x + 356y2 + 224y + 5899 = 0

´e a elipse descrita pela Figura 4.1b e pela equa¸c˜ao

4x2 + 20y2 = 125

ap´os uma transla¸c˜ao por um vetor (cid:126)v = (8, 4) e uma rota¸c˜ao em torno de seu centro por

um ˆangulo α = 36,87◦.

A atividade consiste em identiﬁcar as coordenadas dos pontos da lista abaixo,

referentes `a elipse da Figura 4.1b, na elipse transladada e rotacionada:

1. A = (0 , 2,5) - V´ertice

2. B = (3,35 , − 2)

3. C = (0 , 0) - Centro

4. F1 = (−5 , 0) - Foco 1

5. F2 = (−5 , 0) - Foco 2

As coordenadas do ponto C s˜ao obtidas por meio da soma das coordenadas (0 , 0)

do ponto com as coordenadas (8, 4) do vetor. Espera-se que os alunos usem as fun¸c˜oes

seno e cosseno do ˆangulo para identiﬁcar as coordenadas dos pontos restantes. Ap´os fazer

alguns exerc´ıcios, ser´a poss´ıvel identiﬁcar uma repeti¸c˜ao na forma em que as multiplica¸c˜oes

s˜ao feitas.

Cap´ıtulo 4. Atividades para sala de aula

89

O objetivo ´e demonstrar que a transforma¸c˜oes geom´etricas de transla¸c˜ao e rota¸c˜ao

podem ser representadas por uma matriz de transforma¸c˜ao homogˆenea pertencente a

SE (2).

A transla¸c˜ao ´e dada pelo vetor p =



8
, pertencente a V 2. A rota¸c˜ao, por sua vez,

4

pode ser descrita pela matriz de rota¸c˜ao R =





cos α − sen α

sen α

cos α



, pertencente a SO (2).

Sendo assim, a matriz pertencente a SE (2) que descreve a transforma¸c˜ao geom´etrica

´e:



cos 36,87◦ − sen 36,87◦ 8

0,8 −0,6 8

T =

sen 36,87◦

cos 36,87◦

=

0,6





4


1








0



4





1

0,8

0

0

0






Para encontrar a coordenada dos pontos ap´os a transforma¸c˜ao, basta considerar os

pontos como vetores com centro na origem, escrevˆe-los como vetores coluna adicionando o

valor 1, e multiplicar `a esquerda por T. Resolvendo a primeira quest˜ao ´e poss´ıvel obter:

a(cid:48) = Ta =








0,8 −0,6 8

0,6

0

0,8

0










4





1

0

1








2,5

=








6,5

6

1








Dessa forma, sabe-se que as coordenadas do ponto A ap´os a transforma¸c˜ao geom´e-

trica s˜ao (6,5 , 6).

Cap´ıtulo 4. Atividades para sala de aula

90

Figura 4.1: Isometria aplicada a elipse

(a) Elipse transladada e rotacionada

(b) Elipse centrada na origem e com eixos paralelos aos do sistema cartesiano

Fonte: Elaborado pelo autor.

Cap´ıtulo 4. Atividades para sala de aula

91

4.2 Atividade 2: Cinem´atica direta no plano

Ano(s): 1◦ ao 3◦ anos do Ensino M´edio

Habilidade(s) da BNCC: EM13MAT301, EM13MAT105 e EM13MAT308

Recursos: Quadro-negro e impress˜ao da atividade (opcional)

Objetivo: Descrever pontos e vetores no plano por meio de grupos matriciais

Descri¸c˜ao:

A Figura 4.2 exibe os pontos A, B, C e D no plano cartesiano. A atividade proposta

envolve a descri¸c˜ao da localiza¸c˜ao do ponto D e o ˆangulo entre o vetor (cid:126)xf e o eixo (cid:126)x

do sistema de referˆencia. O ponto A est´a localizado na origem e os comprimentos dos

segmentos de reta e os ˆangulos relevantes para o levantamento est˜ao descritos na ﬁgura.

Figura 4.2: Descrevendo as coordenadas do ponto D e o ˆangulo entre o
vetor (cid:126)xf e o eixo (cid:126)x

Fonte: Elaborado pelo autor.

Espera-se que os alunos utilizem propriedades geom´etricas, como Teorema de

Pit´agoras, Teorema de Tales, seno e cosseno, al´em de ˆangulos congruentes, complementares

e suplementares, para resolver este problema.

Por meio de Geometria Alg´ebrica ´e poss´ıvel escrever as coordenadas (xD, yD) do

Cap´ıtulo 4. Atividades para sala de aula

92

ponto D em fun¸c˜ao dos ˆangulos, obtendo, ent˜ao:

xD = 8 cos α1 + 4 cos (α1 + α2) + 2 cos (α1 + α2 + α3)

yD = 8 sen α1 + 4 sen (α1 + α2) + 2 sen (α1 + α2 + α3)

O ˆangulo β, que ´e entre o vetor (cid:126)xf e o eixo (cid:126)x, pode ser descrito por:

β = α1 + α2 + α3

No entanto, pode-se interpretar a Figura 4.2 como um bra¸co rob´otico, descrevendo-o

por meio de matrizes pertencentes a SE (2). Os pontos A, B e C descrevem as posi¸c˜oes das

juntas, sendo o ponto A tamb´em a base do bra¸co, os segmentos AB, BC e CD descrevem

os elos e o ponto D representa o efetuador, o qual ter´a sua posi¸c˜ao e orienta¸c˜ao a serem

descobertos por meio da cinem´atica direta. Dessa forma, a matriz T que descreve o sistema

´e a seguinte:








T =

cos α1 − sen α1 0

cos α2 − sen α2 8

cos α3 − sen α3 4

1 0 2

sen α1

cos α1

0

0

sen α2

cos α2

sen α3

cos α3

0

0

0

0












0


1

0 1 0

0 0 1



















0


1












0


1

O resultado deste produto ´e a matriz de transforma¸c˜ao homogˆenea que descreve o

efetuador do bra¸co rob´otico, e ´e da forma:

(4.1)








cos β − sen β xD

T =

sen β

cos β

0

0

yD

1








(4.2)

Cap´ıtulo 4. Atividades para sala de aula

93

4.3 Atividade 3: Simula¸c˜ao computacional de bra¸co

rob´otico em duas dimens˜oes

Ano(s): 1◦ ao 3◦ anos do Ensino M´edio

Habilidade(s) da BNCC: EM13MAT301, EM13MAT405, EM13MAT105 e

EM13MAT308

Recursos: Quadro-negro, impress˜ao da atividade (opcional) e computador com o

software Octave instalado

Objetivo: Fazer uso de recursos computacionais para simular bra¸co rob´otico,

utilizando grupos matriciais

Descri¸c˜ao:

Essa atividade consiste em simular o bra¸co rob´otico descrito na atividade anterior

no ambiente de programa¸c˜ao do Octave. Para isso, utiliza-se o Editor do software, onde ´e

inserido o c´odigo.

Inicialmente, faz-se necess´ario declarar as vari´aveis das juntas, que s˜ao ˆangulos em

graus. O valor atribu´ıdo inicialmente ´e:

j1=0; j2=0; j3=0;

Em seguida s˜ao declaradas as quatro matrizes, conforme Equa¸c˜ao 4.1. A primeira

matriz, por exemplo, ´e da seguinte forma:

##Matriz 1

T(:,:,1)=[cosd(j1),-sind(j1),0;

sind(j1),cosd(j1),0;

0,0,1];

Para multiplicar as matrizes, a ﬁm de obter o resultado com a matriz de transfor-

ma¸c˜ao homogˆenea do efetuador, ´e utilizado o c´odigo a seguir, que realiza um la¸co como o

do exemplo da Se¸c˜ao 3.2.6.

T0=eye(3);

Tef=T0;

for ind=1:4

Tef=Tef*T(:,:,ind);

Cap´ıtulo 4. Atividades para sala de aula

94

pef(:,ind)=Tef(1:3,4);

end;

O c´odigo completo da simula¸c˜ao, que possibilita n˜ao somente a declara¸c˜ao das

vari´aveis, mas tamb´em a plotagem da representa¸c˜ao do bra¸co rob´otico, est´a dispon´ıvel no

Anexo A.2.

Ao executar o c´odigo completo, atribuindo o valor de 0◦ para as juntas, obt´em-se o

resultado exibido na Figura 4.3.

Figura 4.3: Bra¸co rob´otico no plano com juntas em estado inicial

Fonte: Elaborado pelo autor.

A matriz de transforma¸c˜ao homogˆenea exibida nessa simula¸c˜ao ´e facilmente enten-

dida, pois a submatriz de rota¸c˜ao ´e I2, o que demonstra a mesma orienta¸c˜ao da base, e o

vetor coluna de transla¸c˜ao possui coordenadas (14, 0), que ´e a soma dos elos em dire¸c˜ao

ao eixo (cid:126)x, totalizando 8 + 4 + 2 = 14. A matriz ´e a seguinte:

Tef =

1 0 14

0 1 0

0 0 1

Em seguida, atribui-se os valores do exemplo da atividade anterior `as juntas 1, 2 e

Cap´ıtulo 4. Atividades para sala de aula

95

3, isto ´e, 60, −30 e −90, respectivamente. Ao se executar o c´odigo, ´e exibida a Figura 4.4,

semelhante `a Figura 4.2, e a matriz de transforma¸c˜ao homogˆenea ´e a seguinte:

Tef =

0.50000 0.86603 8.46410

-0.86603 0.50000 7.19615

0.00000 0.00000 1.00000

Figura 4.4: Bra¸co rob´otico no plano com juntas alteradas

Fonte: Elaborado pelo autor.

Ao comparar o resultado com a matriz descrita na Equa¸c˜ao 4.2, tem-se que as

coordenadas do ponto D s˜ao (8,4641 7,19615) e o ˆangulo β, que ´e o entre o vetor (cid:126)xf e o

eixo (cid:126)x, ´e dado por:




cos β = 0,5



sen β = −0,866

⇒ β = −60◦

Cap´ıtulo 4. Atividades para sala de aula

96

4.4 Atividade 4: Utiliza¸c˜ao de interface gr´aﬁca do

Octave

Ano(s): 1◦ ao 3◦ anos do Ensino M´edio

Habilidade(s) da BNCC: EM13MAT301, EM13MAT405, EM13MAT105 e

EM13MAT308

Recursos: Quadro-negro, impress˜ao da atividade (opcional) e computador com

os softwares Octave e CoppeliaSim (opcional) instalados, e, de preferˆencia, com todos os

arquivos de simula¸c˜ao dispon´ıveis

Objetivo: Utilizar interface gr´aﬁca do software Octave para assimilar os conceitos

de grupos e interpretar bra¸cos rob´oticos simulados

Descri¸c˜ao:

Esta atividade consiste em utilizar a interface apresentada na Se¸c˜ao 3.2.7.

Devido `a alta complexidade, sugere-se que a aula seja preparada com certa antece-

dˆencia, para que o professor tenha desenvoltura suﬁciente nos softwares e seja capaz de

responder a eventuais questionamentos dos alunos.

O CoppeliaSim, nessa atividade, ´e utilizado apenas como representa¸c˜ao do bra¸co

rob´otico e pode ser dispensado, caso o professor opte por isso. A desvantagem de n˜ao

utiliz´a-lo est´a no fato de que a interpreta¸c˜ao do gr´aﬁco da interface como bra¸co rob´otico

exigir´a uma abstra¸c˜ao maior dos alunos. Caso n˜ao seja usado, ´e necess´ario alterar o in´ıcio

do c´odigo “create gui” da interface gr´aﬁca, de forma a deixar seguinte linha de comando:

h.online=false; #true=conectado; false=desconectado

Em sala de aula, o professor deve apresentar inicialmente as partes principais do
bra¸co rob´otico estudado, ressaltando o movimento de cada uma de suas seis juntas. ´E

imprescind´ıvel que os alunos entendam o signiﬁcado de base, juntas, elos e efetuador para

continuar a atividade.

Ao executar o c´odigo da interface gr´aﬁca de usu´ario, conforme explicado nos passos

do Anexo C, uma janela da interface ´e aberta, como pode ser observado na Figura 3.14.

Nessa janela, os alunos tˆem a op¸c˜ao de alterar o valor do ˆangulo das juntas, de forma a

aumentar sua percep¸c˜ao de que o gr´aﬁco representa o bra¸co rob´otico.

A matriz de transforma¸c˜ao homogˆenea apresentada na interface, bem como no

Cap´ıtulo 4. Atividades para sala de aula

97

CoppeliaSim, ´e da forma:

T =











r11 r12 r13 x

r21 r22 r23 y

r31 r23 r33 z

0

0

0

1











O aluno deve conseguir localizar a submatriz de rota¸c˜ao e a submatriz (vetor coluna)

de transla¸c˜ao. As coordenadas (x, y, z) do vetor de transla¸c˜ao representam as coordenadas

do efetuador do bra¸co rob´otico.

Com o controle em “2D” selecionado, o aluno deve alterar os valores das juntas e

observar sua mudan¸ca no gr´aﬁco. Ap´os entender o signiﬁcado dos elementos do gr´aﬁco,

este deve responder as seguintes perguntas:

1. Qual ´e o valor dos ˆangulos das juntas para que o bra¸co rob´otico atinja a posi¸c˜ao

mais alta verticalmente? E a posi¸c˜ao mais esticada horizontalmente?

2. Qual ´e a condi¸c˜ao dos valores dos ˆangulos das juntas para que o eixo (cid:126)y (verde) do

efetuador esteja alinhado com eixo (cid:126)y da base? E qual a condi¸c˜ao para que o eixo (cid:126)y

do efetuador esteja alinhado com eixo −(cid:126)z (oposto ao azul) da base?

3. Se a coordenada z ´e negativa, o que isso representa no bra¸co rob´otico?

4. O que o valor nulo da coordenada x representa? O que o valor r11 = 1 representa?

5. Caso esteja usando o CoppeliaSim, explicar por que existem posi¸c˜oes de juntas que

n˜ao s˜ao alcan¸c´aveis pelo bra¸co rob´otico do simulador.

A resposta da primeira pergunta deve levar em considera¸c˜ao que a posi¸c˜ao mais

alta na vertical ´e obtida quando a coordenada z do vetor de transla¸c˜ao est´a com seu valor

m´aximo, e na horizontal quando a coordenada y est´a com valor absoluto m´aximo.

O valor nulo de x representa que o bra¸co est´a situado no plano OY Z. O valor

r11 = 1 representa que o vetor (cid:126)x do efetuador, mesmo omitido, est´a alinhado com o vetor

(cid:126)x da base.

A ´ultima pergunta exp˜oe o problema das restri¸c˜oes. ´E necess´ario explicar que o

bra¸co rob´otico possui um ambiente de trabalho e existem posi¸c˜oes que n˜ao s˜ao alcan¸cadas

pelo efetuador.

Cap´ıtulo 4. Atividades para sala de aula

98

Alterando o controle para “3D”, ´e poss´ıvel veriﬁcar que as juntas 1, 4 e 6 s˜ao

habilitadas, e o ˆangulo de vista do bra¸co rob´otico ´e alterado. Antes de alterar quaisquer

ˆangulos, deve-se responder as seguintes quest˜oes:

6. ´E poss´ıvel interpretar o bra¸co rob´otico em um plano ao se alterar apenas o valor dos

ˆangulos das juntas 2, 3 e 5, deixando as demais com o valor zero?

7. Qual ´e o valor dos ˆangulos das juntas para que o bra¸co rob´otico atinja a posi¸c˜ao

mais alta verticalmente? O valor de quais juntas n˜ao alteram o resultado?

8. Qual ´e o valor das juntas para que o bra¸co rob´otico ﬁque mais esticado horizontal-

mente, paralelo ao plano da base? Quais juntas n˜ao alteram o resultado?

9. Caso esteja usando o CoppeliaSim, quais as juntas n˜ao possuem limite de atua¸c˜ao

(rotacionam livremente)?

A pergunta n´umero 7 ´e respondida de forma similar `a primeira parte da pergunta

2. No entanto, a pergunta 8 possui uma outra interpreta¸c˜ao uma vez que a junta 1,

que rotaciona o bra¸co em torno da base, n˜ao altera o quanto o bra¸co est´a esticado
horizontalmente. Dessa forma, a condi¸c˜ao ´e satisfeita quando (cid:112)x2 + y2 est´a com valor

m´aximo.

Ao responder a ´ultima quest˜ao, deve-se fazer um paralelo com o bra¸co humano, que

possui restri¸c˜oes nas “juntas”.

5 Considera¸c˜oes ﬁnais

A principal motiva¸c˜ao ao elaborar essa disserta¸c˜ao foi abordar conceitos matem´aticos

em sua forma aplicada, produzindo um trabalho que enriquecesse o processo de ensino-

aprendizagem de Matem´atica e apresentasse indica¸c˜oes de pr´aticas pedag´ogicas em um

assunto interessante e relevante. O estudo da cinem´atica direta dos bra¸cos rob´oticos

se mostrou uma boa op¸c˜ao de aplica¸c˜ao. Para tal, foi necess´ario realizar uma revis˜ao

bibliogr´aﬁca aprofundada no assunto, n˜ao somente em fontes da ´area de Matem´atica para
o estudo da Geometria e da ´Algebra envolvidas, mas tamb´em em livros de engenharia, no

que tange `a Rob´otica.

O estudo da Geometria Anal´ıtica na descri¸c˜ao dos elementos do bra¸co rob´otico

permitiu interpretar segmentos de reta e ˆangulos de uma maneira diferente. A inten¸c˜ao ao
abordar os conceitos de ´Algebra Linear nesse trabalho, por sua vez, foi de apresentar uma

abordagem que d´a uma outra interpreta¸c˜ao `as opera¸c˜oes elementares com matrizes, como

realizar transforma¸c˜oes geom´etricas a objetos.

A representa¸c˜ao de bra¸cos rob´oticos utilizando matrizes de transforma¸c˜ao homogˆenea

se mostrou uma op¸c˜ao adequada, pois faz uso de conceitos alg´ebricos de grupos. Essas

estruturas, com suas propriedades, garantem que a representa¸c˜ao do mecanismo se dˆe

de forma simples, precisa e facilmente alter´avel. Cada fator de um produto de matrizes

representa um ou dois elementos do bra¸co rob´otico e, como o resultado desse produto

tamb´em ´e uma matriz com a mesma caracter´ıstica, a localiza¸c˜ao do efetuador ´e claramente

interpretada.

O avan¸co cada vez mais intenso de tecnologias e o desaﬁo de inova¸c˜ao no ensino

de Matem´atica motivaram a aplica¸c˜ao dos conceitos geom´etricos e alg´ebricos por meio

da computa¸c˜ao. O ambiente de programa¸c˜ao apresentado se mostrou uma ferramenta

eﬁcaz para a manipula¸c˜ao de matrizes e para a elabora¸c˜ao de representa¸c˜oes gr´aﬁcas. O

simulador de Rob´otica, por sua vez, possibilitou a interpreta¸c˜ao dos dados obtidos em

anima¸c˜oes, bem como na assimila¸c˜ao do que cada transla¸c˜ao e rota¸c˜ao signiﬁcam nesse

99

Cap´ıtulo 5. Considera¸c˜oes ﬁnais

100

estudo. O fato dos softwares serem disponibilizados de forma gratuita fez com que sua

escolha se tornasse atrativa. Por mais que os erros obtidos na simula¸c˜ao, na ordem de

mil´esimos, possam ser signiﬁcativos no ambiente industrial, como estes ocorreram por

causas alheias `as pr´aticas adotadas, o resultado pode ser considerado bem-sucedido para a

an´alise acadˆemica.

A lista de atividades apresentada n˜ao ´e exaustiva. Trata-se de sugest˜oes a serem

avaliadas pelos docentes e, caso sejam adequadas ao ensino dado no momento, podem ser

administradas de modo a ter uma aplica¸c˜ao no ambiente de sala de aula. O professor ´e

encorajado a usar sua criatividade e ir al´em, produzindo atividades inspiradas no conte´udo

apresentado nesse trabalho. N˜ao havendo impacto no conte´udo b´asico a ser exposto aos

alunos, pode-se, inclusive, realizar a abordagem em trˆes dimens˜oes, fazendo o uso, n˜ao

somente da linguagem de programa¸c˜ao proposta, mas tamb´em do simulador de rob´otica.

Caso a escola possua bra¸cos rob´oticos reais, as atividades pr´aticas podem ser estendidas

da sala de aula para os laborat´orios.

O assunto Rob´otica n˜ao se det´em ao ambiente acadˆemico. O crescente avan¸co de

tecnologias no ambiente industrial tem exigido proﬁssionais cada vez mais qualiﬁcados, que

possuam conhecimento nas mais diversas ´areas. A aplica¸c˜ao desse conte´udo de Rob´otica

pode agu¸car a curiosidade dos alunos, promover um ambiente acadˆemico desaﬁador e

l´udico, al´em de ressaltar poss´ıveis aptid˜oes por essa ´area, o que reﬂetir´a em um maior

anseio pelo estudo de disciplinas correlatas.

O advento da pandemia da doen¸ca COVID-19, a qual alcan¸cou o Brasil em 2020,

tornou o cen´ario da educa¸c˜ao desaﬁador em todos os sentidos. O Minist´erio da Educa¸c˜ao e

os professores tiveram que se reinventar para poder ministrar algum conte´udo aos alunos.

Nesta disserta¸c˜ao o impacto foi maior no que tange `a valida¸c˜ao das atividades propostas

em sala de aula, uma vez que n˜ao foi poss´ıvel encontrar ambientes com tempo suﬁciente

para a administra¸c˜ao do conte´udo. Espera-se, ent˜ao, que a lista seja utilizada em outro

momento por algum docente e os resultados compartilhados para futuras consultas. Uma

op¸c˜ao de estudo de caso a ser realizada tamb´em ´e a an´alise de um bra¸co rob´otico real,

reproduzindo-o virtualmente.

Na ´area te´orica, sugere-se a abordagem da cinem´atica inversa, que ´e o estudo

das posi¸c˜oes de juntas necess´arias para que o efetuador atinja uma posi¸c˜ao e orienta¸c˜ao

espec´ıﬁcos. Pode-se, inclusive, abordar a dinˆamica envolvida, estudando for¸cas, torques e

Cap´ıtulo 5. Considera¸c˜oes ﬁnais

101

demais conceitos de F´ısica relacionados, considerando as restri¸c˜oes que acontecem com o

choque de pe¸cas do pr´oprio equipamento.

Tendo em vista a proposta inicial do trabalho, o objetivo do programa de mestrado

e a aplica¸c˜ao do conte´udo absorvido pelo autor, entende-se que esse trabalho cumpriu seus

objetivos.

Referˆencias

1 OECD. PISA 2018 country-speciﬁc overviews: Brazil. 2018. Dispon´ıvel em:
<https://www.oecd.org/pisa/publications/PISA2018 CN BRA.pdf>. Acesso em:
25-01-2021.

2 BRASIL: MINIST´ERIO DA EDUCA ¸C ˜AO. Brasil no Pisa 2018 (Relat´orio
nacional). 2019. Dispon´ıvel em: <http://download.inep.gov.br/acoes internacionais/pisa-
/documentos/2019/relatorio PISA 2018 preliminar.pdf>. Acesso em: 25-01-2021.

3 SOCIEDADE BRASILEIRA DE MATEM ´ATICA. 10 Quest˜oes para Professores de
Matem´atica. . . e como o PISA Pode Ajudar a Respondˆe-las. OCDE/IMPA, 2018. 104 p.
Dispon´ıvel em: <https://www.sbm.org.br/destaque/10-questoes-para-professores-de-
matematica>. Acesso em: 25-01-2021.

4 ANDRADE, C. C. de. O ensino da matem´atica para o cotidiano. Trabalho de Conclus˜ao
de Curso (Especializa¸c˜ao) — Universidade Tecnol´ogica Federal do Paran´a, Medianeira,
2013. Dispon´ıvel em: <http://repositorio.roca.utfpr.edu.br/jspui/handle/1/4286>. Acesso
em: 25-01-2021.

5 BRITO, R. S.; MOITA, F. M. G. da S. C.; LOPES, M. da C. Rob´otica educacional:
Desaﬁos e possibilidades no trabalho interdisciplinar entre matem´atica e f´ısica.
Ensino da Matem´atica em Debate, v. 5, n. 1, p. 27–44, 2018. Dispon´ıvel em:
<https://revistas.pucsp.br/index.php/emd/article/view/36687>. Acesso em: 25-01-2021.

6 PERALTA, D.; GUIMAR ˜AES, E. A rob´otica na escola como postura pedag´ogica
interdisciplinar: o futuro chegou para a educa¸c˜ao b´asica? Revista Brasileira de Inform´atica
na Educa¸c˜ao, v. 26, p. 30, 01 2018.

7 SOCIEDADE BRASILEIRA DE MATEM ´ATICA. PROFMAT: Uma reﬂex˜ao
e alguns resultados. 2017. Dispon´ıvel em: <https://www.profmat-sbm.org.br/wp-
content/uploads/sites/23/2017/07/PROFMAT-relatorio DIGITAL.pdf>. Acesso em:
25-01-2021.

8 GNU OCTAVE. GNU OCTAVE: About. 2020. Dispon´ıvel em: <https://www.gnu.org-
/software/octave/about.html>. Acesso em: 25-01-2021.

9 COPPELIA ROBOTICS. CoppeliaSim User Manual: User interface. 2020. Dispon´ıvel
em: <https://www.coppeliarobotics.com/helpFiles/index.html>. Acesso em: 25-01-2021.

10 BRASIL: MINIST´ERIO DA EDUCA ¸C ˜AO. Base Nacional Comum Curricular
(BNCC). 2018. Dispon´ıvel em: <http://basenacionalcomum.mec.gov.br/images-
/BNCC EI EF 110518 versaoﬁnal site.pdf>. Acesso em: 25-01-2021.

102

Referˆencias

103

11 CRISTOV ˜AO, E. M.; SPILLER, L. K. P. C. Matrizes, determinantes e sistemas ou
sistemas, matrizes e determinantes? 2009. Dispon´ıvel em: <http://alb.org.br/arquivo-
morto/edicoes anteriores/anais17/txtcompletos/sem07/COLE 4002.pdf>. Acesso em:
25-01-2021.

12 BRASIL: MINIST´ERIO DA EDUCA ¸C ˜AO. Parˆametros Curriculares Nacionais
(PCN): Matem´atica / Secretaria de Educa¸c˜ao Fundamental – Bras´ılia: MEC/SEF. 1997.
Dispon´ıvel em: <http://portal.mec.gov.br/seb/arquivos/pdf/livro03.pdf>. Acesso em:
25-01-2021.

13 COSTA, C. G. da. Utiliza¸c˜ao de matrizes no estudo de orienta¸c˜ao e posi¸c˜ao de um
bra¸co rob´otico por meio das coordenadas de Denavit-Hartenberg. Disserta¸c˜ao (Mestrado) —
Universidade Federal de Goi´as, 2014. Dispon´ıvel em: <https://sca.profmat-sbm.org.br-
/sca v2/get tcc3.php?id=61463>. Acesso em: 25-01-2021.

14 MESQUITA, L. C. Transforma¸c˜oes Ortogonais Aplicada `a Cinem´atica de
Robˆos. Disserta¸c˜ao (Mestrado) — Universidade Federal do Piau´ı, 2016. Dispon´ıvel
em: <https://sca.profmat-sbm.org.br/sca v2/get tcc3.php?id=94902>. Acesso em:
25-01-2021.

15 CARVALHO, R. N. de. Ensino de matematica atraves da rob´otica: movimento do
bra¸co mecˆanico. Disserta¸c˜ao (Mestrado) — Funda¸c˜ao Universidade Federal de Rondˆonia,
2013. Dispon´ıvel em: <https://sca.profmat-sbm.org.br/sca v2/get tcc3.php?id=51154>.
Acesso em: 25-01-2021.

16 NETO, J. R. da S. A utiliza¸c˜ao do software Octave na interpreta¸c˜ao geom´etrica das
opera¸c˜oes com matrizes no ensino m´edio. Disserta¸c˜ao (Mestrado) — Universidade Federal
Rural do Semi- ´Arido, 2019. Dispon´ıvel em: <https://sca.profmat-sbm.org.br/sca v2-
/get tcc3.php?id=160252002>. Acesso em: 25-01-2021.

17 NUNES, D. M. O uso da linguagem de programa¸c˜ao de computadores no ensino
de matem´atica: Alternativa metodol´ogica para uma integra¸c˜ao disciplinar. Disserta¸c˜ao
(Mestrado) — Universidade Estadual do Sudoeste da Bahia, 2016. Dispon´ıvel em:
<https://sca.profmat-sbm.org.br/sca v2/get tcc3.php?id=94325>. Acesso em: 25-01-2021.

18 ROUSSEAU, C.; SAINT-ABIN, Y. Matem´atica e Atualidade. 1a. ed. Rio de Janeiro:
SBM, 2015. v. 5. 326 p. (Cole¸c˜ao Profmat, v. 5). ISBN 978-85-8337-031-4.

19 BOULOS, P.; CAMARGO, I. de. Geometria Anal´ıtica: um tratamento vetorial. 2. ed.
S˜ao Paulo: Makron Books do Brasil, 1987. 385 p.

20 LYNCH, K. M.; PARK, F. C. Modern Robotics: Mechanics, Planning, and Control.
Cambridge, Reino Unido: Cambridge University Press, 2017. v. 2. 544 p. ISBN
9781107156302.

21 STEWART, J. C´alculo Volume 2: Tradu¸c˜ao da 7a edi¸c˜ao norte-americana. S˜ao Paulo:
Cengage Learning, 2013. ISBN 978-85-221-1463-4.

22 COPPELIA ROBOTICS. Euler Angles. 2020. Dispon´ıvel em: <https://www-
.coppeliarobotics.com/helpFiles/en/eulerAngles.htm>. Acesso em: 25-01-2021.

23 MIHELJ, M. et al. Robotics. Cham, Su´ı¸ca: Springer International Publishing, 2019.
ISBN 9783319729114.

Referˆencias

104

24 ABB. IRB 140. Small, powerful, and fast 6-axes robot. 2019. Dispon´ıvel em:
<https://new.abb.com/products/robotics/industrial-robots/irb-140>. Acesso em:
25-01-2021.

25 DENAVIT, J.; HARTENBERG, R. S. A kinematic notation for lower pair mechanisms
based on matrices. Journal of applied mechanics, v. 77, n. 2, p. 215–221, 1955.

26 SICILIANO, B. et al. Robotics: Modelling, Planning and Control. 1. ed. Londres:
Springer-Verlag London, 2009. 632 p. (Advanced Textbooks in Control and Signal
Processing). ISBN 978-1-84628-642-1.

Anexo A
Algoritmos do Octave

Este anexo exibe os c´odigos do Octave utilizados ao longo dessa disserta¸c˜ao. Eles
foram apresentados no trabalho utilizando a mesma fonte padr˜ao do ambiente de progra-
ma¸c˜ao.

A utiliza¸c˜ao deste c´odigo exige a instala¸c˜ao do ambiente de programa¸c˜ao na m´aquina
e um conhecimento m´ınimo da linguagem de programa¸c˜ao empregada. Todos os c´odigos
foram escritos no Editor de Texto do Octave e salvos em uma pasta do sistema, utilizando
o sistema operacional Microsoft Windows 10, em um computador com 8 gigabytes de
mem´oria RAM e processador com 2,5 gigahertz de frequˆencia. A vers˜ao do Octave utilizada
´e a 5.2.0.

A Se¸c˜ao A.1 deste anexo exibe o c´odigo utilizado na Subse¸c˜ao 3.2.6 do Cap´ıtulo 3.
A Se¸c˜ao A.2, por sua vez, cont´em o c´odigo utilizado na atividade presente na Se¸c˜ao 4.3,
no Cap´ıtulo 4.

A Se¸c˜ao A.3 apresenta o c´odigo utilizado para criar a interface gr´aﬁca de usu´ario,
que foi aplicada na Subse¸c˜ao 3.2.7. As fun¸c˜oes que s˜ao chamadas por esse c´odigo est˜ao nas
Se¸c˜oes A.4, A.5 e A.6. A etapa para a cria¸c˜ao da interface, bem como a descri¸c˜ao dessas
fun¸c˜oes, est´a contida no Anexo C.
A.1 Simula¸c˜ao de robˆo 3D no Octave

## Código para plotar o braço robótico em 3D
## Samuel Duque Gonçalves - 2020
close all;
clear all;
clc;
##Iniciar as juntas atribuindo valor 0
j1=0; j2=0; j3=0; j4=0; j5=0; j6=0;

##Matriz 1
T(:,:,1)=[cosd(j1),-sind(j1),0,0;

sind(j1),cosd(j1),0,0.069;
0,0,1,0;
0,0,0,1];

##Matriz 2
T(:,:,2)=[1,0,0,0;

0,cosd(j2),-sind(j2),.07;

105

Anexo A. Algoritmos do Octave

106

0,sind(j2),cosd(j2),.3521;
0,0,0,1];

##Matriz 3
T(:,:,3)=[1,0,0,0;

0,cosd(j3),-sind(j3),0;
0,sind(j3),cosd(j3),.36;
0,0,0,1];

##Matriz 4
T(:,:,4)=[cosd(j4),0,sind(j4),0;

0,1,0,.226;
-sind(j4),0,cosd(j4),0;
0,0,0,1];

##Matriz 5
T(:,:,5)=[1,0,0,0;

0,cosd(j5),-sind(j5),.154;
0,sind(j5),cosd(j5),0;
0,0,0,1];

##Matriz 6
T(:,:,6)=[cosd(j6),0,sind(j6),0;

0,1,0,0.046;
-sind(j6),0,cosd(j6),0;
0,0,0,1];

##Matriz 7
T(:,:,7)=[1,0,0,0;

0,1,0,.019;
0,0,1,0;
0,0,0,1];

##Multiplicar as matrizes
T0=eye(4);
Tef=T0;
for ind=1:7

Tef=Tef*T(:,:,ind);
pef(:,ind)=Tef(1:3,4);

end;

#Plotar os vetores e suas legendas
origx = quiver3(0,0,0,0.1*T0(1,1),0.1*T0(2,1),...

0.1*T0(3,1),’Color’, ’red’,...
’linestyle’,’−−’,"linewidth",1);

hold on #Mantem os plots na mesma figura

Anexo A. Algoritmos do Octave

107

origx_line = line([0,0.1*T0(1,1)],[0,0.1*T0(2,1)],...
[0,0.1*T0(3,1)], ’Color’,’red’,’linestyle’,’−−’,...
"visible","off","displayname",’\bfx\rm - Base’);

origy = quiver3(0,0,0,0.1*T0(1,2),0.1*T0(2,2),...

0.1*T0(3,2), ’Color’, ’green’,...
’linestyle’,’−−’,"linewidth",1);

origy_line = line([0,0.1*T0(1,2)],[0,0.1*T0(2,2)],...

[0,0.1*T0(3,2)], ’Color’,’green’,’linestyle’,’−−’,...
"visible","off","displayname",’\bfy\rm - Base’);

origz = quiver3(0,0,0,0.1*T0(1,3),0.1*T0(2,3),...

0.1*T0(3,3), ’Color’, ’blue’,...
’linestyle’,’−−’,"linewidth",1);

origz_line = line([0,0.1*T0(1,3)],[0,0.1*T0(2,3)],...

[0,0.1*T0(3,3)], ’Color’,’blue’,’linestyle’,’−−’,...
"visible","off","displayname",’\bfz\rm - Base’);

efx = quiver3(pef(1,ind),pef(2,ind),pef(3,ind),...

0.1*Tef(1,1),0.1*Tef(2,1),0.1*Tef(3,1),...
’Color’, ’red’,"linewidth",1);

efx_line = line([pef(1,ind),0.1*Tef(1,1)],...

[pef(2,ind),0.1*Tef(2,1)],[pef(3,ind),0.1*Tef(3,1)],...
’Color’, ’red’,’linestyle’,’-’,...
"visible","off","displayname",’\bfx\rm - Efetuador’);

efy = quiver3(pef(1,ind),pef(2,ind),pef(3,ind),...

0.1*Tef(1,2),0.1*Tef(2,2),0.1*Tef(3,2),...
’Color’, ’green’,"linewidth",1);

efy_line = line([pef(1,ind),0.1*Tef(1,2)],...

[pef(2,ind),0.1*Tef(2,2)],[pef(3,ind),0.1*Tef(3,2)],...
’Color’, ’green’,’linestyle’,’-’,...
"visible","off","displayname",’\bfy\rm - Efetuador’);

efz = quiver3(pef(1,ind),pef(2,ind),pef(3,ind),...

0.1*Tef(1,3),0.1*Tef(2,3),0.1*Tef(3,3),...
’Color’, ’blue’,"linewidth",1);

efz_line = line([pef(1,ind),0.1*Tef(1,3)],...

[pef(2,ind),0.1*Tef(2,3)],[pef(3,ind),0.1*Tef(3,3)],...
’Color’, ’blue’,’linestyle’,’-’,...
"visible","off","displayname",’\bfz\rm - Efetuador’);

#Plotar os elos como linhas
for ind=2:7

line([pef(1,ind-1),pef(1,ind)],...
[pef(2,ind-1),pef(2,ind)],[pef(3,ind-1),pef(3,ind)],...

Anexo A. Algoritmos do Octave

108

"linewidth",2,"displayname",[’Elo ’,num2str(ind-1)]);

end;

hold off;

#Configurar legenda, eixos e fontes
axis equal;
set(gca, "linewidth", 2, "fontsize", 12);
leg=legend ("location", "southeast");
set(leg, "fontsize", 12);

A.2 Simula¸c˜ao de robˆo 2D no Octave

## Código para plotar o braço robótico em 2D
## Samuel Duque Gonçalves - 2020
close all;
clear all;
clc;

##Declaração das juntas do braço
##Inicialmente atribuído o valor 0
j1=0; j2=0; j3=0;

##Matriz 1
T(:,:,1)=[cosd(j1),-sind(j1),0;

sind(j1),cosd(j1),0;
0,0,1];

##Matriz 2
T(:,:,2)=[cosd(j2),-sind(j2),8;

sind(j2),cosd(j2),0;
0,0,1];

##Matriz 3
T(:,:,3)=[cosd(j3),-sind(j3),4;

sind(j3),cosd(j3),0;
0,0,1];

##Matriz 4
T(:,:,4)=[1,0,2;

0,1,0;
0,0,1];

##Multiplicar as matrizes
T0=eye(3);
Tef=T0;

Anexo A. Algoritmos do Octave

109

for ind=1:4

Tef=Tef*T(:,:,ind);
pef(:,ind)=Tef(1:2,3);

end;

#Plotar os vetores e suas legendas
origx = quiver(0,0,2*T0(1,1),2*T0(2,1),...

’Color’, ’red’,’linestyle’,’−−’,"linewidth",2);

hold on
origx_line = line([0,2*T0(1,1)],[0,2*T0(2,1)],...

’Color’,’red’,’linestyle’,’−−’,"visible","off",...
"displayname",’\bfx\rm - Base’,"linewidth",2);

origy = quiver(0,0,2*T0(1,2),2*T0(2,2),...

’Color’, ’green’,’linestyle’,’−−’,"linewidth",2);

origy_line = line([0,2*T0(1,2)],[0,2*T0(2,2)],...

’Color’, ’green’,’linestyle’,’−−’,"visible","off",...
"displayname",’\bfy\rm - Base’,"linewidth",2);

efx = quiver(pef(1,4),pef(2,4),2*Tef(1,1),2*Tef(2,1),...

’Color’, ’red’,’linestyle’,’-’,"linewidth",2);

efx_line = line([pef(1,4),2*Tef(1,1)],...

[pef(2,4),2*Tef(2,1)],...
’Color’, ’red’,’linestyle’,’-’,"visible","off",...
"displayname",’\bfx\rm - Efetuador’,"linewidth",2);
efy = quiver(pef(1,4),pef(2,4),2*Tef(1,2),2*Tef(2,2),...

’Color’, ’green’,’linestyle’,’-’,"linewidth",2);

efy_line = line([pef(1,4),2*Tef(1,2)],...

[pef(2,4),2*Tef(2,2)],...
’Color’, ’green’,’linestyle’,’-’,"visible","off",...
"displayname",’\bfy\rm - Efetuador’,"linewidth",2);

#Plotar os elos como linhas
for ind=2:4

line([pef(1,ind-1),pef(1,ind)],...
[pef(2,ind-1),pef(2,ind)],...
"linewidth",2,"displayname",[’Elo ’,num2str(ind-1)]);

end;

hold off;

#Configurar legenda, eixos e fontes
axis equal;
set(gca, "linewidth", 2, "fontsize", 12);
leg=legend ("location", "southeast");
set(leg, "fontsize", 12);

Anexo A. Algoritmos do Octave

110

A.3 C´odigo para criar a Interface Gr´aﬁca

(create gui.m)

## Código para criar a Interface Gráfica de Usuário
## Samuel Duque Gonçalves - 2020
##Códigos iniciais
clear all
close all
clear h
clc
graphics_toolkit qt

##Conectar ao CoppeliaSim?
h.online=true;#true=conectado; false=desconectado
##Se for trabalhar online, executar função para conexão
if h.online
conect

endif;

#Inicializar variáveis:
h.j1=0; h.j2=0; h.j3=0; h.j4=0; h.j5=0; h.j6=0;
h.alfa=0; h.beta=0; h.gama=0;
h.Tef=eye(4);

##Criar tela com gráfico
figure(1, ’position’,...
[get(0,"screensize")(3:4)/4 get(0,"screensize")(3:4)/2]);
h.ax = axes ("position", [0 0.5 0.5 0.5]);

##Função para atualizar a plotagem
function update_plot (obj, init = false)
h = guidata (obj);
replot = false;
recalc = false;

switch (gcbo)

case {h.linecolor_radio_2D}

set (h.linecolor_radio_3D, "value", 0);
h.j1=0; h.j4=0; h.j6=0;
set (h.joint1_slider,"Value",0, "enable", "off");
set (h.joint4_slider,"Value",0, "enable", "off");
set (h.joint6_slider,"Value",0, "enable", "off");
set (h.joint1_edit,"string","0", "enable", "off");
set (h.joint4_edit,"string","0", "enable", "off");
set (h.joint6_edit,"string","0", "enable", "off");
recalc = true;

Anexo A. Algoritmos do Octave

111

case {h.linecolor_radio_3D}

set (h.linecolor_radio_2D, "value", 0);
set (h.joint1_slider, "enable", "on");
set (h.joint4_slider, "enable", "on");
set (h.joint6_slider, "enable", "on");
set (h.joint1_edit, "enable", "on");
set (h.joint4_edit, "enable", "on");
set (h.joint6_edit, "enable", "on");

case {h.joint1_slider}

set (h.joint1_edit, "string",...

num2str(get (h.joint1_slider, "value")))

recalc = true;

case {h.joint2_slider}

set (h.joint2_edit, "string",...

num2str(get (h.joint2_slider, "value")));

recalc = true;

case {h.joint3_slider}

set (h.joint3_edit, "string",...

num2str(get (h.joint3_slider, "value")));

recalc = true;

case {h.joint4_slider}

set (h.joint4_edit, "string",...

num2str(get (h.joint4_slider, "value")));

recalc = true;

case {h.joint5_slider}

set (h.joint5_edit, "string",...

num2str(get (h.joint5_slider, "value")));

recalc = true;

case {h.joint6_slider}

set (h.joint6_edit, "string",...

num2str(get (h.joint6_slider, "value")));

recalc = true;

case {h.joint1_edit}

set (h.joint1_slider, "Value",...

str2num(get (h.joint1_edit, "String")));

recalc = true;

case {h.joint2_edit}

set (h.joint2_slider, "Value",...

str2num(get (h.joint2_edit, "String")));

recalc = true;
case h.joint3_edit

set (h.joint3_slider, "Value",...

str2num(get (h.joint3_edit, "String")));

recalc = true;

case {h.joint4_edit}

set (h.joint4_slider, "Value",...

str2num(get (h.joint4_edit, "String")));

recalc = true;

Anexo A. Algoritmos do Octave

112

case {h.joint5_edit}

set (h.joint5_slider, "Value",...

str2num(get (h.joint5_edit, "String")));

recalc = true;

case {h.joint6_edit}

set (h.joint6_slider, "Value",...

str2num(get (h.joint6_edit, "String")));

recalc = true;

endswitch

if (recalc || init) #No slider ou no inicio

h.j1=get (h.joint1_slider, "value");
h.j2=get (h.joint2_slider, "value");
h.j3=get (h.joint3_slider, "value");
h.j4=get (h.joint4_slider, "value");
h.j5=get (h.joint5_slider, "value");
h.j6=get (h.joint6_slider, "value");
h.Tef=robot_plot(h.j1,h.j2,h.j3,h.j4,h.j5,h.j6);

if h.online

set_target(h.j1,h.j2,h.j3,h.j4,h.j5,h.j6);

endif;

set (h.se3_matrix, "String",...

num2str((round(1000*h.Tef))/1000, "%10.4f"));

if (get (h.linecolor_radio_2D, "value")==1)

view (90, 0);

else

view (135, 30)

endif

endif

endfunction

## Modo de controle
h.linecolor_label = uicontrol ("style", "text",

"units", "normalized",
"string", "Dimensões:",
"horizontalalignment", "left",
"position", [0.6 0.9 0.35 0.04]);

gp = uibuttongroup ( "Position", [ 0.8 0.9 .2 .04]);
h.linecolor_radio_2D=uicontrol (gp,"style", "radiobutton",

"units", "normalized",
"string", "2D",
"callback", @update_plot,

Anexo A. Algoritmos do Octave

113

"value", 0,
"position", [0 0 1 1]);

h.linecolor_radio_3D=uicontrol (gp,"style", "radiobutton",

"units", "normalized",
"string", "3D",
"callback", @update_plot,
"value", 1,
"position", [0.5 0 1 1]);

#Descrição das juntas
h.joint1_label = uicontrol ("style", "text",

"units", "normalized",
"string", "Junta 1 (-180° a 180°):",
"horizontalalignment", "left",
"position", [0.56 0.85 0.34 0.04]);

h.joint2_label = uicontrol ("style", "text",

"units", "normalized",
"string", "Junta 2 (-100° a 100°):",
"horizontalalignment", "left",
"position", [0.56 0.75 0.34 0.04]);

h.joint3_label = uicontrol ("style", "text",

"units", "normalized",
"string", "Junta 3 (-140° a 140°):",
"horizontalalignment", "left",
"position", [0.56 0.65 0.34 0.04]);

h.joint4_label = uicontrol ("style", "text",

"units", "normalized",
"string", "Junta 4 (-180° a 180°):",
"horizontalalignment", "left",
"position", [0.56 0.55 0.34 0.04]);

h.joint5_label = uicontrol ("style", "text",

"units", "normalized",
"string", "Junta 5 (-115° a 115°):",
"horizontalalignment", "left",
"position", [0.56 0.45 0.34 0.04]);

h.joint6_label = uicontrol ("style", "text",

"units", "normalized",
"string", "Junta 6 (-180° a 180°):",
"horizontalalignment", "left",
"position", [0.56 0.35 0.34 0.04]);

Anexo A. Algoritmos do Octave

114

##Slider de controle das juntas
h.joint1_slider = uicontrol ("style", "slider",

"units", "normalized",
"string", "slider",
’Min’,-180,
’Max’, 180,
"callback", @update_plot,
"value", 0,
"position",[0.56 0.8 0.34 0.04]);

h.joint2_slider = uicontrol ("style", "slider",

"units", "normalized",
"string", "slider",
’Min’,-100,
’Max’, 100,
"callback", @update_plot,
"value", 0,
"position",[0.56 0.7 0.34 0.04]);

h.joint3_slider = uicontrol ("style", "slider",

’Min’,-140,
’Max’, 140,
"units", "normalized",
"string", "slider",
"callback", @update_plot,
"value", 0,
"position", [0.56 0.6 0.34 0.04]);

h.joint4_slider = uicontrol ("style", "slider",

"units", "normalized",
"string", "slider",
’Min’,-180,
’Max’, 180,
"callback", @update_plot,
"value", 0,
"position", [0.56 0.5 0.34 0.04]);

h.joint5_slider = uicontrol ("style", "slider",

"units", "normalized",
"string", "slider",
’Min’,-115,
’Max’, 115,
"callback", @update_plot,
"value", 0,
"position", [0.56 0.4 0.34 0.04]);

Anexo A. Algoritmos do Octave

115

h.joint6_slider = uicontrol ("style", "slider",

"units", "normalized",
"string", "slider",
’Min’,-180,
’Max’, 180,
"callback", @update_plot,
"value", 0,
"position", [0.56 0.3 0.34 0.04]);

##edit de controle das juntas
h.joint1_edit = uicontrol ("style", "edit",

"units", "normalized",
"string", "0",
"callback", @update_plot,
"position", [0.9 0.8 0.1 0.04]);

h.joint2_edit = uicontrol ("style", "edit",

"units", "normalized",
"string", "0",
"callback", @update_plot,
"position", [0.9 0.7 0.1 0.04]);

h.joint3_edit = uicontrol ("style", "edit",

"units", "normalized",
"string", "0",
"callback", @update_plot,
"position", [0.9 0.6 0.1 0.04]);

h.joint4_edit = uicontrol ("style", "edit",

"units", "normalized",
"string", "0",
"callback", @update_plot,
"position", [0.9 0.5 0.1 0.04]);

h.joint5_edit = uicontrol ("style", "edit",

"units", "normalized",
"string", "0",
"callback", @update_plot,
"position", [0.9 0.4 0.1 0.04]);

h.joint6_edit = uicontrol ("style", "edit",

"units", "normalized",
"string", "0",
"callback", @update_plot,
"position", [0.9 0.3 0.1 0.04]);

Anexo A. Algoritmos do Octave

116

h.se3_matrix_title = uicontrol ("style", "text",

"units", "normalized",
"string", {"Matriz de transformação";...
"homogênea do efetuador."; "T="},
"horizontalalignment", "left",
"position", [0.56 0.16 0.34 0.08]);

h.se3_matrix = uicontrol ("style", "text",

"units", "normalized",
"string", num2str((round(1000*h.Tef))/1000, "%10.4f"),
"horizontalalignment", "left",
"position", [0.56 0 0.34 0.16]);

set(gcf,"color", get(0,"defaultuicontrolbackgroundcolor"))
guidata (gcf, h)
update_plot (gcf, true);

A.4 Fun¸c˜ao conect.m

## Código para conectar ao CoppeliaSim
## Samuel Duque Gonçalves - 2020
function conect()

sim=remApiSetup();
simxFinish(-1);
clientID=simxStart(’127.0.0.1’,19999,true,true,5000,5);

if (clientID>-1)

disp(‘Conectado ao servidor de API remoto’);

else

disp(‘Falha ao conectar ao servidor de API remoto’);

end

endfunction

A.5 Fun¸c˜ao set target.m

## Código para enviar comandos
## para as juntas no CoppeliaSim
## Samuel Duque Gonçalves - 2020

function set_target(j1,j2,j3,j4,j5,j6)

j=[j1,j2,j3,j4,j5,j6];

sim=remApiSetup();
simxFinish(-1);

clientID=simxStart(’127.0.0.1’,19999,true,true,5000,5);

[r,hand(1)]=simxGetObjectHandle(clientID,...

Anexo A. Algoritmos do Octave

117

’IRB140_joint1’,sim.simx_opmode_blocking);

[r,hand(2)]=simxGetObjectHandle(clientID,...

’IRB140_joint2’,sim.simx_opmode_blocking);

[r,hand(3)]=simxGetObjectHandle(clientID,...

’IRB140_joint3’,sim.simx_opmode_blocking);

[r,hand(4)]=simxGetObjectHandle(clientID,...

’IRB140_joint4’,sim.simx_opmode_blocking);

[r,hand(5)]=simxGetObjectHandle(clientID,...

’IRB140_joint5’,sim.simx_opmode_blocking);

[r,hand(6)]=simxGetObjectHandle(clientID,...

’IRB140_joint6’,sim.simx_opmode_blocking);

for i=1:6

simxSetJointTargetPosition(clientID,hand(i),...

deg2rad(j(i)),sim.simx_opmode_oneshot);

end
endfunction

A.6 Fun¸c˜ao robot plot.m

## Código para plotar o braço robótico
## Samuel Duque Gonçalves - 2020

function Tef=robot_plot(j1,j2,j3,j4,j5,j6)

##Matriz 1
T(:,:,1)=[cosd(j1),-sind(j1),0,0;

sind(j1),cosd(j1),0,0.069;
0,0,1,0;
0,0,0,1];

##Matriz 2
T(:,:,2)=[1,0,0,0;

0,cosd(j2),-sind(j2),.07;
0,sind(j2),cosd(j2),.3521;
0,0,0,1];

##Matriz 3
T(:,:,3)=[1,0,0,0;

0,cosd(j3),-sind(j3),0;
0,sind(j3),cosd(j3),.36;
0,0,0,1];

##Matriz 4
T(:,:,4)=[cosd(j4),0,sind(j4),0;

0,1,0,.226;
-sind(j4),0,cosd(j4),0;

Anexo A. Algoritmos do Octave

118

0,0,0,1];

##Matriz 5
T(:,:,5)=[1,0,0,0;

0,cosd(j5),-sind(j5),.154;
0,sind(j5),cosd(j5),0;
0,0,0,1];

##Matriz 6
T(:,:,6)=[cosd(j6),0,sind(j6),0;

0,1,0,0.046;
-sind(j6),0,cosd(j6),0;
0,0,0,1];

##Matriz 6
T(:,:,7)=[1,0,0,0;

0,1,0,.019;
0,0,1,0;
0,0,0,1];

##Multiplicar as matrizes
T0=eye(4);
Tef=T0;
for ind=1:7

Tef=Tef*T(:,:,ind);
pef(:,ind)=Tef(1:3,4);

end;

#Plotar os vetores e suas legendas
origx = quiver3(0,0,0,0.1*T0(1,1),0.1*T0(2,1),...

0.1*T0(3,1),’Color’, ’red’,...
’linestyle’,’−−’,"linewidth",1);

hold on #Mantem os plots na mesma figura
origx_line = line([0,0.1*T0(1,1)],[0,0.1*T0(2,1)],...
[0,0.1*T0(3,1)], ’Color’,’red’,’linestyle’,’−−’,...
"visible","off","displayname",’\bfx\rm - Base’);

origy = quiver3(0,0,0,0.1*T0(1,2),0.1*T0(2,2),...

0.1*T0(3,2), ’Color’, ’green’,...
’linestyle’,’−−’,"linewidth",1);

origy_line = line([0,0.1*T0(1,2)],[0,0.1*T0(2,2)],...

[0,0.1*T0(3,2)], ’Color’,’green’,’linestyle’,’−−’,...
"visible","off","displayname",’\bfy\rm - Base’);

origz = quiver3(0,0,0,0.1*T0(1,3),0.1*T0(2,3),...

0.1*T0(3,3), ’Color’, ’blue’,...

Anexo A. Algoritmos do Octave

119

’linestyle’,’−−’,"linewidth",1);

origz_line = line([0,0.1*T0(1,3)],[0,0.1*T0(2,3)],...

[0,0.1*T0(3,3)], ’Color’,’blue’,’linestyle’,’−−’,...
"visible","off","displayname",’\bfz\rm - Base’);

efx = quiver3(pef(1,7),pef(2,7),pef(3,7),...
0.1*Tef(1,1),0.1*Tef(2,1),0.1*Tef(3,1),...
’Color’, ’red’,"linewidth",1);

efx_line = line([pef(1,7),0.1*Tef(1,1)],...

[pef(2,7),0.1*Tef(2,1)],[pef(3,7),0.1*Tef(3,1)],...
’Color’, ’red’,’linestyle’,’-’,...
"visible","off","displayname",’\bfx\rm - Efetuador’);

efy = quiver3(pef(1,7),pef(2,7),pef(3,7),...
0.1*Tef(1,2),0.1*Tef(2,2),0.1*Tef(3,2),...
’Color’, ’green’,"linewidth",1);

efy_line = line([pef(1,7),0.1*Tef(1,2)],...

[pef(2,7),0.1*Tef(2,2)],[pef(3,7),0.1*Tef(3,2)],...
’Color’, ’green’,’linestyle’,’-’,...
"visible","off","displayname",’\bfy\rm - Efetuador’);

efz = quiver3(pef(1,7),pef(2,7),pef(3,7),...
0.1*Tef(1,3),0.1*Tef(2,3),0.1*Tef(3,3),...
’Color’, ’blue’,"linewidth",1);

efz_line = line([pef(1,7),0.1*Tef(1,3)],...

[pef(2,7),0.1*Tef(2,3)],[pef(3,7),0.1*Tef(3,3)],...
’Color’, ’blue’,’linestyle’,’-’,...
"visible","off","displayname",’\bfz\rm - Efetuador’);

#Plotar os elos como linhas
for ind=2:7

line([pef(1,ind-1),pef(1,ind)],...
[pef(2,ind-1),pef(2,ind)],[pef(3,ind-1),pef(3,ind)],...
"linewidth",2,"displayname",[’Elo ’,num2str(ind-1)]);

end;

hold off;

#Configurar legenda, eixos e fontes
axis equal;
set(gca, "linewidth", 2, "fontsize", 12);
leg=legend ("location", "southeast");
set(leg, "fontsize", 12);

endfunction

Anexo B
Conﬁgura¸c˜ao do CoppeliaSim para
as simula¸c˜oes

As etapas descritas neste anexo permitem controlar o bra¸co rob´otico IRB 140
da marca ABB no ambiente de simula¸c˜ao do CoppeliaSim. Apesar de apresentar um
escopo longo, a parametriza¸c˜ao possui baixa complexidade em suas a¸c˜oes. A vers˜ao do
CoppeliaSim utilizada ´e a Edu, n´umero 4.1.0, em um computador com sistema operacional
Microsoft Windows 10, com 8 gigabytes de mem´oria RAM e processador com 2,5 gigahertz
de frequˆencia.

Uma vez aberto o CoppeliaSim, a parametriza¸c˜ao se dar´a por meio de duas etapas,
descritas nas se¸c˜oes abaixo. A primeira etapa consiste em deixar o bra¸co em condi¸c˜oes para
que seja feito o levantamento da posi¸c˜ao de seus itens. A segunda, por sua vez, habilita
o controle do bra¸co rob´otico durante a anima¸c˜ao, utilizando c´odigos espec´ıﬁcos a serem
inseridos no simulador ou por meio de interface de programa¸c˜ao de aplica¸c˜ao.

B.1 Conﬁgura¸c˜ao para o levantamento das juntas e

elos

Essa se¸c˜ao apresenta os passos necess´arios para centralizar o bra¸co rob´otico IRB
140 na origem do sistema, alinhando-o ao eixo (cid:126)y e atribuindo o valor de 0◦ `as juntas. As
a¸c˜oes a serem feitas s˜ao as seguintes:

1. No Navegador de modelos, na pasta robots/non-mobile, encontrar o bra¸co rob´otico
“ABB IRB 140.ttm”, selecionar e arrastar para a p´agina da simula¸c˜ao. Ao soltar na
p´agina, abrir´a uma janela contendo informa¸c˜oes do bra¸co rob´otico e, para fech´a-la,
basta clicar em “OK ”;

2. Para centralizar com a origem da simula¸c˜ao, selecionar “IRB140” na Hierarquia da

, na barra de ferramentas. Na
cena e clicar no bot˜ao “Object/ item shift”
janela que abrir, na aba “Position”, marcar “Relative to: World ”, e preencher o valor
de 0 metros para as coordenadas X e Y, conforme ilustrado na Figura B.1a, e fechar
a janela;

3. Para rotacionar o bra¸co de forma a orient´a-lo com o eixo (cid:126)y, selecionar “IRB140”

na Hierarquia da cena e clicar selecionar “Object/item rotate”

, na barra de

120

Anexo B. Conﬁgura¸c˜ao do CoppeliaSim para as simula¸c˜oes

121

ferramentas. Na janela que abrir, na aba “Orientation”, marcar “Relative to: World ”,
e preencher o valor de 90 graus para o ˆangulo gamma, que signiﬁca a rota¸c˜ao de 90◦
em torno do eixo (cid:126)z, fazendo o alinhamento mudar de (cid:126)x para (cid:126)y, conforme ilustrado
na Figura B.1b. Fechar a janela em seguida;

4. Para orientar a base do bra¸co ao eixo (cid:126)y, clicar com o bot˜ao direito do mouse
em “IRB140” na Hierarquia da cena e clicar em “Edit/Reorient bounding box/with
reference frame of world ’;

5. Como o ˆangulo inicial da quinta junta ´e −90◦, para zer´a-lo basta expandir o bra¸co
rob´otico “IRB140” na Hierarquia da Cena clicando em “+”, dar um duplo clique em
“IRB140 joint5” e, na aba “Joint”, em “Position [deg] ”, preencher o valor 0, teclando
Enter em seguida. Logo em seguida, fechar a janela de propriedades do objeto.

Para descobrir a posi¸c˜ao das juntas e da conex˜ao do efetuador, basta selecionar os

itens na Hierarquia da Cena e ver as coordenadas no Texto de Informa¸c˜ao.

Ap´os a realiza¸c˜ao dos passos acima, ao se executar a simula¸c˜ao em “Simulation/Start
Simulation” a junta 5 retorna a −90◦ e, ao clicar no bra¸co rob´otico, ´e aberta a interface
gr´aﬁca de usu´ario do modelo da ABB, que permite controlar o bra¸co rob´otico por meio de
barras de rolagem. No entanto, esse meio de controle n˜ao ´e utilizado neste trabalho. Para
habilitar, ent˜ao, a altera¸c˜ao das juntas durante a anima¸c˜ao, faz-se necess´ario realizar a
conﬁgura¸c˜ao da se¸c˜ao a seguir.

Figura B.1: Janelas de transla¸c˜ao e rota¸c˜ao de objetos no CoppeliaSim

(a) Janela de “Object/item shift”

(b) Janela de “Object/item rotate”

Fonte: Elaborado pelo autor.

B.2 Conﬁgura¸c˜ao para o in´ıcio da anima¸c˜ao

Nessa se¸c˜ao s˜ao exibidas as a¸c˜oes necess´arias para habilitar o controle por meio do
Editor de comandos Lua e tamb´em por interfaces de programa¸c˜ao de aplicativos (APIs),
al´em de criar uma janela que informa a matriz de transforma¸c˜ao homogˆenea do efetuador
durante a anima¸c˜ao. Ap´os o in´ıcio dessas etapas, n˜ao ´e mais poss´ıvel iniciar a simula¸c˜ao e
controlar o bra¸co por meio da interface gr´aﬁca de usu´ario embarcada da ABB. As a¸c˜oes
s˜ao as seguintes:

1. Na Hierarquia da Cena,

itens “IRB140 target”,
“IRB140 manipulationSphere” e “IRB140 manipulationSphereBase”. Com isso a
esfera verde que estava no bra¸co rob´otico ir´a desaparecer;

e deletar os

selecionar

Anexo B. Conﬁgura¸c˜ao do CoppeliaSim para as simula¸c˜oes

122

2. No Navegador de modelos, na pasta other, encontrar a representa¸c˜ao dos eixos
“reference frame.ttm” e arrastar para a p´agina da simula¸c˜ao. Para acoplar a referˆen-
cia ao efetuador, apertar a tecla Ctrl do teclado e selecionar “ReferenceFrame” e
“IRB140 connection” na Hierarquia da cena e clicar no bot˜ao “Assemble/Disassemble”

. Logo ap´os, selecionar apenas o “ReferenceFrame” e clicar em “Object/item

shift”
. Na janela que abrir, na aba “Position”, marcar “Relative to: Parent
frame”, e preencher o valor de 0 metros para as coordenadas X, Y e Z, e fechar a
janela. Por ´ultimo, dar um duplo-clique no nome do “ReferenceFrame” na Hierarquia
de Cena e alterar para “Efetuador” e teclar Enter. Para aumentar os eixos, expandir
o “Efetuador” na Hierarquia da Cena clicando em “+” e dar duplo-clique no item
ReferenceFrame shape. Na janela que abrir, na aba Shape clicar no bot˜ao View/mo-
dify geometry. Em seguida, na nova janela, em Scaling factors preencher o valor 2 os
eixos X, Y e Z, e clicar no bot˜ao Apply correspondente, e fechar todas as janelas.

Para ﬁnalizar, clicar no bot˜ao “Object/item shift”
e, na janela que abrir, na
aba Pos. Scaling, marcar Parent frame, preencher 2 para X, Y e Z, e clicar no bot˜ao
Scale position maior apenas uma vez, fechando a janela em seguida;

3. Inserir, novamente, um “reference frame.ttm” na P´agina de anima¸c˜ao, para acoplar
`a origem do sistema. Em seguida, selecionar apenas o “ReferenceFrame” e clicar

. Na janela que abrir, na aba “Position”, marcar
em “Object/item shift”
“Relative to: World ”, e preencher o valor de 0 metros para as coordenadas X, Y
e Z, e fechar a janela. Dar um duplo-clique no nome do “ReferenceFrame” na
Hierarquia de Cena e alterar para “Origem” e teclar Enter. Para aumentar os eixos,
expandir a “Origem” na Hierarquia da Cena clicando em “+” e dar duplo-clique no
item ReferenceFrame shape0. Na janela que abrir, na aba Shape clicar no bot˜ao
View/modify geometry. Em seguida, na nova janela, em Scaling factors preencher o
valor 5 os eixos X, Y e Z, e clicar no bot˜ao Apply correspondente, e fechar todas as

e, na janela que abrir,
janelas. Por ´ultimo, clicar no bot˜ao “Object/item shift”
na aba Pos. Scaling, marcar Parent frame, preencher 5 para X, Y e Z, e clicar no
bot˜ao Scale position maior apenas uma vez, fechando a janela em seguida;

4. Dar um duplo-clique no ´ıcone da junta 1, isto ´e, da “IRB140 joint1” e na janela
que abrir, na aba “Joint”, no item “Mode”, selecionar a op¸c˜ao “Torque/force mode”
na lista suspensa, como demonstrado na Figura B.2a, e fechar a janela em seguida.
Repetir esse passo para todas as seis juntas do bra¸co rob´otico;

5. Clicar em “Add/Dummy”, para criar um objeto ao qual ser´a adicionado o c´odigo

para o controle do bra¸co rob´otico;

6. Clicar em “Tools/Scripts” e, na janela que abrir, selecionar “Non-threaded child script
(IRB140)” e teclar delete para apagar o c´odigo embarcado do modelo da ABB. Em
seguida, clicar “Insert new script”, adicionando um script do tipo “Child script
(non-threaded)” e clicar em OK. Logo ap´os, selecionar “Non-threaded child script

Anexo B. Conﬁgura¸c˜ao do CoppeliaSim para as simula¸c˜oes

123

(unassociated)” e, no “Script properties”, no item “Associated object”, selecionar o
item “Dummy”, o qual foi criado no passo anterior, como demonstrado na Figura
B.2b. Por ´ultimo, dar um duplo-clique no script e, na p´agina que abrir, apagar o
conte´udo e colar o c´odigo a seguir:

Figura B.2: Janela de propriedades de juntas e janela de scripts no
CoppeliaSim

(a) Janela de propriedades de juntas

(b) Janela de scripts

Fonte: Elaborado pelo autor.

function sysCall init()

simRemoteApi.start(19999)
xml = [[
<ui closeable=“false” on-close=“closeEventHandler” resizable=“true”>
<tabs>

<tab title=“Efetuador”>

<group>

<label text=“<big> Matriz de SE(3):</big>”id=“6008”
wordwrap=“false” style=“font-weight: bold;”/>
<label text=“Tef = ” wordwrap=“false” />
<label text=“” id=“1234” wordwrap=“false” />

</group>
<stretch />
</tab>

</tabs>

Anexo B. Conﬁgura¸c˜ao do CoppeliaSim para as simula¸c˜oes

124

</ui>
]]
ui=simUI.create(xml)

base=sim.getObjectHandle(‘Origem’)
ee=sim.getObjectHandle(‘Efetuador’)
calcSE3(ui)

end

function createSE3string()

local g=createSE3matrix()
local out=“<b><big><tt>”
for i=1,4,1 do

out=out..“| ”
for j=1,4,1 do

out=out..string.format(“ %+6.3f”,g[i][j])

end
out=out..“ | <br>”

end
out=out..“</tt></big></b>”
return out

end

function createSE3matrix()

local matrix=sim.getObjectMatrix(ee,base)
local g =

for i=1,4,1 do

g[i] =
for j=1,4,1 do

if (i<=3) then

g[i][j] = matrix[4*(i-1)+j]

else

if (j<=3) then
g[i][j] = 0

else

g[i][j] = 1

end

end

end

end
return g

end

function calcSE3(ui)

out=createSE3string()
simUI.setLabelText(ui,1234,out)

end

Anexo B. Conﬁgura¸c˜ao do CoppeliaSim para as simula¸c˜oes

125

function sysCall actuation()

calcSE3(ui)

end

function sysCall cleanup()

simUI.destroy(ui)
simRemoteApi.stop(19999)

end

Ap´os a realiza¸c˜ao dos passos acima, ´e habilitado o comando por APIs e pelo

comando abaixo, a ser escrito no Editor de Comandos Lua do pr´oprio CoppeliaSim:

sim.setJointTargetPosition(sim.getObjectHandle(‘IRB140 joint1’),90*math.pi/180)

No exemplo anterior, ´e enviado o comando de altera¸c˜ao do ˆangulo da junta 1 para

90◦. Caso a junta j´a esteja nesse ˆangulo, o bra¸co n˜ao se movimenta.

Ap´os a conﬁgura¸c˜ao realizada, recomenda-se salvar o arquivo em alguma pasta do
sistema, clicando em “File/Save scene”. O nome utilizado para o arquivo nesse trabalho
foi robot arm.ttt.

Anexo C
Conﬁgura¸c˜ao de interfaces para o
Octave

Este anexo cont´em as etapas necess´arias para conﬁgurar o Octave de modo a
habilitar duas interfaces, que s˜ao elementos que possibilitam intermediar sistemas distintos.
As interfaces s˜ao as seguintes:
Interface Gr´aﬁca de Usu´ario aplica¸c˜ao que permite a intera¸c˜ao do usu´ario com o
Octave de forma visual e intuitiva, enviando comando por meio de elementos (bot˜oes,
barras, caixas de texto etc) e recebendo informa¸c˜oes atrav´es de gr´aﬁcos e textos.

Interface de Programa¸c˜ao de Aplica¸c˜ao conjunto de rotinas e fun¸c˜oes que permitem
a comunica¸c˜ao entre softwares. No caso, habilita o envio de comandos do Octave
para o CoppeliaSim.

Antes de criar a interface gr´aﬁca de usu´ario, ´e necess´aria a cria¸c˜ao de uma pasta
no sistema para reunir todos os arquivos necess´arios. O sistema operacional utilizado
foi o Microsoft Windows 10, em um computador com 8 gigabytes de mem´oria RAM e
processador com 2,5 gigahertz de frequˆencia.

O c´odigo create gui.m, dispon´ıvel na Se¸c˜ao A.3, cria a interface gr´aﬁca e precisa
estar na pasta em quest˜ao. Ao ser executado, este c´odigo chama as fun¸c˜oes externas a
seguir, as quais tamb´em precisam estar na pasta referida:

conect conecta a interface gr´aﬁca de usu´ario ao CoppeliaSim. ´E executado somente
quando o c´odigo de cria¸c˜ao da interface ´e iniciado e a vari´avel h.online receber o
valor true. Para que seja bem sucedida a conex˜ao, ´e necess´ario que a simula¸c˜ao do
CoppeliaSim esteja executando antes de executar a cria¸c˜ao da interface, exibindo o
texto “Conectado ao servidor de API remoto” na Janela de Comandos. Caso haja
erro na conex˜ao, ´e exibido o texto “Falha ao conectar ao servidor de API remoto”. O
c´odigo da fun¸c˜ao conect est´a na Se¸c˜ao A.4 do Anexo A;

set target envia os ˆangulos que ser˜ao alvos a serem alcan¸cados pelo bra¸co rob´otico do
CoppeliaSim. ´E executado quando h´a altera¸c˜oes dos ˆangulos na interface gr´aﬁca,
somente se a vari´avel h.online tiver recebido o valor true e a conex˜ao, por meio
da fun¸c˜ao conect, tiver sido bem-sucedida. Na Se¸c˜ao A.5 do Anexo A est´a contido o
c´odigo da fun¸c˜ao set target;

robot plot este c´odigo ´e similar ao apresentado na se¸c˜ao A.1, e tem o objetivo de atualizar
a ﬁgura contida na interface gr´aﬁca. O c´odigo da fun¸c˜ao set target est´a na Se¸c˜ao
A.6 do Anexo A;

126

Anexo C. Conﬁgura¸c˜ao de interfaces para o Octave

127

Al´em dos quatro arquivos descritos anteriormente, para habilitar a interface de
programa¸c˜ao de aplica¸c˜ao ´e necess´ario que haja, na mesma pasta, os seguintes arquivos:

• remApiSetup.m, dispon´ıvel na pasta C:/Program Files/CoppeliaRobotics/Coppeli-
aSimEdu/programming/remoteApiBindings/octave/octave, ou pasta similar onde
esteja instalado o programa;

• remApi.oct.

O arquivo remApi.oct n˜ao ´e disponibilizado nas pastas do CoppeliaSim. Para que

ele seja criado ´e essencial a realiza¸c˜ao dos seguintes passos:

1. Criar uma pasta provis´oria no sistema. O nome dado a esta pasta, para que n˜ao

haja confus˜ao, ´e de “Provis´oria”;

2. Copiar para esta pasta “Provis´oria” os seguintes itens:

• Arquivo remoteApi.dll, contido na pasta C:/Program Files/CoppeliaRobo-
tics/CoppeliaSimEdu/programming/remoteApiBindings/lib/lib/Windows, ou
similar;

• Todos os arquivos contidos na pasta C:/Program Files/CoppeliaRobotics/Cop-

peliaSimEdu/programming/include, ou similar;

• Todos os arquivos contidos na pasta C:/Program Files/CoppeliaRobotics/Cop-
peliaSimEdu/programming/remoteApi, ou similar. Ao fazˆe-lo, ir´a abrir uma
janela perguntando sobre sobrescrever o arquivo license.txt, o que pode ser feito
sem problemas;

• Os arquivos buildWin.m e remApi.cc contidos na pasta C:/Program Files/Cop-
peliaRobotics/CoppeliaSimEdu/programming/remoteApiBindings/octave, ou
similar;

3. Em seguida, executar o arquivo buildWin.m no Octave. Com a Janela de Comandos
selecionada, pressionar qualquer tecla do teclado quando aparecer o texto “Press any
key to start”. O arquivo remApi.oct aparecer´a na pasta “Provis´oria” ap´os a execu¸c˜ao
do c´odigo.

Por ﬁm, os arquivos necess´arios para realizar as simula¸c˜oes deste trabalho, incluindo
o arquivo robot arm.ttt criado no Anexo B, s˜ao os descritos pela Figura C.1, organizados
de forma alfab´etica na pasta de exemplo.

Figura C.1: Arquivos contidos na pasta de simula¸c˜ao

Fonte: Elaborado pelo autor.

