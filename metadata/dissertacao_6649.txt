                  UNIVERSIDADE ESTADUAL DO CEARÁ 

CENTRO DE CIÊNCIA E TECNOLOGIA 

CURSO DE MESTRADO PROFISSIONAL EM ENSINO DE MATEMÁTICA 

ALAN DÉRICK DE ARAUJO LIMA 

ANÁLISE COMPARATIVA DE CRITÉRIOS DE DIVISIBILIDADE POR 7: TEORIA 

E TECNOLOGIA.  

FORTALEZA – CEARÁ 

                                                    2021 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
ALAN DERICK DE ARAUJO LIMA 

ANÁLISE COMPARATIVA DE CRITÉRIOS DE DIVISIBILIDADE POR 7: TERORIA E 

TECNOLOGIA. 

Dissertação apresentada ao Curso de Mestrado 

Profissional em Matemática em Rede Nacional 

do Programa de Pós-Graduação em Matemática 

do  Centro  de  Ciências  e  Tecnologia  da 

Universidade  Estadual  do  Ceará,  como 

requisito  parcial  para  obtenção  do  Título  de 

Mestre em Ensino de Matemática. 

Orientador:  Prof°.  Dr.  Daniel  Brandão  de 

Menezes. 

FORTALEZA – CEARÁ 

2021

 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                      
 
 
 
 
 
 
 
 
 
 
 
 
                                                 
 
ALAN DERICK DE ARAUJO LIMA 

ANÁLISE COMPARATIVA DE CRITÉRIOS DE DIVISIBILIDADE POR 7: TEORIA E 

TECNOLOGIA. 

Dissertação apresentada ao Curso de Mestrado 

Profissional  em  Matemática  do  Programa  de 

Pós-Graduação  em  Matemática  em  Rede 

Nacional  do  Centro  de  Ciências  e  Tecnologia 

da  Universidade  Estadual  do  Ceará,  como 

requisito  parcial  para  à  obtenção  do  Título  de 

Mestre em Matemática. Área de concentração: 

Matemática. 

Aprovada em: 03 de maio de 2021. 

BANCA EXAMINADORA: 

 
 
 
 
  
 
 
 
 
 
Dedico este trabalho,  

À minha companheira por sempre estar ao meu 

lado, aos meus filhos e à minha mãe. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
AGRADECIMENTOS 

À Deus por me encher de força e determinação para prosseguir em frente nesse árduo trabalho. 

À minha companheira, por sempre estar ao meu lado, por ter me dado o melhor presente da 

vida, dois filhos, por dividir bons momentos, por me amar e acreditar em meus sonhos.  

À minha mãe, por acreditar em  meus sonhos.  Por enxergar que, quanto  melhor é adquirir  a 

conhecimento do que o ouro, e quanto mais excelente é escolher o entendimento do que a prata. 

Aos professores Claudemir Leandro, Leo Ivo, Manoel Pereira, Nicolas Alcântara e Tiago Caúla 

Ribeiro que foram os meus professores nas disciplinas do curso. 

Ao professor João Montenegro que me  orientou  no trabalho  e me ajudou a melhorá-lo  com 

sugestões acerca do conteúdo. 

Ao professor Daniel Brandão que, também, me orientou no trabalho e me ajudou a melhorá-lo 

com sugestões acerca do conteúdo. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
“Os números governam o mundo”. 

(Platão)

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
RESUMO 

Critérios de divisibilidade são pouco ensinados na educação básica. Vê-se apenas no 6º ano do 

Ensino Fundamental e em provas olímpicas de matemática. Além disso, é um tema belo e muito 

vasto da teoria dos  números, pois  existem  vários critérios de divisibilidade para um mesmo 

número. Por isso, faz-se necessária uma investigação sobre o critério que necessita de menos 

operações  para  verificar  se  um  número  é  divisível  por  outro.  O  objetivo  geral  do  presente 

trabalho  é  estabelecer  comparações  entre  diferentes  critérios  de  divisibilidade  por  7.  Os 

objetivos específicos do trabalho são: apresentar os critérios de divisibilidade por 2, 3, 4, 5, 6, 

7, 8, 9 e 10, mostrar como construir um critério de divisibilidade e investigar uma ferramenta 

computacional para determinar se um número é primo. Primeiramente, foi feita uma pesquisa 

bibliográfica para desenvolver a fundamentação teórica e o capítulo Construindo Critérios de 

Divisibilidade. Para isso foram utilizados os livros de Hefez (2006), Oliveira (2010), Alencar 

(1987), Burton (1980) e Santos (1998), as dissertações de Shimokawa (2020) e Silva (2019) e 

o artigo de Ribeiro (2020). Em seguida, utilizou-se uma linguagem de programação (Pascal) 

para  construir  os  algoritmos  para  mostrar  os  divisores  de  um  número  com  o  intuito  de 

determinar se um número é primo e para gerar critérios de divisibilidade por um número primo. 

Posteriormente, é apresentado os critérios de divisibilidade de Pascal, de Zbikowski, de Chika 

Ofili e outros, e estabelecida uma comparação entre eles para observar qual necessita de menos 

operações  e  iterações  na  verificação.  Por  fim,  foram  apresentadas  algumas  considerações, 

mostrando, de forma breve, as dificuldades enfrentadas na pesquisa, as perspectivas futuras e 

uma reflexão sobre a metodologia empregada. 

Palavras-chave:  Aritmética.  Critérios  de  divisibilidade.  Divisibilidade.  Números  Primos 

Linguagem Pascal. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
ABSTRACT 

Divisibility  criteria  are  poorly  taught  in  basic  education.  It  is  only  seen  in  the  6th  year  of 

elementary school and in Olympic mathematics tests. In addition, it is a beautiful and very vast 

theme of number theory, as there are several criteria of divisibility criteria the same number. 

For this reason it is necessary to investigate the criterion that requires fewer operations to verify 

whether a number is divisible by another or not. The general objective of the present work is to 

establish comparisons between different criteria of divisibility by 7. The specific objectives of 

the work are: to present the criteria of divisibility by 2, 3, 4, 5, 6, 7, 8, 9 and 10, to show how 

build a divisibility criterion and investigate a computational tool to determine whether a number 

is prime. First, a bibliographic search was carried out to develop the theoretical foundation and 

the  chapter  Constructing  Divisibility  Criteria.  For  this  purpose,  the  books  Hefez  (2006), 

Oliveira  (2010),  Alencar  (1987),  Burton  (1980)  and  Santos  (1998),  the  dissertations  of 

Shimokawa (2020) and Silva (2019) and the article by Ribeiro (2020). Then a programming 

language (Pascal) was used to build the algorithms to show the divisors of a number in order 

determine whether a number is prime and to generate criteria for divisibility by a prime number. 

Subsequently,  the  divisibility  criteria  of  Pascal,  Zbikowski,  Chika  Ofili  and  others  are 

presented,  and  a  comparison  between  them  is  established  to  see  which  one  needs  fewer 

operations  and  iterations  in  the  verification.  Finally,  some  considerations  were  presented 

showing, briefly, the difficulties faced in the research, the future perspectives and a reflection 

on the methodology employed. 

Keywords: Arithmetic. Divisibility criteria. Divisibility. Prime numbers. Pascal language.  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
LISTA DE FIGURAS 

Figura 1 -  Regiões do Plano .......................................................................................  19 
Exemplo de Fluxograma ..........................................................................  53 
Figura 2 - 
Principais formas de um fluxograma ......................................................  54 
Figura 3 - 
Forma geral de representação de um algoritmo em pseudocódigo .......  55 
Figura 4 - 
Figura 5 -  Algoritmo Soma_dois_Numeros ..............................................................  56 
Professor Niklaus Wirth  ..........................................................................  56 
Figura 6 - 
Instalando o Dev-Pascal - 1ª Janela .........................................................  58 
Figura 7 - 
Instalando o Dev-Pascal - 2ª Janela .........................................................  58 
Figura 8 - 
Instalando o Dev-Pascal - 3ª Janela ..........................................................  58 
Figura 9 - 
Figura 10 -  Tela inicial .................................................................................................  59 
Figura 11 -  Criando novo arquivo Dev Pascal ...........................................................  60 
Figura 12 -  Salvando o arquivo Dev Pascal ................................................................  60 
Figura 13 -  Nomeando o arquivo Dev Pascal ..............................................................  61 
Figura 14 -  Algoritmo Soma_dois_Numeros em Pascal ............................................  62 
Figura 15 -  2º Algoritmo Soma_dois_numeros em Pascal .........................................  63 
Figura 16 -   Algoritmo Média_02 em Pascal ...............................................................  64 
Figura 17 -  Algoritmo Quadrado_Perfeito em Pascal ...............................................  65 
Figura 18 -  Algoritmo divisores de um número em Pascal ........................................  66 
Figura 19 -  Obtendo os divisores de 60 através do programa divisores ....................  66 
Figura 20 -  Algoritmo para determinar se um número é primo em Pascal ..............  68 
Figura 21 -  Verificando se o número 7 é primo através do programa Primo ..........  68 
Figura 22 -  Verificando se o número 30 é primo através do programa Primo .........  69 
Figura 23 -  Algoritmo para gerar critérios de divisibilidade em Pascal ...................  70 
Figura 24 -  Gerando os critérios de divisibilidade de Chika Ofili e Zbikowski ........  70 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
LISTA DE TABELAS 

Tabela 1 -  Crivo de Erastóstenes ..................................................................................  31 
Tabela 2 -  Critérios de divisibilidade de alguns números primos ..............................  50 
Tabela 3 -  Critérios de divisibilidade por 7 utilizando a quebra na dezena ..............  75 
Tabela 4 -  Critérios de divisibilidade por 7 utilizando a quebra na centena .............  77 
Tabela 5 -  Comparando alguns critérios de divisibilidade 7 .....................................  83 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
SUMÁRIO 

INTRODUÇÃO......................................................................................................  13 
1 
FUNDAMENTAÇÃO TEÓRICA........................................................................  16 
2 
Princípio de Indução .............................................................................................  16 
2.1 
2.2  Divisibilidade .........................................................................................................  20 
Sistema de numeração decimal ............................................................................  25 
2.3 
2.4  Números primos ....................................................................................................  28 
2.5  Critério de divisibilidade por 2, 4 e 8 ...................................................................  31 
2.6  Critério de divisibilidade por 3 e 9 .......................................................................  33 
2.7  Critério de divisibilidade por 6 .............................................................................  36 
2.8  Critério de divisibilidade por 5 e 10 .....................................................................  37 

CONSTRUINDO CRITÉRIOS DE DIVISIBILIDADE ....................................  39 
3 
3.1   Congruência modular ...........................................................................................  39 
3.2  Aplicações da congruência modular ....................................................................  41 
3.3  Construção de critérios de divisibilidade .............................................................  44 
3.4  Critério de divisibilidade por 11 e 13 ....................................................................  48 
3.5  Critério de divisibilidade por 17 e 19 ....................................................................  49 
3.6   Tabela de critério de divisibilidade ......................................................................  50 

A LINGUAGEM PASCAL ..................................................................................  51 
4 
Introdução à lógica de programação ....................................................................  51 
4.1 
4.2  Um breve histórico sobre a linguagem Pascal .....................................................  55 
4.3  Ambiente de programação Dev Pascal ................................................................  56 
4.4  Estrutura de programação em Pascal ..................................................................  60 
4.5  Algoritmo para determinar os divisores de um número .....................................  64 
4.6  Algoritmo para determinar se um número é primo ............................................  66 
4.7  Algoritmo para gerar critérios de divisibilidade .................................................  68 

ALGUNS CRITÉRIOS DE DIVISIBILIDADE POR 7 .....................................  71 
5 
5.1  Critério de divisibilidade por 7 de Blaise Pascal .................................................  71 
5.2  Critério de divisibilidade por 7 de Zbikowski .....................................................  72 
5.3  Critério de divisibilidade por 7 de Chika Ofili ....................................................  72 
5.4  Critério de divisibilidade por 7 (Quebra na dezena) .........................................  73 
5.5  Critério de divisibilidade por 7 (Quebra na centena) .........................................  74 
5.6  Critério de divisibilidade por 7 (Das classes) ......................................................  76 
5.7  Mais um critério de divisibilidade por 7 ..............................................................  77 
5.8  Comparando os critérios de divisibilidade por 7 ...............................................  79 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
6 

CONSIDERAÇÕES FINAIS...............................................................................  83 
REFERÊNCIAS.....................................................................................................  84 
ANEXOS.................................................................................................................  86 

 
 
 
 
 
 
13 

1 INTRODUÇÃO 

A teoria dos números é a parte da matemática que estuda os enigmas dos números 

e teve sua origem na Grécia antiga.  Os belos problemas ligados a esta área constituem, até hoje, 

uma das mais importantes fontes que inspiram os apreciadores da Matemática. Além disso, essa 

área possui diversas aplicações vantajosas à humanidade, como  por  exemplo, o processo  de 

criptografia usado em transações pela internet. (OLIVEIRA, 2010). 

Os critérios de divisibilidade aparecem da necessidade de saber se um certo número 

𝑛 é divisível por outro número 𝑏 sem precisar usar o algoritmo da divisão euclidiana. Portanto, 

eles são muito importantes no que diz respeito a praticidade. Os critérios de divisibilidade são 

consequências do modo como representamos frequentemente os números naturais utilizando o 

sistema decimal (SILVA, 2019) 

Em Brasil (2018, p. 301), na Base Nacional Comum Curricular (BNCC), no 6º ano 

do Ensino Fundamental traz na temática números a seguinte habilidade.  

(EF06MA05):  Classificar  números  naturais  em  primos  e  compostos,  estabelecer 
relações  entre  números,  expressas  pelos  termos  “é  múltiplo  de”,  “é  divisor  de”,  “é 
fator de”, e estabelecer, por meio de investigações, critérios de divisibilidade por 2, 3 
4, 5, 6, 8, 9, 10, 100 e 1000.  

Critérios de divisibilidade são pouco ensinados no ensino básico, aparecem apenas 

no  6º  ano  do  Ensino  Fundamental.  Além  disso,  é  um  assunto  que  aparece  em  prova  de 

olimpíadas. Por isso, é necessário fazer um estudo mais detalhado do assunto uma vez que é 

cobrado de forma muito básica apenas no 6º ano e de maneira um pouco mais aprofundada em 

provas olímpicas. 

Além disso, é um tema belo e muito vasto da teoria dos números. Existem vários 

critérios de divisibilidade para um mesmo número e surge daí a necessidade de utilizar o melhor 

para evitar perda de tempo nas verificações.  

Em  2020,  ao  participar  de  um  programa  de  aperfeiçoamento  de  professores 

(OBMEP  na  Escola)  que  possuía  três  módulos:  aritmética,  geometria  e  combinatória.  No 

módulo  de  aritmética,  foram  apresentados  alguns  critérios  de  divisibilidade.    Numa  dessas 

apresentações foi comentado sobre a descoberta de um novo critério de divisibilidade por 7, 

feita por um jovem nigeriano de 12 anos.  

Após  esse  critério  de  divisibilidade,  foram  pesquisados  outros  critérios  de 

divisibilidade por 7, entre os quais, utilizando a quebra na dezena (remoção dos algarismos das 

 
 
 
 
 
14 

unidades  e  dezenas  de  um  número)  e  a  quebra  na  centena  (remoção  dos  algarismos  das 

unidades, dezenas e das centenas de um número). Daí surgiu a necessidade de saber qual desses 

critérios eram mais vantajosos computacionalmente. 

Diante disto, o presente trabalho pretende responder a seguinte pergunta: qual é o 

critério de divisibilidade por 7 que necessita um menor número de operações na verificação de 

um número com 6 algarismos? 

O objetivo geral do presente trabalho é: 

  Estabelecer comparações entre diferentes critérios de divisibilidade por 7.  

Os objetivos específicos são:  

1.  Apresentar os critérios de divisibilidade por 2, 3, 4, 5, 6, 7, 8, 9 e 10. 

2.  Mostrar como construir um critério de divisibilidade. 

3.  Investigar  a  ferramenta  computacional  Dev  Pascal  para  determinar  se  um 

número é primo ou não. 

A  pesquisa  do  trabalho  foi  de  caráter  exploratória/bibliográfica.  A  pesquisa  teve 

como fonte livros, artigos, monografias e dissertações. Os livros-texto utilizados foram Hefez 

(2006), Oliveira (2010), Alencar (1987), Burton (1980) e Santos (1998). Foram utilizadas as 

dissertações de Shimokawa (2020)  e Silva (2019), também  foi utilizado  o artigo de Ribeiro 

(2020). Artigos, monografias, dissertações e outras referências foram acrescidas no decorrer da 

pesquisa.  

O trabalho foi dividido em quatro capítulos: Fundamentação Teórica, Construindo 

Critérios de Divisibilidade, A Linguagem Pascal e Alguns Critérios de Divisibilidade por 7. 

O  segundo  capítulo  foi  dedicado  às  bases  fundamentais  da  aritmética.  Foram 

apresentados  o  Princípio  do  Menor  Elemento  e  o  Princípio  de  Indução  Finita.  Depois  foi 

apresentada a noção de divisibilidade e algumas de suas propriedades. Foi tratado, ainda, sobre 

a representação decimal de numeração e sobre os números primos. Por fim, foi feito um breve 

estudo sobre os critérios de divisibilidade comumente abordados nos livros de ensino básico. 

Foi  tratado, no terceiro  capítulo,  sobre  congruência modular bem  como  algumas 

propriedades. Depois foram apresentados alguns exemplos em que podemos empregar a noção 

 
 
 
 
 
 
 
15 

de  congruência  modular.  Foi  apresentado,  também,  uma  maneira  de  construir  critérios  de 

divisibilidade  utilizando  a  quebra  na  unidade.  Por  fim,  foi  exibida  uma  tabela  com  alguns 

critérios de divisibilidade por alguns números primos.  

No quarto capítulo, foi tratada sobre a linguagem Pascal. Foi feita uma introdução 

à lógica de programação, um breve histórico sobre a linguagem Pascal, uma apresentação do 

ambiente  de  programação  Dev  Pascal,  uma  apresentação  da  estrutura  de  programação  em 

Pascal  e  foi  apresentado  alguns  algoritmos  utilizando  a  linguagem  Pascal,  dentre  os  quais: 

algoritmo para mostrar os divisores de um número, o algoritmo para determinar se um número 

é primo ou não e o algoritmo que gera critérios de divisibilidade por números primos.  

Foi tratado, no quinto capítulo, sobre os critérios de divisibilidade por 7 de Pascal, 

de Zbikowski, de Chika Ofili, da quebra na dezena, da quebra na centena e outros. Depois foi 

verificado para um número de 6 dígitos cada critério de divisibilidade. Por fim, o número de 

operações e de iterações de cada critério de divisibilidade por 7 foi posto em uma tabela para 

observar qual necessitava de menos operações na verificação. 

Nas  considerações  finais,  foram  apresentadas  algumas  considerações  acerca  do 

trabalho,  mostrando  as  dificuldades  enfrentadas  na  pesquisa,  as  perspectivas  futuras  e  uma 

reflexão sobre a metodologia empregada. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
16 

2 FUNDAMENTAÇÃO TEÓRICA 

Neste capítulo, tratamos de alguns resultados fundamentais para a compreensão e o 

desenvolvimento  de  assuntos  posteriormente  abordados.  Para  a  demonstração  de  algumas 

proposições e de alguns teoremas são necessários alguns princípios fundamentais. Razão pela 

qual iniciamos o capítulo com esses princípios.  

2.1 Princípio de indução finita 

Utilizaremos  neste  capítulo  e  quando  se  fizer  necessário  as  propriedades  das 

operações e da ordem dos conjuntos dos números inteiros.  

Definição: Seja 𝑆 ⊂ ℤ e 𝑎 ∈ 𝑆. Dizemos que 𝑎 é o menor elemento de 𝑆  se 𝑎 ≤ 𝑥, para todo 

𝑥 ∈ 𝑆. (ALENCAR FILHO, 1987) 

Em outras palavras, um número 𝑎 é o menor elemento de um conjunto dado se cada 

elemento desse conjunto for maior ou igual que 𝑎.  

Definição: Seja 𝑆 ⊂ ℤ e 𝑐 ∈ 𝑆. Dizemos que 𝑆 é limitado inferiormente se existir 𝑐 ∈  ℤ tal que 

𝑐 ≤ 𝑥 para todo 𝑥 ∈ 𝑆. (HEFEZ, 2016) 

O conjunto dos números naturais é limitado inferiormente e tem o número 1 como 

seu menor elemento. O conjunto dos inteiros negativos não é limitado inferiormente nem tem 

menor elemento. 

Princípio da boa ordenação: Todo subconjunto não vazio de ℕ possui um menor elemento. 

(ALENCAR FILHO, 1981) 

Proposição: Não existe 𝑛 ∈ ℕ tal que 0 < 𝑛 < 1. (HEFEZ, 2016) 

 
 
 
 
 
 
 
 
 
 
 
 
17 

Demonstração: Suponha, que exista um número inteiro 𝑛 tal que 0 < 𝑛 < 1. Seja 𝑆 = {𝑥 ∈

ℕ; 0 < 𝑥 < 1}. Então, o conjunto 𝑆 não é vazio e é limitado inferiormente. Portanto, o conjunto 

𝑆 possui um menor elemento 𝑎. Como 0 < 𝑎 < 1, temos que: 

0 < 𝑎2 < 𝑎 < 1 

contrariando o fato de que 𝑎 é o menor elemento de 𝑆. Consequentemente não existe inteiro 

entre 0 e 1. 

Corolário: (Propriedade Arquimediana): Sejam  𝑎, 𝑏 ∈ ℤ, com 𝑏 ≠ 0.  Então existe 𝑛 ∈ ℤ tal 

que 𝑛𝑏 > 𝑎. (HEFEZ, 2016) 

Demonstração: Como |𝑏| ≠ 0, da proposição anterior, temos que |𝑏| ≥ 1. Logo, 

(|𝑎| + 1)|𝑏| ≥ |𝑎| + 1 > |𝑎| ≥ 𝑎 

Portanto,  existe  𝑛 = |𝑎| + 1  para  𝑏 > 0  ou  𝑛 = −(|𝑎| + 1)  para  𝑏 < 0  tal  que 

𝑛𝑏 > 𝑎.  

O princípio abaixo é a primeira formulação do princípio de indução finita, para não 

haver  confusão  com  a  segunda  formulação  do  mesmo  princípio,  chamamos  de  princípio  de 

indução matemática.  

Princípio de Indução Matemática: Sejam 𝑆 ⊂ ℕ tal que: 

(𝑖)  1 ∈ 𝑆. 

(𝑖𝑖) 𝑛 ∈ 𝑆  ⟹ 𝑛 + 1 ∈ 𝑆 

Então, 𝑆 = ℕ. (HEFEZ, 2016). 

Utilizaremos  o  seguinte  princípio  para  demonstrar  propriedades  envolvendo 

números  naturais.  Esse  é  um  dos  princípios  mais  importantes  da  matemática,  pois  várias 

proposições precisam desse princípio para demonstrá-las.  

 
 
 
 
 
 
 
 
 
 
  
18 

Como consequência do Princípio da Indução Matemática enunciaremos a seguir o 

que chamamos de Princípio da Indução Finita. 

Princípio de Indução Finita: Seja 𝑎 ∈ ℕ e seja 𝑝(𝑛) uma sentença aberta em 𝑛 ∈ ℕ. Suponha 

que 

(𝑖) 𝑝(𝑎) é verdadeiro, e que  

(𝑖𝑖) ∀𝑛 ≥ 𝑎, 𝑝(𝑛) verdadeira ⟹ 𝑝(𝑛 + 1) é verdadeira. 

Então, 𝑝(𝑛) é verdadeira para todo 𝑛 ≥ 𝑎 (HEFEZ, 2016). 

Exemplo: Mostre que 1 + 3 + 5 + ⋯ + (2𝑛 − 1) = 𝑛2, com 𝑛 ∈ ℕ. (IEZZI, 2013) 

A  proposição  é  verdadeira  para  𝑛 = 1,  pois  1 = 12.  Suponha  a  proposição  seja 

verdadeira para um certo 𝑛, ou seja, 1 + 3 + 5 + ⋯ + (2𝑛 − 1) = 𝑛2, com 𝑛 ∈ ℕ e provemos 

que a mesma seja verdadeira para 𝑛 + 1. Temos, 

⏟                 + (2(𝑛 + 1) − 1) = 𝑛2⏟ + (2(𝑛 + 1) − 1) = 
1 + 3 + 5 + ⋯ + (2𝑛 − 1)

                                                                                             = 𝑛2 + 2𝑛 + 1 = 

                                                                                             = (𝑛 + 1)2. 

Assim, a proposição é verdadeira para 𝑛 + 1.  

Pelo Princípio de Indução Finita, temos que 1 + 3 + 5 + ⋯ + (2𝑛 − 1) = 𝑛2, para 

todo 𝑛 ∈ ℕ 

Exemplo:  Temos  que  (1 + 𝑥)𝑛 ≥ 1 + 𝑛𝑥,  com  𝑛 ≥ −1  e  𝑛 ∈ ℕ.  (LIMA,  2006)  Essa 

desigualdade é conhecida com Desigualdade de Jacques Bernoulli. 

A proposição é verdadeira para 𝑛 = 1, pois: (1 + 𝑥)1 = 1 + 1 ⋅ 𝑥. Admitamos que 

a proposição seja verdadeira para um certo 𝑛 e provemos que a mesma seja verdadeira para 𝑛 +

1. Temos: 

 
 
 
 
 
 
 
  
 
 
 
19 

(1 + 𝑥)𝑛 ≥ 1 + 𝑛𝑥 ⟹ (1 + 𝑥)𝑛(1 + 𝑥) ≥ (1 + 𝑛𝑥)(1 + 𝑥) 

                                                           ⟹ (1 + 𝑥)𝑛+1 ≥ 1 + 𝑥 + 𝑛𝑥 + 𝑛𝑥2 

                                                     ⟹ (1 + 𝑥)𝑛+1 ≥ 1 + (𝑛 + 1)𝑥 + 𝑛𝑥2 

Como 𝑛𝑥2 ≥ 0, segue-se que: 1 + (𝑛 + 1)𝑥 + 𝑛𝑥2 ≥ 1 + (𝑛 + 1)𝑥. 

Logo, (1 + 𝑥)𝑛+1 ≥ 1 + (𝑛 + 1)𝑥. 

Portanto,  (1 + 𝑥)𝑛 ≥ 1 + 𝑛𝑥, para todo 𝑛 ∈ ℕ. 

Exemplo: Um número finito de linhas divide o plano em  regiões. Mostre que essas regiões 

podem ser coloridas por duas cores, de forma que as regiões vizinhas tenham cores diferentes. 

(ANDREESCU, 2007). 

 Provamos essa proposição utilizando indução sobre 𝑛, onde 𝑛 é o número de linhas. 

Para 𝑛 = 1 temos que metade do plano será de uma cor e a outra metade de outra cor. Digamos 

cinza de um lado e branco do outro.  

Suponha que sabemos como colorir um mapa definido por 𝑛 linhas. Acrescentamos 

a (𝑛 + 1) − ésima linha à imagem e em seguida mantemos a cor da região de um lado dessa 

linha enquanto altera a cor das regiões do outro lado. Esta parte está ilustrada abaixo. 

Figura 1: Regiões do Plano. 

                                 Fonte: ANDREESCU, 2007, p. 4. 

Regiões que eram anteriormente adjacentes ainda têm cores diferentes. Regiões que 

compartilham um segmento da linha que antes faziam parte da mesma região, agora estão em 

lados opostos da linha. Logo, elas têm cores diferentes. Isso mostra que o novo mapa satisfaz a 

propriedade necessária.  

Portanto, pelo Princípio de Indução Finita, essas regiões podem ser coloridas por 

duas cores, de forma que as regiões vizinhas tenham cores diferentes.  

 
 
 
 
 
 
 
20 

Utilizaremos  o  seguinte  princípio  para  demonstrar  um  Teorema  numa  seção 

posterior. Daí a necessidade de enunciá-lo. É a terceira e última formulação do Princípio de 

Indução. 

Princípio  de  Indução  Completa:  Seja  𝑎 ∈ ℤ  e  seja  𝑝(𝑛)  uma  sentença  aberta  em  𝑛 ∈ ℤ  . 

Suponha que 

(𝑖) 𝑝(𝑎) é verdadeiro, e que  

(𝑖𝑖) ∀𝑛, 𝑝(𝑎), 𝑝(𝑎 + 1), … ,  𝑝(𝑛) verdadeira ⟹ 𝑝(𝑛 + 1) é verdadeira. 

Então, 𝑝(𝑛) é verdadeira para todo 𝑛 ≥ 𝑎 (HEFEZ, 2016). 

2.2 Divisibilidade 

Definição: Um número inteiro 𝑎 divide um número inteiro 𝑏 se existir um número 𝑞 ∈ ℤ, tal 

que 𝑏 = 𝑎𝑞. (HEFEZ, 2016).  

Usaremos  a notação  𝑎|𝑏 para representar  o fato  de que 𝑎 divide 𝑏 (OLIVEIRA, 

2010).  Essa noção será fundamental para as nossas demonstrações.  

Proposição: Sejam 𝑎, 𝑏 𝑒 𝑐 ∈ ℤ. Tem-se que:                                (ALENCAR FILHO, 1981) 

1)  1|𝑎, 𝑎|𝑎 e 𝑎|0. 

Demonstração: Temos que               𝑎 = 𝑎 ⋅ 1 ⟹ 1|𝑎 

𝑎 = 1 ⋅ 𝑎  ⟹ 𝑎|𝑎 

0 = 0 ⋅ 𝑎  ⟹ 𝑎|0 

2)  Se 𝑎|𝑏 e 𝑐|𝑑, então 𝑎𝑐|𝑏𝑑. 

Demonstração: Temos que         𝑎|𝑏 ⟹ 𝑏 = 𝑎 ⋅ 𝑞,   𝑞 ∈ ℤ 

𝑐|𝑑 ⟹ 𝑑 = 𝑐 ⋅ 𝑠,   𝑠 ∈ ℤ 

Logo, 𝑏𝑑 = (𝑎𝑐) ⋅ (𝑞𝑠) ⟹ 𝑎𝑐|𝑏𝑑. 

 
 
 
 
 
 
 
 
 
 
 
 
21 

3)  Se 𝑎|𝑏 e 𝑏|𝑐, então 𝑎|𝑐. 

Demonstração: Temos que          𝑎|𝑏 ⟹ 𝑏 = 𝑎 ⋅ 𝑞,   𝑞 ∈ ℤ 

𝑏|𝑐 ⟹ 𝑐 = 𝑏 ⋅ 𝑠,   𝑠 ∈ ℤ 

Logo, 𝑐 = 𝑏𝑠 = 𝑎𝑞𝑠 ⟹ 𝑎|𝑐. 

O conjunto dos divisores inteiros de um número 𝑎 é o conjunto formado por todos 

os divisores de 𝑎 e será denotado por 𝐷(𝑎).  

Exemplo: O conjunto dos divisores de 60 é o conjunto: 

𝐷(60) = { ±1, ± 2, ± 3, ± 4, ± 5, ± 6, ± 12, ± 15, ± 20, ± 30, ± 60}. 

Proposição: Sejam 𝑎, 𝑏  𝑒 𝑐 ∈ ℤ. Se 𝑎|𝑏 e 𝑎|𝑐, então 𝑎|(𝑏𝑥 + 𝑐𝑦), para todo 𝑥, 𝑦 ∈ ℤ. (HEFEZ, 

2016). 

Demonstração: Temos que: 

𝑎|𝑏 ⟹ 𝑏 = 𝑎 ⋅ 𝑞,   𝑞 ∈ ℤ 

𝑎|𝑐 ⟹ 𝑐 = 𝑎 ⋅ 𝑠,   𝑠 ∈ ℤ 

Logo, 𝑏𝑥 + 𝑐𝑦 = 𝑎𝑞𝑥 + 𝑎𝑠𝑦 = 𝑎(𝑞𝑥 + 𝑠𝑦) ⟹ 𝑎|(𝑏𝑥 + 𝑐𝑦). 

Podemos utilizar a noção de divisibilidade juntamente com o Princípio de Indução 

Finita para demonstrar propriedades sobre números naturais. 

Exemplo: Mostre que para qualquer 𝑛 ∈ ℕ, 𝑛3 + 2𝑛 é sempre divisível por 3. (OLIVEIRA, 

2010). 

A  proposição  é  verdadeira  para  𝑛 = 1,  pois  13 + 2 ⋅ 1 = 3  é  divisível  por  3. 

Suponha a proposição seja verdadeira para um certo 𝑛, ou seja,  𝑛3 + 2𝑛 = 3𝑞, com 𝑞 ∈ ℕ e 

provemos que a mesma seja verdadeira para 𝑛 + 1. Temos, 

 
 
 
 
 
 
 
 
 
 
 
 
 
22 

(𝑛 + 1)3 + 2(𝑛 + 1) = (𝑛3 + 3𝑛2 + 3𝑛 + 1) + (2𝑛 + 2) 

                                                                = (𝑛3 + 2𝑛) + 3(𝑛2 + 𝑛 + 1) 

                                                                = 3𝑞 + 3(𝑛2 + 𝑛 + 1) 

                                                                 = 3(𝑞 + 𝑛2 + 𝑛 + 1) 

Logo, (𝑛 + 1)3 + 2(𝑛 + 1) é divisível por 3.  

Portanto, pelo Princípio de Indução Finita, temos que 𝑛3 + 2𝑛 é divisível por 3 para 

todo 𝑛 ∈ ℕ 

Exemplo: Mostre que a soma dos cubos de três números naturais consecutivos é divisível por 

9. (OLIVEIRA, 2010). 

A proposição é  verdadeira para  𝑛 = 1, pois  13 + 23 + 33 = 1 + 8 + 27 = 36 =

9 ⋅ 4 é divisível por 9. 

Suponha a proposição seja verdadeira para um certo 𝑛, ou seja,  𝑛3 + (𝑛 + 1)3 +

(𝑛 + 2)3 = 9𝑞, com 𝑞 ∈ ℕ e provemos que a mesma seja verdadeira para 𝑛 + 1. Temos, 

(𝑛 + 1)3 + (𝑛 + 2)3 + (𝑛 + 3)3 = (𝑛 + 1)3 + (𝑛 + 2)3 + 𝑛3 + 9𝑛2 + 27𝑛 + 27 

                                                                = 𝑛3 + (𝑛 + 1)3 + (𝑛 + 2)3

⏟                 + 9(𝑛2 + 3𝑛 + 3)                                                                

                                                                =                       9𝑞   +     9(𝑛2 + 3𝑛 + 3) 

                                                                =   9(𝑞 + 𝑛2 + 3𝑛 + 3) 

Logo, 𝑛3 + (𝑛 + 1)3 + (𝑛 + 2)3 é divisível por 9.  

Portanto, pelo Princípio de Indução Finita,  𝑛3 + (𝑛 + 1)3 + (𝑛 + 2)3  é divisível 

por 9 para todo 𝑛 ∈ ℕ 

Quando um número 𝑎 não divide um número 𝑏 fazemos uso de algoritmo conhecido 

como  algoritmo  da  divisão,  devido  ao  matemático  grego  Euclides  de  Alexandria..  Esse 

resultado é crucial para o desenvolvimento da teoria dos números. 

 
 
 
 
 
 
 
 
 
Teorema (Algoritmo da Divisão): Sejam 𝑎  e  𝑏  dois números inteiros com 𝑏 ≠ 0. Existem 

dois únicos números inteiros 𝑞  e  𝑟 tais que:  

23 

𝑏 = 𝑎𝑞 + 𝑟, 

com 0 ≤ 𝑟 < |𝑎|. (HEFEZ, 2016) 

Demonstração: Provemos, primeiro, a existência dos números q e r.  

Pela Propriedade Arquimediana existe 𝑛 ∈ ℤ tal que, 𝑛(−𝑏) > −𝑎, logo 𝑎 − 𝑛𝑏 >

0, isso mostra que 𝑆 = {𝑥 = 𝑎 − 𝑏𝑦; 𝑦 ∈ ℤ}⋂(ℕ⋃{0}) é não vazio e é limitado inferiormente 

por 0. Pelo Princípio da Boa Ordenação, temos que 𝑆 possui um elemento 𝑟 = 𝑎 − 𝑏𝑞 que é 

menor ou igual a todos os elementos de  𝑆, isto é, existem q e r inteiros tais que a = bq + r. 

Provemos que 𝑟 < |𝑏|. Suponhamos que 𝑟 ≥ |𝑏|. Portanto, existe 𝑠 ∈ ℕ⋃{0} tal que 𝑟 =   |𝑏| +

𝑠, então 0 ≤ 𝑠 < 𝑟. Logo, 

𝑠 = 𝑟 − |𝑏| = 𝑎 − 𝑏𝑞 − |𝑏| = 𝑎 − 𝑏(𝑞 ± 1) ∈ 𝑆, 

 com 𝑠 < 𝑟.  O que contradiz o fato de 𝑟 ser o menor elemento S.  

 Vejamos,  agora,  a  unicidade.  Se  𝑎 = 𝑏𝑞 + 𝑟 = 𝑏𝑞′ + 𝑟′,  onde  𝑞,  𝑞′,  𝑟,  𝑟′  são 

números inteiros, com 0 ≤ 𝑟 < |𝑏| e 0 ≤ 𝑟′ < |𝑏|, então temos que −|𝑏| < 𝑟 ≤ 𝑟 − 𝑟′ ≤ 𝑟′ <

|𝑏|. Portanto, |𝑟′ − 𝑟| < |𝑏|. Temos, também, que 𝑏(𝑞 − 𝑞′) = 𝑟 − 𝑟′, o que implica em: 

|𝑏||𝑞′ − 𝑞| = |𝑟′ − 𝑟| < |𝑏| 

Isso só ocorre se 𝑞′ − 𝑞 = 0, ou seja, se 𝑞 = 𝑞′. Decorre daí que 𝑟 = 𝑟′. Assim,  

𝑞 e 𝑟 são únicos. 

Exemplo:  Dividindo  𝑎 = 59  por  𝑏 = 14    obtemos  o  quociente  𝑞 = 4  e  o  resto  𝑟 = 3  que 

satisfazem as condições do algoritmo de Euclides. (ALENCAR FILHO, 1981) 

59 = 14 ⋅ 4 + 3 e 0 ≤ 3 < |14|. 

 
 
 
 
 
 
 
 
 
 
 
 
24 

Podemos,  também,  utilizar  o  Algoritmo  da  Divisão  para  demonstrar  algumas 

propriedades sobre números inteiros. 

Exemplo: O quadrado de um inteiro é da forma 5𝑘 ou 5𝑘 ± 1. (HEFEZ, 2016). 

Seja  𝑛  um  inteiro  qualquer.  Pelo  Algoritmo  da  Divisão,  𝑛 = 5𝑞 + 𝑟,  com  𝑟 ∈

{0, 1, 2, 3, 4}.  Assim, temos as seguintes possibilidades para 𝑛: 

𝑛 = 5𝑞, 𝑛 = 5𝑞 + 1, 𝑛 = 5𝑞 + 2, 𝑛 = 5𝑞 + 3 e 𝑛 = 5𝑞 + 4 

Elevando cada 𝑛 ao expoente 2 temos: 

para 𝑛 = 5𝑞 ⟹ 𝑛2 = (5𝑞)2 = 5 ⋅ 5𝑞2 = 5 ⋅ 𝑘; 

                   para 𝑛 = 5𝑞 + 1 ⟹ 𝑛2 = (5𝑞 + 1)2 = 5 ⋅ (5𝑞2 + 2𝑞) + 1 = 5 ⋅ 𝑘 + 1; 

                   para 𝑛 = 5𝑞 + 2 ⟹ 𝑛2 = (5𝑞 + 2)2 = 5 ⋅ (5𝑞2 + 4𝑞 + 1) − 1 = 5 ⋅ 𝑘 − 1; 

                   para 𝑛 = 5𝑞 + 3 ⟹ 𝑛2 = (5𝑞 + 3)2 = 5 ⋅ (5𝑞2 + 6𝑞 + 2) − 1 = 5 ⋅ 𝑘 − 1; 

                   para 𝑛 = 5𝑞 + 4 ⟹ 𝑛2 = (5𝑞 + 4)2 = 5 ⋅ (5𝑞2 + 8𝑞 + 3) + 1 = 5 ⋅ 𝑘 + 1. 

Portanto, o quadrado de um inteiro é da forma 5𝑘 ou da forma 5𝑘 ± 1. 

Definição: Chama-se divisor comum de dois inteiros 𝑎 e 𝑏 todo inteiro 𝑑 = 0  tal que 𝑑|𝑎 e 

𝑑 |𝑏. (ALENCAR FILHO, 1981) 

Exemplo: Sejam 𝑎 = 9 e 𝑏 = 12. Temos: 

𝐷(9) = { ±1, ± 3, ± 9} 

𝐷(12) = { ±1, ± 2, ±3, ± 4, ± 6, ± 12} 

Os divisores comuns de 9 e 12 que denotaremos por 𝐷(9,12) será o conjunto:  

𝐷(9,12) = {±1, ±3} 

 
 
 
 
 
 
 
 
 
 
 
 
 
Definição: Sejam 𝑎 e 𝑏 dois inteiros não nulos. Chama-se o máximo divisor comum de 𝑎 e 𝑏 

o inteiro positivo 𝑑 (𝑑 > 0) que satisfaz as condições. (ALENCAR FILHO, 1981) 

25 

(1) 𝑑|𝑎 e 𝑑|𝑏  

(2) Se 𝑐|𝑎 e se 𝑐|𝑏 então 𝑐 ≤ 𝑑. 

Denotamos o máximo divisor comum de a e b por (a,b).  

Exemplo: Sejam os inteiros 𝑎 =  16 e 𝑏 = 24. Os divisores comuns positivos de 16 e 24 são 

1, 2, 4 e 8, e como 8 é o maior deles, segue-se que o máximo divisor comum de 16 e 24 é 8, 

ou seja, (16, 24) = 8.  

Definição: Sejam 𝑎 e 𝑏 dois inteiros não nulos. Dizemos que 𝑎 e 𝑏 são primos entre si se, e 

somente se, (𝑎, 𝑏) = 1. (ALENCAR FILHO, 1981) 

Exemplo: Os números 2 e  5 são primos entre si, pois (2, 5) = 1. 

Teorema: Dois números inteiros 𝑎 e 𝑏  não nulos, são primos entre si se, e somente se, existem 

inteiros  𝑥 e 𝑦 tais que  𝑎𝑥 + 𝑏𝑦 = 1. (ALENCAR FILHO, 1981) 

Demonstração: (⟹) Se 𝑎 e 𝑏 são primos entre si, então (𝑎, 𝑏) = 1 e portanto existem inteiros 

𝑥 e y tais que 𝑎𝑥 + 𝑏𝑦 = 1. 

 (⟸) Se existem inteiros 𝑥 e tais eu 𝑎𝑥 + 𝑏𝑦 = 1 e se (𝑎, 𝑏) = 𝑑, então da e 𝑑|𝑏. 

logo, 𝑑|(𝑎𝑥 + 𝑏𝑦) = 1 o que implica que 𝑑 = 1 ou (𝑎, 𝑏) = 1,  isto é, 𝑎 e 𝑏 são primos ente 

si. 

2.3 Sistema de numeração decimal 

O sistema de numeração decimal, também conhecido como sistema de numeração 

na  base  10,  os  números  podem  sem  representados  como  uma  sequência  de  10  símbolos, 

constituídos pelos algarismos abaixo:  

 
 
 
 
 
 
 
 
 
 
 
 
26 

(OLIVEIRA, 2010) 

1, 2, 3, 4, 5, 6, 7, 8, 9, 0. 

Exemplo: O número 1.345 na base 10, é representação de  

1 ⋅ 103 + 3 ⋅ 102 + 4 ⋅ 10 + 5. 

Cada algarismo de um número possui uma ordem que é contada da direita para a 

esquerda.  Logo,  o  algarismo  5  pertence  à  1ª  ordem,  o  algarismo  4  pertence  à  2ª  ordem,  o 

algarismo 3 pertence à 3ª ordem e o algarismo 1 pertence à quarta ordem.  

Cada terna de ordens, que também são contadas da direita para esquerda recebe o 

nome de classe. As classes são separadas por um ponto. Em alguns países como Estados Unidos 

são separados por uma vírgula. (HEFEZ, 2016). 

Temos a seguir os nomes das três primeiras classes juntamente com as suas ordens: 

𝐶𝑙𝑎𝑠𝑠𝑒 𝑑𝑎𝑠 𝑈𝑛𝑖𝑑𝑎𝑑𝑒𝑠            {

𝑢𝑛𝑖𝑑𝑎𝑑𝑒𝑠          1ª ordem 
𝑑𝑒𝑧𝑒𝑛𝑎𝑠           2ª ordem
𝑐𝑒𝑛𝑡𝑒𝑛𝑎𝑠          3ª ordem

𝐶𝑙𝑎𝑠𝑠𝑒 𝑑𝑜 𝑀𝑖𝑙ℎ𝑎𝑟            {

𝑢𝑛𝑖𝑑𝑎𝑑𝑒𝑠 𝑑𝑒 𝑚𝑖𝑙ℎ𝑎𝑟          4ª ordem 
𝑑𝑒𝑧𝑒𝑛𝑎𝑠 𝑑𝑒 𝑚𝑖𝑙ℎ𝑎𝑟           5ª ordem
𝑐𝑒𝑛𝑡𝑒𝑛𝑎𝑠 𝑑𝑒 𝑚𝑖𝑙ℎ𝑎𝑟          6ª ordem

𝐶𝑙𝑎𝑠𝑠𝑒 𝑑𝑜 𝑀𝑖𝑙ℎã𝑜            {

𝑢𝑛𝑖𝑑𝑎𝑑𝑒𝑠 𝑑𝑒 𝑚𝑖𝑙ℎã𝑜          7ª ordem 
𝑑𝑒𝑧𝑒𝑛𝑎𝑠 𝑑𝑒 𝑚𝑖𝑙ℎã𝑜           8ª ordem
𝑐𝑒𝑛𝑡𝑒𝑛𝑎𝑠 𝑑𝑒 𝑚𝑖𝑙ℎã𝑜          9ª ordem

O sistema de numeração decimal surgiu e foi desenvolvido na China e na Índia, tem 

esse nome porque são utilizados 10 algarismos para representar os números. Além disso, esse 

sistema de numeração é posicional, ou seja, o algarismo possui um valor dependendo da posição 

que esteja no número. (HEFEZ, 2016).  

Denotamos, de maneira geral, por 𝑎 = 𝑎𝑛𝑎𝑛−1 … 𝑎1𝑎0 o número inteiro positivo. 

(OLIVEIRA, 2010) 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
27 

𝑎 = 𝑎𝑛10𝑛 + 𝑎𝑛−110𝑛−1 + ⋯ + 𝑎110+𝑎0 

O Teorema a seguir ilustra de uma maneira geral como os sistemas de numeração 

posicionais são organizados.  

Teorema:  Sejam  dados  os  números  inteiros  𝑎  e  𝑏,  com  𝑎 > 0  e  𝑏 > 1.  Existem  números 

inteiros 𝑛 ≥ 0 e 0 ≤ 𝑟0, 𝑟1, … , 𝑟𝑛 < 𝑏, com 𝑟𝑛 ≠ 0 , univocamente determinados, tais que 

𝑎 = 𝑟0 + 𝑟1 ⋅ 𝑏 + 𝑟2 ⋅ 𝑏2 + ⋯ + 𝑟𝑛 ⋅ 𝑏𝑛. 

(HEFEZ, 2016). 

Demonstração:  Utilizaremos  Indução  Completa sobre  𝑎. Se  0 < 𝑎 < 𝑏  e tomando  𝑛 = 0  e 

𝑟0 = 𝑎 temos que:  

𝑎 = 𝑏0𝑟0 = 𝑟0 

Logo, a unicidade fica determinada.  

Suponhamos que seja verdadeiro para um número menor do que 𝑎, em que 𝑎 ≥ 𝑏. 

Iremos mostrar que é verdadeira para 𝑎. Pelo Algoritmo da Divisão temos que existem 𝑞 e 𝑟, 

únicos tais que: 

𝑎 = 𝑏𝑞 + 𝑟, 0 ≤ 𝑟 < 𝑏.     (1) 

Como 0 < 𝑞 < 𝑎, pela hipótese de indução, segue-se que existem números inteiros  

𝑘 ≥ 0  e  0 ≤ 𝑟1, … , 𝑟𝑘+1 < 𝑏, com  𝑟𝑘+1 ≠ 0 determinados de maneira única, tais que  

𝑞 = 𝑟1 + 𝑟2 ⋅ 𝑏 + ⋯ + 𝑟𝑛′+1 ⋅ 𝑏𝑘    (2) 

Substituindo (2) em (1), temos: 

𝑎 = 𝑏𝑞 + 𝑟 = 𝑏(𝑟1 + 𝑟2 ⋅ 𝑏 + ⋯ + 𝑟𝑛′+1 ⋅ 𝑏𝑘) + 𝑟 

Fazendo 𝑟0 = 𝑟 e 𝑛 = 𝑘 + 1, segue-se o resultado.  

 
 
 
 
 
 
 
 
 
 
 
  
 
28 

2.4 Números primos 

Numa seção posterior será tratado sobre a construção de critérios de divisibilidade 

por números primos, por isso se faz necessária uma breve abordagem sobre o assunto.  

Definição: Número primo é todo número, maior do que 1, cujos únicos divisores positivos são 

a unidade e o próprio número. (ÁVILA, 2010) 

Exemplo: Os números 2, 3, 5, 7, 11, 13, 17 e 19 são números primos, pois cada um deles possui 

apenas dois divisores positivos, 1 e ele próprio. 

Definição: Número composto é todo número, maior do que 1, que não é primo. (ALENCAR 

FILHO, 1981) 

Para saber se um número é composto basta verificar se o mesmo pode ser escrito 

como um produto de fatores primos. Veja o exemplo a seguir em que o número 60 é fatorado. 

Exemplo: O números 60 é composto, pois pode ser escrito como o produto 22 ⋅ 3 ⋅ 5, ou seja, 

além de si mesmo e 1 existem outros números que dividem 60.   

Daí podemos concluir que um número inteiro positivo qualquer ou é primo ou é 

composto ou é 1. 

Teorema Fundamental da Aritmética: Todo inteiro maior que 1 pode ser escrito como um 

produto de fatores primos. (HEFEZ, 2016) 

Demonstração: Seja 𝑆 = {𝑛  ∈ ℕ; 𝑛 > 1 e 𝑛 não pode ser escrito como um produto de fatores 

primos}. Basta mostrar que 𝑆 é vazio. Por absurdo, suponha que 𝑆 é diferente do vazio. Pelo 

Princípio da Boa Ordenação, 𝑆 possui um menor elemento. Seja 𝑎 = min 𝑆. Temos que 𝑎 não 

é primo. Portanto, 𝑎 = 𝑏 ⋅ 𝑐, em que 1 < 𝑏 < 𝑎 e 1 < 𝑐 < 𝑎. Como 𝑏 e 𝑐 não pertencem ao 

conjunto 𝑆 eles pdem ser escritos como um produto de números primos.  

 
 
 
 
 
  
 
 
 
 
 
 
29 

𝑏 = 𝑝1 ⋅ 𝑝2 ⋅ 𝑝3 ⋅ … ⋅ 𝑝𝑟 

𝑐 = 𝑞1 ⋅ 𝑞2 ⋅ 𝑞3 ⋅ … ⋅ 𝑞𝑠 

em que os números 𝑝𝑖 e 𝑞𝑗 são primos. Daí, 

𝑎 = (𝑝1 ⋅ 𝑝2 ⋅ 𝑝3 ⋅ … ⋅ 𝑝𝑟)(𝑞1 ⋅ 𝑞2 ⋅ 𝑞3 ⋅ … ⋅ 𝑞𝑠) ⟹ 𝑎 ∉ 𝑆 

Logo, o conjunto 𝑆 é vazio. 

O Teorema a seguir decorre do Teorema Fundamental da Aritmética. Porém, não 

colocaremos aqui como um corolário, pois sua demonstração é considerada uma das mais belas 

da  matemática.  Além  disso,  se  encontra  num  dos  13  livros  de  Euclides  de  Alexandria, 

mostrando daí a sua grande relevância na matemática.  

Teorema: O conjunto dos números primos é infinito. (FERREIRA, 2014) 

Demonstração:  Suponha que existe uma quantidade finita de números  primos  e denotemos 

estes números por  

𝑝1, 𝑝2, 𝑝3, … , 𝑝𝑟, 

Seja 𝑛 = 𝑝1 ⋅ 𝑝2 ⋅ 𝑝3 ⋅ … ⋅ 𝑝𝑟 + 1 > 1 um número inteiro. Logo, pelo Teorema Fundamental da 

Aritmética, existe um número primo 𝑝 tal que 𝑝|𝑛. Mas 𝑝 ∤ 𝑝𝑖, com 𝑖 ∈ {1, 2, 3, … , 𝑟}, pois  se 

𝑝 dividisse 𝑝𝑖 então 𝑝 dividiria 1, o que é impossível. Portanto, o conjunto dos números primos 

é infinito. 

Proposição: Se 𝑛 ≥ 2, e nenhum primo 𝑝, com 2 ≤ 𝑝 ≤ √𝑛, é um fator primo de 𝑛, então 𝑛 é 

primo. 

Demonstração: Seja 𝑛 um número composto, temos pelo Teorema Fundamental da Aritmética 

que 𝑛 = 𝑝1 ⋅ 𝑝2 ⋅ 𝑝3 ⋅ … ⋅ 𝑝𝑟, para fatores primos positivos 𝑝1, 𝑝2, 𝑝3, … , 𝑝𝑟, com 𝑟 ≥ 2 (pois se 

𝑟 = 1, 𝑛 é um número primo). Daí temos que: 

 
 
 
  
 
 
 
 
 
 
 
 
30 

𝑝1 ≤ √𝑛 ou 𝑝2 ≤ √𝑛, pois se 𝑝1 > √𝑛 e 𝑝2 > √𝑛, então  

𝑛 = 𝑝1 ⋅ … ⋅ 𝑝𝑟 ≥ 𝑝1 ⋅ 𝑝2 > √𝑛 ⋅ √𝑛 = 𝑛. 

o que é uma contradição. 

Como 𝑝1 e 𝑝2 são fatores primos quaisquer de 𝑛, concluímos que, se 𝑛 ≥ 2 é um 

inteiro composto, 𝑛 não pode ter dois fatores primos maiores que √𝑛, ou seja, todos os fatores 

primos de 𝑛 (com possível exceção de apenas um) são menores do que √𝑛 

Exemplo:  Para testar se o número 137 é primo observamos, como o uso da calculadora que 

√137 ≈ 11,70.  

Os  números  primos  𝑝  satisfazendo  𝑝 ≤ √137 ≈ 11,70  são  2, 3, 5, 7 , 11. 

Verifica-se que 137 não é divisível por nenhum desses fatores,  e portanto é um número primo.  

Essa  proposição  pode  ser  usada  para  listar  os  números  primos  menores  que  ou 

iguais a 𝑛, com 𝑛  ∈ ℕ. O procedimento para tal listagem é chamado Crivo de Eratóstenes, e 

consiste  em listar os números menores que ou iguais a 𝑛 crivando (demarcando) os múltiplos 

dos números primos menores do que ou iguais a √𝑛.  

Mostraremos,  agora,  como  encontrar  os  números  primos  menores  do  que  100. 

Consideramos como pontos de partida os números primos 𝑝 satisfazendo 2 ≤ 𝑝 ≤ √100 = 10, 

os quais são 2, 3, 5 e 7. 

Primeiramente,  descartamos  o  número  1,  que  não  é  número  primo.  Depois, 

demarcamos (crivamos) os múltiplos de 2 maiores do que 2. Em seguida, crivamos os múltiplos 

de 3 maiores do que 3. Repete-se o procedimento para os números primos 5 e 7.  

Além dos números 2, 3, 5 e 7, todos os números menores do que  100  que não 

foram crivados serão números primos, pois se um número 𝑛, 2 ≤ 𝑝 ≤ 100, não for um número 

primo então ele deverá ter um fator primo 𝑝 satisfazendo 𝑝 ≤ √𝑛 ≤ √100.  

A  tabela  a  seguir  mostra  todos  os  números  compostos  crivados  (marcados)  e  o 

número 1 que também foi crivado. Todos os números que não foram crivados são os números 

primos menores do que 100. 

 
 
 
 
 
 
 
31 

Tabela 1: Crivo de Eratóstenes. 

1 

2 

3 

4 

5 

6 

7 

8 

9 

10 

11  12  13  14  15  16  17  18  19  20 

21  22  23  24  25  26  27  28  29  30 

31  32  33  34  35  36  37  38  39  40 

41  42  43  44  45  46  47  48  49  50 

51  52  53  54  55  56  57  58  59  60 

61  62  63  64  65  66  67  68  69  70 

71  72  73  74  75  76  77  78  79  80 

81  82  83  84  85  86  87  88  89  90 

91  92  93  94  95  96  97  98  99  100 

                                       Fonte: BURTON, 1980, p. 54. 

2.5 Critérios de divisibilidade por 2, 4 e 8. 

Deixamos  reservada  esta  e  as  próximas  subseções  para  alguns  critérios  de 

divisibilidade  da  habilidade  EF06MA05  da  Base  Nacional  Comum  Curricular  do  Ensino 

Fundamental. 

Um número é divisível por 2 quando seu último algarismo for divisível por 2, isto 

é, se o algarismo da unidade for divisível por 2, ou seja, forem 0, 2, 4, 6 ou 8. (SHIMOKAWA, 

2020) 

De outra maneira, temos a proposição seguinte:  

Proposição:  Um  número  da  forma  𝑁  =  10𝑎  +  𝑏 é  divisível  por  2  se,  e  somente  se,  b  é 

divisível por 2. Sendo 𝑁 = 𝑎𝑏 = 10𝑎  +  𝑏. 

Demonstração: (⟹) Temos, pela definição de divisibilidade, que 𝑁  =  10𝑎  +  𝑏 é divisível 

por 2 quando existe 𝑞 ∈ ℤ tal que 10𝑎 + 𝑏 = 2𝑞. Logo, 

                                                                          ⟹ 𝑏 = 2𝑞 − 10𝑎 

10𝑎 + 𝑏 = 2𝑞 ⟹ 𝑏 = 2𝑞 − 10𝑎 

 
 
        
 
 
 
 
 
32 

                                                                          ⟹ 𝑏 = 2(𝑞 − 5𝑎) 

Portanto, 2 divide 𝑏. 

 (⟸) Temos, pela definição de divisibilidade, que b é divisível por 2 quando existe  

𝑞 ∈ ℤ tal que 𝑏 = 2𝑞. Logo, 

                                                              ⟹ 𝑏 + 10𝑎 = 2(𝑞 + 5𝑎) 

𝑏 = 2𝑞 ⟹ 𝑏 + 10𝑎 = 2𝑞 + 10𝑎 

Portanto, 2 divide 𝑁 = 10𝑎 + 𝑏. 

Exemplo: O número 1024 é divisível por 2 pois o algarismo da unidade é 4 e é divisível por 2. 

Proposição:  Um  número  da  forma  N  =  100k  +  ab  é  divisível  por  4  se,  e  somente  se,  ab  é 

divisível  por  4.  Sendo  𝑁 = 𝑎𝑛 … 𝑎2𝑎1𝑎0 = 𝑎𝑛 … 𝑎2𝑎𝑏 = 𝑘𝑎𝑏 = 100𝑘  +  𝑎𝑏.  (SANTOS, 

1998).  

Demonstração: (⟹) Temos, pela definição de divisibilidade, que N = 100k + ab é divisível 

por 4 quando existe  𝑞 ∈ ℤ tal que 100𝑘 + 𝑎𝑏 = 4𝑞. Logo, 

100𝑘 + 𝑎𝑏 = 4𝑞 ⟹ 𝑎𝑏 = 4𝑞 − 100𝑘 

                                                                          ⟹ 𝑎𝑏 = 4𝑞 − 100𝑘 

                                                                          ⟹ 𝑎𝑏 = 4(𝑞 − 25𝑘) 

Portanto, 4 divide 𝑎𝑏. 

 (⟸) Temos, pela definição de divisibilidade, que ab é divisível por 4 quando existe  

𝑞 ∈ ℤ tal que 𝑎𝑏 = 4𝑞. Logo, 

𝑎𝑏 = 4𝑞 ⟹ 𝑎𝑏 + 100𝑘 = 4𝑞 + 100𝑘 

 
 
 
 
 
 
 
 
 
 
 
 
 
33 

                                                            ⟹ 𝑎𝑏 + 100𝑘 = 4(𝑞 + 25𝑘) 

Portanto, 4 divide 𝑁 = 100𝑘 + 𝑎𝑏. 

Exemplo:  O  número  640  é  divisível  por  4  pois  o  número  formado  pelos  dois  últimos 

algarismos,  40 é divisível por 4. 

Proposição: Um número da forma N = 1000k + abc é divisível por 8 se, e somente se, abc é 

divisível por 8. Sendo 𝑁 = 𝑎𝑛 … 𝑎3𝑎2𝑎1𝑎0 = 𝑎𝑛 … 𝑎3𝑎𝑏𝑐 = 𝑘𝑎𝑏𝑐 = 1000𝑘  +  𝑎𝑏𝑐. 

Demonstração: (⟹) Temos, pela definição de divisibilidade, que N = 1000k + abc é divisível 

por 8 quando existe  𝑞 ∈ ℤ tal que 1000𝑘 + 𝑎𝑏𝑐 = 8𝑞. Logo, 

1000𝑘 + 𝑎𝑏𝑐 = 8𝑞 ⟹ 𝑎𝑏𝑐 = 8𝑞 − 1000𝑘 

                                                                          ⟹ 𝑎𝑏𝑐 = 8𝑞 − 1000𝑘 

                                                                          ⟹ 𝑎𝑏𝑐 = 8(𝑞 − 125𝑘) 

Portanto, 8 divide 𝑎𝑏𝑐. 

 (⟸)  Temos,  pela  definição  de  divisibilidade,  que  abc  é  divisível  por  8  quando 

existe  𝑞 ∈ ℤ tal que 𝑎𝑏𝑐 = 8𝑞. Logo, 

𝑎𝑏𝑐 = 8𝑞 ⟹ 𝑎𝑏𝑐 + 1000𝑘 = 8𝑞 + 1000𝑘 

                                                            ⟹ 𝑎𝑏𝑐 + 1000𝑘 = 8(𝑞 + 125𝑘) 

Portanto, 8 divide 𝑁 = 1000𝑘 + 𝑎𝑏𝑐. 

Exemplo:  O  número  1240  é  divisível  por  8  pois  o  número  formado  pelos  três  últimos 

algarismos,  240 é divisível por 8. 

2.6 Critérios de divisibilidade por 3 e 9 

Lema: Tem-se que 3 divide 10𝑛 − 1 para todo 𝑛 ∈ ℕ. (CAMINHA, 2013). 

 
 
 
 
 
 
 
 
 
 
 
 
34 

Demonstração:  Utilizaremos o princípio de indução.  

 (Caso base) Para n = 1 temos que  

3|(101 − 1) = 10 − 1 = 9 

 (Passo  indutivo)  Suponha  que  a  proposição  seja  verdadeira  para  um  certo  n, 

provemos que a mesma seja verdadeira para n+1. Temos, 

3|(10𝑛 − 1) ⟹ 10𝑛 − 1 = 3𝑞 

                                                                        ⟹ 10(10𝑛 − 1) = 30𝑞 

                                                                        ⟹ 10𝑛+1 − 10 = 30𝑞  

                                                                        ⟹ 10𝑛+1 − 1 − 9 = 30𝑞 

                                                                        ⟹ 10𝑛+1 − 1 = 9 + 30𝑞 

                                                                        ⟹ 10𝑛+1 − 1 = 3(3 + 10𝑞) 

Portanto, pelo princípio da Indução Finita, temos que 3 divide 10𝑛 − 1 para todo 

𝑛 ∈ ℕ. 

Proposição:  Um número 𝑁 = 𝑎𝑛 … 𝑎1𝑎0 é divisível por 3 se, e somente se,  𝑎0 + 𝑎1 + ⋯ +

𝑎𝑛 é divisível por 3.  

Demonstração:  Temos que 𝑁 = 10𝑛𝑎𝑛 + ⋯ + 101𝑎1 + 100𝑎0 é divisível por 3 quando existe 
𝑞 ∈ ℤ tal que 10𝑛𝑎𝑛 + ⋯ + 101𝑎1 + 100𝑎0 = 3𝑞. Logo, 

10𝑛𝑎𝑛 + ⋯ + 101𝑎1 + 100𝑎0 = 3𝑞 ⟺ 

                                ⟺ (10𝑛 − 1 + 1)𝑎𝑛 + ⋯ + (101 − 1 + 1)𝑎1 + 1𝑎0 =3q 
                                ⟺ (10𝑛 − 1)𝑎𝑛 + ⋯ + (101 − 1)𝑎1

⏟                     + 𝑎𝑛 + ⋯ + 𝑎1 + 𝑎0

⏟           = 3𝑞 

                                                                𝑆1                                           𝑆2 

Pelo Lema 3|(10𝑛 − 1) para todo 𝑛 ∈ ℕ, logo  

 
 
 
 
 
 
 
 
 
 
 
35 

3|(10𝑛 − 1)𝑎𝑛 + ⋯ + (101 − 1)𝑎1 = 𝑆1 e   𝑆1 = 3𝑟.  

Assim, 

(10𝑛 − 1)𝑎𝑛 + ⋯ + (101 − 1)𝑎1 + 𝑎𝑛 + ⋯ + 𝑎1 + 𝑎0 = 3𝑞 ⟺ 

⟺ 𝑆2 =   𝑎0 + 𝑎1 + ⋯ + 𝑎𝑛 = 3𝑞 − 3𝑟 = 3(𝑞 − 𝑟)  

⟺ 3|𝑎0 + 𝑎1 + ⋯ + 𝑎𝑛 

Exemplo: O número 135 é divisível por 3, pois 3 | (1+3+5) = 9. 

Lema:  9 divide 10𝑛 − 1 para todo 𝑛 ∈ ℕ. 

Demonstração:  Utilizaremos o princípio de indução.  

 (Caso base) Para n = 1 temos que  

9|(101 − 1) = 10 − 1 = 9 

 (Passo  indutivo)  Suponha  que  a  proposição  seja  verdadeira  para  um  certo  n, 

provemos que a mesma seja verdadeira para n+1. Temos, 

9|(10𝑛 − 1) ⟹ 10𝑛 − 1 = 9𝑞 

                                                                       ⟹ 10(10𝑛 − 1) = 90𝑞 

                                                                       ⟹ 10𝑛+1 − 10 = 90𝑞  

                                                                       ⟹ 10𝑛+1 − 1 − 9 = 90𝑞 

                                                                       ⟹ 10𝑛+1 − 1 = 9 + 90𝑞 

                                                                       ⟹ 10𝑛+1 − 1 = 9(1 + 10𝑞) 

Portanto, pelo princípio da Indução Finita, temos que 9 divide 10𝑛 − 1 para todo 

𝑛 ∈ ℕ. 

 
 
 
  
 
 
 
 
 
 
 
 
36 

Proposição: Um número 𝑁 = 𝑎𝑛 … 𝑎1𝑎0 é divisível por 9 se, e somente se,  𝑎0 + 𝑎1 + ⋯ + 𝑎𝑛 

é divisível por 9. A demonstração é análoga à do critério anterior. 

Demonstração:  Temos que 𝑁 = 10𝑛𝑎𝑛 + ⋯ + 101𝑎1 + 100𝑎0 é divisível por 9 quando existe 
𝑞 ∈ ℤ tal que 10𝑛𝑎𝑛 + ⋯ + 101𝑎1 + 100𝑎0 = 9𝑞. Logo, 

10𝑛𝑎𝑛 + ⋯ + 101𝑎1 + 100𝑎0 = 3𝑞 ⟺ 

                                ⟺ (10𝑛 − 1 + 1)𝑎𝑛 + ⋯ + (101 − 1 + 1)𝑎1 + 1𝑎0 =9q 
                                ⟺ (10𝑛 − 1)𝑎𝑛 + ⋯ + (101 − 1)𝑎1

⏟                     + 𝑎𝑛 + ⋯ + 𝑎1 + 𝑎0

⏟           = 9𝑞 

                                                                𝑆1                                           𝑆2 

Pelo Lema, 9|(10𝑛 − 1) para todo 𝑛 ∈ ℕ, logo  

9|(10𝑛 − 1)𝑎𝑛 + ⋯ + (101 − 1)𝑎1 = 𝑆1 e   𝑆1 = 9𝑟.  

Assim,  

(10𝑛 − 1)𝑎𝑛 + ⋯ + (101 − 1)𝑎1 + 𝑎𝑛 + ⋯ + 𝑎1 + 𝑎0 = 9𝑞 ⟺ 

⟺ 𝑆2 =   𝑎0 + 𝑎1 + ⋯ + 𝑎𝑛 = 9𝑞 − 9𝑟 = 9(𝑞 − 𝑟)  

⟺ 9|(𝑎0 + 𝑎1 + ⋯ + 𝑎𝑛) 

Exemplo: O número 2493 é divisível por 9, pois 9 | (2+4+9+3) = 18. 

2.7 Critério de divisibilidade por 6 

Proposição: Um número 𝑛 = 𝑎𝑟 … 𝑎1𝑎0 é divisível por 6 se, e somente se, é divisível por 2 e 

por 3. (SILVA, 2019) 

Demonstração: (⟹) Seja 𝑛 ∈ ℕ. Como 6|𝑛 então existe 𝑞 ∈ ℕ tal que 𝑛 = 6𝑞. Então, temos 

que  𝑛 = 2 ⋅ 3𝑞 = 3 ⋅ 2𝑞 ⟹  𝑛 = 2𝑟 = 3𝑠,  com 𝑟  e  𝑠  números  inteiros.    Consequentemente, 

pela definição de divisibilidade, 2|𝑛 e 3|𝑛. Logo, se n é divisível por 6 então 𝑛 é divisível por 

2 e 3. 

 
 
 
 
 
 
 
 
 
 
 
37 

 (⟸) Suponhamos que 2|𝑛 e 3|𝑛. Logo, existem 𝑘, 𝑙 ∈ ℕ tais que 𝑛 = 2 ⋅ 𝑘 e 𝑛 =

3 ⋅ 𝑙 . Temos que: 

3 − 2 = 1 ⟹ 3𝑛 − 2𝑛 = 𝑛 ⟹ 3 ⋅ 2 ⋅ 𝑘  − 2 ⋅ 3 ⋅ 𝑙 = 𝑛 ⟹ 2 ⋅ 3 ⋅ (𝑘 − 𝑙) = 𝑛 

                                                                                                       ⟹ 6 ⋅ (𝑘 − 𝑙) = 𝑛 

Logo, pela definição de divisibilidade, 6|𝑛.  

Portanto, 𝑛 é divisível por 6 se, e somente se, 𝑛 é divisível por 2 e por 3.  

Exemplo: O número 132 é divisível por 6, pois é divisível por 2 (é par) e é divisível por 3 (1 + 

2 + 3 = 6 é divisível por 3). 

2.8 Critério de divisibilidade por 5 e 10 

Proposição: Um número 𝑁 = 𝑎𝑛 … 𝑎1𝑎0 é divisível por  5  se, e somente se,  𝑎0 = 0 ou 𝑎0 =

5. (SILVA, 2019) 

Demonstração:  Como  𝑁 = 10𝑘𝑎𝑘 + ⋯ + 10𝑎1 + 𝑎0,  então  colocando  10  em  evidência, 
temos: 

𝑁 = 10(10𝑘−1𝑎𝑘 + ⋯ + 𝑎1) + 𝑎0 

Como  10  é  divisível  por  5,  então  𝑁  é  divisível  por  5  se,  e  somente  se,  𝑎0  for 

divisível por 5, ou seja, 𝑎0 = 0 ou 𝑎0 = 5. 

Exemplo: O número 125 é divisível por 5, pois o algarismo da unidade é 5. 

Proposição: Um número 𝑁 = 𝑎𝑛 … 𝑎1𝑎0 é divisível por 10 se, e somente se,  𝑎0 = 0. (SILVA, 

2019) 

Demonstração:  Como  𝑁 = 10𝑘𝑎𝑘 + ⋯ + 10𝑎1 + 𝑎0,  então  colocando  10  em  evidência, 
temos: 

 
 
 
 
 
 
 
 
 
 
 
 
 
38 

𝑁 = 10(10𝑘−1𝑎𝑘 + ⋯ + 𝑎1) + 𝑎0 

Como 10 é divisível por 10, então 𝑁 é divisível por 10 se, e somente se, 𝑎0 for 

divisível por 10, ou seja, 𝑎0 = 0.  

Exemplo: O número 240 é divisível por 10, pois o algarismo da unidade é 0. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
39 

3  CONSTRUINDO CRITÉRIOS DE DIVISIBILIDADE 

Neste capítulo trataremos de congruência modular e suas aplicações. Mostraremos 

como  construir  alguns  critérios  de  divisibilidade,  faremos  a  construção  dos  critérios  de 

divisibilidade por 11, 13, 17 e 19 e mostraremos uma tabela com os critérios de divisibilidade 

por um número primo p menor que 100. 

3.1 Congruência modular 

Mostraremos, agora, algumas definições e proposições importantes sobre aritmética 

modular. 

Definição:  Seja  m  um  número  inteiro  não  nulo,  positivo.  Dois  inteiros  a  e  b  serão  ditos 

congruentes módulo m se os restos da divisão de a e b por m forem iguais. Quando a e b são 

congruentes módulo m, escrevemos 

𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) 

Caso  os  números  não  sejam  congruentes,  utiliza-se  a  notação    𝑎 ≢ 𝑏 (𝑚𝑜𝑑 𝑚). 

(RIBEIRO, 2020) 

Exemplo:  Temos  que  26 ≡ 11 (𝑚𝑜𝑑 5),  pois  se  dividirmos  26  por  5  teremos  resto  1  e  se 

dividirmos 11 por 5 também teremos resto 1, ou seja, 26 e 11 deixam mesmo resto na divisão 

por 5.  

Proposição:  Se    𝑎, 𝑏, 𝑚  ∈  ℕ,  tem-se  que    𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚)  se,  e  somente  se,  𝑚|(𝑎 –  𝑏). 

(RIBEIRO, 2020). 

Demonstração:  Sejam    𝑎 = 𝑚𝑞 + 𝑟,  com  0 ≤ 𝑟 < 𝑚  e  𝑏 =  𝑚𝑘 + 𝑠,  com  0 ≤ 𝑠 < 𝑚,  as 

divisões euclidianas de 𝑎 e 𝑏 por 𝑚. Logo, 

𝑎 − 𝑏 = 𝑚(𝑞 − 𝑘) + (𝑟 − 𝑠) 

 
 
 
 
 
 
 
 
 
 
 
 
40 

Se 𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) então 𝑟 = 𝑠 o que implica que 𝑚|(𝑎 –  𝑏). Reciprocamente, se 𝑚|(𝑎 –  𝑏) 

então 𝑟 − 𝑠 = 0 ⟹ 𝑟 = 𝑠, pois |𝑟 − 𝑠| < 𝑚.  

Exemplo: Temos que 17 ≡ 1 (𝑚𝑜𝑑 4), pois 4|(17 – 1) = 16. 

Proposição (Propriedades da congruência): Sejam 𝑎, 𝑏, 𝑐, 𝑑, 𝑚 e 𝑛 ∈ ℤ, 𝑛 ≥ 1. Temos que:  

1.  Se 𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) e 𝑐 ≡ 𝑑 (𝑚𝑜𝑑 𝑚) então 𝑎 + 𝑐 ≡ 𝑏 + 𝑑 (𝑚𝑜𝑑 𝑚); 

Demonstração: Temos que, se 𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) 𝑒 𝑐 ≡ 𝑑 (𝑚𝑜𝑑 𝑚), então existem inteiros 𝑞 e 

𝑟 tais que 𝑎 –  𝑏  = 𝑞𝑚 e 𝑐 –  𝑑  =  𝑟𝑚. Logo, (𝑎  +  𝑐) – (𝑏  +  𝑑)   =   ( 𝑎 –  𝑏)   +   (𝑐 –  𝑑)   =

 𝑞𝑚  + 𝑟𝑚  =   (𝑞  +  𝑟)𝑚, o que implica que 𝑎  +  𝑐 ≡  𝑏  +  𝑑 (𝑚𝑜𝑑 𝑚). 

2.  Se 𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) e 𝑐 ≡ 𝑑 (𝑚𝑜𝑑 𝑚) então 𝑎𝑐 ≡ 𝑏𝑑 (𝑚𝑜𝑑 𝑚); 

Demonstração: Temos que, se 𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) 𝑒 𝑐 ≡ 𝑑 (𝑚𝑜𝑑 𝑚), então existem inteiros 𝑞 e 

𝑟 tais que 𝑎 –  𝑏  = 𝑞𝑚 e 𝑐 –  𝑑  =  𝑟𝑚. 

Logo, 

                      𝑎𝑐 –  𝑏𝑑 =   (𝑏 + 𝑞𝑚)(𝑑 + 𝑟𝑚) − 𝑏𝑑                 

                                     =  𝑏𝑑 + 𝑏𝑟𝑚 + 𝑑𝑞𝑚  + 𝑞𝑟𝑚2 − 𝑏𝑑                             

                                     = (𝑏𝑟 + 𝑑𝑞  + 𝑞𝑟𝑚)𝑚 

o que implica que 𝑎𝑐 ≡  𝑏𝑑 (𝑚𝑜𝑑 𝑚). 

3.  Se 𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) então 𝑎𝑛 ≡ 𝑏𝑛 (𝑚𝑜𝑑 𝑚); 

Demonstração:  A  proposição  é  verdadeira  para  𝑛 = 1  (por  hipótese).  Suponha  que  seja 

verdadeira para 𝑛 e provemos que seja verdadeira para 𝑛 + 1.  

Temos: 

𝑎𝑛 ≡ 𝑏𝑛 (𝑚𝑜𝑑 𝑚) 𝑒 𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚). 

Pela propriedade 2, temos: 

 
 
 
 
 
 
 
 
 
 
 
 
41 

𝑎𝑛𝑎 ≡ 𝑏𝑛 𝑏(𝑚𝑜𝑑 𝑚)   ⟹   𝑎𝑛+1 ≡ 𝑏𝑛+1 (𝑚𝑜𝑑 𝑚), 

Logo, a proposição é verdadeira para  𝑛 + 1. Portanto, a proposição é verdadeira 

para todo 𝑛 ∈ ℕ. 

4.  Se 𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) e 𝑏 ≡ 𝑐 (𝑚𝑜𝑑 𝑚) então 𝑎 ≡ 𝑐 (𝑚𝑜𝑑 𝑚). 

Demonstração: Temos que, se 𝑎 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) 𝑒 𝑏 ≡ 𝑐 (𝑚𝑜𝑑 𝑚), então existem inteiros 𝑞 e 

𝑟 tais que 𝑎 –  𝑏  = 𝑞𝑚 e 𝑏 –  𝑐  =  𝑟𝑚. 

Logo, 

𝑎 − 𝑐  = (𝑎 − 𝑏) + (𝑏 − 𝑐) 

=  𝑞𝑚 + 𝑟𝑚 

= (𝑞 + 𝑟)𝑚 

o que implica que 𝑎 ≡  𝑐 (𝑚𝑜𝑑 𝑚). 

3.2 Aplicações da congruência modular 

Exemplo: Mostre que 41|(220 − 1). (BURTON, 1980) 

Começamos notando que 25 ≡ −9 (𝑚𝑜𝑑 41). Logo, pelo item 3 das Propriedades 

da congruência, temos que (25)4 ≡ (−9)4 (𝑚𝑜𝑑 41) ⟹ 220 ≡ 81 ⋅ 81 (𝑚𝑜𝑑 41). Mas 81 ≡

−1 (𝑚𝑜𝑑 41), logo  81 ⋅ 81  ≡ 1 (𝑚𝑜𝑑 41). Pela Propriedade 4 da congruência, temos  

220 ≡ 81 ⋅ 81  ≡ 1 (𝑚𝑜𝑑 41) 

Portanto, 41|(220 − 1). 

Exemplo: Mostre que 31|(2015 − 1). (MARTINEZ, 2018) 

Equivalentemente,  precisamos  mostrar  que  2015 ≡ 1 (𝑚𝑜𝑑 31)  Começamos 

notando  que  20 ≡ −11 (𝑚𝑜𝑑 31).  Logo,  pela  parte  3  da  Proposição,  temos  que  202 ≡

 
 
 
 
 
 
 
 
 
 
 
 
 
 
(−11)2 (𝑚𝑜𝑑 31) ⟹ 202 ≡ 121 (𝑚𝑜𝑑 31).  Mas  121 ≡ −3 (𝑚𝑜𝑑 31), 

logo 

  202   ≡

−3 (𝑚𝑜𝑑 31). Pela Propriedade 2 da congruência temos  

42 

20 ⋅ 202 ≡ (−11) ⋅ (−3)(𝑚𝑜𝑑 31) ⟹ 203 ≡ 33 (𝑚𝑜𝑑 31) 

Como 33 ≡ 2 (𝑚𝑜𝑑 31) então 203 ≡ 2 (𝑚𝑜𝑑 31). Elevando a 5, temos que: 

2015 ≡ 32 (𝑚𝑜𝑑 31)  

Como 32 ≡ 1 (𝑚𝑜𝑑 31) então 2015 ≡ 1 (𝑚𝑜𝑑 31). Portanto, 31|2015 − 1. 

Além  de  verificar  se  um  número  é  divisível  por  outro  utilizamos  a  congruência 

modular para descobrir o resto da divisão de um número.  

Exemplo: Qual é o resto da divisão de 245 ao ser dividido por 7 ? (DOMINGUES, 1991) 

Começamos  notando  que  23 ≡ 1 (𝑚𝑜𝑑 7).  Logo,  pela  Propriedade  3  da 

congruência, temos que: 

(23)15 ≡ 115 (𝑚𝑜𝑑 7) ⟹ 245 ≡ 1(𝑚𝑜𝑑 7). 

Portanto, o resto da divisão de de 245 ao ser dividido por 7 é 1.  

Exemplo: Determine o resto da divisão da soma 1! + 2! + 3! + 4! + ⋯ + 99! + 100! por 12. 

(BURTON, 1980) 

Observamos, primeiro, que 4!   ≡ 24 ≡ 0 (𝑚𝑜𝑑 12). Assim, para 𝑘 ≥ 4 temos que: 

𝑘! ≡ 4! ⋅ 5 ⋅ 6 ⋅⋅⋅ 𝑘 ≡ 0 ⋅ 5 ⋅ 6 ⋅⋅⋅ 𝑘 ≡ 0 (𝑚𝑜𝑑 12) 

Dessa forma, temos que: 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
43 

1! + 2! + 3! + 4! + ⋯ + 99! + 100! ≡ 1! + 2! + 3! + 0 + ⋯ + 0 + 0 ≡ 9 (𝑚𝑜𝑑 12) 

Consequentemente, a soma em questão deixa resto 9 quando dividido por  12. 

Podemos, 

também,  utilizar  congruência  para  demonstrar  os  critérios  de 

divisibilidade.  Seguem  alguns  critérios  de  divisibilidade  e  suas  demonstrações  utilizando 

congruência. 

Proposição: Um número 𝑁 é divisível por 9 se, e somente se, a soma de seus algarismos é 

divisível por 9.  

Demonstração:  Digamos  que  𝑁 = 𝑎𝑛𝑎𝑛−1 … 𝑎1𝑎0.  Como  10 ≡ 1 (𝑚𝑜𝑑 9)  então  10𝑛 ≡
1 (𝑚𝑜𝑑 9). Assim, 

𝑎0  ≡ 
10 ⋅ 𝑎1  ≡ 
102 ⋅ 𝑎2  ≡ 
⋮ 
10𝑛 ⋅ 𝑎𝑛  ≡ 

𝑎0 (𝑚𝑜𝑑 9) 
𝑎1 (𝑚𝑜𝑑 9) 
𝑎2 (𝑚𝑜𝑑 9) 

𝑎𝑛 (𝑚𝑜𝑑 9) 

Logo, 

𝑁 = 𝑎0 + 10 ⋅ 𝑎1 + 102 ⋅ 𝑎2 + ⋯ + 10𝑛 ⋅ 𝑎𝑛 ≡ 𝑎0+𝑎1 + 𝑎2 + ⋯ + 𝑎𝑛 (𝑚𝑜𝑑 9) 

Portanto, 𝑁 = 𝑎𝑛 … 𝑎1𝑎0 é divisível por 9 se, e somente se,  𝑎0 + 𝑎1 + ⋯ + 𝑎𝑛 é 

divisível por 9.  

Proposição: Um número 𝑁 = 𝑎𝑛 … 𝑎1𝑎0 é divisível por 11 se, e somente se,  𝑎0 − 𝑎1 + ⋯ +
(−1)𝑛𝑎𝑛 é divisível por 11. (DOMINGUES, 1991) 

Demonstração: Temos que, 10 ≡ −1 (𝑚𝑜𝑑 11) então 10𝑛 ≡ −1 (𝑚𝑜𝑑 11)  se 𝑛 for ímpar e 

10𝑛 ≡ 1 (𝑚𝑜𝑑 11) se 𝑛 for par. Assim, 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
44 

𝑎0  ≡ 

𝑎0 (𝑚𝑜𝑑 11) 

10 ⋅ 𝑎1  ≡  −𝑎1 (𝑚𝑜𝑑 11) 
102 ⋅ 𝑎2  ≡ 
⋮ 
10𝑛 ⋅ 𝑎𝑛  ≡ 

𝑎2 (𝑚𝑜𝑑 11) 

(−1)𝑛 ⋅ 𝑎𝑛 (𝑚𝑜𝑑 11) 

Logo, 

𝑁 = 𝑎0 + 10 ⋅ 𝑎1 + 102 ⋅ 𝑎2 + ⋯ + 10𝑛 ⋅ 𝑎𝑛 ≡ 𝑎0−𝑎1 + 𝑎2 − ⋯ + (−1)𝑛 ⋅ 𝑎𝑛 (𝑚𝑜𝑑 11) 

Portanto,  𝑁 = 𝑎𝑛 … 𝑎1𝑎0  é  divisível  por  11  se,  e  somente  se,    𝑎0 − 𝑎1 + ⋯ +

(−1)𝑛𝑎𝑛 é divisível por 11.  

3.3 Construção de critérios de divisibilidade 

Definição: Chamamos de congruência linear em  uma variável  𝑎 uma congruência da forma 

𝑎𝑥 ≡ 𝑏 (𝑚𝑜𝑑 𝑚),  onde  𝑎  e  𝑏  são  inteiros  quaisquer,  𝑚  é  um  inteiro  positivo  e  𝑥  é  uma 

incógnita. (ALENCAR FILHO, 1981) 

Dessa forma, todo número inteiro 𝑥0 tal que 𝑎𝑥0 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) é uma solução da 

congruência linear.  

Definição: Dizemos que uma solução da congruência 𝑎𝑥 ≡ 𝑏 (𝑚𝑜𝑑 𝑚) é unica módulo m, se 

quaisquer duas soluções são congruentes módulo m. 

Exemplo: A congruência linear 3𝑥 ≡ 9 (𝑚𝑜𝑑 12) tem como uma solução o valor 𝑥0 = 3, pois       

3 ⋅ 3 ≡ 9 (𝑚𝑜𝑑 12).   

Como  12|(3𝑥 − 9) então  existe  𝑘 ∈ ℤ  tal  que  12𝑘 = 3𝑥 − 9.  Assim,  3𝑥 = 9 +

12𝑘 e consequentemente 𝑥 = 3 + 4𝑘. Logo, todos os inteiros da forma 3 + 4𝑘 também será 

solução da congruência linear. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
45 

Definição: Seja 𝑚 um inteiro não nulo, positivo e 𝑎 um inteiro qualquer. Dizemos que 𝑥 é um 

inverso multiplicativo de a módulo 𝑚 se vale a igualdade: 

𝑎𝑥 ≡ 1 (𝑚𝑜𝑑 𝑚) 

(RIBEIRO, 2020). 

Exemplo: Um inverso multiplicativo de 3 módulo 7 é 5, pois  3 ⋅ 5 ≡ 1 (𝑚𝑜𝑑 7 ) . 

Teorema: Se 𝑎 e 𝑚 são inteiros primos entre si e 𝑚 > 1, então existe um  inverso multiplicativo 

de 𝑎 módulo 𝑚. (MARTINEZ, 2018) 

Demonstração:  Como  (𝑎, 𝑚) = 1,  então  𝑠𝑎  +  𝑡𝑚  =  1.  Assim  𝑠𝑎 + 𝑡𝑚 = 1 (𝑚𝑜𝑑 𝑚). 

Como 𝑡𝑚 = 0 (𝑚𝑜𝑑 𝑚) segue-se que 𝑠𝑎 = 1 (𝑚𝑜𝑑 𝑚). Logo, 𝑠 é o inverso de 𝑎 modulo 𝑚. 

Teorema: O inverso multiplicativo único. (MARTINEZ, 2018) 

Demonstração: Se 𝑎𝑥0 ≡ 𝑎𝑥0′ ≡ 1 (𝑚𝑜𝑑 𝑚) temos: 

𝑥0 ≡ 𝑥0 ⋅ 1 ≡ 𝑥0(𝑎𝑥0

′ ) ≡ (𝑥0𝑎)𝑥0

′ ≡ 1 ⋅ 𝑥0

′   ≡ 𝑥0

′ (𝑚𝑜𝑑 𝑚)  

Logo, 𝑥0 ≡ 𝑥0

′ (𝑚𝑜𝑑 𝑚) e o inverso multiplicativo é único. 

Proposição:  Se  𝑝  é  primo  e  𝑥0  é  solução  de  𝑎𝑥 ≡ 1 (𝑚𝑜𝑑 𝑝)  então    −(𝑝 − 𝑥0)  é  também 

solução de 𝑎𝑥 ≡ 1 (𝑚𝑜𝑑 𝑝). 

Demonstração: Note, primeiro que:  𝑥0 ≡ −(𝑝 − 𝑥0) (𝑚𝑜𝑑 𝑝), pois 

𝑝|(𝑥0 − (−(𝑝 − 𝑥0))) =   𝑥0+ 𝑝 − 𝑥0 = 𝑝. 

Pela  Propriedade  3  da  congruência  temos  que,  𝑥0 ≡ −(𝑝 − 𝑥0) (𝑚𝑜𝑑 𝑝)  e  𝑎 ≡

𝑎 (𝑚𝑜𝑑 𝑝),  então  𝑎𝑥0 ≡ −𝑎(𝑝 − 𝑥0)(𝑚𝑜𝑑 𝑝).  Agora,  pela  Propriedade  4  da  congruência 
temos que −𝑎(𝑝 − 𝑥0) ≡ 𝑎𝑥0 ≡ 1 (𝑚𝑜𝑑 𝑝) então −𝑎(𝑝 − 𝑥0) ≡ 1 (𝑚𝑜𝑑 𝑝).  

 
 
 
 
 
 
 
 
 
 
 
 
 
46 

Esta  última  proposição  será  muito  útil  para  a  construção  de  critérios  de 

divisibilidade pelo método da quebra na unidade. E também será utilizada na construção do 

algoritmo computacional em linguagem Pascal na seção seguinte.  

Quebrar um número na unidade significa remover os algarismos da unidade para 

manipulá-los  algebricamente.  Assim,  por  exemplo,  o  número  248  torna-se  248 = 240 + 8 

quando quebramos a sua unidade. 

Teorema  (Quebra  na  unidade):  Sejam  𝑛 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2... 𝑎2𝑎1𝑎0  um  número  natural,  𝑝  um 

número  primo  (diferente  de  2  e  5)  e  𝑥 ∈ ℤ  tal  que  10𝑥 ≡ 1 (𝑚𝑜𝑑 𝑝).  O  critério  de 

divisibilidade por 𝑝 então é o seguinte: se 𝑚 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2... 𝑎2𝑎1 + 𝑥𝑎0 então 𝑝 divide 𝑛, se 

e somente, se 𝑝 divide 𝑚. (RIBEIRO, 2020). 

 Demonstração: Temos que  

𝑛 = 𝑎𝑟10𝑟 + 𝑎𝑟−110𝑟−1 + 𝑎𝑟−210𝑟−2 + ⋯ + 𝑎2102 + 𝑎110 + 𝑎0   (4) 
𝑚 = 𝑎𝑟10𝑟−1 + 𝑎𝑟−110𝑟−2 + 𝑎𝑟−210𝑟−3 + ⋯ + 𝑎210 + 𝑎1 + 𝑥𝑎0  (5) 

Multiplicando a equação (2) por 10 temos: 

10𝑚 = 𝑎𝑟10𝑟 + 𝑎𝑟−110𝑟−1 + 𝑎𝑟−210𝑟−2 + ⋯ + 𝑎2102 + 𝑎110 + 10𝑥𝑎0   (6) 

Subtraindo a equação (4) pela equação (6) temos: 

𝑛 − 10𝑚 =   𝑎0 −  10𝑥𝑎0 

𝑛 = 10𝑚 + (1 − 10𝑥)𝑎0 

Como  𝑥  é  o  inverso  multiplicativo  de  10  módulo  𝑝, então  o  termo  (1 − 10𝑥)  é 

divisível por 𝑝. Logo,  

Portanto,  

𝑛 − 10𝑚 = 𝑘𝑝 

𝑛 ≡ 10𝑚 (𝑚𝑜𝑑 𝑝) 

 
 
 
 
 
 
 
 
 
 
 
47 

Assim,  𝑝|10𝑚, se e somente, se 𝑝|𝑛. Como 𝑝 é primo e não divide 10 (pois 𝑝 não 

é igual a 2 nem a 5), então temos que 𝑝 divide 𝑛 se, e somente se, 𝑝 divide 𝑚. 

Fazendo 𝑎 = 𝑎𝑛 … 𝑎1 e 𝑏 = 𝑎0, um número natural da forma 𝑛 = 10𝑎 + 𝑏 e 𝑝 um 

número  primo  (diferente  de  2  e  5)  então  𝑝|(10𝑎 + 𝑏),  se  e  somente,  se  𝑝|(𝑎 + 𝑥𝑏).  Dessa 

forma, podemos construir critérios de divisibilidade por qualquer número primo diferente de 2 

e 5. 

Pelo Teorema da Quebra na Unidade, para construir um critério de divisibilidade 

por 3 precisamos encontrar um inverso multiplicativo de 10 módulo 3, ou seja, encontrar um 

𝑥 ∈ ℤ tal que 10𝑥 ≡ 1 (𝑚𝑜𝑑 3). Como 10 ⋅ 1 ≡ 1 (𝑚𝑜𝑑 3)  então 1 é o inverso multiplicativo 

de 10 módulo 3. 

Portanto,  dado  um  número  natural  da  forma  𝑁 = 10𝑎 + 𝑏  e  𝑝 = 3,  tem-se  que 

3|(10𝑎 + 𝑏), se e somente, se 3|(𝑎 + 𝑏). 

Podemos  verificar  que  o  critério  de  divisibilidade  por  3  da  seção  anterior  é 

equivalente a esse critério.  

Proposição: Um número 𝑁 = 𝑎𝑛 … 𝑎1𝑎0 é divisível por 3 se, e somente se,  𝑎𝑛 + ⋯ + 𝑎1 + 𝑎0 

é divisível por 3. 

Demonstração: Temos que, 3|𝑎𝑛 … 𝑎1𝑎0 se, e somente se, 𝑎𝑛 … 𝑎1+𝑎0. Como, 3|𝑎𝑛 … 𝑎1+𝑎0 
se, e somente se, 3|(10𝑛−1𝑎𝑛 + 10𝑛−2𝑎𝑛−1 + ⋯ +10𝑎2+𝑎1+𝑎0) e como: 

10𝑛−1  ≡ 
10𝑛−2  ≡ 
⋮ 
101  ≡ 
100  ≡ 

1 (𝑚𝑜𝑑 3) 
1 (𝑚𝑜𝑑 3) 

1 (𝑚𝑜𝑑 3) 
1 (𝑚𝑜𝑑 3) 

Então, 

10𝑛−1 ⋅ 𝑎𝑛+10𝑛−2 ⋅ 𝑎𝑛−1 + ⋯ + 10 ⋅ 𝑎2 + 𝑎1 + 𝑎0 ≡   𝑎𝑛 + 𝑎𝑛−1 + ⋯ + 𝑎1 + 𝑎0(𝑚𝑜𝑑 3) 

Logo, 3|𝑎𝑛 … 𝑎1𝑎0 se, e somente se, 3|(𝑎𝑛 + 𝑎𝑛−1 + ⋯ + 𝑎2 + 𝑎1 + 𝑎0). 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
48 

3.4 Critérios de divisibilidade por 11 e 13 

Pelo Teorema da Quebra na Unidade, para construir um critério de divisibilidade 

por 11 precisamos encontrar um inverso multiplicativo de 10 módulo 11, ou seja, encontrar um 

𝑥 ∈ ℤ  tal  que  10𝑥 ≡ 1 (𝑚𝑜𝑑 11).  Como  10 ⋅ (−1) ≡ 1 (𝑚𝑜𝑑 11)    então  (−1)  é  o  inverso 

multiplicativo de 10 módulo 11. 

Portanto, dado um número natural da forma 𝑁 = 10𝑎 + 𝑏. Logo, 11|(10𝑎 + 𝑏), se 

e somente, se 11|(𝑎 − 𝑏).  

Exemplo: Aplicando esse critério para 154, obtemos: 

15 − 4 = 11 

Como 11|11, então 11| 154.  

Para construir um critério de divisibilidade por 13 precisamos encontrar um inverso 

multiplicativo de 10 módulo 13. Como 10 ⋅ 4 ≡ 1 (𝑚𝑜𝑑 13)  então 4 é o inverso multiplicativo 

de 10 módulo 13. 

Portanto, dado um número natural da forma 𝑁 = 10𝑎 + 𝑏. Logo, 13|(10𝑎 + 𝑏) se 

e somente, se 13|(𝑎 + 4𝑏). 

Exemplo: Aplicando esse critério para 169, obtemos: 

16 + 4 ⋅ 9 = 16 + 36 = 52 

Como 13| 52, então 13| 169. 

Como estamos utilizando o Teorema para construir esses critérios de divisibilidade 

não  é  necessário  demonstrar  esses  critérios.  O  Teorema  já  garante  que  esses  critérios  são 

verdadeiros.   

É importante notar que a partir desse Teorema podemos construir infinitos critérios 

de divisibilidade por um número primo, pois há infinitos inversos multiplicativos de 10  módulo 

 
 
 
 
 
 
 
 
 
 
 
49 

𝑝. Porém, não faz sentido encontrar inversos multiplicativos maior do que 𝑝, pois deixaria o 

critério computacionalmente ruim. Por isso, estamos interessados em encontrar apenas inversos 

multiplicativos menores do que 𝑝. 

3.5 Critérios de divisibilidade por 17 e 19 

Prosseguindo as construções de critérios de divisibilidade temos que, para construir 

um  critério  de  divisibilidade  por  17  precisamos  encontrar  um  inverso  multiplicativo  de  10 

módulo  17.  Como  10 ⋅ (−5) ≡ 1 (𝑚𝑜𝑑 17)    então  (−5)  é  o  inverso  multiplicativo  de  10 

módulo 17. 

Portanto, dado um número natural da forma 𝑁 = 10𝑎 + 𝑏.  Logo, 17|(10𝑎 + 𝑏), 

se e somente, se 17|(𝑎 − 5𝑏). 

Exemplo: Aplicando esse critério para 272, obtemos: 

27 − 5 ⋅ 2 = 17 

Como 17|17, então 17| 272.  

Para construir um critério de divisibilidade por 19 precisamos encontrar um inverso 

multiplicativo de 10 módulo 19. Como 10 ⋅ 2 ≡ 1 (𝑚𝑜𝑑 19)  então 2 é o inverso multiplicativo 

de 10 módulo 19. 

Portanto, dado um número natural da forma 𝑁 = 10𝑎 + 𝑏. Logo, 19|(10𝑎 + 𝑏), se 

e somente, se 19|(𝑎 + 2𝑏).  

Exemplo: Aplicando esse critério para 304, obtemos: 

30 + 2 ⋅ 4 = 30 + 8 = 38 

Como  38 = 2 ⋅ 19, então 19| 38. Daí, como 19| 38, então 19| 304. 

 
 
 
 
 
 
 
 
 
 
 
 
 
50 

3.6 Tabela de critérios de divisibilidade por alguns primos 

Nessa seção iremos mostrar uma tabela com os critérios de divisibilidade por alguns 

primos. Nessa tabela temos a forma aditiva e subtrativa de cada número primo, ou seja, há dois 

critérios de divisibilidade para cada número primo dado.  

Tabela 2: Critérios de divisibilidade de alguns números primos 

Número Primo 
3 
7 
11 
13 
17 
19 
23 
29 
31 
37 
41 
43 
47 
53 
59 
61 
67 
71 
73 
79 
83 
89 
97 

Forma Aditiva 
𝑎 + 𝑏 
𝑎 + 5𝑏 
𝑎 + 10𝑏 
𝑎 + 4𝑏 
𝑎 + 12𝑏 
𝑎 + 2𝑏 
𝑎 + 7𝑏 
𝑎 + 3𝑏 
𝑎 + 28𝑏 
𝑎 + 26𝑏 
𝑎 + 37𝑏 
𝑎 + 13𝑏 
𝑎 + 33𝑏 
𝑎 + 16𝑏 
𝑎 + 6𝑏 
𝑎 + 55𝑏 
𝑎 + 47𝑏 
𝑎 + 64𝑏 
𝑎 + 22𝑏 
𝑎 + 8𝑏 
𝑎 + 25𝑏 
𝑎 + 9𝑏 
𝑎 + 68𝑏 

Forma Subtrativa 
𝑎 − 2𝑏 
𝑎 − 2𝑏 
𝑎 − 𝑏 
𝑎 − 9𝑏 
𝑎 − 5𝑏 
𝑎 − 17𝑏 
𝑎 − 16𝑏 
𝑎 − 26𝑏 
𝑎 − 3𝑏 
𝑎 − 11𝑏 
𝑎 − 4𝑏 
𝑎 − 30𝑏 
𝑎 − 14𝑏 
𝑎 − 37𝑏 
𝑎 − 53𝑏 
𝑎 − 6𝑏 
𝑎 − 20𝑏 
𝑎 − 7𝑏 
𝑎 − 51𝑏 
𝑎 − 71𝑏 
𝑎 − 58𝑏 
𝑎 − 80𝑏 
𝑎 − 29𝑏 

                        Fonte: GUEDES, 1988, p. 24. 

Na  seção  posterior  será  construído  um  algoritmo  para  gerar  esses  critérios 

utilizando a linguagem de programação Pascal. Essa tabela servirá como uma fonte de consulta 

para verificar se os critérios gerados estão realmente corretos.  

 
 
 
 
 
                        
 
Os valores de a e b são os mesmos utilizados no Teorema da quebra da unidade 

onde 𝑎 = 𝑎𝑛𝑎𝑛−1 … = 𝑎0 e 𝑏 = 𝑎0. 

51 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
52 

4  A LINGUAGEM PASCAL 

O presente capítulo dá subsídios para uma iniciação à linguagem Pascal. Primeiro 

apresentamos  uma  introdução  à  lógica  de  programação,  depois  apresentamos  rudimentos  da 

linguagem  Pascal  e  por  fim  apresentamos  alguns  algoritmos  desenvolvidos  utilizando  a 

linguagem. 

4.1 Introdução à lógica de programação 

Primeiro devemos saber que a máquina (computador) não é um ser inteligente. O 

mesmo precisa de instruções para executar o que queremos. A diferença entre o ser humano e 

a  máquina  é  que  o  computador  executa  algoritmos  numa  velocidade  muito  superior  ao  ser 

humano. 

Mas o que seria algoritmo? De acordo com MATHIAS algoritmo é a especificação 

de uma sequência lógica ordenada de passos que deve ser seguida para a realização de uma 

tarefa  garantindo  a  sua  repetitividade.  Portanto,  algoritmo  é  um  conjunto  de  passos  para  se 

resolver um determinado problema. 

É importante notar que o termo algoritmo não é exclusivo da computação, sabemos 

que na matemática existe o algoritmo de Euclides por exemplo. Até mesmo no dia a dia usamos 

sem envolver os aspectos computacionais, tais como a receita de um bolo, a partitura de uma 

música, o manual de como montar um guarda-roupa, entre outros.  

Veremos, agora, como os algoritmos podem ser representados, para depois serem 

codificados em uma linguagem de programação e por fim serem transformados em programas. 

Uma  maneira  de  representar  os  algoritmos  é  através  de  fluxogramas.  Em  Brasil 

(2018, p. 301), na Base Nacional Comum Curricular (BNCC) do Ensino Médio, na competência 

específica 3 traz a seguinte habilidade. 

(EM13MAT315):  Reconhecer  um  problema  algorítmico,  enunciá-lo,  procurar  uma 
solução  e  expressá-la  por  meio  de  um  algoritmo,  com  o  respectivo  fluxograma. 
(BRASIL, 2018, p. 529) 

O  que  seriam  fluxogramas  então?  De  acordo  com  MATHIAS  trata-se  de  uma 

representação gráfica de algoritmos, em que formas geométricas implicam ações (instruções, 

comandos) distintas. Em um fluxograma o mais importante é distinguir as etapas de construção 

 
 
 
  
 
 
 
53 

do algoritmo, onde fica a entrada de dados e onde fica a saída de dados. A figura abaixo ilustra 

um exemplo de fluxograma.  

Figura 2: Exemplo de Fluxograma. 

                                       Fonte: MATHIAS, 2017, p. 33. 

Observando a figura acima notamos que um algoritmo possui as seguintes etapas 

para a sua concepção: 1) Entradas: são as informações inseridas pelo usuário. 2) Processamento: 

são as manipulações e ou cálculos dos dados inseridos. 3) Saída: são os resultados obtidos do 

processamento  dos  dados.  4)  Teste  de  mesa:  Trata-se  da  execução  das  três  fases  anteriores, 

verificando o funcionamento das instruções executadas. 

O  uso  de  fluxograma  é  meramente  didático  pois  as  linguagens  de  programação 

atuais não os utilizam mais. A figura a seguir mostra o que cada figura representa na montagem 

de um fluxograma. 

 
 
 
 
 
 
 
 
 
 
54 

Figura 3: Principais formas de um fluxograma.  

                                    Fonte: MATHIAS, 2017, p. 33. 

Em Brasil (2018, p. 301), na Base Nacional Comum Curricular (BNCC) do Ensino 

Médio, na competência específica 4 traz a seguinte habilidade. 

(EM13MAT406):  Utilizar  os  conceitos  de  uma  linguagem  de  programação  na 
implementação  de  algoritmos  escritos  em  linguagem  corrente  e/ou  matemática. 
Portanto, é importante conhecer tais temas para serem implementados em sala de aula 
no ensino médio. 

Antes  de  conhecer  uma  linguagem  de  programação  costuma-se  utilizar  um 

pseudocódigo para representar os algoritmos, possuindo todos os requisitos que as linguagens 

de programação precisam, tais como, as declarações de variáveis com os respectivos tipos que 

são: inteiro, real, caractere, boolean, etc. Esses comandos e essas instruções são similares aos 

usados em linguagem de programação. (MATHIAS, 2017). 

Como o pseudocódigo segue uma estrutura, ou seja, um padrão também é chamado 

de linguagem estruturada e possui um formato parecido com os das linguagens de programação, 

tornando fácil a codificação para qualquer linguagem que se queira usar. O modelo de algoritmo 

 
 
 
 
             
 
 
55 

que iremos utilizar será o Portugol, como o nome já sugere, a sua origem é a língua portuguesa. 

(MATHIAS, 2017). 

A  figura  a  seguir  mostra  uma  forma  de  representação  de  um  algoritmo  em 

pseudocódigo.  

Figura 4: Forma geral de representação de um algoritmo em pseudocódigo. 

                                          Fonte: MATHIAS, 2017, p. 34. 

A  sequência  é  a  seguinte:  1)  escrevemos  o  nome  algoritmo  e  damos  o  nome  do 

algoritmo,  2)  declaramos  as  variáveis  que  serão  utilizadas,  3)  damos  início  ao  programa 

inserindo os comandos a serem executados, 4) encerramos o programa.  

Iremos,  agora,  mostrar  como  é  o  algoritmo  do  programa  soma  de  dois  números 

exibido anteriormente no fluxograma. Primeiro, colocamos o nome Algoritmo e o nomeamos, 

depois declaramos as variáveis N1, N2, Soma de valores reais, o algoritmo é iniciado com o 

comando início, o comando Leia as notas N1 e N2 (entradas de dados) é inserido, os valores 

N1 e N2 são somados e guardados na variável Soma (processamento de dados), o valor da soma 

é escrito (saída de dados), por fim o algoritmo é encerrado com o comando fim. A figura a 

seguir ilustra toda essa sequência em Portugol. 

 
 
 
 
 
 
 
 
 
 
 
Figura 5: Algoritmo Soma_dois_Numeros 

56 

                                          Fonte: MATHIAS, 2017, p. 36. 

4.2 Um breve histórico sobre a linguagem Pascal 

A linguagem de programação Pascal foi desenvolvida por Niklaus Wirth, professor 

do Departamento de Informática da Escola Politécnica da Universidade de Zurique na cidade 

de Genebra, Suíça. Foi desenvolvida por volta de 1968 à 1970. (MANZANO, 2001). 

Em homenagem ao filósofo e matemático Blaise Pascal (1623 – 1662), inventor da 

primeira calculadora mecânica, a linguagem recebeu esse nome. Niklaus Wirth tinha o desejo 

de  dispor,  para  o  ensino  de  programação,  uma  nova  linguagem  que  ao  mesmo  tempo  fosse 

simples, coerente e  capaz de incentivar a criação  de programas  claros e facilmente legíveis, 

favorecendo assim a utilização de boas técnicas de programação (MATHIAS, 2017). 

Figura 6: Professor Niklaus Wirth. 

Fonte: http://people.inf.ethz.ch/wirth/ 

 
 
 
 
 
 
 
 
57 

No Brasil, foi desenvolvido o compilador Pascalzim na Universidade de Brasília 

pelo  Departamento  de  Ciências  da  Computação.  Devido  a  sua  facilidade  de  utilização  a 

linguagem Pascal se tornou amplamente conhecida pelo mundo. 

Atualmente encontra-se na internet mais de 300 compiladores ou interpretadores da 

linguagem (alguns pagos, outros gratuitos e muitos descontinuados, ou seja, não possuem mais 

suporte). As contribuições mais importantes para o desenvolvimento do Pascal foram feitas pela 

Borland (empresa americana de desenvolvimento de software) com a criação do Turbo Pascal 

e depois com a criação do Delphi Pascal. (PEREIRA, 2015) 

Além  desses  compiladores  temos  também  o  ambiente  de  desenvolvimento 

integrado Lazarus que funciona nos sistemas operacionais Linux, FreeBSD, Win 32 e Win64 e 

o ambiente de desenvolvimento integrado Dev Pascal que funciona nos sistemas operacionais 

windows. 

A  linguagem  Pascal  é  originalmente  estruturada,  ou  seja,  os  programas  são 

compostos  de  subprogramas  menores  que  se  conectam  por  chamadas  (uma  chamada  de  um 

determinado subprograma é a solicitação de execução de outros subprogramas a partir dele). A 

linguagem absorveu com o passar do tempo o modelo da orientação a objetos (que se baseia 

nos conceitos de classes e objetos) dando origem ao Object Pascal. (PEREIRA, 2015) 

4.3 Ambiente de programação Dev Pascal. 

Dev  Pascal  é  um  ambiente  de  desenvolvimento  integrado  (IDE)  capaz  de  criar 

programas Windows ou baseados em console Pascal. Ele usa para tanto, os compiladores GNU 

Pascal  ou  Free  Pascal.  O  Dev  Pascal  é  encontrado  no  seguinte  endereço  eletrônico 

https://www.bloodshed.net/Dev-Pascal.  Para fazer o download do arquivo executável clica-se 

no ícone em azul com o seguinte nome: Download Dev-Pascal 1.9.2 + Free Pascal Compiler. 

Depois de fazer download do arquivo clica-se duas vezes no arquivo executável de 

nome devpas192. Aparecerá uma janela e clica-se no botão agree (concorda). Aparecerá outra 

janela e clica-se em install (instalar). Aparecerá uma última janela e clica-se close (fechar). O 

Dev-Pascal  está  instalado  no  computador.    As  figuras  a  seguir  ilustram  esse  procedimento 

descrito. 

 
 
           
 
 
 
 
Figura 7: Instalando o Dev-Pascal - 1ª Janela. 

58 

                                        Fonte: Elaborado pelo autor. 

Figura 8: Instalando o Dev-Pascal - 2ª Janela 

                                         Fonte: Elaborado pelo autor. 

Figura 9: Instalando o Dev-Pascal - 3ª Janela. 

                                         Fonte: Elaborado pelo autor. 

 
 
 
 
 
 
59 

Assim que entrarmos no ambiente Dev pascal, a tela da Figura 9, será a primeira 

que teremos acesso. 

Figura 10: Tela inicial 

Fonte: Elaborado pelo autor. 

Note que o  IDE Dev Pascal  possui na aba File (Arquivo), as opções necessárias 

para criar um novo programa, abrir , salvar e fechar programas . Abaixo das abas temos vários 

botões  que  podem  ser  utilizados  no  lugar  das  opções  das  abas,  muito  importante  para  dar 

celeridade às criações e às execuções dos programas.   

Para criar um program no Dev Pascal clica-se no botão New source file. Criamos 

um diretório (pasta) com o nome do programa e salvamos o arquivo no formato (.pas). Observe 

a sequência de figuras que mostra o passo a passo.  

 
 
 
 
 
 
 
 
 
 
 
 
Figura 11: Criando novo arquivo Dev Pascal 

60 

New source file 

Fonte: Elaborado pelo autor. 

Figura 12: Salvando o arquivo Dev Pascal 

Save current file 

file 

Fonte: Elaborado pelo autor. 

 
 
 
 
         
 
 
 
Figura 13: Nomeando o arquivo Dev Pascal 

61 

Fonte: Elaborado pelo autor. 

Nessa sequência de imagens criamos a pasta New program e salvamos o arquivo 

também com o nome new program no formato (.pas). 

4.4  Estrutura de programação em Pascal 

A linguagem de programação Pascal possui uma estrutura sequencial, ou seja, os 

comandos de um algoritmo são executados numa sequência preestabelecida. Cada comando é 

executado apenas após o término do comando anterior, ou seja, de forma sequencial, de cima 

para baixo e na ordem em que foram definidos. (MATHIAS, 2017). 

Nessa  linguagem  primeiro  começamos  com  o  comando  Program  e  o  nome  do 

programa.  Depois  são  declaradas  as  variáveis  com  o  comando  var.  Nessa  parte  temos  as 

seguintes  opções  de  variáveis:  integer  (inteiro),  real  (real),  char  (caractere),  string 

(concatenação de caracteres) e boolean (recebe valor verdadeiro ou falso). Após a declaração 

das variáveis iniciamos o programa com o comando begin (inicio), escrevemos o código do 

programa e por fim encerramos com o comando end (fim). Na figura a seguir temos o algoritmo 

da Figura 4 decodificado em linguagem Pascal. 

 
 
 
 
 
 
Figura 14: Algoritmo Soma_dois_mumeros em Pascal. 

62 

                                          Fonte: MATHIAS, 2017, p. 105. 

No algoritmo acima notamos que o mesmo tem uma estrutura sequencial, pois cada 

comando deve ser executado na ordem que está escrito, para que o algoritmo funcione, ou seja, 

some dois números e mostre o resultado da soma. Os valores N1, N2 e Soma são variáveis reais, 

o comando read significa leia, o símbolo  :=  (recebe) é chamado comando de atribuição e o 

comando write significa escreva. 

Para  uma  melhor  interface  para  o  usuário  pode-se  fazer  algumas  alterações  no 

algoritmo para torná-lo mais compreensível. Veja a seguir o mesmo programa com algumas 

alterações. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figura 15: 2º Algoritmo Soma_dois_numeros em Pascal 

63 

Fonte: MATHIAS, 2017, p. 107. 

Observamos  mais  dois  comandos:  o  writeln  e  o  readln.  Estes  comandos 

desempenham  as  mesmas  funções  dos  comandos  write  e  read,  respectivamente.  A  única 

diferença é que, no primeiro caso, após a execução deles o cursor vai para a linha seguinte. 

(MATHIAS, 2017) 

Os números 5 e 2 ao lado de N1, N2 e Soma tema finalidade de formatar a exibição 

do valor contido na variável, o 5 representa o número de dígitos antes do separador decimal e 

o 2 representa o número de dígitos após o separador decimal. (MATHIAS, 2017) 

Nota-se que existem alguns recuos no código. Esses recuos definem a estrutura que 

o programa possui. Observe que os comandos begin e end têm o mesmo recuo e o restante do 

código tem outro recuo. O objetivo dessa indentação é organizar o código, de maneira que o 

programador  possa  identificar  e  entender  a  construção  das  diferentes  estruturas  de  um 

programa. (MATHIAS, 2017) 

Existe  uma  estrutura  de  decisão  muito  útil  na  construção  de  algoritmos  mais 

elaborados. Esta estrutura se chama if then (se então), que avalia se a condição expressa no 

algoritmo é verdadeira. Se for verdadeira então um determinado comando é executado, caso 

contrário outro comando é executado. O algoritmo a seguir calcula a média aritmética de duas 

notas de um aluno. Se a média for maior ou igual à 6 então o comando que mostra a frase ‘O 

 
 
 
 
64 

aluno está aprovado’ é executado, caso contrário outro comando que mostra a frase ‘O aluno 

está reprovado’ é executado. 

Figura 16: Algoritmo Média_02 em Pascal 

 Fonte: Elaborado pelo autor. 

Existe uma outra estrutura muito útil na construção de algoritmos mais elaborados. 

É uma estrutura de repetição e chama-se for (para) que tem a seguinte sintaxe for i:= a to b do, 

onde a é o limite inferior e b é o limite superior. A palavra to neste caso significa até e do 

significa  faça.  Explicitando  melhor  ficaria  assim:  para  i  recebe  os  valores  de  a  até  b  faça. 

Portanto, serão repetidos comandos de a até b, por isso se chama de estrutura de repetição.  

A figura a seguir mostra um algoritmo que utiliza a estrutura de repetição for para 

escrever uma sequência dos n primeiros números quadrados perfeitos. 

 
 
 
 
 
 
 
 
 
 
 
 
Figura 17: Algoritmo Quadrado_Perfeito em Pascal 

65 

 Fonte: Elaborado pelo autor. 

4.5 Algoritmo para determinar os divisores de um número 

O algoritmo a seguir mostra como  obtêm-se os divisores de um  número inteiros 

positivo. Primeiro, nomeamos o programa com o nome divisores. Declaramos as variáveis que 

serão  utilizadas:  i,  n  e  num  de  valores  inteiros.  Iniciamos  o  algoritmo  e  solicitamos  que  o 

usuário insira um número inteiro. Esse número é guardado na varável n.  

Utilizando  a  estrutura  de  repetição  for  realizamos  um  procedimento  que  vai  do 

número 1 até o número n inserido. O procedimento consiste em verificar se o resto da divisão 

do número n por i é 0. Fazendo uso do comando n mod i (que determina o resto da divisão de 

n por i), o resto da divisão de n por i é guardado na variável num.  

Agora, fazendo uso da estrutura condicional if (se) o número i é escrito na tela do 

usuário caso num seja 0, ou seja, se i for divisor de n. Cada divisor i de n seja escrito na tela 

do usuário até i for igual à n. Segue abaixo o algoritmo para determinar os divisores  de um 

número inteiro em Pascal. 

 
 
 
 
 
 
 
 
Figura 18: Algoritmo divisores de um número em Pascal 

66 

Fonte: Elaborado pelo autor. 

Executamos o programa, inserimos o número 60 e verificamos os seus divisores. A 

figura a seguir ilustra isso.  

Figura 19: Obtendo os divisores de 60 através do programa divisores 

Fonte: Elaborado pelo autor. 

 
 
 
 
 
 
 
67 

4.6 Algoritmo para determinar se um número é primo 

O algoritmo a seguir mostra como verificar se um número é primo ou não. Primeiro, 

nomeamos o programa com o nome Primo. Declaramos as variáveis que serão utilizadas: i, n, 

num e aux de valores inteiros. Iniciamos o algoritmo e solicitamos que o usuário insira um 

número inteiro. Esse número é guardado na varável n.  

Utilizando  a  variável  contadora  aux,  iremos  contar  quantos  divisores  tem  um 

número n. Para isso, começamos atribuindo a variável n o valor 0.  Fazendo uso da estrutura 

de repetição for realizamos um procedimento que vai do número 1 até o número n inserido. O 

procedimento consiste em verificar se o resto da divisão do número n por i é 0. Fazendo uso do 

comando n mod i (que determina o resto da divisão de n por i), o resto da divisão de n por i é 

guardado na variável num.  

Fazendo uso da estrutura condicional if contamos quantos divisores tem o número 

n. Se num for 0 então a variável contadora aux tem uma unidade acrescida de seu valor.  Após 

repetir n vezes a verificação do comando n mod i, o valor da variável aux é guardado.  

Utilizando, novamente, a estrutura condicional if (se), fora da estrutura de repetição 

for (para) verificamos se o número n é primo ou não. Se aux for igual a 2 então o número será 

primo e será mostrado na tela do usuário: O número é primo. Senão, será mostrado na tela do 

usuário: O número não é primo. A figura a seguir mostra o algoritmo para determinar se um 

número é primo ou não. 

 
 
 
Figura 20: Algoritmo para determinar se um número é primo em Pascal 

68 

Fonte: Elaborado pelo autor. 

Executamos o programa, inserimos o número 7 e verificamos que o mesmo é primo. 

Figura 21: Verificando se o número 7 é primo utilizando o programa Primo 

 Fonte: Elaborado pelo autor. 

 
 
      
 
 
 
69 

Executamos o programa, novamente, inserimos o número 30 e verificamos que o 

mesmo não é primo. A figura a seguir ilustra isso. 

Figura 22: Verificando se o número 30 é primo utilizando o programa Primo 

Fonte: Elaborado pelo autor. 

4.7 Algoritmo para gerar critérios de divisibilidade 

O  algoritmo  a  seguir  mostra  como  gerar  critérios  de  divisibilidade.  Primeiro, 

nomeamos o programa com o nome gera_criterio. Declaramos as variáveis que serão utilizadas: 

i,  n,  num  de  valores  inteiros.  Iniciamos  o  algoritmo  e  solicitamos  que  o  usuário  insira  um 

número inteiro. Esse número é guardado na varável n.  

Utilizando  a  estrutura  de  repetição  for  realizamos  um  procedimento  que  vai  do 

número 1 até o número n inserido. O procedimento consiste em verificar se o resto da divisão 

do número 10i -1 por n é 0. Fazendo uso do comando 10i -1  mod n (que determina o resto da 

divisão de 10i -1  por n), o resto da divisão de 10i -1 por n é guardado na variável num.  

Fazendo uso da estrutura condicional if escreve-se o critério de divisibilidade por 

n. Se num for 0 então i é solução da congruência 𝟏𝟎𝒊 ≡ 𝟏 (𝒎𝒐𝒅 𝒏), logo pelo Teorema da 

Quebra na Unidade 𝒏 divide 𝒂 + 𝒊𝒃, se e somente, se n divide 𝒎 = 𝟏𝟎𝒂 + 𝒃, onde 𝒎 é um 

número inteiro qualquer. 

 
 
 
 
 
 
 
70 

 Como  𝒏 − 𝒊  também  é  solução  da  congruência  𝟏𝟎𝒊 ≡ 𝟏 (𝒎𝒐𝒅 𝒏),  Teorema  da 

Quebra na Unidade 𝒏 divide 𝒂 − (𝒏 − 𝒊)𝒃, se e somente, se 𝒏 divide 𝒎 = 𝟏𝟎𝒂 + 𝒃, onde 𝒎 

é um número inteiro qualquer. Portanto, serão escritos esses dois critérios de divisibilidade na 

tela do usuário. Veja o algoritmo abaixo e os critérios de divisibilidade por 7 gerados. 

Figura 23: Algoritmo para gerar critérios de divisibilidade em Pascal 

Fonte: Elaborado pelo autor. 

Figura 24: Gerando os critérios de divisibilidade de Chika Ofili e Zbikowski 

   Fonte: Elaborado pelo autor. 

 
 
 
 
 
 
71 

O primeiro critério de divisibilidade apresentado na Figura 24 é conhecido como 

critério  de  Chika  Ofili  e  o  segundo  é  o  critério  de  Zbikowsky,  mais  comum  nos  livros  de 

aritmética. Os dois critérios serão abordados na seção seguinte onde faremos uma comparação 

com outros critérios de divisibilidade por 7.  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
72 

5  ALGUNS CRITÉRIOS DE DIVISIBILIDADE POR 7 

Abordaremos,  agora,  alguns  critérios  de  divisibilidade  por  7.  Primeiro  será 

apresentado o critério de divisibilidade de Pascal. Depois, serão apresentados os critérios de 

divisibilidade  de  Zbikowski  e  Chika  Ofili.  Serão,  ainda,  apresentados  outros  critérios  de 

divisibilidade por 7. Por fim, faremos uma verificação sobre qual é o critério que necessita de 

menos operações para um número de 6 dígitos.   

5.1 Critério de divisibilidade por 7 de Blaise Pascal 

Proposição:  Dado  o  número  natural  𝑁 = 𝑎5𝑎4𝑎3𝑎2𝑎1𝑎0,  então    7|𝑎5𝑎4𝑎3𝑎2𝑎1𝑎0  se,  e 

somente se, 7|(5𝑎5 + 4𝑎4 + 6𝑎3 + 2𝑎2 + 3𝑎1 + 𝑎0). (SHIMOKAWA, 2020). 

Demonstração: Primeiramente, utilizando o item 3) das propriedades de congruência modular, 

observamos as seguintes congruências: 

100  ≡ 
101  ≡ 
102  ≡ 
103  ≡ 
104  ≡ 
105  ≡ 

1 (𝑚𝑜𝑑 7) 
3 (𝑚𝑜𝑑 7) 
2 (𝑚𝑜𝑑 7) 
6 (𝑚𝑜𝑑 7) 
4 (𝑚𝑜𝑑 7) 
5(𝑚𝑜𝑑 7) 

Utilizando, agora, o item 2) das propriedades de congruência modular, temos que: 

100𝑎0  ≡ 
101𝑎1  ≡ 
102𝑎2  ≡ 
103𝑎3  ≡ 
104𝑎4  ≡ 
105𝑎5  ≡ 

𝑎0 (𝑚𝑜𝑑 7) 
3𝑎1 (𝑚𝑜𝑑 7) 
2𝑎2  (𝑚𝑜𝑑 7) 
6𝑎3 (𝑚𝑜𝑑 7) 
4𝑎4 (𝑚𝑜𝑑 7) 
5𝑎5 (𝑚𝑜𝑑 7) 

Logo, utilizando o item 1) das propriedades de congruência modular, temos: 

105𝑎5 + 104𝑎4+103𝑎3 + 102𝑎2 + 101𝑎1 + 100𝑎0 ≡ 5𝑎5 + 4𝑎4 + 6𝑎3 + 2𝑎2 + 3𝑎1 +𝑎0 (𝑚𝑜𝑑 7) 

 
 
 
 
 
 
 
 
 
 
73 

Como    𝑎5𝑎4𝑎3𝑎2𝑎1𝑎0 = 105𝑎5 + 104𝑎4+103𝑎3 + 102𝑎2 + 101𝑎1 + 100𝑎0,  temos 

que 7|𝑎5𝑎4𝑎3𝑎2𝑎1𝑎0 se, e somente se, 7|(5𝑎5 + 4𝑎4 + 6𝑎3 + 2𝑎2 + 3𝑎1 + 𝑎0).  

5.2 Critério de divisibilidade por 7 de Zbikowski 

Proposição: O critério de divisibilidade de Zbikowski é o seguinte: dado o número natural 𝑁 

considere 𝑁 = 10𝑎 + 𝑏  em que b é o algarismo das unidades de N. Tem-se que  7|(10𝑎 +

𝑏) = 𝑁 se, e somente se,  7|( 𝑎 − 2𝑏). 

Demonstração:  Como  10 ⋅ (−2) ≡ 1 (𝑚𝑜𝑑 7),  pois  7|(−20 − 1) = (−21).  Logo,  pelo 

Teorema da Quebra na Unidade, 7|( 𝑎 − 2𝑏) ⟺ 7|(10𝑎 + 𝑏).. 

Exemplo: Aplicando esse critério para 161, obtemos: 

16 − 2 ⋅ 1 = 14 

Como 14 = 2 ⋅ 7 então 7| 14, concluímos que 7| 161. 

5.3 Critério de divisibilidade por 7 de Chika Ofili 

Proposição:  O  critério  de  divisibilidade  por  7  de  Chika  Ofili  é  o  seguinte:  dado  o  número 

natural  𝑁 considere  𝑁 = 10𝑎 + 𝑏   em  que b é o algarismo  das unidades de  N. Tem-se  que  

7|(10𝑎 + 𝑏) = 𝑁  ) se, e somente se, 7| (𝑎 + 5𝑏).  

Demonstração:  Como  10 ⋅ 5 ≡ 1 (𝑚𝑜𝑑 7),  pois  7|(50 − 1) = 49.  Logo,  pelo  Teorema  da 

Quebra na Unidade, 7|( 𝑎 + 5𝑏) ⟺ 7|(10𝑎 + 𝑏).. 

Embora Chika Ofili tenha descoberto este critério de divisibilidade por 7, já havia 

sido mencionado por GUEDES em seu artigo de 1988. Mesmo assim, foi um feito grande para 

um jovem de 12 anos, à época. 

Exemplo: Aplicando esse critério para 112, obtemos: 

 
 
 
 
 
 
 
 
 
 
 
 
 
74 

11 + 5 ⋅ 2 = 21 

Como 21 = 3 ⋅ 7 então 7| 21, daí concluímos que 7| 112. 

5.4 Critério de divisibilidade por 7 (Quebra na dezena) 

Quebrar um  número na  dezena significa remover os algarismos  da unidade e da 

dezena,  para  manipulá-los  algebricamente.  Assim,  por  exemplo,  o  numero  1243  torna-se 

1243 = 1200 + 4 ⋅ 10 + 3 quando quebramos a sua dezena.  

Teorema (Quebra na dezena): Sejam 𝑟 ≥ 2, 𝑛 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2... 𝑎2𝑎1𝑎0 um número natural e 

𝑝 um número primo (diferente de 2 e 5). Sejam 𝑥 e 𝑦 soluções inteiras das seguintes equações  

de congruências.  

{

10𝑦 ≡ 1 (𝑚𝑜𝑑 𝑝)
100𝑥 ≡ 1 (𝑚𝑜𝑑 𝑝)

Então 𝑝 divide 𝑛  se,  e somente se,  𝑝  divide  𝑚 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2 … 𝑎2 + 𝑦𝑎1 + 𝑥𝑎0 

(RIBEIRO, 2020). 

 Demonstração: Temos que  

𝑛 = 𝑎𝑟10𝑟 + 𝑎𝑟−110𝑟−1 + 𝑎𝑟−210𝑟−2 + ⋯ + 𝑎2102 + 𝑎110 + 𝑎0   (7) 
𝑚 = 𝑎𝑟10𝑟−2 + 𝑎𝑟−110𝑟−3 + 𝑎𝑟−210𝑟−4 + ⋯ + 𝑎2 + 𝑦𝑎1 + 𝑥𝑎0     (8) 

Multiplicando a equação (8) por 100 temos: 

100𝑚 = 𝑎𝑟10𝑟 + 𝑎𝑟−110𝑟−1 + 𝑎𝑟−210𝑟−2 + ⋯ + 𝑎2102 + 𝑦𝑎1100 + 𝑥𝑎0100   (9) 

Subtraindo a equação (7) pela equação (9), temos: 

𝑛 − 100𝑚 =   𝑎110 − 𝑦𝑎1100 + 𝑎0 − 𝑥𝑎0100 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
75 

𝑛 = 100𝑚 + 10(1 − 10𝑦)𝑎1 + (1 −  100𝑥)𝑎0 

Como 𝑝|(1 − 10𝑦) e 𝑝|(1 − 100𝑥) (Hipótese do Teorema), temos que: 

𝑛 ≡ 100𝑚 (𝑚𝑜𝑑 𝑝) 

Como 𝑝 é diferente de 2 e 5, então 𝑝 não divide 100. Logo, 𝑝|100𝑚 se, e somente 

se, 𝑝|𝑛. Portanto, 𝑝 divide 𝑛 se, e somente se, 𝑝 divide 𝑚 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2 … 𝑎2 + 𝑦𝑎1 + 𝑥𝑎0. 

Para construir um critério de divisibilidade por 7 precisamos encontrar 𝑥 e 𝑦 tais 

que  100 ⋅ 𝑥 ≡ 1 (𝑚𝑜𝑑 7)  e  10 ⋅ 𝑦 ≡ 1 (𝑚𝑜𝑑 7).  Como  100 ⋅ (−3) ≡ 1 (𝑚𝑜𝑑 7)  e  10 ⋅ 5 ≡

1 (𝑚𝑜𝑑 7)  então, pelo Teorema da quebra na dezena, 7 divide 𝑛 se, e somente se, 7 divide 

𝑚 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2 … 𝑎2 + 5𝑎1 − 3𝑎0. 

Exemplo: Utilizando este critério para 315, obtemos: 

3 + 5 ⋅ 1 − 3 ⋅ 5 = 3 + 5 − 15 = 8 − 15 = −7 

Como  7| − 7, daí concluímos que 7| 315. 

Fazendo 𝑎 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2 … 𝑎2, 𝑏 = 𝑎1   e 𝑐 = 𝑎0, temos a seguinte tabela com 4 

critérios de divisibilidade por 7 utilizando o Teorema 6 da quebra na dezena. 

Tabela 3: Critérios de divisibilidade por 7 utilizando a quebra na dezena 

𝒚 = 𝟒 
𝒚 = −𝟑 

𝒙 = 𝟓 
𝑎 + 4𝑏 + 5𝑐 
𝑎 − 3𝑏 + 5𝑐 

𝒚 = −𝟐 
𝑎 + 4𝑏 − 2𝑏 
𝑎 − 3𝑏 − 2𝑐 

                       Fonte: Elaborado pelo autor. 

5.5 Critério de divisibilidade por 7 (Quebra na Centena) 

Quebrar  um  número  na  centena  significa  remover  os  algarismos  da  unidade,  da 

dezena e da centena, para manipulá-los algebricamente. Assim, por exemplo, o número 1243 

torna-se 1243 = 1000 + 2 ⋅ 100 + 4 ⋅ 10 + 3 quando quebramos a sua centena.  

 
 
 
 
 
 
 
 
 
 
 
 
 
Teorema (Quebra na centena): Sejam 𝑟 ≥ 3, 𝑛 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2... 𝑎2𝑎1𝑎0 um número natural e 

𝑝 um número primo (diferente de 2 e 5). Sejam 𝑥, 𝑦 e 𝑧  soluções inteiras das seguintes equações  

de congruências.  

76 

{

10𝑧 ≡ 1 (𝑚𝑜𝑑 𝑝)
100𝑦 ≡ 1 (𝑚𝑜𝑑 𝑝)
1000𝑥 ≡ 1 (𝑚𝑜𝑑 𝑝)

Então 𝑝 divide 𝑛 se, e somente se, 𝑝 divide 𝑚 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2 … 𝑎3 + 𝑧𝑎2 + 𝑦𝑎1 +

𝑥𝑎0 (RIBEIRO, 2020). 

 Demonstração: Temos que  

𝑛 = 𝑎𝑟10𝑟 + 𝑎𝑟−110𝑟−1 + 𝑎𝑟−210𝑟−2 + ⋯ + 𝑎2102 + 𝑎110 + 𝑎0   (10) 
𝑚 = 𝑎𝑟10𝑟−3 + 𝑎𝑟−110𝑟−4 + 𝑎𝑟−210𝑟−5 + ⋯ + 𝑧𝑎2 + 𝑦𝑎1 + 𝑥𝑎0  (11) 

Multiplicando a equação (11) por 1000, temos: 

1000𝑚 = 𝑎𝑟10𝑟 + 𝑎𝑟−110𝑟−1 + 𝑎𝑟−210𝑟−2 + ⋯ + 𝑧𝑎21000 + 𝑦𝑎11000 + 𝑥𝑎01000 (12) 

Subtraindo a equação (10) pela equação (12), temos: 

𝑛 − 1000𝑚 =   𝑎2100 − 𝑧𝑎21000 + 𝑎110 − 𝑦𝑎11000 + 𝑎0 − 𝑥𝑎01000 
𝑛 = 100𝑚 + 10(1 − 10𝑧)𝑎2 + 10(1 − 100𝑦)𝑎1 + (1 −  1000𝑥)𝑎0 

Como 𝑝|(1 − 10𝑧), 𝑝|(1 − 100𝑦) e 𝑝|(1 − 1000𝑥) (Hipótese do Teorema), temos que: 

𝑛 ≡ 1000𝑚 (𝑚𝑜𝑑 𝑝) 

Como  𝑝  é  diferente  de  2  e  5,  então  𝑝  não  divide  1000.  Logo,  𝑝|1000𝑚  se,  e 

somente se, 𝑝|𝑛. Portanto, 𝑝 divide 𝑛 se, e somente se, 𝑝 divide 𝑚 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2 … 𝑎3 + 𝑧𝑎2 +

𝑦𝑎1 + 𝑥𝑎0. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
77 

Para construir um critério de divisibilidade por 7 precisamos encontrar 𝑥, 𝑦 e 𝑧 tais 

que  1000 ⋅ 𝑥 ≡ 1 (𝑚𝑜𝑑 7),  100 ⋅ 𝑦 ≡ 1 (𝑚𝑜𝑑 7)  e  10 ⋅ 𝑧 ≡ 1 (𝑚𝑜𝑑 7).  Como  1000 ⋅

(−1) ≡ 1 (𝑚𝑜𝑑 7), 100 ⋅ (−3) ≡ 1 (𝑚𝑜𝑑 7) e 10 ⋅ (−2) ≡ 1 (𝑚𝑜𝑑 7)  então, pelo Teorema 

da quebra na  centena,  7 divide 𝑛, se e somente, se  7 divide  𝑚 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2 … 𝑎3 + 5𝑎2 −

3𝑎1 − 𝑎0. 

Exemplo: Utilizando este critério para 2457, obtemos: 

2 + 5 ⋅ 4 − 3 ⋅ 5 − 1 ⋅ 7 = 2 + 20 − 15 − 7 = 22 − 22 = 0 

Como  7|0, daí concluímos que 7| 2457. 

Fazendo 𝑎 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2 … 𝑎3, 𝑏 = 𝑎2,  𝑐 = 𝑎1 e 𝑑 = 𝑎0, temos a seguinte tabela 

com 8 critérios de divisibilidade por 7 utilizando o Teorema 7 da quebra na centena. 

Tabela 4: Critérios de divisibilidade por 7 utilizando a quebra na centena 

𝒙 = −𝟏 

𝒙 = 𝟔 

𝒚 = −𝟑 e 𝒛 = −𝟐 
𝒚 = −𝟑 e 𝒛 = 𝟓 
𝒚 = 𝟒 e 𝒛 = −𝟐 
𝒚 = 𝟒 e 𝒛 = 𝟓 

𝑎 − 2𝑏 − 3𝑐 − 𝑑  𝑎 − 2𝑏 − 3𝑐 + 6𝑑 
𝑎 + 5𝑏 − 3𝑐 − 𝑑  𝑎 + 5𝑏 − 3𝑐 + 6𝑑 
𝑎 − 2𝑏 + 4𝑐 − 𝑑  𝑎 − 2𝑏 + 4𝑐 + 6𝑑 
𝑎 + 5𝑏 + 4𝑐 − 𝑑  𝑎 + 5𝑏 + 4𝑐 + 6𝑑 

                      Fonte: Elaborado pelo autor. 

5.6 Critério de divisibilidade por 7 (Das classes)  

Proposição: O número 𝑁 = 𝑎𝑟𝑎𝑟−1𝑎𝑟−2 … 𝑎2𝑎1𝑎0 é divisível por 7  se, e somente se, o número 

𝑎2𝑎1𝑎0 − 𝑎5𝑎4𝑎3 + 𝑎8𝑎7𝑎6 − ⋯  é divisível por 7. (HEFEZ, 2015) 

Demonstração: Primeiro, note que 7 ⋅ 11 ⋅ 13 = 1001. Logo, 1000 ≡ −1 (𝑚𝑜𝑑 7). 

Assim, temos: 

103 ≡ −1 (𝑚𝑜𝑑 7) 

106 ≡ (−1)2 (𝑚𝑜𝑑 7) 

109 ≡ (−1)3 (𝑚𝑜𝑑 7) 

103 ≡ (−1)4 (𝑚𝑜𝑑 7) 

…. 

 
 
 
 
 
 
 
 
 
         Temos então: 

78 

103 ≡ −1 (𝑚𝑜𝑑 7) 

106 ≡ 1 (𝑚𝑜𝑑 7) 

109 ≡ −1 (𝑚𝑜𝑑 7) 

1012 ≡ 1(𝑚𝑜𝑑 7) 

…. 

Escrevendo,  agora,  um  número  𝑁  na 

representação  decimal 

  𝑁 =

𝑎𝑟𝑎𝑟−1𝑎𝑟−3 … 𝑎2𝑎1𝑎0  temos, módulo 7, que: 

𝑁 = 𝑎2𝑎1𝑎0 + 𝑎5𝑎4𝑎3 ⋅ 103 + 𝑎8𝑎7𝑎6 ⋅ 106 + ⋯ 

                                        ≡ 𝑎2𝑎1𝑎0 − 𝑎5𝑎4𝑎3 + 𝑎8𝑎7𝑎6 − ⋯ 

Dessa forma, o resto da divisão de 𝑁 por 7 é igual ao resto da divisão de 𝑎2𝑎1𝑎0 −

𝑎5𝑎4𝑎3 + 𝑎8𝑎7𝑎6 − ⋯por  7, ou seja, 7|𝑁 se, e somente se, 7|𝑎2𝑎1𝑎0 − 𝑎5𝑎4𝑎3 + 𝑎8𝑎7𝑎6 −. 

Exemplo: Verifique que o número  552.619.284 é divisível por 7. 

Temos que: 284 − 619 + 552 = 217. Como 217 = 7 ⋅ 31 então 7|284 − 619 +

+552. Portanto, 7|552.619.284  

5.7 Mais um critério de divisibilidade por 7 

Proposição: Seja 𝑁 = 10𝑎 + 𝑏  um número natural, em que a é o algarismo das unidades de 

N, 7|(10𝑎 + 𝑏) = 𝑁  se, e somente se, 7| (2𝑎 + 3𝑏).  

Demonstração: Primeiro, mostraremos que se  7| 2𝑎 + 3𝑏 então 7|10𝑎 + 𝑏 = 𝑁. 

Temos que: 

                         7|2𝑎 + 3𝑏 ⟹  2𝑎 + 3𝑏 = 7𝑞, com 𝑞 ∈ ℕ. 

 
 
 
 
 
 
 
 
 
 
 
 
 
79 

                                           ⟹  10𝑎 + 𝑏 = 7𝑞 + 8𝑎 − 2𝑏 

                                                                   ⟹  10𝑎 + 𝑏 = 7𝑞 + 14𝑎 − 6𝑎 + 7𝑏 − 9𝑏 

                                                                       ⟹  10𝑎 + 𝑏 = 7(𝑞 + 2𝑎 + 𝑏) − 3(2𝑎 + 3𝑏) 

                                                                                ⟹  10𝑎 + 𝑏 = 7(𝑞 + 2𝑎 + 𝑏) − 3 ⋅ 7𝑞              

                                                   ⟹  10𝑎 + 𝑏 = 7(−2𝑞 + 2𝑎 + 𝑏) 

                                                                                ⟹  10𝑎 + 𝑏 = 7𝑘, 

em que  (−2𝑞 + 2𝑎 + 𝑏) = 𝑘. Logo, 7|(10𝑎 + 𝑏).  

Demonstremos, agora, que se  7| (10𝑎 + 𝑏) então 7|(2𝑎 + 3𝑏) = 𝑁.  

Temos que: 

                      7|(10𝑎 + 𝑏)   ⟹  10𝑎 + 𝑏 = 7𝑞 com 𝑞 ∈ ℕ. 

                                                               ⟹  10𝑎 + 2𝑎 + 𝑏 + 3𝑏 − 7𝑞 = 2𝑎 + 3𝑏 

                                              ⟹  12𝑎 + 4𝑏 − 7𝑞 = 2𝑏 + 3𝑎 

                                                                      ⟹  42𝑎 − 30𝑎 + 7𝑏 − 3𝑏 − 7𝑞 = 2𝑎 + 3𝑏 

                                                                                ⟹  7 ⋅ 6𝑎 − 3 ⋅ 10𝑎 + 7𝑏 − 3𝑏 − 7𝑞 = 2𝑎 + 3𝑏 

                                                                             ⟹  7(6𝑎 + 𝑏) − 3(10𝑎 + 𝑏) − 7𝑞 = 2𝑎 + 3𝑏 

                                                                   ⟹  7(6𝑎 + 𝑏) − 3 ⋅ 7𝑞 − 7𝑞 = 2𝑎 + 3𝑏 

                                                           ⟹  7(6𝑎 + 𝑏 − 3𝑞 − 𝑞) = 2𝑎 + 3𝑏 

                                                   ⟹  7(6𝑎 + 𝑏 − 4𝑞) = 2𝑎 + 3𝑏 

                                                                                  ⟹  7𝑚 = 2𝑎 + 3𝑏, 

em que  6𝑎 + 𝑏 − 4𝑞 = 𝑚. Logo, 7|(10𝑎 + 𝑏).  

Portanto,  7| (10𝑎 + 𝑏) = 𝑁 se, e somente se, 7| (2𝑎 + 3𝑏). 

Exemplo: Aplicando esse critério para 112, obtemos: 

2 ⋅ 11 + 3 ⋅ 2 = 28 

Como 28 = 4 ⋅ 7 então 7| 28, daí concluímos que 7| 112. 

 
 
 
 
 
 
 
 
 
 
80 

5.8 Comparando os critérios de divisibilidade por 7 

Vamos,  agora,  comparar  os  critérios  de  divisibilidade  por  7.  Para  isso,  iremos 

verificar  cada  critério  com  um  mesmo  número  de  6  dígitos.  Depois,  será  analisado  quantas 

iterações (uso do algoritmo) e quantas operações foram utilizadas em cada um para determinar 

qual é o melhor critério para o determinado número. 

O critério que tiver menos operações será o melhor. Caso haja empate no número 

de operações, o melhor será o que tiver menos iterações. Para cada critério de divisibilidade 

iremos verificar se o número 143.549 é divisível por 7 e iremos contar quantas operações foram 

utilizadas e quantas iterações ocorreram. 

Exemplo  (Critério de Blaise Pascal) : Verifique o critério de divisibilidade por 7 de Pascal 

sobre o número 143.549.  

5 ⋅ 1 + 4 ⋅ 4 + 6 ⋅ 3 + 2 ⋅ 5 + 3 ⋅ 4 + 9 = 5 + 16 + 18 + 10 + 12 + 9 

                                                                                   = 21 + 28 + 21 

                                                                                   = 42 + 28 

                                                                                    = 70 

Como 70 = 7 ⋅ 10 então 7| 70, daí concluímos que 7| 143.549. 

Nesse critério de divisibilidade por 7 foram necessárias 3 iterações e 6 operações 

para verificar se é divisível por 7. 

Exemplo  (Critério  de  Zbikowski):  Verifique  o  critério  de  divisibilidade por  7  convencional 

sobre o número 143.549.  

14.354 − 2 ⋅ 9 = 14.354 − 18 = 14.336 

1.433 − 2 ⋅ 6 = 1.433 − 12 = 1.421 

142 − 2 ⋅ 1 = 142 − 2 = 14 

Como 14 = 2 ⋅ 7 então 7| 14, daí concluímos que 7| 143.549. 

 
 
 
 
 
 
 
 
 
 
 
 
81 

Nesse critério de divisibilidade por 7 foram necessárias 3 iterações e 6 operações 

para verificar se é divisível por 7. 

Exemplo (Critério de Chika Ofili): Verifique o critério de divisibilidade por 7 de Chika Ofili 

sobre o número 143.549.  

14.354 + 5 ⋅ 9 = 14.354 + 45 = 14.399 

1.439 + 5 ⋅ 9 = 1.439 + 45 = 1.484 

148 + 5 ⋅ 4 = 148 + 20 = 168 

16 + 5 ⋅ 8 = 16 + 40 = 56 

Como 56 = 8 ⋅ 7 então 7| 56, daí concluímos que 7| 143.549. 

Nesse critério de divisibilidade por 7 foram necessárias 4 iterações e 8 operações 

para verificar se é divisível por 7. 

Exemplo (Critério da quebra na dezena): Verifique o critério de divisibilidade por 7 da quebra 

na dezena sobre o número 143.549.  

1.435 + 5 ⋅ 4 − 3 ⋅ 9 = 1.435 + 20 − 27 = 1.428 

14 + 5 ⋅ 2 − 3 ⋅ 8 = 14 + 10 − 24 = 0 

Como 0 = 0 ⋅ 7 então 7| 0, daí concluímos que 7| 143.549. 

Nesse critério de divisibilidade por 7 foram necessárias 2 iterações e 8 operações 

para verificar se é divisível por 7. 

Exemplo (Critério da quebra na centena): Verifique o critério de divisibilidade por 7 da quebra 

na centena sobre o número 143.549.  

143 + 5 ⋅ 5 − 3 ⋅ 4 − 1 ⋅ 9 = 143 + 25 − 12 − 9 = 147 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
82 

0 + 5 ⋅ 1 − 3 ⋅ 4 − 1 ⋅ 7 = 0 + 5 − 12 − 7 = −14 

Como −14 = (−2) ⋅ 7 então 7| (−14), daí concluímos que 7| 143.549.   

Nesse critério de divisibilidade por 7 foram necessárias 2 iterações e 12 operações 

para verificar se é divisível por 7. 

Exemplo (Critério das classes): Verifique o critério de divisibilidade por 7 da proposição sobre 

o número 143.549.  

549 − 143 = 406 

Agora temos que não podemos mais usar o mesmo critério pois esse critério só pode 

ser aplicado para número com mais de 3 algarismos. Logo, a melhor maneira para proceder é 

utilizar  outro  critério  de  divisibilidade  para  continuar  a  verificação.  Utilizando  o  critério  de 

divisibilidade por 7, temos:  

40 − 2 ⋅ 6 = 40 − 12 = 28 

Como 28 = 4 ⋅ 7 então 7| 28, daí concluímos que 7| 143.549. 

Nesse critério de divisibilidade por 7 foram necessárias 2 iterações e 3 operações 

para verificar se é divisível por 7. 

Exemplo (Mais um Critério de divisibilidade por 7): Verifique o critério de divisibilidade por 

7 da proposição sobre o número 143.549.  

2 ⋅ 14.354 + 3 ⋅ 9 = 28.708 + 27 = 28.735 

2 ⋅ 2.873 + 3 ⋅ 5 = 5.761 

2 ⋅ 576 + 3 ⋅ 1 = 1.155 

2 ⋅ 115 + 3 ⋅ 5 = 245 

2 ⋅ 24 + 3 ⋅ 5 = 63 

 
 
 
 
 
 
 
 
 
 
 
 
 
83 

Como 63 = 9 ⋅ 7 então 7|63 daí concluímos que 7| 143.549.  

Nesse critério de divisibilidade por 7 foram necessárias 5 iterações e 15 operações 

para verificar se é divisível por 7. 

A tabela  abaixo mostra o número de iterações e de operações para número de  6 

dígitos 143.549.  

Tabela 5: Comparando diferentes critérios de divisibilidade por 7 

1 
2 
3 
4 
5 
6 
7 

Critério de divisibilidade 
Critério de Blaise Pascal 
Critério de Zbikowski 
Critério de Chika Ofili 
Critério da quebra na dezena 
Critério da quebra na centena 
Critérios das Classes 
Mais um critério de 
divisibilidade por 7 

Iterações 
1 
3 
4 
2 
2 
2 
5 

Operações 
10 
6 
8 
8 
12 
3 
15 

                    Fonte: Elaborado pelo autor. 

Se  estivermos  procurando  o  critério  com  o  menor  número  de  iterações  para 

143.549, observamos que o critério de Pascal é o melhor com essa característica.  

Se  estivermos  procurando  o  critério  com  o  menor  número  de  operações  para 

143.549, então o critério das classes combinado com o de Zbikowski será o melhor. Não foi 

utilizado apenas o critério das classes nessa verificação, pois não dava para utilizá-lo novamente 

no número remanescente.   

Utilizando apenas um critério para verificar a divisibilidade por 7 observamos que 

o melhor é o de Zbikowski com 6 operações. Talvez, por esse motivo, seja o mais comentado 

nos livros. 

 
 
 
 
 
                    
 
 
 
 
 
 
 
84 

6 CONSIDERAÇÕES FINAIS 

No  presente  trabalho  foi  estabelecida  uma  comparação  entre  alguns  critérios  de 

divisibilidade  por  7.  Foi  verificado  que  o  critério  de  divisibilidade  de  Zbikowski  é  o  que 

necessita um menor número de operações para a verificação de um número de 6 algarismos. 

Foi verificado, também, que o critério de divisibilidade de Pascal é o que necessita um menor 

número de iterações (uso do algoritmo) para a verificação do mesmo número.  

Foram apresentados os critérios de divisibilidade por 2, 3, 4, 5, 6, 7, 8, 9 e 10.  Foi 

mostrado como construir critérios de divisibilidade por números primos utilizando o Teorema 

da  Quebra  na  Unidade.  Também,  foi  apresentado  o  ambiente  de  programação  Pascal  e  foi 

construído  algoritmos  para  determinar  os  divisores  de  um  número,  para  determinar  se  um 

número é primo ou não e para gerar critérios de divisibilidade por números primos.  

Houve  alguns  obstáculos  para  a  construção  dos  algoritmos,  pois  era  necessário 

rever a linguagem de programação Pascal. Também houve dificuldade na construção do texto, 

pois  não  há  muitos  artigos  e  dissertações  sobre  a  temática.  Algumas  dissertações  e  alguns 

artigos foram fundamentais para isso. 

Muitas  vezes  o  que  se  ensina  é  feito  de  maneira  mecânica  e  os  conteúdos  são 

explicados sem mostrar como surgiu e o seu porquê. Daí a importância de se saber como os 

critérios de divisibilidade são construídos e como demonstrá-los. Também é importante mostrar 

vários critérios de divisibilidade para o aluno para o mesmo escolher aquele que considere mais 

fácil de utilizar. Além disso, a temática é pouco abordada no ensino básico, apenas no 6º ano 

do ensino fundamental e em turmas olímpicas. Daí a necessidade de tratar a temática com maior 

profundidade.   

Os algoritmos para gerar critérios de divisibilidade utilizando a quebra a dezena e 

na  centena  não  foi  possível  ser  construído  por  questão  de  tempo  e  pela  sua  complexidade. 

Pretende-se  construir  tais  algoritmos  num  trabalho  futuro.  Como  o  conteúdo  algoritmo  foi 

inserido na BNNC do ensino médio, o trabalho pode servir como guia para a apresentação do 

tema em turmas regulares e olímpicas do ensino médio. 

É necessário que o professor esteja mais preparado tanto em conteúdo quanto em 

ferramentas  computacionais  para  ministrar  as  aulas,  pois  é  uma  demanda  crescente  o 

conhecimento matemático e computacional na sociedade atual. 

 
 
 
  
 
85 

REFERÊNCIAS 

ANDREESCU, Titu. GELCA, Razvan. Putnam and Beyond. New York: Springer, 2007. 

ALENCAR FILHO, Edgard de. Aritmética dos Inteiros. São Paulo: Nobel, 1987. 

ALENCAR FILHO, Edgard de. Teoria Elementar dos Números. São Paulo: Nobel, 1981. 

ÁVILA, Geraldo Severo de Souza. Várias faces da matemática: tópicos para licenciatura e 
leitura geral. São Paulo: Blucher, 2010. 

BRASIL.  Ministério  da  Educação.  Base  Nacional  Comum  Curricular.  Brasília,  2018. 
Disponível em http://base nacionalcomum.mmec.gov.br/images/BNCC_ELEF_110518_versa 
ofinal_site.pdf. 

BRASIL.  Ministério  da  Educação.  Base  Nacional  Comum  Curricular.  Brasília,  2018.  

Disponível em http://portal.mec.gov.br/index.php?option=com_docman&view=download&ali 

as=85121-bncc-ensino-medio&category_slug=abril-2018-pdf&Itemid=30192.  

CAMINHA,  Antonio  Muniz.  Tópicos  de  Matemática  Elementar  Volume  5:  Teoria  dos 
Números. Rio de Janeiro: SBM, 2013. 

BURTON, David. Elementary Number Theory. Massachusetts: Allyn and Bacon, 1980. 

DOMINGUES, Hygino Hungueros. Fundamentos de Aritmética. São Paulo: Atual, 1991.  

FERREIRA, Antonio Eudes. Números primos e o postulado de Bertrand. 44 f. Dissertação 
(Mestrado Profissional em Matemática em Rede Nacional) – Universidade Federal da Paraíba, 
João Pessoa, 2014. 

GUEDES, Mário Gustavo Pinto.88). Outros critérios de divisibilidade. Revista Professor de 
Matemática, Rio de Janeiro, n2, 1988. 

HEFEZ, Abramo. Aritmética. Rio de Janeiro: SBM, 2016. 

HEFEZ, Abramo. Iniciação a Aritmética. Rio de Janeiro: IMPA, 2015. 

IEZZI,  Gelson.  MURAKAMI,  Carlos.  Fundamentos  da  Matemática  Elementar  vol.  1: 

Conjuntos e Funções. São Paulo: Atual, 2013.  

LIMA, Elon Lages. Análise Real Volume 1: Funções de uma variável. Rio de Janeiro: IMPA, 

2006.  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
86 

MANZANO, José Augusto Navarro Garcia. YAMATUMI, Wilson Yoshiteru. Programando 

em Turbo Pascal 7.0:  Guia Prático de Orientação e Desenvolvimento. São Paulo: Érica, 2001.  

MARTINEZ, Fábio Brochero. MOREIRA, Carlos Gustavo. SALDANHA, Nicolau. TENGAN, 

Eduardo.  Teoria  dos  Números:  um  passeio  com  primos  e  outros  números  familiares  pelo 

mundo inteiro. Rio de Janeiro: IMPA, 2018.  

MATHIAS, Ivo Mario. Algoritmos e programação I. Ponta Grossa: UEPG, 2017.  

OLIVEIRA,  Krerley  Irraciel  Martins;  FERNÁNDEZ,  Adán  José  Corcho.    Iniciação  à 

matemática: um curso com problemas e soluções. Rio de Janeiro: SBM, 2010.  

PEREIRA, Ricardo Reis. Linguagem de Programação I. Fortaleza: Editora UECE, 2015. 

RIBEIRO, Bruno; SILVA, Talysson Paulo da. Montando critérios de divisibilidade diferentes. 

Professor  de  matemática  on-line,  Rio  de  Janeiro,  v.8,  n.2,  abril  de  2020.  Disponível  em: 

<https://doi.org/10.21711/2319023x2020/pmo813>.  

SANTOS, José Plínio de Oliveira.  Introdução à Teoria dos Números. Rio de Janeiro: SBM, 

1998.  

SILVA, Talysson Paulo da. Critérios de divisibilidade: usuais, incomuns e curiosos. 61 f. 
Dissertação (Mestrado Profissional em Matemática em Rede Nacional) – Universidade Federal 
da Paraíba, João Pessoa, 2019. 

SHIMOKAWA, Edivaldo Yuzo. Teste de Chika: Um critério geral de divisibilidade. 2020. 34 
f.  Dissertação  (Mestrado  Profissional  em  Matemática  em  Rede  Nacional)  –  Universidade 
Federal do Mato Grosso, Cuiabá, 2020. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
87 

ANEXO 

Lista de Números Primos  

Até 10:  

2 3 5 7  

Até 100:  

11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97  

Até 1000:  

101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197  
199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313  
317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439  
443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571  
577 587 593 599 601 607 613 617 619 631 641 643 647 653 659 661 673 677 683 691  
701 709 719 727 733 739 743 751 757 761 769 773 787 797 809 811 821 823 827 829  
839 853 857 859 863 877 881 883 887 907 911 919 929 937 941 947 953 967 971 977  
983 991 997  

Até 10.000:  

1009 1013 1019 1021 1031 1033 1039 1049 1051 1061 1063 1069 1087 1091 1093 1097 
1103 1109 1117 1123 1129 1151 1153 1163 1171 1181 1187 1193 1201 1213 1217 1223 
1229 1231 1237 1249 1259 1277 1279 1283 1289 1291 1297 1301 1303 1307 1319 1321 
1327 1361 1367 1373 1381 1399 1409 1423 1427 1429 1433 1439 1447 1451 1453 1459 
1471 1481 1483 1487 1489 1493 1499 1511 1523 1531 1543 1549 1553 1559 1567 1571  
1579 1583 1597 1601 1607 1609 1613 1619 1621 1627 1637 1657 1663 1667 1669 1693 
1697 1699 1709 1721 1723 1733 1741 1747 1753 1759 1777 1783 1787 1789 1801 1811 
1823 1831 1847 1861 1867 1871 1873 1877 1879 1889 1901 1907 1913 1931 1933 1949 
1951 1973 1979 1987 1993 1997 1999 2003 2011 2017 2027 2029 2039 2053 2063 2069 
2081 2083 2087 2089 2099 2111 2113 2129 2131 2137 2141 2143 2153 2161 2179 2203  
2207 2213 2221 2237 2239 2243 2251 2267 2269 2273 2281 2287 2293 2297 2309 2311 
2333 2339 2341 2347 2351 2357 2371 2377 2381 2383 2389 2393 2399 2411 2417 2423 
2437 2441 2447 2459 2467 2473 2477 2503 2521 2531 2539 2543 2549 2551 2557 2579 
2591 2593 2609 2617 2621 2633 2647 2657 2659 2663 2671 2677 2683 2687 2689 2693 
2699 2707 2711 2713 2719 2729 2731 2741 2749 2753 2767 2777 2789 2791 2797 2801  
2803 2819 2833 2837 2843 2851 2857 2861 2879 2887 2897 2903 2909 2917 2927 2939 
2953 2957 2963 2969 2971 2999 3001 3011 3019 3023 3037 3041 3049 3061 3067 3079 
3083 3089 3109 3119 3121 3137 3163 3167 3169 3181 3187 3191 3203 3209 3217 3221 
3229 3251 3253 3257 3259 3271 3299 3301 3307 3313 3319 3323 3329 3331 3343 3347 
3359 3361 3371 3373 3389 3391 3407 3413 3433 3449 3457 3461 3463 3467 3469 3491  
3499 3511 3517 3527 3529 3533 3539 3541 3547 3557 3559 3571 3581 3583 3593 3607 
3613 3617 3623 3631 3637 3643 3659 3671 3673 3677 3691 3697 3701 3709 3719 3727 
3733 3739 3761 3767 3769 3779 3793 3797 3803 3821 3823 3833 3847 3851 3853 3863 

 
 
 
 
 
 
 
 
 
 
 
88 

3877 3881 3889 3907 3911 3917 3919 3923 3929 3931 3943 3947 3967 3989 4001 4003 
4007 4013 4019 4021 4027 4049 4051 4057 4073 4079 4091 4093 4099 4111 4127 4129  
4133 4139 4153 4157 4159 4177 4201 4211 4217 4219 4229 4231 4241 4243 4253 4259 
4261 4271 4273 4283 4289 4297 4327 4337 4339 4349 4357 4363 4373 4391 4397 4409 
4421 4423 4441 4447 4451 4457 4463 4481 4483 4493 4507 4513 4517 4519 4523 4547 
4549 4561 4567 4583 4591 4597 4603 4621 4637 4639 4643 4649 4651 4657 4663 4673 
4679 4691 4703 4721 4723 4729 4733 4751 4759 4783 4787 4789 4793 4799 4801 4813  
4817 4831 4861 4871 4877 4889 4903 4909 4919 4931 4933 4937 4943 4951 4957 4967 
4969 4973 4987 4993 4999 5003 5009 5011 5021 5023 5039 5051 5059 5077 5081 5087 
5099 5101 5107 5113 5119 5147 5153 5167 5171 5179 5189 5197 5209 5227 5231 5233 
5237 5261 5273 5279 5281 5297 5303 5309 5323 5333 5347 5351 5381 5387 5393 5399 
5407 5413 5417 5419 5431 5437 5441 5443 5449 5471 5477 5479 5483 5501 5503 5507  
5519 5521 5527 5531 5557 5563 5569 5573 5581 5591 5623 5639 5641 5647 5651 5653 
5657 5659 5669 5683 5689 5693 5701 5711 5717 5737 5741 5743 5749 5779 5783 5791 
5801 5807 5813 5821 5827 5839 5843 5849 5851 5857 5861 5867 5869 5879 5881 5897 
5903 5923 5927 5939 5953 5981 5987 6007 6011 6029 6037 6043 6047 6053 6067 6073 
6079 6089 6091 6101 6113 6121 6131 6133 6143 6151 6163 6173 6197 6199 6203 6211  
6217 6221 6229 6247 6257 6263 6269 6271 6277 6287 6299 6301 6311 6317 6323 6329 
6337 6343 6353 6359 6361 6367 6373 6379 6389 6397 6421 6427 6449 6451 6469 6473 
6481 6491 6521 6529 6547 6551 6553 6563 6569 6571 6577 6581 6599 6607 6619 6637 
6653 6659 6661 6673 6679 6689 6691 6701 6703 6709 6719 6733 6737 6761 6763 6779 
6781 6791 6793 6803 6823 6827 6829 6833 6841 6857 6863 6869 6871 6883 6899 6907  
6911 6917 6947 6949 6959 6961 6967 6971 6977 6983 6991 6997 7001 7013 7019 7027 
7039 7043 7057 7069 7079 7103 7109 7121 7127 7129 7151 7159 7177 7187 7193 7207 
7211 7213 7219 7229 7237 7243 7247 7253 7283 7297 7307 7309 7321 7331 7333 7349 
7351 7369 7393 7411 7417 7433 7451 7457 7459 7477 7481 7487 7489 7499 7507 7517 
7523 7529 7537 7541 7547 7549 7559 7561 7573 7577 7583 7589 7591 7603 7607 7621  
7639 7643 7649 7669 7673 7681 7687 7691 7699 7703 7717 7723 7727 7741 7753 7757 
7759 7789 7793 7817 7823 7829 7841 7853 7867 7873 7877 7879 7883 7901 7907 7919 
7927 7933 7937 7949 7951 7963 7993 8009 8011 8017 8039 8053 8059 8069 8081 8087 
8089 8093 8101 8111 8117 8123 8147 8161 8167 8171 8179 8191 8209 8219 8221 8231 
8233 8237 8243 8263 8269 8273 8287 8291 8293 8297 8311 8317 8329 8353 8363 8369  
8377 8387 8389 8419 8423 8429 8431 8443 8447 8461 8467 8501 8513 8521 8527 8537 
8539 8543 8563 8573 8581 8597 8599 8609 8623 8627 8629 8641 8647 8663 8669 8677 
8681 8689 8693 8699 8707 8713 8719 8731 8737 8741 8747 8753 8761 8779 8783 8803 
8807 8819 8821 8831 8837 8839 8849 8861 8863 8867 8887 8893 8923 8929 8933 8941 
8951 8963 8969 8971 8999 9001 9007 9011 9013 9029 9041 9043 9049 9059 9067 9091  
9103 9109 9127 9133 9137 9151 9157 9161 9173 9181 9187 9199 9203 9209 9221 9227 
9239 9241 9257 9277 9281 9283 9293 9311 9319 9323 9337 9341 9343 9349 9371 9377 
9391 9397 9403 9413 9419 9421 9431 9433 9437 9439 9461 9463 9467 9473 9479 9491 
9497 9511 9521 9533 9539 9547 9551 9587 9601 9613 9619 9623 9629 9631 9643 9649 
9661 9677 9679 9689 9697 9719 9721 9733 9739 9743 9749 9767 9769 9781 9787 9791  
9803 9811 9817 9829 9833 9839 9851 9857 9859 9871 9883 9887 9901 9907 9923 9929 
9931 9941 9949 9967 9973 

 
 
 
