Universidade de Bras(cid:237)lia
Instituto de CiŒncias Exatas
Departamento de MatemÆtica
Programa de Mestrado Pro(cid:28)ssional em
MatemÆtica em Rede Nacional

INTRODU˙ˆO A SISTEMAS
CRIPTOGR`FICOS E O USO DE
GERADORES DE SEQU˚NCIAS DE
N(cid:218)MEROS ALEAT(cid:211)RIOS E
PSEUDO-ALEAT(cid:211)RIOS

EDUARDO C˝CERO VIEIRA BORGES JUNIOR

Bras(cid:237)lia

2014

Ficha catalográfica elaborada pela Biblioteca Central da Universidade de 
Brasília. Acervo 1019073.

               Bo r ges   Jun i o r ,  Edua r do  Cí ce r o  V i e i r a .
 B732 i           I n t r odução   a   s i s t emas   c r i p t og r á f i cos   e   o   uso   de   ge r ado r es  
                de   sequênc i as   de   núme r os   a l ea t ó r i os   e   pseudo - a l ea t ó r i os   /  
               Edua r do  Cí ce r o   Vi e i r a  Bo r ges   Jun i o r .   - -   2014 .
                      54   f .   :   i l .   ;   30   cm.

                     Di sse r t ação   (mes t r ado )   -  Un i ve r s i dade   de  Br as í l i a ,  
                I ns t i t u t o   de  Ci ênc i as  Exa t as ,  Depa r t amen t o   de  Ma t emá t i ca ,  
                2014 .
                     Or i en t ação :  Ru i  Se ime t z .
                      I nc l u i   b i b l i og r a f i a .

                      1 .  Cr i p t og r a f i a   -  Ma t emá t i ca .   2 .   Va r i áve i s   a l ea t ó r i as .
                I .  Se ime t z ,  Ru i .   I I .   T í t u l o .

                                                                                                               CDU  681 . 188

 
 
 
 
 
 
Universidade de Bras(cid:237)lia
Instituto de CiŒncias Exatas
Departamento de MatemÆtica
Programa de Mestrado Pro(cid:28)ssional em
MatemÆtica em Rede Nacional

INTRODU˙ˆO A SISTEMAS
CRIPTOGR`FICOS E O USO DE
GERADORES DE SEQU˚NCIAS DE
N(cid:218)MEROS ALEAT(cid:211)RIOS E
PSEUDO-ALEAT(cid:211)RIOS

Autor: Eduardo C(cid:237)cero Vieira Borges Junior

Orientador: Prof. Dr. Rui Seimetz

Monogra(cid:28)a apresentada como requisito parcial para a obten(cid:231)ªo do grau de Mestre

em MatemÆtica Pro(cid:28)ssional pelo Departamento de MatemÆtica da Universidade de

Bras(cid:237)lia.

Bras(cid:237)lia

2014

EDUARDO C˝CERO VIEIRA BORGES JUNIOR

INTRODU˙ˆO A SISTEMAS CRIPTOGR`FICOS E O USO DE GERADORES

DE SEQU˚NCIAS DE N(cid:218)MEROS ALEAT(cid:211)RIOS E PSEUDO-ALEAT(cid:211)RIOS

Monogra(cid:28)a apresentada como requisito parcial para a obten(cid:231)ªo do grau de Mestre

em MatemÆtica Pro(cid:28)ssional pelo Departamento de MatemÆtica da Universidade de

Bras(cid:237)lia.

`rea de Concentra(cid:231)ªo: MatemÆtica

Bras(cid:237)lia

2014

(cid:192) minha esposa, ClÆudia Borges, mulher da minha vida.

DEDICO

Agradecimentos

(cid:192) Sociedade Brasileira de MatemÆtica (SBM) por meio do PROFMAT, porque

propicia uma melhor capacita(cid:231)ªo dos educadores no ensino da matemÆtica.

Aos professores da Universidade de Bras(cid:237)lia (UnB) que participaram do curso e

contribu(cid:237)ram para uma melhor forma(cid:231)ªo dos alunos.

Ao professor Dr. Rui Seimetz, coordenador do PROFMAT na UnB, pela dedica-

(cid:231)ªo na condu(cid:231)ªo do curso, bem como na colabora(cid:231)ªo, paciŒncia e ensinamentos que

permitiram a elabora(cid:231)ªo deste trabalho.

Aos meus amigos Lopes, David e Felipe, pela amizade, e presen(cid:231)a nos momentos

dif(cid:237)ceis.

Aos colegas de turma, e principalmente, os amigos do ColØgio P(cid:243)dion, pelo aux(cid:237)lio

e companheirismo ao longo de todo o curso.

Aos familiares, pais, irmªo, esposa, pelo apoio, compreensªo e incentivo para que

tudo desse certo.

A Deus, por tornar isso poss(cid:237)vel.

"No que diz respeito ao desempenho, ao compromisso, ao esfor(cid:231)o, (cid:224) dedica(cid:231)ªo; nªo

existe meio-termo. Ou se faz uma coisa bem feita, ou entªo nªo se faz"

Ayrton Senna.

Resumo

Neste trabalho iremos abordar alguns t(cid:243)picos referentes (cid:224) criptogra(cid:28)a elementar,

de sistemas criptogrÆ(cid:28)cos simØtricos e assimØtricos, apresentados de modo a expor a

interpreta(cid:231)ªo matemÆtica acerca dos principais mØtodos utilizados para a encripta(cid:231)ªo

de dados.

Constam, ainda, neste trabalho, estudos sobre os principais mØtodos geradores de

nœmeros aleat(cid:243)rios e mØtodos auxiliares a estes geradores, assim como sua necessidade

e envolvimento com a criptogra(cid:28)a. Estes estudos auxiliares, como serÆ mostrado,

promovem a elabora(cid:231)ªo de um sistema mais robusto, de dif(cid:237)cil quebra de c(cid:243)digo.

Abstract

In this paper we discuss some topics related to elementary cryptography, symmetric

and asymmetric cryptosystems, presented to expose the mathematical interpretation

about the main methods used for data encryption.

Also in this work are presented studies on the major methods of random number

generators and auxiliary generators to these methods, as well as their need and relation

with encryption. These auxiliary studies, as will be shown, promote the development

of a more robust system, more di(cid:30)cult to break the code.

8

SumÆrio

Resumo

Abstract

1 Introdu(cid:231)ªo

1.1 CONTEXTO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2 OBJETIVOS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2 CRIPTOGRAFIA

2.1 SISTEMAS CRIPTOGR`FICOS SIM(cid:201)TRICOS E ASSIM(cid:201)TRICOS .

2.2 ALGORITMOS DE SISTEMAS SIM(cid:201)TRICOS . . . . . . . . . . . . .

2.2.1 ONE-TIME-PAD . . . . . . . . . . . . . . . . . . . . . . . . . .

2.2.2 DES (DATA ENCRYPTION STANDARD)

. . . . . . . . . . .

2.2.3 TRIPLE DES (3DES)

. . . . . . . . . . . . . . . . . . . . . . .

2.2.4 RC4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.3 ALGORITMOS DE SISTEMAS ASSIM(cid:201)TRICOS . . . . . . . . . . .

2.3.1 DIFFIE-HELLMAN . . . . . . . . . . . . . . . . . . . . . . . .

2.3.2 RSA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.4 ATAQUES AOS SISTEMAS CRIPTOGR`FICOS . . . . . . . . . . .

2.5 UTILIZA˙ˆO DE N(cid:218)MEROS ALEAT(cid:211)RIOS EM CRIPTOGRAFIA

3 GERADORES DE N(cid:218)MEROS ALEAT(cid:211)RIOS

3.1 FONTES ALEAT(cid:211)RIAS . . . . . . . . . . . . . . . . . . . . . . . . . .

3.1.1 LAN˙AMENTO DE MOEDA . . . . . . . . . . . . . . . . . . .

3.1.2 RU˝DO DO DIODO . . . . . . . . . . . . . . . . . . . . . . . .

3.1.3 MATERIAL RADIOATIVO . . . . . . . . . . . . . . . . . . . .

3.1.4 T12RNG . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

9

7

8

11

11

11

12

13

14

14

15

18

18

19

19

21

24

26

26

27

27

27

28

28

4 GERADORES DE N(cid:218)MEROS PSEUDO-ALEAT(cid:211)RIOS 29

4.1 GERA˙ˆO DE SEQ(cid:220)˚NCIAS DE N(cid:218)MEROS ALEAT(cid:211)RIOS UTILI-

ZANDO SOFTWARES . . . . . . . . . . . . . . . . . . . . . . . . . . .

30

4.2 ALGORITMOS DE GERA˙ˆO DE SEQ(cid:220)˚NCIAS DE N(cid:218)MEROS

PSEUDO-ALEAT(cid:211)RIOS . . . . . . . . . . . . . . . . . . . . . . . . .

4.2.1 M(cid:201)TODO CONGRUENTE LINEAR . . . . . . . . . . . . . . .

4.2.2 LFSR (LINEAR FEEDBACK SHIFT REGISTER) . . . . . . .

4.2.3 GERADOR GEFFE . . . . . . . . . . . . . . . . . . . . . . . .

5 TRANSPOSI˙ˆO DID`TICA

5.1 SUGEST(cid:213)ES DE AULA . . . . . . . . . . . . . . . . . . . . . . . . . .

5.1.1 DIFFIE-HELMAN . . . . . . . . . . . . . . . . . . . . . . . . .

5.1.2 RSA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

5.2 TRABALHOS FUTUROS . . . . . . . . . . . . . . . . . . . . . . . . .

5.3 Considera(cid:231)ıes (cid:28)nais . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

AP˚NDICE

30

31

32

34

35

35

36

40

48

49

52

10

1

Introdu(cid:231)ªo

1.1 CONTEXTO

A seguran(cid:231)a dos sistemas de informa(cid:231)ªo Ø obtida por meio de sistemas cripto-
grÆ(cid:28)cos destinados a modi(cid:28)car o c(cid:243)digo escrito para outro nªo leg(cid:237)vel a quem nªo for
endere(cid:231)ada tal informa(cid:231)ªo.

Esta seguran(cid:231)a obtida por muitos sistemas criptogrÆ(cid:28)cos depende da gera(cid:231)ªo de da-
dos nªo correlatos, independentes, que nªo se podem prever. Como exemplos podem
ser citados a sequŒncia chave do one-time-pad, a chave do algoritmo de encripta(cid:231)ªo
DES, os primos p e q do algoritmo RSA e dos esquemas de assinaturas digitais.

Em todos esses casos os dados devem ser aleat(cid:243)rios e sua quantidade deve ser grande
o su(cid:28)ciente, de maneira que a probabilidade de se quebrar o c(cid:243)digo seja m(cid:237)nima e que
a sua obten(cid:231)ªo nªo seja tªo custosa.

Em termos prÆticos, pode-se perceber que a quantidade de chaves poss(cid:237)veis para o
DES Ø de 256, se uma chave k for selecionada de um gerador verdadeiramente aleat(cid:243)rio.
Um inimigo pode tentar atØ 255 chaves antes de descobrir, com probabilidade
, a
chave correta k. Mas se esta tiver sido criada da expansªo de 16 bits verdadeiramente
aleat(cid:243)rios em 56 bits, por um gerador pseudo-aleat(cid:243)rio, o conjunto de tentativas cai
para 215. Isto demonstra o dual entre seguran(cid:231)a e facilidade de implementa(cid:231)ªo. Assim
o presente trabalho Ø desenvolvido no (cid:226)mbito da anÆlise matemÆtica dos principais
mØtodos criptogrÆ(cid:28)cos, simØtricos e assimØtricos, bem como da exposi(cid:231)ªo de alguns
dos sistemas utilizados para a gera(cid:231)ªo de nœmeros aleat(cid:243)rios e pseudo-aleat(cid:243)rios.

1
2

1.2 OBJETIVOS

O principal objetivo do trabalho Ø introduzir a criptogra(cid:28)a como um todo, bem
como expor alguns dos mØtodos criptogrÆ(cid:28)cos, uma vez que estes sªo aplica(cid:231)ıes diretas
e prÆticas de conhecimentos matemÆticos e computacionais elementares.

11

Em segundo plano pode ser dito que este trabalho esclarece o leitor em rela(cid:231)ªo
(cid:224)s utiliza(cid:231)ıes e a import(cid:226)ncia da gera(cid:231)ªo de sequŒncias de nœmeros aleat(cid:243)rios para a
criptogra(cid:28)a, sem contar a import(cid:226)ncia da criptogra(cid:28)a em si.

2 CRIPTOGRAFIA

A criptogra(cid:28)a estÆ intimamente ligada ao cunho deste trabalho. O objetivo deste
trabalho Ø discutir alguns dos principais mØtodos utilizados para a encripta(cid:231)ªo de
mensagens, sejam estes de criptogra(cid:28)a simØtrica, ou assimØtrica, bem como apresentar
alguns mecanismos utilizados para a gera(cid:231)ªo de sequŒncias de nœmeros aleat(cid:243)rios e
pseudo-aleat(cid:243)rios.

O envolvimento dos nœmeros aleat(cid:243)rios nos processos criptogrÆ(cid:28)cos, acima de tudo,
contribui para a con(cid:28)abilidade da comunica(cid:231)ªo, tenta eliminar as chances de rompi-
mento de c(cid:243)digo por pessoas alheias e quando isso nªo for poss(cid:237)vel, adia ao mÆximo o
conhecimento da verdadeira informa(cid:231)ªo transmitida, atØ que outro meio mais con(cid:28)Ævel
seja estabelecido. A criptogra(cid:28)a se compromete a fornecer servi(cid:231)os de seguran(cid:231)a da
informa(cid:231)ªo. Alguns deles sªo:

• Servi(cid:231)o con(cid:28)dencial: con(cid:28)an(cid:231)a em que a mensagem possa ser lida apenas pelo

receptor desejado.

• Autentica(cid:231)ªo da origem: garantia sobre quem originou a mensagem.

• Integridade: con(cid:28)an(cid:231)a em que a mensagem nªo tenha sido modi(cid:28)cada desde o

momento da cria(cid:231)ªo.

• Nªo-retrata(cid:231)ªo: quem originou a mensagem nªo pode negar tŒ-lo feito.

Por estas questıes, Ø vÆlido salientar aspectos de comprometimento de c(cid:243)digo e
poss(cid:237)veis ataques aos c(cid:243)digos estabelecidos. Estes esclarecimentos constam no (cid:28)nal
deste cap(cid:237)tulo.

A seguir apresentamos os tipos de sistemas de criptogra(cid:28)a.

12

2.1 SISTEMAS CRIPTOGR`FICOS SIM(cid:201)TRICOS E ASSI-

M(cid:201)TRICOS

Existem dois tipos de criptogra(cid:28)a, a criptogra(cid:28)a simØtrica e a assimØtrica.

A criptogra(cid:28)a simØtrica opera com a premissa de que a chave Ø de conhecimento

unicamente do emissor e do receptor.

Na criptogra(cid:28)a assimØtrica, ou de chave pœblica, cada um dos usuÆrios do meio
criptogrÆ(cid:28)co possui um material chave, dividido em duas por(cid:231)ıes: a componente pœ-
blica e a componente privada, cada uma gerando uma respectiva transforma(cid:231)ªo.

Na criptogra(cid:28)a simØtrica aplica-se um conjunto prØ-determinado (pela chave) de
cifras ao texto direto. Seja ela a transforma(cid:231)ªo invert(cid:237)vel F, aplicada (cid:224) mensagem X
utilizando-se a chave Z. Dessa forma tem-se:

Y = F (X, Z) = FZ(X)

Nesta situa(cid:231)ªo, o resultado Y Ø a mensagem criptografada.

Na decripta(cid:231)ªo cabe ao elemento receptor da mensagem aplicar a transforma(cid:231)ªo

inversa em Y de modo a se ter o texto inicial. Para isso faz-se:

F −1(Y, Z) = F −1

Z (Y ) = F −1

Z [FZ(X)] = X

A chave Z Ø responsÆvel pela escolha do modo particular de se fazer tanto a encrip-

ta(cid:231)ªo como a decripta(cid:231)ªo.

Essa chave deve ser entregue por um canal seguro, considerando-se que a seguran(cid:231)a

do sistema estÆ embasada na natureza secreta da chave.

13

Na criptogra(cid:28)a assimØtrica, ou de chave pœblica, cada um dos usuÆrios do meio crip-
togrÆ(cid:28)co possui um material chave, dividido em duas por(cid:231)ıes: a componente pœblica e a
componente privada, cada uma gerando uma respectiva transforma(cid:231)ªo. Sua (cid:28)nalidade
Ø a comunica(cid:231)ªo de usuÆrios em um canal inseguro, com distribui(cid:231)ªo de mœtuas chaves.

Seu funcionamento bÆsico requer um conjunto de transforma(cid:231)ıes invert(cid:237)veis (algo-

ritmos).

Assim, a partir de uma combina(cid:231)ªo das componentes pœblica e privada das chaves,
gerando a chave Z, Ø estabelecido, de modo anÆlogo (cid:224) criptogra(cid:28)a simØtrica, o processo
de encripta(cid:231)ªo, EZ, e decripta(cid:231)ªo, DZ.

EZ : fZ(x) = y

DZ : f −1

Z (y) = x

Para que o processo ocorra, como esperado, de forma Ægil e segura, deve-se garantir

que:

• fZ(x) seja facilmente computada;

• f −1

Z (y) seja extremamente dif(cid:237)cil de ser encontrada por um inimigo;

• f −1

Z (y) seja fÆcil de ser escrita para o receptor em posse da chave, porØm que seja
impraticÆvel a partir dela encontrar a chave privada.

Ap(cid:243)s essa explica(cid:231)ªo sobre os tipos de sistemas criptogrÆ(cid:28)cos descrevemos os algo-

ritmos correspondentes a cada sistema.

2.2 ALGORITMOS DE SISTEMAS SIM(cid:201)TRICOS

2.2.1 ONE-TIME-PAD

MØtodo criado em 1917 por Gilbert Sandford Vernam (com o nome de Cifra de Ver-
nam) e aperfei(cid:231)oado por Joseph Mauborgne.

14

Uma chave Ø gerada na forma de uma sequŒncia de bits gerados aleatoriamente.
Com esta chave Ø realizada a opera(cid:231)ªo ou exclusivo (xor) entre a chave e a mensagem.
A resposta a esta opera(cid:231)ªo constitui a mensagem cifrada.

Para recuperar a mensagem original basta efetuar o novamente a opera(cid:231)ªo ou ex-

clusivo (xor) da cifra com a chave.

Esse mØtodo Ø bem simples e e(cid:28)ciente, desde que a chave seja tªo longa quanto a
mensagem e que a chave seja realmente aleat(cid:243)ria. Essas condi(cid:231)ıes, sobretudo em razªo
da di(cid:28)culdade de se gerar nœmeros aleat(cid:243)rios, nem sempre podem ser atendidas, o que
restringe seu uso.

2.2.2 DES (DATA ENCRYPTION STANDARD)

Criado pela IBM em 1970, este algoritmo trabalha com blocos de 64 bits de entrada e
de sa(cid:237)da, chaves de 56 bits com paridade, e Ø fundamentalmente baseado na permuta-
(cid:231)ªo de elementos. (cid:201) fÆcil de implementar, mas Ø vulnerÆvel a ataques de for(cid:231)a bruta
e a transmissªo da chave, como Ø comum nos algoritmos de criptogra(cid:28)a simØtrica, ne-
cessita de mÆxima seguran(cid:231)a. Essa chave Ø o componente aleat(cid:243)rio do algoritmo. O
mecanismo do DES consiste em dividir a mensagem (bloco de 64 bits) em duas partes

15

(32 bits para cada lado), a parte esquerda L e a parte direita R. A chave consiste em 64
bits, mas apenas 56 sªo utilizados efetivamente no algoritmo, sendo os 8 bits restantes
usados somente para checar paridade sendo descartados depois.

No processo de encripta(cid:231)ªo, os lados, esquerdo e direito, permutam da seguinte

forma:

• Li = Ri−1 i variando de 1 a 16, uma vez que ocorrerªo 16 itera(cid:231)ıes.

• Ri = Li−1 ⊕ F (Ri−1, Zi) Ø uma fun(cid:231)ªo invert(cid:237)vel prØ-de(cid:28)nida, denominada fun(cid:231)ªo

de Feistel.

O s(cid:237)mbolo ⊕ signi(cid:28)ca a opera(cid:231)ªo de ou exclusivo (xor).

A fun(cid:231)ªo F atua na metade do bloco, junto a uma chave. O resultado Ø combinado

(cid:224) outra metade do bloco, e as metades trocam de "lado".

Esse processo de cruzar e alternar Ø conhecido como esquema de Feistel, e assegura
que o processo de encriptar e decriptar sejam similares. A œnica diferen(cid:231)a Ø que as
chaves de cada estÆgio deverªo ser aplicadas em ordem inversa para decriptar.
A chave Zi de 48-bits atua em Ri−1 expandido tambØm para 48 bits para realizar a
fun(cid:231)ªo que efetuarÆ um xor com o lado esquerdo, resultando em Ri . A expansªo de Ø
feita da seguinte maneira:

Seja Ri uma sequŒncia de bits:

Ri = r1r2r3r4r5r6r7r8...r29r30r31r32

Esta sequŒncia Ø dividida em blocos de 4 bits resultando em Ri’:

R∗

i = r1r2r3r4

r5r6r7r8

...

r29r30r31r32

Entªo, (cid:224) frente de cada bloco Ø repetido o bit anterior e ao (cid:28)nal, o posterior.

R(cid:48)

i = r32r1r2r3r4r5

r4r5r6r7r8r9

...

r28r29r30r31r32r1

Dessa forma, o resultado R(cid:48)

i possui 48 bits.

16

Depois de realizado o xor entre a chave e o bloco expandido, os 48 bits resultantes
passam por um processo de substitui(cid:231)ªo. Essas substitui(cid:231)ıes sªo feitas em 8 "cai-
xas"com 6 bits de entrada e 4 de sa(cid:237)da, cada caixa. (cid:201) feito isso para que este resultado
recupere o tamanho de 32 bits.

O processo de decripta(cid:231)ªo Ø feito seguindo os passos inversos ao da encripta(cid:231)ªo.

Atualmente, este processo nªo Ø mais utilizado, porØm ele serve de base para a

aplica(cid:231)ªo de versıes mais modernas, como o triple DES, mais seguro.

17

2.2.3 TRIPLE DES (3DES)

O Triple DES Ø uma cifra de blocos que tem como base o DES.

A sua vantagem em rela(cid:231)ªo ao DES Ø que o tamanho da chave foi aumentado sem

precisar modi(cid:28)car o algoritmo.

Utiliza trŒs etapas, e opera com trŒs chaves: K1, K2, K3.

Este algoritmo realizada a composi(cid:231)ªo da fun(cid:231)ªo DES (cid:224)s trŒs chaves, ou seja:

C = 3DES(M ) = DES{K3, DES[K2, DES(K1, M )]}

Nesse caso, M Ø o bloco de mensagem e C Ø o resultado cifrado.

Abaixo estÆ representado o diagrama de funcionamento simpli(cid:28)cado do Triplo DES.

2.2.4 RC4

Funciona com base em cifras sequenciais, com opera(cid:231)ıes orientadas a bytes, seu
algoritmo faz uso de permuta(cid:231)ıes pseudo-aleat(cid:243)rias da chave. Faz parte de protocolos

18

usuais de seguran(cid:231)a, como o SSL, que protege o trÆfego de informa(cid:231)ıes na Internet, e
o WEP, que faz parte de rede wireless.

Seu mecanismo Ø semelhante ao do one-time-pad, uma opera(cid:231)ªo xor Ø aplicada
entre uma sequŒncia pseudo-aleat(cid:243)ria chaveada e os dados, mesma chave para cifrar e
decifrar. Seu tamanho de c(cid:243)digo Ø 1/10 do DES.

A chave, que Ø formada por uma sequŒncia de bits, Ø independente do texto a ser

cifrado.

De acordo com a literatura atual, nªo foi encontrado nenhum ataque prÆtico ao
algoritmo da sequŒncia pseudo-aleat(cid:243)ria, mas a maneira em que ele Ø inicializado Ø
considerada uma forma insegura.

De acordo com o que foi visto, o processo fundamental deste algoritmo estÆ na
obten(cid:231)ªo do conjunto aleat(cid:243)rio. Depois desse processo, o algoritmo se reduz (cid:224) realiza(cid:231)ªo
da fun(cid:231)ªo xor com o texto principal.

2.3 ALGORITMOS DE SISTEMAS ASSIM(cid:201)TRICOS

2.3.1 DIFFIE-HELLMAN

Este algoritmo faz parte do protocolo "key exchange", que permite que duas partes,
que nunca haviam tido contato, compartilhem uma chave secreta atravØs de um meio
inseguro de comunica(cid:231)ªo. Essa chave, posteriormente, pode encriptar mensagens, es-
tabelecendo um sistema simØtrico de criptogra(cid:28)a.

O algoritmo Di(cid:30)e-Hellman foi inventado em 1976, sendo o primeiro algoritmo de

chave pœblica.

Este algoritmo Ø fundamentalmente baseado na di(cid:28)culdade de se calcular logaritmos
discretos. A fun(cid:231)ªo logaritmo discreto Ø a inversa da fun(cid:231)ªo exponencial modular,
de(cid:28)nida como y = gx(mod p) , onde p e g sªo primos.

Em seu funcionamento, para a distribui(cid:231)ªo exponencial discreta temos:

y ≡ gx( mod p), para 1 ≤ x ≤ p − 1

19

Nesse caso, g tambØm Ø chamado de primitiva no m(cid:243)dulo de p.

O retorno de x Ø calculado conforme abaixo:

x ≡ (log dgy)( mod p), para 1 ≤ y ≤ p − 1

Os usuÆrios tŒm conhecimento de g e p.

O usuÆrio i seleciona um nœmero aleat(cid:243)rio xi do conjunto {1, 2, ..., p} que serÆ sua
chave privada. Dessa forma, a informa(cid:231)ªo que serÆ guardada num diret(cid:243)rio pœblico
com os dados do usuÆrio i Ø dada por

yi ≡ gxi( mod p)

Outro usuÆrio j realiza o mesmo procedimento.

A comunica(cid:231)ªo entre i e j Ø feita da seguinte maneira:

O usuÆrio i adquire informa(cid:231)ıes de j, yj, do diret(cid:243)rio pœblico, para formar, a partir
de sua chave privada individual, xi , a chave privada comum a ambos, kij ou kji a
partir das opera(cid:231)ıes a seguir:

kij ≡ [yj]xi ( mod p)

kij ≡ [(gxj )]xi ( mod p)

kij ≡ gxj .xi( mod p)

Analogamente, a partir das propriedades de exponencia(cid:231)ªo modular, tem-se que

kij ≡ kji

A œltima equa(cid:231)ªo signi(cid:28)ca que i e j em comum acordo de(cid:28)nem kij ou kji como a

chave secreta em seu sistema criptogrÆ(cid:28)co de comunica(cid:231)ªo.

20

Para um inimigo criptoanalista que tenha acesso (cid:224) informa(cid:231)ªo de i e j contida no

diret(cid:243)rio, seria necessÆrio encontrar a chave

kij ≡

(cid:104)

(yj)logdyi(cid:105)

( mod p)

A necessidade do cÆlculo deste logaritmo discreto modular, quando se tem um
valor de p elevado (tipicamente superior a 100 casas decimais), torna impraticÆvel a
determina(cid:231)ªo da chave secreta comum de i e j, levando em considera(cid:231)ªo as capacidades
computacionais atuais.

(cid:201) poss(cid:237)vel perceber, que este algoritmo, bem como o RSA e o de El Gamal, dis-
cutidos a seguir, para sua e(cid:28)ciŒncia em termos de seguran(cid:231)a, necessitam de nœmeros
primos com um nœmero elevado de casas decimais. Tal caracter(cid:237)stica tem acentuado
ainda mais a discussªo e o interesse a respeito do estudo e melhor compreensªo dos
nœmeros primos.

Uma variedade de autentica(cid:231)ıes criptogrÆ(cid:28)cas incorpora o Di(cid:30)e-Hellman como
algoritmo inicial, sobretudo como base para a troca de chaves entre dois ou mais pontos
de comunica(cid:231)ªo, de modo que se possa estabelecer uma comunica(cid:231)ªo segura mœtua.

2.3.2 RSA

O RSA Ø um algoritmo de encripta(cid:231)ªo de dados, que deve o seu nome a trŒs profes-
sores do Instituto MIT (Massachussets Institute of Tecnology), os quais sªo fundadores
da atual empresa RSA Data Security, Inc; Ron Rivest, Adi Shamir e Len Adleman,
que inventaram este algoritmo.

A seguran(cid:231)a do algoritmo se baseia pelo fato da fatora(cid:231)ªo de um nœmero grande ser
muito dif(cid:237)cil, em termos computacionais, uma vez que ainda nªo se estabeleceu um mØ-
todo capaz de realizar esta opera(cid:231)ªo de modo mais e(cid:28)ciente que os mØtodos usualmente
apresentados. O algoritmo usa a teoria dos nœmeros na formula(cid:231)ªo matemÆtica.

Pelos processos matemÆticos que a mensagem deve passar e pela pr(cid:243)pria caracter(cid:237)s-
tica de algoritmo assimØtrico, o processo usualmente se torna lento, tipicamente cerca
de 100 vezes mais lento que o DES.

21

(cid:201) necessÆria a computa(cid:231)ªo dos seguintes par(cid:226)metros:

• Sele(cid:231)ªo de primos: p e q;

• Realiza-se a multiplica(cid:231)ªo dos primos: par(cid:226)metro n = p.q.

A partir destes par(cid:226)metros, aplica-se a fun(cid:231)ªo ϕ de Euler ao valor n.

Deve ser lembrado que a fun(cid:231)ªo ϕ(n) de Euler retorna o nœmero de inteiros positivos
menores que n com os quais n Ø primo entre si, ou seja, com os quais n nªo possui
divisores comuns. Dessa forma, para um nœmero primo qualquer, p, este nœmero seria
primo entre si com todos os inteiros positivos atØ p − 1, assim, o retorno da fun(cid:231)ªo seria

ϕ(p) = p − 1

Outra propriedade que deve ser destacada Ø a multiplicidade referente a nœmeros
primos entre si, ou seja, se dois nœmeros a e b sªo primos entre si, a fun(cid:231)ªo de Euler
aplicada ao seu produto seria dada por

ϕ(a.b) = ϕ(a).ϕ(b)

Claro que dois nœmeros primos distintos serªo primos entre si, portanto, para o

valor da fun(cid:231)ªo de Euler aplicada ao par(cid:226)metro n citado anteriormente, tem-se

ϕ(n) = ϕ(p.q) = (p − 1).(q − 1)

O teorema de Euler diz que, para todo a e n primos entre si, tem-se que

aϕ(n) ≡ 1( mod n)

Observe-se que para a particulariza(cid:231)ªo de n = p primo, tem-se o Pequeno Teorema

de Fermat, ou seja

aϕ(p) ≡ ap−1 ≡ 1( mod p) ⇒ ap ≡ a( mod p)

22

A seguir, sªo estabelecidos os par(cid:226)metros e e d :

• Escolhe-se um valor (tambØm denominado expoente de encripta(cid:231)ªo) e < ϕ(n)

(inteiro positivo), tal que e e ϕ(n) sejam primos entre si.

• Encontra-se o valor (por sua vez, usualmente denominado expoente de decripta-

(cid:231)ªo) d < ϕ(n) tal que

e.d ≡ 1( mod ϕ(n))

Este nœmero d pode ser calculado utilizando-se o algoritmo de Euclides estendido,

e representa o inverso multiplicativo modular de e.

A encripta(cid:231)ªo no algoritmo Ø feita pela fun(cid:231)ªo exponencia(cid:231)ªo discreta, ou modular.

Seja x a mensagem e y o texto cifrado. (cid:201) estabelecida a opera(cid:231)ªo

y ≡ xe( mod n)

A chave pœblica, de conhecimento geral, consiste no par (n, e) e a chave privada,
de conhecimento restrito (cid:224)s partes comunicantes, no par de primos (n, d).
. A chave
privada deve ser, naturalmente, mantida em sigilo, bem como os valores de p, q e ϕ(n),
uma vez que a partir destes pode ser calculado o valor de d.

Ap(cid:243)s o recebimento da mensagem y, que pode ser transmitida por um meio inseguro
de comunica(cid:231)ªo, a parte receptora da mensagem, a quem esta se destina, realiza a
decripta(cid:231)ªo atravØs da opera(cid:231)ªo

yd ≡ (xe)d ≡ xed( mod n)

A partir da rela(cid:231)ªo prØ-estabelecida entre e e d, tem-se

e.d ≡ 1( mod ϕ(n)) ⇔ e.d = Q.ϕ(n) + 1; Q ∈ Z

Aplicando-se este resultado na equa(cid:231)ªo anterior, tem-se

23

yd ≡ xed( mod n)

≡ xQ.ϕ(n)+1( mod n)
(cid:110)(cid:104)(cid:0)xϕ(n)(cid:1)Q(cid:105)

.x

(cid:111)

( mod n)

≡

Pelo Teorema de Euler:

xϕ(n) ≡ 1( mod n)

x ≡ yd( mod n)

Dessa forma, com o conhecimento (privado) de d, o destinatÆrio consegue retornar

(cid:224) mensagem original.

Ajustando-se de maneira um pouco distinta, o algoritmo RSA tambØm pode ser
usado em assinaturas digitais, nas quais deseja-se assegurar a identidade do emissor da
mensagem.

O RSA sofre possibilidades de ataque dos tipos for(cid:231)a bruta, ataques matemÆticos
e ataques de temporiza(cid:231)ªo. Estes œltimos, mais so(cid:28)sticados, se baseiam em diferen(cid:231)as
de tempo no cÆlculo de uma opera(cid:231)ªo (exponencia(cid:231)ªo modular, por exemplo) com
diferentes operandos. Dentre as formas de se evitar este ataque, pode se realizar a
exponencia(cid:231)ªo num per(cid:237)odo de tempo constante ou aplicar atrasos aleat(cid:243)rios.

2.4 ATAQUES AOS SISTEMAS CRIPTOGR`FICOS

CriptoanÆlise Ø o nome dado (cid:224) metodologia que estuda as formas de se desfazer
os efeitos da criptogra(cid:28)a, quebrando-se cifras ou forjando-se sinais que sejam aceitos
como genu(cid:237)nos.

Alguns tipos de ataques de um criptoanalista sªo descritos a seguir.

24

No ataque do tipo normal (ciphertext-only), o inimigo s(cid:243) tem acesso (cid:224) parte ou
todo do criptograma, ou mensagem cifrada. Todo sistema criptogrÆ(cid:28)co deve resistir a
pelo menos esse tipo de ataque.

Uma tØcnica usual Ø o estudo da frequŒncia de caracteres, por exemplo, na l(cid:237)ngua
portuguesa a frequŒncia em que ocorre a letra "a"Ø maior que a frequŒncia de "y".
Com a compara(cid:231)ªo das frequŒncias dos caracteres cifrados, sendo a mensagem realizada
numa determinada l(cid:237)ngua, Ø poss(cid:237)vel inferir alguma informa(cid:231)ªo do texto cifrado.

No ataque (cid:224) informa(cid:231)ªo conhecida (known-plaintext) o inimigo tem conhecimento
de alguns criptogramas e suas correspondentes mensagens originais, formados pela
chave atual.

O ataque (cid:224) informa(cid:231)ªo escolhida (chosen-plaintext) Ø caracterizado pelo fato
do inimigo ser capaz de submeter qualquer mensagem (cid:224) criptogra(cid:28)a e receber o crip-
tograma correto com a chave atual utilizada.

O objetivo desse ataque Ø obter alguma informa(cid:231)ªo que reduza a seguran(cid:231)a do
esquema criptogrÆ(cid:28)co, e na pior das hip(cid:243)teses, revelar o esquema de produ(cid:231)ªo da
chave.

Esse tipo de ataque tem maior import(cid:226)ncia quando se trata de criptogra(cid:28)a assimØ-
trica, onde a chave Ø pœblica e um inimigo pode encriptar qualquer mensagem de seu
interesse.

O ataque do tipo informa(cid:231)ªo cifrada escolhida (chosen-ciphertext) Ø um tipo
de ataque no qual o inimigo pode escolher um criptograma arbitrÆrio e obter o resultado
correto para sua decripta(cid:231)ªo. Alguns algoritmos famosos na sua versªo mais antiga
eram suscet(cid:237)veis a este ataque, como o RSA.

No ataque de for(cid:231)a bruta (brute-force) o inimigo tenta todos os valores poss(cid:237)veis

de chave. Este tipo de ataque s(cid:243) Ø executado quando os outros nªo forem e(cid:28)cazes.

Nesse tipo de ataque, o nœmero esperado de tentativas antes da chave correta ser
encontrada Ø a metade do tamanho da chave. Cifras simØtricas com chaves de tamanho
superior a 64 bits jÆ foram quebradas atravØs de ataques de for(cid:231)a bruta. A possibilidade
de quebra por esse ataque aumenta com o passar do tempo e a evolu(cid:231)ªo tecnol(cid:243)gica,
com sua for(cid:231)a computacional cada vez mais rÆpida.

25

Alguns tipos de encripta(cid:231)ªo nªo podem ser quebrados pelo mØtodo da for(cid:231)a bruta,
devido (cid:224)s suas propriedades matemÆticas. Um exemplo Ø o one-time-pad, onde cada bit
possui seu correspondente bit chave. Em rela(cid:231)ªo ao ataque de for(cid:231)a bruta, o one-time-
pad apenas revela uma decodi(cid:28)ca(cid:231)ªo correta, mas qualquer outra poss(cid:237)vel combina(cid:231)ªo
de bits pode resultar na mesma codi(cid:28)ca(cid:231)ªo, ou seja, nªo Ø poss(cid:237)vel distinguir uma chave
verdadeira de outra falsa que resulte no mesmo texto cifrado.

A seguir apresentamos algumas das aplica(cid:231)ıes diretas de sequŒncias de nœmeros

aleat(cid:243)rios em criptogra(cid:28)a.

2.5 UTILIZA˙ˆO DE N(cid:218)MEROS ALEAT(cid:211)RIOS EM CRIP-

TOGRAFIA

Dentre as aplica(cid:231)ıes que os nœmeros aleat(cid:243)rios podem ter, no que se refere ao

campo da criptogra(cid:28)a, pode-se enumerar:

• Chaves de se(cid:231)ıes e de mensagens de cifras simØtricas, como o one-time-pad, o

DES, o 3DES.

• Nœmeros que se combinam com senhas, para confundir programas de v(cid:237)rus que

deduzem senhas.

• Inicializa(cid:231)ªo de vetores de cifras de blocos.

• Chaves aleat(cid:243)rias relacionadas a protocolos.

Dessa maneira, no intuito de aumentar a seguran(cid:231)a de sistemas criptogrÆ(cid:28)cos, deve-
se analisar de maneira mais atenciosa algumas das maneiras conhecidas de se gerar
nœmeros aleat(cid:243)rios, e de que forma estes podem ser aplicados em sistemas prÆticos.
Esta anÆlise Ø o objeto de discussªo do cap(cid:237)tulo a seguir.

3 GERADORES DE N(cid:218)MEROS ALEAT(cid:211)RIOS

Apesar de ter se falado em nœmero aleat(cid:243)rio, este termo s(cid:243) adquire sentido quando
visto dentro de um conjunto, uma vez que nªo Ø poss(cid:237)vel dizer se um nœmero Ø mais ou

26

menos aleat(cid:243)rio sem conhecer a sequŒncia a que ele pertence e o nœmero de amostras
nessa sequŒncia.

A gera(cid:231)ªo aleat(cid:243)ria em criptogra(cid:28)a con(cid:28)gura uma das fontes de segredo que consta
nos sistemas criptogrÆ(cid:28)cos, porØm, alØm disso, deve-se usar um bom algoritmo de
encripta(cid:231)ªo e processos robustos de manejo de chaves para fortalecer ainda mais os
algoritmos.

Na gera(cid:231)ªo de chaves, a busca por sequŒncias aleat(cid:243)rias Ø muito importante, princi-
palmente no sentido de produ(cid:231)ªo de chaves fortes. A probabilidade de ser gerada uma
chave fraca Ø pequena. No algoritmo DES (Data Encription Standard) por exemplo
possui 16 chaves fracas de um total de 256. Mas jÆ que a chave nªo Ø de conhecimento
geral, a fraqueza da chave nªo gera tanto perigo de enfraquecimento do sistema crip-
togrÆ(cid:28)co, a nªo ser que haja falha no sistema de transmissªo dos dados. A gera(cid:231)ªo
de chaves aleat(cid:243)rias para os sistemas criptogrÆ(cid:28)cos de chave pœblica Ø mais dif(cid:237)cil,
pois alØm de um rigor maior em rela(cid:231)ªo (cid:224) con(cid:28)rma(cid:231)ªo de aleatoriedade, estas chaves
possuem caracter(cid:237)sticas matemÆticas espec(cid:237)(cid:28)cas.

Algumas fontes f(cid:237)sicas de geradores aleat(cid:243)rios sªo descritas a seguir.

3.1 FONTES ALEAT(cid:211)RIAS

3.1.1 LAN˙AMENTO DE MOEDA

De maneira mais te(cid:243)rica atØ uma sequŒncia de zeros e uns obtida pelos lan(cid:231)amentos
de uma moeda cuja face cara tenha aparecido basta para a obten(cid:231)ªo de uma sequŒn-
cia, assumindo que esta moeda nªo seja viciada, ou seja, a probabilidade em in(cid:28)nitos
lan(cid:231)amentos Ø igual a 1/2 . (cid:201) claro que esta forma de gera(cid:231)ªo de bits aleat(cid:243)rios nªo
tem nenhum valor prÆtico, atØ porque a taxa de gera(cid:231)ªo nªo Ø su(cid:28)ciente e esta forma
Ø ine(cid:28)ciente.

3.1.2 RU˝DO DO DIODO

O ru(cid:237)do de um diodo pode servir para produzir sequŒncias de nœmeros aleat(cid:243)rios.
Isso acontece por causa de defeitos inerentes nos materiais semicondutores do diodo e
seu comportamento na regiªo limite de polariza(cid:231)ªo.

27

A œnica maneira de saber se esta forma de gera(cid:231)ªo realmente promove nœmeros
aleat(cid:243)rios Ø realizando testes estat(cid:237)sticos de aleatoriedade. Em geral, os diodos sªo
fontes de sequŒncias binÆrias que tem uma distribui(cid:231)ªo estat(cid:237)stica uniforme, o que
promove uma maneira e(cid:28)ciente de gera(cid:231)ªo de sequŒncias aleat(cid:243)rias, porØm nem sempre
a taxas que atendam determinados sistemas.

3.1.3 MATERIAL RADIOATIVO

Os materiais radioativos tambØm podem funcionar como um gerador de nœmeros

aleat(cid:243)rios, uma vez que a radioatividade decai aleatoriamente.

Um contador Geiger, conectado a um computador, pode ser usado para transformar

estes dados em informa(cid:231)ªo œtil e administrÆvel em criptogra(cid:28)a.

Essa gera(cid:231)ªo Ø rara e cara devido aos custos de manuten(cid:231)ªo e seguran(cid:231)a dos dispo-

sitivos normalmente utilizados.

3.1.4 T12RNG

O T12RNG Ø um dispositivo capaz de gerar nœmeros aleat(cid:243)rios atravØs de um
hardware, que pode ser conectado (cid:224) uma porta serial de computador. A origem da sua
aleatoriedade na gera(cid:231)ªo Ø devido ao ru(cid:237)do branco, propriedade dos semicondutores
instalados no circuito.

Pode ser usado em senhas, chaves criptogrÆ(cid:28)cas, one-time-pads, etc.

Tem uma taxa de gera(cid:231)ªo de 60 bytes?segundo, o que Ø considerado muito lento

em aplica(cid:231)ıes prÆticas.

Como as fontes verdadeiramente aleat(cid:243)rias sªo originadas usualmente por fen(cid:244)-
menos f(cid:237)sicos, e estes sªo de dif(cid:237)cil capta(cid:231)ªo e transforma(cid:231)ªo em dados utilizÆveis a
uma frequŒncia alta o su(cid:28)ciente para garantir a comunica(cid:231)ªo e(cid:28)ciente, opta-se por
utilizar esses raros nœmeros aleat(cid:243)rios como sementes de geradores de nœmeros pseudo-
aleat(cid:243)rios. Estas sequŒncias sªo su(cid:28)cientemente aleat(cid:243)rias desde que a semente nªo
seja conhecida. A apresenta(cid:231)ªo de alguns dos mØtodos utilizados por esses geradores
de nœmeros pseudo-aleat(cid:243)rios Ø o objeto de estudo do cap(cid:237)tulo a seguir.

28

4 GERADORES DE N(cid:218)MEROS PSEUDO-ALEAT(cid:211)RIOS

De acordo com o uso espec(cid:237)(cid:28)co das sequŒncias de nœmeros pseudo-aleat(cid:243)rios, estas
possuem diversas de(cid:28)ni(cid:231)ıes, algumas mais restritivas e outras mais abrangentes. Aqui
se apresentam algumas de(cid:28)ni(cid:231)ıes abrangentes.

Uma sequŒncia de nœmeros pseudo-aleat(cid:243)rios se caracteriza por ser uma sequŒn-
cia cujo per(cid:237)odo Ø longo o bastante para que uma sequŒncia (cid:28)nita retirada desta, de
comprimento razoÆvel (de acordo com o uso que serÆ feito dela) nªo seja peri(cid:243)dica.

Para o prop(cid:243)sito de aux(cid:237)lio aos processos criptogrÆ(cid:28)cos, o gerador de sequŒncia
de nœmeros pseudo-aleat(cid:243)rios deve ter a seguinte caracter(cid:237)stica: assemelhar-se a uma
sequŒncia aleat(cid:243)ria, ou seja, esta sequŒncia deve passar em todos os testes estat(cid:237)sticos
de aleatoriedade poss(cid:237)veis.

Todos os geradores pseudo-aleat(cid:243)rios sªo peri(cid:243)dicos, mas estes per(cid:237)odos podem
chegar a 2256 bits ou mais, da(cid:237) a sua utilidade em criptogra(cid:28)a. Sendo mais prÆtico de
se implementar e possuindo um per(cid:237)odo tªo longo como este, aumenta-se a facilidade de
obten(cid:231)ªo e de gerenciamento de chaves pseudo-aleat(cid:243)rias, caracter(cid:237)sticas dos processos
criptogrÆ(cid:28)cos.

Dos mØtodos de gera(cid:231)ªo de chaves utilizados em criptogra(cid:28)a, principalmente do
tipo simØtrica, os geradores de sequŒncia de nœmeros pseudo-aleat(cid:243)rios sªo aqueles
de aplica(cid:231)ªo mais importante. Para ser criptogra(cid:28)camente segura, uma sequŒncia
aleat(cid:243)ria gerada deve ter as seguintes propriedades:

• Ser imprevis(cid:237)vel − De modo que seja computacionalmente impraticÆvel prever
o pr(cid:243)ximo bit aleat(cid:243)rio da sequŒncia, conhecendo todo o algoritmo, hardware
gerador ou toda a sequŒncia anterior de bits.

• Nªo pode ser reproduzida (cid:28)elmente − Se um gerador for iniciado com a mesma
entrada jÆ utilizada, a sa(cid:237)da deve ser uma sequŒncia aleat(cid:243)ria completamente
descorrelatada da primeira.

Mesmo possuindo diversas vantagens, este mØtodo de gera(cid:231)ªo de sequŒncias s(cid:243) pode

ser utilizado em conjunto com o mØtodo inteiramente aleat(cid:243)rio.

29

A seguir apresentamos alguns dos mØtodos de gera(cid:231)ªo de sequŒncias aleat(cid:243)rias e

pseudo-aleat(cid:243)rias.

4.1 GERA˙ˆO DE SEQ(cid:220)˚NCIAS DE N(cid:218)MEROS ALEAT(cid:211)-

RIOS UTILIZANDO SOFTWARES

Apesar da prÆtica de utiliza(cid:231)ªo de nœmeros aleat(cid:243)rios gerados por compiladores
em sistemas, por exemplo, de jogos, nªo Ø recomendado utilizar os compiladores pre-
sentes no mercado como fonte geradora porque eles nªo sªo su(cid:28)cientemente seguros
para prop(cid:243)sitos prÆticos de encripta(cid:231)ªo, nªo estabelecendo a seguran(cid:231)a devida aos sis-
temas criptogrÆ(cid:28)cos, jÆ que a criptogra(cid:28)a Ø extremamente sens(cid:237)vel (cid:224)s propriedades dos
geradores de nœmeros aleat(cid:243)rios.

Ao usar um gerador de nœmeros aleat(cid:243)rios fraco pode-se obter uma sequŒncia alea-
t(cid:243)ria com certo grau de correla(cid:231)ªo que irÆ in(cid:29)uenciar no resultado (cid:28)nal da encripta(cid:231)ªo.

(cid:201) imposs(cid:237)vel produzir algo verdadeiramente aleat(cid:243)rio em um computador, ou seja,
por software, isto porque as opera(cid:231)ıes que decorrem neste sªo de natureza determin(cid:237)s-
tica, impedindo a ocorrŒncia de aleatoriedade.

Os algoritmos realizados em computador para a obten(cid:231)ªo de nœmeros aleat(cid:243)rios
contribuem um sistema criptogrÆ(cid:28)co quando a sequŒncia gerada possui um per(cid:237)odo
muito grande, mas ainda nªo sªo considerados aleat(cid:243)rios, apenas pseudo-aleat(cid:243)rios,
pois qualquer sequŒncia peri(cid:243)dica nªo Ø aleat(cid:243)ria e por ser peri(cid:243)dica se torna previs(cid:237)vel.

No (cid:226)mbito da mec(cid:226)nica qu(cid:226)ntica defende-se que fen(cid:244)menos verdadeiramente aleat(cid:243)-
rios s(cid:243) existem na natureza, no mundo real, enquanto que mecanismos computacionais
e algoritmos s(cid:243) podem trazer resultados pseudo-aleat(cid:243)rios.

4.2 ALGORITMOS DE GERA˙ˆO DE SEQ(cid:220)˚NCIAS DE

N(cid:218)MEROS PSEUDO-ALEAT(cid:211)RIOS

O estudo de algoritmos de gera(cid:231)ªo pseudo-aleat(cid:243)rios serve para criar mecanismos

auxiliares para a implementa(cid:231)ªo de geradores de sequŒncias de nœmeros aleat(cid:243)rios.

Como a gera(cid:231)ªo de nœmeros verdadeiramente aleat(cid:243)rios Ø dif(cid:237)cil e muitas vezes

30

a taxa de gera(cid:231)ªo nªo atende aos critØrios desejados de um projeto, os algoritmos
pseudo-aleat(cid:243)rios auxiliam ao atendimento desses critØrios da seguinte maneira: esses
nœmeros aleat(cid:243)rios podem ser usados como sementes (dados de inicia(cid:231)ªo do gerador)
de geradores pseudo-aleat(cid:243)rios, que possuem taxas de gera(cid:231)ªo de bits maior.

A utiliza(cid:231)ªo de mais de um tipo de algoritmo pseudo-aleat(cid:243)rio pode ser utilizada

na tentativa de aumentar o per(cid:237)odo da sequŒncia pseudo-aleat(cid:243)ria.

(cid:201) por isso que serÆ explicitado um conjunto satisfat(cid:243)rio de algoritmos de geradores

pseudo-aleat(cid:243)rios.

4.2.1 M(cid:201)TODO CONGRUENTE LINEAR

Muitos geradores de nœmeros pseudo-aleat(cid:243)rios utilizados hoje em dia sªo modi(cid:28)-
ca(cid:231)ıes do mØtodo linear congruente. Ele se baseia na seguinte rela(cid:231)ªo de recorrŒncia:

xn+1 = (a.xn + b)( mod m), n ≥ 0

O valor x0 inicial Ø chamado semente, a Ø o multiplicador, b o incremento, m Ø
a quantidade de nœmero diferentes que se deseja gerar, n Ø o (cid:237)ndice dos nœmeros. A
escolha adequada desses valores Ø fundamental para a determina(cid:231)ªo do per(cid:237)odo da
sequŒncia de sa(cid:237)da. Pela simples observa(cid:231)ªo constata-se que o per(cid:237)odo serÆ sempre
menor que m, e que para se ter uma sequŒncia maior deve-se aumentar o valor de m.

Este algoritmo Ø extremamente simples, porØm atende muito bem aos requisitos
de geradores de sequŒncias de nœmeros pseudo-aleat(cid:243)rios, desde que seja realizada a
escolha adequada dos par(cid:226)metros, como jÆ foi citado.

Para obter mÆxima e(cid:28)ciŒncia do algoritmo, a escolha dos par(cid:226)metros deve atender:

i. O m(cid:243)dulo de m deve ser grande. Uma vez que os valores de x estarªo entre 0 e

m − 1, o per(cid:237)odo nunca serÆ maior do que m;

ii. Para que a computa(cid:231)ªo de mod m seja e(cid:28)ciente, m deve ser uma potŒncia de 2,
isto Ø, 2k. Neste caso, o mod m poderÆ ser obtido truncando-se o resultado (cid:224)
direita por k bits.

31

iii. Se b for diferente de zero, o mÆximo per(cid:237)odo poss(cid:237)vel m Ø obtido se e somente se:

a. os inteiros m e b sªo primos entre si;

b. todo nœmero primo que Ø um divisor de m, Ø tambØm um divisor de a − 1;

c. a − 1 Ø um mœltiplo de 4, se o inteiro m Ø mœltiplo de 4.

iv. Se b = 0, e m Ø potŒncia de 2, o maior per(cid:237)odo P poss(cid:237)vel serÆ P = m/4,
considerando que: x0 (semente) seja um nœmero (cid:237)mpar e o multiplicador a seja
dado por a = 8k + 3 ou a = 8k + 5, para algum k inteiro nªo-negativo.

Estas condi(cid:231)ıes foram apresentadas em resumo e sem demonstra(cid:231)ªo, mas para
um estudo mais aprofundado, estes resultados sªo apresentados nas referŒncias [Jain
(1991)], [Banks (1996)], [Law (1991)] e [Dudewicz (1985)].

4.2.2 LFSR (LINEAR FEEDBACK SHIFT REGISTER)

Esse algoritmo tem sido utilizado na criptogra(cid:28)a militar dos Estados Unidos desde

o come(cid:231)o da eletr(cid:244)nica.

O LFSR Ø formado por duas partes: um deslocador (cid:224) direita e uma fun(cid:231)ªo de

retorno na forma(cid:231)ªo de bits.

Em per(cid:237)odos de tempo de(cid:28)nidos, um bit (bit (cid:28)nal) Ø requisitado e o bloco restante Ø
deslocado para direita e um novo bit Ø inserido (cid:224) esquerda. Este bit inserido Ø resultado
de uma determinada opera(cid:231)ªo realizada com os demais bits.

A sa(cid:237)da utilizada para formar uma sequŒncia Ø o conjunto de bits mais (cid:224) direita,
que saem do registrador a cada ciclo de deslocamento. O per(cid:237)odo de um registrador
como este Ø o tamanho da sequŒncia de sa(cid:237)da atØ que a sequŒncia comece a repetir.

O LFSR Ø o tipo mais simples de registrador e o mais comum usado em cripto-
gra(cid:28)a. A fun(cid:231)ªo de retorno correspondente a este algoritmo Ø a fun(cid:231)ªo xor de bits
remanescentes no registrador.

32

O registrador acima se comporta da seguinte b1 ⊕ b4 maneira para uma semente

igual a 0001.

(cid:201) poss(cid:237)vel observar que seu per(cid:237)odo Ø de tamanho 15.(24 − 1).

Por motivo (cid:243)bvio a semente nunca pode ser nula.

33

Um gerador LFSR pode gerar uma sequŒncia pseudo-aleat(cid:243)ria de per(cid:237)odo atØ 2n−1

, sendo n o nœmero de bits que o registrador comporta.

Para que um LFSR tenha per(cid:237)odo mÆximo, o polin(cid:244)mio formado pela sequŒncia
tap (lista de bits remanescentes no registrador, tambØm chamada con(cid:28)gura(cid:231)ªo de Fi-
bonacci) mais um deve ser um polin(cid:244)mio primitivo em m(cid:243)dulo 2.

Esta de(cid:28)ni(cid:231)ªo de polin(cid:244)mio primitivo em m(cid:243)dulo 2 Ø estudada no (cid:226)mbito os "cam-

pos de Galois", aspectos matemÆticos que saem do escopo deste trabalho.

4.2.3 GERADOR GEFFE

Este gerador de sequŒncia-chave usa trŒs LFSRs, combinados de uma maneira nªo
linear. Dois deles sªo entradas de um multiplexador, e o terceiro controla a sa(cid:237)da do
multiplexador.

Seja a1, a2 e a3 as sa(cid:237)das desses trŒs LFSRs, entªo a sa(cid:237)da b do gerador Ge(cid:27)e Ø:

b = (a1 ∧ a2) ⊕ [(∼ a2) ∧ a3]

Na equa(cid:231)ªo anterior, os s(cid:237)mbolos ∧ e ∼ representam as opera(cid:231)ıes l(cid:243)gicas de adi(cid:231)ªo

("e" l(cid:243)gico) e nega(cid:231)ªo, respectivamente.

Em forma de (cid:29)uxograma, tem-se:

34

Se os LFSRs possuem os seguintes per(cid:237)odos n1, n2 e n3, o per(cid:237)odo do gerador Ge(cid:27)e

resultante nGEF F E Ø o m(cid:237)nimo mœltiplo comum desses per(cid:237)odos:

nGEF F E = mmc(n1, n2, n3)

Apesar deste gerador ser vulnerÆvel ao teste de correla(cid:231)ªo a sua anÆlise motiva a
criatividade do leitor para o pensamento de quantos algoritmos mais possam existir
baseadas em ideias simples como esta ou com o agrupamento de vÆrias ideias simples.

(cid:201) poss(cid:237)vel tambØm implementar a ideia deste gerador para uma fun(cid:231)ªo de vÆrias

entradas e para cada uma delas um LFSR.

5 TRANSPOSI˙ˆO DID`TICA

5.1 SUGEST(cid:213)ES DE AULA

Tendo em vista a import(cid:226)ncia dos assuntos tratados nos cap(cid:237)tulos anteriores, pode-
se dizer que a introdu(cid:231)ªo desses temas em atividades de sala de aula, principalmente
para alunos de ensino mØdio, Ø de grande interesse, principalmente quando se observa
que os algoritmos utilizados em sistemas criptogrÆ(cid:28)cos, notadamente aqueles do tipo
assimØtrico (ou de chave pœblica), con(cid:28)guram, em sua maioria, uma aplica(cid:231)ªo direta
dos conhecimentos de MatemÆtica Elementar, em particular relacionados (cid:224) AritmØ-
tica Modular. Dessa forma, a introdu(cid:231)ªo adequada da aplica(cid:231)ªo da MatemÆtica na
Criptogra(cid:28)a pode, alØm de agregar maior conhecimento referente a uma atividade re-
corrente no dia a dia dos alunos, sob a (cid:243)tica da aplica(cid:231)ªo da Criptogra(cid:28)a nos sistemas
de seguran(cid:231)a de informa(cid:231)ªo, trazer maior interesse nestas e em outras aplica(cid:231)ıes dos
conceitos de AritmØtica Modular. Este cap(cid:237)tulo, portanto, faz algumas sugestıes de
como abordar alguns desses temas, de modo que alunos com conhecimento elementar
das opera(cid:231)ıes modulares, nªo se sintam embara(cid:231)ados ao serem apresentados, nªo so-
mente (cid:224) idØia geral de como os sistemas criptogrÆ(cid:28)cos do tipo assimØtrico funcionam,
mas tambØm da abordagem matemÆtica a ele inerente.

35

5.1.1 DIFFIE-HELMAN

Para a introdu(cid:231)ªo do algoritmo de "key exchange" de Di(cid:30)e-Helmman, a abordagem
didÆtica mais usual faz uma analogia entre a troca de chaves e a mistura de cores. Esta
analogia tem ainda maior semelhan(cid:231)a com o algoritmo tendo em vista que o processo
de misturar duas ou mais cores Ø bastante simples, entretanto, separÆ-las em busca das
cores iniciais Ø uma tarefa que pode ser considerada Ærdua, de modo semelhante ao que
se espera de fun(cid:231)ıes de encripta(cid:231)ªo em geral. Tal analogia Ø mostrada no diagrama a
seguir. As trŒs principais etapas do processo sªo descritas fazendo a compara(cid:231)ªo entre
o mØtodo de mistura de tintas e o algoritmo Di(cid:30)e-Hellman delineado no cap(cid:237)tulo 2.3.1
deste trabalho.

Na etapa 1, os dois usuÆrios A e B tŒm conhecimento de uma tinta comum, que
serÆ misturada com as tintas que possuem, referentes (cid:224)s suas cores secretas, gerando
duas cores distintas das suas cores secretas, a serem trocadas atravØs de um meio de
comunica(cid:231)ªo nªo-seguro. Esta etapa Ø equivalente (cid:224)s opera(cid:231)ıes

yA ≡ gxA( mod p)

yB ≡ gxB ( mod p)

onde g e p sªo valores conhecidos de ambos, e possivelmente de um usuÆrio criptoa-
nalista interessado em intervir na comunica(cid:231)ªo de A e B. A analogia direta entre estes
valores se faz com o uso da tinta comum, que serve para mudar o valor das chaves
privadas individuais, ou das cores secretas, representadas pelos valores xA e xB.

36

As opera(cid:231)ıes previamente descritas correspondem (cid:224) mistura entre as cores secretas
e a tinta comum. Estas opera(cid:231)ıes sªo simples de serem realizadas, bem como a mistura
de duas cores de tinta, entretanto, a partir do seu resultado, ou seja, dos valores yA e
yB Ø extremamente dif(cid:237)cil retornar aos valores iniciais xA e xB, tal qual Ø a di(cid:28)culdade
de retornar (cid:224)s cores secretas utilizadas inicialmente.

Neste ponto, cabe-se ressaltar que a di(cid:28)culdade em se retornar aos valores xA e xB
consiste basicamente no enorme trabalho computacional requerido em se realizar ope-
ra(cid:231)ıes modulares de retorno (no caso, de logaritmo discreto modular), principalmente
naquela envolvendo nœmeros primos p de valores elevados, tipicamente da ordem de
centenas de casas decimais.

37

Na etapa 2, o material misturado por A Ø enviado a B e vice-versa, atravØs de um
meio que pode ou nªo ser seguro o su(cid:28)ciente para a comunica(cid:231)ªo de interesse. Esta
etapa Ø idŒntica (cid:224) idØia do algoritmo Di(cid:30)e-Hellman, ou seja, os valores yA e yB sªo
trocados entre A e B, utilizando-se um meio de comunica(cid:231)ªo que pode ou nªo ser
seguro.

Na etapa 3, tanto A como B misturam o material recebido com suas cores secretas,
tendo, naturalmente, como resultado as mesmas cores (cid:28)nais. Isto obviamente ocorre
pois as cores misturadas por eles ao longo do processo sªo as mesmas, sendo apenas a
ordem em que elas foram misturadas distintas. Esta mistura corresponde (cid:224)s opera(cid:231)ıes:

• Para o usuÆrio A

• Para o usuÆrio B

kAB ≡ [yB]xA ( mod p)

kAB ≡ [(gxB )]xA ( mod p)

kAB ≡ gxB.xA( mod p)

kBA ≡ [yA]xB ( mod p)

kBA ≡ [(gxA)]xB ( mod p)

kBA ≡ gxA.xB ( mod p)

Assim, o resultado obtido para estas opera(cid:231)ıes Ø idŒntico, como esperado, pois

kAB = kBA ⇔ gxA.xB ≡ gxB.xA( mod p)

Ap(cid:243)s as trŒs etapas, os usuÆrios possuem uma cor de tinta idŒntica, que corresponde
ao seu segredo comum, assim como as chaves kAB = kBA. Esse valor Ø usualmente
utilizado como chave secreta para sistemas criptogrÆ(cid:28)cos simØtricos, como o DES ou o
one-time-pad.

38

Neste ponto, pode ser interessante apresentar um exemplo numØrico de como o
algoritmo Di(cid:30)e-Hellman pode ser aplicado. Para tanto, sejam escolhidos os valores de
g, p, xA e xB:

g = 3

p = 17

xA = 15

xB = 13

Assim, aplicando-se as opera(cid:231)ıes adequadas, tem-se

yA ≡ 315 ≡ 14.348.907 ≡ 6( mod 17)

yB ≡ 313 ≡ 1.594.323 ≡ 12( mod 17)

Ap(cid:243)s a troca entre A e B desses valores, sªo realizadas as opera(cid:231)ıes do protocolo:

• Para o usuÆrio A

• Para o usuÆrio B

kAB ≡ [1.594.323]15( mod 17)

kAB ≡ [(313)]15( mod 17)

kAB ≡ 313.15 ≡ 10( mod 17)

kBA ≡ [14.348.907]13( mod 17)

kBA ≡ [(315)]13( mod 17)

kBA ≡ 315.13 ≡ 10( mod 17)

Dessa forma, o valor da chave privada comum a ambos Ø

kAB ≡ kBA ≡ 10( mod 17)

(cid:201) importante acrescentar que o valor de p = 17 foi utilizado a efeito de exemplo,
e nªo constitui um valor tipicamente utilizado, tendo em vista que o cÆlculo de xA
ou xB poderia ser realizado em tempo reduzido a partir do valor de p e de yA e yB.

39

Entretanto, para valores elevados de p, da ordem de centenas de casas decimais, nªo Ø
poss(cid:237)vel determinar estes valores em um intervalo de tempo razoÆvel.

5.1.2 RSA

O estudo do algoritmo RSA, sob a (cid:243)ptica de alunos de Ensino MØdio, geralmente
apresenta di(cid:28)culdades em alguns conceitos tipicamente apresentados em cursos de n(cid:237)vel
superior, e dentre eles, pode-se citar a aplica(cid:231)ªo da fun(cid:231)ªo ϕ(n) de Euler, tambØm
referida como fun(cid:231)ªo totiente ou tociente de Euler, e do Teorema de Euler da Teoria
dos Nœmeros, ou Teorema do Tociente.

Com rela(cid:231)ªo (cid:224) fun(cid:231)ªo ϕ(n) a introdu(cid:231)ªo de sua de(cid:28)ni(cid:231)ªo nªo parece apresentar
grandes acrØscimos aos conceitos adquiridos previamente, e sua exposi(cid:231)ªo pode ser
feita de modo geral como "a quantidade de nœmeros naturais menores ou iguais a n
com os quais n Ø primo entre si". Abordando com uma linguagem um pouco mais
matemÆtica, pode-se escrever:

Esta ideia Ø melhor estabelecida quando alguns valores numØricos sªo apresentados.
Por exemplo, utilizando os valores de n iguais a 8, 9, 11 e 13. As tabelas a seguir
apresentam os valores menores que n e com os quais estes nœmeros sªo primos entre
si. Naturalmente, o valor computado para a fun(cid:231)ªo Ø o total de valores destacados em
verde, resultando no total destacado em azul.

40

A partir destes œltimos dois valores (n = 11 e n = 13), Ø interessante apontar uma
propriedade interessante da fun(cid:231)ªo em estudo, que refere-se (cid:224) sua aplica(cid:231)ªo em nœmeros
primos. (cid:201) natural perceber que qualquer nœmero primo p terÆ fun(cid:231)ªo ϕ(p) tal que

ϕ(p) = p − 1

Esta propriedade nªo deve apresentar maior di(cid:28)culdade de compreensªo tendo em
vista a pr(cid:243)pria de(cid:28)ni(cid:231)ªo de nœmero primo, a partir da qual um nœmero primo somente
serÆ dividido por 1 e por si pr(cid:243)prio. Dessa forma, em conjunto com a de(cid:28)ni(cid:231)ªo da
fun(cid:231)ªo totiente de Euler, tem-se o resultado apresentado na equa(cid:231)ªo anterior. Deve-se
destacar a import(cid:226)ncia deste resultado, principalmente no que se refere ao estudo do
RSA, quando aplicada com outra propriedade da fun(cid:231)ªo ϕ(p), aquela que se refere (cid:224)
sua multiplicidade, ou seja:

ϕ(a.b) = ϕ(a).ϕ(b)

sendo que a e b sªo primos entre si.

No que se refere (cid:224) demonstra(cid:231)ªo deste resultado, este provavelmente deve ser omi-
tido dos estudantes de Ensino MØdio, pois apresenta um n(cid:237)vel de di(cid:28)culdade acima
daquele usualmente apresentado a eles. Entretanto, sua aplica(cid:231)ªo ao produto de nœ-

41

meros primos Ø fundamental ainda no estudo do RSA. Dessa forma, para o produto de
dois primos p e q, tem-se que

ϕ(p.q) = ϕ(p).ϕ(q) = (p − 1).(q − 1)

Acrescente-se a este œltimo resultado o Teorema de Euler da Teoria dos Nœmeros,

cuja demonstra(cid:231)ªo tambØm deve ser omitida. Este teorema estabelece que

aϕ(n) ≡ 1( mod n)

onde a Ø primo entre si com n. Novamente, para efeito didÆtico, pode ser in-
teressante apresentar um exemplo numØrico desses œltimos conceitos. Assim, sejam
escolhidos os valores de a, p e q.

a = 2

p = 5

q = 7

A partir destes valores pode-se calcular

n = p.q = 5.7 = 35

ϕ(n) = (p − 1).(q − 1) = 4.6 = 24

Assim, substituindo-se os valores conforme o proposto, para veri(cid:28)ca(cid:231)ªo, tem-se

aϕ(n) = 224 = 16.777.216

aϕ(n) = 224 = 35.(479.349) + 1

aϕ(n) ≡ 224 ≡ 1( mod 35)

aϕ(n) ≡ 1( mod n)

sendo esta œltima a equa(cid:231)ªo do Teorema de Euler, conforme esperado. Para a
utiliza(cid:231)ªo em criptogra(cid:28)a, deve-se adotar um procedimento idŒntico (cid:224)quele descrito
anteriormente, seja ele:

42

• Escolhe-se um valor (tambØm denominado expoente de encripta(cid:231)ªo) e < ϕ(n)
(inteiro positivo), tal que e e ϕ(n) sejam primos entre si. Para exempli(cid:28)ca(cid:231)ªo
numØrica, escolha-se e = 13.

• Encontra-se o valor (por sua vez, usualmente denominado expoente de decripta-

(cid:231)ªo) d < ϕ(n) tal que

e.d ≡ 1( mod ϕ(n))

Neste ponto, pode-se determinar o valor de d a partir da de(cid:28)ni(cid:231)ªo anterior e da

congruŒncia indicada, ou seja:

e.d ≡ 1( mod ϕ(n))

e.d = k.ϕ(n) + 1

d =

k.ϕ(n) + 1
e

onde k Ø um nœmero inteiro a ser determinado, em geral, pelo algoritmo de Euclides

estendido.

Adotando, para esta nova anÆlise, os seguintes valores

p = 19

q = 23

Pode-se calcular

n = p.q = 19.23 = 437

ϕ(n) = (p − 1).(q − 1) = 18.22 = 396

Para o cÆlculo de d, aplicando-se diretamente, por inspe(cid:231)ªo, k = 2, tem-se que

d =

k.ϕ(n) + 1
e

43

d =

2.396 + 1
13

d = 61

Assim, tendo calculado estes termos, pode-se estabelecer para a situa(cid:231)ªo de teste
apresentada, os valores privados e pœblicos que poderiam ser utilizados para essa co-
munica(cid:231)ªo te(cid:243)rica. As tabelas a seguir consolidam estes valores.

Suponha-se, entªo, que um usuÆrio B queira enviar uma mensagem a um usuÆrio A
utilizando o mØtodo RSA como forma de criptogra(cid:28)a dessa comunica(cid:231)ªo, com base nos
valores apresentados. Assim, considere-se que os valores pœblicos sªo de conhecimento
de A e B (assim como de qualquer usuÆrio da rede, inclusive de um criptoanalista C),
entretanto, os valores privados sªo de conhecimento exclusivo de A, a quem se destina
a mensagem.

Para aplica(cid:231)ªo didÆtica, Ø poss(cid:237)vel visualizar esta situa(cid:231)ªo da seguinte maneira: o
usuÆrio A disponibiliza um cadeado aberto em um diret(cid:243)rio pœblico. Este representa
seu segredo pœblico. Qualquer pessoa pode anexar uma mensagem a este cadeado, uma
vez que ele Ø de dom(cid:237)nio pœblico. Entretanto, quando B vincula uma mensagem ao
cadeado, antes de enviÆ-lo novamente a A ele realiza o fechamento do cadeado. Esta
etapa do processo caracteriza bem o que a fun(cid:231)ªo de encripta(cid:231)ªo deve realizar, uma
opera(cid:231)ªo simples de realizar, o fechamento do cadeado, entretanto, sua abertura Ø de
dif(cid:237)cil opera(cid:231)ªo sem a posse da chave.

Dessa forma, o cadeado fechado pode ser enviado em seguran(cid:231)a em uma rede de
comunica(cid:231)ªo, ainda que esta nªo seja segura, pois considera-se que sua abertura, sem
a posse da chave Ø extremamente dif(cid:237)cil.

44

Nesse ponto, ao receber o cadeado, o usuÆrio A, que possui a chave privada, re-
presentada pela chave do cadeado, pode abri-lo facilmente, tendo acesso (cid:224) mensagem
decriptada.

Muitas vezes questiona-se a possibilidade de um usuÆrio mal-intencionado usar este
cadeado aberto e enviar uma mensagem, passando-se por B. Tal problema pode ser
resolvido estabelecendo-se, entre A e B o uso de assinaturas digitais, as quais podem
ser geradas utilizando-se o mØtodo de Di(cid:30)e-Hellman, com pequenas altera(cid:231)ıes.

O esquema a seguir delineia o funcionamento do RSA previamente descrito.

Naturalmente que neste caso, os valores pœblicos e e n constituem em conjunto
o segredo pœblico, ou como usualmente referido, a chave pœblica e os valores d e n
constituem em conjunto a chave privada, que servirÆ para abrir o cadeado. Utilizando-
se o exposto anteriormente, tem-se que a opera(cid:231)ªo

y ≡ xe( mod n)

45

representa o ato de fechar o cadeado com a mensagem x, tendo em vista que a
partir do conhecimento de y, e e n Ø extremamente dif(cid:237)cil obter o valor de x, ou abrir o
cadeado. Assim, y mimetiza o cadeado fechado com a mensagem. Ao receber o valor
y proveniente de B, o usuÆrio A realiza a opera(cid:231)ªo

yd ≡ (xe)d ≡ xe.d( mod n)

A rela(cid:231)ªo entre e e d fora estabelecida de tal forma que

e.d ≡ 1( mod ϕ(n)) ⇔ e.d = k.ϕ(n) + 1; k ∈ Z

Esta rela(cid:231)ªo aplicada (cid:224) equa(cid:231)ªo anterior leva a

yd ≡ xe.d( mod n)

≡ xk.ϕ(n)+1( mod n)
(cid:110)(cid:104)(cid:0)xϕ(n)(cid:1)k(cid:105)

.x

(cid:111)

( mod n)

≡

que pelo teorema de Euler retorna

que constitui a mensagem original de B.

Observe-se que os valores de p e q, bem como ϕ(n), servem apenas como base para

a constru(cid:231)ªo da chave d, e portanto devem tambØm ser mantidos em sigilo.

Retornando ao exemplo original, no qual B gostaria de enviar uma mensagem a
A. Suponha-se que a mensagem de interesse seja a palavra "MAT". Para isso, B
converte esta mensagem a um valor numØrico. Utilizando-se o mØtodo mais usual,
convertendo-se com base no c(cid:243)digo ASCII para decimal, seria obtido, para cada letra

46

Para efeito de simplicidade no envio, cada letra seria enviada individualmente. Seja

a primeira letra, M, a ser enviada. Assim, o valor de x, referente (cid:224) mensagem seria

x1 = 77

Aplicando-se o mØtodo RSA descrito, com os valores previamente estabelecidos,

n = 437, e = 13 e d = 61, o usuÆrio B efetuaria as opera(cid:231)ıes

Este valor seria enviado a A, que realizaria

47

retornando, assim, a mensagem enviada por B. O processo Ø igualmente repetido para
os demais valores da mensagem.

Apesar de os valores encontrados possu(cid:237)rem um nœmero relativamente elevado de
casas decimais para grande quantidade das calculadoras de mªo, a enorme maioria
dos computadores consegue realizar estas opera(cid:231)ıes de maneira relativamente simples
e rÆpida, e Ø provÆvel que seja ainda mais didÆtico apresentar de que maneira essas
opera(cid:231)ıes podem ser realizadas em um computador, preferencialmente expondo o passo
a passo destas atravØs de recursos audiovisuais.

Deve-se notar ainda que, para aplica(cid:231)ıes prÆticas, os valores de p e q possuem
diversas casas decimais, tipicamente da ordem de centenas, de modo a tornar ainda
mais dif(cid:237)cil o processo de criptoanÆlise.

5.2 TRABALHOS FUTUROS

Tendo em vista que as anÆlises apresentadas, conforme percebido ao longo do tra-
balho, envolvem usualmente valores numØricos bastante elevados, a sistematiza(cid:231)ªo das
opera(cid:231)ıes envolvidas pode ser sobremaneira trabalhosa quando realizadas bra(cid:231)almente.
Entretanto, uma vez que se tenha embasado solidamente os conceitos matemÆticos apre-
sentados e exempli(cid:28)cados com valores reduzidos, pode-se perceber a oportunidade de
introduzir nesse contexto o estudo e aplica(cid:231)ªo de linguagens de programa(cid:231)ªo, de modo
a utilizar esta ferramenta, que tem se tornado cada vez mais recorrente no dia-a-dia
dos estudantes de Ensino MØdio.

Naturalmente que para o aluno iniciante em qualquer tipo de linguagem de progra-
ma(cid:231)ªo, este processo seria improdutivo, entretanto, para sua aplica(cid:231)ªo como objetivo
(cid:28)nal de um curso de dura(cid:231)ªo de um semestre que introduzisse alguma linguagem de
programa(cid:231)ªo mais simples e amigÆvel ao usuÆrio, a proposta parece razoÆvel.

Possivelmente os estudantes que realizariam maior procura seriam aqueles com
interesses diretamente relacionados (cid:224) Computa(cid:231)ªo e MatemÆtica, bem como aqueles
que costumeiramente participam de Olimp(cid:237)adas aplicadas a essas Æreas, no entanto, a
demonstra(cid:231)ªo de que, ao (cid:28)nal do curso, estes obteriam conhecimento, ainda que sim-
pli(cid:28)cado, nos conceitos relacionados (cid:224) Criptogra(cid:28)a pode trazer ainda maior interesse.

Em paralelo a essa proposta, pode-se sugerir, como continua(cid:231)ªo do curso previ-

48

amente citado, outro curso que aplicasse e implementasse sistemas criptogrÆ(cid:28)cos de
chave simØtrica, particularmente o protocolo DES, tendo em vista sua relativa simpli-
cidade. De acordo com o rendimento neste curso, poderia ainda ser aplicada a ideia
de geradores de sequŒncias pseudo-aleat(cid:243)rias, bem como sua implementa(cid:231)ªo prÆtica,
de modo que as sequŒncias pudessem ser utilizadas como chaves no DES. Este curso
deveria, obviamente, ter como prØ-requisito o primeiro, de modo a aproveitar os conhe-
cimentos de Criptogra(cid:28)a e Programa(cid:231)ªo adquiridos previamente.

Naturalmente que estes cursos, que em conjunto levariam algo em torno de dois se-
mestres, nªo poderiam tomar um tempo muito elevado dos alunos em sua rotina diÆria,
principalmente por se tratarem de atividades extracurriculares. AliÆs, Ø exatamente
esta caracter(cid:237)stica, de ser uma atividade que nªo faz parte da grade curricular usual
aliada ao fato desse estudo se tratar de uma atividade claramente interdisciplinar que
pode atrair o interesse de um nœmero maior de alunos.

5.3 Considera(cid:231)ıes (cid:28)nais

Observa-se que em muitos pa(cid:237)ses o est(cid:237)mulo (cid:224) participa(cid:231)ªo de atividades extra-curriculares
tem trazido resultados extremamente positivos, principalmente no que diz respeito (cid:224)
inova(cid:231)ªo tecnol(cid:243)gica e intelectual, os quais estªo diretamente relacionados ao desenvol-
vimento educacional e econ(cid:244)mico.

Este trabalho apresenta, portanto, uma breve introdu(cid:231)ªo aos principais mØtodos
de aplica(cid:231)ªo de sistemas criptogrÆ(cid:28)cos, tanto de chave simØtrica como assimØtrica, e
sugere ao longo deste cap(cid:237)tulo, nªo somente uma forma de abordar estes assuntos em
sala de aula como propıe que eles sejam levados adiante, com a execu(cid:231)ªo de um ou
mais cursos extracurriculares que realizassem sua implementa(cid:231)ªo computacional, tendo
em vista que o crescimento desta e de atividades semelhantes certamente acrescentaria,
e muito, no que diz respeito (cid:224) qualidade educacional, e direcionamento vocacional de
nossos alunos.

49

ReferŒncias

[1] BEUTELSPACHER, Albrecht. Cryptography. Ed Mathematical Associ-

ation of America. Segunda Edi(cid:231)ªo.

[2] GARCIA, L. Alberto. Probability and Random Processes for Electrical
Engineerig. Ed Addison-Wesley Publishing Company. Segunda Edi(cid:231)ªo.

[3] KOBLITZ, Neal. A course in number Theory and Cryptography. Ed

Springer. Primeira Edi(cid:231)ªo.

[4] MARSAGLIA, G. DIEHARD: a batery of tests of randomness. URL

http://stat.fsu.edu/ geo/diehard.html.

[5] MONTGOMERY, C. DOUGLAS; RUNGER, C. G. Estat(cid:237)stica Aplicada

e Probabilidade para Engenheiros. LTC . Segunda Edi(cid:231)ªo.

[6] NIST, National Institute of Standards and Technology. Advanced En-

cryption Standard. URL http://csrc.nist.gov/CryptoToolkit/aes/.

[7] PAPOULIS, A.; PILLAI, S. Probability, Random Variables and Stochas-

tic Processes. McGraw-Hill. Quarta Edi(cid:231)ªo.

[8] RANDOM.C. Linux kernel

random number generator. URL .

http://www.kernel.org.

[9] SCHEINER, B. Protocols, Algorithms, and Source Code in C. Applied

Cryptography. Ed. John Wiley e Sons, Ltd. Segunda Edi(cid:231)ªo.

[10] SEDRA, S. ADEL; SMITH, C.K. Microeletr(cid:244)nica. Makron Books Ltda,

2000. Quarta Edi(cid:231)ªo.

[11] TANENBAUM, A. S. Computer Networks. Upper Saddle River: Prentice

Hall, New Jersey, 1996.

[12] VANSTONE, S.; OORSCHOT, P.van; MENEZES A. Handbook of Ap-

plied Cryptography. CRC Press, 1996.

[13] Jain, R., The Art of Computer Systemns Performance Analysis, Jhon

Wiley e Sons, 1991.

50

[14] Banks, J. Carson, J.S. e NELSON, B.L., Disrete-Event System Simula-
tion, Prendice-Hall, Englewood Cli(cid:27)s, NJ, Segunda Edi(cid:231)ªo, 1996.

[15] Law, A.M. e KELTON, W.D., Simulation Modeling and Analysis,

McGraw-Hill, NY, Segunda Edi(cid:231)ªo, 1991.

[16] Dudewicz E. J. e KARIAN, Z. A., Modern Design and Analysis of
Discrete-Event Computer Simulations, IEEE Computer Society Press,
1985.

[17] ZELENOVSKY, R.; MENDON˙A, A. Eletr(cid:244)nica Digital, Curso PrÆtico

e Exerc(cid:237)cios. MZ Editora, 2002.

[18] WIKIPEDIA. Symetric Cryptography - wikipedia, the free enciclopedia,
2014. URL en.wikipedia.org/wiki/ Symetric Cryptography. Acessado em
15/06/14.

[19] WIKIPEDIA. Digital Signature - wikipedia, the free enciclopedia, 2014.
URL en.wikipedia.org/wiki/ Digital Signature. Acessado em 15/06/14.

51

AP˚NDICE

NO˙(cid:213)ES DE L(cid:211)GICA MATEM`TICA E ELETR(cid:212)NICA DI-

GITAL

Esta parte do trabalho foi escrita para que uma revisªo nos conceitos de fun(cid:231)ıes
l(cid:243)gicas e introdu(cid:231)ªo (cid:224) eletr(cid:244)nica digital fossem feitos, com o objetivo de o leitor entender
melhor os algoritmos presentes neste trabalho, e nªo ter que recorrer a buscas fora
de escopo. Este resumo aborda apenas conceitos restritos de fun(cid:231)ıes l(cid:243)gicas, bem
como a conhecimentos introdut(cid:243)rios de eletr(cid:244)nica digital, con(cid:28)gurando um conjunto
de requisitos para o entendimento dos algoritmos citados ao longo do trabalho.

FUN˙(cid:213)ES DE VARI`VEIS BOOLEANAS

Essas fun(cid:231)ıes serªo estudadas tendo como entrada e dados de manipula(cid:231)ªo nœmeros

binÆrios.

• Fun(cid:231)ªo ”e” − conjun(cid:231)ªo l(cid:243)gica (∧)

Esta fun(cid:231)ªo possui duas entradas e sua sa(cid:237)da serÆ igual a 1 se as duas entradas
forem iguais a 1.

52

• Fun(cid:231)ªo ”ou” − conjun(cid:231)ªo l(cid:243)gica (∨)

Esta fun(cid:231)ªo tambØm possui duas entradas e sua sa(cid:237)da serÆ igual a 1 se pelo menos
uma das entradas forem iguais a 1.

• Fun(cid:231)ªo ”nªo” − nega(cid:231)ªo l(cid:243)gica (∼)

Esta fun(cid:231)ªo possui apenas uma entrada, sendo sua sa(cid:237)da a nega(cid:231)ªo da entrada,
ou seja valores contrÆrios, o que era 1 passa a ser 0 e o que era 0 passa a ser 1.

• Fun(cid:231)ªo "xor "− disjun(cid:231)ªo exclusiva (⊕)

Esta fun(cid:231)ªo possui duas entradas e tem origem na fun(cid:231)ªo ou, sendo que sua sa(cid:237)da
serÆ igual a 1 se apenas uma das duas entradas for igual a 1. Se ambas forem 1,
a sa(cid:237)da serÆ zero.

Esta œltima fun(cid:231)ªo Ø muito utilizada em criptogra(cid:28)a, sendo que muitos algoritmos

utilizam esta fun(cid:231)ªo em seus processos.

53

MULTIPLEXADORES

Um circuito multiplexador consiste basicamente de permitir, de acordo com um

sinal, que determinada entrada seja reproduzida na sa(cid:237)da.

No caso da (cid:28)gura abaixo, caso o sinal seja n(cid:237)vel alto (valor atribu(cid:237)do em bits = 1),

a sa(cid:237)da reproduzida Ø a Entrada−1, caso o sinal seja 0, a sa(cid:237)da Ø igual a Entrada−2.

Pela fun(cid:231)ªo desempenhada por este sinal, ele recebe o nome de sinal habilitador.

REGISTRADORES DE DESLOCAMENTO E SINAL DE REL(cid:211)GIO (CLOCK)

O registrador de deslocamento Ø um circuito capaz de armazenar e deslocar uma
palavra (conjunto de bits) para a direita ou para a esquerda mediante um sinal de
rel(cid:243)gio.

Semelhante ao sinal habilitador do multiplexador o clock tambØm funciona habili-
tando a sa(cid:237)da do registrador, mas tambØm Ø responsÆvel pela entrada e pelo desloca-
mento deste registrador.

Por motivo computacional o clock Ø, em sua maioria, peri(cid:243)dico. Muitas vezes se

conjuga este sinal a outro, tornando o sinal habilitador nªo peri(cid:243)dico.

54

