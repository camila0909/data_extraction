UNIVERSIDADE ESTADUAL DE FEIRA DE SANTANA

Departamento de Ciˆencias Exatas

PROFMAT - Mestrado Profissional em Matem´atica em Rede Nacional

Dissertac¸˜ao de Mestrado

C ´ODIGOS CORRETORES DE ERROS: UMA
PROPOSTA APLICADA AO ENSINO M´EDIO.

Aldo Brito de Jesus

Orientador: Prof. Dr. Maur´ıcio de Araujo Ferreira

Feira de Santana

Dezembro de 2021

UNIVERSIDADE ESTADUAL DE FEIRA DE SANTANA

Departamento de Ciˆencias Exatas

PROFMAT - Mestrado Profissional em Matem´atica em Rede Nacional

C ´ODIGOS CORRETORES DE ERROS: UMA
PROPOSTA APLICADA AO ENSINO M´EDIO.

Aldo Brito de Jesus

Disserta¸c˜ao apresentada ao Programa de Mestrado

Proﬁssional em Matem´atica em Rede Nacional

-

PROFMAT do Departamento de Ciˆencias Exatas,

UEFS, como requisito parcial para a obten¸c˜ao do

t´ıtulo de Mestre.

Orientador: Prof. Dr. Maur´ıcio de Araujo Ferreira

Feira de Santana

16 de dezembro de 2021

  Ficha Catalográfica - Biblioteca Central Julieta Carteado - UEFS 

           Jesus, Aldo Brito de 

  J56c       Códigos corretores de erros: uma proposta aplicada ao Ensino Médio. / 

Aldo Brito de Jesus. – 2021. 

                 122 f.: il. 
. 
                 Orientador: Maurício de Araujo Ferreira 
                 Dissertação (mestrado profissional) – Universidade Estadual de Feira de 
Santana. Departamento de Ciências Exatas, Programa de Pós-Graduação em 
Matemática em Rede Nacional, Feira de Santana, 2021. 

                 1.Códigos corretores de erros. 2.Números complexos. 3. Quatérnios  de 

Hamilton. 4.Código de Alamouti. 5.Planílha eletrônica I. Ferreira, Maurício de 
Araujo, orient. II.Universidade  Estadual de Feira de Santana. III. Título. 

                                                                                 CDU: 517.9 

          Maria de Fátima de Jesus Moreira - Bibliotecária - CRB-5/1120 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
Universidade Estadual de Feira de Santana
Departamento de Ciˆencias Exatas

Mestrado Profissional em Matem´atica em Rede Nacional

Ata da Sess˜ao p´ublica de defesa de dissertac¸˜ao do discente Aldo
Brito de Jesus do Programa de Mestrado Profissional em Matem´atica
em Rede Nacional da Universidade Estadual de Feira de Santana

Aos dezesseis dias do mˆes de dezembro de dois mil e vinte e um, `as 14:00 ho-
ras, ocorreu a defesa p´ublica n˜ao presencial, atrav´es da plataforma Google Meet, link:
meet.google.com/niy-hmiq-vsk , da disserta¸c˜ao apresentada sob o t´ıtulo “C ´ODIGOS
CORRETORES DE ERROS: UMA PROPOSTA APLICADA AO ENSINO
M´EDIO”, do discente Aldo Brito de Jesus, do Programa de Mestrado Proﬁssional
em Matem´atica em Rede Nacional - PROFMAT da Universidade Estadual de Feira de
Santana, para obten¸c˜ao do t´ıtulo de MESTRE. A Banca Examinadora foi composta pelos
professores: Maur´ıcio de Araujo Ferreira (Orientador, UEFS), Silvina Alejandra Alderete
(UFOB) e Edward Landi Tonucci (UEFS). A sess˜ao de defesa constou da apresenta¸c˜ao
do trabalho pelo discente e das argui¸c˜oes dos examinadores.
Em seguida, a Banca Examinadora se reuniu em sess˜ao secreta para julgamento ﬁnal do
trabalho e atribuiu o conceito:

.

Sem mais a tratar, foi lavrada a presente ata, que segue assinada pelos membros da Banca
Examinadora e pelo Coordenador Acadˆemico Institucional do PROFMAT.
Feira de Santana, 16 de dezembro de 2021.

Prof. Dr. Maur´ıcio de Araujo Ferreira (Orientador, UEFS)
Orientador

Prof.a Dra. Silvina Alejandra Alderete (UFOB)

Prof. Dr. Edward Landi Tonucci (UEFS)

Visto do Coordenador:

Agradecimentos

Venho por meio de algumas palavras demonstrar meus sinceros agradecimentos a todas

aquelas pessoas que de alguma forma contribu´ıram para a elabora¸c˜ao deste trabalho.

Agrade¸co primeiramente a Deus por ter me dado for¸cas e sabedoria para chegar at´e

aqui, sem Ele esta caminhada n˜ao seria poss´ıvel. Gostaria de agradecer a minha m˜ae por

se fazer presente em todos momentos de decis˜oes dif´ıceis e me apoiar em cada uma delas.

Agrade¸co tamb´em ao meu pai, a minha companheira Ivanildes, aos meus irm˜ao e a todos

os demais familiares.

Agrade¸co ao professor Maur´ıcio de Araujo Ferreira por ter aceitado ser meu orienta-

dor e compartilhar um pouco do seu conhecimento comigo, sempre com paciˆencia e muita

sabedoria. Gostaria de agradecer tamb´em a todos os demais professores da UESB e do

PROFMAT/UEFS que ﬁzeram parte da minha forma¸c˜ao at´e o momento e que comparti-

lharam seus conhecimentos comigo. Em especial agrade¸co aos professores(as): Ana Carla

Percontini da Paix˜ao, Darlan Ferreira de Oliveira, Fab´ıola de Oliveira Pedreira, Kisnney

Emiliano de Almeida e Maur´ıcio de Araujo Ferreira.

Gostaria ainda de demostrar meu agradecimento a todos os meus colegas do mestrado

pela companhia durante as aulas e por ter compartilhado algumas experiˆencias comigo.

Em especial agrade¸co aos colegas Antˆonio Ed´ezio de Santos de Sousa e Jo˜aonito de Jesus

Santos pelo companheirismo em todos os momentos que precisei.

Por ﬁm, agrade¸co a Sociedade Brasileira de Matem´atica.

i

Resumo

Este trabalho tem por objetivo fazer um estudo sobre os c´odigos corretores de erros e

apresentar uma proposta de abordagem deste tema no Ensino M´edio, possibilitando assim

que o professor utilize partes desta disserta¸c˜ao como material te´orico para um minicurso

que tenha estudantes desta etapa de ensino como p´ublico alvo. Neste trabalho fazemos

uma breve revis˜ao sobre matrizes, vetores, bases, anel, corpo, espa¸co vetorial e outros

conte´udos que s˜ao utilizados no processo de codiﬁca¸c˜ao, transmiss˜ao e corre¸c˜ao de erros

em um c´odigo linear. Apresentamos os conceitos de m´etrica de Hamming, bits de paridade,

capacidade de corre¸c˜ao, matriz geradora e outras deﬁni¸c˜oes sobre a teoria dos c´odigos cor-

retores de erros. Trazemos uma sequˆencia de atividades sobre c´odigos de Hamming que

o professor pode utilizar em sala de aula. Nas atividades, o WhatsApp ´e utilizado como

recurso did´atico e as planilhas eletrˆonicas s˜ao exploradas para realizar algumas tarefas

no processo de corre¸c˜ao de erros. Ademais, apresentamos os n´umeros complexos como o

conjunto dos pares ordenados reais munidos de duas opera¸c˜oes, uma de adi¸c˜ao e outra de

multiplica¸c˜ao. Exploramos o anel dos quat´ernios de Hamilton e mostramos que existe um

isomorﬁsmo entre este e um subanel do anel das matrizes com entradas complexas. Este

subanel de matrizes est´a intimamente relacionado com o c´odigo de Alamouti que apresen-

tamos como uma possibilidade de aprofundamento no estudo dos c´odigos corretores.

Palavras-chave: C´odigos Corretores de Erros; N´umeros Complexos; Quat´ernios de Ha-

milton; C´odigo de Alamouti; Planilha eletrˆonica.

ii

Abstract

This work aims to study error-correcting codes and present a proposal to approach this to-

pic in High School, thus enabling the teacher to use parts of this dissertation as theoretical

material for a mini-course that has students from this stage of education as audiences tar-

get. In this work, we brieﬂy review matrices, vectors, bases, ring, ﬁeld, vector spaces and

other contents that are used in the process of encoding, transmitting and correcting errors

in a linear code. We present the concepts of Hamming metrics, parity bits, correctability,

generating matrix and other deﬁnitions on the theory of error-correcting codes. We bring

a sequence of activities on Hamming codes that the teacher can use in the classroom. In

activities, WhatsApp is used as a teaching resource and electronic spreadsheets are used

to perform some tasks in the error correction process. Furthermore, we present the com-

plex numbers as the set of real ordered pairs with two operations, one for addition and

the other for multiplication. We explore the ring of Hamilton quaternions and show that

there is an isomorphism between it and a subring of the ring of matrices with complex

inputs. This subring of matrices is closely related to the Alamouti code, which we present

as a possibility for deepening the study of corrective codes.

Keywords: Error Correction Codes; Complex numbers; Hamilton’s Quaternions; Ala-

mouti Code; Spreadsheet.

iii

Sum´ario

Agradecimentos

Resumo

Abstract

Sum´ario

Introdu¸c˜ao

1 C´odigos Corretores de Erros

1.1 C´odigos Corretores de Erros . . . . . . . . . . . . . . . . . . . . . . . . . . .

1.2 M´etrica de Hamming . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

i

ii

iii

v

1

3

4

8

1.3 Equivalˆencia de C´odigos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12

2 C´odigos Lineares

15

2.1 An´eis, Corpos e Espa¸cos Vetoriais

. . . . . . . . . . . . . . . . . . . . . . . 15

2.2 Corpos de Inteiros M´odulo p

. . . . . . . . . . . . . . . . . . . . . . . . . . 22

2.3 C´odigo de Hamming . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26

2.4 C´odigos Lineares . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30

2.4.1 Matriz Geradora de um C´odigo . . . . . . . . . . . . . . . . . . . . . 32

2.4.2 C´odigos Duais

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36

2.4.3 Decodiﬁca¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43

3 Corpo dos N´umeros Complexos

52
3.1 Adi¸c˜ao e multiplica¸c˜ao em R2 . . . . . . . . . . . . . . . . . . . . . . . . . . 52

3.2 Representa¸c˜ao Geom´etrica dos N´umeros complexos . . . . . . . . . . . . . . 57

3.3 Forma Polar dos N´umeros Complexos

. . . . . . . . . . . . . . . . . . . . . 62

4 C´odigos Corretores via Quat´ernios

67

4.1 Deﬁni¸c˜oes e resultados b´asicos . . . . . . . . . . . . . . . . . . . . . . . . . . 68

4.2 Representa¸c˜ao matricial

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73

iv

4.3 C´odigo de Alamouti

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82

5 Proposta de Aplica¸c˜ao no Ensino M´edio.

98

5.1 Aula 1 - Corrigindo Erros . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98

5.2 Aula 2 - C´odigos de Hamming . . . . . . . . . . . . . . . . . . . . . . . . . . 101

5.3 Aula 3 - Matrizes, Planilhas e C´odigos de Hamming . . . . . . . . . . . . . 105

6 Conclus˜ao

Referˆencias Bibliogr´aﬁcas

A Constru¸c˜ao da M´aquina

B Representa¸c˜ao do Sal˜ao

108

110

112

121

v

Introdu¸c˜ao

A implementa¸c˜ao do Novo Ensino M´edio e a cria¸c˜ao da Base Nacional Comum Curricu-

lar (BNCC) traz uma nova vis˜ao para o ensino da Matem´atica na Educa¸c˜ao B´asica. A

nova proposta de ensino coloca o aluno como um ser ativo e correspons´avel pelo processo

de ensino e aprendizagem. O ensino da Matem´atica deixa de ser uma mera transmiss˜ao

de conte´udos e estrat´egias de resolu¸c˜ao de quest˜oes e coloca o aluno como um “ser ma-

tem´atico”, ou seja, um ser capaz de usar e criar matem´atica para as demandas sociais e

tecnol´ogicas [5].

De acordo com a BNCC [5],“no Ensino M´edio o foco ´e a constru¸c˜ao de uma vis˜ao inte-

grada da Matem´atica, aplicada `a realidade em diferentes contextos.” Tendo isso em vista,

enxergamos os c´odigos corretores de erros como uma oportunidade para o professor expor

a Matem´atica em sala de aula como parte da realidade em que vivemos e mostrar para

os alunos o potencial desta ´area de conhecimento para o desenvolvimento de novas tecno-

logias. Acreditamos ainda que, o trabalho com c´odigos em sala de aula proporciona aos

alunos a oportunidade de vivenciar o fazer matem´atico, investigando e propondo solu¸c˜oes

para desaﬁos do mundo contemporˆaneo, desenvolvendo assim a segunda habilidade da

´area de Matem´atica e suas Tecnologias proposta pela BNCC.

Propor ou participar de a¸c˜oes para investigar desaﬁos do mundo contem-

porˆaneo e tomar decis˜oes ´eticas e socialmente respons´aveis, com base na an´alise

de problemas sociais, como os voltados a situa¸c˜oes de sa´ude, sustentabilidade,

das implica¸c˜oes da tecnologia no mundo do trabalho, entre outros, mobili-

zando e articulando conceitos, procedimentos e linguagens pr´oprios da Ma-

tem´atica. [5]

Neste trabalho apresentamos os c´odigos corretores de erros por meio de uma linguagem

acess´ıvel para alunos do Ensino M´edio. De modo que ao trabalhar com este conte´udo

em sala de aula, o professor possa usar textos da disserta¸c˜ao como material did´atico.
Procuramos simpliﬁcar a linguagem matem´atica sem perder o formalismo. ´E claro que
ao fazer isso, restringimos um pouco o leque de conte´udos que podem ser explorados por

meio de c´odigos corretores, mas, acreditamos que propor uma leitura mais leve, seja uma

maneira de convidar os alunos para o estudo da Matem´atica.

No primeiro cap´ıtulo desta disserta¸c˜ao, apresentamos os conceitos b´asicos de c´odigos

1

corretores de erros: deﬁni¸c˜ao, m´etrica de Hamming, transmiss˜ao de uma palavra, re-

dundˆancias e outros. Exibimos tamb´em alguns exemplos para facilitar o entendimento

de alguns conceitos abstratos. Julgamos que o cap´ıtulo pode ser usando em sala de aula

como uma breve introdu¸c˜ao aos c´odigos corretores de erros.

No in´ıcio do segundo cap´ıtulo deﬁnimos anel, corpo e espa¸co vetorial. Em seguida

fazemos uma breve apresentamos dos corpos de inteiros m´odulo p e suas principais pro-

priedades. Apresentamos tamb´em os C´odigos de Hamming com o intuito de introduzir

o estudo dos c´odigos lineares, que s˜ao deﬁnidos logo em seguida. Neste cap´ıtulo, muitos

dos conceitos de c´odigos lineares foram apresentados inicialmente por meio de exemplos,

desta maneira, em um primeiro momento em sala de aula, o professor do Ensino M´edio

pode apresentar os conceitos por meio dos exemplos sem a necessidade de recorrer a con-

ceitos mais avan¸cados de ´algebra. E para ﬁnalizar o cap´ıtulo, apresentamos o m´etodo para

corre¸c˜ao de erros.

No terceiro cap´ıtulo, com o intuito de preparar o terreno para o cap´ıtulo seguinte,
fazemos uma breve apresenta¸c˜ao dos n´umeros complexos como sendo o espa¸co R2 munido

de uma opera¸c˜ao de adi¸c˜ao e uma opera¸c˜ao de multiplica¸c˜ao. Partindo da forma polar de

um n´umero complexo, apresentamos tamb´em uma interpreta¸c˜ao geom´etrica para adi¸c˜ao
e para a multiplica¸c˜ao deﬁnidas em R2.

O quarto cap´ıtulo foge um pouco do que ´e proposto no Ensino M´edio, nele apresen-

tamos os Quat´ernios de Hamilton e mostramos que este anel ´e isomorfo a um subanel

do anel de matrizes de ordem 2 com coeﬁcientes complexos, que ´e a base do C´odigo de

Alamouti apresentado no ﬁnal do cap´ıtulo. Apesar de alguns dos conceitos apresentados

neste cap´ıtulo n˜ao fazer parte do que ´e proposto pela base curricular do Ensino M´edio, o

professor pode apresentar os quat´ernios apenas na sua representa¸c˜ao matricial e explorar

as propriedades herdadas dos quat´ernios simplesmente como propriedades das matrizes.

Por ﬁm, no Cap´ıtulo 5, apresentamos uma sequˆencia did´atica que o professor pode

aplicar para alunos do terceiro ano do Ensino M´edio e/ou fazer uma adapta¸c˜ao para

aplicar nas demais turmas, mostrando o potencial da Matem´atica na vida contemporˆanea.

Nesta sequˆencia exploramos apenas os conte´udos dos dois cap´ıtulos iniciais.

2

Cap´ıtulo 1

C´odigos Corretores de Erros

Imagine que vocˆe seja professor de uma turma de 6o ano e esteja tentando explicar algum

conte´udo para os alunos, mas, um grupo de trˆes ou quatro crian¸cas est˜ao conversando

baixinho no canto da sala e acabe tirando um pouco da aten¸c˜ao dos colegas. Nessa

situa¸c˜ao todos n´os professores gostar´ıamos que por meio de alguma m´agica fosse poss´ıvel

retirar o som da conversa de modo que apenas a nossa voz chegasse at´e os ouvidos dos

alunos. Poder´ıamos imaginar que retirar os alunos da sala resolveria o problema e ter´ıamos

o caminho livre para o som da nossa fala. No entanto, mesmo tomando esta atitude,

provavelmente chegaria ru´ıdos dos corredores, da sala vizinha, dos carros na rua, dentre

v´arias outras fontes de ru´ıdos. De maneira semelhante, quando queremos enviar uma

mensagem, seja por sinal anal´ogico ou por sinal digital, existem interferˆencias causadas

pelos aparelhos usados na transmiss˜ao, pelo meio f´ısico utilizado ou por outras fontes, de

modo que ´e imposs´ıvel que uma mensagem seja enviada e recebida sem algum tipo de

problema causado por algum ru´ıdo.

Os ru´ıdos s˜ao causados por fontes naturais, como por exemplo o sol, e tamb´em por fon-

tes n˜ao naturais, como a turbina de um avi˜ao, o uso de um aparelho de micro-ondas, e at´e

mesmo pelos pr´oprios aparelhos eletrˆonicos utilizados na transmiss˜ao e recep¸c˜ao dos dados.

Ao tentar sintonizar um televisor anal´ogico ou o r´adio de um carro em uma determinada

frequˆencia, ´e poss´ıvel perceber o ru´ıdo chegando at´e o receptor dos aparelhos. Os peque-

nos chuviscos na TV ou o chiado no r´adio, representam a capta¸c˜ao de “pequenas” ondas

eletromagn´eticas que muitas vezes n˜ao faziam parte do sinal que foi enviado. Diferente-

mente do que acontece em sala de aula em muitos dos casos conseguimos fazer com que

apenas o sinal enviado chegue at´e os nossos olhos ou ouvidos. Muitas vezes este problema

´e resolvido porque o sinal enviado ´e mais forte que o ru´ıdo, de modo que podemos corrigir

os erros. O bom desempenho dos aparelhos de corre¸c˜ao dos sinais recebidos depende da

cria¸c˜ao de algoritmos e estes dependem da existˆencia de bons c´odigos corretores de erros.

Um dos exemplos mais simples e corriqueiro ´e o c´odigo de barras. Muitas vezes em um su-

permercado ao aproximar o c´odigo de barras de um leitor ´optico o aparelho emite um som

3

informando algum tipo de erro e automaticamente aproximamos o produto novamente. O

mesmo acontece quando por algum motivo estamos preenchendo um formul´ario digital e

acabamos informando um d´ıgito do nosso CPF errado. Seria um incomodo ter que pagar

mais caro por um produto ou usar um CPF diferente em uma compra pela internet. Esse

tipo de situa¸c˜ao n˜ao ocorre devido ao acr´escimo de redundˆancia no c´odigo de barras e

tamb´em no CPF, neste caso a redundˆancia ´e chamada de d´ıgito veriﬁcador. Um c´odigo

corretor de erros, em poucas palavras e de maneira simples, nada mais ´e que uma ma-

neira organizada de acrescentar redundˆancias a cada informa¸c˜ao que queremos transmitir

e/ou armazenar, de modo que seja poss´ıvel utilizar os dados adicionais para recuperar a

informa¸c˜ao, detectar e corrigir os erros quando poss´ıvel. Assim como no nosso sistema de

escrita, os c´odigos corretores de erros s˜ao formados por um alfabeto, por palavras e por

regras de composi¸c˜ao das palavras. Normalmente o alfabeto ´e formado pelos elementos de

um corpo ﬁnito e as palavras s˜ao sequˆencias ﬁnitas destes elementos.

De acordo com [14], a Teoria dos C´odigos, assim como muitos outros estudos nos di-

versos campos da Matem´atica, surgiu em meio a um conﬂito entre duas grandes na¸c˜oes, a

Uni˜ao Sovi´etica e o Estados Unidos durante a Guerra Fria. Em 1948 o Matem´atico esta-

dunidense Claude Elwood Shannon publicou o primeiro trabalho sobre c´odigos corretores

de erros e ﬁcou conhecido como o pai da teoria da informa¸c˜ao. Um outro nome ligado

ao inicio da Teoria de C´odigos ´e do Matem´atico estadunidense Richard Wesley Hamming,

que trabalhava com um grande computador e tinha seu trabalho perdido sempre que a

m´aquina cometia algum tipo de erro durante o armazeno de informa¸c˜oes. Motivado pela

frustra¸c˜ao de perder todo seu trabalho sempre que ocorria um erro desse tipo, Hamming

desenvolveu um dos primeiros c´odigos corretores de erros da hist´oria e publicou um tra-

balho em 1950 com conceitos fundamentais como m´etrica, redundˆancia, equivalˆencia de

c´odigos e c´odigos sistem´aticos. Neste trabalho veremos este c´odigo com mais detalhes. A

partir da d´ecada de 70 a Teoria de C´odigos passou a ser de interesse de v´arios engenheiros

que estavam envolvidos na corrida espacial e surgiram v´arios outros c´odigos.

1.1 C´odigos Corretores de Erros

No trabalho publicado em 1948, Shannon deﬁniu a unidade de medida de informa¸c˜ao, que

chamou de bit (binary digits) e um sistema de comunica¸c˜ao, formado basicamente por

cinco componentes: uma fonte de informa¸c˜ao, um transmissor, um canal, um receptor e

um destino, como apresentado no esquema da Figura 1.1. O c´odigo fonte, ou simplesmente

a fonte, produz a mensagem a ser transmitida e envia para o transmissor que transforma a

mensagem em um sinal pass´ıvel de ser transmitido pelo canal, que ´e o meio utilizado para

transmitir o sinal do transmissor at´e o receptor que decodiﬁca o sinal recebido equivalente

a mensagem enviada pelo transmissor, e por ﬁm a informa¸c˜ao ´e visualizada pela pessoa

4

ou equipamento no destino ﬁnal.

Figura 1.1: Esquema do sistema de transmiss˜ao.

Um exemplo simples de c´odigo corretor de erros ´e o nosso idioma. Considerando o alfa-

beto F formado por 23 letras mais o espa¸co em branco, temos uma total de 24 elementos.

A maior palavra do nosso alfabeto ´e pneumoultramicroscopicossilicovulcanoconi´otico, que

possui 46 letras, assim, podemos completar as demais palavras com espa¸cos em branco,

de modo que todas elas tenham exatamente 46 elementos. Neste caso o nosso c´odigo
C ´e um subconjunto de F 46, ou seja, ´e um subconjunto do conjunto formado por todas

as sequˆencias com 46 elementos do alfabeto F . Este c´odigo n˜ao ´e muito eﬁciente por

ter palavras muito pr´oximas umas das outras, por exemplo, as palavras BALA e MALA

diferem de apenas um elemento. Assim o transmissor pode enviar a palavra BALA e,

devido a interferˆencia causada por algum ru´ıdo, chegar ao destino a palavra MALA, como

representado na Figura 1.2. Como as duas palavras pertencem ao c´odigo o receptor n˜ao

identiﬁcar´a o erro.

Figura 1.2: Palavra recebida com erro.

Existe tamb´em a possibilidade de ser enviada a palavra BALA e por algum motivo

o receptor detectar um sinal equivalente a palavra QALA. Como esta palavra n˜ao existe

em nosso idioma, o receptor saber´a que a palavra est´a errada. Mas existem v´arias outras

palavras que est˜ao pr´oxima desta, por exemplo BALA, FALA, MALA e TALA, assim o

5

receptor n˜ao saber´a qual foi a palavra enviada e n˜ao ser´a poss´ıvel corrigir o erro. Este tipo

de impossibilidade ´e causada devido a distˆancia entre as palavras e a falta de informa¸c˜oes

adicionais. Veja o esquema da Figura 1.2.

Figura 1.3: Erro sem corre¸c˜ao.

Para resolver o problema das m´ultiplas substitui¸c˜oes para palavra QALA recebida,

poder´ıamos ter acrescentado algum tipo de redundˆancia no sinal enviado, por exemplo,

ter enviado o sinal da palavra CARAMELO junto com o sinal da palavra BALA, desta

maneira, como mostra o esquema da Figura 1.4, o receptor iria detectar o sinal das pa-

lavras QALA e CARAMELO. Como as demais palavras poss´ıveis para a corre¸c˜ao n˜ao

tem nenhum tipo de rela¸c˜ao com a palavra CARAMELO, o receptor iria decidir corre-

tamente por enviar a palavra BALA para o destino ﬁnal. Mas note que poder´ıamos ter

escolhido a palavra DOCE como redundˆancia, aumentando assim apenas quatro elementos

na sequˆencia da palavra BALA. Quanto maior o comprimento das palavras, maior o custo

computacional para enviar e receber as mesmas, por isso devemos nos preocupar em como

acrescentar redundˆancia nas palavras mantendo o comprimento razoavelmente pequeno.

Figura 1.4: Acr´escimo de redundˆancia e corre¸c˜ao do erro.

Um outro exemplo cl´assico ´e o c´odigo fonte F 2

2 = {(0, 0), (0, 1), (1, 0), (11)} de um robˆo
que se move sobre um tabuleiro quadriculado de modo que a cada comando dado o robˆo

se desloca de uma casa para a casa vizinha. Por simplicidade vamos representar o par

6

ordenado (a, b) simplesmente por ab, aqui cada palavra ab representa um comando, como

descrito abaixo:

Leste −→ 00

Oeste −→ 01

Norte −→ 10

Sul −→ 11

Neste caso n˜ao temos um bom c´odigo, pois ao enviar a palavra 11 o robˆo poderia

receber a palavra 10 e n˜ao perceber que foi cometido um erro, como no caso das palavras

BALA e MALA. Precisamos ent˜ao acrescentar redundˆancias a cada palavra deste c´odigo

de maneira organizada para que seja poss´ıvel identiﬁcar e corrigir erros. Ao fazer esse

acr´escimo criamos uma novo c´odigo conhecido como c´odigo do canal. Podemos ent˜ao,
conforme Exemplo 2.32, fazer a seguinte modiﬁca¸c˜ao no c´odigo F 2
2 :

00 −→ 00000

01 −→ 01011

10 −→ 10110

11 −→ 11101

Neste caso os dois primeiros elementos s˜ao idˆenticos ao que j´a t´ınhamos no c´odigo F 2
2
e os ´ultimos s˜ao redundˆancias. Assim, o c´odigo do canal ´e {00000, 01011, 10110, 11101}.

Figura 1.5: Transmiss˜ao do comando Leste com corre¸c˜ao.

Com esse novo c´odigo ﬁca mais f´acil de corrigir poss´ıveis erros. Por exemplo, suponha

que o comando Leste deva ser enviado para o robˆo, primeiramente o codiﬁcador da fonte

gera a palavra 00 que ser´a transformada na palavra 00000 pelo codiﬁcador do canal e

em seguida enviada. Assim, o decodiﬁcador do canal receber´a um palavra que pode ser a

palavra correta ou uma palavra com erro, vamos supor que o decodiﬁcador receba a palavra

00100. Ao comparar esta palavra com as demais palavras do c´odigo, o decodiﬁcador

perceber´a que a mesma n˜ao pertence ao c´odigo do canal, logo, concluir que ocorreu algum

tipo de erro na transmiss˜ao e analisar se ´e poss´ıvel fazer a corre¸c˜ao. Procurando pelas

palavras mais pr´oximas, em rela¸c˜ao a diferen¸ca entre os elementos de mesma posi¸c˜ao, o

decodiﬁcador chegar´a a conclus˜ao de que a palavra enviado foi 00000 e desta maneira o

7

robˆo receber´a corretamente o comando Leste, como representado na Figura 1.1.

1.2 M´etrica de Hamming

Dado um alfabeto F , isto ´e, um conjunto com ﬁnitos elementos, denotamos o n´umero de

elementos do conjunto F por |F |. Em muitos dos casos o conjunto F ´e um corpo. Um
c´odigo corretor de erros ´e qualquer subconjunto pr´oprio de F n, ou seja, ´e um conjunto

formado por sequˆencia com exatamente n termos, todos pertencentes ao alfabeto F .

Na se¸c˜ao anterior falamos em distˆancia entre duas palavras, para formalizar este con-

ceito vamos deﬁnir a distˆancia de Hamming entre dois elementos do conjunto F n.

Deﬁni¸c˜ao 1.1. Dados dois elementos quaisquer u, v ∈ F n, a distˆancia de Hamming entre

u = (u1, u2, ...ui, ..., un) e v = (v1, v2, ..., vi, ..., vn) ´e deﬁnida como

d(u, v) = |{i; ui (cid:54)= vi, 1 ≤ i ≤ n}| .

Exemplo 1.2. No c´odigo {00000, 01011, 10110, 11101} ⊂ {0, 1}5, temos que

d(00000, 01011) = 3,

d(01011, 10110) = 4,

d(00000, 10110) = 3,

d(01011, 11101) = 3,

d(00000, 11101) = 4,

d(10110, 11101) = 3.

A distˆancia de Hamming satisfaz as trˆes propriedades de m´etrica, como veremos na

proposi¸c˜ao a seguir, por esse motivo a distˆancia entre duas palavras como deﬁnida acima,

tamb´em ´e conhecida como m´etrica de Hamming.

Proposi¸c˜ao 1.3. Dados u, v, w ∈ F n, temos que

i) Positividade: d(u, v) (cid:62) 0, valendo a igualde se, e somente se, u = v;

ii) Simetria: d(u, v) = d(v, u);

iii) Desigualdade triangular: d(u, w) (cid:54) d(u, v) + d(v, w)

Demonstra¸c˜ao. O item i) ´e claro, pois o n´umero de elementos de um conjunto ´e n˜ao

negativo. O item ii) segue do fato de que ui (cid:54)= vi se, e somente se, vi (cid:54)= ui.

Para demonstrar o item iii), vamos analisar a contribui¸c˜ao da i-´esima coordenada

para d(u, w) e para a soma d(u, v) + d(v, w). Observe que se ui (cid:54)= wi, ent˜ao a contribui¸c˜ao
desta coordenada para d(u, w) ´e 1 e para d(u, v) + d(v, w) ´e 1 ou 2, pois n˜ao podemos

ter ui = vi = wi. No caso em que ui = wi a contribui¸c˜ao para d(u, w) ´e 0 e para
d(u, v) + d(v, w) pode ser 0 ou 2, pois, ou ui = wi = vi ou vi (cid:54)= ui e vi (cid:54)= wi. Portanto,
a contribui¸c˜ao da i-´esima coordenada para d(u, w) ´e menor ou igual a contribui¸c˜ao para

8

d(u, v) + d(v, w). Como essas distˆancias podem ser obtidos somando as contribui¸c˜oes de
cada coordenada, chegamos a conclus˜ao que d(u, w) (cid:54) d(u, v) + d(v, w).

Muitos dos m´etodos de corre¸c˜ao de erros s˜ao baseados na distˆancia de Hamming entre

duas palavras. Um dos aspectos que tornam estes m´etodos mais eﬁcientes ´e a quantidade

de palavras pr´oximas da palavra enviada e/ou armazenada. Vamos ent˜ao deﬁnir disco e
esfera no conjunto F n para formalizar a ideia de pr´oximo e ver uma maneira de calcular

a quantidade de elementos em cada um desses conjuntos.

Deﬁni¸c˜ao 1.4. Sejam v um elemento de F n e r > 0 um n´umero natural. Deﬁnimos o

disco de raio r e centro v, como sendo o conjunto:

D(v, r) = {u ∈ F n | d(u, v) ≤ r},

e a esfera de raio r e centro v como sendo o conjunto:

S(v, r) = {u ∈ F n | d(u, v) = r}.

Proposi¸c˜ao 1.5. Para todo v ∈ F n e todo n´umero natural r > 0, temos que

|D(v, r)| =

(cid:19)

(q − 1)i,

r
(cid:88)

i=0

(cid:18)n
i

onde n ´e o comprimento das palavras e q ´e a quantidade de elementos do conjunto F .

Demonstra¸c˜ao. Inicialmente note que |D(v, r)| = (cid:80)r
i=0 |S(v, i)|. Vamos ent˜ao calcular
quantos elementos h´a em cada um dos conjuntos S(v, i). Observe que uma palavra u

pertence ao conjunto S(v, i) se, e somente se, d(u, v) = i, ou seja, se, e somente se, u
(cid:1) maneiras
e v tem exatamente i coordenadas diferentes. Dada uma palavra v, temos (cid:0)n
i
de escolher as i entradas de u que ser˜ao diferentes das respectivas entradas de v e para

cada uma das i coordenadas diferentes podemos escolher qualquer um dos elemento de F

exceto o elemento da i-´esima coordenada de v, portanto, para cada coordenada, temos q−1
possibilidades. Assim, o n´umero de elementos do conjunto S(v, i) ´e dado por (cid:0)n
(cid:1)(q − 1)i,
i
de onde conclu´ımos que |D(v, r)| = (cid:80)r

(cid:1)(q − 1)i.

(cid:0)n
i

i=0

Exemplo 1.6. Considerando o conjunto F 4 = {0, 1}4, temos que

S(0000, 3) = {1011, 0111, 1110, 1101},

S(0000, 2) = {1100, 0011, 0101, 0110, 1001, 1010},

S(0000, 1) = {1000, 0100, 0010, 0001},

S(0000, 0) = {0000}.

9

Logo, |D(v, 3)| = 15.

E, por outro lado, temos que

|D(v, 3)| =

3
(cid:88)

i=0

(cid:18)4
i

(cid:19)

(2 − 1)i =

(cid:19)

(cid:18)4
0

· 10 +

(cid:19)

(cid:18)4
1

· 11 +

(cid:19)

(cid:18)4
2

· 12 +

(cid:19)

(cid:18)4
3

· 13 = 1 + 4 + 6 + 4 = 15.

Um outro aspecto que pode tornar o processo de corre¸c˜ao mais eﬁciente ´e a distˆancia

m´ınima do c´odigo. Esta caracter´ıstica est´a intimamente ligada com a quantidade de erros

que ´e poss´ıvel corrigir. Por exemplo, no c´odigo do Exemplo 1.2, temos que a distˆancia

m´ınima ´e 3 e como veremos mais na frente, neste caso ´e poss´ıvel corrigir no m´aximo um

erro.

Deﬁni¸c˜ao 1.7. Seja C um c´odigo, a distˆancia min´ıma d de C ´e deﬁnida por

d = min{d(u, v) | u, v ∈ C, com u (cid:54)= v}.

Observe que no Exemplo 1.2 calculamos a distˆancia entre todas as palavras diferentes,
(cid:1) = 6 opera¸c˜oes. Assim, pode-se imaginar que para todo c´odigo
ﬁzemos um total de (cid:0)4
2
(cid:1) c´alculos para determinar a distˆancia m´ınima d. Mas, como
C, ´e necess´ario realizar (cid:0)|C|
2
veremos mais adiante, no caso de c´odigos lineares a quantidade de opera¸c˜oes ´e certamente

menor.

Deﬁni¸c˜ao 1.8. Dado um c´odigo C com distˆancia m´ınima d deﬁnimos a cota de corre¸c˜ao

t como sendo o n´umero natural

t =

(cid:20) d − 1
2

(cid:21)

,

onde [k] representa a parte inteira de um elemento k.

Proposi¸c˜ao 1.9. Seja C um c´odigo com distˆancia m´ınima d. Para quaisquer duas palavras
distintas c, c(cid:48) ∈ C, temos que

D(c, t) ∩ D(c(cid:48), t) = ∅.

Demonstra¸c˜ao. Suponha por contradi¸c˜ao que exista uma palavra v ∈ D(c, t) ∩ D(c(cid:48), t).
Sendo assim, temos d(c, v) ≤ t e d(c(cid:48), v) ≤ t. Mas note que pela desigualdade triangular

temos que

d(c, c(cid:48)) ≤ d(c, v) + d(v, c(cid:48)) ≤ t + t = 2t = d − 1 < d.

Um absurdo, pois a distˆancia m´ınima do c´odigo C ´e d. Portanto, D(c, t)∩D(c(cid:48), t) = ∅.

A proposi¸c˜ao a seguir fornece dados num´ericos relacionados a capacidade de corre¸c˜ao

de um c´odigo corretor de erros.

Proposi¸c˜ao 1.10. Seja C um c´odigo com distˆancia m´ınima d. Ent˜ao C pode corrigir no

m´aximo t =

(cid:21)

(cid:20) d − 1
2

erros e detectar d − 1 erros.

10

Demonstra¸c˜ao. Suponha que seja enviada uma palavra c e que tenha ocorrido no m´ınimo

um e no m´aximo d − 1 erros na transmiss˜ao, assim, chegar´a at´e o receptor uma palavra

r tal que d(c, r) ≤ d − 1 e portanto o decodiﬁcador saber´a que a palavra r n˜ao pertence

ao c´odigo C e concluir´a que a palavra cont´em erros. Mas veja que, caso tenha ocorrido
mais que t erros, n˜ao ´e poss´ıvel corrigir, pois pode existir uma outra palavra c(cid:48) tal que
d(c(cid:48), r) ≤ d − 1.

Suponha agora que a palavra r recebida contenha no m´aximo t erros. Neste caso temos
que d(c, r) ≤ t, assim r pertence ao disco D(c, t). E dada qualquer outra palavra c(cid:48) ∈ C,
temos que r /∈ D(c(cid:48), t). Portanto, o decodiﬁcador concluir´a que a palavra enviada foi c,

pois ´e a palavra mais pr´oxima de r.

Veja que de acordo esta proposi¸c˜ao, para maximizar a capacidade de corre¸c˜ao de

um c´odigo C precisamos escolher as palavras de modo que a distˆancia m´ınima d seja

maximizada, e desta maneira aumentar a capacidade de corre¸c˜ao do c´odigo. Portanto,

´e de fundamental importˆancia determinar a distˆancia m´ınima de um c´odigo ou ter pelo

menos uma estimativa para a mesma.

Uma outra maneira de melhorar a capacidade de corre¸c˜ao e detec¸c˜ao de erros em um
c´odigo C ⊂ F n ´e escolher as palavras de modo que para toda palavra r ∈ F n, exista uma

palavra c ∈ C, tal que r ∈ D(c, t), neste caso, o c´odigo ´e dito perfeito, conforme Deﬁni¸c˜ao

1.11. Desta maneira, sempre que receber uma palavra r com erros, o decodiﬁcador ser´a

capaz de corrigir o erro. No caso em que a palavra r cont´em mais de t erros, a corre¸c˜ao

n˜ao estar´a correta. No entanto, n˜ao ´e simples fazer a escolha das palavras, pois existe uma

rela¸c˜ao entre a quantidade de palavras de um c´odigo, o comprimento destas palavras e a

distˆancia m´ınimo. Um dos problemas fundamentais da Teoria dos C´odigos ´e estudar esta

rela¸c˜ao. Neste trabalho n˜ao entraremos em detalhes em rela¸c˜ao a esta dependˆencia.
(cid:20) d − 1
2

Deﬁni¸c˜ao 1.11. Seja C ⊂ F n um c´odigo com distˆancia m´ınima d e seja t =

(cid:21)

. O

c´odigo C ´e dito perfeito se

D(c, t) = F n.

(cid:91)

c ∈ C

Exemplo 1.12. Considere o c´odigo C = {000, 111} ⊂ {0, 1}3. Veja que neste c´odigo

temos distˆancia m´ınima d = 3, capacidade de corre¸c˜ao t =

(cid:21)

(cid:20) 3 − 1
2

= 1,

D(000, 1) = {000, 001, 010, 100} e D(111, 1) = {011, 101, 110, 111}.

E note ainda que,

D(000, 1) ∪ D(111, 1) = {0, 1}3.

Portanto, o c´odigo C ´e perfeito.

11

A partir da Proposi¸c˜ao 1.10 podemos tra¸car uma estrat´egia de corre¸c˜ao de erros em um
c´odigo utilizando apenas a m´etrica de Hamming. Considere o c´odigo C ⊂ F n com distˆancia

(cid:21)

(cid:20) d − 1
2

m´ınima d, assim, a quantidade de erros que o c´odigo pode corrigir ´e t =

. Suponha

que foi transmitida uma palavra c ∈ C e que chegou at´e o receptor a palavra r ∈ F n, temos

ent˜ao as seguintes possibilidades:

i) Durante a transmiss˜ao foram cometidos uma quantidade de erros menor ou igual a

t, neste caso podemos concluir que a palavra enviada foi c, pois ´e a ´unica que satisfaz a

condi¸c˜ao r ∈ D(c, t).

ii) Durante a transmiss˜ao foram cometidos uma quantidade de erros maior que t, neste

caso r /∈ D(c, t), assim teremos dois casos poss´ıveis:

1. r ∈ D(c(cid:48), t) com c (cid:54)= c(cid:48), neste caso concluiremos de forma incorreta que a palavra

enviada foi c(cid:48);

2. r /∈ D(c(cid:48), t) para toda palavra c(cid:48) ∈ C, assim n˜ao poderemos corrigir o erro.

Observe que a eﬁciˆencia deste m´etodo de corre¸c˜ao de erros depende muito do canal

que ser´a utilizado para enviar o sinal e da distˆancia m´ınima entre as palavras do c´odigo.

Caso a probabilidade de erros seja pequena, podemos receber palavras com no m´aximo t

erros, assim seremos capazes de fazer a corre¸c˜ao do erro sem incertezas, no entanto, caso

a quantidade de erros seja maior que t podemos corrigir a palavra de forma incorreta.

Portanto, nunca teremos certeza que n˜ao houve erro no processo de corre¸c˜ao, o m´aximo

que teremos ´e uma probabilidade de acerto.

1.3 Equivalˆencia de C´odigos

No exemplo do c´odigo do robˆo, para possibilitar a corre¸c˜ao de erros, utilizamos o c´odigo do

Exemplo 1.2 que tem distˆancia m´ınima d = 3 e portanto ´e capaz de corrigir no m´aximo um

erro e detectar at´e dois. Mas, poder´ıamos ter escolhido o c´odigo {00000, 11010, 01101, 10111}

que tamb´em tem distˆancia m´ınima d = 3 e al´em disso, fazendo a correspondˆencia

00000 ←→ 00000 01011 ←→ 11010

10110 ←→ 01101

11101 ←→ 1011,

temos que a distˆancia entre duas palavras quaisquer de um c´odigo ´e equivalente a distˆancia

entre as duas palavras correspondentes do outro. Por exemplo d(01011, 11101) = 3 e

d(11010, 10111) = 3. Assim, em termos de codiﬁca¸c˜ao e corre¸c˜ao de erros, os dois c´odigos

s˜ao equivalentes.

Deﬁni¸c˜ao 1.13. Sejam F um alfabeto e n um n´umero natural. Diremos que uma fun¸c˜ao
H : F n −→ F n ´e uma isometria de F n se ela preserva distˆancia de Hammning, ou seja,

12

se

d(H(u), H(v)) = d(u, v), ∀ u, v ∈ F n.

Usaremos o conceito de isometria para deﬁnir equivalˆencia entre dois c´odigos contidos

em um mesmo espa¸co F n. Vejamos primeiro algumas propriedades de uma isometria.

Proposi¸c˜ao 1.14. Toda isometria de F n ´e uma bije¸c˜ao de F n.

Demonstra¸c˜ao. Dados u, v ∈ F n, com u (cid:54)= v, suponha por contradi¸c˜ao que H(u) = H(v) e

que H seja uma isometria. Assim, temos que d(H(u), H(v)) = 0, pois H(u) = H(v). Por

outro lado, como H ´e uma isometria, temos d(u, v) = d(H(u), H(v)) = 0, logo d(u, v) = 0,

de onde segue que u = v. Um absurdo. Portanto, H(u) (cid:54)= H(v). Mostrando assim que

H ´e injetora. Como toda fun¸c˜ao injetora de um conjunto ﬁnito nele mesmo ´e tamb´em
sobrejetora, conclu´ımos que H ´e uma bije¸c˜ao de F n.

Proposi¸c˜ao 1.15. Dado um alfabeto F , temos que
i) A fun¸c˜ao identidade de F n ´e uma isometria;
ii) Se H ´e uma isometria de F n, ent˜ao H −1 ´e uma isometria de F n;
iii) Se H e G s˜ao isometrias de F n, ent˜ao H ◦ G ´e uma isometria de F n.

Demonstra¸c˜ao. Sejam F um alfabeto e u, v ∈ F n duas palavras quaisquer.

i) Seja H : F n −→ F n, temos ent˜ao que H(u) = u e H(v) = v, logo d(H(u), H(v)) =

d(u, v). Portanto, H ´e uma isometria;

ii) Seja H : F n −→ F n uma isometria, segue da proposi¸c˜ao anterior que existe H −1.

Al´em disso, temos que

d(H −1(u), H −1(v)) = d(H(H −1(u)), H(H −1(v))) = d(u, v).

Portanto, H −1 ´e uma isometria de F n.

iii) Sejam H e G isometrias de F n. Temos ent˜ao que,

d(H(G(u)), H(G(v))) = d(G(u), G(v)) = d(u, v),

mostrando assim que H ◦ G ´e uma isometria.

Deﬁni¸c˜ao 1.16. Sejam C e C(cid:48) dois c´odigos em F n, diremos que C(cid:48) ´e equivalente a C se
existir uma isometria H de F n tal que H(C) = C(cid:48).

Deﬁni¸c˜ao 1.17. Seja In = {1, 2, 3, · · · , n} o conjunto dos n primeiros n´umeros naturais.
Qualquer bije¸c˜ao π do conjunto In nele mesmo ´e chamada de permuta¸c˜ao.

Exemplo 1.18. Um exemplo simples ´e a isometria

H :

{0, 1}5

−→

{0, 1}5

(v1, v2, v3, v4, v5) −→ (v5, v4, v3, v2, v1),

13

aplicada ao c´odigo do robˆo C = {00000, 01011, 10110, 11101} ⊂ {0, 1}5. Neste caso,
obtemos o c´odigo C(cid:48) = {00000, 11010, 01101, 10111} equivalente ao c´odigo C.

Em geral, uma aplica¸c˜ao

Tπ

:

F n

−→

F n

(v1, v2, · · · , vn) −→ (vπ(1), vπ(2), · · · , vπ(n)),

´e uma isometria de F n.

De fato, considerando as palavras u = (u1, u2, · · · , un), v = (v1, v2, · · · , vn) ∈ F n, para
todo 1 ≤ i ≤ n, caso a coordenada vi seja diferente da coordenada ui a coordenada vπ(i)
ser´a diferente da coordenada uπ(i), assim, caso a i-´esima coordenada tenha contribui¸c˜ao
igual a 1 para d(u, v), a π(i)-´esima coordenada ter´a tamb´em contribui¸c˜ao igual a 1 para

d(Tπ(u), Tπ(v)).

Segue diretamente da Proposi¸c˜ao 1.15 que a equivalˆencia de c´odigos ´e uma rela¸c˜ao de

equivalˆencia, isto ´e, satisfaz as seguintes condi¸c˜oes:

i) Reﬂexiva: todo c´odigo ´e equivalente a si pr´oprio;
ii) Sim´etrica: se C(cid:48) ´e equivalente a C ent˜ao C ´e equivalente a C(cid:48);
iii) Transitiva: se C(cid:48)(cid:48) ´e equivalente a C(cid:48) e se C(cid:48) ´e equivalente a C, ent˜ao C(cid:48)(cid:48) ´e equivalente

a C.

14

Cap´ıtulo 2

C´odigos Lineares

Nesta se¸c˜ao apresentaremos a classe dos c´odigos lineares. Neste caso, o alfabeto F ´e

um conjunto de elementos satisfazendo as propriedades de um corpo. E o c´odigo ´e um

subespa¸co vetorial. Utilizamos como referˆencias [15], [11], [4], [7], [9] e [8].

2.1 An´eis, Corpos e Espa¸cos Vetoriais

Deﬁni¸c˜ao 2.1. Uma estrutura matem´atica constitu´ıda por um conjunto A n˜ao vazio e

um par de opera¸c˜oes,

+ : A × A −→ A

(a, b)

(cid:55)−→ a + b.

e

·

: A × A −→ A

(a, b)

(cid:55)−→ a · b,

que chamaremos, respectivamente, de adi¸c˜ao e multiplica¸c˜ao, ´e chamado anel comutativo

com unidade se satisfaz as seguintes propriedades:

A1. Associatividade da adi¸c˜ao:

∀ a, b, c ∈ A,

(a + b) + c = a + (b + c).

A2. Comutatividade da adi¸c˜ao:

∀ a, b ∈ A,

a + b = b + a.

A3. Existˆencia de elemento neutro (chamado zero) para adi¸c˜ao:

∃ 0A ∈ A,

a + 0A = 0A + a = a, ∀ a ∈ A.

A4. Existˆencia de elemento inverso (chamado sim´etrico aditivo) para adi¸c˜ao:

∀ a ∈ A, ∃ − a ∈ A,

a + (−a) = −a + a = 0A.

15

M1. Associatividade da multiplica¸c˜ao:

∀ a, b, c ∈ A,

(a · b) · c = a · (b · c).

M2. Comutatividade da multiplica¸c˜ao:

∀ a, b ∈ A,

a · b = b · a.

M3. Existˆencia de elemento neutro (chamado unidade) para multiplica¸c˜ao:

∃ 1A ∈ A,

a · 1A = 1A · a = a, ∀ a ∈ A.

AM. Distributividade da multiplica¸c˜ao com rela¸c˜ao `a adi¸c˜ao:

∀ a, b, c ∈ A,

a · (b + c) = a · b + a · c e (a + b) · c = a · c + b · c.

Chamamos simplesmente de anel a estrutura matem´atica que n˜ao goza das propriedade

M3 e M2, mas satisfaz todas as outras propriedades da adi¸c˜ao e multiplica¸c˜ao de um anel
comutativo com unidade. O anel ´e denotado por (A, +, ·), ou simplesmente por A quando

a deﬁni¸c˜ao das opera¸c˜oes estiver clara. Os elementos a + b e a · b s˜ao chamados, respecti-

vamente, de soma e produto de a e b. Muitas vezes omitimos o s´ımbolo da multiplica¸c˜ao

e escrevemos simplesmente ab para representar o produto de a e b.

Deﬁni¸c˜ao 2.2. Sejam (A, +, ·) um anel e L um subconjunto n˜ao vazio de A. Diz-se que

L ´e um subanel de A se:

i) O subconjunto L ´e fechado para as opera¸c˜oes de adi¸c˜ao e multiplica¸c˜ao do anel A;

ii (L, +, ·) tamb´em ´e um anel.

Deﬁni¸c˜ao 2.3. Um anel A ´e chamado de dom´ınio de integridade, se possuir a seguinte

propriedade:

∀ a, b ∈ A,

a (cid:54)= 0 e b (cid:54)= 0 ⇒ a · b (cid:54)= 0.

Exemplo 2.4. Os conjuntos dos n´umeros inteiros Z, dos n´umeros racionais Q, dos
n´umeros reais R e dos n´umeros complexos C, com as opera¸c˜oes de adi¸c˜ao e multiplica¸c˜ao,

s˜ao os exemplos de dom´ınio de integridade mais conhecidos. J´a o conjunto das matrizes

com as opera¸c˜oes usuais, apesar de ser um anel, n˜ao ´e comutativo e n˜ao ´e um dom´ınio de

integridade.

Deﬁni¸c˜ao 2.5. Um elemento a de um anel A ´e dito invers´ıvel se existir um elemento
b ∈ A, tal que a · b = b · a = 1. Denotamos o elemento b por a−1 e dizemos que a−1 ´e o

inverso de a.

16

Exemplo 2.6. Os ´unicos elementos invers´ıveis do anel Z s˜ao 1 e −1. Neste caso, 1 e −1
s˜ao os inversos deles mesmos. Por outro lado, todos os elementos n˜ao nulos dos an´eis Q e
R possuem inversos.

Deﬁni¸c˜ao 2.7. Um anel comutativo com unidade no qual todo elemento n˜ao nulo ´e

invers´ıvel ´e chamado de corpo.

Deﬁni¸c˜ao 2.8. Sejam (A, +, ·) e (B, ⊕, (cid:12)) dois an´eis. Chamamos de homomorﬁsmo de

A em B a toda aplica¸c˜ao f : A → B tal que, para quaisquer que sejam x, y ∈ A:

f (x + y) = f (x) ⊕ f (y)

e

f (x · y) = f (x) (cid:12) f (y).

Deﬁni¸c˜ao 2.9. Seja f : A → B um homomorﬁsmo do anel A no anel B. Se f for um

bije¸c˜ao, ent˜ao f ser´a chamado de isomorﬁsmo do anel A no anel B. Neste caso dizemos

que os an´eis A e B s˜ao isomorfos.

Na pr´oxima se¸c˜ao apresentaremos os corpos de inteiros m´odulo p, uma classe impor-

tante de corpos no estudo e no desenvolvimento de c´odigos corretores de erros. Vejamos

agora a deﬁni¸c˜ao de espa¸co vetorial.

Deﬁni¸c˜ao 2.10. Uma estrutura matem´atica constitu´ıda por um conjunto V n˜ao vazio,

cujos elementos ser˜ao chamados de vetores, um corpo F e um par de opera¸c˜oes,

+ : V × V −→ V

(u, v)

(cid:55)−→ u + v.

e

·

: F × V −→ V

(α, u)

(cid:55)−→ α · u,

que chamaremos, respectivamente, de adi¸c˜ao e multiplica¸c˜ao por escalar, ´e chamado espa¸co

vetorial sobre o corpo F se satisfaz as seguintes propriedades:

A1. Associatividade da adi¸c˜ao:

∀ u, v, w ∈ V,

(u + v) + w = u + (v + w).

A2. Comutatividade da adi¸c˜ao:

∀ u, v ∈ V,

u + v = v + u.

A3. Existˆencia de elemento neutro (chamado zero) para adi¸c˜ao:

∃ 0V ∈ V,

u + 0V = 0V + u = u, ∀ u ∈ V.

A4. Existˆencia de elemento inverso (chamado sim´etrico aditivo) para adi¸c˜ao:

∀ u ∈ V, ∃ − u ∈ V,

u + (−u) = −u + u = 0V .

17

M1. Associatividade da multiplica¸c˜ao por escalar:

∀ α, β, ∈ F ∀u ∈ V

(αβ) · u = α(β · u).

M2. Identidade multiplicativa:

D1. Distributividade do escalar:

∀u ∈ V,

1F · u = u

∀ u, v, ∈ V, e ∀ α ∈ F,

α · (u + v) = α · u + α · v.

D2. Distributividade do vetor:

∀ u ∈ V, e ∀ α, β ∈ F,

(α + β) · u = α · u + β · u.

O elemento u + v ´e chamado de soma de u e v, e o elemento α · u ´e denominado produto

por escalar de α por u. Representaremos o espa¸co vetorial simplesmente por V quando o

corpo de escalares estiver subentendido.

Exemplo 2.11. Os exemplos mais comuns de espa¸cos vetoriais s˜ao: o corpo R, o plano
R2 e o espa¸co R3. Nos quais a soma u + v ´e obtida somando coordenada a coordenada e

o produto por escolar α · u ´e feito multiplicando α por cada um das coordenadas de u.

Exemplo 2.12. Em geral, dado um corpo F e um natural n ≥ 1, temos que o conjunto

F n = F × F × · · · × F
(cid:125)

(cid:124)

(cid:123)(cid:122)
n vezes

= {(a1, a2, · · · , an); ai ∈ F, ∀ i = 1, 2, · · · , n},

tem uma estrutura de espa¸co vetorial sobre F com as opera¸c˜oes:

(a1, · · · , an) + (b1, · · · , bn) = (a1 + b1, · · · , an + bn), ∀ (a1, · · · , an), (b1, · · · , bn) ∈ F n,

α · (a1, · · · , an) = (αa1, · · · , αan),

∀ α ∈ F e ∀ (a1, · · · , an) ∈ F n.

Uma base de um espa¸co vetorial V ´e um conjunto B ⊂ V ordenado e linearmente

independente (L.I.) que gera V , ou seja, ´e um conjunto B = {v1, v2, · · · , vk} no qual,

vi (cid:54)= α1v1 + α2v2 + · · · + αi−1vi−1 + αi+1vi+1 + · · · + αkvk,

para quaisquer α1, α2, · · · , αi−1, αi+1, · · · , αk ∈ F com i = 1, 2, · · · , k, e al´em disso, para
cada v ∈ V , existem ´unicos β1, β2, · · · , βk ∈ F , tais que,

v = β1v1 + β2v2 + · · · + βkvk,

∀ v ∈ V.

18

Os elementos β1, β2, · · · , βk ∈ F s˜ao as coordenadas do vetor v na base B. Em geral a
base de um espa¸co vetorial n˜ao ´e ´unica, no entanto, todas tˆem a mesmas quantidade de

elementos. O n´umero k ´e a dimens˜ao do espa¸co vetorial V .

Proposi¸c˜ao 2.13. Seja V um espa¸co vetorial de dimens˜ao k e B = {v1, v2, · · · , vk} uma
base para V . Considere o conjunto

B(cid:48) = {µ1vπ(1), µ2vπ(2), · · · , µjvπ(j) + λvj, · · · , µkvπ(k)},

onde π ´e uma permuta¸c˜ao, j ∈ {1, 2, · · · , k} e µ1, µ2, · · · , µk, λ ∈ F , com µ1 ·µ2 ·...·µk (cid:54)= 0.
Ent˜ao, sendo B uma base de V , temos que B(cid:48) tamb´em ´e uma base para o c´odigo V .

Demonstra¸c˜ao. O caso em que λ = 0F temos que , para cada i,

vi (cid:54)= α1v1 + α2v2 + · · · + αi−1vi−1 + αi+1v1+1 + · · · + αkvk,

implica,

µivπ(i) (cid:54)= απ(1)µ1vπ(1) + · · · + απ(i−1)µi−1vπ(i−1) + απ(i+1)µi+1vπ(i+1) + · · · + απ(k)µkvπ(k),

pois,

απ(1)µ1µ−1

i

, · · · , απ(i−1)µi−1µ−1

i

, απ(i+1)µi+1µ−1

i

, · · · , απ(k)µkµ−1

i ∈ F,

e dado que, para cada v ∈ V existem,

β1, β2, · · · , βk ∈ F,

v = β1v1 + β2v2 + · · · + βkvk,

∀ v ∈ V,

1 = βπ(1)µ−1
β(cid:48)

1 , β(cid:48)

2 = βπ(2)µ−1

2 , · · · , β(cid:48)

k = βπ(k)µ−1

k ∈ F,

´unicos, tais que,

existem,

´unicos, tais que,

v = β(cid:48)

1vπ(1) + β(cid:48)

2vπ(2) + · · · + β(cid:48)

kvπ(k),

∀ v ∈ V.

O caso em que λ (cid:54)= 0F , sem perda de generalidade, podemos considerar µ = 1 e π como
sendo fun¸c˜ao identidade, assim

B(cid:48) = {v1, v2, · · · , vi + λvj, · · · , vk}.

Para provar que os vetores de B(cid:48) s˜ao linearmente independentes, suponha por contradi¸c˜ao

19

que existe vr ∈ B(cid:48), tal que

vr = α1v1 + α2v2 + · · · αr−1vr−1 + αr+1vr+1 + · · · + αkvk.

Assim, se vr = vi + λvj temos

vi + λvj = α1v1 + α2v2 + · · · αi−1vi−1 + αi+1vi+1 + · · · + αjvj + · · · + αkvk.

Da´ı,

vi = α1v1 + α2v2 + · · · αi−1vi−1 + αi+1vi+1 + · · · + (αj − λ)vj + · · · + αkvk,

com α1, · · · , αj − λ, · · · , αk ∈ F . Um absurdo.
E se, vr (cid:54)= vi + λvj, temos que

vr = α1v1 + · · · + αi(vi + λvj) + · · · αr−1vr−1 + αr+1vr+1 + · · · + αjvj + · · · + αkvk.

De onde segue que,

vr = α1v1 + · · · + αivi + · · · αr−1vr−1 + αr+1vr+1 + · · · + (αj + λ)vj + · · · + αkvk,

com α1, · · · , αj + λ, · · · , αk ∈ F . Um absurdo.
Portanto, os vetores de B(cid:48) s˜ao linearmente independentes.

Por ﬁm, como B ´e uma base, existem β1, · · · βi · · · , βk ∈ F ´unicos, tais que,

v = β1v1 + β2v2 + · · · + βivi + · · · + βkvk,

∀ v ∈ V.

Assim,

v = β1v1 + β2v2 + · · · + βivi + · · · + βiλvj − βiλvj + · · · + βkvk,

∀ v ∈ V.

Logo, existem ´unicos β1, β2, · · · , βj−1, βj − βiλ, βj+1, · · · , βk ∈ F , tais que

v = β1v1 + · · · + βi(vi + λvj) + · · · + (βj − βiλ)vj + · · · + βkvk,

∀ v ∈ V.

Esta proposi¸c˜ao garante que dada uma base B para uma espa¸co vetorial V , podemos

obter uma outra base B(cid:48) atrav´es de uma sequˆencia de opera¸c˜oes do tipo:

• Permuta¸c˜ao de dois elementos da base;

• Multiplica¸c˜ao de um elemento da base por um escalar n˜ao nulo;

20

• Substitui¸c˜ao de um vetor da base por ele mesmo somado com um m´ultiplo escalar

de outro vetor da base.

Um subespa¸co vetorial de um espa¸co vetorial V ´e um subconjunto de L ⊂ V que, em

rela¸c˜ao as opera¸c˜oes de V , ´e ainda um espa¸co vetorial. Uma maneira pr´atica de veriﬁcar

que o conjunto L ´e um subespa¸co de V ´e veriﬁcando as seguintes propriedades:

1. 0V ∈ L;

2. Se u, v ∈ L ent˜ao u + v ∈ L;

3. Se v ∈ L ent˜ao, para todo α ∈ F , αv ∈ L.

Dois exemplos importantes de subespa¸co s˜ao o n´ucleo e a imagem de uma trans-

forma¸c˜ao linear.

Deﬁni¸c˜ao 2.14. Sejam V e U espa¸cos vetoriais sobre um corpo F . Uma transforma¸c˜ao

linear A : V → U ´e uma correspondˆencia que associa a cada vetor v ∈ V a um vetor

A(v) = A · v = Av ∈ U de modo que seja v´alidas, para quaisquer u, v ∈ V e α ∈ F , as

seguintes propriedades:

A(u + v) = Au + Av

e

A(α · v) = α · Av.

O vetor Av ´e a imagem do vetor v pela transforma¸c˜ao A.

Deﬁni¸c˜ao 2.15. Sejam V e U espa¸cos vetoriais sobre um corpo F e A : V → U uma

transforma¸c˜ao linear.

1. O conjunto Nuc(A) = {v ∈ V | A(v) = 0U } ´e chamado n´ucleo de A.

2. O conjunto Im(A) = {u ∈ U | ∃ v ∈ V com A(v) = u} ´e chamado imagem de A.

Exemplo 2.16. Dada a transforma¸c˜ao linear A : R2 → R, deﬁnida por A(x, y) = y − x,

temos que,

i) Nuc(A) = {(x, y) ∈ R | x = y}, isto ´e, a reta y = x;

ii) Im(A) = R.

Proposi¸c˜ao 2.17. Sejam V e U espa¸cos vetoriais sobre um corpo F e A : V → U

uma transforma¸c˜ao linear. Ent˜ao, Nuc(A) ´e um subespa¸co vetorial de V e Im(A) ´e um

subespa¸co vetorial de U .

Demonstra¸c˜ao. Note inicialmente que 0U +A(0V ) = A(0V ) = A(0V +0V ) = A(0V )+A(0V ),
assim, 0U + A(0V ) = A(0V ) + A(0V ) logo, A(0V ) = 0U . De onde segue que 0V ∈ Nuc(A)
e 0U ∈ Im(A). Al´em disso, dados v, w ∈ Nuc(A) e α ∈ F , temos que A(v + w) =

21

A(v) + A(w) = 0U + 0U = 0U e A(α · v) = α · A(v) = α · 0U = 0U , mostrando assim
que v + w, α · v ∈ Nuc(A). Por ﬁm, observe que dados A(v), A(w) ∈ Im(A) e α ∈ F ,

temos que A(v) + A(w) = A(v + w) ∈ Im(A) e α · A(v) = A(α · v) ∈ Im(A), pois

v +w, α·v ∈ V . Portanto, os subconjuntos Nuc(A) e Im(A) satisfazem as trˆes propriedades

de um subespa¸co vetorial.

2.2 Corpos de Inteiros M´odulo p

Apresentaremos agora o conceito de congruˆencia m´odulo m, introduzida pelo Matem´atico

Carl Friedrich Gauss por volta de 1801. Com a ideia apresentada por Gauss foi poss´ıvel

desenvolver um aritm´etica dos restos da divis˜ao de um n´umero inteiro pelo n´umero ﬁxado

m.

Deﬁni¸c˜ao 2.18. Seja m um n´umero inteiro maior do que 1. Diremos que dois n´umeros

inteiros a e b s˜ao congruentes m´odulo m se quando divididos por m, a e b deixam o mesmo

resto. Neste caso, escrevemos

a ≡ b mod m.

Quando a e b n˜ao s˜ao congruentes m´odulo m, escrevemos

a (cid:54)≡ b mod m.

Exemplo 2.19. :

• 7 ≡ 12 mod 5, pois 7 = 1 · 5 + 2 e 12 = 2 · 5 + 2.

• −4 ≡ 21 mod 5, pois −4 = (−1) · 5 + 1 e 21 = 4 · 5 + 1.

• 35 ≡ −13 mod 6, pois 35 = 5 · 6 + 5 e −13 = (−3) · 6 + 5.

Veremos agora uma proposi¸c˜ao que muitas vezes ´e apresentada como deﬁni¸c˜ao de

congruˆencia m´odulo m.

Proposi¸c˜ao 2.20. Seja m um n´umero inteiro maior do que 1. Temos ent˜ao que,

a ≡ b mod m se, e somente se, m divide b − a.

Demonstra¸c˜ao. Pelo algoritmo da divis˜ao temos que a = q1m + r1 e b = q2m + r2, com
0 ≤ r1, r2 ≤ m − 1. Sem perda de generalidade, vamos supor que r1 ≤ r2. Temos ent˜ao
que,

b − a = (q2 − q1)m + (r2 − r1).

22

Logo, m divide b − a se, e somente se, m divide r2 − r1. Como 0 ≤ r2 − r1 ≤ m − 1, temos
que m divide b − a se, e somente se, r2 − r1 = 0. Portanto, m divide b − a se, e somente
se, r2 = r1.

Exemplo 2.21. :

• 7 ≡ 12 mod 5, pois 12 − 7 = 5 = 1 · 5.

• −4 ≡ 21 mod 5, pois 21 − (−4) = 25 = 5 · 5.

• 35 ≡ −13 mod 6, pois −13 − 35 = −48 = (−8) · 6.

Proposi¸c˜ao 2.22. Para quaisquer a, b, c, d, m ∈ Z, com m > 1 temos:

1. (Reﬂexividade) a ≡ a mod m;

2. (Simetria) se a ≡ b mod m, b ≡ a mod m;

3. (Transitividade) a ≡ b mod m e b ≡ a mod m, ent˜ao a ≡ c mod m;

4. (Compatibilidade com a soma e diferen¸ca) Podemos somar e subtrair membro a

membro

(cid:40)

a ≡ b mod m

c ≡ d mod m

(cid:40)

⇒

a + c ≡ b + d mod m

a − c ≡ b − d mod m

Em particular, a ≡ b mod m, ent˜ao ka ≡ kb mod m para todo k ∈ Z.

5. (Compatibilidade com do produto) Podemos somar e subtrair membro a membro

(cid:40)

a ≡ b mod m

c ≡ d mod m

⇒ a · c ≡ b · d mod m

Em particular, a ≡ b mod m, ent˜ao ak ≡ bk mod m para todo k ∈ N.

6. (Cancelamento) Se mdc(c, m) = 1, ent˜ao

ac ≡ bc mod m ⇔ a ≡ b mod m.

Demonstra¸c˜ao. :

1. Basta observar que m divide a − a = 0;

2. Se a ≡ b mod m, ent˜ao b − a = qm com q inteiro. Da´ı, a − b = (−q)m e, portanto,

b ≡ a mod m;

3. Se a ≡ b mod m e b ≡ c mod m, temos que b − a = q1m e c − b = q2m, com
q1, q2 ∈ Z. Somando membro a membro essas duas ´ultimas igualdades, obtemos
que c − a = (q1 + q2)m. De onde conclu´ımos que a ≡ c mod m;

23

4. Se a ≡ b mod m e c ≡ d mod m, temos que b − a = q1m e d − c = q2m, com
q1, q2 ∈ Z. Somando membro a membro essas duas ´ultimas igualdades, obtemos
que (b + d) − (a + c) = (q1 + q2)m, logo a + c ≡ b + d mod m. De modo an´alogo,
temos a − c ≡ b − d mod m;

5. Se a ≡ b mod m e c ≡ d mod m, temos que b−a = q1m e d−c = q2m, com q1, q2 ∈ Z.
E note que bd−ac = bd−bc+bc−ac = (d−c)b+(b−a)c = q2mb+q1mc = (q2b+q1c)m.
Mostrando assim que ac ≡ bd mod m.

6. Observe que bc − ac = (b − a)c, como mcd(c, m) = 1 temos que, m divide (b − c)c

se, e somente se, m divide (b − c). Portanto, ac ≡ bc mod m se, e somente se,

a ≡ b mod m.

O trˆes primeiros itens da propriedade nos diz que a rela¸c˜ao de congruˆencia m´odulo m ´e

uma rela¸c˜ao de equivalˆencia. As demais mostram que esta rela¸c˜ao tem um comportamento

similar a rela¸c˜ao de igualdade usual.

A proposi¸c˜ao a seguir nos permite dividir os n´umeros inteiros em classes denominadas

de classes de equivalˆencias.

Proposi¸c˜ao 2.23. Todo n´umero inteiro a ´e congruente m´odulo m a um e somente um

dos n´umeros inteiros 0, 1, 2, · · · , m − 2, m − 1.

Demonstra¸c˜ao. De fato, qualquer que seja o n´umero inteiro a, pelo algoritmo da divis˜ao
temos que a = qm + r, com q, r ∈ Z e 0 ≤ r ≤ m − 1. De onde segue que r = b para algum

b ∈ {0, 1, · · · , m − 2, m − 1} . Assim, b − a = b − qm − r = −qm, e portanto, a ≡ b mod m.

Pela unicidade do resto na divis˜ao temos que b ´e ´unico e precisamente igual a r.

Vamos representar cada uma das m classes de equivalˆencia m´odulo m por x, com

x ∈ {0, 1, · · · , m − 2, m − 1}. Ou seja, x = {y ∈ Z | x ≡ y mod m}.

Deﬁnimos o conjunto Fm = {0, 1, · · · , m − 1} como sendo o conjunto das classes de
equivalˆencia m´odulo m. Como na divis˜ao por m o resto da soma e da multiplica¸c˜ao de dois

n´umeros inteiros a e b dependem, respectivamente, apenas da soma ou da multiplica¸c˜ao

dos restos de a e b, podemos deﬁnir uma soma e uma multiplica¸c˜ao em Fm da seguinte
maneira,

a + b = a + b

e

a · b = a · b.

Estas duas opera¸c˜oes est˜ao bem deﬁnidas, isto ´e, n˜ao depende da escolha dos repre-

sentantes. De fato, dados a ≡ c mod m e b ≡ d mod m , pela Proposi¸c˜ao 2.22, temos

que

a + b ≡ c + d mod m,

24

e,

a · b ≡ c · d mod m.

Exemplo 2.24. Dado o conjunto F4 = {0, 1, 2, 3}, temos as seguintes t´abuas de adi¸c˜ao e
multiplica¸c˜ao:

+ 0 1 2 3

0 1 2 3

·

0 1 2 3

0 0 0 0 0

1 2 3 0

e

1 0 1 2 3

2 3 0 1

3 0 1 2

2 0 2 0 2

3 0 3 2 1

0

1

2

3

Observe que os elementos 0 e 1 tˆem, respectivamente, o mesmo comportamento que os

elementos 1 e 0 na aritm´etica dos n´umeros inteiros. Por outro lado, diferente dos n´umeros

inteiros, temos que 2 (cid:54)= 0, no entanto, 2 · 2 = 2 · 2 = 4 = 0. Veja que o mesmo n˜ao ocorre

com o exemplo a seguir.

Exemplo 2.25. Dado o conjunto F5 = {0, 1, 2, 3, 4}, temos as seguintes t´abuas de adi¸c˜ao
e multiplica¸c˜ao:

+ 0 1 2 3 0

0

1

2

3

4

0 1 2 3 4

1 2 3 4 0

2 3 4 0 1

3 4 0 1 2

4 0 1 2 3

e

·

0 1 2 3 4

0 0 0 0 0 4

1 0 1 2 3 4

2 0 2 4 1 3

3 0 3 1 4 2

4 0 4 3 2 1

Observe que, dados a, b ∈ F5, se a (cid:54)= 0 e b (cid:54)= 0 ent˜ao, a · b (cid:54)= 0. Esta propriedade est´a

relacionada ao fato do n´umero 5 ser primo.

Proposi¸c˜ao 2.26. Seja m um n´umero inteiro maior que 1. O conjunto Fm = {0, 1, · · · , m − 1}
com as opera¸c˜oes de adi¸c˜ao e multiplica¸c˜ao deﬁnidas por,

a + b = a + b

e

a · b = a · b,

∀ a, b ∈ Fm,

forma um anel comutativo com unidade conhecido como anel dos inteiros m´odulo m.

(a + b) + c = a + b + c = (a + b) + c = a + (b + c) = a + b + c = a + (b + c);

Demonstra¸c˜ao. Sejam a, b, c ∈ Fm, temos que
A1.
A2. a + b = a + b = b + a = b + a;
A3. a + 0 = 0 + a = a + 0 = a;
A4. a + m − a = m − a + a = a + m − a = m = 0;

25

(a · b) · c = a · b · c = (a · b) · c = a · (b · c) = a · b · c = a · (b · c);

M1.
M2. a · b = a · b = b · a = b · a;
M3. a · 1 = 1 · a = a · 1 = a;
AM. a · (b + c) = a · b + c = a · (b + c) = ab + ac = ab + ac.

Dado que Fm ´e um anel comutativo com unidade ´e interessante saber quais s˜ao os

elementos invers´ıveis de Fm.

Exemplo 2.27. Observando o conjunto F4 e a t´abua de multiplica¸c˜ao do Exemplo 2.24,
temos que n˜ao existe a ∈ F4 tal que 2 · a = 1, ou seja, 2 n˜ao tem inverso em F4. Por outro
lado, veja que no caso do conjunto F5, apresentado no Exemplo 2.25, todos os elementos
n˜ao nulos s˜ao invers´ıveis.

A proposi¸c˜ao a seguir nos diz quando um elemento a ∈ Fm tem inverso multiplicativo.

Proposi¸c˜ao 2.28. Seja m um n´umero inteiro maior que do 1. Um elemento n˜ao nulo

a ∈ Fm, tem inverso multiplicativo em Fm se, e somente se, mdc(a, m) = 1.

Demonstra¸c˜ao. Suponha por contradi¸c˜ao que existe b ∈ Fm tal que a · b = 1 e que
mdc(a, m) = d > 1. Note que a · b = 1 ´e equivalente a dizer que a · b ≡ 1 mod m, ou ainda,

que existe um inteiro q tal que ab − 1 = qm. De onde segue que ab − qm = 1. Por outro

lado, como mdc(a, m) = d, temos que existem inteiros q1 e q2, tais que a = q1d e m = q2d.
Substituindo esses dois valores na equa¸c˜ao ab − qm = 1, obtemos que q1db − qq2d = 1,
ou ainda, d(q1b − qq2) = 1. Veja que temos um produto de dois inteiros resultando em 1,
sendo um deles maior que 1. Um absurdo. Portanto, devemos ter d = 1.

Supondo agora que mdc(a, m) = 1, pela rela¸c˜ao de B´ezout, existem n´umeros inteiros

b e q n˜ao ambos nulos tais que, ab + mq = 1. De onde segue que ab − 1 = (−q)m, logo

a · b ≡ 1 mod m. Portanto, a · b = 1. Mostrando assim que existe o inverso do elemento

a.

Esta ´ultima proposi¸c˜ao garante que o conjunto Fp com as opera¸c˜oes de adi¸c˜ao e mul-
tiplica¸c˜ao deﬁnidas anteriormente formam um corpo para todo n´umero primo p. De fato,

dado que p ´e primo, temos que mdc(p, x) = 1 para todo x ∈ {1, 2, · · · , p − 1},e portanto,

todo elemento n˜ao nulo de Fp ´e invers´ıvel. Al´em disso, Uma consequˆencia direta desta
proposi¸c˜ao ´e que, dados a, b ∈ Fp com p primo, temos que a · b = 0 se, e somente se, a = 0
ou b = 0. Na pr´oxima se¸c˜ao usaremos o corpo F2 = {0, 1} para construir o c´odigo de
Hamming.

2.3 C´odigo de Hamming

Os c´odigos de Hamming foram desenvolvidos por Richard W. Hamming por volta de 1950.

Trata-se de uma fam´ılia de c´odigos bin´arios que s˜ao utilizados at´e hoje devido a sua baixa

26

complexidade e ´e utilizado para a corre¸c˜ao de erros simples. Nos c´odigos de Hamming

temos os seguintes parˆametros:

• O comprimento n das palavras ´e dado por n = 2r − 1, com r > 1;

• O n´umero de bits de informa¸c˜ao ´e k = 2r − (r + 1);

• O n´umero de bits de paridade (redundˆancia) ´e r = n − k.

Desta maneira, ao falar do c´odigo de Hamming (n, k), ou simplesmente ham(n, k), estamos

nos referindo ao c´odigo cujas palavras tˆem comprimento n, sendo k d´ıgitos de informa¸c˜ao

e n − k d´ıgitos de paridade.

O c´odigo de Hamming (n, k) ´e um subconjunto do espa¸co F n

2 = {0, 1}n. Para simpli-
ﬁcar a nota¸c˜ao, a partir de agora, vamos escrever simplesmente 0 e 1 no lugar de 0 e 1.

Assim, por exemplo, a palavra (0, 0, 1, 1, 0, 0, 1) ser´a representada por (0, 0, 1, 1, 0, 0, 1), ou

simplesmente por 0011001.

Dada uma palavra x = (x1, x2, x3, · · · , xn) ∈ ham(n, k), temos que a i-´esima coorde-
nada ser´a um d´ıgito de paridade Pα se i = 2α−1, com α ∈ N, e ser´a um d´ıgito de informa¸c˜ao
caso contr´ario. Por exemplo, no caso da palavra x = (x1, x2, x3, x4, x5, x6, x7) ∈ ham(7, 4),
temos que x1, x2 e x4 s˜ao os d´ıgitos de paridades P1, P2 e P3, respectivamente, e x3, x5, x6
e x7 s˜ao os d´ıgitos de informa¸c˜ao D1, D2, D3 e D4, respectivamente.

Considere a palavra x = (x1, x2, x3, · · · , xn) ∈ ham(n, k), temos que cada posi¸c˜ao
i, com i ∈ {1, 2, 3, · · · , n}, tem uma representa¸c˜ao bin´aria, ou ainda, cada uma dessas

posi¸c˜oes podem ser representadas por uma sequˆencia de r d´ıgitos. No caso da repre-

senta¸c˜ao das potˆencias de 2, nesta sequˆencia existe uma posi¸c˜ao em que o d´ıgito ´e igual
a 1 e os demais s˜ao todos iguais a zero, isto ´e, dada a potˆencia 2α−1, temos que, em sua

representa¸c˜ao bin´aria, o d´ıgito da (r −α+1)-´esima posi¸c˜ao ser´a igual a 1 e todos as demais
iguais a 0. Por exemplo, no caso em que n = 7, temos r = 3, assim, o n´umero 4 = 23−1

pode ser representado por 1002.

Seja i = 2α−1, com α ∈ {1, 2, · · · , r} e Bj1Bj2Bj3 · · · Bjr a representa¸c˜ao bin´aria da
posi¸c˜ao j. O d´ıgito de paridade Pα que aparece na posi¸c˜ao i da palavra v ´e dado pela soma
de todos os d´ıgitos de informa¸c˜ao Dθ, que aparecem numa posi¸c˜ao j tal que Bj(r−α+1) = 1.

Exemplo 2.29. Considere a palavra x = (x1, x2, x3, x4, x5, x6, x7) ∈ ham(7, 4). Escre-
vendo os ´ındices na base bin´aria temos que,

Posi¸c˜ao na base decimal

1

2

3

4

5

6

7

Posi¸c˜ao na base bin´aria

0012 0102 0112 1002 1012 1102 1112

D´ıgito

Tipo de d´ıgito

x1

P1

x3

D1

x4

P3

x5

x6

x7

D2 D3 D4

x2

P2

27

.

Observe que 1 = 0012, assim o primeiro d´ıgito de paridade P1 ´e dado pela soma de todas
os d´ıgitos de informa¸c˜ao que aparecem em posi¸c˜oes cuja representa¸c˜ao na base bin´aria

apresenta o d´ıgito 1 na posi¸c˜ao mais a direita, que neste caso s˜ao, 3 = 0112, 5 = 1012 e
7 = 1112. Temos ent˜ao que,

De modo an´alogo, temos

P1 = x3 + x5 + x7.

P2 = x3 + x6 + x7,
P3 = x5 + x6 + x7.

Assim, para enviar a mensagem 1001 com 4 bits de informa¸c˜ao usando ham(7, 4), temos

que a palavra a ser enviada ´e dada por

Neste caso temos,

x1 x2 x3 x4 x5 x6 x7

P1 P2

1 P3

0

0

1

P1 = 1 + 0 + 1 = 0;
P2 = 1 + 0 + 1 = 0;
P3 = 0 + 0 + 1 = 1.

De onde segue que a palavra a ser enviada ´e dada por,

x1 x2 x3 x4 x5 x6 x7

0

0

1

1

0

0

1

.

.

No exemplo anterior, uma maneira f´acil e pr´atica de obter a palavra codiﬁcada 0011001

seria por meio da matriz da multiplica¸c˜ao de matrizes. Por exemplo, dada uma palavra

qualquer D1D2D3D4 a ser transmitida, temos que a palavra x = (x1, x2, x3, x4, x5, x6, x7) ∈
ham(7, 4) ´e dada por,


















=



































v1
v2
v3
v4
v5
v6
v7

X7×1

1 · D1 + 1 · D2 + 0 · D3 + 1 · D4
1 · D1 + 0 · D2 + 1 · D3 + 1 · D4
1 · D1 + 0 · D2 + 0 · D3 + 0 · D4
0 · D1 + 1 · D2 + 1 · D3 + 1 · D4
0 · D1 + 1 · D2 + 0 · D3 + 0 · D4
0 · D1 + 0 · D2 + 1 · D3 + 0 · D4
0 · D1 + 0 · D2 + 0 · D3 + 1 · D4


















=


















1 1 0 1

1 0 1 1

1 0 0 0

0 1 1 1

0 1 0 0

0 0 1 0

0 0 0 1


















·










D1
D2
D3
D4










.

X7×1

G7×4

D4×1

Veja que qualquer palavra D1D2D3D4 pode ser codiﬁcada apenas multiplicando a

28

matriz G pela matriz D. Dizemos que G ´e a matriz geradora do c´odigo ham(7, 4).

Em geral, os c´odigos de Hamming tem distˆancia m´ınima 3, assim, pela Proposi¸c˜ao

1.10, temos que o c´odigo ´e capaz de identiﬁcar at´e 2 erros e corrigir no m´aximo 1. No

caso em que ocorre apenas um erro durante a transmiss˜ao, o c´odigo ´e capaz de detectar a

posi¸c˜ao exata onde ocorreu o erro, permitindo assim que seja feita a corre¸c˜ao.

Para detectar o erro, no processo de decodiﬁca¸c˜ao ´e realizado o teste de veriﬁca¸c˜ao

dos bits de paridade da palavra recebida. Sabendo exatamente como foi obtido cada um

dos d´ıgitos de paridades Pα, o decodiﬁcador consegue testar a paridade do d´ıgito recebido.
Como os d´ıgitos s˜ao elementos do conjunto F2, para veriﬁcar a paridade basta somar o
d´ıgito recebido com o d´ıgito gerado a partir da palavra recebida.

Por exemplo, para veriﬁcar a paridade do d´ıgito P1, o decodiﬁcador soma o d´ıgito x1 da
palavra recebida com todos os d´ıgitos das posi¸c˜oes i para as quais a representa¸c˜ao bin´aria

apresenta 1 no d´ıgito mais a direita. Assim, caso tenha ocorrido um erro em uma das

posi¸c˜oes i o resultado ser´a diferente de 0. E desta maneira, o erro ter´a ocorrido em uma

posi¸c˜ao na qual o ´ultimo d´ıgito da representa¸c˜ao decimal ´e igual a 1. De modo an´alogo,

o d´ıgito P2 pode ser veriﬁcado e caso o resultado seja diferente de 0, saberemos que o
pen´ultimo d´ıgito da representa¸c˜ao bin´aria da posi¸c˜ao onde ocorreu o erro tamb´em ´e igual

a 1. Seguindo esse processo ´e poss´ıvel encontrar a representa¸c˜ao bin´aria exata da posi¸c˜ao

onde o erro ocorreu.

Exemplo 2.30. Suponha que, ao enviar a palavra 0011001 tenha ocorrido um erro, de

modo que a palavra recebida foi 0011011. Para detectar o erro ´e necess´ario realizar o teste

de veriﬁca¸c˜ao de bits paridade. Neste caso, temos

Palavra recebida

x1
0

x2
0

x3
1

x4
1

x5
0

x6
1

x7
1

Teste P1

Teste P2

Teste P3

1 · 0 + 0 · 0 + 1 · 1 + 0 · 1 + 1 · 0 + 0 · 1 + 1 · 1 = 0

.

0 · 0 + 1 · 0 + 1 · 1 + 0 · 1 + 0 · 0 + 1 · 1 + 1 · 1 = 1

0 · 0 + 0 · 0 + 0 · 1 + 1 · 1 + 1 · 0 + 1 · 1 + 1 · 1 = 1

Assim, identiﬁcando por Tα o resultado do teste de paridade para o d´ıgito Pα, temos que
a palavra T3T2T1, conhecida como s´ındrome, determina a posi¸c˜ao em que ocorreu o erro,
ou seja, o n´umero bin´ario T3T2T1 representa exatamente a posi¸c˜ao onde existe um erro.
Neste exemplo, temos que 1102 = 6, assim, o decodiﬁcador far´a uma altera¸c˜ao no d´ıgito
x6 e concluir´a corretamente que a palavra enviada foi 0011001.

No exemplo, poder´ıamos ter obtido a s´ındrome T3T2T1 por meio da multiplica¸c˜ao de

29

matrizes. Em geral, dada a palavra x = (x1, x2, x3, x4, x5, x6, x7) ∈ ham(7, 4), temos que







1 0 1 0 1 0 1

0 1 1 0 0 1 1

0 0 0 1 1 1 1







·



































x1
x2
x3
x4
x5
x6
x7

=







.







T1
T2
T3

H7×3

X7×1

T3×1

Assim, dada qualquer palavra x, podemos obter a s´ındrome multiplicando a matriz H pela

matriz X. Dizemos que H ´e a matriz teste de paridade do c´odigo ham(7, 4).

O c´odigo de Hamming n˜ao ´e o ´unico c´odigo que pode ser obtido a partir da mul-

tiplica¸c˜ao de matrizes, como veremos na pr´oxima se¸c˜ao, essa ´e uma caracter´ıstica dos

c´odigos lineares. Veremos tamb´em que para cada c´odigo linear existe uma matriz teste de

paridade que torna o m´etodo de detec¸c˜ao de erros mais simples.

2.4 C´odigos Lineares

Seja F um corpo ﬁnito com q elementos. Assim, para cada n ≥ 1, temos um espa¸co
vetorial F n. O corpo F ´e o alfabeto do c´odigo linear.

Deﬁni¸c˜ao 2.31. Um c´odigo C ∈ F n ser´a chamado de c´odigo linear se C for um subespa¸co
vetorial de F n.

Exemplo 2.32. Considere a transforma¸c˜ao linear,

A :

F 2
2
(x1, x2)

−→

F 5
2

(cid:55)−→ (x1, x2, x1, x1 + x2, x2).

Aplicando a transforma¸c˜ao A nos elementos do conjunto F 2

2 , obtemos

(0, 0)

(cid:55)−→ (0, 0, 0, 0 + 0, 0) = (0, 0, 0, 0, 0)

(0, 1)

(cid:55)−→ (0, 1, 0, 0 + 1, 1) = (0, 1, 0, 1, 1)

(1, 0)

(cid:55)−→ (1, 0, 1, 1 + 0, 0) = (1, 0, 1, 1, 0)

(1, 1)

(cid:55)−→ (1, 1, 1, 1 + 1, 1) = (1, 1, 1, 0, 1).

Veja que o subespa¸co vetorial C = {(0, 0, 0, 0, 0), (0, 1, 0, 1, 1), (1, 0, 1, 1, 0), (1, 1, 1, 0, 1)} de
F 5

2 ´e exatamente o c´odigo do robˆo descrito na Se¸c˜ao 1.1.

Um base para o espa¸co vetorial C ´e dada por B = {(1, 0, 1, 1, 0), (0, 1, 0, 1, 1)}, este

30

espa¸co tem dimens˜ao 2. Todos os elementos de C s˜ao dados por c = β1(1, 0, 1, 1, 0) +
β2(0, 1, 0, 1, 1) com β1, β2 ∈ F2. Como existe apenas duas op¸c˜oes de escolha para β1 e
duas para β2 de fato existe apenas essas 22 = 4 palavras no c´odigo C.

Em geral, a quantidade de palavras de um c´odigo linear C depende apenas do n´umero

de elementos q do corpo F e da dimens˜ao do espa¸co vetorial C. Por exemplo, seja B =

{v1, v2, · · · , vk} uma base do c´odigo linear C, assim, qualquer palavra c pode ser escrita
de maneira ´unica como

c = β1v1 + β2v2 + · · · + βkvk,

com β1, β2, · · · , βk ∈ F.

Observe que para cada βi, com i = 1, 2, · · · , k, existem exatamente q escolhas, portanto,

o n´umero de palavras do c´odigo linear C ´e precisamente qk.

Deﬁni¸c˜ao 2.33. Seja v = (x1, x2, · · · , xn) ∈ F n, deﬁne-se o peso do vetor v como sendo
o n´umero inteiro,

ω(v) = |{i | xi (cid:54)= 0, 1 (cid:54) i (cid:54) n}|,

onde |X| representa o n´umero de elementos do conjunto X.

Deﬁni¸c˜ao 2.34. Seja C um c´odigo linear, deﬁne-se o peso do c´odigo C como sendo o

n´umero,

ω(C) = min {ω(v) | v ∈ C − {0}}.

Exemplo 2.35. Considerando o c´odigo do robˆo C, temos que,

ω ((0, 0, 0, 0, 0)) = 0

ω ((0, 1, 0, 1, 1)) = 3

ω ((1, 0, 1, 1, 0)) = 3

ω ((1, 1, 1, 0, 1)) = 4.

Assim, ω(C) = 3.

Veja que o peso do c´odigo C ´e exatamente igual a distˆancia m´ınima. A proposi¸c˜ao a

seguir relaciona a ideia de peso e a m´etrica de Hamming.

Proposi¸c˜ao 2.36. Seja C ⊂ F n um c´odigo linear com distˆancia m´ınima d. Temos que

(i) ∀ u, v ∈ F n, d(u, v) = ω(u − v);

(ii) d = ω(C).

Demonstra¸c˜ao. (i) Sejam u = (y1, y2, · · · , yn), v = (x1, x2, · · · , xn) ∈ F n. Por deﬁni¸c˜ao,
temos que d(u, v) = |{i | yi (cid:54)= xi, 1 ≤ i ≤ n}| e ω(u − v) = |{i | (yi − xi) (cid:54)= 0, 1 (cid:54) i (cid:54) n}|.
Veja que yi (cid:54)= xi se, e somente se, yi − xi (cid:54)= 0, portanto, os dois conjuntos tˆem o mesmo
n´umero de elementos, mostrando assim que d(u, v) = ω(u − v).

31

(ii) Suponha por contradi¸c˜ao que ω(C) (cid:54)= d, assim, ω(C) < d ou ω(C) > d. Mas,

dado que a distˆancia m´ınima do c´odigo C ´e igual a d, temos que existem u, v ∈ C, com

u (cid:54)= v e d(u, v) = d. Sendo C um c´odigo linear, temos que u − v ∈ C e, pelo item (i),

ω(u − v) = d(u, v) = d, portanto, o caso ω(C) > d n˜ao pode ocorrer. Suponha ent˜ao que

ω(C) < d, assim, existe uma palavra v ∈ C, com v (cid:54)= 0 , tal que ω(v) < d. Mas, como

0 ∈ C, veja que pelo item (i) temos, d(v, 0) = ω(v − 0) = ω(v) < d. Um absurdo, pois a

distˆancia m´ınima do c´odigo C ´e d. Portanto, ω(C) = d.

(cid:0)|C|
2

Inicialmente para calcular a distˆancia m´ınima de um c´odigo C era necess´ario realizar
(cid:1) opera¸c˜oes. No caso de um c´odigo linear podemos calcular o peso de cada um dos
elementos n˜ao nulos do c´odigo C e desta maneira determinar a distˆancia m´ınima, portanto,

no caso dos c´odigos lineares precisamos realizar apenas |C| − 1 opera¸c˜oes.

2.4.1 Matriz Geradora de um C´odigo

Veremos agora como obter um c´odigo linear, ou de maneira equivalente, como obter um

subespa¸co vetorial a partir de uma matriz geradora.

Deﬁni¸c˜ao 2.37. Seja C um c´odigo. A terna de n´umeros inteiros (n, k, d), onde n repre-

senta o comprimento das palavras do c´odigo C, k representa a dimens˜ao do c´odigo C e d

representa a distˆancia m´ınima de C ´e chamada de parˆametros do c´odigo.

Exemplo 2.38. Considere a transforma¸c˜ao linear,

A :

F 3
2
(x1, x2, x3)

−→

F 5
2

(cid:55)−→ (x1 + x2 + x3, x2 + x3, x3, x2, x1).

Aplicando a transforma¸c˜ao A nos elementos do conjunto F 3

2 , obtemos

(0, 0, 0)

(cid:55)−→ (0 + 0 + 0, 0 + 0, 0, 0, 0) = (0, 0, 0, 0, 0)

(0, 0, 1)

(cid:55)−→ (0 + 0 + 1, 0 + 1, 1, 0, 0) = (1, 1, 1, 0, 0)

(0, 1, 0)

(cid:55)−→ (0 + 1 + 0, 1 + 0, 0, 1, 0) = (1, 1, 0, 1, 0)

(0, 1, 1)

(cid:55)−→ (0 + 1 + 1, 1 + 1, 1, 1, 0) = (0, 0, 1, 1, 0)

(1, 0, 0)

(cid:55)−→ (1 + 0 + 0, 0 + 0, 0, 0, 1) = (1, 0, 0, 0, 1)

(1, 0, 1)

(cid:55)−→ (1 + 0 + 1, 0 + 1, 1, 0, 1) = (0, 1, 1, 0, 1)

(1, 1, 0)

(cid:55)−→ (1 + 1 + 0, 1 + 0, 0, 1, 1) = (0, 1, 0, 1, 1)

(1, 1, 1)

(cid:55)−→ (1 + 1 + 1, 1 + 1, 1, 1, 1) = (1, 0, 1, 1, 1).

Neste caso, temos o c´odigo linear

C = {(0, 0, 0, 0, 0), (1, 1, 1, 0, 0), (1, 1, 0, 1, 0), (0, 0, 1, 1, 0), (1, 0, 0, 0, 1),

(0, 1, 1, 0, 1), (0, 1, 0, 1, 1), (1, 0, 1, 1, 1)},

32

com parˆametros (5, 3, 2). Veja que uma base para este c´odigo ´e

B = {(1, 0, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 1, 0, 0)}.

Fazendo v1 = (1, 0, 0, 0, 1), v2 = (1, 1, 0, 1, 0) e v3 = (1, 1, 1, 0, 0), podemos deﬁnir a
transforma¸c˜ao A em fun¸c˜ao da base B da seguinte maneira:

A :

F 3
2
(x1, x2, x3)

−→

F 5
2

(cid:55)−→ x1v1 + x2v2 + x3v3.

Podemos ainda deﬁnir a transforma¸c˜ao por meio de matrizes, como segue

A :

F 3
2

−→

(cid:104)

x1 x2 x3

(cid:105)

(cid:55)−→

(cid:104)

x1 x2 x3

(cid:105)

·





F 5
2


1 0 0 0 1

1 1 0 1 0

1 1 1 0 0







.

Em geral, dado um c´odigo linear C ∈ F n, escolhendo uma base B = {v1, v2, · · · , vk}

para C, podemos obter este c´odigo por meio da transforma¸c˜ao linear

A :

F k

−→

F n

(x1, x2, · · · , xk)

(cid:55)−→ (x1v1 + x2v2 + · · · + xkvk).

A partir da base ordenada B = {v1, v2, · · · , vk}, obtemos a matriz G a seguir, na qual

cada linha i ´e formada pelas coordenadas do vetor vi da base, isto ´e,

G =



















v1
v2
...
vk










=

v11
v12
v21
v22
...
...
vk1 vk2

· · ·

· · ·

· · ·










.

v1n
v2n
...
vkn

A matriz G ´e chamada de matriz geradora do c´odigo C associada `a base B.

Considerando a transforma¸c˜ao linear

A : F k −→ F n

x

(cid:55)−→ xG,

temos que, dado um vetor x = (x1, x2, · · · , xk) ∈ F k,

A(x) = xG = x1v1 + x2v2 + · · · + xkvk,

portanto, a imagem da transforma¸c˜ao A ´e exatamente o c´odigo C. Desta maneira, F k

33

pode ser visto como o c´odigo da fonte, a aplica¸c˜ao A como uma codiﬁca¸c˜ao e C = Im(A)

o c´odigo do canal.

Exemplo 2.39. Considere a transforma¸c˜ao A do Exemplo 2.38 e o c´odigo C = Im(A). A

matriz







G =

1 0 0 0 1

1 1 0 1 0

1 1 1 0 0







,

´e a matriz geradora do c´odigo C associada a base B = {(1, 0, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 1, 0, 0)}.

Veja que nesse exemplo, dada uma palavra c = (c1, c2, c3, c4, c5) ∈ C ´e f´acil encontrar a
palavra x = (x1, x2, x3) ∈ F 3
2 , tal que A(x) = c, isto e, ´e f´acil de realizar a decodiﬁca¸c˜ao,
certamente x = (c5, c4, c3). Este fato ocorre devido ao tipo de matriz geradora do c´odigo.
Veremos que em geral, dado um c´odigo linear qualquer, ´e poss´ıvel obter um matriz geradora

em um formato que permite simpliﬁcar o processo de decodiﬁca¸c˜ao, esta ´e uma das grandes

vantagens dos c´odigos lineares.

Deﬁni¸c˜ao 2.40. Dada uma matriz G geradora de um c´odigo C, dizemos que G est´a na

forma padr˜ao quando

G = [Idk|B] ,

onde, Idk ´e a matriz identidade k × k e B, uma matriz k × (n − k).

Exemplo 2.41. Considere a transforma¸c˜ao A do Exemplo 2.38 e o c´odigo C = Im(A). A

matriz

G(cid:48) =







1 0 0 0 1

0 1 0 1 1

0 0 1 1 0







,

obtida a partir da matriz G ´e tamb´em uma matriz geradora do c´odigo C, neste caso
associada a base B(cid:48) = {(1, 0, 0, 0, 1), (0, 1, 0, 1, 1), (0, 0, 1, 1, 0)}. Note que G(cid:48) est´a na forma

padr˜ao, com

Id3 =







1 0 0

0 1 0

0 0 1







e B =







0 1

1 1

1 0







.

Para obter a matriz G(cid:48) do exemplo anterior utilizamos o resultado do Proposi¸c˜ao 2.13.

Veja que,

(1, 0, 0, 0, 1) = (1, 0, 0, 0, 1)

(0, 1, 0, 1, 1) = (1, 1, 0, 1, 0) + 1 · (1, 0, 0, 0, 1)

(0, 0, 1, 1, 0) = (1, 1, 1, 0, 0) + 1 · (1, 1, 0, 1, 0)

Observa¸c˜ao 2.42. Em geral, dada uma matriz geradora G de um c´odigo C, podemos
obter uma outra matriz geradora G(cid:48) por meio de uma sequˆencia de opera¸c˜oes do tipo:

34

(L1) Permuta¸c˜ao de duas linhas;

(L2) Multiplica¸c˜ao de uma linha por um escalar n˜ao nulo;

(L3) Adi¸c˜ao de um m´ultiplo escalar de uma linha a outra.

Deﬁni¸c˜ao 2.43. Seja F um corpo ﬁnito e n um n´umero natural. Dizemos que uma
aplica¸c˜ao linear T : F n −→ F n ´e uma isometria de F n se ela preserva distˆancias de

Hamming, isto ´e, se

d(T (v), T (u)) = d(v, u),

∀ v, u ∈ F n.

Deﬁni¸c˜ao 2.44. Seja F um corpo ﬁnito. Dois c´odigos lineares C e C(cid:48) s˜ao linearmente
equivalentes se existir uma isometria linear, T : F n −→ F n tal que T (C) = C(cid:48).

Um exemplo simples e ´util de isometria linear ´e a aplica¸c˜ao

Tπ

:

F n

−→

F n

(v1, v2, · · · , vn) −→ (vπ(1), vπ(2), · · · , vπ(n)),

onde π ´e uma permuta¸c˜ao.

´E f´acil ver que dado um c´odigo linear C com matriz geradora G, permutar as colunas
da matriz G ´e equivalente a aplicar uma transforma¸c˜ao Tπ no c´odigo C. Desta maneira,
para toda matriz G(cid:48) obtida a partir de G por meio de permuta¸c˜oes das colunas de G,
temos que o c´odigo C gerado pela matriz G(cid:48) ´e linearmente equivalente ao c´odigo C.

Proposi¸c˜ao 2.45. Dado um c´odigo C com matriz geradora G, sempre existe um c´odigo
C(cid:48) linearmente equivalente ao c´odigo C com matriz geradora G(cid:48) na forma padr˜ao.

Demonstra¸c˜ao. Para obter o c´odigo C(cid:48), basta obter a matriz G(cid:48) permutando as colunas

da matriz G e aplicando opera¸c˜oes do tipo (L1), (L2) e (L3) apresentadas na Observa¸c˜ao

2.42. Para entender o processo veja [13].

Exemplo 2.46. Dado o c´odigo linear C deﬁnido sobre F2 pela matriz

Fazendo as permuta¸c˜oes,

G =










1 1 1 0 0 0 0

1 0 0 1 1 0 0

1 0 0 0 0 1 1

0 1 0 1 0 1 0










.

C1 ↔ C3, C2 ↔ C5 e C3 ↔ C7.

35

nas colunas da matriz G e em seguida trocar a linha L2 pela soma L2 + L4, obtemos a
matriz



G(cid:48) =








1 0 0 0 1 0 1

0 1 0 0 1 1 1

0 0 1 0 0 1 1

0 0 0 1 1 1 0



,








que est´a na forma padr˜ao e gera um c´odigo C(cid:48) linearmente equivalente ao c´odigo dado.

2.4.2 C´odigos Duais

Os resultados apresentados at´e aqui s˜ao suﬁcientes para codiﬁcar e decodiﬁcar uma men-

sagem por meio de um c´odigo linear. No entanto, caso ocorra algum erro ´e necess´ario que

o c´odigo seja capaz de fazer a corre¸c˜ao. Nesta se¸c˜ao veremos alguns resultados que servem

como ferramentas para corre¸c˜ao de erros. Iniciaremos com o exemplo a seguir:

Exemplo 2.47. Considere o c´odigo linear C deﬁnido sobre F2 pela matriz

G =










1 0 0 0 1 0 1

0 1 0 0 1 1 1

0 0 1 0 0 1 1

0 0 0 1 1 1 0










.

Dada uma palavra x = (x1, x2, x3, x4, x5, x6, x7), para saber se x ´e ou n˜ao uma palavra
do c´odigo C, a princ´ıpio ´e necess´ario comparar x com todas as palavras x(cid:48) ∈ C. Mas,

assim como no c´odigo de Hamming, a partir da matriz G podemos obter uma matriz

teste de paridade H. Note que a matriz G est´a na forma padr˜ao G = [Idk|B] , desta
maneira, como veremos nos pr´oximos resultados, a matriz teste de paridade ´e dada por
H = (cid:2)−BT |Idn−k

(cid:3), onde BT ´e a transposta da matriz B. Neste exemplo temos que,







H =

1 1 0 1 1 0 0

0 1 1 1 0 1 0

1 1 1 0 0 0 1







.

Assim, podemos usar a matriz H para saber se determinada palavra pertence ou n˜ao ao
c´odigo C. Veja que dada uma palavra qualquer c = (c1, c2, c3, c4) ∈ F 4

2 , temos que

(cid:104)

c1

c2

c3

c4

(cid:105)

· G =

(cid:104)

c1

c2

c3

c4

c1 + c2 + c4

c2 + c3 + c4

c1 + c2 + c3

(cid:105)

.

Logo, todas as palavra do c´odigo C s˜ao do tipo

(c1, c2, c3, c4, c1 + c2 + c4, c2 + c3 + c4, c1 + c2 + c3).

36

E observe que,







1 1 0 1 1 0 0

0 1 1 1 0 1 0

1 1 0 0 0 0 1







·


















c1
c2
c3
c4
c1 + c2 + c4
c2 + c3 + c4
c1 + c2 + c3
























=

c1 + c1 + c2 + c2 + c4 + c4
c2 + c2 + c3 + c3 + c4 + c4
c1 + c1 + c2 + c2 + c3 + c3







=







.







0

0

0

Portanto, para saber se a palavra x pertence ou n˜ao ao c´odigo C, basta multiplicar a matriz
H pela matriz X T , formada pela palavra x. Por exemplo,







1 1 0 1 1 0 0

0 1 1 1 0 1 0

1 1 0 0 0 0 1













·



























1

0

1

0

1

0

1







=

1 · 1 + 1 · 0 + 0 · 1 + 1 · 0 + 1 · 1 + 0 · 0 + 0 · 1

0 · 1 + 1 · 0 + 1 · 1 + 1 · 0 + 0 · 1 + 1 · 0 + 0 · 1

1 · 1 + 1 · 0 + 0 · 1 + 0 · 0 + 0 · 1 + 0 · 0 + 1 · 1







=







.







0

1

0

Logo, a palavra (1, 0, 1, 0, 1, 0, 1) n˜ao pertence ao c´odigo C.

Veremos a partir de agora alguns resultados b´asicos que garante a existˆencia da matriz

teste de paridade H e apresenta uma estreita rela¸c˜ao entre a matriz H e o peso do c´odigo

linear.

Deﬁni¸c˜ao 2.48. Sejam a = (a1, a2, · · · , an) e b = (b1, b2, · · · , bn) dois vetores quaisquer
de F n . Deﬁnimos o produto interno entre a e b, como sendo o elemento a ∗ b ∈ F , dado

por

a ∗ b = (a1, a2, · · · , an) ∗ (b1, b2, · · · , bn) = a1b1 + a2b2 + · · · + anbn.

Proposi¸c˜ao 2.49. Sejam a = (a1, a2, · · · , an), b = (b1, b2, · · · , bn) e c = (c1, c2, · · · , cn)
trˆes vetores quaisquer de F n e λ ∈ F . Temos ent˜ao que,

1. Simetria: a ∗ b = b ∗ a;

2. Bilinear: (a + λb) ∗ c = a ∗ c + λ(b ∗ c).

Demonstra¸c˜ao. Sejam a, b, c ∈ F n e λ ∈ F , temos que

1.

a ∗ b = a1b1 + a2b2 + · · · + anbn = b1a1 + b2a2 + · · · + bnan = b ∗ a.

37

2.

(a + λb) ∗ c = ((a1, a2, · · · , an) + λ(b1, b2, · · · , bn)) ∗ (c1, c2, · · · , cn)

= (a1 + λb1, a2 + λb2, · · · , an + λbn) ∗ (c1, c2, · · · , cn)
= (a1 + λb1)c1 + (a2 + λb2)c2 + · · · + (an + λbn)cn
= (a1c1) + λ(b1c1) + (a2c2) + λ(b2c2) + · · · (ancn) + λ(bncn)
= (a1c1) + (a2c2) + · · · (ancn) + λ ((b1c1) + (b2c2) + · · · + (bncn))
= (a1, a2, · · · , an) ∗ (c1, c2, · · · , cn) + λ ((b1, b2, · · · , bn) ∗ (c1, c2, · · · , cn))
= a ∗ c + λ(b ∗ c).

Deﬁni¸c˜ao 2.50. Seja C ⊂ F n um c´odigo linear. Deﬁnimos o conjunto C⊥ ⊂ F n, por

C⊥ = {v ∈ F n | v ∗ u = 0, ∀ u ∈ C}.

Proposi¸c˜ao 2.51. Se C ⊂ F n ´e um c´odigo linear com matriz geradora G, ent˜ao:

1. C⊥ ´e um subespa¸co vetorial de F n;

2. x ∈ C⊥ se, e somente se, GxT = (0, 0, · · · , 0).

Demonstra¸c˜ao. Sejam a, b ∈ C⊥, c = (c1, c2, · · · , cn) ∈ C e α ∈ F .

1. Note que,

i) (0, 0, · · · , 0) ∗ (c1, c2, · · · , cn) = 0 · c1 + 0 · c2 + · · · + 0 · cn = 0;

ii) (a + b) ∗ c = a ∗ c + b ∗ c = 0 + 0 = 0;

iii) (αa) ∗ c = α(a ∗ c) = α0 = 0.

Logo, 0F , a + b, αa ∈ C⊥. Portanto, C⊥ ´e um subespa¸co vetorial de F n.

2. Como as linhas de G s˜ao vetores v1, v2, · · · , vk ∈ C que formam uma base para C,

temos que

GxT = (v1 ∗ x, v2 ∗ x, · · · , vk ∗ x) = (0, 0, · · · , 0),

∀ x ∈ C⊥.

E, por outro lado, dado um vetor qualquer c ∈ C, temos que

c = α1v1 + α2v2 + · · · + αkvk, com α1, α2, · · · , αk ∈ F.

Assim, para todo x ∈ F n, temos

x ∗ c = x ∗ (α1v1 + α2v2 + · · · + αkvk) = α1(x ∗ v1) + α2(x ∗ v2) + · · · + αk(x ∗ vk).

38

Logo, se GxT = (0, 0, · · · , 0), temos que

v1 ∗ x = 0, v2 ∗ x = 0, · · · , vk ∗ x = 0,

x ∗ c = α10 + α20 + · · · + αk0 = 0.

assim,

E, portanto, x ∈ C⊥.

O subespa¸co vetorial C⊥ ´e um c´odigo linear conhecido como c´odigo dual de C. A

pr´oxima proposi¸c˜ao relaciona a dimens˜ao do c´odigo C com a dimens˜ao do c´odigo dual, e
mostra como obter uma matriz geradora para C⊥ a partir da matriz geradora G de C.

Proposi¸c˜ao 2.52. Seja C ⊂ F n um c´odigo linear de dimens˜ao k com matriz geradora

G = [Ik | B], na forma padr˜ao. Ent˜ao,

1. dim C⊥ = n − k.

2. Uma matriz geradora para C⊥ ´e H = (cid:2)−BT | In−k

(cid:3) .

Demonstra¸c˜ao. Pela proposi¸c˜ao anterior temos que x ∈ C⊥ se, e somente se, GxT =
(0, 0, · · · , 0). Assim, dado um vetor x = (x1, x2, . . . , xn) ∈ C⊥, temos que










1 0 · · ·

0 1 · · ·
...
...
. . .
0 0 · · ·

0 b(k+1)1
0 b(k+1)2
...
1 b(k+1)k

0

b(k+2)1
b(k+2)2
...
b(k+2)k

· · ·

· · ·
. . .
· · ·










·



















x1
x2
...
xn

bn1
bn2
...
bnk










.










0

0
...
0

=

GxT = [Ik | B] xT =

De onde segue que,










x1 + b(k+1)1xk+1 + b(k+2)1xk+2 + · · · + bn1xn
x2 + b(k+1)2xk+1 + b(k+2)2xk+2 + · · · + bn2xn
...
xk + b(k+1)kxk+1 + b(k+2)kxk+2 + · · · + bnkxn










Assim,



















x1
x2
...
xk










+

b(k+1)1xk+1 + b(k+2)1xk+2 + · · · + bn1xn
b(k+1)2xk+1 + b(k+2)2xk+2 + · · · + bn2xn
...
b(k+1)kxk+1 + b(k+2)kxk+2 + · · · + bnkxn










=

0

0
...
0










=



















.










.

0

0
...
0

39

Ou ainda,

Logo,



















x1
x2
...
xk










+

b(k+1)1
b(k+1)2
...
b(k+1)k

b(k+2)1
b(k+2)2
...
b(k+2)k

· · ·

· · ·
. . .
· · ·










·










xk+1
xk+2
...
xn










=










.










0

0
...
0

bn1
bn2
...
bnk



















x1
x2
...
xk

= −










b(k+1)1
b(k+1)2
...
b(k+1)k

b(k+2)1
b(k+2)2
...
b(k+2)k

· · ·

· · ·
. . .
· · ·










·



















.

xk+1
xk+2
...
xn

bn1
bn2
...
bnk

Como −BT ´e uma matriz injetiva e o corpo F tem q elementos, temos que cada um dos

valores xk+1, xk+2, · · · , xn pode ser escolhido de q maneiras distintas, assim o n´umero de
elementos do espa¸co vetorial C⊥ ´e qn−k. Portanto, a dimens˜ao de C⊥ ´e n − k.

Veja ainda que cada vetor x = (x1, x2, · · · , xn) de C⊥, pode ser escrito como

(cid:104)

x1 x2 . . . xn

(cid:105)

(cid:104)

=

c1 c2 . . . cn−k










(cid:105)
·

−b(k+1)1 −b(k+1)2 · · · −b(k+1)k 1 0 · · · 0
· · · −b(k+2)k 0 1 · · · 0
−b(k+2)1 −b(k+2)2
...
...
...
. . .
. . .
0 0 · · · 1
· · · −bnk

...
−bn1

...
−bn2

...










,

com, c1, c2, . . . , cn−k ∈ F.
Logo C⊥ est´a contido no espa¸co vetorial gerado pela matriz H. Como as linhas de H

s˜ao vetores linearmente independentes temos que a dimens˜ao do espa¸co gerado ´e n − k,
e portanto, este espa¸co tem qn−k elementos. De onde segue que o espa¸co gerado por
H = (cid:2)−BT | In−k

(cid:3) ´e exatamente o c´odigo linear C⊥.

Proposi¸c˜ao 2.53. Seja C um c´odigo linear de dimens˜ao k em F n e matriz geradora G.

Uma matriz H de ordem (n−k)×n, com entradas em F e linhas linearmente independentes
´e uma matriz geradora de C⊥ se, e somente se,

G · H T = 0.

Demonstra¸c˜ao. Sejam g1, g2, · · · , gk as linhas da matriz G e h1, h2, · · · , hn−k as linhas

40

linearmente independentes da matriz H. Observe que

G · H T =



















g1
g2
...
gk

(cid:104)

·

h1 h2

. . . hn−k

(cid:105)

=










g1 ∗ h1
g2 ∗ h1
...
gk ∗ h1

g1 ∗ h2
g2 ∗ h2
...
gk ∗ h2

· · ·

· · ·
. . .
· · ·

g1 ∗ hn−k
g2 ∗ hn−k
...
gk ∗ hn−k










.

Assim, dado que H gera o c´odigo C⊥, temos que h1, h2, · · · , hn−k ∈ C⊥, logo, gj ∗ hi = 0
para todo i ∈ {1, 2, · · · , n − k} e j ∈ {1, 2, · · · k}, e portanto, G · H T = 0.

Por outro lado, como as linhas de H s˜ao linearmente independentes, temos que H gera
um espa¸co vetorial de dimens˜ao n − k. Supondo que G · H T = 0, para todo vetor x · H do

c´odigo gerado por H temos que

G · (x · H)T = G · (H T · xT ) = (G · H T ) · xT = 0 · xT = 0.

Assim, o c´odigo gerado por H est´a contido no c´odigo C⊥. Como a dimens˜ao de C⊥ tamb´em
´e n − k, conclu´ımos que o c´odigo gerado por H ´e exatamente o c´odigo C⊥.

Proposi¸c˜ao 2.54. Seja C um c´odigo linear com matriz geradora G e suponha que H seja
uma matriz geradora do c´odigo C⊥. Ent˜ao,

v ∈ C se, e somente se, HvT = 0.

Demonstra¸c˜ao. Pela proposi¸c˜ao anterior, temos que G · H T = 0. De onde segue que,
(G · H T )T = 0T , logo H · GT = 0. E novamente pela proposi¸c˜ao anterior, temos que G
´e uma matriz geradora do c´odigo (C⊥)⊥. Portanto, (C⊥)⊥ = C. Assim, pela Proposi¸c˜ao
2.51, temos que se, HvT = 0, ent˜ao v ∈ (C⊥)⊥ = C. Reciprocamente, se v ∈ C, ent˜ao

v = xG, da´ı,

HvT = H(xG)T = H(GT xT ) = (HGT )xT = 0xT = 0.

Esta proposi¸c˜ao mostra que para todo c´odigo linear C, existe uma matriz teste de pa-

ridade H. Desta maneira, para saber se um vetor v pertence ao c´odigo C basta multiplicar
a matriz H por vT . O vetor HvT ´e chamado de s´ındrome de v.

Proposi¸c˜ao 2.55. Seja C um c´odigo linear com matriz geradora G e suponha que H seja
uma matriz geradora do c´odigo C⊥. Ent˜ao, se existe x ∈ C de peso ω(x) = s, existem s

colunas de H que s˜ao linearmente dependentes.

Demonstra¸c˜ao. Sejam x = (x1, x2, · · · , xn) ∈ C um vetor com peso s e C1, C2, · · · , Cn as
colunas da matriz H. Como H ´e uma matriz teste de paridade, segue da Proposi¸c˜ao 2.54

41

que

0 = HxT =

(cid:104)

C1 C2

· · · Cn

(cid:105)



















x1
x2
...
xn

= x1C1 + x2C2 + · · · + xnCn.

De onde segue que,

x1C1 + x2C2 + · · · + xnCn = 0.

Como ω(x) = s, existem exatamente s elementos n˜ao nulos no conjunto {x1, x2, · · · , xn},
sem perda de generalidade, suponha que x1 · x2 · ··· · xs (cid:54)= 0. Assim,

x1C1 + x2C2 + · · · + xsCs = 0,

portanto,

Ci = −x−1

i x1C1 − x−1

i x2C2 − · · · − x−1

i xi−1Ci−1 − x−1

i xi−1Ci−1 − · · · − x−1

i xsCs,

para todo i ∈ {1, 2, · · · s}. Portanto, {C1, C2, · · · , Cs} ´e um conjunto L.D., mostrando
assim que existem s colunas de H linearmente dependentes.

Proposi¸c˜ao 2.56. Seja C um c´odigo linear com matriz geradora G e suponha que H
seja uma matriz geradora do c´odigo C⊥. Se existem s colunas de H que s˜ao linearmente

dependentes, ent˜ao ω(C) ≤ s.

Demonstra¸c˜ao. Sejam C1, C2, · · · , Cn as colunas da matriz teste de paridade H. Sem
perda de generalidade suponha qua as colunas C1, C2, · · · , Cs sejam linearmente depen-
dentes. Assim, existem escalares x1, x2, · · · xs ∈ F n˜ao todos nulos, tais que

x1C1 + x2C2 + · · · + xsCs = 0.

De onde segue que,

x1C1 + x2C2 + · · · + xsCs + 0Cs+1 + · · · + 0Cn = 0,

logo,

H · (x1, x2, · · · , xs, 0, · · · , 0)T = 0.

Como H ´e uma matriz teste de paridade, temos que (x1, x2, · · · , xs, 0, · · · , 0) ∈ C. Sendo
x1, x2, · · · , xs n˜ao todos nulos, temos que ω ((x1, x2, · · · , xs, 0, · · · , 0)) ≤ s, portanto,
ω(C) ≤ s.

42

A partir destas duas ´ultimas proposi¸c˜oes, obtemos o resultado a seguir que usaremos

para demonstrar alguns propriedades importantes no processo de decodiﬁca¸c˜ao.

Proposi¸c˜ao 2.57. Seja H uma matriz teste de paridade de um c´odigo linear C. Ent˜ao,

o peso de C ser´a igual a s se, e somente se, quaisquer s − 1 colunas de H s˜ao linearmente

independentes e existem s colunas de H linearmente dependentes.

2.4.3 Decodiﬁca¸c˜ao

Veremos a partir de agora o processo de detec¸c˜ao e corre¸c˜ao de erros num determinado

c´odigo linear C.

Deﬁni¸c˜ao 2.58. Seja C um c´odigo linear. Deﬁnimos o vetor erro e como sendo a diferen¸ca

entre o vetor r recebido no destino e o vetor transmitido c, ou seja,

e = r − c.

Exemplo 2.59. Suponha que tenhamos transmitido a palavra (1, 1, 0, 0, 1, 1) de um c´odigo

linear C sobre F2 e recebido a palavra (1, 1, 0, 1, 0, 1). Neste caso o vetor erro ´e

e = (1, 1, 0, 1, 0, 1) − (1, 1, 0, 0, 1, 1) = (1 − 1, 1 − 1, 0 − 0, 1 − 0, 0 − 1, 1 − 1) = (0, 0, 0, 1, 1, 0).

Observe que neste caso o vetor erro tem peso 2, que ´e exatamente a quantidade de

erros que ocorreu no processo de transmiss˜ao. Este fato ´e v´alido no geral . Al´em disso,

o vetor erro e a palavra recebida est˜ao associado ao mesmo vetor s´ındrome. Observe que

dado um c´odigo linear C e uma matriz teste de paridade H, temos que

HeT = H(r − c)T = H(rT − cT ) = HrT − HcT = HrT − 0 = HrT .

A seguir apresentamos a proposi¸c˜ao que permitir´a construir um algoritmo para corre¸c˜ao

de erros.

Proposi¸c˜ao 2.60. Seja C um c´odigo linear contido em F n com capacidade de corre¸c˜ao
t. Se r ∈ F n e c ∈ C s˜ao tais que d(c, r) ≤ t, ent˜ao existe um ´unico vetor e com ω(e) ≤ t,

cuja s´ındrome ´e igual `a s´ındrome de r e tal que c = r − e.

Demonstra¸c˜ao. Considere o vetor e = r − c. Segue da Proposi¸c˜ao 2.36 que ω(e) = ω(r −

c) = d(r, c) ≤ t, mostrando assim a existˆencia do vetor e satisfazendo as condi¸c˜oes da

proposi¸c˜ao. Provemos ent˜ao a unicidade. Suponha que existam vetores e = (a1, a2, · · · , an)
e e(cid:48) = (b1, b2, · · · , bn) diferentes, com s´ındromes iguais `a de r e tais que ω(e) ≤ t e ω(e(cid:48)) ≤ t.
Seja H uma matriz teste de paridade do c´odigo C com colunas C1, C2, · · · , Cn. Como e e

43

e(cid:48) tˆem a mesma s´ındrome, devemos ter

HeT = He(cid:48)T ⇔ a1C1 + a2C2 + · · · + anCn = b1C1 + b2C2 + bnCn

⇔ (a1C1 + a2C2 + · · · + anCn) − (b1C1 + b2C2 + bnCn) = 0
⇔ a1C1 − b1C1 + a2C2 − b2C2 + · · · + anCn − bnCn = 0
⇔ (a1 − b1)C1 + (a2 − b2)C2 + · · · + (an − bn)Cn = 0.

Como ω(e) ≤ t e ω(e(cid:48)) ≤ t, existem no m´aximo 2t ´ındices i, tais que ai−bi (cid:54)= 0. E portanto,
existe um conjunto formado por 2t ou menos colunas de H linearmente dependentes.

Assim, de acordo a Proposi¸c˜ao 2.56, devemos ter ω(C) ≤ 2t. Por outro lado, segue da

Proposi¸c˜ao 1.10 que 2t + 1 ≤ d = ω(C). Temos ent˜ao que, ω(C) ≤ 2t e 2t + 1 ≤ ω(C).
Um absurdo. Portanto, devemos ter e = e(cid:48). Mostrando assim a unicidade e a validez da

igualdade c = r − e.

A partir da proposi¸c˜ao acima podemos recuperar a palavra enviada c em fun¸c˜ao da

palavra recebida r e do vetor erro e. No entanto, precisamos de alguma maneira determinar

o vetor e. Veremos inicialmente como encontrar este vetor no caso em que o erro cometido

´e menor ou igual a um.

Exemplo 2.61. Considere o c´odigo linear C do Exemplo 2.30. Suponha que uma palavra

c tenha sido enviada em determinado momento e devido ao ru´ıdo ocorreu um erro no

processo de transmiss˜ao, de modo que a palavra recebida seja r = (0, 0, 1, 1, 0, 1, 1).

Precisamos ent˜ao determinar a posi¸c˜ao do erro. Seja r−c = e = (x1, x2, x3, x4, x5, x6, x7),

como a palavra foi recebida com apenas um erro, temos ent˜ao apenas um xi (cid:54)= 0, para
i ∈ {1, 2, · · · 7}.

Uma matriz teste de paridade para este c´odigo ´e







H =

1 0 1 0 1 0 1

0 1 1 0 0 1 1

0 0 0 1 1 1 1







.

Denotando os vetores coluna da matriz H por C1, · · · , C7, temos que

HeT =







1 0 1 0 1 0 1

0 1 1 0 0 1 1

0 0 0 1 1 1 1







·


















x1
x2
x3
x4
x5
x6
x7


















= xi · Ci.

44

Pela proposi¸c˜ao anterior, devemos HeT = HrT . Calculando HrT , temos

HrT =







1 0 1 0 1 0 1

0 1 1 0 0 1 1

0 0 0 1 1 1 1







·



































0

0

1

1

0

1

1













0

1

1

=

= 1 ·







.







0

1

1

Comparando os dois resultados, chegamos a conclus˜ao que i = 6 e x6 = 1. De onde

segue que e = (0, 0, 0, 0, 0, 1, 0) e, portanto, a palavra enviada foi,

c = r − e = (0, 0, 1, 1, 0, 1, 1) − (0, 0, 0, 0, 0, 1, 0) = (0, 0, 1, 1, 0, 0, 1).

Em geral, dado um c´odigo linear C sobre um corpo F de comprimento n e com distˆancia

m´ınima d ≥ 3, para realizar a corre¸c˜ao de uma palavra que seja recebida com no m´aximo

um erro, podemos utilizar a estrat´egia do exemplo anterior. De fato, veja que se a palavra

foi recebida sem erros, temos ω(e) = 0, ou seja, e = (0, 0, · · · , 0). Da´ı, r = c. E caso

ocorra um erro, teremos ω(e) = 1, logo, o vetor erro ser´a do tipo e = (0, · · · , xi, · · · , 0),
para algum i ∈ 1, 2, · · · , n. Assim,

HrT = HeT = 0 · C1 + · · · + x1 · Ci + · · · + 0 · Cn = xi · Ci.

E, a partir da´ı, podemos comparar xi · Ci com x0 · Cj para todo x0 ∈ F e j = 1, 2, · · · , n,
e determinar o valor de i e xi.

A estrat´egia apresentada funciona perfeitamente em canais com ocorrˆencia de no

m´aximo um erro, no entanto, em canais que o n´umero de erros aumenta, n˜ao ´e poss´ıvel de-

terminar diretamente a posi¸c˜ao dos erros cometidos. Veremos ent˜ao uma outra estrat´egia

de corre¸c˜ao para palavras recebidas com mais de 1 erro, ou seja, uma estrat´egia para ser

usada em c´odigos com t > 1. Antes disso precisamos de algumas deﬁni¸c˜oes.

Deﬁni¸c˜ao 2.62. Seja C um c´odigo linear sobre o corpo F . Para todo v ∈ F n, deﬁnimos

a classe lateral de v segundo C, como sendo o conjunto,

v + C = {v + c | c ∈ C}.

Deﬁni¸c˜ao 2.63. Um vetor de peso m´ınimo numa classe lateral ´e chamado de vetor l´ıder

dessa classe.

45

Proposi¸c˜ao 2.64. Dois vetores u, v ∈ F n tˆem a mesma s´ındrome se, e somente se,

u ∈ v + C.

Demonstra¸c˜ao. Seja H uma matriz teste de paridade do c´odigo C. Temos ent˜ao que,

HuT = HvT ⇔ HuT − HvT = 0 ⇔ H(uT − vT ) = 0 ⇔ H(u − v)T = 0 ⇔ u − v ∈ C.

E veja que, se u − v ∈ C, ent˜ao v + (u − v) = u ∈ v + C. E, reciprocamente, se u ∈ v + C,

existe c ∈ C tal que u = v + c, assim u − v = c ∈ C. Portanto, u − v ∈ C se, e somente se,

u ∈ v + C.

Proposi¸c˜ao 2.65. Sejam u, v ∈ F n dois vetores e C um c´odigo linear com parˆametros

(n, k, d). Temos ent˜ao as seguintes propriedades em rela¸c˜ao `as classes laterais:

1. u + C = v + C ⇔ u − v ∈ C;

2. (u + C) ∩ (v + C) (cid:54)= ∅ ⇒ u + C = v + C;

3. (cid:83)

v∈F n(v + C) = F n;

4. |(v + C)| = |C| = qk;

5. O n´umero de classes laterais segundo C ´e qn−k.

Demonstra¸c˜ao. :

1. Como C ´e um espa¸co vetorial, temos que o vetor 0 pertence a C, de onde segue que

u ∈ u + C. E dado que u + C = v + C, existe um c ∈ C tal que u = v + c, assim

u − v = c ∈ C. Reciprocamente, se u − v ∈ C, ent˜ao v + (u − v) = u ∈ v + C,

e, pela proposi¸c˜ao anterior, u e v tˆem a mesma s´ındrome. Mas, se u e v tˆem a

mesma s´ındrome, novamente pela proposi¸c˜ao anterior, temos que v ∈ u + C. Assim,

os elementos de u + C e v + C tˆem a mesma s´ındrome, portanto pertencem a uma

mesma classe lateral, de onde segue que, u + C = v + C.

2. Novamente ´e uma aplica¸c˜ao direta da proposi¸c˜ao anterior. De fato, se (u + C) ∩ (v +
C) (cid:54)= ∅, existe um vetor w com a mesma s´ındrome dos vetores u e v. De onde segue

que u + C = v + C.

3. ´E uma igualdade ´obvia, pois, v ∈ F n e v ∈ v + C.

4. Basta observar que v + c (cid:54)= v + c(cid:48), para todo c (cid:54)= c(cid:48), com c, c(cid:48) ∈ C.

5. Dos itens 2 e 4, temos que o n´umero de classes laterais ´e dado por

qn
qk = qn−k.

46

Exemplo 2.66. Considere o c´odigo linear C sobre F2 gerado pela matriz







G =

1 0 0 0 1 1

0 1 0 1 1 0

0 0 1 1 0 1







.

Temos que,

C = {000000, 001101, 010110, 011011, 100011, 101110, 110101, 111000}.

Assim, as classes laterais segundo C s˜ao:

000000 + C = {000000, 001101, 010110, 011011, 100011, 101110, 110101, 111000}

000001 + C = {000001, 001100, 010111, 011010, 100010, 101111, 110100, 111001}

000010 + C = {000010, 001111, 010100, 011001, 100001, 101100, 110111, 111010}

000100 + C = {000100, 001001, 010010, 011111, 100111, 101010, 110001, 111100}

001000 + C = {001000, 000101, 011110, 010011, 101011, 100110, 111101, 110000}

.

010000 + C = {010000, 011101, 000110, 001011, 110011, 111110, 100101, 101000}

100000 + C = {100000, 101101, 110110, 111011, 000011, 001110, 010101, 011000}

000111 + C = {000111, 001010, 010001, 011100, 100100, 101001, 110010, 111111}

Neste caso uma matriz teste de paridade ´e,







H =

0 1 1 1 0 0

1 1 0 0 1 0

1 0 1 0 0 1







.

Temos ent˜ao a tabela abaixo que relaciona classe lateral, s´ındrome e l´ıder de classe.

Classe lateral S´ındrome

000000 + C

000001 + C

000010 + C

000100 + C

001000 + C

010000 + C

100000 + C

000111 + C

000

001

010

100

101

110

011

111

L´ıderes

000000

000001

000010

000100

001000

010000

100000

.

001010, 010001, 100100

Observe que nesse exemplo, a classe lateral 000111 + C tem mais de um l´ıder. Na

pr´oxima proposi¸c˜ao veremos que este fato est´a relacionado com a capacidade de corre¸c˜ao

47

do c´odigo C.

Proposi¸c˜ao 2.67. Seja C ⊂ F n um c´odigo linear com distˆancia m´ınima d. Se u ∈ F n ´e
(cid:3) = t, ent˜ao u ´e o ´unico elemento l´ıder de sua classe lateral.
um vetor tal que ω(u) (cid:54) (cid:2) d−1
2

Demonstra¸c˜ao. Sejam u, v ∈ F n vetores tais que ω(u) (cid:54) t e ω(v) (cid:54) t. Se u e v pertencem

a uma mesma classe lateral, temos u − v ∈ C. Mas veja que,

ω(u − v) (cid:54) ω(u) + ω(v) (cid:54) t + t (cid:54) d − 1.

Como ω(C) = d, devemos ter u − v = 0, logo, u = v. Portanto, u ´e o ´unico elemento l´ıder

de sua classe lateral.

Proposi¸c˜ao 2.68. Seja C ⊂ F n um c´odigo linear com distˆancia m´ınima d e seja r ∈ F n.
Ent˜ao, existe c ∈ C tal que d(r, c) (cid:54) t se, e somente se, existe um vetor e ∈ r + C tal que
ω(e) (cid:54) t. Neste caso, e ´e o vetor erro e a palavra enviada ´e c = r − e.

Demonstra¸c˜ao. Se existe c ∈ C tal que d(r, c) (cid:54) t, temos que −c ∈ C, assim, deﬁnindo
e = r − c = r + (−c), segue que ω(e) = ω(r − c) = d(r, c) (cid:54) t e e ∈ r + C. Reciprocamente,
se existe e ∈ r + C tal que ω(e) (cid:54) t, temos que o vetor c = r − e pertence ao c´odigo C, com

d(r, c) = ω(r − c) = ω(r − (r − e)) = ω(e) ≤ t.

Vejamos agora uma estrat´egia para corre¸c˜ao de palavras recebidas com no m´aximo t

erros.

Inicialmente devemos determinar todos os vetores v ∈ F n, tais que ω(v) ≤ t. Pela

Proposi¸c˜ao 2.67, v ´e o ´unico elemento l´ıder de sua classe. Em seguida, calcular a s´ındrome

de cada elemento v e montar uma tabela com o vetor e a respectiva s´ındrome. Assim,
recebida uma palavra r, podemos calcular a s´ındrome sT = HrT e comparar com as

s´ındromes da tabela. Caso a s´ındrome seja encontrada na tabela, o respectivo vetor v ´e o

elemento l´ıder da sua classe e podemos fazer a corre¸c˜ao c = r − v. Caso a s´ındrome n˜ao

seja encontrada na tabela, n˜ao ser´a poss´ıvel fazer a corre¸c˜ao, pois foram cometidos mais

de t erros.

Exemplo 2.69. (Extra´ıdo de [2]) Considere o c´odigo linear C sobre F2, com parˆametros
(9, 4, 5) e matriz geradora

(cid:34)

G =

1 1 1 1 0 0 0 1 0

0 0 0 1 1 1 1 0 1

(cid:35)

.

Neste caso, o c´odigo tem capacidade de corre¸c˜ao t = (cid:2) d−1
2

(cid:3) = (cid:2) 5−1
2

(cid:3) = 2.

48

Suponha que este c´odigo tenha sido usado para codiﬁcar os comandos de um robˆo,

como segue,

Comando Fonte Codiﬁcando C´odigo do Canal

Norte

Sul

Leste

Oeste

00

10

01

11

(0, 0) · G

(1, 0) · G

(0, 1) · G

(1, 1) · G

000000000

111100010

000111101

111011111.

E suponha que em determinado momento o robˆo tenha recebido a sequˆencia de comandos

abaixo:

000000011 100111101 000000000

111000111

1110000110

000111101.

Vejamos ent˜ao como corrigir os erros e decodiﬁcar esta mensagem.

A partir da matriz teste de paridade

H =


















1 0 0 0 0 0 0 1 0

0 1 0 0 0 0 0 1 0

0 0 1 0 0 0 0 1 0

0 0 0 1 0 0 0 1 1

0 0 0 0 1 0 0 0 1

0 0 0 0 0 1 0 0 1

0 0 0 0 0 0 1 0 1


















,

podemos determinar a s´ındrome dos vetores v ∈ F n, tais que ω(v) ≤ t, e montar a tabela

relacionando os l´ıderes de classe com as s´ındromes.

49

L´ıder

S´ındrome

L´ıder

S´ındrome

000000000

0000000

010000010

1011000

100000000

1000000

010000001

0101111

010000000

0100000

001100000

0011000

001000000

0010000

001010000

0010100

000100000

0001000

001001000

0010010

000010000

0000100

001000100

0010001

000001000

0000010

001000010

1101000

000000100

0000001

001000001

0011111

000000010

1111000

000110000

0001100

000000001

0001111

000101000

0001010

110000000

1100000

000100100

0001001

101000000

1010000

000100010

1110000

100100000

1001000

000100001

0000111

100010000

1000100

000011000

0000110

100001000

1000010

000010100

0000101

100000100

1000001

000010010

1111100

100000010

0111000

000010001

0001011

100000001

1001111

000001100

0000011

011000000

0110000

000001010

1111010

010100000

0101000

000001001

0001101

010010000

0100100

000000110

1111001

010001000

0100010

000000101

0001110

010000100

0100001

000000011

1110111.

Para a primeira palavra r0 = 000000011, recebida pelo robˆo, temos que a s´ındrome s0

´e dada por,

sT
0 = H · r0 =


















1 0 0 0 0 0 0 1 0

0 1 0 0 0 0 0 1 0

0 0 1 0 0 0 0 1 0

0 0 0 1 0 0 0 1 1

0 0 0 0 1 0 0 0 1

0 0 0 0 0 1 0 0 1

0 0 0 0 0 0 1 0 1


















·













































0

0

0

0

0

0

0

1

1


















.


















1

1

1

0

1

1

1

=

Veja que a s´ındrome s0 ´e o ´ultimo elemento da tabela acima, assim, temos o vetor erro

50

e0 = 000000011 e podemos concluir que a primeira palavra enviado foi

c0 = r0 − e0 = 000000011 − 000000011 = 000000000,

que ´e referente a palavra 00 do canal, e portanto, representa o comando Norte. De maneira

an´aloga, temos

Palavra recebida(r) S´ındrome(s) Vetor erro(e) Palavra enviada(c) Comando

000000011

100111101

000000000

111000111

111000110

000111101

1110111

1000000

0000000

0000110

0001001

0000000

000000011

100000000

000000000

000011000

000100100

000000000

000000000

000111101

000000000

111011111

111100010

000111101

Norte

Leste

Norte

Oeste

Sul

Leste

51

Cap´ıtulo 3

Corpo dos N´umeros Complexos

Iniciaremos este cap´ıtulo com um exemplo cl´assico no estudo dos n´umeros complexos.

Como apresentado por [6], este exemplo est´a relacionado com a resolu¸c˜ao de equa¸c˜oes

de grau 3. Considere a equa¸c˜ao do terceiro grau,

x3 − 15x − 4 = 0.

Veja que as solu¸c˜oes desta equa¸c˜ao s˜ao x1 = 4, x2 = −2 +
no s´eculo XVI j´a era conhecida uma f´ormula para resolu¸c˜ao de equa¸c˜oes de grau 3, ou

3 e x3 = −2 −

3. No entanto,

√

√

seja, dada uma equa¸c˜ao da tipo

x3 + px + q = 0,

j´a era sabido que as solu¸c˜oes desta equa¸c˜ao s˜ao dadas por

(cid:115)
3

−

x =

q
2

+

(cid:114)(cid:16) q
2

(cid:17)2

(cid:17)2

+

(cid:16) p
3

+

(cid:115)
3

−

q
2

−

(cid:114)(cid:16) q
2

(cid:17)2

+

(cid:17)2

.

(cid:16) p
3

E aplicando esta f´ormula, obtemos que as solu¸c˜oes da equa¸c˜ao acima s˜ao dadas por,

x = 3(cid:113)

2 +

√

−121 + 3(cid:113)

2 −

√

−121.

Assim, de alguma maneira seria poss´ıvel calcular

√

−121, pois as solu¸c˜oes s˜ao reais. Este

fatos intrigou muitos matem´aticos do s´eculo XVI e motivou o desenvolvimento da teoria

dos n´umeros complexos.

3.1 Adi¸c˜ao e multiplica¸c˜ao em R2

Veremos nesta se¸c˜ao que ´e poss´ıvel deﬁnir uma opera¸c˜ao de adi¸c˜ao e multiplica¸c˜ao no
espa¸co R2 de modo que a estrutura matem´atica resultante seja um corpo.

Considere a estrutura matem´atica (R2, ⊕, (cid:12)) formada pelo conjunto de pares ordenados

52

reais, isto ´e, o conjunto

com as seguintes opera¸c˜oes:

R2 = {(x, y) | x, y ∈ R},

⊕ :

R2 × R2

−→

R2

((x1, y1), (x2, y2))

(cid:55)−→ (x1, y1) ⊕ (x2, y2) = (x1 + x2, y1 + y2).

e,

(cid:12) :

R2 × R2

−→

R2

((x1, y1), (x2, y2))

(cid:55)−→ (x1, y1) (cid:12) (x2, y2) = (x1x2 − y1y2, x1y2 + y1x2).

Vamos ent˜ao mostrar que a estrutura assim deﬁnida ´e um corpo. ´E f´acil de ver que
o conjunto ´e fechado em rela¸c˜ao a opera¸c˜ao de adi¸c˜ao e multiplica¸c˜ao deﬁnidas, isto ´e,
dados dois elementos de R2 o resultado da adi¸c˜ao e da multiplica¸c˜ao desses dois elementos
´e um elemento de R2. Para veriﬁcar as propriedades das opera¸c˜oes considere os elementos

(x1, y1), (x2, y2) e (x3, y3), note que
A1. Associatividade da adi¸c˜ao:

[(x1, y1) ⊕ (x2, y2)] ⊕ (x3, y3) = (x1 + x2, y1 + y2) ⊕ (x3, y3)

= ((x1 + x2) + x3, (y1 + y2) + y3)
= (x1 + (x2 + x3), y1 + (y2 + y3))
= (x1, y1) ⊕ (x2 + x3, y2 + y3)
= (x1, y1) ⊕ [(x2, y2) ⊕ (x3, y3)] .

A2. Comutatividade da adi¸c˜ao:

(x1, y1) ⊕ (x2, y2) = (x1 + x2, y1 + y2)
= (x2 + x1, y2 + y1)
= (x2, y2) ⊕ (x1, y1).

A3. Existˆencia de elemento neutro (chamado zero) para adi¸c˜ao:

(x1, y1) ⊕ (0, 0) = (x1 + 0, y1 + 0)

= (x1, y1).

A4. Existˆencia de elemento inverso (chamado sim´etrico aditivo) para adi¸c˜ao:

(x1, y1) ⊕ (−x1, −y1) = (x1 + (−x1), y1 + (−y1))

= (x1 − x1, y1 − y1)
= (0, 0).

53

M1. Associatividade da multiplica¸c˜ao:

[(x1, y1) (cid:12) (x2, y2)] (cid:12) (x3, y3) = (x1x2 − y1y2, x1y2 + y1x2) (cid:12) (x3, y3)

= ((x1x2 − y1y2)x3 − (x1y2 + y1x2)y3, (x1x2 − y1y2)y3

+(x1y2 + y1x2)x3)

= (x1x2x3 − x1y2y3 − y1x2y3 − y1y2x3, x1x2y3 + x1y2x3

+y1x2x3 − y1y2y3)

= (x1(x2x3 − y2y3) − y1(x2y3 + y2x3), x1(x2y3 + y2x3)

+y1(x2x3 − y2y3))

= (x1, x2) (cid:12) (x2x3 − y2y3, x2y3 + y2x3)
= (x1, y1) (cid:12) [(x2, y2) (cid:12) (x3, y3)] .

M2. Comutatividade da multiplica¸c˜ao:

(x1, y1) (cid:12) (x2, y2) = (x1x2 − y1y2, x1y2 + y1x2)
= (x2x1 − y2y1, x2y1 + y2x1)
= (x2, y2) (cid:12) (x1, y1).

M3. Existˆencia de elemento neutro (chamado unidade) para multiplica¸c˜ao:

(x1, y1) (cid:12) (1, 0) = (x1 · 1 − y1 · 0, x1 · 0 + y1 · 1)

= (x1, y1).

AM. Distributividade da multiplica¸c˜ao com rela¸c˜ao `a adi¸c˜ao:

[(x1, y1) ⊕ (x2, y2)] (cid:12) (x3, y3) = (x1 + x2, y1 + y2) (cid:12) (x3, y3)

= ((x1 + x2)x3 − (y1 + y2)y3, (x1 + x2)y3 + (y1 + y2)x3)
= (x1x3 − y1y3 + x2x3 − y2y3, x1y3 + y1x3 + x2y3 + y2x3)
= (x1, y1) (cid:12) (x3, y3) ⊕ (x1, y1) (cid:12) (x3, y3).

Chegamos ent˜ao a conclus˜ao que (R2, ⊕, (cid:12)) ´e um anel comutativo com unidade. Agora

vamos prova a existˆencia de inverso multiplicativo e concluir que a estrutura ´e um corpo.
Para isto, considere o elemento n˜ao nulo (a, b) ∈ R2, neste caso temos que a (cid:54)= 0 ou b (cid:54)= 0,
assim a2 + b2 (cid:54)= 0. Devemos ent˜ao determinar, caso exista, o elemento (x, y) ∈ R2 de modo

que (a, b) (cid:12) (x, y) = (1, 0). Observe que,

(a, b) (cid:12) (x, y) = (ax − by, ay + bx) = (1, 0),

segue ent˜ao que,

(cid:40)

ax − by = 1

ay + bx = 0.

54

Resolvendo esse sistema, obtemos que,

x =

a
a2 + b2

e

y =

−b
a2 + b2 .

E veja que,

(a, b) (cid:12)

(cid:18) a

a2 + b2 ,

−b
a2 + b2

(cid:19)

=

=

=

(cid:18)

a ·

a

−b
a2 + b2 − b ·
a2 + b2 , a ·
b2
−ba
a2 + b2 +
a2 + b2 ,
(cid:19)
−ba + ba
a2 + b2

(cid:18) a2

a2 + b2 +

(cid:18) a2 + b2
a2 + b2 ,

−b

a2 + b2 + b ·
(cid:19)
ba
a2 + b2

(cid:19)

a
a2 + b2

= (1, 0).

Portanto, todo elemento n˜ao nulo (a, b) ∈ R2 possui inverso multiplicativo, dado por,

(cid:18) a

a2 + b2 ,

−b
a2 + b2

(cid:19)

.

Mostrando assim, que de fato a estrutura (R2, ⊕, (cid:12)) ´e um corpo.

Observe ainda que dado um n´umero real α e elementos (x1, y1), (x2, y2) ∈ R2, utilizando
a multiplica¸c˜ao por escalar usual, isto ´e, α(a, b) = (αa, αb) = (a, b)α, temos a seguinte

propriedade,

α(x1, y1) (cid:12) (x2, y2) = (x1, y1)α (cid:12) (x2, y2) = (x1, y1) (cid:12) α(x2, y2) = (x1, y1) (cid:12) (x2, y2)α.

De fato, basta observar que

α(x1, y1) (cid:12) (x2, y2) = (αx1, αy1) (cid:12) (x2, y2) = (αx1x2 − αy1y2, αx1y2 + αy1x2),

e usar as propriedades comutativa e associativa da multiplica¸c˜ao de n´umeros reais.

Os elementos do conjunto R2 podem ser naturalmente representados no plano car-

tesiano, de modo que as opera¸c˜oes de adi¸c˜ao e multiplica¸c˜ao tenham um signiﬁcado
geom´etrico. Como R2 ´e, tamb´em um espa¸co vetorial, ´e poss´ıvel determinar uma base
ordenada, de modo que todo elemento (a, b) ∈ R2 seja gerado por esta base. Um exemplo

importante ´e a base canˆonica {(1, 0), (0, 1)}. Veja que o vetor (1, 0) ´e a unidade do corpo
(R2, ⊕, (cid:12)). Assim, escrevendo 1 = (1, 0) e i = (0, 1), temos que

i2 = i (cid:12) i = (0, 1) (cid:12) (0, 1) = (0 · 0 − 1, 0 · 1 + 1 · 0) = (−1, 0) = −(1, 0) = −1.

Desta maneira ´e poss´ıvel deﬁnir o corpo (R2, ⊕, (cid:12)), trocando a opera¸c˜ao de adi¸c˜ao ‘⊕’ pela

opera¸c˜ao de adi¸c˜ao coordenada a coordenada ‘+’ e a multiplica¸c˜ao ‘(cid:12)’ pela multiplica¸c˜ao

55

de modo distributivo ‘·’, e acrescentando a propriedade i2 = −1.
De fato, veja que dados dois elementos (x1, y1), (x2, y2) ∈ R2, temos que

(x1, y1) = x1(1, 0) + y1(0, 1) = x1 + y1i

e

(x2, y2) = x2(1, 0) + y2(0, 1) = x2 + y2i.

Assim,

e,

(x1 + y1i) + (x2 + y2i) = (x1 + x2) + (y1 + y2)i

= (x1 + x2)(1, 0) + (y1 + y2)(0, 1)
= (x1 + x2, y1 + y2)
= (x1, y1) ⊕ (x2, y2),

(x1 + y1i) · (x2 + y2i) = x1x2 + x1y2i + y1ix2 + y1iy2i
= x1x2 + y1y2i2 + x1y2i + y1x2i
= x1x2 − y1y1 + x1y2i + y1x2i
= (x1x2 − y1y1) + (x1y2 + y1x2)i
= (x1x2 − y1y1)(1, 0) + (x1y2 + y1x2)(0, 1)
= (x1x2 − y1y1, x1y2 + y1x2)
= (x1, y1) (cid:12) (x2, y2).

Portanto, as opera¸c˜oes ‘+’ e ‘·’ s˜ao equivalentes as opera¸c˜oes ‘⊕’ e ‘(cid:12)’. Este corpo ´e

conhecido como conjunto dos n´umeros complexos, e deﬁnido por,

C = {a + bi | a, b ∈ R, e i2 = −1}.

Veja que,

a + bi ↔ (a, b) = a(1, 0) + b(0, 1).

O subconjunto {a + bi ∈ C | b = 0} pode ser visto como uma c´opia dos n´umeros reais
dentro dos complexos. Desta maneira, temos que R est´a contido em C. O que ´e natural,

uma vez que os pontos do tipo a + 0i est˜ao sobre o eixo Ox do plano cartesiano.

O s´ımbolo i foi utilizado pela primeira vez pelo matem´atico Euler nos estudos dos
√

n´umeros do tipo a + bi, onde i representava

−1. Esta abordagem que ﬁzemos, ´e uma

abordagem atual, visto que no s´eculo XVI ainda n˜ao existiam as estruturas de anel, espa¸co

vetorial e corpo como conhecemos hoje. O conceito de n´umeros complexos demorou s´eculos

para ser consolidado. Na tentativa de resolver a equa¸c˜ao que apresentamos no in´ıcio do

cap´ıtulo, muitos matem´aticos consideraram

−1 como um n´umero conhecido, mas n˜ao

√

tiveram muito sucesso no estudo dos n´umeros complexos. A consolida¸c˜ao dos n´umeros

complexos como conhecemos hoje foi estabelecida pelo matem´atico Carl Friedrich Gauss.

56

3.2 Representa¸c˜ao Geom´etrica dos N´umeros complexos

Nesta se¸c˜ao vamos apresentar mais algumas deﬁni¸c˜oes e propriedades relacionadas aos

n´umeros complexos.

Como vimos na primeira se¸c˜ao deste cap´ıtulo, os n´umeros complexos s˜ao essencialmente

pares ordenados, de modo que podemos represent´a-los no plano cartesiano. Neste caso, o

plano cartesiano ´e conhecido como plano de Argand-Gauss ou plano complexo.

A primeira associa¸c˜ao entre n´umeros complexos e pontos do plano cartesiano foi feita de

forma independente pelos matem´aticos Gauss e Jean Robert Argand. No plano complexo,

o eixo das abscissas Ox ´e chamado de eixo real, e o eixo das ordenadas Oy ´e conhecido
como eixo imagin´ario. Chamaremos os elementos do conjunto C, simplesmente de n´umeros

complexos.

Um n´umero complexo z = a + bi ser´a representado no plano cartesiano pelo ponto

Z = (a, b).

Exemplo 3.1. Na ﬁgura abaixo temos a representa¸c˜ao dos n´umeros complexos z1 = 2+3i,
z2 = −3 + 2i, z3 = −2 − i e z4 = 2 − 2i.

Figura 3.1: Representa¸c˜ao geom´etrica.

Assim como pontos do plano que podem ser divididos em duas componentes (coordena-

das), os n´umeros complexos podem ser divididos em sua parte real e sua parte imagin´aria.

Temos ent˜ao a seguinte deﬁni¸c˜ao:

Deﬁni¸c˜ao 3.2. Seja z = a+bi um n´umero complexo. Os n´umeros reais a e b s˜ao chamados,

respectivamente, de parte real e parte imagin´aria de z, denotadas por:

Re(z) = a

e

Im(z) = b.

57

Com essa representa¸c˜ao geom´etrica ´e poss´ıvel perceber que a soma dos n´umeros com-

plexos z1 = x1 + y1i e z2 = x2 + y2i, ´e equivalente a soma de dois vetores com ponto inicial
(0, 0) e pontos ﬁnais Z1 = (x1, y1) e Z2 = (x2, y2). De modo que a regra do paralelogramo
´e v´alida para a soma de n´umeros complexos, ou seja, a soma de dois n´umeros complexos ´e

determinado pela diagonal do paralelogramo determinado pelo vetores associados a esses

n´umeros. Veja o exemplo abaixo:

Exemplo 3.3. Considere os n´umeros complexos z1 = 4 + i e z2 = 2 + 3i. Temos que,

z1 + z2 = (4 + i) + (2 + 3i) = 6 + 4i.

Que ´e exatamente o ponto ﬁnal do vetor determinado pela soma dos vetores (4, 1) e (2, 3),

como mostra a Figura 3.2.

Figura 3.2: Soma de n´umeros complexos.

Deﬁni¸c˜ao 3.4. Seja z = a + bi um n´umero complexo. Deﬁnimos o conjugado de z como

sendo o n´umero complexo z = a − bi. Geometricamente, z ´e o sim´etrico de z em rela¸c˜ao

ao eixo real, conforme Figura 3.3.

O conjugado do n´umero z = a + bi possui duas propriedades importantes em rela¸c˜ao

a opera¸c˜ao de adi¸c˜ao e multiplica¸c˜ao. Veja que

z + z = (a + bi) + (a − bi) = 2a = 2 · Re(z),

z − z = (a + bi) − (a − bi) = 2bi = 2 · Im(z),

e,

z · z = (a + bi) · (a − bi) = a2 − (bi)2 = a2 + b2.

58

Figura 3.3: Conjugado.

Ou seja, a soma e a multiplica¸c˜ao do complexo z pelo seu conjugado z ´e sempre um n´umero

real.

Proposi¸c˜ao 3.5. Sejam z = a + bi e w = c + di dois n´umeros complexos. A conjuga¸c˜ao

tem as seguintes propriedades:

1. z = 0 se, e somente se, z = 0;

2. z = z, para todo z ∈ C;

3. z = z se, e somente se, z ∈ R;

4. z ± w = z ± w;

5. z · w = z · w;

6. z−1 = z−1, para todo z (cid:54)= 0.

Demonstra¸c˜ao. Considere os n´umeros complexos z = a + bi e w = c + di. Temos ent˜ao

que,

1. z = 0 ⇔ a − bi = 0 + 0i ⇔ a = 0 e b = 0 ⇔ a + bi = 0 ⇔ z = 0.

2. z = a − bi = a − (−bi) = a + bi = z, para todo z ∈ C.

3. z = z ⇔ a + bi = a − bi ⇔ b = −b ⇔ b = 0 ⇔ a + bi = a + 0i ⇔ z = a ⇔ z ∈ R.

4. z ± w = (a ± c) + (b ± d)i = (a ± c) − (b ± d)i = (a − bi) ± (c − di) = z ± w.

5. z · w = (a + bi) · (c + di) = (ac − bd) + (ad + bc)i = (ac − bd) − (ad + bc)i = (ac − bd)

+(−ad − bc)i = z · w.

59

6. Supondo z (cid:54)= 0, temos que, z−1 =

a
a2 + b2 +

−b
a2 + b2 i =

a
a2 + b2 +

b

a2 + b2 i = z−1.

Deﬁni¸c˜ao 3.6. Seja z = a + bi um n´umero complexo. Deﬁnimos o m´odulo de z como

sendo o n´umero real n˜ao negativo |z| =

a2 + b2. O m´odulo de z ´e numericamente igual

√

ao m´odulo do vetor de origem no ponto (0, 0) e extremidade (a, b), como representado na

Figura 3.4.

Figura 3.4: z = a + bi e |z| =

√

a2 + b2.

Veja que podemos usar o m´odulo para calcular a distˆancia entre dois n´umeros com-

plexos. De fato, note que dados dois n´umeros complexos z = a + bi e w = c + di, temos

que

|z − w| = |(a − c) + (b − d)i| =

(cid:112)

(a − c)2 + (b − d)2,

que ´e exatamente a f´ormula para o c´alculo da distˆancia entre dos pontos (a, b) e (c, b) do

plano cartesiano.

Exemplo 3.7. Vamos usar a deﬁni¸c˜ao de distˆancia entre n´umeros complexos para deter-

minar geometricamente os complexos z que satisfazem o sistema abaixo:

(cid:40)

|z − 4| =

√

20

|z + 2| = |z − 6| .

Fazendo z1 = 4 + 0i, z2 = −2 + 0i e z3 = 6 + 0i, podemos reescrever o sistema da seguinte
maneira:

(cid:40)

√

|z − z1| =
|z − z2| = |z − z3| .

20

Veja que a primeira equa¸c˜ao ´e satisfeita pelos complexos z cuja a distˆancia at´e o complexo

z1 ´e constante igual a

√

20. Portanto, a solu¸c˜ao da primeira equa¸c˜ao ´e representada pela

60

√

circunferˆencia de centro z1 e raio
a outra equa¸c˜ao s˜ao equidistantes dos complexos z2 e z3, neste caso, s˜ao os complexos z
que est˜ao sobre a mediatriz do segmento de reta determinado pelos complexos z2 e z3.
Portanto, a solu¸c˜ao do sistema ´e dado pelos pontos de interse¸c˜ao da circunferˆencia com a

20. De modo semelhante, os complexos que satisfazem

mediatriz. Neste caso s˜ao os pontos z4 e z5, como representados na Figura 3.5.

Figura 3.5: Solu¸c˜ao geom´etrica do sistema.

Proposi¸c˜ao 3.8. Sejam z = a + bi e w = c + di dois n´umeros complexos. A conjuga¸c˜ao

tem as seguintes propriedades:

1. z · z = |z|2;

2. |z| = |z| = | − z|;

3. Re(z) ≤ |Re(z)| ≤ |z|;

4. Im(z) ≤ |Im(z)| ≤ |z|;

5. |z · w| = |z| · |w|.

Demonstra¸c˜ao. Considere os n´umeros complexos z = a + bi e w = c + di. Temos ent˜ao

que,

1. z · z = (a + bi) · (a − bi) = a2 − (bi)2 = a2 + b2 = |z|2;

√

2. |z| =

a2 + b2 = (cid:112)a2 + (−b)2 = |z| = (cid:112)a2 + (−b)2 = (cid:112)(−a)2 + (−b)2 = | − z|;

3. Re(z) = a ≤ |a| = |Re(z)| =

√

a2 ≤

√

a2 + b2 = |z|;

61

4. Im(z) = b ≤ |b| = |Im(z)| =

√

b2 ≤

√

a2 + b2 = |z|;

5. |z · w| = (cid:112)|z · w|2 =

(cid:113)

(z · w) · (z · w) = (cid:112)(z · z) · (w · w) = (cid:112)|z|2 · |w|2 = |z| · |w|.

Al´em das propriedades acima, o m´odulo de n´umeros complexos satisfaz a propriedade

da desigualdade triangular, como veremos na proposi¸c˜ao a seguir:

Proposi¸c˜ao 3.9. Sejam z e w dois n´umeros complexos quaisquer, temos ent˜ao que,

|z + w| ≤ |z| + |w|,

valendo a igualdade se, e somente se, um dos n´umeros ´e m´ultiplo escalar real n˜ao negativo

do outro.

Demonstra¸c˜ao. Sejam z e w dois n´umeros complexos quaisquer. Observe que,

|z + w|2 = (z + w) · (z + w)
= (z + w) · (z + w)

= z · z + z · w + w · z + w · w
= |z|2 + z · w + z · w + |w|2
= |z|2 + 2 · Re(z · w) + |w|2
≤ |z|2 + 2 · |Re(z · w)| + |w|2
≤ |z|2 + 2 · |z · w| + |w|2
= |z|2 + 2 · |z| · |w| + |w|2
= |z|2 + 2 · |z| · |w| + |w|2
= (|z| + |w|)2 .

De onde segue que, |z + w| ≤ |z| + |w|.
E, supondo z = αw, com α ∈ R, temos que

|z + w| = |αw + w| = |(α + 1)w| = (α + 1)|w| = α|w| + |w| = |αw| + |w| = |z| + |w|.

3.3 Forma Polar dos N´umeros Complexos

Mudando as coordenadas cartesianas do ponto (a, b) para coordenadas polares, obtemos

o n´umero complexo z = a + bi na sua forma polar

z = r · (cos(θ) + isen(θ)),

62

onde r = |z| =

√

a2 + b2 e θ ´e o ˆangulo que o vetor (a, b) faz com o eixo real medido no

sentido anti-hor´ario. Como as fun¸c˜oes seno e cosseno s˜ao peri´odicas, a representa¸c˜ao polar

do n´umero complexos n˜ao ´e ´unica. Basta observar que,

z = r · (cos(θ) + isen(θ)) = r · (cos(θ + 2kπ) + isen(θ + 2kπ)),

∀ k ∈ Z.

Cada ˆangulo que satisfaz a igualdade acima ´e chamado de argumento do n´umero com-

plexo z. Vamos considerar como argumento principal, ou simplesmente argumento, o

n´umero real θ ∈ [0, 2π[ que satisfaz a igualdade acima. Vejamos ent˜ao como determinar o

argumento principal de um n´umero complexo n˜ao nulo z = a + bi qualquer.

• Se a (cid:54)= 0 e b = 0, temos que z ´e um n´umero real e, portanto, est´a sobre o eixo real,

da´ı, θ = 0 se a > 0 e θ = π se a < 0;

• Se a = 0 e b (cid:54)= 0, temos que z ´e um imagin´ario puro e, portanto, est´a sobre o eixo

imagin´ario, da´ı, θ = π

2 se b > 0 e θ = 3π

2 se b < 0;

• Se a (cid:54)= 0, temos que θ ´e determinado pela equa¸c˜ao;

tan(θ) =

b
a

=

Im(z)
Re(z)

,

e pelo quadrante onde se encontra o ponto (a, b).

Exemplo 3.10. Dado o n´umero complexos z = 1 +

√

3i, temos que,

tan(θ) =

Im(z)
Re(z)

=

√

3
1

(cid:113)

e

|z| =

12 +

√

2
3

= 2.

Logo, o argumento principal de z ´e θ = π

3 . Al´em disso, o ponto (1,
primeiro quadrante, assim, uma representa¸c˜ao polar para o complexo z ´e

√

3) pertence ao

z = 2 ·

(cid:16)

cos

(cid:17)

(cid:16) π
3

+ isen

(cid:17)(cid:17)

.

(cid:16) π
3

Devido a simetria de um n´umero complexo z e seu conjugado z, sendo θ um argumento

para z, temos que −θ ´e um argumento para o complexo z. De fato, dado z = r · (cos(θ) +

isen(θ)), temos que

z = r · (cos(θ) − isen(θ)) = r · (cos(−θ) + isen(−θ)).

A partir da proposi¸c˜ao a seguir veremos uma interpreta¸c˜ao geom´etrica para o produto

de dois n´umeros complexos.

63

Figura 3.6: Forma polar do complexo z = 1 +

√

3i.

Proposi¸c˜ao 3.11. Sejam z1 = r1 · (cos(θ1) + isen(θ1)) e z2 = r2 · (cos(θ2) + isen(θ2)) dois
n´umeros complexos quaisquer. Temos ent˜ao que,

z1 · z2 = r1r2 · (cos(θ1 + θ2) + isen(θ1 + θ2)).

Demonstra¸c˜ao. De fato,

z1 · z2 = r1 · (cos(θ1) + isen(θ1)) · r2 · (cos(θ2) + isen(θ2))

= r1r2 · (cos(θ1)cos(θ2) + cos(θ1)isen(θ2) + isen(θ1)cos(θ2) + isen(θ1)isen(θ2))
= r1r2 · ((cos(θ1)cos(θ2) − sen(θ1)sen(θ2)) + (cos(θ1)sen(θ2) + sen(θ1)cos(θ2)))
= r1r2 · (cos(θ1 + θ2) + isen(θ1 + θ2)).

Exemplo 3.12. Considere os n´umeros complexos z1 =
que,

√

√

z1 · z2 = (

3 + i) · (−2

3 + 2i) = −8 + 0i.

√

3 + i e z2 = −2

√

3 + 2i. Observe

Por outro lado, temos que,

z1 = 2 ·

(cid:16)

cos

(cid:17)

(cid:16) π
6

+ isen

(cid:17)(cid:17)

(cid:16) π
6

(cid:18)

e

z2 = 4 ·

cos

(cid:19)

(cid:18) 5π
6

+ isen

(cid:18) 5π
6

(cid:19)(cid:19)

,

e, pela proposi¸c˜ao anterior,

(cid:18)

z1 · z2 = 2 · 4 ·

cos

(cid:19)

(cid:18) π
6

+

5π
6

+ isen

(cid:19)(cid:19)

(cid:18) π
6

+

5π
6

= 8 · (cos (π) + isen (π)) .

Observe que de fato obtemos o mesmo resultado.

64

Figura 3.7: Multiplica¸c˜ao dos complexos z1 =

√

3 + i e z2 = −2

√

3 + 2i.

Observe que no exemplo anterior o complexo z1 · z2 pode ser obtido geometricamente
por meio de uma transla¸c˜ao, obtendo o complexo 8 · z1, seguida de uma rota¸c˜ao realizada
3, 1) em torno da origem, como mostra a Figura 3.7. No caso em que um dos
no ponto (

√

complexos tem m´odulo igual a 1, o produto entre os complexos z1 e z2 ´e equivalente a uma
rota¸c˜ao, ou seja, dado z0 = r0 · (cos(θ0) + isen(θ0)), com θ0 > 0, para qualquer complexo
z, temos que z0 · z ´e a rota¸c˜ao do complexo z pelo ˆangulo θ0 no sentido anti-hor´ario. Se
θ0 < 0, a rota¸c˜ao ´e no sentido hor´ario.

Utilizando indu¸c˜ao matem´atica ´e poss´ıvel mostrar que,

[r · (cos(θ) + isen(θ))]n = rn · (cos(nθ) + isen(nθ)),

para todo natural n.

Exemplo 3.13. Considere o n´umero complexo z =

z = 1 ·

(cid:16)

cos

(cid:17)

(cid:16) π
3

+ isen

i, temos que

√

3
2

1
2

+

(cid:17)(cid:17)

,

(cid:16) π
3

assim,

z2 = 12 ·

(cid:16)

(cid:16)

2 ·

cos

(cid:17)

π
3

+ isen

(cid:17)(cid:17)

(cid:16)

2 ·

π
3

(cid:32)

= 1 ·

−

(cid:33)

√

3
2

1
2

+

√

3
2

,

1
2

+

= −

z3 = 13 ·

(cid:16)

(cid:16)

3 ·

cos

(cid:17)

π
3

+ isen

(cid:17)(cid:17)

(cid:16)

3 ·

π
3

= 1 · (−1 + 0) = −1 + 0i.

A Figura 3.13 mostra a representa¸c˜ao geom´etrica das demais potˆencias do complexo

n´umero complexos z.

65

Figura 3.8: Potˆencias do complexos z = z =

√

3
2

i.

1
2

+

66

Cap´ıtulo 4

C´odigos Corretores via Quat´ernios

O conjunto dos quat´ernios, com as deﬁni¸c˜oes de adi¸c˜ao e multiplica¸c˜ao a serem deﬁ-
nidas, introduzem no espa¸co euclidiano R4 uma estrutura alg´ebrica similar `a estrutura
dos n´umeros complexos no plano R2. Os quat´ernios foram descobertos em 1843, pelo

matem´atico irlandˆes William Rowan Hamilton (1805-1865), dez anos ap´os ter obtido o

resultado que os n´umeros complexos determinam uma ´algebra para os pares ordenados de

n´umeros reais de modo que ´e poss´ıvel realizar rota¸c˜oes por meio de multiplica¸c˜oes. Moti-

vado a encontrar uma estrutura semelhante para realizar opera¸c˜oes no espa¸co, Hamilton

fez v´arias tentativas de deﬁnir uma estrutura alg´ebrica para os ternos ordenados de modo

que fosse poss´ıvel realizar rota¸c˜oes, no entanto, chegou a conclus˜ao que n˜ao era poss´ıvel

deﬁnir tal estrutura. A partir da´ı, o matem´atico irlandˆes passou a pensar em n´umeros

com uma entrada real e trˆes imagin´arias, isto ´e, o que hoje conhecemos como quat´ernios

de Hamilton. A base da ´algebra descrita por ele ´e a equa¸c˜ao

i2 = j2 = k2 = ijk = −1,

(4.1)

descoberta pelo pr´oprio matem´atico em 1843 e conhecida como equa¸c˜ao fundamental dos

quat´ernios 18.

A partir da equa¸c˜ao fundamental obtemos a t´abua de multiplica¸c˜ao (Tabela 4) dos

elementos i, j e k. De imediato ´e poss´ıvel perceber que a multiplica¸c˜ao ´e n˜ao comutativa.

·
1
i
j
k

i
1
i
1
i
−1
j −k −1
j
k

k
j
j
k
k −j
i
−i −1

Tabela 4.1: Multiplica¸c˜ao dos elementos da base.

As principais referˆencias que utilizamos nesta se¸c˜ao foram: [1], [3], [4], [12], [17] e [18].

67

4.1 Deﬁni¸c˜oes e resultados b´asicos

Seja R o corpo dos n´umeros reais. Denotamos por {1, i, j, k} a base canˆonica do espa¸co R4,

ou seja, a base {(1, 0, 0, 0); (0, 1, 0, 0); (0, 0, 1, 0); (0, 0, 0, 1)}. Desta maneira, um elemento
q = (q0, q1, q2, q3) ∈ R4, pode ser escrito na forma q = q0 + q1i + q2j + q3k. A partir da´ı,
dados q = q0 + q1i + q2j + q3k, p = p0 + p1i + p2j + p3k ∈ R4 e α ∈ R, deﬁnimos a opera¸c˜ao
de adi¸c˜ao de modo usual e a de multiplica¸c˜ao de modo distributivo, respeitando a equa¸c˜ao

fundamental dos quat´ernios (4.1), isto ´e,

αq + p = (αq0 + p0) + (αq1 + p1)i + (αq2 + p2)j + (αq3 + p3)k ∈ R4,

e

p · q = (q0 + q1i + q2j + q3k) · (p0 + p1i + p2j + p3k)

= (q0p0 + q0p1i + q0p2j + q0p3k) + (q1ip0 + q1ip1i + q1ip2j + q1ip3k)

(q2jp0 + q2jp1i + q2jp2j + q2jp3k) + (q3kp0 + q3kp1i + q3kp2j + q3kp3k)

= (q0p0 + q0p1i + q0p2j + q0p3k) + (q1p0i + q1p1i2 + q1p2ij + q1p3ik)

(q2p0j + q2p1ji + q2p2j2 + q2p3jk) + (q3p0k + q3p1ki + q3p2kj + q3p3k2)

= (q0p0 + q0p1i + q0p2j + q0p3k) + (q1p0i − q1p1 + q1p2k − q1p3j)
(q2p0j − q2p1k − q2p2 + q2p3i) + (q3p0k + q3p1j − q3p2i − q3p3)

= (q0p0 − q1p1 − q2p2 − q3p3) + (q0p1 + q1p0 + q2p3 − q3p2)i+

(q0p2 − q1p3 + q2p0 + q3p1)j + (q0p3 + q1p2 − q2p1 + q3p0)k ∈ R4.

Vejamos agora algumas propriedades em rela¸c˜ao a adi¸c˜ao. Considere,

q = q0 + q1i + q2j + q3k, p = p0 + p1i + p2j + p3k, r = r0 + r1i + r2j + r3k ∈ R4,

temos que,

q + (p + r) = q0 + q1i + q2j + q3k + (p0 + r0) + (p1 + r1)i + (p2 + r2)j + (p3 + r3)k

= (q0 + p0 + r0) + (q1 + p1 + r1)i + (q2 + p2 + r2)j + (q3 + p3 + r3)k
= (q0 + p0) + (q1 + p1)i + (q2 + p2)j + (q3 + p3)k + r0 + r1i + r2j + r3k
= (q + p) + r.

E,

q + p = (q0 + p0) + (q1 + p1)i + (q2 + p2)j + (q3 + p3)k
= (p0 + q0) + (p1 + q1)i + (p2 + q2)j + (p3 + q3)k
= p + q.

68

Sejam 0H = 0 + 0i + 0j + 0k, −q = −q0 − q1i − q2j − q3k ∈ R4. Segue ent˜ao que

q + 0H = (q0 + 0) + (q1 + 0)i + (q2 + 0)j + (q3 + 0)k

= q0 + q1i + q2j + q3k
= q,

e

q + (−q) = (q0 − q0)(q1 − q1)i + (q2 − q2)j + (q3 − q3)k

= 0 + 0i + 0j + 0k

= 0H.

Apesar de n˜ao comutativa, a multiplica¸c˜ao deﬁnida acima goza de algumas proprie-

dades importantes. Vejamos primeiro um maneira alternativa para a deﬁni¸c˜ao da multi-

plica¸c˜ao usando conceitos de Geometria Anal´ıtica.

Proposi¸c˜ao 4.1. Dados q = q0 + q1i + q2j + q3k, p = p0 + p1i + p2j + p3k ∈ R4, podemos
deﬁnir a multiplica¸c˜ao q · p da seguinte maneira

q · p = q0p0 − (cid:126)q ∗ (cid:126)p + q0(cid:126)p + p0(cid:126)q + (cid:126)q × (cid:126)p.

Onde, (cid:126)q = (q1, q2, q3), (cid:126)p = (p1, p2, p3), “ ∗ ” representa o produto interno e “ × ” representa
o produto vetorial.

Demonstra¸c˜ao.

p · q = (q0 + q1i + q2j + q3k) · (p0 + p1i + p2j + p3k)

= (q0p0 − q1p1 − q2p2 − q3p3) + (q0p1 + q1p0 + q2p3 − q3p2)i+
(q0p2 − q1p3 + q2p0 + q3p1)j + (q0p3 + q1p2 − q2p1 + q3p0)k

= (q0p0 − (q1p1 + q2p2 + q3p3)) + (q0p1i + q0p2j + q0p3k)+

(p0q1i + p0q2j + p0q3k) + (q2p3i + q3p1j + q1p2k − p2q3i − p3q1 − p1q2k)

= (q0p0 − (cid:126)q ∗ (cid:126)p) + q0(cid:126)p + p0(cid:126)q + (cid:126)q × (cid:126)p.

Note que na express˜ao q · p = (q0p0 − (cid:126)q ∗ (cid:126)p) + q0(cid:126)p + p0(cid:126)q + (cid:126)q × (cid:126)p, cometemos um abuso de
nota¸c˜ao, n˜ao faz muito sentido somar um n´umero real com um elemento do R3. Usando

a nota¸c˜ao q = q0 + q1i + q2j + q3k = q0 + ˆq, temos as seguintes deﬁni¸c˜oes:

• q0 representa a parte real de q e denota-se por Re(q);

• ˆq = q1i + q2j + q3k representa a parte vetorial (parte imagin´aria) de q e denota-se

por Im(q) ou Vec(q);

• (cid:126)q = (q1, q2, q3) representa o vetor de R3 associado a parte vetorial de q. Assim,

qualquer elemento q pode ser escrito como q = q0 + (cid:126)q.

69

• se Re(q) = 0, dizemos que q ´e um elemento imagin´ario puro de R4.

Podemos ent˜ao representar um elemento q = q0 + q1i + q2j + q3k ∈ R4 utilizando sua

parte real e sua parte imagin´aria da seguinte maneira q = (q0, (cid:126)q).

Provemos agora que a multiplica¸c˜ao ´e associativa. Considerando

q = q0 + q1i + q2j + q3k, p = p0 + p1i + p2j + p3k, r = r0 + r1i + r2j + r3k ∈ R4,

temos que

q · (p · r) = (q0, (cid:126)q) · (p0r0 − (cid:126)p ∗ (cid:126)r, p0(cid:126)r + r0(cid:126)p + (cid:126)p × (cid:126)r)

= (q0(p0r0 − (cid:126)p ∗ (cid:126)r) − (cid:126)q ∗ (p0(cid:126)r + r0(cid:126)p + (cid:126)p × (cid:126)r), q0(p0(cid:126)r + r0(cid:126)p + (cid:126)p × (cid:126)r)) +

(p0r0 − (cid:126)p ∗ (cid:126)r)(cid:126)q + (cid:126)q × (p0(cid:126)r + r0(cid:126)p + (cid:126)p × (cid:126)r)

= (q0p0r0 − q0(cid:126)p ∗ (cid:126)r − (cid:126)q ∗ p0(cid:126)r − (cid:126)q ∗ r0(cid:126)p + (cid:126)q ∗ ((cid:126)p × (cid:126)r), q0p0(cid:126)r + q0r0(cid:126)p+
q0(cid:126)p × (cid:126)r + p0r0(cid:126)q − ((cid:126)p ∗ (cid:126)r)(cid:126)q + (cid:126)q × p0(cid:126)r + (cid:126)q × r0(cid:126)p + (cid:126)q × (cid:126)p × (cid:126)r)
= (q0p0r0 − q0(cid:126)p ∗ (cid:126)r − (cid:126)q ∗ p0(cid:126)r − (cid:126)q ∗ r0(cid:126)p + (cid:126)q ∗ ((cid:126)p × (cid:126)r), q0p0(cid:126)r + q0r0(cid:126)p+

q0(cid:126)p × (cid:126)r + p0r0(cid:126)q − ((cid:126)p ∗ (cid:126)r)(cid:126)q + (cid:126)q × p0(cid:126)r + (cid:126)q × r0(cid:126)p + ((cid:126)q ∗ (cid:126)r)(cid:126)p − ((cid:126)q ∗ (cid:126)p)(cid:126)r)

e

(q · p) · r = (q0p0 − (cid:126)q ∗ (cid:126)p, q0(cid:126)p + p0(cid:126)q + (cid:126)q × (cid:126)p) · (r0, (cid:126)r)

= (q0p0r0 − (cid:126)q ∗ (cid:126)pr0 − q0(cid:126)p ∗ (cid:126)r − p0(cid:126)q ∗ (cid:126)r − ((cid:126)q × (cid:126)p) ∗ (cid:126)r, q0p0(cid:126)r − ((cid:126)q ∗ (cid:126)p)(cid:126)r+

r0q0(cid:126)p + r0p0(cid:126)q + r0(cid:126)q × (cid:126)p + q0(cid:126)p × (cid:126)r + p0(cid:126)q × (cid:126)r + (cid:126)q × (cid:126)p × (cid:126)r)

= (q0p0r0 − (cid:126)q ∗ (cid:126)pr0 − q0(cid:126)p ∗ (cid:126)r − p0(cid:126)q ∗ (cid:126)r − ((cid:126)q × (cid:126)p) ∗ (cid:126)r, q0p0(cid:126)r + q0r0(cid:126)p+

+r0p0(cid:126)q − ((cid:126)q ∗ (cid:126)p)(cid:126)r + r0(cid:126)q × (cid:126)p + q0(cid:126)p × (cid:126)r + p0(cid:126)q × (cid:126)r + ((cid:126)q ∗ (cid:126)r)(cid:126)p − ((cid:126)q ∗ (cid:126)p)(cid:126)r)

= (q0p0r0 − q0(cid:126)p ∗ (cid:126)r − (cid:126)q ∗ p0(cid:126)r − (cid:126)q ∗ r0(cid:126)p + (cid:126)q ∗ ((cid:126)p × (cid:126)r), q0p0(cid:126)r + q0r0(cid:126)p+

q0(cid:126)p × (cid:126)r + p0r0(cid:126)q − ((cid:126)p ∗ (cid:126)r)(cid:126)q + (cid:126)q × p0(cid:126)r + (cid:126)q × r0(cid:126)p + ((cid:126)q ∗ (cid:126)r)(cid:126)p − ((cid:126)q ∗ (cid:126)p)(cid:126)r).

Comparando as duas igualdades acima, conclu´ımos que vale a associatividade, ou seja,

que q · (p · r) = (q · p) · r.

Al´em da propriedade associativa, a multiplica¸c˜ao junto com a adi¸c˜ao satisfazem as leis

distributivas, isto ´e,

q · (p + r) = (q0, (cid:126)q) · (p0 + r0, (cid:126)p + (cid:126)r)

= (q0(p0 + r0) − (cid:126)q ∗ ((cid:126)p + (cid:126)r), q0((cid:126)p + (cid:126)r) + (p0 + r0)(cid:126)q + (cid:126)q × ((cid:126)p + (cid:126)r))
= (q0p0 − (cid:126)q ∗ (cid:126)p + q0r0 − (cid:126)q ∗ (cid:126)r, q0(cid:126)p + p0(cid:126)q + (cid:126)q × (cid:126)p + q0(cid:126)r + r0(cid:126)q + (cid:126)q × (cid:126)r)
= q · p + q · r,

e modo an´alogo (p + r) · q = p · q + r · q.

Deﬁni¸c˜ao 4.2. Sejam q = q0 + q1i + q2j + q3k ∈ R4. O conjugado de q, denotado por ¯q,

70

´e deﬁnido da seguinte maneira

¯q = q0 − q1i − q2j − q3k = q0 − ˆq = (q0, −(cid:126)q).

Observe que,

q · ¯q = (q0, (cid:126)q) · (q0, −(cid:126)q)

= (q0q0 + (cid:126)q ∗ (cid:126)q, −q0(cid:126)q + q0(cid:126)q + (cid:126)q × (−(cid:126)q))
2 + q2
= (q2
2 + q2
= q2
3

1 + q2
1 + q2

0 + q2
0 + q2

3,(cid:126)0)

≥ 0,

sendo a igualdade verdadeira apenas quando q0 = q1 = q2 = q3 = 0, ou seja, apenas no
caso em que q = 0H. Da mesma forma, ¯q · q = q2

0 + q2

1 + q2

2 + q2
3.

Deﬁni¸c˜ao 4.3. Seja q = q0 + q1i + q2j + q3k ∈ R4, um quat´ernio. Deﬁnimos a norma
reduzida e o m´odulo de q, respectivamente, por

Nred(q) = q0

2 + q1

2 + q2

2 + q3

2

e

(cid:107)q(cid:107) = (cid:112)Nred(q).

Estamos prontos para ver mais duas propriedades da multiplica¸c˜ao, a existˆencia da
unidade multiplicativa 1H = 1+0i+0j +0k = (1,(cid:126)0) e a existˆencia do inverso multiplicativo
q−1 =

¯q
(cid:107)q(cid:107)2 de um elemento q (cid:54)= 0. Observe que,

q · 1H = (q0, (cid:126)q) · (1,(cid:126)0)

= (q01 + (cid:126)q ∗ (cid:126)0, q0(cid:126)0 + 1(cid:126)q + (cid:126)q × (cid:126)0)
= (q0, (cid:126)q)
= q
= (1q0 + (cid:126)0 ∗ (cid:126)q, 1(cid:126)q + q0(cid:126)0 + (cid:126)0 × (cid:126)q)
= (1,(cid:126)0) · (q0, (cid:126)q)
= 1H · q.

71

Agora, supondo q (cid:54)= 0, segue que

q ·

¯q
(cid:107)q(cid:107)2 =

=

=

=

1
(cid:107)q(cid:107)2 q · ¯q
1
(cid:107)q(cid:107)2 ¯q · q
1
(cid:107)q(cid:107)2 (q2
1
(cid:107)q(cid:107)2 ((cid:107)q(cid:107)2,(cid:126)0)

0 + q2

1 + q2

2 + q2

3,(cid:126)0)

= (1,(cid:126)0).

Chegamos ent˜ao a conclus˜ao que o espa¸co R4 com as opera¸c˜oes de adi¸c˜ao e mul-

tiplica¸c˜ao deﬁnidas acima tem uma estrutura de anel com unidade. Al´em disso, todo

elemento diferente de zero tem um inverso multiplicativo. Este anel foi descoberto por

Hamilton em 1843 e ´e conhecido como quat´ernios de Hamilton. Denotaremos este anel
por (H, +, ·), ou simplesmente por H.

Al´em das propriedades da estrutura de anel com unidade, os quat´ernios de Hamilton

apresenta v´arias outras propriedades interessantes, veremos agora algumas das proprieda-

des da norma reduzida e da conjuga¸c˜ao de quat´ernios.

Proposi¸c˜ao 4.4. Sejam q = q0 + q1i + q2j + q3k, p = p0 + p1i + p2j + p3k ∈ R4, dois
quat´ernios e α ∈ R um escalar. Ent˜ao,

1. ¯¯q = q;

2. q · p = ¯p · ¯q;

3. q + p = ¯q + ¯p;

4. α · q = α¯q;

5. q · ¯q = ¯q · q.

Demonstra¸c˜ao. Sejam q = q0 +q1i+q2j +q3k = (q0, (cid:126)q), p = p0 +p1i+p2j +p3k = (p0, (cid:126)p) ∈
H, dois quat´ernios e α ∈ R um escalar.

1.

2.

¯¯q = (q0, −(cid:126)q) = (q0, −(−(cid:126)q)) = (q0, (cid:126)q) = q;

¯p · ¯q = (p0, −(cid:126)p) · (q0, −(cid:126)q)

= (p0q0 − (cid:126)p ∗ (cid:126)q, −p0(cid:126)q − q0(cid:126)p + (cid:126)p × (cid:126)q)
= (q0p0 − (cid:126)q ∗ (cid:126)p, −q0(cid:126)p − p0(cid:126)q − (cid:126)q × (cid:126)p)
= (q0p0 − (cid:126)q ∗ (cid:126)p, q0(cid:126)p + p0(cid:126)q + (cid:126)q × (cid:126)p)
= q · p;

72

3.

4.

5.

q + p = (q0 + p0, (cid:126)q + (cid:126)p) = (q0 + p0, −(cid:126)q − (cid:126)p) = ¯q + ¯p;

αq = αq0 − αq1i − αq2j − αq3k = α(q0 − q1i − q2j − q3k) = α¯p;

q · ¯q = Nred(q) = ¯q · q.

Proposi¸c˜ao 4.5. Sejam q = q0 + q1i + q2j + q3k, p = p0 + p1i + p2j + p3k ∈ R4, dois
quat´ernios e α ∈ R um escalar. Ent˜ao,

1. (cid:107)q(cid:107)2 = (cid:107)¯q(cid:107)2;

2. (cid:107)α · q(cid:107)2 = α2 · (cid:107)q(cid:107)2;

3. (cid:107)q · p(cid:107)2 = (cid:107)q(cid:107)2 · (cid:107)p(cid:107)2

Demonstra¸c˜ao. Sejam q = q0 + q1i + q2j + q3k, p = p0 + p1i + p2j + p3k ∈ R4, dois
quat´ernios e α ∈ R um escalar.

1.

2.

3.

(cid:107)q(cid:107)2 = q · ¯q = ¯q · q = ¯q · ¯¯q = (cid:107)¯q(cid:107)2;

(cid:107)α · q(cid:107)2 = (cid:107)αq0 + αq1i + αq2j + αq3k(cid:107)2

= (αq0)2 + (αq1)2 + (αq2)2 + (αq3)2
0 + q2
= α2(q2
= α2 · (cid:107)q(cid:107)2;

2 + q2
3)

1 + q2

(cid:107)q · p(cid:107)2 = q · p · q · p = q · p · ¯p · ¯q = q · (cid:107)p(cid:107)2 · ¯q = q · ¯q · (cid:107)p(cid:107)2 = (cid:107)q(cid:107)2 · (cid:107)p(cid:107)2.

4.2 Representa¸c˜ao matricial

Nesta se¸c˜ao vamos estabelecer uma rela¸c˜ao entre o anel dos quat´ernios de Hamilton, o

anel dos n´umeros complexos e um subanel do anel das matrizes de ordem 2 com entradas
complexas. Antes disso vamos deﬁnir o conjunto dos quat´ernios puros e unit´arios HP

1 por,

HP

1 = {q ∈ H | (cid:107)q(cid:107)2 = 1 e Re(q) = 0}.

73

Observe que dados q = (0, (cid:126)q), p = (0, (cid:126)p) ∈ HP

1 , temos que

(cid:107)q · p(cid:107)2 = (cid:107)q(cid:107)2(cid:107)p(cid:107)2 = 1,

logo q · p ∈ H1, ou seja, pertence ao conjunto dos quat´ernios unit´arios. No entanto,

q · p = (0, (cid:126)q) · (0, (cid:126)p) = (0 − (cid:126)q ∗ (cid:126)p, 0(cid:126)q + 0(cid:126)p + (cid:126)q × (cid:126)p) = (−(cid:126)q ∗ (cid:126)p, (cid:126)q × (cid:126)p),

assim, teremos q · p puro, se (cid:126)q ∗ (cid:126)p = 0, o que acontece se e somente se (cid:126)q e (cid:126)p forem

perpendiculares.

Uma outra propriedade interessante dos quat´ernios puros e unit´arios ´e que seus qua-

drados s˜ao sempre iguais a −1. De fato, dado q ∈ H1, temos que

q2 = q · q = q · ¯¯q = q · −q = −q · ¯q = −(cid:107)q(cid:107)2 = −1.

Sejam C = {a + bi | a, b ∈ R, e i2 = −1}, o anel dos n´umeros complexos, q ∈ HP

1 um

quat´ernio ﬁxo e ϕq uma aplica¸c˜ao entre os an´eis C e H deﬁnida por

ϕq

:

C −→ H

a + bi (cid:55)−→ ϕq(a + bi) = a + bq.

Considere z = a + bi, w = c + di ∈ C. Temos que,

ϕq(z) · ϕq(w) = (a + bq) · (c + dq)

= a · c + a · dq + bq · c + bq · dq

= ac + adq + bcq + bdq · q

= ac + adq + bcq − bd

= ac − bd + adq + bcq

= (ac − bd) + (ad + bc)q

= ϕq(zw)

e

ϕq(z + w) = ϕq ((a + c) + (b + d)i)

= (a + c) + (b + d)q

= a + c + bq + dq

= a + bq + c + dq

= ϕq(z) + ϕq(w).

E observe que,

ϕq(z) = 0 ⇒ a + bq = 0 ⇒ a = −bq ⇒ a = b = 0,

pois a ´e real e −bq ∈ HP .

74

Portanto, a aplica¸c˜ao ϕq preserva a adi¸c˜ao e a multiplica¸c˜ao. Desta maneira, temos
um homomorﬁsmo injetor entre os an´eis C e H. Assim, C pode ser visto como um subanel
de H, basta tomar q = j, por exemplo. Al´em disso, a aplica¸c˜ao ϕq determina um subanel
comutativo de H. De fato, note que

ϕq ((a + bi)(c + di)) = ϕq(a + bi) · ϕq(c + di)
ϕq ((c + di)(a + bi)) = ϕq(c + di) · ϕq(a + bi),

(a + bi)(c + di) = (c + di)(a + bi)

como,

temos,

ϕq(a + bi) · ϕq(c + di) = ϕq(c + di) · ϕq(a + bi).

Seja C2 = {(z, w) | z, w ∈ C} o conjunto de pares ordenados com entradas em C, no

qual deﬁnimos as opera¸c˜oes de adi¸c˜ao “+”e multiplica¸c˜ao “(cid:12)”da seguinte maneira:

(z1, w1) + (z2, w2) = (z1 + z2, w1 + w2)

e

(z1, w1) (cid:12) (z2, w2) = (z1z2 − w1w2, z1w2 + w1z2),

para todos (z1, w1), (z2, w2) ∈ C2. E seja φq uma aplica¸c˜ao entre C2 e H deﬁnida por

φq

:

C2 −→ H

(z, w) (cid:55)−→ φq ((z, w)) = z + w · q,

onde q ∈ HP

1 ´e um quat´ernio ﬁxo.

Considere z1 = a1 + b1i, z2 = a2 + b2i, w1 = c1 + d1i e w2 = c2 + d2i ∈ C. Temos que,

φq ((z1, w1)) + φq ((z2, w2)) = (z1 + w1 · q) + (z2 + w2 · q)

= z1 + z2 + w1 · q + w2 · q
= (z1 + z2) + (w1 + w2) · q
= φq ((z1, w1) + (z2, w2)) .

75

No entanto,

φq ((z1, w1)) · φq ((z2, w2)) = (z1 + w1 · q) · (z2 + w2 · q)

= z1 · z2 + w1 · q · w2 · q + w1 · q · z2 + z1 · w2 · q
= z1z2 + (c1 + d1i) · q · (c2 + d2i) · q + (c1 + d1i) · q

·(a2 + b2i) + z1 · w2 · q

= z1z2 + (c1 · q + d1i · q) · (c2 · q + d2i · q) + (c1 · q

+d1i · q) · (a2 + b2i) + z1w2 · q

= z1z2 + c1 · q · c2 · q + d1i · q · c2 · q + c1 · q · d2i · q

+d1i · q · d2i · q + c1 · q · a2 + d1i · q · a2 + c1 · q · b2i
+d1i · q · b2i + z1w2q

= z1z2 + c1c2 · q2 + d1c2i · q2 + c1d2 · q · i · q

+d1d2 · i · q · i · q + c1a2 · q + d1a2i · q + c1b2q · i
+d1b2i · q · i + z1w2q

= z1z2 − c1c2 − d1c2i + c1d2 · q · i · q + d1d2 · i · q · i · q
+c1a2 · q + d1a2i · q + c1b2q · i + d1b2i · q · i + z1w2q

e

φq ((z1, w1) (cid:12) (z2, w2)) = φq ((z1z2 − w1w2, z1w2 + w1z2))

= (z1z2 − w1w2) + (z1w2 + w1z2) · q
= z1z2 − [(c1c2 + d1d2) + (d1c2 − c1d2)i] + [(c1a2 + d1b2)

+ (d1a2 − c1b2)i] · q + z1w2q

= z1z2 − c1c2 − d1c2i + c1d2i − d1d2 + c1a2q + d1a2i · q

−c1b2i · q + d1b2 · q + z1w2q.

A ﬁm de termos,

φq ((z1, w1)) · φq ((z2, w2)) = φq ((z1, w1) (cid:12) (z2, w2)) ,

´e necess´ario e suﬁciente que,

c1d2i − d1d2 − c1b2i · q + d1d2q = c1d2q · i · q + d1d2i · q · i · q + c1b2q · i + d1b2i · q · i.

Fazendo q = j, temos

c1d2q · i · q = c1d2j · i · j = c1d2(−k) · j = c1d2i
d1d2i · q · i · q = d1d2i · j · i · j = d1d2k · k = −d1d2

c1b2q · i = c1b2(−k) = −c1b2iq

d1b2i · q · i = d1b2i · j · i = d1b2k · i = d1b2j.

76

Assim, para q = j, temos que

φq ((z1, w1)) · φq ((z2, w2)) = φq ((z1, w1) (cid:12) (z2, w2)) ,

logo, neste caso, φj preserva as opera¸c˜oes de adi¸c˜ao e multiplica¸c˜ao, portanto, φj ´e um
homomorﬁsmo entre C2 e H. Al´em disso, dado p = p0 + p1i + p2j + p3k ∈ H, tomando
z = p0 + p1i, w = p2 + p3i ∈ C, temos

φj ((z, w)) = (p0 + p1i) + (p2 + p3i) · j = p0 + p1i + p2j + p3k,

logo a aplica¸c˜ao φj ´e sobrejetora.

Por ﬁm, considerando z = a + bi, w = c + di ∈ C, temos que

φj ((z, w)) = 0 ⇒ a + bi + cj + dk = 0 ⇒ a = b = c = d = 0 ⇒ z = w = 0.

Assim, dados (z1, w1), (z2, w2) ∈ C2,temos que

φj ((z1, w1)) = φj ((z2, w2)) ⇒ φj ((z1, w1)) − φj ((z2, w2)) = 0

⇒ φj ((z1 − z2, w1 − w2) = 0
⇒ (z1, w1) = (z2, w2),

de onde segue que a aplica¸c˜ao φj ´e injetora.

Temos ent˜ao um isomorﬁsmo entre C2 e H, que ser´a denotado por C2 (cid:39) H. O elemento

φj ((z, w)) = z + w · j ´e um quat´ernio na representa¸c˜ao de Cayley-Dickson.

A partir de agora, dado uma quat´ernio q = q0 +q1i+q2j +q3k ∈ H, fazendo z = q0 +q1i,
w = q2 + q3i, podemos reescrever o quat´ernio q na forma q = z + wj, com z, w ∈ C. Logo,
para os quat´ernios q = z1 + w1j e p = z2 + w2j, podemos reescrever as opera¸c˜oes de adi¸c˜ao
e multiplica¸c˜ao de quat´ernios da seguinte maneira

e

Ou seja,

q + p = (z1 + w1j) + (z2 + w2j)
= (z1, w1) + (z2, w2)
= (z1 + z2, w1 + w2)
= (z1 + z2) + (w1 + w2)j

q · p = (z1 + w1j) · (z2 + w2j)
= (z1, w1) (cid:12) (z2, w2)
= (z1z2 − w1w2, z1w2 + w1z2)
= (z1z2 − w1w2) + (z1w2 + w1z2) j.

(z1 + w1j) + (z2 + w2j) = (z1 + z2) + (w1 + w2)j

77

e

(z1 + w1j) · (z2 + w2j) = (z1z2 − w1w2) + (z1w2 + w1z2) j.

Vejamos agora como relacionar quat´ernios e matrizes quadradas de ordem dois com

entradas no anel dos n´umeros complexos.

Considere o subconjunto M H

2 (C) das matrizes M2(C), deﬁnido por

M H

2 (C) =

(cid:40)(cid:34)

(cid:35)

z

w

−w z

(cid:41)

; z, w ∈ C

.

Seja ψ uma aplica¸c˜ao de H em M H

2 , deﬁnida por

z + wj (cid:55)−→ ψ (z + wj) =

(cid:34)

(cid:35)

.

z

w

−w z

(cid:34)

z1
−w1

w1
z1

(cid:35)

(cid:34)

,

z2
−w2

w2
z2

(cid:35)

∈ M H

2 (C),

Dadas as matrizes

temos que,

(cid:34)

z1
−w1

w1
z1

(cid:35)

(cid:34)

−

z2
−w2

w2
z2

(cid:35)

(cid:34)

=

z1 − z2
−(w1 − w2)

w1 − w2
z1 − z2

(cid:35)

∈ M H

2 (C),

e

(cid:34)

z1
−w1

w1
z1

(cid:35)

(cid:34)

·

z2
−w2

w2
z2

(cid:35)

(cid:34)

=

z1z2 − w1w2

z1w2 + w1z2
−(z1w2 + w1z2) z1z2 − w1w2

(cid:35)

∈ M H

2 (C).

Portanto, M H

2 (C) ´e um subanel de M2(C).

Sejam z1 + w1j, z2 + w2j ∈ H, dois quat´ernios na representa¸c˜ao de Cayley-Dickson,

temos que

ψ (z1 + w1j) + ψ (z2 + w2j) =

=

(cid:34)

(cid:34)

(cid:35)

z1
−w1

w1
z1
z1 + z2
−(w1 + w2)

+

(cid:34)

z2
−w2
w1 + w2
z1 + z2

(cid:35)

w2
z2
(cid:35)

= ψ ((z1 + z2) + (w1 + w2)j)
= ψ ((z1 + w1j) + (z2 + w2j))

78

e

ψ (z1 + w1j) · ψ (z2 + w2j) =

(cid:34)

(cid:34)

=

(cid:35)

(cid:34)

(cid:35)

·

z1
−w1

z2
−w2

w1
z1
z1z2 − w1w2

w2
z2
z1w2 + w1z2
−(z1w2 + w1z2) z1z2 − w1w2

(cid:35)

= ψ ((z1z2 − w1w2) + (z1w2 + w1z2)j)
= ψ ((z1 + w1j) · (z2 + w2j)) .

Al´em disso, dada uma matriz

(cid:34)

M =

(cid:35)

z

w

−w z

∈ M H

2 (C),

fazendo q = z + wj ∈ H, temos que ψ ((z + wj)) = M . E mais,

ψ ((z + wj)) = 0 ⇒

(cid:35)

(cid:34)

z

w

−w z

= 0 ⇒ z = w = 0 ⇒ q = 0.

Portanto, ψ ´e um isomorﬁsmo entre H e M H
ser representado por sua matriz associada Q = ψ(q) ∈ M H

2 (C).

2 (C). Assim, um quat´ernio q = z + wj, pode

O anel M H

2 (C) goza de propriedades semelhantes ao conjunto dos quat´ernios H. Vere-

mos a seguir mais algumas rela¸c˜oes entres os quat´ernios e as matrizes M ∈ M H

2 (C).

Proposi¸c˜ao 4.6. Seja Q ∈ M H
q3k ∈ H. Ent˜ao, (cid:107)q(cid:107)2 = det(Q).

2 (C) a matriz associada ao quat´ernio q = q0 + q1i + q2j +

Demonstra¸c˜ao. De fato.

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

q0 + q1i
−q2 + q3i

q2 + q3i
q0 − q1i

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

= (q0 + q1i) · (q0 − q1i) − (−q2 + q3) · (q2 + q3i)

2 + q1

= q0
= (cid:107)q(cid:107)2.

2 + q2

2 + q3

2

Proposi¸c˜ao 4.7. Seja Q ∈ M H
T
q3k ∈ H. Ent˜ao, a representa¸c˜ao matricial do quat´ernio ¯q ´e dada por Q

2 (C) a matriz associada ao quat´ernio q = q0 + q1i + q2j +

.

Demonstra¸c˜ao. Dado q = q0 +q1i+q2j +q3k = z +wj, temos que ¯q = q0 −q1i−q2j −q3k =
(q0 − q1i) − (q2 + q3i)j = ¯z − wj.
Por outro lado, dado

(cid:34)

Q =

(cid:35)

,

z

w

−w z

79

temos

(cid:34)

T
Q

=

¯z

w

−w z

(cid:35)T

(cid:34)

=

(cid:35)

,

¯z −w

w

z

que ´e exatamente a representa¸c˜ao matricial do quat´ernio ¯q.

Corol´ario 4.8. Seja Q ∈ M H
T
H, tal que (cid:107)q(cid:107)2 (cid:54)= 0. Ent˜ao, Q−1 = det(Q)−1 · Q

.

2 (C) a matriz associada ao quat´ernio q = q0+q1i+q2j +q3k ∈

Demonstra¸c˜ao. Temos que,

(cid:16)

Q ·

det(Q)−1 · Q

T (cid:17)

T
= det(Q)−1 · Q · Q

z

w

−w z

(cid:35)

(cid:34)

·

(cid:35)

¯z −w

w

z

z ¯z + ww −zw + wz

(cid:35)

−w¯z + ¯zw ww + zz
(cid:107)z(cid:107)2 + (cid:107)w(cid:107)2
0

0
(cid:107)z(cid:107)2 + (cid:107)w(cid:107)2

(cid:35)

(cid:35)

(cid:107)q(cid:107)2
0

0
(cid:107)q(cid:107)2

det(Q)

0

(cid:35)

0

det(Q)

(cid:34)

(cid:34)

(cid:34)

(cid:34)

(cid:34)

= det(Q)−1 ·

= det(Q)−1 ·

= det(Q)−1 ·

= det(Q)−1 ·

= det(Q)−1 ·

=

(cid:34)

(cid:35)

.

1 0

0 1

T
Como, Q · Q

= Q

T

T
· Q, conclu´ımos que de fato Q−1 = det(Q)−1 · Q

T
Sabemos que (cid:107)q(cid:107)2 = q · q = q · q. Ent˜ao, ´e natural esperar que as matrizes Q e Q

estejam de alguma forma relacionadas com a norma reduzida do quat´ernio q.

Deﬁni¸c˜ao 4.9. (Norma de Frabenius) Seja P ∈ M2(C), deﬁnimos a norma da matriz P
como sendo o n´umero real n˜ao negativo (cid:107)P (cid:107)2 = tr(P P
). Onde tr(P ) representa o tra¸co
da matriz P .

T

Observe que para P =

(cid:35)

(cid:34)

z w

u v

∈ M2(C), temos que

(cid:16)

tr

P P

T (cid:17)

= tr

= tr

(cid:32)(cid:34)

(cid:32)(cid:34)

z w

u v

(cid:35)

(cid:34)

·

z u

w v

(cid:35)(cid:33)

zz + ww zu + wv

uz + vw uu + vv

(cid:35)(cid:33)

= zz + ww + uu + vv
= (cid:107)z(cid:107)2 + (cid:107)w(cid:107)2 + (cid:107)u(cid:107)2 + (cid:107)v(cid:107)2.

80

No caso em que P ∈ M H

2 (C), temos P =

(cid:35)

(cid:34)

z

w

−w z

, assim

(cid:16)

tr

P P

T (cid:17)

= tr

= tr

(cid:32)(cid:34)

(cid:32)(cid:34)

z

w

−w z

(cid:35)

(cid:34)

·

z −w

w

z

(cid:35)(cid:33)

zz + ww −zw + wz

−wz + zw ww + zz

(cid:35)(cid:33)

= zz + ww + ww + zz
= (cid:107)z(cid:107)2 + (cid:107)w(cid:107)2 + (cid:107)w(cid:107)2 + (cid:107)z(cid:107)2
(cid:107)z(cid:107)2 + (cid:107)w(cid:107)2(cid:17)

(cid:16)

= 2
= 2(cid:107)p(cid:107)2,

onde, p = z + wi ∈ H.

Portando, dado um quat´ernio q ∈ H e sua matriz associada Q ∈ M H

2 (C), temos que

T
2(cid:107)q(cid:107)2 = (cid:107)Q(cid:107)2 = tr(QQ

).

Encerraremos esta se¸c˜ao com a proposi¸c˜ao abaixo que justiﬁca a escolha das re-

dundˆancia adicionadas nas palavras c´odigos para o esquema de Alamouti, que ser´a apre-

sentado na Se¸c˜ao 4.3.

Proposi¸c˜ao 4.10. Sejam u, v, r e s n´umeros complexos, com (cid:107)r(cid:107)2 + (cid:107)s(cid:107)2 (cid:54)= 0. Ent˜ao,
existe um ´unico par de n´umeros complexos (z0, w0) que satisfaz a equa¸c˜ao matricial

(cid:104)

u v

(cid:104)

(cid:105)

=

r

s

(cid:34)

(cid:105)

·

(cid:35)

.

z w

−w z

Demonstra¸c˜ao. Dada a equa¸c˜ao matricial

(cid:104)

u v

(cid:104)

(cid:105)

=

r

s

(cid:34)

(cid:105)

·

(cid:35)

,

z w

−w z

temos o seguinte sistema associado a esta equa¸c˜ao

que ´e equivalente ao sistema,

(cid:40)

(cid:40)

u = rz − sw

v = rw + sz

u = rz − sw

v = sz + rw

,

,

81

que por sua vez esta associado a equa¸c˜ao matricial

(cid:35)

(cid:34)

=

(cid:34)

u

v

r −s

s

r

(cid:35)

(cid:34)

·

(cid:35)

.

z

w

E note que,

(cid:35)

(cid:34)

=

(cid:34)

u

v

r −s

s

r

(cid:35)

(cid:34)

·

(cid:35)

z

w

⇔

⇔

⇔

⇔

⇔

(cid:34)

(cid:34)

(cid:34)

(cid:34)

u

v

=

=

(cid:34)

(cid:34)

(cid:16)

=

(cid:35)

(cid:35)

(cid:35)

(cid:34)

ru + sv

−su + rv

ru + sv

−su + rv

ru + sv

−su + rv

(cid:35)

(cid:34)

·

r

s

−s r

(cid:35)

(cid:34)

=

(cid:35)

(cid:34)

·

r

s

−s r

s

(cid:35)

(cid:34)

r −s

rr + ss −rs + sr

−sr + rs
(cid:107)r(cid:107)2 + (cid:107)s(cid:107)2
0
(cid:107)r(cid:107)2 + (cid:107)s(cid:107)2(cid:17)

(cid:35)

z

w
(cid:35)

(cid:35)

(cid:34)

·

(cid:35)

z

w

·

z

w
(cid:35)

z

w

r
(cid:35)

(cid:34)

·

ss + rr

0
(cid:107)r(cid:107)2 + (cid:107)s(cid:107)2
(cid:34)
(cid:35)
1 0

(cid:34)

·

0 1
(cid:35)

.

z

w

1
(cid:107)r(cid:107)2 + (cid:107)s(cid:107)2

ru + sv

−su + rv

(cid:35)

(cid:34)

=

De onde segue que o par ordenado (z0, w0) ´e dado por,

z0 =

ru + sv
(cid:107)r(cid:107)2 + (cid:107)s(cid:107)2

e w0 =

−su + rv
(cid:107)r(cid:107)2 + (cid:107)s(cid:107)2 .

4.3 C´odigo de Alamouti

Nesse exato momento, provavelmente algum aparelho eletrˆonico (computador, celular, te-

levisor) da sua casa acaba de receber um pulso causado por uma onda eletromagn´etica

carregando algum tipo de informa¸c˜ao. Este tipo de comunica¸c˜ao teve seu in´ıcio no s´eculo

XIX com as descobertas de James Clerk Maxwell e Heinrich Hertz sobre campos eletro-

magn´eticos e com a cria¸c˜ao de esta¸c˜oes de r´adio feitas por Guglielmo Marconi e Ferdinand

Braun de formas independentes. No mesmo per´ıodo, houve tamb´em algumas contribui¸c˜oes

do f´ısico Nikola Tesla. Atualmente, com o avan¸co da tecnologia de comunica¸c˜ao sem ﬁo

e com a cria¸c˜ao de aparelhos m´oveis, existe uma grande demanda para o uso das ondas

de r´adio, que trata-se de uma pequena faixa de todas as ondas dispon´ıveis, no entanto,

a banda utiliz´avel deste espectro ´e limitada. Desta maneira, se faz necess´ario realizar

estudos e desenvolver novos m´etodos de modula¸c˜ao a ﬁm de fazer um melhor uso destas

ondas, aumentando o volume e a qualidade dos dados transmitidos. Uma forma de me-

lhorar a qualidade da transmiss˜ao de dados ´e utilizar sistemas com m´ultiplas antenas de

transmiss˜ao e m´ultiplas antenas de recep¸c˜ao de sinal, por´em, esses sistemas necessitam de

82

mais energia que os sistemas convencionais, de modo que existe uma limita¸c˜ao no n´umero

de antenas de recep¸c˜ao. Existem trˆes tipos de conﬁgura¸c˜ao de sistemas com m´ultiplas

antenas, a saber, os sistemas Single Input Multiple Output (SIMO) que usa uma antena

de transmiss˜ao e m´ultiplas antenas de recep¸c˜ao, os sistemas Multiple Input Single Output

(MISO) com m´ultiplas antenas de transmiss˜ao e uma de recep¸c˜ao e os sistemas Multi-

ple Input Multiple Output (MIMO) que opera com m´ultiplas antenas de transmiss˜ao e

m´ultiplas antenas de recep¸c˜ao.

Um grande problema da comunica¸c˜ao sem ﬁo ´e o desvanecimento multipercurso vari´avel

com o tempo. Quando informa¸c˜oes s˜ao transmitidas via cabos, estas viajam em um mesmo

caminho, no entanto, no caso da transmiss˜ao sem ﬁo, um mesmo sinal pode percorrer ca-

minhos diferentes devido aos obst´aculos (casas, montanhas, vegeta¸c˜ao), e muitas vezes

estes sinais podem ser duplicados ou enfraquecidos por difra¸c˜oes e refra¸c˜oes das ondas

portadoras. Um exemplo claro deste tipo de desvanecimento ´e o som da sirene de uma

ambulˆancia, conhecido como efeito Doppler. Quando o transmissor (sirene) ou o receptor

(ouvido) viajam em alta velocidade, ´e poss´ıvel perceber uma altera¸c˜ao no som que chega

at´e nossos ouvidos, isto porque a frequˆencia percebida pode aumentar ou diminuir a de-

pender do sentido do movimento. Neste caso temos um desvanecimento em larga escala.

Uma outra situa¸c˜ao que pode ocorrer ´e uma altera¸c˜ao no som que escutamos da sirene

a depender da posi¸c˜ao em que estamos e dos obst´aculos que est˜ao entre o transmissor e

o receptor, neste caso ocorre uma degrada¸c˜ao do sinal e temos uma desvanecimento de

baixa escala.

Uma maneira de amenizar o enfraquecimento do sinal em um canal sem ﬁo ´e aumentar a

potˆencia na transmiss˜ao e distribuir ampliﬁcadores ao longo dos caminhos que a portadora

percorrer´a, mas isso demanda um custo muito alto e muitas vezes n˜ao ´e vi´avel devido ao

tamanho dos ampliﬁcadores. Uma outra solu¸c˜ao poss´ıvel ´e receber algum tipo de feedback

do destinat´ario em rela¸c˜ao a qualidade do sinal recebido, mas neste caso n˜ao ter´ıamos a

velocidade de comunica¸c˜ao que temos nos dias atuais, pois este processo demanda mais

tempo e consequentemente atraso na transmiss˜ao de uma informa¸c˜ao.

No ﬁnal da d´ecada de 1990 com a padroniza¸c˜ao do Wi-ﬁ e com a grande demanda

por meios de comunica¸c˜ao sem ﬁo com um baixo custo para o mercado, o engenheiro Sia-

vash Alamouti publicou o trabalho intitulado “A simple transmit diversity technique for

wireless communications” [1], no qual foi apresentado um esquema com duas antenas de

transmiss˜ao e N antenas de recep¸c˜ao. Esta t´ecnica apresenta baixa complexidade compu-

tacional e n˜ao necessitava de feedback do receptor para o transmissor. Neste trabalho nos

limitaremos apenas a uma breve apresenta¸c˜ao do C´odigo de Alamouti com duas antenas

de transmiss˜ao e duas antenas de recep¸c˜ao.

O C´odigo de Alamouti foi apresentado em 1998 com o intuito de atender as demandas

do mercado sem a necessidade de reprojetar totalmente os sistemas j´a existentes. Este

83

c´odigo apresenta diversidade de espa¸co e de tempo, isto ´e, as antenas s˜ao separadas por

uma determinada distˆancia e os sinais s˜ao enviados em dois instantes de tempos diferentes.

Assim, o sinal e uma redundˆancia relacionada a este sinal s˜ao transmitidos por antenas

diferentes e em tempos diferentes, desta maneira, mesmo que aconte¸ca algum problema

com uma das antenas em um determinado instantes de tempo, uma c´opia ou pelo me-

nos algo relacionado com o sinal original ser´a enviado pela outra antena. Al´em disso, o

esquema de Alamouti utiliza s´ımbolos pilotos, isto ´e, s´ımbolos previamente determinados

que s˜ao transmitidos periodicamente junto com os sinais, desta maneira, ao receber estes

s´ımbolos o decodiﬁcador ter´a uma estimativa do desvanecimento ocorrido durante a trans-

miss˜ao dos demais sinais naquele per´ıodo de tempo e poder´a determinar os coeﬁcientes de

desvanecimento que ser˜ao utilizados para recuperar os sinais desbotados.

Considerando um esquema com duas antenas de transmiss˜ao (T1 e T2) e duas antenas
de recep¸c˜ao (R1 e R2), temos que no tempo t, a primeira e a segunda antenas enviam,
respectivamente, os sinais z1t e z2t. Esses sinais chegar˜ao at´e as duas antenas de recep¸c˜ao
por meio de diferentes caminhos. Cada uma dessas antenas receber˜ao o sinal da antena

T1 e da antena T2 acrescidos de um ru´ıdo. Desta maneira, temos que os sinais v1t e v2t
recebidos pelas antenas R1 e R2, respectivamente, s˜ao

v1t = h11z1t + h12z2t + n1t
v2t = h21z1t + h22z2t + n2t,

onde hji ´e o coeﬁciente de desvanecimento da antena de transmiss˜ao Ti para a antena de
recep¸c˜ao Rj, e njt denota o ru´ıdo na Rj antena receptora no tempo t. ´E natural supor
que existe um intervalo de tempo no qual o canal seja coerente, isto ´e, os coeﬁcientes hji
permanecem constantes. Existem outros trabalhos que tratam do caso em que o canal n˜ao

´e coerente.

Para estudar o C´odigo de Alamouti vamos supor que seja feita uma transmiss˜ao no

tempo t1 e outra no tempo t2 dentro do intervalo de coerˆencia do canal. Assim, nos tempos
t1 e t2 a antena T1 transmite, respectivamente, os sinais z11, z12 e T2 transmite z21, z22,
conforme ilustrado na Figura 4.1.

Nesse caso a antena R1 recebe, respectivamente, os sinais

v11 = h11z11 + h12z21 + n11
v12 = h11z12 + h12z22 + n12.

E de modo semelhante, a antena R2 recebe os sinais

v21 = h21z11 + h22z21 + n21
v22 = h21z12 + h22z22 + n22.

84

Figura 4.1: Transmiss˜ao sistema MIMO 2×2.

Podemos escrever os sinais recebidos pelas antenas R1 e R2 por meio da equa¸c˜ao matricial

(cid:34)

v11 v12
v21 v22

(cid:35)

(cid:34)

=

h11 h12
h21 h22

(cid:35) (cid:34)

z11
z21

z12
z22

(cid:35)

(cid:34)

+

(cid:35)

.

n11 n12
n21 n22

Veja que neste caso podemos enviar 4 sinais de informa¸c˜ao em uma ´unica transmiss˜ao,

no entanto, diferente do esquema de Alamouti, caso ocorra algum problema em uma das

antenas ou na portadora, o sinal ser´a comprometido e n˜ao teremos condi¸c˜ao de fazer a re-

cupera¸c˜ao do mesmo. Portanto, ´e necess´ario adicionar redundˆancias para ter a capacidade

de recupera¸c˜ao de sinais.

Observe que cada antena Ri recebe no tempo t1 dois sinais enviados de antenas di-
ferentes e o mesmo acontece no tempo t2. Para analisar como adicionar redundˆancias,
vamos ﬁxar apenas a antena R1 (caso 2×1 de Alamouti), assim, os sinais recebidos s˜ao
dados por

(cid:104)

v11 v12

(cid:105)

(cid:104)

=

h11 h12

(cid:34)

(cid:105)

z11
z21

z12
z22

(cid:35)

(cid:104)

+

n11 n12

(cid:105)

.

Exemplo 4.11. Uma maneira de acrescentar redundˆancia ´e repetir os sinais, ou seja,

poder´ıamos enviar os sinais z e w no tempo t1 e no tempo t2 enviar os mesmos sinais
apenas alterando as antenas. Este caso n˜ao funciona. Vamos supor que em determinado

momento os coeﬁcientes de desvanecimento do canal sejam h11 = 1 + 0i, h12 = −1 + 0i e

85

que n11 = n12 = 0 + 0i. Desta maneira, os sinais recebidos s˜ao dados por

ou seja,

Mas note que,

(cid:104)

v11 v12

(cid:105)

(cid:104)

=

1 + 0i −1 + 0i

(cid:34)

(cid:105)

(cid:35)

,

z w

w z

(cid:40)

v11 = z − w
v12 = w − z

.

(cid:40)

v11 = z − w
v12 = w − z

(cid:40)

⇒

v11 = z − w
−v12 = z − w

.

E nesse caso, v11 = −v12 e existem inﬁnitos pares de n´umeros complexos (z0, w0) satisfa-
zendo o sistema. Assim, ´e imposs´ıvel determinar os sinais z e w enviados.

Exemplo 4.12. O problema do Exemplo 4.11 poderia ser resolvido enviando no tempo

t2 o sinal −w no lugar do sinal w. Mas, observe que em um outro momento qualquer, os
coeﬁcientes de desvanecimento poderiam ser alterados para h11 = −1 + 0i, h12 = 0 − i
permanecendo n11 = n12 = 0 + 0i. Assim, os sinais recebidos seriam dados por

ou seja,

Mas note que,

(cid:104)

v11 v12

(cid:104)

(cid:105)

=

−1 + 0i 0 − i

(cid:34)

(cid:105)

(cid:35)

,

z

w

−w z

(cid:40)

v11 = −z + wi
v12 = −w − zi

.

(cid:40)

v11 = −z + wi
v12 = −w − zi

(cid:40)

⇒

v11 = −z + wi
−v12i = −z + wi

.

Chegando assim ao mesmo problema do caso anterior.

A solu¸c˜ao encontrada por Alamouti para n˜ao ter esse tipo de problema foi enviar no

tempo t1, os sinais z e w e no tempo t2 os sinais −w e z, utilizando as antenas T1 e T2,
respectivamente. Desta maneira, os sinais recebidos s˜ao dados por

(cid:104)

v11 v12

(cid:104)

(cid:105)

=

h11 h12

(cid:34)

(cid:105)

(cid:35)

.

z

w

−w z

Assim, supondo que h11 e h12 n˜ao s˜ao ambos nulos, segue da Proposi¸c˜ao 4.10 que ´e
poss´ıvel determinar os sinais z e w enviados. No entanto, no processo de decodiﬁca¸c˜ao

n˜ao podemos usar as solu¸c˜oes encontradas na proposi¸c˜ao devido ao ru´ıdo acrescentado aos

sinais.

86

A codiﬁca¸c˜ao para o canal MIMO com duas antenas de transmiss˜ao e duas antenas
de recep¸c˜ao, consiste em projetar um c´odigo C ⊂ M2(C) em fun¸c˜ao dos dados a serem
transmitidos. Neste caso um C´odigo de Bloco Espa¸co-Tempo (SBTC), pois temos uma

diversidade de tempo e uma diversidade de espa¸co. Assim, deﬁnimos o MIMO-SBTC de

Alamouti com duas antenas de transmiss˜ao e duas antenas de recep¸c˜ao, que denotaremos

por C, como sendo o conjunto

(cid:40)

(cid:34)

C =

X =

(cid:35)

z

w

−w z

(cid:41)

; z, w ∈ C

.

Veja que na primeira linha temos os sinais enviados no tempo t1 pelas antenas T1 e

T2, respectivamente, e na segunda linha temos redundˆancias enviadas no tempo t2.

Figura 4.2: Transmiss˜ao de palavra do c´odigo C.

Considerando agora a transmiss˜ao das palavras z e w utilizando o esquema de Ala-

mouti, como representado na Figura 4.2, temos que os sinais recebidos, respectivamente,

pelas antenas R1 e R2, s˜ao

e

Ou ainda,

v11 = h11z + h12w + n11
v12 = −h11w + h12z + n12

v21 = h21z + h22w + n21
v22 = −h21w + h22z + n22.

(cid:34)

v11 v12
v21 v22

(cid:35)

(cid:34)

=

h11 h12
h21 h22

(cid:35) (cid:34)

z −w

w

z

(cid:35)

(cid:34)

+

(cid:35)

.

n11 n12
n21 n22

87

Observe que cada matriz X do c´odigo C carrega dois sinais de informa¸c˜ao escolhidos

previamente.

Neste trabalho, apenas como ilustra¸c˜ao, vamos considerar a modula¸c˜ao por amplitude

e quadratura (QAM) e a constela¸c˜ao 16-QAM com a codiﬁca¸c˜ao ilustrada na Figura 4.3,

neste caso temos 4 bits por s´ımbolo. Constela¸c˜oes M-QAM: s˜ao n´umeros complexos polares

representados num plano bidimensional de acordo com sua amplitude/ˆangulo. Note que

estes s´ımbolos foram distribu´ıdos na constela¸c˜ao de modo que um ponto e seu vizinho difere

de apenas um bit, no geral, para constela¸c˜oes QAM, os s´ımbolos s˜ao assim distribu´ıdos.

Observe tamb´em que neste caso, dois s´ımbolos que est˜ao sobre uma mesma linha vertical

tˆem sempre os mesmos dois bits iniciais iguais, e o mesmo acorre para os bits ﬁnais de

s´ımbolos sobre uma mesma reta horizontal.

Figura 4.3: Constela¸c˜ao 16-QAM

A modula¸c˜ao QAM ´e feita alterando a fase e amplitude da onda e o sinal s(t) enviado

´e uma combina¸c˜ao de dois sinais ortogonais, dado por

s(t) = SI cos(ωt) + SQsen(ωt).

Onde SI e SQ s˜ao as amplitudes dos sinais SI cos(ωt) e SQsen(ωt), respectivamente. Os
valores de SI e SQ dependem do per´ıodo de repeti¸c˜ao da onda, da distˆancia euclidiana
m´ınima entre dois pontos da constela¸c˜ao e, respectivamente, das componentes x e y do

par ordenado correspondente ao s´ımbolo da constela¸c˜ao que queremos enviar. Dizemos

que o sinal SI cos(ωt) est´a em fase e o sinal SQsen(ωt) est´a em quadratura, ou seja, existe
uma defasagem de 90◦ em rela¸c˜ao a fase dos dois sinais.

88

Na constela¸c˜ao 16-QAM temos que a distˆancia euclidiana m´ınima entre dois pontos ´e

2. Supondo que o per´ıodo de repeti¸c˜ao da portadora tamb´em seja igual a 2, temos que as

amplitudes SI e SQ dependem apenas das coordenadas x e y da constela¸c˜ao. Assim, para
enviar o s´ımbolo 0111, a amplitude da onda em fase e em quadratura ser´a −0, 25 e a fase
ser´a 225◦, e para enviar o s´ımbolo 1100 a amplitude da onda em fase ser´a 0, 25 e da onda
em quadratura 0, 75 e a fase 67◦. No caso de constela¸c˜oes com uma quantidade maior de

pontos, os valores da amplitude e das fases de dois sinais diferentes ﬁcam mais pr´oximos

uns dos outros diﬁcultando assim o processo de corre¸c˜ao.

Em geral as constela¸c˜oes s˜ao representadas no plano complexo, de modo que cada

s´ımbolo est´a associado a um n´umero complexo z = a+bi. No caso da constela¸c˜ao 16-QAM,

temos que os pontos s˜ao determinados pelo produto cartesiano do conjunto {−3, −1, 1, 3}

com ele mesmo. Neste trabalho n˜ao entraremos em detalhes de como obter estas cons-

tela¸c˜oes. Mas, veja que os dois bits iniciais do s´ımbolo est´a associado a parte real do

n´umero complexo e o dois bits ﬁnais a parte imagin´aria.

Exemplo 4.13. Suponha que em determinado momento os s´ımbolos 1100 e 0111 foram

enviados para o transmissor, neste caso, o modulador de sinal recebeu os n´umeros comple-

xos 1+3i e −1−i. E, para utilizar o esquema de Alamouti, gerou os complexos −w = 1−i

e z = 1 − 3i. Assim, no tempo t1 as antenas T1 e T2, respectivamente, enviaram os sinais
referentes aos n´umeros complexos 1 + 3i e −1 − i, e logo em seguida, no tempo t2, envia-
ram os sinais referentes aos complexos −w = 1 − i e z = 1 − 3i. Mas, devido ao ru´ıdo, o
decodiﬁcador do canal forneceu os sinais (cid:101)z = 1, 3 + 2, 7i e (cid:101)w = −0, 7 − 1, 2i.

Figura 4.4: Sinais (cid:101)z = 1, 3 + 2, 7i e (cid:101)w = −0, 7 − 1, 2i fornecidos pelo decodiﬁcador.

89

Uma pergunta natural ´e como recuperar o sinal enviado? Observe que na Figura 4.4
os pontos (cid:101)z e (cid:101)w est˜ao pr´oximos dos pontos z e w, respectivamente. Neste caso eles est˜ao
no interior de um c´ırculo de raio 1 centrado no sinal original. Em geral, para aumentar

a probabilidade de acerto na corre¸c˜ao de um erro desse tipo, escolhemos uma constela¸c˜ao

cuja a distˆancia entre dois sinais quaisquer seja maior ou igual a duas vezes o valor da

variˆancia da interferˆencia. Desta maneira, no processo de corre¸c˜ao podemos escolher a

palavra mais pr´oxima do sinal recebido. Como veremos a seguir, uma maneira de realizar

esse processo ´e usando a norma de Frabenius.

Para utilizar a norma de Frabenius, em um dado momento, ap´os receber a matriz de

sinais V = HX + N , onde H ´e a matriz dos coeﬁcientes de desvanecimento e N ´e a matriz
dos ru´ıdos, o decodiﬁcador precisa obter os elemento do conjunto C(cid:48) = {HX | X ∈ C}, em

seguida usar a norma para comparar a matriz V com todas as matrizes deste conjunto e
por ﬁm escolher aquela que minimiza o valor de (cid:107)V − HX(cid:107)2. Este processo ´e conhecido
como detec¸c˜ao por m´axima verossimilhan¸ca.

Exemplo 4.14. Suponha que em um determinado momento foram transmitidos os sinais

Antena T1 Antena T2

Tempo t1

Tempo t1

1 + 3i

1 − i

−1 − i

1 − 3i

do Exemplo 4.13, e que a matriz recebida foi

(cid:34)

V =

−1, 9 + 1, 8i −1, 7 − 6i

−1, 9 + 0, 3i 1, 9 − 4, 2i

(cid:35)

.

Suponha tamb´em que o estimador de canal tenha determinado

(cid:34)

H =

1 + 1i

1 − i

0 + 1i 1 − 0i

(cid:35)

.

Considere as matrizes

(cid:34)

X1 =

−1 + 3i −1 − i

1 − i −1 − 3i

(cid:35)

(cid:34)

, X2 =

1 + 3i −1 − i

1 − i

1 − 3i

(cid:35)

(cid:34)

e X3 =

1 + 3i

1 − i

−1 − i 1 − 3i

(cid:35)

.

90

Observe que,

(cid:107)V − HX1(cid:107)2 =

=

=

(cid:34)

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:34)

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:34)

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

−1, 9 + 1, 8i −1, 7 − 6i

−1, 9 + 0, 3i 1, 9 − 4, 2i

−1, 9 + 1, 8i −1, 7 − 6i

−1, 9 + 0, 3i 1, 9 − 4, 2i

(cid:35)

(cid:34)

−

(cid:35)

(cid:34)

−

2, 1 + 1, 8i

2, 3 − 2i

0, 1 + 2, 3i 1, 9 − 0, 2i

2
(cid:35)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

1 + 1i

1 − i

(cid:35) (cid:34)

−1 + 3i −1 − i

0 + 1i 1 − 0i

1 − i −1 − 3i

2
(cid:35)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

−4 + 0i −4i − 4

−2 − 2i

0 − 4i

2
(cid:35)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

2, 1 + 1, 8i

2, 3 − 2i

(cid:35) (cid:34)

2, 1 − 1, 8i 0, 1 − 2, 3i

(cid:35)(cid:33)

0, 1 + 2, 3i 1, 9 − 0, 2i

2, 3 + 2i

1, 9 + 0, 2i

16, 94

9.12 − 7, 99i

(cid:35)(cid:33)

9, 12 + 7, 99i

8, 95

(cid:32)(cid:34)

(cid:32)(cid:34)

= tr

= tr

= 25, 89.

Para X2 temos,

(cid:107)V − HX2(cid:107)2 =

=

=

(cid:34)

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:34)

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:34)

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

−1, 9 + 1, 8i −1, 7 − 6i

−1, 9 + 0, 3i 1, 9 − 4, 2i

−1, 9 + 1, 8i −1, 7 − 6i

−1, 9 + 0, 3i 1, 9 − 4, 2i

0, 1 − 0, 2i

0, 3 + 0i

0, 1 + 0, 3i −0, 1 − 0, 2i

(cid:35)

(cid:34)

−

(cid:35)

(cid:34)

−

2
(cid:35)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:35) (cid:34)

1 + 1i

1 − i

(cid:35) (cid:34)

1 + 3i −1 − i

0 + 1i 1 − 0i

1 − i

1 − 3i

2
(cid:35)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

−2 + 2i −6i − 2

−2

2 − 4i

2
(cid:35)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

0, 1 + 0, 2i

0, 1 − 0, 3i

(cid:35)(cid:33)

(cid:32)(cid:34)

(cid:32)(cid:34)

= tr

= tr

= 0, 29.

0, 1 − 0, 2i

0, 3 + 0i

0, 1 + 0, 3i −0, 1 − 0, 2i

0, 3 + 0i −0, 1 + 0, 2i

0, 14

−0, 08 + 0, 01i

(cid:35)(cid:33)

−0, 08 − 0, 01i

0, 15

91

E para X3 segue que,

(cid:107)V − HX3(cid:107)2 =

=

=

(cid:34)

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:34)

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:34)

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

−1, 9 + 1, 8i −1, 7 − 6i

−1, 9 + 0, 3i 1, 9 − 4, 2i

−1, 9 + 1, 8i −1, 7 − 6i

−1, 9 + 0, 3i 1, 9 − 4, 2i

2, 1 − 2, 2i −1, 7 − 2i

2, 1 + 0, 3i −0, 1 − 2, 2i

(cid:35)

(cid:34)

−

(cid:35)

(cid:34)

−

2
(cid:35)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

1 + 1i

1 − i

(cid:35) (cid:34)

1 + 3i

1 − i

0 + 1i 1 − 0i

−1 − i 1 − 3i

2
(cid:35)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

−4 + 4i 0 − 4i

−4 + 0i 2 − 2i

2
(cid:35)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

2, 1 − 2, 2i −1, 7 − 2i

(cid:35) (cid:34)

2, 1 + 2, 2i

2, 1 − 0, 3i

(cid:35)(cid:33)

2, 1 + 0, 3i −0, 1 − 2, 2i

−1, 7 + 2i −0, 1 + 2, 2i

16, 14

8, 32 − 8, 79i

(cid:35)(cid:33)

8, 32 + 8, 79i

9, 35

(cid:32)(cid:34)

(cid:32)(cid:34)

= tr

= tr

= 25, 49.

´E claro que podemos testar todas as matrizes HX e n˜ao encontraremos um valor menor
que 0, 29 para a norma (cid:107)V − HX(cid:107)2, pois, a matriz X2 cont´em os sinais enviados e a taxa
de erro foi pequena.

Apesar de ser eﬁciente, em alguns casos o processo de detec¸c˜ao por m´axima verossi-

milhan¸ca demanda uma quantidade de opera¸c˜oes invi´avel e um custo computacional alto.
Por exemplo, neste caso temos uma total de 162 = 256 matrizes no c´odigo, assim, para

determinar quais foram os sinais enviados, o detector teria que fazer um total de 256 com-

para¸c˜oes. Al´em disso, esse n´umero aumenta a cada vez que aumentamos a quantidade de

pontos da constela¸c˜ao, por exemplo, no caso da constela¸c˜ao 256-QAM ter´ıamos um total
de 2562 = 65536 matrizes, portanto, o decodiﬁcador teria que realizar 65536 compara¸c˜oes,

aumentando o consumo de energia e o tempo necess´ario para ﬁnalizar o processo. Assim,

com o intuito de resolver o problema da quantidade de opera¸c˜oes, seguindo as ideias de

Alamouti, separamos o processo para cada um dos sinais z e w enviados.

Observe que para detectar os sinais z e w que foram enviados, podemos testar todas as

combina¸c˜oes ordenadas (r, s) poss´ıveis de sinais retirados da constela¸c˜ao 16-QAM de modo

que o par (r, s) minimize o valor da express˜ao ∆ abaixo. Assim, estaremos escolhendo,
respectivamente r e s o mais pr´oximo poss´ıvel dos sinais (cid:101)z e (cid:101)w recebidos.

∆ = (cid:107)v11 − h11r − h12s(cid:107)2+(cid:107)v12 + h11s − h12r(cid:107)2+(cid:107)v21 − h21r − h22s(cid:107)2+(cid:107)v22 + h21s − h22r(cid:107)2 .

Utilizando as propriedades da norma de um n´umero complexo, podemos expandir a

92

express˜ao acima. Note inicialmente que,

(cid:107)v11 − h11r − h12s(cid:107)2 = (v11 + h11r − h12s)(v11 − h11r − h12s)
= (v11 − h11r − h12s)(v11 − h11r − h12s)
= (cid:107)v11(cid:107)2 + (cid:107)h11(cid:107)2 (cid:107)r(cid:107)2 + (cid:107)h12(cid:107)2 (cid:107)s(cid:107)2 − v11h11r − v11h12s

−h11rv11 + h11rh12s − h12sv11 + h12sh11r,

e

(cid:107)v12 + h11s − h12r(cid:107)2 = (v12 + h11s − h12r)(v12 + h11s − h12r)
= (v12 + h11s − h12r)(v12 + h11s − h12r)
= (cid:107)v12(cid:107)2 + (cid:107)h11(cid:107)2 (cid:107)s(cid:107)2 + (cid:107)h12(cid:107)2 (cid:107)r(cid:107)2 + v12h11s − v12h12r

+h11sv12 − h11sh12r − h12rv12 − h12rh11s.

De modo an´alogo, temos

(cid:107)v21 − h21r − h22s(cid:107)2 = (cid:107)v21(cid:107)2 + (cid:107)h21(cid:107)2 (cid:107)r(cid:107)2 + (cid:107)h22(cid:107)2 (cid:107)s(cid:107)2 − v21h21r − v21h22s

−h21rv21 + h21rh22s − h22sv21 + h22sh21r,

e

(cid:107)v22 + h21s − h22r(cid:107)2 = (cid:107)v22(cid:107)2 + (cid:107)h21(cid:107)2 (cid:107)s(cid:107)2 + (cid:107)h22(cid:107)2 (cid:107)r(cid:107)2 + v22h21s − v22h22r

+h21sv22 − h21sh22r − h22rv22 − h22rh21s.

Segue ent˜ao que,

∆ = (cid:107)v11(cid:107)2 + (cid:107)v12(cid:107)2 + (cid:107)v21(cid:107)2 + (cid:107)v22(cid:107)2 + (cid:107)h12(cid:107)2 (cid:107)s(cid:107)2 + (cid:107)h11(cid:107)2 (cid:107)s(cid:107)2 + (cid:107)h22(cid:107)2 (cid:107)s(cid:107)2

+ (cid:107)h21(cid:107)2 (cid:107)s(cid:107)2 − v11h12s + h11sv12 − v21h22s + h21sv22 − h12sv11 + v12h11s
−h22sv21 + v22h21s − v11h11r − h12rv12 − v21h21r − h22rv22 − h11rv11 − v12h12r
−h21rv21 − v22h22r + (cid:107)h11(cid:107)2 (cid:107)r(cid:107)2 + (cid:107)h12(cid:107)2 (cid:107)r(cid:107)2 + (cid:107)h21(cid:107)2 (cid:107)r(cid:107)2 + (cid:107)h22(cid:107)2 (cid:107)r(cid:107)2
+h11rh12s + h12sh11r − h11sh12r − h12rh11s + h21rh22s + h22sh21r − h21sh22r
−h22rh21s

= (cid:107)v11(cid:107)2 + (cid:107)v12(cid:107)2 + (cid:107)v21(cid:107)2 + (cid:107)v22(cid:107)2 +
−s (cid:0)h12v11 − h11v12 + h22v21 − h21v22
−r (cid:0)h11v11 + h12v12 + h21v21 + h22v22
(cid:107)h11(cid:107)2 + (cid:107)h12(cid:107)2 + (cid:107)h21(cid:107)2 + (cid:107)h22(cid:107)2(cid:17)
+

(cid:16)

(cid:107)r(cid:107)2 .

(cid:16)

(cid:16)

(cid:107)h12(cid:107)2 + (cid:107)h11(cid:107)2 + (cid:107)h22(cid:107)2 + (cid:107)h21(cid:107)2(cid:17)
(cid:1) − s
(cid:1) − r

h12v11 − h11v12 + h22v21 − h21v22

+h11v11 + h12v12 + h21v21 + h22v22

(cid:107)s(cid:107)2
(cid:17)

(cid:16)

(cid:17)

Mas note que,

(cid:107)v11(cid:107)2 + (cid:107)v12(cid:107)2 + (cid:107)v21(cid:107)2 + (cid:107)v22(cid:107)2 ,

n˜ao depende de r e s. Assim, para minimizar o valor de ∆, podemos minimizar simulta-

93

neamente os valores de ∆s e ∆r, onde

∆s = −s (cid:0)h12v11 − h11v12 + h22v21 − h21v22
(cid:107)h12(cid:107)2 + (cid:107)h11(cid:107)2 + (cid:107)h22(cid:107)2 + (cid:107)h21(cid:107)2(cid:17)

+

(cid:16)

(cid:107)s(cid:107)2 ,

(cid:1) − s

(cid:16)

h12v11 − h11v12 + h22v21 − h21v22

e

∆r = −r (cid:0)h11v11 + h12v12 + h21v21 + h22v22
(cid:107)h11(cid:107)2 + (cid:107)h12(cid:107)2 + (cid:107)h21(cid:107)2 + (cid:107)h22(cid:107)2(cid:17)

+

(cid:16)

(cid:107)r(cid:107)2 .

(cid:1) − r

(cid:16)

h11v11 + h12v12 + h21v21 + h22v22

(cid:17)

(cid:17)

Fazendo,

s(cid:48) = h12v11 − h11v12 + h22v21 − h21v22

e

r(cid:48) = h11v11 + h12v12 + h21v21 + h22v22,

temos,

e

∆s = −ss(cid:48) − ss(cid:48) +

(cid:16)

(cid:107)h12(cid:107)2 + (cid:107)h11(cid:107)2 + (cid:107)h22(cid:107)2 + (cid:107)h21(cid:107)2(cid:17)

(cid:107)s(cid:107)2 ,

∆r = −rr(cid:48) − rr(cid:48) +

(cid:16)

(cid:107)h12(cid:107)2 + (cid:107)h11(cid:107)2 + (cid:107)h22(cid:107)2 + (cid:107)h21(cid:107)2(cid:17)

(cid:107)r(cid:107)2 .

Mas, observe que

2 = (s − s(cid:48))(s − s(cid:48)) = ss − ss(cid:48) − s(cid:48)s + s(cid:48)s(cid:48) = (cid:107)s(cid:107)2 + (cid:13)
(cid:13)s − s(cid:48)(cid:13)
(cid:13)
(cid:13)

(cid:13)s(cid:48)(cid:13)
2 − ss(cid:48) − s(cid:48)s.
(cid:13)

Assim,

E, de modo an´alogo,

Temos ent˜ao,

−ss(cid:48) − s(cid:48)s = (cid:13)

2 − (cid:107)s(cid:107)2 − (cid:13)
(cid:13)s − s(cid:48)(cid:13)
(cid:13)

(cid:13)s(cid:48)(cid:13)
2 .
(cid:13)

−rr(cid:48) − r(cid:48)r = (cid:13)

2 − (cid:107)r(cid:107)2 − (cid:13)
(cid:13)r − r(cid:48)(cid:13)
(cid:13)

(cid:13)r(cid:48)(cid:13)
2 .
(cid:13)

∆s = (cid:13)

2 − (cid:107)s(cid:107)2 − (cid:13)
(cid:13)s − s(cid:48)(cid:13)
(cid:13)

(cid:13)s(cid:48)(cid:13)
2 +
(cid:13)

e

∆r = (cid:13)

2 − (cid:107)r(cid:107)2 − (cid:13)
(cid:13)r − r(cid:48)(cid:13)
(cid:13)

(cid:13)r(cid:48)(cid:13)
2 +
(cid:13)

(cid:16)

(cid:107)h12(cid:107)2 + (cid:107)h11(cid:107)2 + (cid:107)h22(cid:107)2 + (cid:107)h21(cid:107)2(cid:17)

(cid:107)s(cid:107)2 ,

(cid:16)

(cid:107)h12(cid:107)2 + (cid:107)h11(cid:107)2 + (cid:107)h22(cid:107)2 + (cid:107)h21(cid:107)2(cid:17)

(cid:107)r(cid:107)2 .

Como (cid:107)r(cid:48)(cid:107)2 e (cid:107)s(cid:48)(cid:107)2, n˜ao dependem de r e s, para minimizar o valor de ∆, podemos
minimizar simultaneamente, os valores de ∆z e ∆w, onde

∆z = (cid:13)

(cid:13)r − r(cid:48)(cid:13)
2 +
(cid:13)

(cid:16)

(cid:107)h11(cid:107)2 + (cid:107)h12(cid:107)2 + (cid:107)h21(cid:107)2 + (cid:107)h22(cid:107)2 − 1

(cid:17)

(cid:107)r(cid:107)2 ,

94

e

∆w = (cid:13)

(cid:13)s − s(cid:48)(cid:13)
2 +
(cid:13)

(cid:16)

(cid:17)
(cid:107)h11(cid:107)2 + (cid:107)h12(cid:107)2 + (cid:107)h21(cid:107)2 + (cid:107)h22(cid:107)2 − 1

(cid:107)s(cid:107)2 .

Portanto, no processo de decodiﬁca¸c˜ao de Alamouti, o combinador gera os sinais

s(cid:48) = h12v11 − h11v12 + h22v21 − h21v22

e

r(cid:48) = h11v11 + h12v12 + h21v21 + h22v22,

a partir dos sinais v11, v12, v21 e v22 recebidos. Em seguida o detector de m´axima veros-
similhan¸ca procura na constela¸c˜ao os sinais r e s que minimizam os valores de ∆z e ∆w,
respectivamente. E por ﬁm gera as palavras associadas a cada um dos sinais r e s. Este

processo ´e conhecido como detec¸c˜ao por verossimilhan¸ca.

A grande vantagem do processo de detec¸c˜ao por verossimilhan¸ca est´a na simplicidade

do processo e na redu¸c˜ao do n´umero de opera¸c˜oes realizadas pelo decodiﬁcador. Por
exemplo, no caso da constela¸c˜ao 256-QAM que ter´ıamos que fazer um total de 2562 =

65536 compara¸c˜oes, passamos a necessitar de 256 para o sinal r e 256 para o sinal s, que
podem ser feitas simultaneamente. Em geral, para uma constela¸c˜ao 2m-QAM, reduzimos
o n´umero de opera¸c˜oes de m2 para apenas 2m. Por outro lado, observe que esse processo
de corre¸c˜ao utiliza mais fortemente os coeﬁcientes de desvanecimento para gerar r(cid:48) e s(cid:48),

aumentado a dependˆencia no m´etodo em rela¸c˜ao ao desbotamento dos sinais enviados.

Exemplo 4.15. Conside as matriz V e H do Exemplo 4.14, isto ´e, as matrizes

(cid:34)

V =

−1, 9 + 1, 8i −1, 7 − 6i

−1, 9 + 0, 3i 1, 9 − 4, 2i

(cid:35)

e

H =

(cid:34)

1 + 1i

1 − i

0 + 1i 1 − 0i

(cid:35)

.

Neste caso, temos que

s(cid:48) = (1 + i)(−1, 92 + 1, 8i) − (1 + 1i)(−1, 7 + 6i) + (1 + 0i)(−1, 9 + 0, 3i)

−(0 + 1i)(1, 9 + 4, 2i)

= (−3, 7 − 0, 1i) − (−7, 7 + 4, 3i) + (−1, 9 + 0, 3i) − (−4, 2 + 1, 9i)

= 6, 3 − 6i,

e,

r(cid:48) = (1 − i) · (−1, 9 + 1, 8i) + (1 − i) · (−1, 7 + 6i) + (0 − i) · (−1, 9 + 0, 3i)

+ (1 − 0i) · (1, 9 + 4, 2i)

= (−0, 1 + 3, 7i) + (4, 3 + 7, 7i) + (0, 3 + 1, 9i) + (1, 9 + 4, 2i)

= 6, 4 + 17, 5i.

Para detectar os s´ımbolos transmitidos ´e necess´ario testar cada um dos 16 s´ımbolos.

Neste caso, o detector de verossimilhan¸ca gera os valores da Tabela 4.2. Observe que ao

ﬁnal do processo o detector chegar´a a conclus˜ao de que os sinais enviados correspondem

95

aos pontos z = 1+3i e w = 1−1i, respectivamente e, portanto, os s´ımbolos enviados foram

1100 e 1111. Desta maneira, o s´ımbolo 1100 ser´a enviado corretamente para o destino, no

entanto, o s´ımbolo 1111 ser´a recebido com um erro no primeiro bit.

Este exemplo serve para mostrar que o processo de decodiﬁca¸c˜ao e corre¸c˜ao por veros-

similhan¸ca apresenta uma dependˆencia dos coeﬁcientes de desvanecimento. No pr´oximo

exemplo, veremos um caso em que o processo funciona perfeitamente. Normalmente os

canais escolhidos para a transmiss˜ao de uma mensagem apresentam um tipo de desvane-

cimento espec´ıﬁco, no qual o processo de corre¸c˜ao por verossimilhan¸ca funciona com uma

alta probabilidade de acerto.

S´ımbolo Ponto(z)
−3 + 3i
−1 + 3i
1 + 3i
3 + 3i
−3 + 1i
−1 + 1i
1 + 1i
3 + 1i
−3 − 1i
−1 − 1i
1 − 1i
3 − 1i
−3 − 3i
−1 − 3i
1 − 3i
3 − 3i

0000
0100
1100
1000
0001
0101
1101
1001
0011
0111
1111
1011
0010
0110
1110
1010

∆z
388, 61
315, 01
289,41
311, 81
410, 61
337, 01
311, 41
333, 81
480, 61
407, 01
381, 41
403, 81
598, 61
525, 01
499, 41
521, 81

S´ımbolo Ponto(w) ∆w

0000
0100
1100
1000
0001
0101
1101
1001
0011
0111
1111
1011
0010
0110
1110
1010

−3 + 3i
−1 + 3i
1 + 3i
3 + 3i
−3 + 1i
−1 + 1i
1 + 1i
3 + 1i
−3 − 1i
−1 − 1i
1 − 1i
3 − 1i
−3 − 3i
−1 − 3i
1 − 3i
3 − 3i

257, 49
184, 29
159, 09
181, 89
185, 49
112, 29
87, 09
109, 89
161, 49
88, 29
63,09
85, 89
185, 49
112, 29
87, 09
109, 89

Tabela 4.2: Valores gerados no teste do Exemplo 4.15.

Neste trabalho n˜ao entraremos em detalhes em rela¸c˜ao a escolha do canal e os tipos

de desvanecimento, estamos apresentando esta aplica¸c˜ao apenas como um convite para

estudos futuros sobre c´odigos corretores de erros.

Exemplo 4.16. Suponha que em determinado momento os s´ımbolos 1011 e 1111 foram

enviados para o transmissor, neste caso, o modulador de sinal recebeu os n´umeros com-

plexos z = 3 − i e w = 1 − i. E, para utilizar o esquema de Alamouti, gerou os complexos

−w = −1−i e z = 3+i. Assim, no tempo t1 as antenas T1 e T2, respectivamente, enviaram
os sinais referentes aos n´umeros complexos z = 3 − i e w = 1 − i, e logo em seguida, no

tempo t2, enviaram os sinais referentes aos complexos −w = −1 − i e z = 3 + i. Al´em
disso, suponha que

96

(cid:34)

V =

1, 24 + 0, 076i −0, 543 − 3, 206i

−1, 9 + 0, 301i

1, 112 + 2, 525i

(cid:35)

(cid:34)

e H =

0, 5 + 0, 87i

−0, 01 − 0, 1i

−0, 67 − 0, 67 −0, 2 + 0, 035i

(cid:35)

.

Para detectar os s´ımbolos transmitidos o detector de m´axima verossimilhan¸ca gera os

valores da Tabela 4.3. Veja que neste caso, o decodiﬁcador concluir´a corretamente que os

sinais enviados s˜ao referentes aos s´ımbolos 1011 e 1111, respectivamente.

S´ımbolo Ponto(z)
−3 + 3i
−1 + 3i
1 + 3i
3 + 3i
−3 + 1i
−1 + 1i
1 + 1i
3 + 1i
−3 − 1i
−1 − 1i
1 − 1i
3 − 1i
−3 − 3i
−1 − 3i
1 − 3i
3 − 3i

0000
0100
1100
1000
0001
0101
1101
1001
0011
0111
1111
1011
0010
0110
1110
1010

∆z
125, 5021
84, 0621
60, 6221
55, 1821
99, 7021
58, 2621
34, 8221
29, 3821
91, 9021
50, 4621
27, 0221
21,5821
102, 1021
60, 6621
37, 2221
31, 7821

S´ımbolo Ponto(w) ∆w

0000
0100
1100
1000
0001
0101
1101
1001
0011
0111
1111
1011
0010
0110
1110
1010

−3 + 3i
−1 + 3i
1 + 3i
3 + 3i
−3 + 1i
−1 + 1i
1 + 1i
3 + 1i
−3 − 1i
−1 − 1i
1 − 1i
3 − 1i
−3 − 3i
−1 − 3i
1 − 3i
3 − 3i

71, 505
45, 705
37, 905
48, 105
45, 705
19, 905
12, 105
22, 305
37, 905
12, 105
4,305
14, 505
48, 105
22, 305
14, 505
24, 705

Tabela 4.3: Valores gerados no teste do Exemplo 4.16.

97

Cap´ıtulo 5

Proposta de Aplica¸c˜ao no Ensino

M´edio.

Neste cap´ıtulo apresentaremos uma proposta para o trabalho com c´odigos corretores de

erros em uma turma de terceiro ano do Ensino M´edio. Trata-se de uma sequˆencias de

aulas ligadas entre si, com o objetivo de apresentar e explorar os c´odigos corretores para

introduzir v´arios outros conceitos da Matem´atica que descreveremos no decorrer do texto.

A primeira atividade trata-se de uma pequena brincadeira utilizando o WhatsApp

como recurso did´atico e tem como objetivo fazer uma apresenta¸c˜ao inicial sobre distˆancia

de Hamming, redundˆancias e outros conceitos iniciais dos c´odigos corretores de erros. Na

segunda atividade trabalhamos especiﬁcamente com o c´odigo de Hamming (7, 4), apresen-

tamos uma situa¸c˜ao problema na qual os alunos devem utilizar o c´odigo ham(7, 4) para

codiﬁcar os comandos de um determinado robˆo. Na terceira e ´ultima atividade, exploramos

as planilhas eletrˆonicas como ferramenta para fazer simula¸c˜ao de erros e realizar alguns

procedimentos no processo de transmiss˜ao e corre¸c˜ao das palavras no c´odigo ham(7, 4), e

propomos que os alunos utilizem a planilha para resolver os problemas da atividade ante-

rior, de modo que seja poss´ıvel visualizar as vantagens do uso do computador em algumas

tarefas matem´aticas.

5.1 Aula 1 - Corrigindo Erros

Nesta primeira aula o professor deve convidar o aluno a participar da atividade ma-

tem´atica. Este convite pode ser feito com uma breve apresenta¸c˜ao sobre c´odigos corretores

de erros semelhante ao que foi feito no Cap´ıtulo 1 deste trabalho.

• Tema da Aula: Corrigindo erros.

• Conte´udo: C´odigos Corretores de Erros.

98

• Competˆencias da BNCC: COMPETˆENCIA ESPEC´IFICA 1. Utilizar estrat´egias,
conceitos e procedimentos matem´aticos para interpretar situa¸c˜oes em diversos con-

textos, sejam atividades cotidianas, sejam fatos das Ciˆencias da Natureza e Humanas,

das quest˜oes socioeconˆomicas ou tecnol´ogicas, divulgados por diferentes meios, de

modo a contribuir para uma forma¸c˜ao geral.

• Habilidade da BNCC: (EM13MAT106) Identiﬁcar situa¸c˜oes da vida cotidiana nas

quais seja necess´ario fazer escolhas levando-se em conta os riscos probabil´ısticos

(usar este ou aquele m´etodo contraceptivo, optar por um tratamento m´edico em

detrimento de outro etc.).

• Objetivos: Convidar o aluno a reﬂetir sobre o uso da Matem´atica nos c´odigos corre-

tores de erros; Conhecer os c´odigos corretores de erros por meio de exemplos.

• Tempo: 50 minutos.

• Desenvolvimento:

O professor dever´a iniciar a aula com a brincadeira “Teclado Quebrado”, que ´e um

jogo simples, no qual cada equipe dever´a corrigir erros de digita¸c˜ao em uma conversa no

WhatsApp.

Antes de iniciar o jogo, o professor deve dividir a turma em grupos de 4 alunos. Pelo

menos um membro de cada uma das equipes deve ter um smartfone com acesso a internet

no qual esteja instalado o aplicativo do WhatsApp. Em seguida o educador deve criar um

grupo de WhatsApp, no qual ser˜ao enviadas as mensagens, e adicionar um aluno de cada
equipe. ´E importante que os alunos desativem o corretor ortogr´aﬁco do teclado.

Na primeira rodada da disputa, o professor dever´a enviar mensagens no grupo contendo

um erro em alguma das palavras e as equipes dever˜ao fazer a corre¸c˜ao. A equipe que

conseguir corrigir o erro mais rapidamente e reenviar a mensagem no grupo ganha 5
pontos. ´E interesse que as frases iniciais sejam de f´acil corre¸c˜ao e que gradativamente
aumente a diﬁculdade de corre¸c˜ao. Veja alguns exemplos de frases que o professor pode

utilizar:

• O cathorro ´e bravo. (O cachorro ´e bravo);

• Comprei um helular novo. (Comprei um celular novo);

• Cortei o bolo com a maca. (Cortei o bolo com a faca);

• Tenho uma xaca leiteira. (Tenho uma vaca leiteira);

• Qual ´e o pre¸co dessa kala? (Qual ´e o pre¸co dessa mala);

• Na minha casa tem um xato. (Na minha casa tem um pato);

99

Na segunda rodada, com o intuito de deixar a corre¸c˜ao mais dif´ıcil, o professor deve

usar apenas palavras. Neste caso, cada equipe que corrigir a palavra de maneira correta

ganha 10 pontos. Nesta rodada existe a possibilidade de pedir uma dica em rela¸c˜ao a

palavra, no entanto, acertos com uma dica vale apenas a metade dos pontos, ou seja,

apenas 5 pontos. A dica deve ser uma outra palavra que tenha rela¸c˜ao com a palavra

que foi enviada. Esta segunda rodada ´e importante para que os alunos percebam que o

contexto ajuda no processo de corre¸c˜ao das palavras. Veja alguns exemplos de palavras

com erros:

capend´ario(calend´ario); col´eﬁo (col´egio); camepo (camelo); ratal (natal); xovo (novo);

banata(batata); yala (tala); wola (mola);

Na terceira rodada cada equipe dever´a criar uma mensagem com no m´aximo um erro

de digita¸c˜ao em cada palavra e enviar para o professor. As equipes dever˜ao enviar tamb´em

a frase corrigida. Em seguida o professor dever´a enviar todas as mensagens no grupo para
as equipes tentarem corrigir e reenviar. ´E claro que uma equipe n˜ao pode enviar a frase
criada por ela mesma. Caso alguma das mensagens n˜ao seja corrigida pelas equipes, o

grupo que criou a mensagem ﬁcar´a com os 10 pontos da frase.

A partir das estrat´egias apresentadas pelos alunos para realizar o processo de corre¸c˜ao

das frases e palavras, o professor pode introduzir a ideia de redundˆancia e e fazer uma

introdu¸c˜ao sobre os c´odigos corretores de erros, apresentando as diﬁculdades que existem

no processo de transmiss˜ao de uma mensagem por meio digital e a necessidade de corrigir

os erros cometidos.

Durante a discuss˜ao do problema, provavelmente os alunos v˜ao usar em algum momento

a ideia de proximidade entre duas palavras, desta maneira o professor pode apresentar a
deﬁni¸c˜ao de m´etrica de Hamming e generalizar para um c´odigo qualquer. ´E importante
que os alunos percebam que apenas a m´etrica de Hamming n˜ao ´e suﬁciente para realizar o

processo de corre¸c˜ao e que ´e necess´ario ter outras ferramentas. Neste momento o professor
pode apresentar o c´odigo F 2

2 do robˆo como um outro exemplo de c´odigo no qual temos

problemas com a distˆancia entre as palavras e propor o seguinte problema:

Problema: Considere o c´odigo {00000, 01011, 10110, 11101} e a codiﬁca¸c˜ao abaixo:

Leste −→ 00 −→ 00000

Norte −→ 10 −→ 10110

Oeste −→ 01 −→ 01011

Sul −→ 11 −→ 11101.

Suponha que durante a transmiss˜ao de uma mensagem para um determinado robˆo te-

nha ocorrido no m´aximo um erro em cada palavra. Vocˆe saberia descrever os comandos

enviados para o robˆo que recebeu a mensagem:

00000 10111 11101 10000 11011 11111?

100

O professor deve explorar este problema para apresentar a necessidade de acrescentar

redundˆancias na palavra de um determinado c´odigo, como apresentado no Cap´ıtulo 1.

• Materiais necess´arios: Material corriqueiro do professor.

• Avalia¸c˜ao: Participa¸c˜ao na realiza¸c˜ao das tarefas.

• Referˆencias: [15], [11] e [16].

5.2 Aula 2 - C´odigos de Hamming

Nesta segunda aula ser´a necess´ario que os alunos tenham uma no¸c˜ao de base bin´aria, neste

caso, o professor pode dedicar vinte minutos da aula para fazer uma breve explana¸c˜ao em

rela¸c˜ao a isso. Para explicar um pouco sobre os c´odigos de Hamming, o professor deve

utilizar o texto da Se¸c˜ao 2.3.

• Tema da Aula: C´odigos de Hamming.

• Conte´udo: C´odigo de Hamming (7, 4).

• Competˆencias da BNCC: COMPETˆENCIA ESPEC´IFICA 3. Utilizar estrat´egias,
conceitos, deﬁni¸c˜oes e procedimentos matem´aticos para interpretar, construir mo-

delos e resolver problemas em diversos contextos, analisando a plausibilidade dos

resultados e a adequa¸c˜ao das solu¸c˜oes propostas, de modo a construir argumenta¸c˜ao
consistente; COMPETˆENCIA ESPEC´IFICA 4. Compreender e utilizar, com ﬂe-
xibilidade e precis˜ao, diferentes registros de representa¸c˜ao matem´aticos (alg´ebrico,

geom´etrico, estat´ıstico, computacional etc.), na busca de solu¸c˜ao e comunica¸c˜ao de

resultados de problemas.

• Habilidades da BNCC: (EM13MAT405) Utilizar conceitos iniciais de uma linguagem

de programa¸c˜ao na implementa¸c˜ao de algoritmos escritos em linguagem corrente

e/ou matem´atica.

• Objetivos: Conhecer os c´odigos de Hamming e suas aplica¸c˜oes; Estabelecer rela¸c˜oes

entre os c´odigos corretores de erros e o processo de transmiss˜ao de mensagens;

• Tempo: 100 minutos.

• Desenvolvimento:

No primeiro momento da aula o professor deve explicar o conte´udo da Se¸c˜ao 2.3. Ap´os

a explica¸c˜ao deve apresentar a seguinte situa¸c˜ao para os alunos:

Em um determinado restaurante com 25 mesas, n˜ao existe gar¸com, todos os pedidos

s˜ao registrados por meio do celular e um robˆo leva o pedido at´e a mesa do cliente. Para

101

facilitar o servi¸co do robˆo, o restaurante possui um sal˜ao em forma de quadrado, cada mesa

´e posicionada em um lugar ﬁxo. Na Figura 5.1 temos uma representa¸c˜ao da organiza¸c˜ao

das mesas, onde cada quadrado do tabuleiro tem exatamente um metro de lado e cada

casa verde demarca a posi¸c˜ao de uma mesa. Por exemplo, o primeiro quadrado verde mais

abaixo e mais a esquerda representa a posi¸c˜ao da mesa B2.

Figura 5.1: Representa¸c˜ao do sal˜ao.

Para fazer a entrega de um pedido o robˆo sempre parte do centro da casa A1, podendo

levar mais de uma pedido por vez respeitando a ordem de cada pedido, e se move de

acordo com os comandos recebidos para realizar as entregas, sendo que no ﬁnal sempre

retorna por um dos caminhos mais curto para a posi¸c˜ao inicial. A entrega do pedido ´e

realizado pelo lado direito da mesa em rela¸c˜ao aos n´umeros que aparecem no tabuleiro,

isto ´e, sempre do lado sul. Por exemplo, no trajeto da Figura 5.1, o robˆo

• partiu da casa A1, andou quatro casas para direita, quatro casas para cima, uma

casa para direita e entregou o pedido da mesa F 6 pelo lado sul da mesa;

• andou uma casa para a direita, duas casa para baixo, trˆes casa para direita e entregou

o pedido da mesa J4 pelo lado sul da mesa.

• retornou para origem pelo caminho mais curto.

Seja n um n´umero natural. Suponha que o robˆo obede¸ca aos seguintes comandos:

102

• SIGA (para o robˆo andar);

• P ARE (para o robˆo parar e realizar a entrega do pedido);

• xD (para o robˆo andar x casas para a direita);

• xE (para o robˆo andar x casas para a esquerda);

• xB (para o robˆo andar x casas para a baixo);

• xC (para o robˆo andar x casas para a cima).

Assim, por exemplo, para realizar o trajeto da Figura 5.1 os comandos enviados para o

robˆo s˜ao:

SIGA 4 D 4 C 1 D P ARE SIGA 1 D 2 B 3 D P ARE

Suponha tamb´em que o robˆo tenha o seguinte c´odigo fonte:

COMANDOS 0 1 2 3 4 5 6 7 8 9 D E C B SIGA P ARE

0 0 0 0 0 0 0 0 1 1

PALAVRAS
0 0 0 0 1 1 1 1 0 0
DO C ´ODIGO 0 0 1 1 0 0 1 1 0 0
0 1 0 1 0 1 0 1 0 1

1

0

1

0

1

0

1

1

1

1

0

0

1

1

0

1

1

1

1

0

1

1

1

1

Para transmitir estes comandos podemos usar o c´odigo de canal ham(7, 4) para o robˆo,

ou seja, seguindo o algoritmo dos c´odigos de Hamming descrito na Se¸c˜ao 2.3, ´e poss´ıvel

acrescentar redundˆancias a cada uma das palavras do c´odigo fonte do robˆo e obter o c´odigo

de canal abaixo:

0 1 2 3 4 5 6 7 8 9 D E C B SIGA P ARE

0 1 0 1 1 0 1 0 1 0

0 1 1 0 0 1 1 0 1 0

0 0 0 0 0 0 0 0 1 1

0 1 1 0 1 0 0 1 0 1

0 0 0 0 1 1 1 1 0 0

0 0 1 1 0 0 1 1 0 0

0 1 0 1 0 1 0 1 0 1

1

0

1

1

0

1

0

0

1

1

0

0

1

1

0

1

1

1

1

0

0

1

0

1

0

1

0

1

0

0

1

0

1

1

0

1

1

1

1

1

1

1

Os alunos dever˜ao resolver os seguintes problemas:

Problema 1: Utilizando o c´odigo de canal ham(7, 4), escreva uma mensagem para ser

enviado ao robˆo que deve partir da casa A1 e entregar os pedidos das mesas D8, J10 e

H4, sem retornar na origem.

103

Problema 2: Determine o percurso e as entregas realizadas por um robˆo que recebeu a

seguinte mensagem sem erros:

c1

c2

c3

c4

c5

c6

c7

c8

c9

c10

c11

c12

c13

c14

c15

c16

0

0

1

0

1

1

0

1

0

0

1

1

0

0

1

0

1

1

0

1

0

0

1

0

1

0

1

0

0

1

1

1

1

0

0

1

1

0

1

0

0

1

1

0

1

1

0

1

0

1

1

1

1

1

1

1

0

0

1

0

1

1

0

1

0

0

0

0

1

1

1

0

1

1

0

1

0

0

1

0

1

0

1

0

0

1

1

1

1

0

0

1

1

0

1

0

0

1

1

0

1

1

0

1

0

1

1

1

1

1

1

1

Problema 3: Um robˆo recebeu a mensagem abaixo com no m´aximo um erro em cada

palavra. Neste caso ´e poss´ıvel fazer a corre¸c˜ao e decodiﬁcar a mensagem recebida. De-

termine o percurso e as entregas realizadas pelo robˆo destacando as palavras erradas e a

posi¸c˜ao em que ocorreu o erro.

c1

c2

c3

c4

c5

c6

c7

c8

c9

c10

c11

c12

c13

c14

c15

c16

0

0

1

0

1

1

1

1

0

0

1

1

0

0

1

0

1

1

0

1

0

0

1

0

0

1

1

0

0

1

1

1

1

0

0

0

1

0

0

1

0

1

1

0

1

1

0

1

0

1

1

1

0

1

1

1

0

0

1

0

1

1

0

1

0

0

1

0

0

1

0

1

1

0

0

1

1

0

1

1

1

0

1

0

0

1

1

1

1

0

0

0

1

0

0

1

0

0

0

1

1

0

0

1

1

0

1

1

1

1

1

1

Problema 4: Um robˆo recebeu a mensagem abaixo para realizar as entregas das mesas

D4 e H6 , no entanto, devido algum erro de comunica¸c˜ao no sistema entregou um dos

pedidos em uma mesa errada. Determine a mesa que recebeu o pedido errado e explique

o que pode ter ocorrido para o robˆo ter realizado a entrega na mesa errada sem identiﬁcar

o erro.

c1

c2

c3

c4

c5

c6

c7

c8

c9

c10

c11

c12

c13

c14

c15

c16

0

0

1

0

1

1

0

0

1

0

1

0

1

0

1

0

1

1

0

1

0

0

1

0

1

0

1

0

0

1

1

1

1

0

0

1

1

0

1

0

0

1

0

0

1

1

0

1

0

0

1

1

1

1

1

1

0

0

1

0

1

1

0

0

0

0

0

0

1

1

1

0

1

1

0

1

0

0

1

0

1

0

1

0

0

1

1

1

1

0

0

1

0

0

1

0

1

1

1

0

1

1

0

0

0

1

1

1

1

1

1

1

104

Problema 5: Um robˆo recebeu a mensagem abaixo para realizar algumas entregas, no

entanto, devido algum erro de comunica¸c˜ao no sistema, ao sair da primeira mesa que fez

a entrega e se deslocar para a segunda, acabou se chocando com uma das mesas do sal˜ao.

Determine a mesa onde ocorreu o acidente e explique o que pode ter ocorrido.

c1

c2

c3

c4

c5

c6

c7

c8

c9

c10

c11

c12

c13

c14

c15

c16

0

0

1

0

1

1

0

0

1

0

1

0

1

0

1

0

1

1

0

1

0

1

0

0

1

1

0

0

0

1

1

1

1

0

0

1

1

0

1

0

0

1

1

0

1

1

0

0

0

1

1

1

1

1

1

1

0

0

1

0

1

1

0

1

1

0

1

1

0

0

1

0

1

0

0

1

0

0

1

0

1

0

1

0

0

1

1

1

1

0

0

1

1

0

1

0

0

0

1

0

1

1

0

1

0

1

1

1

1

1

1

1

• Materiais necess´arios: Material corriqueiro do professor.

• Avalia¸c˜ao: Atividade impressa.

• Referˆencias: [15], [2] e [11]

• Anexo: Apˆendice B.

5.3 Aula 3 - Matrizes, Planilhas e C´odigos de Hamming

Este terceiro momento com os alunos tem como objetivo utilizar o computador para reali-

zar os c´alculos e as demais opera¸c˜oes necess´arias para codiﬁcar, corrigir erros e decodiﬁcar

uma mensagem usando o c´odigo ham(7, 4). Nesta aula propomos que os alunos utilize

uma m´aquina constru´ıda em planilha eletrˆonica para resolver os problemas da Se¸c˜ao 5.2.

Os processos envolvidos na constru¸c˜ao ´e necess´ario que os alunos tenham um conheci-

mento b´asico de l´ogica, planilhas, teoria de n´umeros, matrizes e geometria anal´ıtica. No

Apˆendice A, fazemos a descri¸c˜ao de como construir a m´aquina, mas, n˜ao indicamos que

a constru¸c˜ao e os processos envolvidos sejam trabalhados no Ensino M´edio, o professor

pode simplesmente disponibilizar a planilha para os alunos responder aos questionamen-

tos. Acreditamos que esta aula, com a constru¸c˜ao da planilha, pode ser apresentada em

um minicurso sobre c´odigos lineares para alunos de um algum curso de Matem´atica que

tenham cursado Teoria dos N´umeros e Geometria Anal´ıtica .

• Tema da Aula: Matrizes, Planilhas e C´odigos de Hamming.

• Conte´udos: Matrizes e C´odigos de Hamming.

105

• Competˆencias da BNCC: COMPETˆENCIA ESPEC´IFICA 3. Utilizar estrat´egias,
conceitos, deﬁni¸c˜oes e procedimentos matem´aticos para interpretar, construir mo-

delos e resolver problemas em diversos contextos, analisando a plausibilidade dos

resultados e a adequa¸c˜ao das solu¸c˜oes propostas, de modo a construir argumenta¸c˜ao
consistente; COMPETˆENCIA ESPEC´IFICA 4. Compreender e utilizar, com ﬂe-
xibilidade e precis˜ao, diferentes registros de representa¸c˜ao matem´aticos (alg´ebrico,

geom´etrico, estat´ıstico, computacional etc.), na busca de solu¸c˜ao e comunica¸c˜ao de

resultados de problemas.

• Habilidades da BNCC: (EM13MAT405) Utilizar conceitos iniciais de uma linguagem

de programa¸c˜ao na implementa¸c˜ao de algoritmos escritos em linguagem corrente

e/ou matem´atica.

• Objetivos: Relacionar c´odigos de Hamming e matrizes; Usar as planilhas eletrˆonicas

para realizar c´alculos matematicos.

• Tempo: 100 minutos.

• Desenvolvimento:

Nesta aula o professor deve explicar aos alunos o funcionamento da m´aquina e como

digitar os comandos na planilha eletrˆonica. Em seguida propor os problemas para que eles

possam responder utilizando a planilha.

Problema 1: Usar a m´aquina para resolver os problemas propostos na Se¸c˜ao 5.2. Em

seguida escrever as vantagens de utilizar o computador.

M´aquina sem simula¸c˜ao de erros: Clique aqui.

Problema 2: Utilize a m´aquina com simula¸c˜ao de erros para responder de forma emp´ırica

aos seguintes questionamentos:

a) A m´aquina ´e capaz de corrigir qualquer palavra recebida com no m´aximo um erro?

b) Usando o c´odigo ham(7, 4), no caso das palavras recebidas com at´e dois erros ´e poss´ıvel

saber que ocorreu erros, mas n˜ao ´e poss´ıvel determinar a quantidade e as posi¸c˜oes

dos erros. O que pode acontecer com o robˆo ao receber uma palavra com exatamente

dois erros?

c) O que pode acorrer com o robˆo ao receber uma palavra com exatamente trˆes erros?

Observa¸c˜ao: Para simular um novo erro basta clicar no bot˜ao enviar.

M´aquina com simula¸c˜ao de erros: Clique aqui.

• Materiais necess´arios: Computador com internet e material corriqueiro do professor.

• Avalia¸c˜ao: Atividade impressa e utiliza¸c˜ao da planilha eletrˆonica.

106

• Referˆencias: [15], [2] e [11]

107

Cap´ıtulo 6

Conclus˜ao

Um dos grandes desaﬁos no processo de ensino e aprendizagem ´e motivar os alunos para

o estudo da Matem´atica. Boa parte dos conte´udos matem´aticos trabalhados na educa¸c˜ao

b´asica apresentam pouca aplicabilidade no cotidiano, desta maneira, muitos alunos ques-

tionam o porquˆe estudar tais conte´udos. Neste trabalho apresentamos uma possibilidade

para o professor trabalhar com a Matem´atica de maneira contextualizada com o cotidi-

ano e, para isto, procuramos evidenciar a necessidade de ferramentas matem´aticas para o

desenvolvimento de novas tecnologias. Mostramos que o estudo dos c´odigos corretores de

erros, apesar de n˜ao ser conte´udo do Ensino M´edio, pode servir como motiva¸c˜ao para o

estudo de alguns conte´udos desta etapa da educa¸c˜ao b´asica.

No corpo do trabalho procuramos exibir exemplos das deﬁni¸c˜oes e proposi¸c˜oes apresen-

tadas no texto, tornando assim mais f´acil o entendimento dos conceitos relativos `a teoria

de c´odigos corretores de erros e possibilitando uma abordagem mais simples do conte´udo

em sala de aula. Mostramos que ´e poss´ıvel simpliﬁcar a exposi¸c˜ao de alguns conte´udos

usando uma linguagem acess´ıvel para alunos do Ensino M´edio sem perder o formalismo

matem´atico necess´ario para generalizar os procedimentos.

Apresentamos tamb´em uma breve introdu¸c˜ao dos n´umeros complexos por meio de

uma abordagem pouco utilizada em livros did´aticos. No entanto, este conte´udo n˜ao faz

parte dos conte´udos propostos pela BNCC para o Ensino M´edio, mas cada institui¸c˜ao tem

autonomia de inserir ou n˜ao o conte´udo em seu curr´ıculo. Neste trabalho mostramos que ´e

poss´ıvel aplicar os n´umeros complexos no processo de transmiss˜ao de informa¸c˜oes, como no

caso do c´odigo de Alamouti. Al´em disso, existem v´arias outras abordagens deste conte´udo

que mostra a potencialidade do mesmo para modelar situa¸c˜oes da vida contemporˆanea.

Assim, julgamos que este conte´udo pode ser inserido em algumas turmas do Ensino M´edio.

Mostramos ainda que ´e poss´ıvel apresentar os quat´ernios de Hamilton por meio de

uma classe especial de matrizes com entradas complexas. E apresentamos uma aplica¸c˜ao

direta do uso de quat´ernios para a cria¸c˜ao de um c´odigo corretor de erro. Apesar de fazer

uma abordagem introdut´oria sobre c´odigo de Alamouti, acreditamos que a Se¸c˜ao 4.3 pode

108

servir como um convite para que alunos interessados possam aprofundar os estudos sobre

c´odigos corretores de erros e transmiss˜ao de informa¸c˜oes.

As atividades propostas neste trabalho servem como uma introdu¸c˜ao aos estudos dos

c´odigos corretores de erros em sala de aula. Procuramos introduzir recursos tecnol´ogicos

nas atividades de modo que os alunos tenham um maior interesse pelo tema e consigam

visualizar na pr´atica a utiliza¸c˜ao dos c´odigos corretores de erros por um computador. A

m´aquina descrita neste trabalho permite que os alunos vejam os procedimentos realizados

pelo computador para identiﬁcar e corrigir erros em uma mensagem.

109

Referˆencias Bibliogr´aﬁcas

[1] ALAMOUTI, S. M. Uma t´ecnica simples de transmiss˜ao de diversidade para comu-

nica¸c˜oes sem ﬁo. Jornal IEEE sobre ´areas selecionadas em comunica¸c˜oes , v. 16, n.

8, p´ag. 1451-1458, 1998.

[2] BAHIA, F. Um primeiro curso sobre

c´odigos

corretores de

erros. ER-

MAC 2010:

I Encontro Regional de Matem´atica Aplicada e Computacio-

nal, 2010. Dispon´ıvel em: <http://www.ufsj.edu.br/portal2-repositorio/File/i-

ermac/anais/minicursos/mc8.pdf> acesso em 22 de outubro de 2021.

[3] BELFIORE, J.-C .; REKAYA, G. Redes quaterniˆonicas para codiﬁca¸c˜ao espa¸co-

tempo. In: Proceedings 2003 IEEE Information Theory Workshop (Cat. No.

03EX674). IEEE, 2003. p. 267-270.

[4] BERHUY, G.; OGGIER, F. Uma introdu¸c˜ao `as ´algebras simples centrais e suas

aplica¸c˜oes para comunica¸c˜ao sem ﬁo. American Mathematical Soc., 2013.

[5] BRASIL . Base Nacional Comum Curricular. Ensino M´edio. Bras´ılia: MEC. Vers˜ao

ﬁnal. Dispon´ıvel em: http://basenacionalcomum.mec.gov.br/. Acesso em: 11 de ou-

tubro de 2021.

[6] CERRI, C.; MONTEIRO, M. S. Hist´oria dos n´umeros complexos. CAEM-Centro de

Aperfei¸coamento de Ensino de Matem´atica Instituto de Matem´atica e Estat´ıstica da

USP, 2001.

[7] COELHO, F. U.; LOURENCO, M. L. Curso de ´Algebra Linear, Um Vol. 34. [S.l.]:

Edusp, 2001.

[8] DOMINGUES, H. H.; IEZZI, G. ´Algebra moderna. reform. S˜ao Paulo: Atual, 2003.

[9] GARCIA, A. e LEQUAIN, Y. Elementos de ´Algebra . IMPA, Rio de Janeiro, 2006.

326p.

[10] HEFEZ, A. FERNANDEZ, C. de S. Introdu¸c˜ao a Algebra Linear , Rio de Janeiro:

Sociedade Brasileira de Matematica, 2013. (Cole¸c˜ao matematica PROFMAT).

110

[11] HEFEZ, A.; VILLELA, M. L. T. C´odigos corretores de erros. Instituto de Matematica

Pura e Aplicada, 2008.

[12] HOLLANTI, C. et al. Sobre a estrutura alg´ebrica do c´odigo de prata: um c´odigo de

bloco de espa¸co-tempo perfeito 2×2. In: 2008 IEEE Information Theory Workshop .

IEEE, 2008. p. 91-94.

[13] LIMA, E. L. ´Algebra linear. Instituto de Matematica Pura e Aplicada, 1996.

[14] LIRA, E. H. C. de. C´odigos Corretores de Erros no Ensino M´edio: um estudo sobre

o C´odigo de Hamming. 2018. Disserta¸c˜ao de Mestrado. Universidade Federal Rural

de Pernambuco.

[15] MILIES, C. P. Breve introdu¸cao a teoria dos c´odigos corretores de erros. Col´oquio de

Matem´atica da Regi˜ao Centro-Oeste, SBM, 2009.

[16] MILIES, C. P. A matem´atica dos c´odigos de barras. Artigo, USP-Departamento de

Matem´atica, S˜ao Paulo, SP, Brasil. Recuperado em, v. 14, 2006.

[17] PINHEIRO, J. C. de M. Caracteriza¸c˜ao de canais sem ﬁo em ambientes generalizados

de desvanecimento. 2012.

[18] VOTO, J. ´Algebras de quaternion. Springer Nature, 2021.

111

Apˆendice A

Constru¸c˜ao da M´aquina

Descrevemos abaixo os passos que os alunos dever˜ao seguir para montar a m´aquina capaz

de simular erros de transmiss˜ao e realizar o processo de codiﬁca¸c˜ao, corre¸c˜ao de erros e

decodiﬁca¸c˜ao do c´odigo de ham(7, 4).

Inicialmente os alunos dever˜ao montar a parte de gera¸c˜ao do c´odigo. Neste caso devem

seguir os seguintes passos:

Figura A.1: Planilha: M´aquina de codiﬁca¸c˜ao.

1o passo: Digitar a matriz G7×4 da Se¸c˜ao 2.3, que gera o c´odigo ham(7, 4). A primeira
coluna da matriz deve iniciar na c´elula E6, a segunda na c´elula F6 e assim sucessi-

vamente. Para identiﬁcar a matriz ´e poss´ıvel mesclar as c´elulas E6, F6, G6 e H6 e

digitar a frase: Matriz Geradora.

2o passo Na linha 3 da planilha, iniciando na c´elula L3 e terminando na c´elula AP3 e

sempre saltando uma c´elula, digite os comandos: 0, 1, 2, · · · , 8, 9, D, E, C, B, SIGA

e PARE.

112

3o passo Na linha 5 da planilha, iniciando na c´elula L5 e terminando na c´elula AP5 e

sempre saltando uma c´elula, digite a palavra: Fonte.

4o passo Logo abaixo de cada uma das palavras fonte digite um elemento do conjunto
2 = {0, 1}4, que ser´a uma codiﬁca¸c˜ao do comando correspondente que se encontra
F 4
acima da palavra fonte. Sugerimos que seja usada a ordem crescente dos n´umeros

na base bin´aria.

5o passo Na linha 11 da planilha, iniciando na c´elula L11 e terminando na c´elula AP11

e sempre saltando uma c´elula, digite a palavra: Canal.

6o passo Na c´elula L12 digite a seguinte f´ormula:

= INT((2-(-1)ˆ ($E6*L$6+$F6*L$7+$G6*L$8+$H6*L$9))/2)

Neste caso, a express˜ao x1= $E6*L$6+$F6*L$7+$G6*L$8+$H6*L$9 ´e referente a
multiplica¸c˜ao entre a primeira linha da matriz geradora e a palavra do conjunto F 4
2
correspondente ao comando 1. A fun¸c˜ao INT retorna a parte inteiro do n´umero

((2-(-1)ˆ ($E6*L$6+$F6*L$7+$G6*L$8+$H6*L$9))/2) que ser´a 1 no caso em que

x1 ´e ´ımpar, pois neste caso temos,

x1 =

2 − (−1)´ımpar
2

=

2 − (−1)
2

=

2 + 1
2

=

3
2

= 1, 5,

e, 0 caso contr´ario, pois

x1 =

2 − (−1)par
2

=

2 − 1
2

=

1
2

= 0, 5.

6o passo Copiar a c´elula L12 e colar nas 6 c´elulas logo abaixo. Neste caso ser´a codiﬁcada

a primeira palavra do c´odigo.

7o passo Selecionar as c´elulas L12 at´e L18, copiar e colar logo abaixo de cada uma das

palavras canal. Obtendo assim o c´odigo ham(7, 4), como mostrado na Figura A.1.

Para montar o mecanismo de codiﬁca¸c˜ao da mensagem a ser enviada, os alunos dever˜ao

seguir os passos abaixo:

1o passo Na linha 23 da planilha, destacar as c´elulas L23, N23, P23 e assim sucessiva-

mente at´e a c´elula AP23. Estas c´elulas ser˜ao utilizadas para digitar a mensagem a

ser enviada, sendo um comando em cada c´elula.

2o passo Na c´elula L24 digite a seguinte f´ormula:

113

Figura A.2: Planilha: Codiﬁca¸c˜ao de uma mensagem.

=SWITCH(L$23; $L$3; $L12; $N$3; $N12; $P$3; $P12; $R$3; $R12; $T$3; $T12;

$V$3; $V12; $X$3; $X12; $Z$3; $Z12; $AB$3; $AB12; $AD$3; $AD12; $AF$3;

$AF12; $AH$3; $AH12; $AJ$3; $AJ12; $AL$3; $AL12; $AN$3; $AN12; $AP$3;

$AP12)

A fun¸c˜ao SWITCH faz uma compara¸c˜ao entre o comando digitado na c´elula L23 e

os comandos digitados nas c´elulas L3, N3, · · · , AN3 e AP3, e retorna a primeira

entrada da palavra do c´odigo ham(7, 4) referente ao comando encontrado.

3o passo Copiar a c´elula L24 e colar na 6 c´elulas imediatamente abaixo.

4o passo Selecionar as c´elulas L24 at´e L30, copiar e colar logo abaixo de cada uma das

c´elulas destacadas para digita¸c˜ao do comando, ﬁnalizando a constru¸c˜ao do meca-

nismo de codiﬁca¸c˜ao. Veja o exemplo da Figura A.2.

Para realizar o processo de simula¸c˜ao de erros ser´a necess´ario gerar n´umeros aleat´orios

na planilha, neste caso os alunos dever˜ao criar esse mecanismo utilizando a fun¸c˜ao ALEAT ´ORIOENTRE.
Para criar esta parte da m´aquina os alunos dever˜ao seguir os seguintes passos:

1o passo Na c´elula L33 digitar a f´ormula:

= ALEAT ´ORIOENTRE(1; 100)

2o passo Copiar a c´elula L33 e colar nas c´elulas L34 e L35.

3o passo Copiar as c´elulas L33, L34 e L35 e copiar nas demais colunas que tenha o nome

canal, sempre iniciando na linha 33.

Veja que para fazer a simula¸c˜ao de erros em uma palavra do c´odigo ham(7, 4), a planilha

realiza os seguintes processos:

• Faz trˆes sorteios seguidos de n´umeros em um conjunto ﬁxado e anota os resultados.

114

• Forma uma sequˆencia com os trˆes n´umeros sorteados. Os n´umeros podem ser repe-

tidos;

• Observa os elementos da sequˆencia e adiciona um erro em cada uma das ‘posi¸c˜oes’

sorteadas. Por exemplo, no caso da sequˆencia (1, 4, 12), a palavra ser´a recebida com

erros nas posi¸c˜oes 1 e 4, e no caso da sequˆencia (2, 13, 2) a palavra ser´a recebida

com um erro na posi¸c˜ao 2.

No caso da m´aquina que estamos usando, cada sorteio ´e feito com os n´umero entre 1 e

100 e as palavras tˆem exatamente 7 posi¸c˜oes. Neste caso, temos que a probabilidade de

receber a palavra com trˆes erros ´e de 0,021%, a probabilidade de receber com dois erros ´e

aproximadamente 1,18% e a probabilidade de receber com uma erros ´e aproximadamente

18,4%. Para alterar estas probabilidades basta modiﬁcar o intervalo no qual os n´umeros

s˜ao sorteados.

Para montar a parte mais importante da m´aquina, ou seja, para montar o mecanismo de

detec¸c˜ao e corre¸c˜ao erros, e decodiﬁca¸c˜ao da palavra os alunos dever˜ao seguir os seguintes

passos:

Figura A.3: Planilha: detec¸c˜ao e corre¸c˜ao de erros.

1o passo Digitar a matriz teste de paridade H3×7 da Se¸c˜ao 2.3, nas linhas 38, 39, 40,

iniciando na c´elula B38 da planilha.

2o passo Destacar as c´elulas L38 at´e L44, N38 at´e N44, P38 at´e P44 e assim suces-

sivamente at´e a coluna AP. Esta c´elulas servir˜ao como entrada para as palavras

recebidas.

115

3o passo Na c´elula L38 digitar a seguinte f´ormula:

=SE(OU(L$33=1;L$34=1;L$35=1);ABS(L24-1);L24)

Veja que neste caso a palavra ter´a uma erro na primeira entrada se, no sorteio

aleat´orio, aparecer um n´umero igual a 1 em qualquer uma das c´elulas L33, L34 ou

L35.

4o passo Na c´elula L39 digitar a seguinte f´ormula:

=SE(OU(L$33=2;L$34=2;L$35=2);ABS(L24-1);L24)

e assim sucessivamente at´e a c´elula L44, na qual ser´a digitada a f´ormula

=SE(OU(L$33=7;L$34=7;L$35=7);ABS(L24-1);L24)

5o passo Selecionar as c´elulas L38 at´e L44, copiar e colar nas demais colunas onde aparece

o nome canal, sempre iniciando na linha 38.

6o passo Digitar a palavra ‘s´ındrome’ na c´elula L46.

7o passo Na c´elula L47, digitar a seguinte f´ormula:

=INT((2-(-1)ˆ ($B38*L$38 + $C38*L$39 + $D38*L$40 + $E38*L$41 +

$F38*L$42 + $G38*L$43 + $H38*L$44))/2)

8o passo Copiar a c´elula L47 e colar nas c´elulas L48 e L49.

9o passo Selecionar as c´elulas L46, L47 E L48, copiar e colar nas demais colunas, como

mostrado na Figura A.3.

10o passo Digitar a frase ‘posi¸c˜ao do erro’ na c´elula L51.

11o passo Na c´elula L52, digitar a seguinte f´ormula:

=L47 + L48*2 + L49*4

Esta f´ormula faz a mudan¸ca de base do n´umero bin´ario (s´ındrome) para um n´umero

decimal (posi¸c˜ao do erro).

12o passo Copiar a c´elula L52 e colar nas c´elulas N52, P52, · · · , AN52 e AP52.

13o passo Digitar a frase ‘palavra corrigida’ na c´elula L54.

14o passo Nas c´elulas L55, L56, L57, L58, L59, L60 e L61, digitar, respectivamente, as

seguintes f´ormulas:

116

=SE(L$52=1;INT((2+(-1)ˆ (L38))/2);L38)

=SE(L$52=2;INT((2+(-1)ˆ (L39))/2);L39)

=SE(L$52=3;INT((2+(-1)ˆ (L40))/2);L40)

=SE(L$52=4;INT((2+(-1)ˆ (L41))/2);L41)

=SE(L$52=5;INT((2+(-1)ˆ (L42))/2);L42)

=SE(L$52=6;INT((2+(-1)ˆ (L43))/2);L43)

=SE(L$52=7;INT((2+(-1)ˆ (L44))/2);L44)

14o passo Selecionar as c´elulas L55, L56, L57, L58, L59, L60 e L61, copiar e colar nas

c´elulas N55, P55, · · · , AN55 e AP55.

15o passo Digitar a frase ‘palavra recebida e corrigida’ na c´elula L63.

16o passo Digitar na c´elula L64, a seguinte f´ormula:

=SE(E(L55=$L$12; L56=$L$13; L57=$L$14; L58=$L$15; L59=$L$16;

L60=$L$17; L61=$L$18); $L$3; SE(E(L55=$N$12; L56=$N$13; L57=$N$14;

L58=$N$15; L59=$N$16; L60=$N$17; L61=$N$18); $N$3; SE(E(L55=$P$12;

L56=$P$13; L57=$P$14; L58=$P$15; L59=$P$16; L60=$P$17; L61=$P$18);

$P$3; SE(E(L55=$R$12; L56=$R$13; L57=$R$14; L58=$R$15; L59=$R$16;

L60=$R$17; L61=$R$18); $R$3; SE(E(L55=$T$12; L56=$T$13; L57=$T$14;

L58=$T$15; L59=$T$16; L60=$T$17; L61=$T$18); $T$3; SE(E(L55=$V$12;

L56=$V$13; L57=$V$14; L58=$V$15; L59=$V$16; L60=$V$17; L61=$V$18);

$V$3; SE(E(L55=$X$12; L56=$X$13; L57=$X$14; L58=$X$15; L59=$X$16;

L60=$X$17; L61=$X$18); $X$3; SE(E(L55=$Z$12; L56=$Z$13; L57=$Z$14;

L58=$Z$15; L59=$Z$16; L60=$Z$17; L61=$Z$18); $Z$3; SE(E(L55=$AB$12;

L56=$AB$13; L57=$AB$14; L58=$AB$15; L59=$AB$16; L60=$AB$17;

L61=$AB$18); $AB$3; SE(E(L55=$AD$12; L56=$AD$13; L57=$AD$14;

L58=$AD$15; L59=$AD$16; L60=$AD$17; L61=$AD$18); $AD$3;

SE(E(L55=$AF$12; L56=$AF$13; L57=$AF$14; L58=$AF$15; L59=$AF$16;

L60=$AF$17; L61=$AF$18); $AF$3; SE(E(L55=$AH$12; L56=$AH$13;

L57=$AH$14; L58=$AH$15; L59=$AH$16; L60=$AH$17; L61=$AH$18); $AH$3;

SE(E(L55=$AJ$12; L56=$AJ$13; L57=$AJ$14; L58=$AJ$15; L59=$AJ$16;

L60=$AJ$17; L61=$AJ$18); $AJ$3; SE(E(L55=$AL$12; L56=$AL$13;

L57=$AL$14; L58=$AL$15; L59=$AL$16; L60=$AL$17; L61=$AL$18); $AL$3;

SE(E(L55=$AN$12; L56=$AN$13; L57=$AN$14; L58=$AN$15; L59=$AN$16;

L60=$AN$17; L61=$AN$18); $AN$3; SE(E(L55=$AP$12; L56=$AP$13;

L57=$AP$14; L58=$AP$15; L59=$AP$16; L60=$AP$17; L61=$AP$18); $AP$3;

”?”))))))))))))))))

117

Esta fun¸c˜ao faz uma compara¸c˜ao entre a palavra corrigida e as palavras do c´odigo

ham(7, 4), e retorna o comando referente a palavra escolhida.

17o passo Copiar a c´elula L64 e colar nas c´elulas N64, P64, · · · , AN64 e AP64.

Veja que no exemplo da Figura A.3, v´arias palavras apresentaram um erro, e mesmo assim

a m´aquina conseguiu recuperar a mensagem.

Por ﬁm, os alunos dever˜ao montar a parte em que ser´a apresentada algumas posi¸c˜oes do

robˆo no tabuleiro, podendo assim descrever o caminho percorrido pelo mesmo de maneira

visual. O alunos dever˜ao proceder da seguinte maneira:

1o passo Na c´elula L69 digitar a f´ormula:

=SE(L64=“SIGA”;“-”;“Erro”)

2o passo Na c´elula N69 digitar a f´ormula:

=SE(OU($L$69=“Erro”;L$64=“SIGA”;L$64=“PARE”;L$64=“D”;L$64=“E”;

L$64=“B”;L$64=“C”;L$64=0);“-”;N$64)

3o passo Nas c´elulas N70, N71, · · · , N77, respectivamente, digitar as f´ormulas

=SE(OU(L$64=2;L$64=3;L$64=4;L$64=5;L$64=6;L$64=7;L$64=8;L$64=9);

N$69;“-”)

=SE(OU(L$64=3;L$64=4;L$64=5;L$64=6;L$64=7;L$64=8;L$64=9);N$69;“-”)

=SE(OU(L$64=4;L$64=5;L$64=6;L$64=7;L$64=8;L$64=9);N$69;“-”)

=SE(OU(L$64=5;L$64=6;L$64=7;L$64=8;L$64=9);N$69;“-”)

=SE(OU(L$64=6;L$64=7;L$64=8;L$64=9);N$69;“-”)

=SE(OU(L$64=7;L$64=8;L$64=9);N$69;“-”)

=SE(OU(L$64=8;L$64=9);N$69;“-”)

=SE(L$64=9;N$69;“-”)

4o passo Selecionar as c´elulas N70, N71, · · · , N77, copiar e colar nas demais colunas em

que aparece o palavra canal, sempre iniciando na linha 70.

5o passo Nas c´elulas K81, K82, K83 E K84, respectivamente, digitar as letras mai´usculas

D, E, C e B.

6o passo Nas colunas L81, L82, L83 E L84, respectivamente, digitar as f´ormulas:

=CONT.SE(L$69:L77;“D”)

=CONT.SE(L$69:L77;“E”)

=CONT.SE(L$69:L77;“C”)

=CONT.SE(L$69:L77;“B”)

118

7o passo Selecionar as c´elulas L81, L82, L83, L84, copiar e colar nas demais colunas em

que aparece o palavra canal, sempre iniciando na linha 81.

8o passo Digitar a letra X na c´elula K66 e Y na c´elula K67.

9o passo Nas c´elulas L66 e L67, respectivamente, digitar as f´ormulas:

=0,5+L81+L82

=0,5+L83+L84

10o passo Nas c´elulas N66 e N67, respectivamente, digitar as f´ormulas:

=L66+N81+N82

=L67+N83+N84

11o passo Selecionar as c´elulas N66 e N67 copiar e colar nas demais colunas em que

aparece o palavra canal, sempre iniciando na linha 66.

12o passo Digitar o n´umero 12 nas c´elulas AR66 e AR67.

13o passo Inserir uma imagem com o tabuleiro representado o sal˜ao e as mesas, conforme

Figura 5.1.

14o passo Selecionar as c´elulas K66 at´e AR67 e inserir um gr´aﬁco de dispers˜ao com esses

dados.

15o passo formatar o gr´aﬁco para que apare¸ca apenas os pontos de coordenadas (x, y).

16o passo ajustar o gr´aﬁco e a imagem do tabuleiro para que os pontos apare¸cam exa-

tamente nas casas do tabuleiro conforme a Figura {graﬁcotabuleiro}.

119

Figura A.4: Representa¸c˜ao do movimento do robˆo.

120

121

Apˆendice B

Representa¸c˜ao do Sal˜ao

122

