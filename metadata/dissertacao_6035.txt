UNIVERSIDADE ESTADUAL DO MARANH√ÉO ‚Äì UEMA 

PR√ì-REITORIA DE P√ìS-GRADUA√á√ÉO ‚Äì PPG 

PROGRAMA DE MESTRADO PROFISSIONAL EM MATEM√ÅTICA EM REDE 

NACIONAL/PROFMAT 

MARLON MAIKO BARROS MARTINS 

TESTES DE PRIMALIDADE: 

dos m√©todos tradicionais aos computacionais 

S√£o Lu√≠s 

2021

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
MARLON MAIKO BARROS MARTINS 

TESTES DE PRIMALIDADE: 

dos m√©todos tradicionais aos computacionais 

Disserta√ß√£o  apresentada  ao  Programa  de 
Mestrado  em  Matem√°tica  em  Rede  Nacional 
(PROFMAT)  da  Universidade  Estadual  do 
Maranh√£o (UEMA), como requisito parcial para 
obten√ß√£o do t√≠tulo de Mestre em Matem√°tica.  

Orientador: Prof. Dr. Raimundo Jos√© Barbosa 
Brand√£o. 

S√£o Lu√≠s 

2021

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Martins, Marlon Maiko Barros. 

Testes de primalidade: dos m√©todos tradicionais aos computacionais / Marlon 

Maiko Barros Martins. ‚Äì S√£o Lu√≠s, 2021. 

     86 f. 

Disserta√ß√£o  (Mestrado  Profissional)  ‚Äì  Curso  de  Matem√°tica  em  Rede 

Nacional, Universidade Estadual do Maranh√£o, 2021. 

Orientador: Prof. Dr. Raimundo Jos√© Barbosa Brand√£o. 

1.Testes de primalidade. 2.N√∫meros primos. 3.Era Pr√©-computacional. 4.Era 

Computacional. 5.Algoritmo Computacional. I.T√≠tulo. 

CDU: 511                                                                        

CDU: 511                                                                        

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                                                                                 
 
 
 
 
 
 
 
Dedico  este  trabalho  ao  meu  filho  Marlon 

Lorenzo de Oliveira Martins, por sua vinda ao 

mundo 

ter  servido  de 

reavivamento  e 

fortalecimento de minhas a√ß√µes de trabalho e 

estudo.

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
AGRADECIMENTOS 

Aos meus honrados pais, Rafael Bispo Martins e Beatriz de Ara√∫jo Barros, 

pelo apoio constante e estrutura de estudo que me ofertaram ao longo de minha vida; 

√Ä  minha  querida  esposa,  Ida  Val√©ria  Nunes  de  Oliveira,  pelo  apoio 

constante  em  meus  estudos  e  compreens√£o  nos  momentos  de  distanciamento 

necess√°rio ao alcance de minhas metas estudantis; 

Aos  meus  amados  filhos,  Iasmim  Rafaele  de  Oliveira  Martins  e  Marlon 

Lorenzo de Oliveira Martins, pela companhia e alegrias obtidas dos felizes momentos 

convividos; 

Ao  Prof.  Dr.  Jo√£o  Coelho  Silva  Filho,  pela  sua  incans√°vel  luta  na 

Coordena√ß√£o  do  Programa  de  Mestrado  Profissional  em  Matem√°tica  em  Rede 

Nacional  (PROFMAT-UEMA),  em  prol  do  bom  desenvolvimento  e  constante 

aprimoramento do programa; 

Ao  corpo  administrativo  do  PROFMAT-UEMA,  em  especial  √†  Annanda 

Crystina  Chagas  Santos,  pelo  seu  empenho  e  prestatividade  no  atendimento  das 

demandas dos alunos;  

Ao  Prof.  Dr.  Raimundo  Jos√©  Barbosa  Brand√£o,  pela  sua  eficiente 

orienta√ß√£o  e  disponibiliza√ß√£o  de  aten√ß√£o  em  todos  os  momentos  necess√°rios, 

atributos estes indispens√°veis para a produ√ß√£o e conclus√£o da presente pesquisa; 

Ao  corpo  diretivo,  docente  e  administrativo  da  Universidade  Estadual  do 

Maranh√£o  (UEMA),  pela  firme  e  competente  atua√ß√£o  durante  a  execu√ß√£o  de  cada 

etapa do PROFMAT; 

Aos meus companheiros de mestrado, pelos bons momentos vividos e pela 

coopera√ß√£o nos estudos que, mesmo em face ao momento pand√™mico vivido durante 

a dissemina√ß√£o do coronav√≠rus (SARS-COV-2), entre os anos de 2020 e 2021, n√£o 

deixaram de manter a coes√£o e companheirismo no transcurso do PROFMAT; 

E a todos aqueles que, de alguma forma, colaboraram com a realiza√ß√£o do 

curso e com a concretiza√ß√£o do presente trabalho.

 
 
 
‚ÄúUm problema da teoria dos n√∫meros √© t√£o 

atemporal quanto uma verdadeira obra de 

arte‚Äù.  

David Hilbert 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
RESUMO 

O  presente estudo  teve  como  finalidade apresentar alguns  dos  principais testes de 

primalidade  desenvolvidos  ao  longo  da  hist√≥ria,  com  detalhamento  de  suas 

caracter√≠sticas  gerais,  custos  computacionais,  tempos  de  execu√ß√£o,  dentre  outros 

aspectos.  A  metodologia  utilizada  foi  a  pesquisa  bibliogr√°fica  e  o  objetivo  geral 

consistiu  em  analisar  o  funcionamento  dos  testes  de  primalidade  desde  sua 

concep√ß√£o  mais  simples  at√©  os  modernos  mecanismos  de  localiza√ß√£o  de  n√∫meros 

primos.  A  disserta√ß√£o  do  assunto  modulou-se  na  apresenta√ß√£o  dos  primos, 

abordando  conceitos  b√°sicos,  quantidade  destes  e  f√≥rmulas  para  sua  localiza√ß√£o. 

Estudou-se,  ainda,  os  aspectos  b√°sicos  dos  testes  de  primalidade,  em  seguida 

comparou-se as capacidades humanas com as computacionais e ent√£o apontou-se 

caracter√≠sticas necess√°rias para sua classifica√ß√£o. Os testes foram divididos em dois 

grupos,  conforme  duas  grandes  eras:  a  pr√©-computacional  e  a  computacional.  A 

an√°lise dos testes incluiu aspectos como tempo de execu√ß√£o, grau de determina√ß√£o 

e tipo de n√∫mero testado. Por fim, tratou-se das principais aplica√ß√µes dos testes de 

primalidade no campo da criptografia. Por efeito da an√°lise dos resultados, inferiu-se 

que  os  testes  de  primalidade  constituem  um  relevante  m√©todo  de  localiza√ß√£o  de 

primos,  cuja  evolu√ß√£o  resultou  em  algoritmos  mais  √°geis  e  eficientes,  apoiados  no 

grande  avan√ßo  computacional  das  √∫ltimas  d√©cadas,  com 

tend√™ncia  ao 

desenvolvimento cont√≠nuo e produ√ß√£o de formas de identificar primos cada vez mais 

h√°beis.  

Palavras-chave: Testes de Primalidade. N√∫meros Primos. Era Pr√©-computacional. Era 

Computacional. Algoritmo Computacional. 

 
 
 
 
 
ABSTRACT 

The  present  study  aimed  to  introduce  some  of  the  main  primality  tests  developed 

throughout  history,  with  details  of  their  general  characteristics,  computational  costs, 

execution  times,  among  other  aspects.  The  methodology  used  was  bibliographical 

research  and  the  general  objective  was  to  analyze  the  functioning  of  primality  tests 

from their simplest conception to modern mechanisms of location of prime numbers. 

The dissertation of the subject was modulated in the presentation of primes, presenting 

basic concepts, quantity of these and formulas for their location. The basic aspects of 

primality  tests  were  also  studied,  then  human  and  computational  capacities  were 

compared and the characteristics necessary for their classification were pointed out. 

The tests were divided into two groups, according to two major eras: pre-computational 

and computational. The analysis of the tests included aspects such as runtime, degree 

of  determination,  and  type  of  number  tested.  Finally,  were  presented  the  main 

applications of primality tests in the field of cryptography. In reason of the analysis of 

the results, it was inferred that primality tests constitute a relevant method of  primes 

locating, whose evolution resulted in more agile and efficient algorithms, supported by 

the  great  computational  advance  of  recent  decades,  with  a  tendency  to  continuous 

development and production of ways to identify increasingly skilled primes. 

Keywords:  Primality  Tests.  Prime  Numbers.  Pre-Computational  Age.  Computational 

Age. Computational Algorithm. 

 
 
 
 
 
LISTA DE TABELAS 

Tabela 1 ‚Äì Compara√ß√£o entre as fun√ß√µes ùêøùëñ(ùë•) e ùëÖ(ùë•) ao serem relacionadas com os 

valores de ùúã(ùë•) .......................................................................................................... 28 

Tabela 2 ‚Äì Valores de (ùëéùëù‚àí1 ‚àí 1)/ùëù para alguns primos ùëù ........................................ 51 

Tabela 3 ‚Äì Valores de (ùëéùëù‚àí1 ‚àí 1)/ùëù para alguns valores de ùëù composto ................. 51 

Tabela 4 ‚Äì Crivo de Sundaram .................................................................................. 58 

Tabela 5 ‚Äì C√≥digos de ordem invertida do alfabeto .................................................. 68 

 
 
 
 
 
SUM√ÅRIO 

1 INTRODU√á√ÉO ....................................................................................................... 12 

2 PROCEDIMENTOS METODOL√ìGICOS............................................................... 14 

3 SOBRE OS N√öMEROS PRIMOS .......................................................................... 16 

3.1 N√∫meros naturais ................................................................................................ 16 

3.2 Conceitos iniciais sobre primos ........................................................................... 18 

3.3 N√∫meros primos e sua infinitude ......................................................................... 19 

3.4 F√≥rmulas para n√∫meros primos ........................................................................... 23 

3.5 Outras fun√ß√µes sobre os n√∫meros primos ........................................................... 24 

4 EVOLU√á√ÉO DOS TESTES DE PRIMALIDADE .................................................... 30 

4.1 Era pr√©-computacional ........................................................................................ 30 

4.2 Era computacional ............................................................................................... 33 

5 ASPECTOS B√ÅSICOS DOS TESTES DE PRIMALIDADE ................................... 38 

5.1 Capacidade mental versus capacidade computacional ....................................... 38 

5.2 Custo de um algoritmo ........................................................................................ 39 

5.3 Testes de primalidade determin√≠sticos e n√£o determin√≠sticos ............................. 43 

5.4 Formas de classifica√ß√£o ...................................................................................... 43 

6 TESTES CL√ÅSSICOS ........................................................................................... 45 

6.1 Divis√£o por tentativa ............................................................................................ 45 

6.2 Crivo de Erat√≥stenes ........................................................................................... 46 

6.3 Teste de Fermat .................................................................................................. 50 

6.4 Teste de Proth ..................................................................................................... 53 

6.5 Teste de P√©pin .................................................................................................... 54 

6.6 Teste de Lucas-Lehmer....................................................................................... 55 

6.7 Crivo de Sundaram ............................................................................................. 57 

7 TESTES COMPUTACIONAIS ............................................................................... 60 

7.1 Teste de Solovay-Strassen ................................................................................. 60 

 
 
 
7.2 Teste de Miller-Rabin .......................................................................................... 61 

7.3 Teste AKS ........................................................................................................... 64 

7.4 Outros m√©todos computacionais ......................................................................... 65 

8 APLICA√á√ïES ........................................................................................................ 67 

9 CONCLUS√ÉO ........................................................................................................ 72 

REFER√äNCIAS ......................................................................................................... 75 

AP√äNDICE A ‚Äì M√ÅXIMO DIVISOR COMUM E DEMONSTRA√á√ïES ..................... 80 

AP√äNDICE B ‚Äì N√öMEROS PRIMOS E DEMONSTRA√á√ïES ................................. 82 

ANEXO C ‚Äì CONGRU√äNCIAS E DEMONSTRA√á√ïES ........................................... 83 

 
 
 
 
 
12 

1 INTRODU√á√ÉO  

Os n√∫meros, quando concebidos em sua forma mais comum, remontam √† 

ideia  de  contagem,  um  racioc√≠nio  natural  para  quem  inicia  seu  processo  de 

aprendizado em matem√°tica. Na medida que o conhecimento se expande, o indiv√≠duo 

passa a perceber que o ato de contar pode ser realizado de diversas formas, como o 

natural racioc√≠nio de agrupar elementos de um conjunto para computar a quantidade 

destes de maneira mais √°gil.  

A atividade de juntar membros de um grupo para dar maior celeridade √† 

sua  contagem  pode  parecer  relativamente  simples,  entretanto  a  a√ß√£o  inversa,  em 

diversos  casos,  √©,  contrariamente,  complexa.  Dessa  maneira,  para  conjuntos  com 

grandes quantidades de elementos, a tarefa de encontrar todos os subconjuntos de 

mesmo  tamanho  que  dividem  exatamente  aqueles  pode  representar  um  ato  bem 

complicado, especialmente quando n√£o se disp√µe de ferramentas adequadas.   

Neste  racioc√≠nio,  destacamos  os  n√∫meros  primos,  um  tipo  peculiar  de 

conjunto que n√£o pode ser repartido em grupos menores, com exce√ß√£o do unit√°rio e 

daqueles com iguais n√∫meros de elementos, ou seja, s√≥ podem ser divididos por um 

e por eles mesmos.  

Logo, diante da necessidade de apresentar e esclarecer o funcionamento 

dos  m√©todos  de  localiza√ß√£o  de  primos,  realizamos  o  presente  estudo,  por meio  de 

pesquisa  bibliogr√°fica,  apoiado  nos  avan√ßos  obtidos  no  estudo  destes  n√∫meros  ao 

longo da hist√≥ria, o qual buscar√° identificar os testes de primalidade j√° desenvolvidos 

e analisar o desempenho destes, desde sua concep√ß√£o mais simples at√© suas formas 

mais aprimoradas. 

O trabalho buscou apresentar as propriedades dos primos e sua forma de 

localiza√ß√£o;  analisar  os  resultados  de  pesquisas  sobre  estes  n√∫meros  e  suas 

implica√ß√µes  na  produ√ß√£o  de  m√©todos  para  sua 

localiza√ß√£o;  esclarecer  as 

caracter√≠sticas de funcionamento dos testes de primalidade, bem como sua evolu√ß√£o; 

detalhar aspectos b√°sicos dos algoritmos de localiza√ß√£o de primos; apresentar testes 

de  primalidade  desenvolvidos  ao  longo  da  hist√≥ria;  discorrer  sobre  os  modernos 

processos computacionais voltados √† procura de primos cada vez maiores e, por fim, 

exibir as principais aplica√ß√µes dos testes de primalidade.  

 
 
13 

O  trabalho  estruturou-se  primeiramente  na  apresenta√ß√£o  dos  n√∫meros 

primos,  com  sua  conceitua√ß√£o,  propriedades  e  teoremas.  Posteriormente,  foram 

apontadas algumas formas de localiz√°-los e exibir determinadas f√≥rmulas e fun√ß√µes 

geradoras destes n√∫meros.  

No 

intuito  de  detalhar  os 

testes  de  primalidade,  adotou-se  uma 

apresenta√ß√£o por meio de uma linha hist√≥rica, delineando sua evolu√ß√£o deste a √©poca 

da antiga Gr√©cia at√© os tempos dos modernos computadores, com abordagem  aos 

sofisticados conceitos matem√°ticos.  

Detalhou-se  caracter√≠sticas  b√°sicas  dos  testes  de  primalidade,  expondo 

sua evolu√ß√£o de acordo com a capacidade do ser humano e da m√°quina. Destacou-

se, tamb√©m, seus custos computacionais e sua classifica√ß√£o de acordo com a garantia 

de identifica√ß√£o de primos.  

Abordou-se  diversos  testes  atrelados  √†  linha  evolutiva  do  progresso 

tecnol√≥gico.  Neste  sentido,  reunimos  alguns  dos  principais  testes  apresentados  ao 

longo da hist√≥ria, a saber: a Divis√£o por Tentativa, o Crivo de Erat√≥stenes, o Teste de 

Fermat, o Teste de Proth, o Teste de P√©pin, o Teste de Lucas-Lehmer e o Crivo de 

Sundaram,  todos  da  era  pr√©-computacional.  Em  seguida,  expusemos  os  testes 

modernos da √©poca computacional, entre eles o Teste de Solovay-Strassen, o Teste 

de  Miller-Rabin  e  o  Teste  AKS,  al√©m  de  outros  m√©todos  computacionais  tamb√©m 

recentes, como o Teste de Baillie ‚Äì PSW, o Teste APR e o Teste ECPP (Eliptic Curve 

Primality Proving). 

Por fim,  discorremos sobre as  principais aplica√ß√µes  encontradas para os 

testes  de  primalidade  atuais,  que  se  apoiam  no  fato  da  dif√≠cil  tarefa  de  fatora√ß√£o 

continuar sendo um desafio para os estudiosos da contemporaneidade. 

 
 
 
 
14 

2 PROCEDIMENTOS METODOL√ìGICOS 

O  processo  de  compreens√£o  conceitual  e  procedimental  para  identificar 

n√∫meros  primos  representa  um  grande  desafio  no  ramo  da  Teoria  dos  N√∫meros. 

Quem inicia o estudo dos n√∫meros primos precisa compreender suas caracter√≠sticas 

e  saber  identificar  detalhes  da mat√©ria,  aprofundando-se em  aritm√©tica,  de  forma a 

explorar argumenta√ß√µes, demonstra√ß√µes, provas e usos espec√≠ficos. 

Da  antiguidade  ao  mundo  moderno,  foram  muitos  os  estudos  buscando 

testes que comprovem a primalidade de um n√∫mero natural. Ap√≥s a sele√ß√£o dos testes 

de primalidade a serem investigados, escolheu-se o tema deste trabalho, seguido pelo 

levantamento  bibliogr√°fico  por  meio  de  leituras  de  livros,  artigos  f√≠sicos  e  online, 

peri√≥dicos, dentre outros.  

Este trabalho modulou-se em obras de autores renomados, como Coutinho 

e Ribenboim, que tratam de testes de primalidade sob diversos pontos de vista, como 

os m√©todos com uso de exponencia√ß√£o, necessidade ou n√£o de fatora√ß√£o, algoritmos 

determin√≠sticos e n√£o determin√≠sticos etc. Representa tamb√©m uma continuidade das 

pesquisas com temas direcionados √† localiza√ß√£o de primos, encontradas em bancos 

de trabalhos acad√™micos, incluindo o reposit√≥rio de disserta√ß√µes do PROFMAT.  

A  metodologia  utilizada  foi  a  pesquisa  bibliogr√°fica,  que  representa  uma 

etapa essencial  de  todo trabalho  cient√≠fico e  exerce grande  influ√™ncia  nas fases  de 

uma investiga√ß√£o, ao passo que fundamenta teoricamente o objeto de estudo. 

A pesquisa bibliogr√°fica, na vis√£o de Fonseca (2002):  

√â  feita  a  partir  do  levantamento  de  refer√™ncias  te√≥ricas  j√°  analisadas,  e 
publicadas por meios escritos e eletr√¥nicos, como livros, artigos cient√≠ficos, 
p√°ginas  de  web  sites.  Qualquer  trabalho  cient√≠fico  inicia-se  com  uma 
pesquisa  bibliogr√°fica,  que  permite  ao  pesquisador  conhecer  o  que  j√°  se 
estudou  sobre  o  assunto.  Existem,  por√©m,  pesquisas  cient√≠ficas  que  se 
baseiam  unicamente  na  pesquisa  bibliogr√°fica,  procurando  refer√™ncias 
informa√ß√µes  ou 
te√≥ricas  publicadas  com  o  objetivo  de 
conhecimentos  pr√©vios  sobre  o  problema  a  respeito  do  qual  se  procura  a 
resposta (FONSECA, 2002, p. 32). 

recolher 

A  fim  de  garantir  uma  s√≥lida  base  referencial,  procurou-se  fazer  um 

levantamento  de  literatura  de  autores  reconhecidos  na  tem√°tica,  tanto  no  cen√°rio 

nacional quanto internacional. Nas consultas de publica√ß√µes na internet, fez-se uma 

sele√ß√£o criteriosa de disserta√ß√µes, revistas, teses, livros digitalizados, dentre outros. 

Para assegurar a qualidade da pesquisa bibliogr√°fica, as teses e disserta√ß√µes foram 

buscadas  no  banco  de  dados  da  Coordena√ß√£o  de  Aperfei√ßoamento  de  Pessoal  de 

 
 
N√≠vel  Superior  (CAPES),  no  s√≠tio  eletr√¥nico  do  PROFMAT,  na  Biblioteca  Digital 

Brasileira de Teses e Disserta√ß√µes (BDTD), entre outros. 

15 

 
 
 
 
16 

3 SOBRE OS N√öMEROS PRIMOS 

3.1 N√∫meros naturais 

A  fim  de  estudar  detalhadamente  os  primos  e  os  m√©todos  para  sua 

localiza√ß√£o,  vamos  conhecer  um  pouco  sobre  o  conjunto  dos  naturais.  A  aparente 

simplicidade  destes  n√∫meros  pode  esconder  importantes  quest√µes  com  elevados 

n√≠veis de complexidade. Nesse sentido, destacamos o estudo da Teoria dos N√∫meros 

que, resumidamente, discorre acerca da propriedade dos n√∫meros inteiros positivos. 

Sobre essa mat√©ria, Stewart (2014) relata que: 

Os n√∫meros naturais 1, 2, 3, 4, 5... s√£o claros, sem enfeites. Pode haver algo 
mais simples? Mas o exterior de simplicidade esconde profundezas ocultas, 
e  muitas  das  mais  desconcertantes  quest√µes  em  matem√°tica  abordam  as 
propriedades  aparentemente  diretas  dos  n√∫meros  inteiros.  Essa  √°rea  √© 
conhecida como teoria dos n√∫meros, e acaba se mostrando dif√≠cil exatamente 
porque seus ingredientes s√£o t√£o b√°sicos (STEWART, 2014, p. 88). 

O conjunto dos n√∫meros naturais √© intuitivamente um dos conceitos mais 

triviais do estudo da matem√°tica. Associados √† ideia de contagem, estes algarismos 

proporcionam uma imediata no√ß√£o de quantidade ao relacionar os elementos deste 

conjunto com os objetos quantificados. Vejamos sua representa√ß√£o: 

‚Ñï = {1,2,3,4,5, ‚Ä¶ } 

O conjunto dos naturais foi caracterizado com precis√£o no in√≠cio do s√©culo 

passado,  conforme  exposto  por  Lima  (2013,  p.  23):  ‚ÄúDecorridos  muitos  mil√™nios, 

podemos hoje descrever concisa e precisamente o conjunto ‚Ñï dos n√∫meros naturais, 

valendo-nos  da  not√°vel  s√≠ntese  feita  pelo  matem√°tico  italiano  Giuseppe  Peano  no 

limiar do s√©culo 20‚Äù.  

Assistamos, agora, os quatro axiomas de Peano: 

1. Seja ùëõ um n√∫mero natural, ent√£o ùëõ possui um √∫nico sucessor; 

2. Dados ùëö e ùëõ naturais, se ùëõ ‚â† ùëö, ent√£o o sucessor de ùëõ √© diferente do sucessor de 

ùëö; 

3. O n√∫mero natural ùëö, representado por 1, √© o √∫nico natural que n√£o √© sucessor de 

nenhum outro; 

4. Dado o conjunto ùê¥, com ùê¥ ‚äÇ ‚Ñï. Se 1 ‚àà ùê¥ e se o sucessor de todo elemento de ùê¥ 

pertence a ùê¥, ent√£o ùê¥ = ‚Ñï. 

 
 
17 

O axioma da indu√ß√£o, largamente utilizado em demonstra√ß√µes, √© baseado 

no  quarto  axioma  de  Peano.  Este  m√©todo  √©  capaz  de  provar  que  no  conjunto  dos 

n√∫meros  naturais est√£o  definidas  as  opera√ß√µes  de  adi√ß√£o  e  multiplica√ß√£o,  ou  seja, 

para ùëé e ùëè naturais, temos (ùëé, ùëè) ‚Ü¶ ùëé + ùëè e (ùëé, ùëè) ‚Ü¶ ùëé ‚àô ùëè.  

As  opera√ß√µes  de  adi√ß√£o  e  multiplica√ß√£o  possuem  as  seguintes 

propriedades, tamb√©m provadas pelo axioma da indu√ß√£o1:  

1. Comutatividade: se ùëé e ùëè s√£o n√∫meros naturais, ent√£o ùëé + ùëè = ùëè + ùëé e ùëé ‚àô ùëè = ùëè ‚àô ùëé 

2. Associatividade: se ùëé, ùëè e ùëê s√£o n√∫meros naturais, ent√£o ùëé + (ùëè + ùëê) = (ùëé + ùëè) + ùëé 

e ùëé ‚àô (ùëè ‚àô ùëê) = (ùëé ‚àô ùëè) ‚àô ùëê 

3. Distributividade: se ùëé, ùëè e ùëê s√£o n√∫meros naturais, ent√£o ùëé ‚àô (ùëè + ùëê) = ùëé ‚àô ùëè + ùëé ‚àô ùëê 

4. Lei de Corte para Adi√ß√£o: se ùëé, ùëè e ùëê s√£o n√∫meros naturais e ùëé + ùëè = ùëê + ùëè, ent√£o 

ùëé = ùëê 

5. Lei de Corte para Adi√ß√£o: se ùëé, ùëè e ùëê s√£o n√∫meros naturais e ùëé + ùëè = ùëê + ùëè, ent√£o 

ùëé = ùëê 

Outra importante propriedade do conjunto dos n√∫meros naturais √© a rela√ß√£o 

de ordem, assim definida: dados ùëé e ùëè naturais, diz-se que ùëé ‚â§ ùëè (ùëé √© menor do que 

ou igual a ùëè) para indicar que existe um ùëê natural, tal que ùëè = ùëé + ùëê.  

A partir desta rela√ß√£o, verifica-se as propriedades a seguir, provadas mais 

uma vez com ou aux√≠lio do axioma da indu√ß√£o: 

1. Tricotomia: para ùëé e ùëè naturais, somente uma das possibilidades √© verdadeira:  

ùëé < ùëè 

ùëè < ùëé 

ùëé = ùëè 

2.  Transitividade  da  Rela√ß√£o  de  Ordem:  sejam  ùëé,  ùëè  e  ùëê  naturais,  se  ùëé < ùëè  e  ùëè < ùëê, 

ent√£o ùëé < ùëê 

3. Monotonicidade: sejam ùëé, ùëè e ùëê naturais, se ùëé < ùëè, ent√£o ùëé + ùëê < ùëè + ùëê e ùëé ‚àô ùëê < ùëè ‚àô ùëê 

4. Lei de Corte para Desigualdades: 

1 As demonstra√ß√µes podem ser verificadas no cap√≠tulo 2 da obra de Lima (2013). 

 
 
 
18 

4.1. Se ùëé, ùëè e ùëê s√£o n√∫meros naturais e ùëé + ùëê < ùëè + ùëê ent√£o ùëé < ùëè  

4.2. Se ùëé, ùëè e ùëê s√£o n√∫meros naturais e ùëé ‚àô ùëê < ùëè ‚àô ùëê ent√£o ùëé < ùëè  

5. Princ√≠pio da Boa Ordena√ß√£o: dado um conjunto n√£o vazio ùëã ‚äÇ ‚Ñï. Todo conjunto ùëã 

possui um menor elemento.  

3.2 Conceitos iniciais sobre primos 

No conjunto dos n√∫meros naturais, um importante conjunto √© notadamente 

importante,  os  n√∫meros  primos,  representantes  da  base  de  forma√ß√£o  dos  demais 

elementos.  Um  n√∫mero  primo  √©  aquele  que  s√≥  pode  ser  dividido  por  um  e  por  si 

mesmo, conforme destacado por Hefez (2014, p. 140), ao definir que: 

Defini√ß√£o  1.  ‚ÄúUm  n√∫mero  natural  maior  do  que  1  que  s√≥  possui  como  divisores 

positivos 1 e ele pr√≥prio √© chamado de n√∫mero primo.‚Äù 

Se um natural ùëõ > 1 n√£o √© primo, dizemos que ùëõ √© composto. A partir da 

defini√ß√£o de primo, um resultado b√°sico, mas n√£o menos importante, √© o lema exposto 

abaixo: 

Lema 1. Todo n√∫mero par maior que 2 √© composto. 

Demonstra√ß√£o. Se ùëõ √© um n√∫mero par, ent√£o pode ser escrito na forma 2ùëò, com ùëò ‚àà

‚Ñï, como ùëõ √© maior que 2, ent√£o ùëõ > 2 ‚áí 2ùëò > 2 ‚áí ùëò > 1, ent√£o 2ùëò possui no m√≠nimo 

os divisores 1, 2 e 2ùëò, logo, por defini√ß√£o, √© composto. 

Os primos s√£o costumeiramente chamados de √°tomos da aritm√©tica, j√° que 

representam  o  seu  sustent√°culo,  posto  que  a  constru√ß√£o  dos  n√∫meros  naturais 

depende  de  fatores  prim√°rios.  Sautoy  (2007)  relata  que  este  fato,  h√°  mil√™nios,  foi 

provado pelos gregos, conforme trecho a seguir: 

Os  gregos  da  Antiguidade  [...]  descobriram,  no  quarto  s√©culo  a.C.,  a 
capacidade dos primos de servir como blocos de constru√ß√£o para todos os 
n√∫meros.  Eles  perceberam  que  todo  n√∫mero  podia  ser  gerado  pela 
multiplica√ß√£o  de  n√∫meros  primos.  Embora  os  gregos  acreditassem 
erroneamente que fogo, ar, √°gua e terra fossem os elementos constitutivos 
da mat√©ria, foram precisos ao identificar os √°tomos da aritm√©tica (SAUTOY, 
2007, p. 31). 

Este pensamento nos leva a um dos mais importantes resultados da Teoria 

dos N√∫meros, o Teorema Fundamental da Aritm√©tica, que afirma o seguinte: 

Teorema  1.  Todo  n√∫mero  inteiro  maior  do  que  1  √©  escrito  de  forma  √∫nica  (com 

exce√ß√£o da ordem dos fatores) como um produto de fatores primos. 

 
 
19 

Demonstra√ß√£o. Dado um n√∫mero natural ùëõ maior do que 1, se ùëõ for primo, n√£o h√° o 

que se provar. Se ùëõ for composto e ùëö1 > 1 for o menor fator positivo de ùëõ, portanto 

primo, ent√£o ele pode ser decomposto em ùëõ = ùëö1 ¬∑ ùëé1. Se ùëé1 for primo, a prova estar√° 

completa,  se  for  composto,  ent√£o  ele  possui  ùëö2  como  menor  fator  positivo  primo, 

assim  ùëé1 = ùëö2 ‚àô ùëé2,  logo  ùëõ = ùëö1 ‚àô ùëö2 ‚àô ùëé2.  Mantendo  o  racioc√≠nio  e  sabendo  que  ùëõ 

possui  um  n√∫mero  de  fatores  finitos,  temos  ùëõ = ùëö1 ¬∑ ùëö2 ¬∑ ùëö3 ¬∑ ùëö4 ¬∑ ‚Ä¶ ¬∑ ùëöùëõ,  e  como 
ùëò1 ¬∑

estes  fatores  n√£o  s√£o  essencialmente  distintos,  representamos  ùëõ  como  ùëõ = ùëö1
ùëòùëõ, logo ùëõ √© formado por um produto de fatores primos.  

ùëò4 ¬∑ ‚Ä¶ ¬∑ ùëöùëõ

ùëò3 ¬∑ ùëö4

ùëò2 ¬∑ ùëö3

ùëö2

Quanto √† unicidade, podemos prov√°-la por indu√ß√£o, da seguinte maneira: 

para  ùëõ = 2,  prova-se  claramente  a  unicidade.  Supondo  sua  validade  para  inteiros 

maiores que 1 e menores que ùëõ, vamos provar sua validade para valores iguais √† ùëõ. 

Se ùëõ  √© primo,  a  prova se  verifica  claramente.  Se  ùëõ  √©  composto,  consideremos  que 

tenha  duas  fatora√ß√µes,  a  saber,  ùëõ = ùëö1 ¬∑ ùëö2 ¬∑ ùëö3 ¬∑ ùëö4 ¬∑ ‚Ä¶ ¬∑ ùëöùëû = ùëü1 ¬∑ ùëü2 ¬∑ ùëü3 ¬∑ ùëü4 ¬∑ ‚Ä¶ ¬∑ ùëüùë†, 

com ùëöùëû e ùëüùë† primos. Devemos provar que ùëû = ùë† e que ùëöùëñ = ùëüùëó s√£o iguais, um a um. 

Como ùëö1|ùëü1 ¬∑ ùëü2 ¬∑ ùëü3 ¬∑ ùëü4 ¬∑ ‚Ä¶ ¬∑ ùëüùë†, ent√£o ùëö1|ùëüùëó. Sem perda de generalidade, iremos supor 

ùëö1|ùëü1. Como ùëö1 e ùëü1 s√£o primos, ent√£o ùëö1 = ùëü1. Reordenando os termos, temos ùëö2 ¬∑

ùëö3 ¬∑ ùëö4 ¬∑ ‚Ä¶ ¬∑ ùëöùëû = ùëü2 ¬∑ ùëü3 ¬∑ ùëü4 ¬∑ ‚Ä¶ ¬∑ ùëüùë†.  Visto  que  1 < ùëö2 ¬∑ ùëö3 ¬∑ ùëö4 ¬∑ ‚Ä¶ ¬∑ ùëöùëû < ùëõ,  ent√£o  a 

hip√≥tese demonstra que ùëû = ùë† e que, um a um, ùëöùëõ = ùëüùë†.  

Conforme afirmado por Hefez (2005, p.82), ‚Äúdo ponto de vista da estrutura 

multiplicativa dos naturais, os n√∫meros primos s√£o os mais simples e ao mesmo tempo 

s√£o  suficientes  para  gerar  todos  os  n√∫meros  naturais‚Äù.  Dessa  forma,  se  percebe  a 

import√¢ncia destes n√∫meros, uma vez que s√£o a base de forma√ß√£o na constru√ß√£o dos 

naturais e, portanto, servem de estudo na concep√ß√£o de outros conjuntos num√©ricos.  

3.3 N√∫meros primos e sua infinitude 

Ao longo dos anos, muito se descobriu acerca dos primos, como o fato de 

sua quantidade ser infinita, provado por Euclides em sua obra Os Elementos, segundo 

narrado por Boyer (1974, p. 84), que nos apresenta a Proposi√ß√£o 20: ‚Äún√∫meros primos 

s√£o mais do que qualquer quantidade fixada de n√∫meros primos. Isto √©, Euclides d√° 

aqui a prova elementar bem conhecida do fato que h√° infinitos n√∫meros primos.‚Äù A 

prova apresentada por Euclides, para esta not√°vel descoberta, foi a seguinte:  

Proposi√ß√£o 1. Os n√∫meros primos s√£o infinitos.  

 
 
20 

Demonstra√ß√£o.  Vamos  considerar  que  o  n√∫mero  de  primos  seja  finito.  Temos, 

portanto a seguinte sequ√™ncia de primos: ùëõ1, ùëõ2, ùëõ3, ùëõ4, ‚Ä¶ , ùëõùëü. Seja, agora, o n√∫mero 

ùëÅ = ùëõ1 ‚àô   ùëõ2 ‚àô  ùëõ3 ‚àô ùëõ4 ‚àô ‚Ä¶ ‚àô ùëõùëü + 1. Se ùëÅ for primo, ent√£o evidentemente n√£o pertence ao 

conjunto  dos  elementos  da  sequ√™ncia  considerada,  pois  supomos  existir  apenas  ùëü 

deles. Agora, se ùëÅ for composto, considerando o Teorema Fundamental da Aritm√©tica, 

ent√£o  ùëÅ  possui  como  um  de  seus 

fatores  um  elemento  do  conjunto 

{ùëõ1, ùëõ2, ùëõ3, ùëõ4, ‚Ä¶ , ùëõùëü}, por√©m 1 n√£o pode ser dividido por nenhum deles. Em ambos os 

casos a suposi√ß√£o se mostra falsa, logo existe um n√∫mero primo maior que ùëõùëü. 

Posteriormente,  outras  demonstra√ß√µes  foram  apresentadas  sobre  a 

infinitude dos n√∫meros primos. Exibiremos uma formulada por Leonhard Euler2, para 

a qual precisaremos apresentar, primeiramente, dois importantes resultados.  

Lema 2. A s√©rie harm√¥nica 

‚àû

ùëõ=1

√© divergente. 

‚àë (

1
ùëõ

)

= 1 +

1
2

+

1
3

+

1
4

+ ‚ãØ +

1
ùëõ

+ ‚ãØ 

(1) 

Sua  primeira  demonstra√ß√£o  foi  dada  pelo  franc√™s  Nicole  Oresme  (1325-

1382), que atrav√©s do agrupamento dos termos da s√©rie (1), comparou-a com outra 

s√©rie, a fim de se chegar ao resultado (√ÅVILA, 1995), conforme apresenta√ß√£o a seguir: 

Demonstra√ß√£o (Lema 2). Seja a s√©rie 

‚àû
‚àë(ùëéùëõ)
ùëõ=1

= 1 +

1
2

+

1
3

+

1
4

+

1
5

+

1
6

+

1
7

+

1
8

+

1
9

‚Ä¶ +

1
ùëõ

+ ‚ãØ 

(2) 

Com ùëéùëõ = 1/ùëõ, 

Apesar da s√©rie parecer convergente, afinal  

1
ùë•

lim
ùë•‚Üí‚àû

= 0 

2  Matem√°tico  su√≠√ßo  que  viveu  entre  os  anos  de  1707  e  1783.  Foi  autor  de  diversos  trabalhos 
matem√°ticos e realizou importantes estudos a respeito da Teoria dos N√∫meros, incluindo os n√∫meros 
primos,  sobre  os  quais  fez  descobertas  que  influenciaram  grandes  avan√ßos  no  estudo  destes 
(BOYLER, 1974). 

 
 
 
 
 
21 

Vamos demonstrar que √© divergente, 

Dada a s√©rie  

‚àë ùëèùëö = 1 +

1
2

+

1
4

+

1
4

+

1
8

+

1
8

+

1
8

+

1
8

+ ‚ãØ 

(3) 

Na qual cada termo √© formado a partir da seguinte rela√ß√£o: 

ùëè1 = ùëé1, ùëè2 = ùëé2, ùëè3 = ùëé4, ùëè4 = ùëé4, ùëè5 = ùëé8, ùëè6 = ùëé8, ùëè7 = ùëé8, ùëè8 = ùëé8,  

Mantendo esse racioc√≠nio indefinidamente, temos: 

‚àë ùëèùëõ = 1 +

1
2

+ (

1
4

+

1
4

) + (

1
8

+

1
8

+

1
8

+

1
8

) + ‚ãØ = 1 +

1
2

+

1
2

+

1
2

+ ‚ãØ 

(4) 

Como ùëèùëõ = ùëéùëö, para ùëõ = ùëö e ùëèùëõ < ùëéùëö, para ùëõ ‚â† ùëö, temos 

‚àë ùëèùëõ < ‚àë (

‚àû

ùëõ=1

1
ùëéùëõ

)

Como  ‚àë ùëèùëõ  √©  claramente  divergente,  conclui-se  que  ‚àë

‚àû
ùëõ=1

(

1
ùëéùëõ

)

  tamb√©m  √© 

divergente. Logo a s√©rie harm√¥nica √© divergente.  

Agora, vamos provar o segundo resultado. 

Seja um n√∫mero primo ùëù, ent√£o 

1
ùëù

< 1 

Dada, agora,  a  s√©rie geom√©trica ‚Äì  soma dos  termos  de uma  progress√£o 

geom√©trica ‚Äì cuja raz√£o √© 1/ùëù e primeiro termo √© 1, temos: 

‚àû

‚àë

ùëõ=0

1
ùëùùëõ

=

1

1 ‚àí

1
ùëù

De forma an√°loga, seja ùëû outro primo, com ùëû ‚â† ùëù, temos 

‚àû

‚àë

ùëõ=0

1
ùëûùëõ

=

1

1 ‚àí

1
ùëû

(5) 

(6) 

 
 
 
 
 
 
 
 
 
22 

Assim, multiplicando os membros de (5) por (7), respectivamente, temos 

‚àû

‚àë

ùëõ=0

1
ùëùùëõ

‚àû

‚àô ‚àë

ùëõ=0

1
ùëûùëõ

= (

1

1 ‚àí

1
ùëù

1

) (

1 ‚àí

) 

1
ùëû

(1 +

1
ùëù

+

1
ùëù2 +

1
ùëù3 + ‚ãØ +

1
ùëùùëõ + ‚ãØ ) (1 +

1
ùëû

+

1
ùëû2 +

1
ùëû3 + ‚ãØ +

1
ùëûùëõ + ‚ãØ ) = (

1

1 ‚àí

1

) (

1 ‚àí

1
ùëù

) 

1
ùëû

1 +

1
ùëù

+

1
ùëû

+

1
ùëùùëû

+

1
ùëù2 +

1
ùëù2 + ‚ãØ = (

1

1 ‚àí

1
ùëù

1

) (

1 ‚àí

) 

1
ùëû

(7) 

Da√≠, sobrev√©m o seguinte fato: 

O primeiro membro representa a soma de todas as formas poss√≠veis dos 

inversos  de  ùëùùëéùëûùëè,  com  ùëé ‚â• 0 ùëí ùëè ‚â• 0,  os  quais,  pelo  Teorema  Fundamental  da 

Aritm√©tica, s√£o contados uma √∫nica vez, a menos da ordem dos fatores.  

Por fim, apresentaremos a prova de Euler sobre a infinidade dos n√∫meros 

primos. 

Demonstra√ß√£o  (Proposi√ß√£o  1).  Vamos  supor  que  ùëù1, ùëù2, ùëù3, ùëù4, ‚Ä¶ , ùëùùëü  sejam  todos  os 

n√∫meros primos, em n√∫mero finito, e considerar a seguintes igualdades 

‚àû

‚àë

ùëõ=0

1
ùëõ
ùëù1

‚àû

‚àë

ùëõ=0

1
ùëõ
ùëù2

‚àû

‚àë

ùëõ=0

1
ùëõ
ùëùùëü

=

1

1 ‚àí

1
ùëù1

=

‚ãÆ 

=

1

1 ‚àí

1
ùëù2

1

1 ‚àí

1
ùëùùëü

Para ùëñ = 1, 2, 3, ‚Ä¶ , ùëü 

Agora,  multiplicando  os  respectivos  membros  das  igualdades  formadas 

para todos os ùëü, obtemos 

 
 
 
 
 
 
ùëü

‚àû

‚àè (‚àë

ùëñ=1

ùëõ=0

1
ùëõ
ùëùùëñ

ùëü

)

= ‚àè (

1

ùëñ=1

1 ‚àí

)

1
ùëùùëñ

23 

(8) 

De  onde  conclui-se,  pelo  resultado  (7)  e  pelo  Teorema  Fundamental  da 

Aritm√©tica, que o primeiro membro √© composto pela soma dos inversos de todos os 

n√∫meros naturais. 

Deste modo, pelo resultado (1) e como a ordem dos termos n√£o alterar√° o 

resultado,  j√°  que  todos  s√£o  positivos,  resulta  que  o  primeiro  membro  √©  divergente, 

logo, √© infinito, contudo, o segundo membro √© finito, um absurdo.  

Conclui-se, portanto, que os n√∫meros primos s√£o infinitos. 

3.4 F√≥rmulas para n√∫meros primos 

A  notabilidade  dos  n√∫meros  primos  reside,  em  grande  parte,  na  sua 

localiza√ß√£o imprevis√≠vel, ou seja, na cadeia de sucess√£o de n√∫meros naturais, e por 

n√£o ter sido encontrada, ainda, uma forma precisa de se identificar indefinidamente o 

pr√≥ximo  primo.  Esta  lacuna  na  compreens√£o  destes  n√∫meros  fora  constatada  h√° 

s√©culos, conforme percebido nas palavras de Euler, comentadas por Sautoy (2007): 

Por√©m, at√© para o grande Euler foi dif√≠cil encontrar uma f√≥rmula simples que 
gerasse  todos  os  primos.  Em  1751,  ele  escreveu  que  ‚Äúh√°  alguns  mist√©rios 
nos quais a mente humana jamais penetrar√°. Para nos convencermos desse 
fato, basta fitarmos as tabelas de primos e perceberemos que ali n√£o reina 
qualquer  ordem  ou  regra‚Äù.  Parece  paradoxal  que  os  objetos  fundamentais 
sobre  os  quais  constru√≠mos  nosso  organizado  mundo  matem√°tico  se 
comportem de maneira t√£o irregular e imprevis√≠vel (SAUTOY, 2007, p. 55). 

Na  tentativa  de  localizar  primos,  foram  propostas  algumas  f√≥rmulas 

capazes  de  identific√°-los,  como  a  de  Pierre  de  Fermat3,  que,  erroneamente,  foi 

admitida  por  seu  autor  como  capaz  de  encontrar  infinitos  primos.  Os  N√∫meros  de 
Fermat, provenientes da f√≥rmula ùêπùëõ =   22ùëõ
0, ùëõ = 1, ùëõ = 2, ùëõ = 3  ùëí  ùëõ = 4,  contudo,  ela  falha  para  ùëõ = 5,  dado  que  este  valor 

+ 1, de fato s√£o primos para valores de ùëõ =

representa  um  n√∫mero  composto,  pois  ùêπ5 =  4.294.967.297 = 641 ‚àô 6.700.417,  fato 

provado, em 1732 por Euler (HEFEZ, 2005).  

3 Jurista e pesquisador matem√°tico que viveu entre os anos de 1601 e 1665. Fermat, assim como Euler, 
realizou importantes pesquisas em diversas √°reas da matem√°tica, contudo foi na Teoria dos N√∫meros 
que deixou sua maior influ√™ncia (STEWART, 2014). 

 
 
 
 
 
24 

Aliada √† capacidade desta ferramenta de encontrar n√∫meros primos para 

os  primeiros  quatro  valores  de  ùëõ,  existe  a  frustra√ß√£o  de  nunca  ter  sido  encontrado 

outros al√©m destes, pois, atualmente, o maior primo conhecido gerado pela f√≥rmula 

de Fermat √© ùêπ4 = 65537 (RIBENBOIM, 2014). 

Outra forma de localizar primos tamb√©m foi considerada pelo franc√™s Marin 

Mersenne (1588-1648), que prop√¥s n√∫meros na forma 2ùëö ‚àí 1, com ùëö primo, capazes 

de gerar primos, como ocorre com ùëö = 2, ùëö =  3 e ùëö =  5, contudo isso n√£o ocorre 

indefinidamente,  j√°  que,  por  exemplo,  para  ùëö = 11,  obt√™m-se  2047 = 89 ‚àô 23. 
Portanto,  define-se  como  N√∫mero de  Mersenne  n√∫meros na forma  ùëÄùëû = 2ùëû ‚àí 1,  no 

qual ùëû √© primo. Se ùëÄùëû for primo, ent√£o ser√° denominado Primo de Mersenne.  

Diversos primos de Mersenne j√° foram identificados, contudo ainda n√£o se 

t√™m provas sobre sua infinidade. Os maiores primos j√° localizados s√£o de Mersenne 

e det√©m o recorde do maior primo conhecido, registrado em janeiro de 2019, o qual 

bateu seu antecessor, que tamb√©m era do mesmo tipo. O n√∫mero pode ser escrito 

como 282589933 ‚àí 1, com 24.862.048 d√≠gitos (IMPA, 2019).  

As tentativas de localizar primos por interm√©dio de f√≥rmulas n√£o findaram 

com  Fermat  e  Mersenne.  Alguns  grandes estudiosos  propuseram  m√©todos  para  se 

chegar √†queles, como Euler, que apresentou o seguinte teorema: 

Seja  a  fun√ß√£o  ùëì: ‚Ñ§+ ‚Üí ‚Ñ§,  definida  por  ùëì(ùë•) = ùë•2 + ùë• + 41.  Se  0 < ùë• < 39, 

ent√£o ùëì assumir√° valores primos.  

De 

fato,  para  ùë• = 0, 1, 2, 3, 4, ‚Ä¶ ,39, 

temos,  respectivamente,  ùëì(ùë•) =

41, 43, 47, 53, 61, ‚Ä¶ , 1601,  os  quais  s√£o  primos.  A  fun√ß√£o  falha  para  ùë• = 40,  pois 

ùëì(40) = 1681 = 41¬≤. 

Polin√¥mios da forma ùë•2 + ùë• + ùëû, onde ùëû √© um n√∫mero primo, possui como 

melhor resultado o de Euler, apresentado anteriormente, em termos de quantidades 

de valores primos iniciais sucessivos (RIBENBOIM, 2014). 

3.5 Outras fun√ß√µes sobre os n√∫meros primos 

Os esfor√ßos voltados √† procura de fun√ß√µes definidoras de primos ainda n√£o 

revelaram  resultados  proeminentes,  no  entanto  um  tipo  especial  de  fun√ß√£o  tem 

mostrado grande progresso. A fun√ß√£o ùúã(ùë•), que representa a quantidade de n√∫meros 

 
 
25 

primos entre 1 e ùë•, tem sido estudada h√° s√©culos, desde a inovadora forma de lidar 

com os primos, iniciada pelo matem√°tico alem√£o Carl Friedrich Gauss.  

Gauss  estimou  que  a  quantidade  de  primos  entre  1  e  ùë•  seria  ùë• log ùë•

‚ÅÑ

  e 

posteriormente refinou-a por meio da fun√ß√£o.  

ùë•

Li(ùë•) = ‚à´
2

ùëëùë°
log ùë°

Em seguida, a partir desta ideia, desenvolveu-se o Teorema dos N√∫meros 

Primos. 

lim
ùë•‚Üí‚àû

ùúã(ùë•)
ùë•
ln ùë•

= 1 

No  qual  o  limite  entre  o  quociente  de  ùúã(ùë•)  e  ùë•/ln ùë•,  quando  ùë•  tende  ao 

infinito, √© 1, ou seja, ùúã(ùë•) tende a se aproximar de ùë•/ln ùë• √† medida que o valor de ùë• 

aumenta. Este teorema foi provado por Jacques Hadamard4 e Charles de La Vall√©e 

Poussin5, de forma independente, em 1896 (MOREIRA, MARTINEZ, 2010). 

Outro  importante  resultado  relacionado  aos  n√∫meros  primos  foi  revelado 

pelo  estudo  da  fun√ß√£o  zeta  (ùúÅ),  representada  pela  letra  grega  que  leva  seu  nome. 

Euler foi um dos primeiros a apresentar importantes aspectos dessa fun√ß√£o, a qual 

recebe a designa√ß√£o de Fun√ß√£o Zeta de Euler (D‚ÄôAMBROSIO, 2008). 

A fun√ß√£o ùúÅ: ‚Ñù ‚Üí ‚Ñù, √© definida por: 

ùúÅ(ùë•) = 1 +

1
2ùë• +

1
3ùë• +

1
4ùë• + ‚ãØ +

1
ùëõùë• + ‚ãØ = ‚àë

1
ùëõùë•

(9) 

‚àû

ùëõ=1

Os primeiros registros do desenvolvimento destas somas infinitas v√™m da 

√©poca dos gregos, na qual Pit√°goras descobriu uma rela√ß√£o harm√¥nica entre as notas 

musicais e os n√∫meros 1, 1 2‚ÅÑ , 1 3‚ÅÑ  e 1 4‚ÅÑ  (SAUTOY, 2007).  

4 Jacques Hadamard (1865-1963) foi um matem√°tico franc√™s cujo resultado mais conhecido √© a prova 
do  Teorema  dos  N√∫meros  Primos,  apresentada  em  1896,  paralelamente  √†  demonstrada  por  Vall√©e 
Poussin, no mesmo ano (O'CONNOR, ROBERTSON, 2003). 
5 Charles Jean Gustave Nicolas Baron de la Vall√©e Poussin (1866-1962) foi um matem√°tico belga, mais 
conhecido por sua obra principal, Curso de An√°lise, e por sua prova do Teorema dos N√∫meros Primos, 
apresentada  em  1896,  que  tamb√©m  foi  provada  por  Hadamard,  no  mesmo  ano,  mas  de  forma 
independente (O'CONNOR, ROBERTSON, 2001). 

 
 
 
 
 
 
26 

Para  ùë• = 1,  provou-se  por  (1)  que  a  fun√ß√£o  tende  ao  infinito,  contudo  o 

mesmo  n√£o  ocorre  para  valores  acima  de  1,  fato  observado  por  Euler.  Este 

matem√°tico  tamb√©m  mostrou  que  para  ùë• = 2,  ela  converge  para  ùúã¬≤/6  e,  de  forma 

generalizada, que para todo ùë• > 1, a s√©rie ‚àë

‚àû
ùëõ=1

1
ùëõùë•

 √© convergente (RIBENBOIM, 2014). 

Ainda sobre a fun√ß√£o ùúÅ, Euler tamb√©m percebeu uma not√°vel conex√£o entre 

esta  e  os  n√∫meros  primos,  ao  verificar  a  seguinte  rela√ß√£o  entre  aquela  soma  e  o 

produto exposto abaixo. 

ùúÅ(ùë•) = ‚àè (

ùëù ùëùùëüùëñùëöùëú

1
1 ‚àí ùëù‚àíùë•)

(10) 

Para ùë• > 1, denomina-se Produto de Euler.  

Este produto surge a partir da expans√£o das seguintes s√©ries: 

Dada a s√©rie geom√©trica  

‚àû

‚àë

ùëõ=0

1
ùëùùëõùë•

Com ùëù primo e ùë• > 1. Temos, portanto 

‚àû

‚àë

ùëõ=0

‚àû

‚àë

ùëõ=0

‚àû

‚àë

ùëõ=0

1
2ùëõùë•

1
3ùëõùë•

1
5ùëõùë•

‚àû

‚àë

ùëõ=0

1
ùëùùëõùë•

= 1 +

1
2ùë• +

1
22ùë• +

1
23ùë• + ‚ãØ +

1
2ùëõùë• + ‚ãØ =

1
1 ‚àí 2‚àíùë• 

= 1 +

1
3ùë• +

1
32ùë• +

1
33ùë• + ‚ãØ +

1
3ùëõùë• + ‚ãØ =

1
1 ‚àí 3‚àíùë• 

= 1 +

1
5ùë• +

1
52ùë• +

1
53ùë• + ‚ãØ +

1
5ùëõùë• + ‚ãØ =

1
1 ‚àí 5‚àíùë• 

‚ãÆ 

= 1 +

1
ùëùùë• +

1
ùëù2ùë• +

1
ùëù3ùë• + ‚ãØ +

1
ùëùùëõùë• + ‚ãØ =

1
1 ‚àí ùëù‚àíùë• 

‚ãÆ 

Dessa forma, por (8) e pelo Teorema Fundamental da Aritm√©tica, tem-se, 

atrav√©s do produto dos primeiros membros de cada uma das igualdades anteriores, a 

 
 
 
 
 
soma do inverso da en√©sima pot√™ncia de todos os n√∫meros naturais, que igualada ao 

produto do √∫ltimo membro das respectivas igualdades, obt√©m-se 

27 

1 +

1
2ùë• +

1
3ùë• +

1
4ùë• + ‚ãØ +

1
ùëõùë• + ‚ãØ = (

1
1 ‚àí 2‚àíùë•) (

1
1 ‚àí 3‚àíùë•) (

1

1 ‚àí 5‚àíùë•) ‚àô ‚Ä¶ ‚àô (

1

1 ‚àí ùëù‚àíùë•) ‚àô ‚Ä¶ ‚áí 

‚àû

‚àë

ùëõ=1

1
ùëõùë•

= ‚àè (

ùëù ùëùùëüùëñùëöùëú

1
1 ‚àí ùëù‚àíùë•)

‚áí 

ùúÅ(ùë•) = ‚àè (

ùëù ùëùùëüùëñùëöùëú

1
1 ‚àí ùëù‚àíùë•)

(11) 

Por fim, obtemos o produto de Euler, para ùë• > 1, o qual evidenciou que a 

fun√ß√£o ùúÅ relaciona-se com os n√∫meros primos, percebidos em cada um dos fatores 

do produto formado.  

Em 1859, Bernard Riemann6 publicou um artigo intitulado Sobre o n√∫mero 

de  primos  menores  do  que  uma  dada  grandeza,  no  qual  realiza  uma  abordagem 

inovadora sobre os n√∫meros primos. Ao examinar a fun√ß√£o ùúÅ, ele a considerou como 

definida  no  campo  dos  complexos,  resultando  na  designa√ß√£o  de  Fun√ß√£o  Zeta  de 

Riemann. 

Riemann percebeu que os zeros desta fun√ß√£o estavam relacionados com 

os n√∫meros primos. Verifiquemos a fun√ß√£o de Riemann, representada por. 

‚àû
ùëÖ(ùë•) = ‚àë
ùëõ=1

ùúá(ùëõ)
ùëõ

ùêøùëñ( ‚àöùë•ùëõ

) 

Na qual ùúá(ùëõ) √© a fun√ß√£o de M√∂bius, ùúá: ‚Ñï ‚Üí {‚àí1,0,1}, definida como: 

ùúá(ùëõ) = {

1, ùë†ùëí ùëõ = 1;                                                                                  
(‚àí1)ùëù, ùë†ùëí ùëõ √© ùëùùëüùëúùëëùë¢ùë°ùëú ùëëùëí ùëù ùëìùëéùë°ùëúùëüùëíùë† ùëùùëüùëñùëöùëúùë† ùëëùëñùë†ùë°ùëñùëõùë°ùëúùë†;
  0, ùë†ùëí ùëõ ùë°ùëíùëö ùë¢ùëö ùëìùëéùë°ùëúùëü ùëûùë¢ùëéùëëùëüùëéùëëùëú.                                            

6 Georg Friedrich  Bernhard  Riemann foi  um matem√°tico alem√£o  que viveu entre  os anos de 1826 e 
1866. Suas obras influenciaram significativamente a Geometria, An√°lise e Teoria dos N√∫meros. Seus 
trabalhos sobre Geometria Diferencial e An√°lise Matem√°tica serviram de base para relevantes estudos 
em diversas √°reas da ci√™ncia, como a f√≠sica moderna. √â de sua autoria o trabalho sobre primos que 
exerceu forte  impacto  na forma de pensar desses n√∫meros, o  On  the  number of primes less than  a 
given magnitude (Sobre o n√∫mero de primos menores do que uma dada grandeza), publicado em 1859. 
Esta obra serviu como principal refer√™ncia para o prova do a dos N√∫meros Primos e como revela√ß√£o 
de um dos problemas mais importantes em Teoria dos N√∫meros, a Hip√≥tese de Riemann (O'CONNOR 
e ROBERTSON, 1998). 

 
 
 
 
 
 
28 

A  fun√ß√£o  ùëÖ  aproxima  significativamente  o  resultado  de  ùëÖ(ùë•)  ao  valor  de 

ùúã(ùë•).  Atrav√©s  desta  nova  fun√ß√£o,  Riemann  estimou  com  grande  aproxima√ß√£o  o 

resultado da contagem dos primos at√© um dado n√∫mero, refinando expressivamente 

os valores encontrados pela fun√ß√£o de Gauss, conforme dados da tabela a seguir: 

Tabela 1 ‚Äì Compara√ß√£o entre as fun√ß√µes ùêøùëñ(ùë•) e ùëÖ(ùë•) ao serem relacionadas com os valores de ùúã(ùë•) 

ùë• 
108 
109 
1010 
1011 
1012 
1013 
1014 
1015 
1016 
1017 
1018 
1019 
1020 
1021 
1022 

ùúã(ùë•) 
5 761 455 
50 847 534 
455 052 511 
4 118 054 813 
37 607 912 018 
346 065 536 839 
3 204 941 750 802 
29 844 570 422 669 
279 238 341 033 925 
2 623 557 157 654 233 
24 739 954 287 740 860 
234 057 667 276 344 607 
2 220 819 602 560 918 840 
21 127 269 486 018 731 928 
201 467 286 689 315 906 290 

ùêøùëñ(ùë•) ‚àí ùúã(ùë•) 
754 
1 701 
3 104 
11 588 
38 263 
108 971 
314 890 
1 052 619 
3 214 632 
7 956 589 
21 949 555 
99 877 775 
222 744 643 
597 394 254 
1 932 355 208 

ùëÖ(ùë•) ‚àí ùúã(ùë•) 
97 
-79 
-1 828 
-2 318 
-1 476 
-5 773 
-19 200 
73 218 
327 052 
-598 255 
-3 501 366 
23 884 333 
-4 891 825 
-86 432 204 
-127 132 665 

Fonte: (RIBENBOIM, 2014) 

Apesar desta  ampla  aproxima√ß√£o,  a  f√≥rmula  de  Riemann  ainda  continha 

erros, entretanto os n√∫meros complexos, para os quais a fun√ß√£o zeta resultava em 

zero, poderiam corrigi-los, os chamados zeros da fun√ß√£o zeta, conforme observado 

nas palavras de Sautoy (2007): 

Riemann  fez  a  descoberta  fascinante  de  que  o  modo  de  corrigir  sua 
estimativa  dos  n√∫meros  de  primos  estava  codificado  nas  diferentes  alturas 
dessas ondas. A fun√ß√£o ùëÖ(ùëÅ) lhe dava uma contagem razoavelmente boa do 
n√∫mero de primos at√© ùëÅ. Por√©m, ele descobriu que, ao acrescentar a essa 
estimativa a altura de cada onda sobre o n√∫mero ùëÅ, poderia obter o n√∫mero 
exato  de  primos.  O  erro  era  completamente  eliminado.  Assim,  Riemann 
descobriu o C√°lice Sagrado que Gauss havia buscado: a f√≥rmula exata para 
contar o n√∫mero de primos at√© ùëÅ (SAUTOY, 2007, p. 101). 

As  ondas  supramencionadas  caracterizam-se  pela  posi√ß√£o  de  cada  zero 

da  fun√ß√£o  zeta.  A  express√£o  de  ùúã(ùë•)  em  rela√ß√£o  √†  ùëÖ(ùë•),  com  o  termo  de  erro  de 

aproxima√ß√£o, pode ser verificada a seguir. 

ùúã(ùë•) = ùëÖ(ùë•) ‚àí ‚àë ùëÖ(ùë•ùúå

) 

ùúå

 
 
29 

Cuja soma√ß√£o estende-se a todos os zeros ùúå n√£o-triviais7 da fun√ß√£o zeta, 

contados com sua devida multiplicidade (RIBENBOIM, 2014). 

Riemann conjecturou que todos os zeros n√£o-triviais estavam na mesma 

linha,  ou  seja,  sobre  Re(ùë†) =

1
,  portanto,  da  forma  ùúå =
2

1

2

+ ùëñùë°.  Esta  √©  a  conhecida 

Hip√≥tese de Riemann, problema n√£o provado at√© os dias atuais.  

7 A fun√ß√£o zeta possui zeros simples nos pontos ‚àí2, ‚àí4, ‚àí6, ‚Ä¶, os chamados zeros triviais, e os zeros 
no  dom√≠nio  cr√≠tico,  definido  como  o  conjunto  dos  n√∫meros  complexos  ùë†  tais  que  0 ‚â§ Re(ùë†) ‚â§ 1,  os 
chamados zeros n√£o-triviais (RIBENBOIM, 2014). 

 
 
 
 
 
 
 
 
 
30 

4 EVOLU√á√ÉO DOS TESTES DE PRIMALIDADE 

Como  j√°  salientado,  identificar  n√∫meros  primos  pode  ser  um  trabalho 

excessivamente dif√≠cil, uma vez que √© preciso fazer sucessivas divis√µes at√© concluir 

que  n√£o  √©  poss√≠vel  encontrar  fatores  menores  diferentes  da  unidade,  o  que 

implicaria  na  certeza  de  ser  primo.  Ante  a  relutante  incapacidade  de  encontrar 

primos, indefinidamente, atrav√©s de f√≥rmulas, adotou-se, de mil√™nios atr√°s at√© os 

dias atuais, m√©todos capazes de identificar estes n√∫meros, os conhecidos testes de 

primalidade, atrav√©s dos quais adquiriu-se mecanismos facilitadores que reduziu os 

√°rduos  trabalhos  de  divis√µes  cont√≠nuas.  Estes  testes  podem  ser  definidos  como 

algoritmos capazes de definir um n√∫mero como primo ou composto a partir de uma 

sequ√™ncia de a√ß√µes prefixadas. 

Na medida em que o conhecimento sobre os primos evoluiu, os testes de 

primalidade tamb√©m foram aprimorados. Nesta perspectiva, podemos inseri-los em 

dois grandes momentos da hist√≥ria, o primeiro anterior ao advento do computador 

moderno e o segundo a partir da cria√ß√£o deste. Desta forma, este estudo trata dos 

testes desde suas formas tradicionais at√© os m√©todos computacionais.  

4.1 Era pr√©-computacional 

Uma  forma  trivial  de  testar  a  primalidade  de  um  n√∫mero  √©  atrav√©s  da 

realiza√ß√£o  de  divis√µes  sucessivas,  por  meio  das  quais  busca-se  verificar  a 

exist√™ncia  de  fatores  primos  menor  que  o  n√∫mero  em  teste.  Quando  n√£o 

encontrados, teremos um primo, caso contr√°rio, estaremos diante de um composto.  

Ocorre que o m√©todo descrito, apesar de funcionar eficientemente para 

n√∫meros  relativamente  pequenos,  torna-se bastante  dispendioso √† medida  que a 

contagem aumenta. A quantidade de divis√µes necess√°rias para um n√∫mero acima 

da casa dos milhares, por exemplo, j√° seria uma tarefa √°rdua para c√°lculos sem uso 

de m√°quinas modernas.  

 
 
31 

O  desenvolvimento  da  aritm√©tica  tornou  poss√≠vel  a  simplifica√ß√£o  de 

tarefas de contagem, gra√ßas a descobertas como o lema descrito abaixo, revelado 

por Erat√≥stenes8, matem√°tico grego do s√©culo III a.C.  

Lema 3. Seja ùëõ ‚àà ‚Ñï, se ùëõ n√£o √© um n√∫mero primo, ent√£o ùëõ possui um fator primo 

ùëù ‚â§ ‚àöùëõ. 

Demonstra√ß√£o. Seja ùëé um n√∫mero composto, ent√£o ùëé = ùëé1 ‚àô ùëé2, no qual 1 < ùëé1 < ùëé 

e 1 < ùëé2 < ùëé. Sem perder a generalidade, suporemos que ùëé1 ‚â§ ùëé2. Como 

Ent√£o 

ùëé1 ‚àô ùëé2 = ùëé ‚áí ‚àöùëé1 ‚àô ‚àöùëé2 = ‚àöùëé 

ùëé1 ‚â§ ùëé2 ‚áí ‚àöùëé1 ‚â§ ‚àöùëé2 

Multiplicando ambos os membros das desigualdades por ‚àöùëé1, temos 

‚àöùëé1 ‚àô ‚àöùëé1 ‚â§ ‚àöùëé2 ‚àô ‚àöùëé1 

E como ‚àöùëé2 ‚àô ‚àöùëé1 = ‚àöùëé, ent√£o 

‚àöùëé1 ‚àô ‚àöùëé1 ‚â§ ‚àöùëé2 ‚àô ‚àöùëé1 ‚áí ùëé1 ‚â§ ‚àöùëé 

Agora, pelo Teorema Fundamental da Aritm√©tica, ùëé1 possui pelo menos 

um fator primo ùëù e como ùëé1 ‚â§ ‚àöùëé, ent√£o ùëù ‚â§ ‚àöùëé. Desse modo, como ùëù √© fator primo 

de ùëé1, ent√£o ùëù tamb√©m √© fator primo de ùëé, j√° que ùëé1 √© fator de ùëé, provando-se, assim, 

o lema.  

√Ä  vista  disso,  no  m√©todo  supracitado,  para  verificar  a  primalidade  de 

determinado n√∫mero, n√£o √© necess√°rio realizar divis√µes sucessivas at√© este, basta 

selecionar poss√≠veis fatores at√© a raiz quadrada do valor. 

Estes  conhecimentos  tornaram  poss√≠vel  a  idealiza√ß√£o  de  um  dos 

m√©todos  cl√°ssicos  mais conhecidos  quanto  a  identifica√ß√£o de  primos, o  Crivo  de 

8 Erat√≥stenes de Cirene foi um matem√°tico grego que nasceu em Cirene, Norte da √Åfrica, atualmente 
Shahhat, na L√≠bia. Viveu entre os anos de 276 a. C. e 194 a.C. Este estudioso ficou famoso por seu 
trabalho  sobre  n√∫meros  primos  e  por  medir  o  di√¢metro  do  planeta  Terra  (O'CONNOR  e 
ROBERTSON, 1999).  

 
 
 
32 

Erat√≥stenes9, que atrav√©s de um racioc√≠nio simples, mas eficaz, √© capaz de gerar 

rapidamente tabelas destes n√∫meros. 

Um dos resultados cruciais sobre os primos que serviu de base para um 

s√≥lido  desenvolvimento  do  conhecimento  acerca  destes  n√∫meros  foi  o  Pequeno 

Teorema  de  Fermat,  revelado  no  s√©culo  XVII  por  aquele  que  leva  o  seu  nome. 

Referido teorema diz o seguinte: 

Teorema 2. Seja ùëé ‚àà ‚Ñ§ e ùëù um n√∫mero primo, tem-se que ùëù divide ùëéùëù ‚àí ùëé. 

Demonstra√ß√£o. Para ùëù = 2, temos ùëé2 ‚àí ùëé = ùëé(ùëé ‚àí 1), cujo resultado √© par, logo √© 

divis√≠vel por 2. Agora provaremos para ùëù √≠mpar. Como para ùëé < 0 e ùëù √≠mpar temos 

ùëéùëù ‚àí ùëé < 0, ent√£o basta provar para ùëé ‚â• 0. Por indu√ß√£o sobre ùëé, temos que ùëé = 0 

implica em ùëé2 ‚àí ùëé = 0, que √© divis√≠vel por ùëù. Supondo, agora, verdadeiro para ùëé =

ùëò, temos ùëòùëù ‚àí ùëò divis√≠vel por ùëù. Vamos provar que para ùëò + 1 tamb√©m √© verdadeiro. 

Assim, atrav√©s do desenvolvimento do bin√¥mio, temos 

(ùëò + 1)ùëù ‚àí (ùëò + 1) = (

ùëù
0

) ùëòùëù + (

ùëù
1

) ùëòùëù‚àí1 + ‚ãØ + (

ùëù
ùëù ‚àí 1

ùëù
) ùëòùëù‚àí1 + (
ùëù

) ùëò0 ‚àí (ùëò + 1) 

= ùëòùëù + (

ùëù
1

) ùëòùëù‚àí1 + ‚ãØ + (

ùëù
ùëù ‚àí 1

) ùëòùëù‚àí1 + 1 ‚àí (ùëò + 1) 

  = ùëòùëù ‚àí ùëò + (

ùëù
1

) ùëòùëù‚àí1 + ‚ãØ + (

ùëù
ùëù ‚àí 1

) ùëòùëù‚àí1 

(12) 

Como  (ùëù

ùëù‚àí1) ùëòùëù‚àí1  √©  divis√≠vel  por  ùëù  (demonstra√ß√£o  no 
ap√™ndice) e, por hip√≥tese de indu√ß√£o, ùëòùëù ‚àí ùëò tamb√©m √© divis√≠vel por ùëù, segue que 

1)ùëòùëù‚àí1 + ‚ãØ + ( ùëù

(12) √© divis√≠vel por ùëù, logo, para ùëò + 1, √© verdadeiro, provando-se o teorema.  

Uma importante aplica√ß√£o do Pequeno Teorema de Fermat √© o seu uso 

na  verifica√ß√£o  de  primos,  cujos  estudos  serviram  de  base  para  a  formula√ß√£o  de 

diversos testes de primalidade como o Teste de Lucas, Teste de Brillhart e Selfridge, 

Teste de Pepin, entre outros (RIBENBOIM, 2014). 

9 M√©todo criado por Erat√≥stenes para localizar primos (ser√° estudado detalhadamente no cap√≠tulo 
5). 

 
 
 
33 

Outros conceitos foram de suma import√¢ncia para o desenvolvimento de 

testes de primalidade por interm√©dio do avan√ßo da aritm√©tica, especialmente a ideia 

de  congru√™ncia,  que  √©  definida por Hefez  (2014, p.  192)  como  ‚Äúuma  das  no√ß√µes 

mais  fecundas  da  aritm√©tica,  introduzida  por  Gauss  no  seu  livro  Disquisitiones 

Arithmeticae, de 1801. Trata-se da realiza√ß√£o de uma aritm√©tica com os restos da 

divis√£o euclidiana por um n√∫mero fixado.‚Äù 

A partir dessa nova abordagem matem√°tica, novas perspectivas foram 

projetadas  e  avan√ßos  significativos  foram  alcan√ßados  no  campo  da  Teoria  dos 

N√∫meros, notadamente no conjunto dos n√∫meros primos. A grande import√¢ncia da 

aritm√©tica  modular  pode  ser  percebida  nas  palavras  de  Sautoy  (2007),  que 

comparou suas propriedades ao funcionamento de uma calculadora-rel√≥gio: 

O potencial e a velocidade da calculadora-rel√≥gio se tornam evidentes no 
momento em que Gauss deseja calcular o valor de 7  √ó  7  √ó  7. Em vez de 
multiplicar  novamente  49  por 7,  Gauss  pode  simplesmente  multiplicar  a 
√∫ltima resposta (que era 1) por 7, obtendo o resultado 7. Assim, sem ter 
que  calcular  o  valor  de  7  √ó  7  √ó  7  (que  vem  a  ser  343),  ele  sabia,  com 
pouco esfor√ßo, que o resultado deixaria resto 7 ao ser dividido por 12. A 
for√ßa da calculadora foi revelada quando Gauss passou a explorar grandes 
n√∫meros situados al√©m de seu alcance computacional. Embora n√£o tivesse 
a  menor  ideia  do  valor  de  799,  sua  calculadora-rel√≥gio  lhe  dizia  que  o 
n√∫mero deixava resto 7 ao ser dividido por 12 (SAUTOY, 2007, p. 29). 

Em geral, dizemos que os inteiros ùëé e ùëè s√£o congruentes m√≥dulo ùëö, com 

ùëö natural, se os restos da divis√£o euclidiana de ùëé e ùëè por ùëö s√£o iguais. Em termos 

simb√≥licos, temos:  

ùëé ‚â° ùëè mod ùëö, ùëö ‚àà ‚Ñï, ùëé ‚àà ‚Ñ§, ùëè ‚àà ‚Ñ§ 

As aplica√ß√µes dessa nova aritm√©tica s√£o in√∫meras, dado que atrav√©s de 

seus  conceitos  e  propriedades,  por  exemplo,  √©  poss√≠vel  provar  que  determinado 

n√∫mero de Mersenne n√£o √© primo, que alguns n√∫meros de Fermat n√£o s√£o primos, 

al√©m de estabelecer crit√©rios de divisibilidade por certos n√∫meros. Isso mostra que 

o conceito de congru√™ncia revelou novas formas de testar a primalidade 

4.2 Era computacional 

A  humanidade,  nos  √∫ltimos  s√©culos,  evoluiu  tecnologicamente  com 

grande  celeridade,  como  jamais  cresceu  ao  longo  de  sua  hist√≥ria.  Grande  parte 

 
 
34 

desse  acentuado  desenvolvimento  se  deve  ao  advento  e  aperfei√ßoamento  dos 

computadores.  

As  m√°quinas  tornaram-se  uma  realidade  inevit√°vel,  dado  o  constante 

crescimento cient√≠fico e sua consequente aplica√ß√£o em inven√ß√µes e aprimoramento 

de  instrumentos.  Desde  o  per√≠odo  renascentista,  uma  forte  tend√™ncia  voltada  ao 

desenvolvimento 

intelectual  se 

instalou  nas  sociedades  ocidentais,  em 

conformidade com o trecho a seguir: 

[...] O Renascimento deu um extraordin√°rio salto para diante. Nunca uma 
civiliza√ß√£o dera t√£o grande lugar √† pintura e √† m√∫sica, nem erguera ao c√©u 
t√£o  altas  c√∫pulas,  nem  elevara  ao  n√≠vel  da  alta  literatura  tantas  l√≠nguas 
nacionais  encerradas  em  t√£o  ex√≠guo  espa√ßo.  Nunca  no  passado  da 
Humanidade tinham surgido tantas inven√ß√µes em t√£o pouco tempo. Pois o 
renascimento  foi,  especialmente,  progresso  t√©cnico;  deu  ao  homem  do 
Ocidente maior dom√≠nio sobre um mundo mais bem conhecido. Ensinou-
lhe a atravessar os oceanos, a fabricar ferro fundido, a servir-se das armas 
de fogo, a contar as horas com um motor, a imprimir, a utilizar dia a dia a 
letra de c√¢mbio e o seguro mar√≠timo (DELUMEAU, 1984, p. 23). 

A  partir  desse  per√≠odo,  uma  efervescente  busca  por  descobertas  no 

campo cient√≠fico possibilitou o desenvolvimento tecnol√≥gico que se estendeu pelos 

s√©culos vindouros e estabeleceu uma nova era da humanidade. Concomitante ao 

movimento  de  expans√£o  da  ci√™ncia,  nasceram  as  m√°quinas  e,  dentre  estas, 

destacamos  as  capazes  de  realizar  opera√ß√µes  matem√°ticas  e  transpor  os 

obst√°culos presentes na limita√ß√£o de c√°lculos mentais.  

As  primeiras m√°quinas  voltadas  √†  realiza√ß√£o  de opera√ß√µes aritm√©ticas 

foram as calculadoras mec√¢nicas, cujo funcionamento permitiu ao homem executar 

c√°lculos ‚Äì que na √©poca levavam v√°rias horas ‚Äì em apenas poucos comandos. Este 

tipo  de  funcionamento  representou  os  prim√≥rdios  dos  conceitos  do  computador 

moderno. Vejamos o entendimento de Wazlawick (2016) sobre o tema: 

Os s√©culos XVII,  XVIII e XIX viram o surgimento e  aperfei√ßoamento das 
calculadoras  mec√¢nicas.  A  partir  de  trabalhos  inovadores  como  os  de 
Schickard,  Pascal  e  Leibniz,  m√°quinas  capazes  de  realizar  as  quatro 
opera√ß√µes aritm√©ticas com o simples girar de uma alavanca se tornaram 
realidade. Essas m√°quinas, bem como o tear mec√¢nico, que usava cart√µes 
perfurados  j√°  no  in√≠cio  do  s√©culo  XIX,  foram  fundamentais  para  a 
concep√ß√£o  posterior  dos  computadores  de  prop√≥sito  geral  ‚Äì  ou  seja, 
m√°quinas program√°veis para executar qualquer fun√ß√£o comput√°vel e n√£o 
apenas as quatro opera√ß√µes. Esse mesmo per√≠odo tamb√©m testemunhou 
o  desenvolvimento  da  aritm√©tica  bin√°ria  e  o  surgimento  dos  primeiros 

 
 
35 

computadores  humanos,  ou  seja,  pessoas  cuja  profiss√£o  era  executar 
c√°lculos repetitivos √† m√£o (WAZLAWICK, 2016, p. 27). 

Nota-se, deste modo, a tend√™ncia em delegar √† m√°quina certas tarefas 

habitualmente exercidas pelo ser humano. Num momento de grande expans√£o do 

conhecimento  cient√≠fico,  a  matem√°tica 

tamb√©m  passou  por  um  elevado 

desenvolvimento entre os s√©culos XVII e XIX, raz√£o pela qual as m√°quinas tamb√©m 

foram objetos de uso para c√°lculos.  

A partir do desenvolvimento constante dos instrumentos de calcular, n√£o 

demorou  at√©  que  os  computadores  surgissem.  Atrav√©s  da  jun√ß√£o  de  conceitos 

preconcebidos  de  matem√°tica  e  engenharia,  nasceram  as  primeiras  m√°quinas 

capazes de executar fun√ß√µes gerais, conforme apresentado a seguir: 

O  s√©culo  XIX  viu  surgir  o  primeiro  projeto  de  computador  de  prop√≥sito 
universal: a M√°quina Anal√≠tica de Charles Babbage. Neste s√©culo tamb√©m 
se consolidaram as calculadoras mec√¢nicas baseadas em engrenagens, 
que  passaram  a  ser  bastante  utilizadas  em  empresas  e  organiza√ß√µes. 
Pesquisas iniciais com dispositivos el√©tricos como os rel√™s, permitiram que 
ao  final  desse  s√©culo  as  primeiras  m√°quinas  somadoras  ou  contadoras 
com base eletromec√¢nica fossem constru√≠das por Hermann Hollerith. N√£o 
menos importante, durante o s√©culo XIX ocorreram avan√ßos nas ci√™ncias 
da  L√≥gica  e  Matem√°tica,  devido  principalmente  a  Boole,  Frege,  dentre 
outros  que  lan√ßaram  os  fundamentos  te√≥ricos  para  a  Ci√™ncia  da 
Computa√ß√£o  a  nascer  no  in√≠cio  do  s√©culo  XX  com  trabalhos  como  o  de 
Turing (WAZLAWICK, 2016, p. 53). 

Com  o  surgimento  do  computador  eletr√¥nico,  a  matem√°tica  alcan√ßou 

novos  patamares,  por  interm√©dio  da  resolu√ß√£o  de  extensos  c√°lculos,  antes 

inalcan√ß√°veis  pela  mente  humana.  Valores  de  complexas  fun√ß√µes  puderam  ser 

conhecidos gra√ßas a essa importante inven√ß√£o.  

Alguns  cl√°ssicos  artif√≠cios  utilizados  na 

facilita√ß√£o  de  c√°lculos 

matem√°ticos e resolu√ß√£o de problemas, como a t√°bua de logaritmos10, deram lugar 

ao  poder  de  processamento  dos  computadores  eletr√¥nicos.  Assim,  temos  a 

descri√ß√£o de Boyer (1974) sobre a vastid√£o da utilidade destas m√°quinas: 

Os  computadores  hoje  tornaram-se  t√£o  vastos  e  intrincados  que 
ultrapassam  os  sonhos  de  Babbage,  que  viveu  um  s√©culo  antes  de  seu 

10  Tabela  com  correspond√™ncia  entre  os  valores  de  logùëé ùë•  e  ùëéùë•,  para  valores  de  ùë•  definidos  em 
determinado  intervalo  e  com  base  ùëé = 10,  geralmente.  Devido  √†s  propriedades  operat√≥rias  dos 
logaritmos, estas tabelas eram utilizadas para transformar multiplica√ß√µes em somas, simplificando a 
realiza√ß√£o de c√°lculos complexos.  

 
 
 
36 

advento.  Problemas  que  estavam  desesperadoramente  al√©m  das 
capacidades  dos  matem√°ticos  de  eras  anteriores  recentemente  foram 
resolvidos com a  ajuda dos computadores de alta velocidade.  Se, como 
Kepler disse, a inven√ß√£o dos logaritmos duplicou a vida de um astr√¥nomo, 
quanto mais o computador eletr√¥nico expandiu as carreiras de cientistas e 
matem√°ticos (BOYER, 1974, p. 456). 

Os  tradicionais  m√©todos  de  localiza√ß√£o  de  primos  tinham,  em  sua 

maioria, funcionamento baseado em sucessivas divis√µes que, com a eleva√ß√£o dos 

n√∫meros  testados,  tornavam  os  trabalhos  operacionais  excessivamente  dif√≠ceis. 

Com a coopera√ß√£o das m√°quinas de calcular, essas tarefas foram demasiadamente 

facilitadas. 

Dentre as  in√∫meras  possibilidades  trazidas pelo  computador eletr√¥nico 

no  campo  matem√°tico,  destacamos  a  utiliza√ß√£o  de  algoritmos  especialmente 

elaborados para a localiza√ß√£o de n√∫meros primos. Uma das grandes vantagens do 

poder computacional destes novos equipamentos foi sua capacidade de processar 

numerosas  opera√ß√µes  matem√°ticas  de  elevada  complexidade  que  naturalmente 

seriam de dif√≠cil resolu√ß√£o pelo ser humano. 

Os  primeiros  desafios  dos  computadores  modernos  consistiram  na 

identifica√ß√£o de primos de Mersenne. O professor da Universidade da Calif√≥rnia em 

Berkeley,  Raphael  Robinson,  marido  da  matem√°tica  norte-americana  Julia 

Robinson11, conseguiu, por interm√©dio do Standards Western Automatic Computer 

(SWAC), m√°quina criada por Derrick Lehmer12, utilizar um algoritmo, de sua autoria, 

que  identificava  primos  de  Mersenne.  Os  resultados  foram  alcan√ßados  em  1952, 

quando  este  computador  conseguiu  descobrir  os  primeiros  primos  al√©m  da 

capacidade de alcance do ser humano, ao apresentar os n√∫meros 2521 ‚àí 1, 2607 ‚àí

1  e  22281 ‚àí 1,  batendo  o  recorde,  seguidas  vezes,  de  maiores  n√∫meros  primos 

conhecidos naquela √©poca (SAUTOY, 2007). 

11 Matem√°tica norte-americana que viveu entre 1919 e 1985. Tornou-se famosa por ter participado 
da  resolu√ß√£o  do  d√©cimo  problema  de  Hilbert,  que  buscava  encontrar  um  algoritmo  capaz  de 
determinar a exist√™ncia de ra√≠zes inteiras de uma equa√ß√£o polinomial (SAUTOY, 2007).  
12 Derrick Henry Lehmer (1905-1991) foi um matem√°tico estadunidense que trabalhou em Teoria dos 
N√∫meros e generalizou os Teste Primalidade de Lucas para os primos de Mersenne (O'CONNOR e 
ROBERTSON, 2002). 

 
 
 
37 

De  fato,  o  computador  eletr√¥nico  possibilitou  um  gigantesco  passo  na 

captura de primos cada vez maiores. D√©cadas antes do advento desta m√°quina, em 

1876, Lucas13, atrav√©s do Teste de Lucas e Lehmer ‚Äì que ser√° estudado mais √† 

frente  ‚Äì  provou  que  o  n√∫mero  2127 ‚àí 1,  com  39  d√≠gitos,  √©  primo.  Este  recorde 

persistiu  durante  v√°rios  anos,  at√©  que,  a  partir  de  1951,  primos  maiores  foram 

apresentados com o aux√≠lio de computadores, como o n√∫mero 180(2127 ‚àí 1)2 + 1, 

em 1951, e os n√∫meros 2521 ‚àí 1, 2607 ‚àí 1, 21279 ‚àí 1, 22203 ‚àí 1 e 22281 ‚àí 1, todos em 

1952, pelo SWAC, ultrapassando a casa dos 680 d√≠gitos (CALDWELL, 2021). 

13 Fran√ßois √âdouard Anatole Lucas (1842-1891) foi um matem√°tico franc√™s que se notabilizou por 
seus estudos sobre Teoria dos N√∫meros, Sequ√™ncia de Fibonacci e Sequ√™ncia de Lucas, esta √∫ltima, 
com nome em sua homenagem. Lucas desenvolveu importantes testes de primalidade, influentes 
at√© os dias atuais (O'CONNOR e ROBERTSON, 1996). 

 
 
 
 
 
38 

5 ASPECTOS B√ÅSICOS DOS TESTES DE PRIMALIDADE 

Em conformidade com o narrado ao longo deste trabalho, os testes de 

primalidade  representam  uma  not√°vel  forma  de  se  identificar  n√∫meros  primos, 

grandemente  utilizada  ao  longo  dos  anos.  Sua  evolu√ß√£o  seguiu,  em  muitos 

aspectos,  uma  tend√™ncia  de  torn√°-los  √°geis  e  pratic√°veis.  Neste  sentido, 

apresentamos  alguns  conceitos  importantes  relacionados  √†s  caracter√≠sticas  dos 

testes aqui estudados. 

5.1 Capacidade mental versus capacidade computacional 

Os primeiros testes de primalidade adotavam o esfor√ßo mental m√≠nimo 

como principal diferencial e, para tal fim, apoiavam-se em propriedades aritm√©ticas 

dos n√∫meros inteiros para reduzir o trabalho e o tempo de solu√ß√£o.  

Com  o  advento  dos  computadores,  o  tempo  de  c√°lculo  foi  comprimido 

consideravelmente, reduzindo opera√ß√µes, que levavam horas, para apenas poucos 

segundos.  √â  inquestion√°vel  o  poder  computacional  destes  instrumentos  e  seu 

alcance  transcende  excessivamente  a  capacidade  humana  de  realizar  c√°lculos, 

percebida  atrav√©s  da  performance  atingida  pelas  primeiras  gera√ß√µes  de 

computadores e que se acentua cada vez mais com as m√°quinas atuais.  

A  disparidade  entre  o  poder  de  c√°lculo  da  mente  humana  e  o  das 

m√°quinas  pode  ser  percebida  pela  an√°lise  de  desempenho  do  precursor  dos 

computadores digitais e eletr√¥nicos, o ENIAC (Electronic Numerical Integrator and 

Calculator), operado entre os anos de 1946 e 1955. Referido computador, al√©m do 

grande porte f√≠sico ‚Äì possu√≠a 17 mil v√°lvulas, 10 mil capacitores, 70 mil resistores e 

pesava 30 toneladas ‚Äì era capaz de realizar 5 mil adi√ß√µes por segundo e, em termos 

comparativos,  um  c√°lculo  que  levava  vinte  e  quatro  horas  manualmente  era 

resolvido em menos de trinta segundos (MACHADO e MAIA, 2014). 

O  campo  de  desenvolvimento  dos  computadores  esteve  em  ampla 

ascens√£o  desde  sua  cria√ß√£o,  de  tal  modo  que  a  pot√™ncia  dessas  m√°quinas  foi 

 
 
39 

elevada  a  n√≠veis  colossais  nas  √∫ltimas  d√©cadas.  Segundo  a  TOP50014,  o 

computador mais r√°pido registrado em novembro de 2020 foi o  supercomputador 

japon√™s Fugaku, instalado no RIKEN Center for Computational Science (R-CCS), 

em Kobe, Jap√£o. Ele possui uma velocidade de 442 petaflops15, ou seja, √© capaz 

de realizar 442 quatrilh√µes de c√°lculos por segundo (STROHMAIER, DONGARRA, 

et  al.,  2020).  Ao  compar√°-lo  com  um  computador  pessoal  da  ordem  de  100 

gigaflops, o Fugaku √© 4 milh√µes e 420 mil vezes mais r√°pido.  

Nota-se,  portanto,  o  quanto  as  m√°quinas  evolu√≠ram  e  tornaram-se 

instrumentos  fundamentais  na  pesquisa  cient√≠fica,  na  qual  inclui-se  o  estudo  dos 

n√∫meros primos e consequentemente o desenvolvimento de testes de primalidade 

aptos a identificar primos cada vez maiores.  

5.2 Custo de um algoritmo  

Os  computadores  modernos,  apesar  da  grande  capacidade  de 

processamento  de  alguns  de  seus  modelos,  possuem  limita√ß√µes  pr√°ticas 

concernentes ao uso de algoritmos espec√≠ficos. A depender da opera√ß√£o, o tempo 

de resposta pode demandar um tempo de espera inaceit√°vel. Este campo de estudo 

refere-se  ao  custo  de  um  algoritmo,  ou  seja,  aos  recursos  que  este  precisa  para 

funcionar. 

Diversos atributos podem ser avaliados ao se determinar o custo de um 

algoritmo, por√©m Cormem (2002, p. 16) salienta que o fator primoridial √© o tempo 

de resposta, ao afirmar que ‚Äúocasionalmente, recursos como mem√≥ria, largura de 

banda de comunica√ß√£o ou hardware de computador s√£o a principal preocupa√ß√£o, 

mas com frequ√™ncia √© o tempo de computa√ß√£o que desejamos medir.‚Äù 

Tempo de resposta, conforme Machado e Maia (2014) √© definido como: 

‚ÄúTempo de resposta √© o tempo decorrido entre uma requisi√ß√£o ao sistema 
ou  √†  aplica√ß√£o  e  o  instante  em  que  a  resposta  √©  exibida.  Em  sistemas 
interativos, podemos entender como o tempo decorrido entre a √∫ltima tecla 

14 Ranking dos 500 supercomputadores de alto desempenho (disponibilizados comercialmente) mais 
poderosos do mundo. Esta lista √© atualizada duas vezes ao ano.  
15  1  petaflop  equivale  √†  1  quatrilh√£o  de  flops,  que  √©  a  abrevia√ß√£o  para  o  termo  computacional 
‚Äúfloating-point operations per second‚Äù, que, traduzido, representa a unidade para opera√ß√µes de ponto 
flutuante por segundo. 

 
 
 
40 

digitada  pelo  usu√°rio  e  o  in√≠cio  da  exibi√ß√£o  do  resultado  no  monitor.‚Äù 
(MACHADO e MAIA, 2014, p. 173). 

Este  tempo  depende  diretamente  do  n√∫mero  de  opera√ß√µes  a  serem 

realizadas por um algoritmo, ou seja, quanto maior a quantidade de algarismos de 

determinado  n√∫mero  de  entrada  ùëã,  maior  ser√°  a  quantidade  de  opera√ß√µes 

aritm√©ticas a serem executadas.  

Isso  nos  leva  a  destacar  outro  importante  conceito,  o  tamanho  da 

entrada, naturalmente medido atrav√©s do n√∫mero de itens da entrada. Relacionado 

a este, temos tamb√©m o j√° delineado tempo de execu√ß√£o, entendido como o n√∫mero 

de opera√ß√µes primitivas ou ‚Äúpassos‚Äù executados por um algoritmo em determinada 

entrada (CORMEM, LEISERSON, et al., 2002).  

Em termos gerais, o tempo de execu√ß√£o √© representado pela soma dos 

tempos  despendidos  em  cada  uma  das  etapas  executadas  pelo  algoritmo.  Com 

base no tempo necess√°rio de resposta, um algoritmo pode ser classificado como de 

tempo polinomial ou de tempo exponencial. Vejamos como Ribemboim (2014) os 

define: 

O algoritmo √© chamado de tempo polinomial se existir um polin√¥mio ùëì(ùëã), 
tal  que,  para  todo  ùëÅ,  o  tempo  necess√°rio  para  lev√°-lo  ao  fim,  quando  o 
dado inicial √© o n√∫mero ùëÅ, √© limitado por ùëì(log ùëÅ). Se o algoritmo n√£o √© a 
tempo polinomial, mas se o tempo de execu√ß√£o √© limitado por ùëì(ùëÅ), para 
todo  ùëÅ  (onde  ùëì(ùëã)  √©  um  polin√¥mio),  ent√£o  √©  ele  chamado  de  tempo 
exponencial,  porque  ùëÅ = ùëílog ùëÅ.  Um  algoritmo  s√≥  √©  economicamente 
aceit√°vel se for de tempo polinomial (RIBENBOIM, 2014, p. 108, grifo do 
autor). 

Conforme  o  supramencionado,  h√°  um  limite  de  viabilidade  econ√¥mica 

para  determinados  algoritmos  e  tal  barreira  est√°  diretamente  relacionada  ao  seu 

custo. Desta forma, define-se como aceit√°veis aqueles classificados como de tempo 

polinomial.  

Tratar  de  tempo  polinomial  e  tempo  exponencial  nos  remete  √†  an√°lise 

dos  termos  da  fun√ß√£o  e  suas  taxas  de  crescimento.  Dada  uma  fun√ß√£o  ùëì 

representada  por  ùëì(ùë•) = ùëéùë•2 + ùëèùë• + ùëê,  para  o  n√∫mero  de  entrada  ùë•  e  tempo  de 

execu√ß√£o  ùëì(ùë•),  quando  se  eleva  indefinidamente  o  valor  de  ùë•,  os  termos  ùëèùë•  e  ùëê 

tornam-se  praticamente  insignificantes,  logo,  podem  ser  ignorados  no  c√°lculo  do 

tempo, assim como a constante ùëé, uma vez que tamb√©m se torna desprez√≠vel em 

 
 
41 

rela√ß√£o √† taxa de crescimento quando em grandes entradas. Estas an√°lises apoiam-

se no fato de que a taxa de crescimento √© o fator decisivo no tempo de execu√ß√£o 

de um algoritmo (CORMEM, LEISERSON, et al., 2002). Em linhas gerais, quanto 

menor a ordem de crescimento de um algoritmo, mais eficiente este ser√°.  

O custo de um algoritmo √© comumente avaliado com base no seu tempo 

de  execu√ß√£o,  cujas  vari√°veis  englobam  a  quantidade  de  opera√ß√µes  necess√°rias 

para a conclus√£o das tarefas e o per√≠odo tomado por cada uma destas. Como j√° 

citado, utiliza-se uma fun√ß√£o ùëì (fun√ß√£o de complexidade) para se verificar o tempo 

de execu√ß√£o de um algoritmo. Stanat e McAllister (1977, apud ZIVIANI 2011, p. 5) 

definem que ‚Äúse ùëì(ùëõ) √© a medida de tempo necess√°rio para executar um algoritmo 

para um problema de tamanho ùëõ, ent√£o ùëì √© chamada de fun√ß√£o de complexidade 

de tempo do algoritmo.‚Äù  

O  principal  custo  de  um  algoritmo  avaliado  neste  trabalho  ser√°  o  que 

relaciona  o  tamanho  da  entrada  dos  dados  com  seu  custo  de  execu√ß√£o,  assim, 

teremos  a  fun√ß√£o  de  complexidade  de  tempo  atrelada  √†  dimens√£o  dessas 

informa√ß√µes. Dentre os casos poss√≠veis ‚Äì melhor, m√©dio e pior ‚Äì consideraremos o 

pior  caso,  uma  vez  que  representar√°  o  pior  tempo  de  execu√ß√£o  dentre  todas  as 

entradas, dessa forma a fun√ß√£o ùëì sempre representar√° o maior o custo de aplica√ß√£o 

do algoritmo. 

Sabendo-se  que  o  custo  de  um  algoritmo  est√°  diretamente  ligado  ao 

tamanho da entrada ùëõ, ent√£o nota-se que esta entrada oferece um forte par√¢metro 

de  medida  de  complexidade  do  problema,  assim,  na  medida  que  ùëõ  cresce,  a 

complexidade de tempo de algoritmo tamb√©m sobe.  

Feofiloff (2019, p. 10) revela que ‚ÄúPara cada inst√¢ncia16 do problema, o 

algoritmo consome uma quantidade de tempo diferente. Digamos que o algoritmo 

consome ùëá(ùêº) unidades de tempo para resolver a inst√¢ncia ùêº. A rela√ß√£o entre ùëá(ùêº) 

e o tamanho de ùêº d√° uma medida da efici√™ncia do algoritmo.‚Äù (grifo nosso). 

16 Compreendida aqui como caso particular. 

 
 
 
42 

A  an√°lise  assint√≥tica17  da 

fun√ß√£o  ùëì  nos  permite  observar  seu 

comportamento quando o custo de ùëõ se eleva consideravelmente. Knuth (1968, p. 

104,  apud  Ziviani,  2011,  p  12)  sugeriu  a  seguinte  nota√ß√£o  para  domina√ß√£o 

assint√≥tica. 

Para  expressar  que  ùëì(ùëõ)  domina  assintoticamente  ùëî(ùëõ),  escrevemos 
ùëî(ùëõ) = ùëÇ(ùëì(ùëõ)), onde se l√™ ùëî(ùëõ) √© da ordem no m√°ximo ùëì(ùëõ). Por exemplo, 
quando dizemos que o tempo de execu√ß√£o ùëá(ùëõ) de um programa √© ùëÇ(ùëõ¬≤), 
isto  significa  que  existem  constantes  ùëê  e  ùëö  tais  que,  para  valores  de  n 
maiores ou iguais a ùëö, ùëá(ùëõ) ‚â§ ùëêùëõ¬≤ (KNUTH, 1968, p. 104, apud ZIVIANI, 
2011, p. 12). 

Simbolicamente, temos 

Defini√ß√£o 2. Dadas as fun√ß√µes ùëî: ‚Ñï ‚Üí ‚Ñù e ùëì: ‚Ñï ‚Üí ‚Ñù. Dizemos que ùëî(ùëõ) = ùëÇ(ùëì(ùëõ)), 

ou que ùëî est√° em ùëì, se existirem constantes inteiras n√£o negativas ùëù e ùëû, tais que 

ùëî(ùëõ) ‚â§ ùëù ‚àô ùëì(ùëõ), para todo ùëõ ‚â• ùëû.  

Exemplo. Seja ùëî(ùëõ) = 2ùëõ¬≤ + ùëõ + 1 

Ent√£o ùëî(1) = 4. Assim podemos considerar que ùëî(ùëõ) est√° em ùëÇ(ùëõ¬≤), pois 

quando ùëû = 1 e ùëù = 4 temos 

2ùëõ¬≤ + ùëõ + 1 ‚â§ 4ùëõ¬≤ 

Para ùëõ ‚â• 1. 

Ressalta-se  que  a  express√£o  ùëî(ùëõ) = ùëÇ(ùëì(ùëõ)),  apesar  do  sinal  de 

igualdade, denota que ùëî(ùëõ) ‚Äúest√° escondido‚Äù em ùëÇ(ùëì(ùëõ)), ou seja, que ùëî(ùëõ) ‚â§ ùëù ‚àô

ùëì(ùëõ), para ùëù e ùëõ suficientemente grandes. 

Em resumo, com base na Defini√ß√£o 2, o exemplo supra mostra que, na 

an√°lise assint√≥tica de ùëî, a express√£o 2ùëõ¬≤ + ùëõ + 1 se resume a ùëõ¬≤, isto √©, no exame 

de  um  algoritmo  com  custo  representado  por  esta  fun√ß√£o,  o  termo  determinante 

ser√° ùëõ¬≤. 

17 Segundo Feofiloff (2021), a matem√°tica que se interessa apenas pelos enormes  valores de ùëõ √© 
chamada assint√≥tica.  

 
 
 
43 

5.3 Testes de primalidade determin√≠sticos e n√£o determin√≠sticos   

Outro  aspecto  de  capital  import√¢ncia  na  classifica√ß√£o  dos  testes  de 

primalidade √© a sua capacidade de garantir que determinado n√∫mero ùëÅ de entrada 

√© primo ou composto. Dada a natureza e complexidade de cada teste, determinados 

algoritmos podem n√£o assegurar a primalidade de um n√∫mero ùëÅ e retornam como 

resultado apenas a probabilidade de ser primo.  

Temos,  portanto,  os  Testes  Determin√≠sticos  de  Primalidade  e  os  N√£o 

Determin√≠sticos. No primeiro, a entrada de um inteiro positivo ùëõ apresenta na sa√≠da 

uma mensagem indicando se ùëõ √© ou n√£o primo. Desta forma, temos a garantia se ùëõ 

√© primo ou composto. Por outro lado, os testes n√£o determin√≠sticos de primalidade 

garantem apenas que o n√∫mero √© primo com uma certa probabilidade, controlada 

de acordo com necessidade do usu√°rio (COUTINHO, 2004). 

Uma quest√£o que pode ser levantada √© a respeito do uso de testes n√£o 

determin√≠sticos  em  detrimento  da  utiliza√ß√£o  dos  determin√≠sticos,  j√°  que  estes, 

diferentemente daqueles, trazem como resultado uma resposta garantida sobre a 

primalidade  de  um  n√∫mero.  A  resposta  reside  em  sua  efici√™ncia,  detalhada  nos 

testes apresentados nesta obra.  

5.4 Formas de classifica√ß√£o 

Em  raz√£o  da  grande  diversidade  de  caracter√≠sticas  dos  testes  de 

primalidade,  √©  poss√≠vel  encontrar  v√°rias  formas  de  classific√°-los.  Ribenboim,  em 

sua obra sobre n√∫meros primos, classifica estes testes de acordo com os seguintes 

crit√©rios: testes para n√∫meros de forma particular ou testes para n√∫meros gen√©ricos; 

testes  completamente  justificados  por  teoremas  ou  testes  cuja  justificativa  √© 

baseada em  conjecturas  e  testes  determin√≠sticos  ou  testes  probabil√≠sticos  (ou  de 

Monte Carlo) (RIBENBOIM, 2014). 

Face  √†  linha  temporal  adotada  neste  trabalho,  a  qual  discorre  sobre  a 

evolu√ß√£o  dos  testes  de  primalidade,  opta-se  por  utilizar  como  crit√©rio  de 

classifica√ß√£o os per√≠odos nos quais est√£o situados cada um, empregando-se como 

 
 
44 

divisor capital o in√≠cio do uso computacional, dividindo-os em m√©todos cl√°ssicos e 

m√©todos computacionais.  

Esta  forma  de  classifica√ß√£o  nos  permite  esclarecer  as  caracter√≠sticas 

b√°sicas dos algoritmos e as aplica√ß√µes dos testes de primalidade encontrados por 

pesquisadores, t√£o √∫teis para a organiza√ß√£o das sociedades modernas.  

 
 
 
 
45 

6 TESTES CL√ÅSSICOS 

6.1 Divis√£o por tentativa 

Nas  s√©ries  iniciais  do  estudo  b√°sico,  ap√≥s  aprender  os  conceitos 

fundamentais sobre os n√∫meros primos, um estudante pode idealizar, naturalmente, 

uma  simples  forma  de  identific√°-los.  Atrav√©s  de  sucessivas  divis√µes,  √©  poss√≠vel 

testar  a  primalidade  de  determinado  n√∫mero.  O  m√©todo  consiste  nas  seguintes 

etapas: 

Passo 1. Seleciona-se um n√∫mero natural ùëõ do qual deseja-se testar a primalidade;  

Passo 2. Realiza-se divis√µes sucessivas de ùëõ por ùëö, para 1 < ùëö < ùëõ 

Passo 3. Dado o seguinte lema, j√° provado nesse trabalho18: 

Lema. Seja ùëõ ‚àà ‚Ñï, se ùëõ n√£o √© um n√∫mero primo, ent√£o ùëõ possui um fator primo ùëù ‚â§

‚àöùëõ. 

Ent√£o a divis√£o precisa seguir, apenas, at√© ‚àöùëõ, ou seja, 1 < ùëö ‚â§ ‚àöùëõ. 

Passo 4. Por fim, se ùëõ n√£o for divis√≠vel por ùëö, tal que 1 < ùëö ‚â§ ‚àöùëõ, ent√£o ùëõ ser√° um 

n√∫mero primo, caso contr√°rio, ser√° um composto.  

Este √© um t√≠pico m√©todo baseado na exaust√£o, logo, apesar do simples 

racioc√≠nio, a tarefa se tornar√° excessivamente trabalhosa para n√∫meros grandes, 

entretanto,  para  n√∫meros  relativamente  pequenos,  √©  um  teste  pr√°tico  e  de  f√°cil 

aplica√ß√£o que ainda retorna todos os divisores do n√∫mero testado. 

O teste √© claramente determin√≠stico, com tempo de execu√ß√£o de ùëÇ(‚àöùëõ), 

contudo, levando-se em conta sua representa√ß√£o bin√°ria para uso computacional19, 

sua  complexidade  √©  ùëÇ(2‚àöùëõ),  portanto,  de  tempo  exponencial,  logo  de  custo 

computacional impratic√°vel.  

18 Vide Cap√≠tulo 3, Item 3.1. 
19  A  linguagem  bin√°ria,  atualmente  utilizada  pelos  computadores,  representa  uma  rela√ß√£o  l√≥gica 
entre a √°lgebra de Boole (matem√°tico brit√¢nico do s√©culo XIX) e os circuitos eletr√¥nicos, atrav√©s dos 
estados l√≥gicos SIM e N√ÉO para diferentes diferen√ßas de potencial no circuito (COSTA, 2007). 

 
 
 
46 

6.2 Crivo de Erat√≥stenes 

Um  dos  testes  de  primalidade  mais  antigos  da  hist√≥ria  √©  o  Crivo  de 

Erat√≥stenes,  nome dado  em  homenagem  ao  matem√°tico  grego  Erat√≥stenes, que 

viveu entre os anos de 276 e 194 a. C. Como estampado na designa√ß√£o do teste, 

este m√©todo filtra os n√∫meros colocados a teste ‚Äì como um crivo ‚Äì e ent√£o obt√©m 

como resposta apenas aqueles classificados como primos. 

Uma  ideia  simples,  entretanto,  eficiente  para  localizar  primos  num 

intervalo  pequeno  de  n√∫meros.  Vejamos  como  usar  este  m√©todo  para  obter  os 

n√∫meros primos de 1 at√© um certo natural ùëõ. 

Passo 1. No conjunto ‚Ñï, seleciona-se um subconjunto com todos os naturais at√© um 

dado n√∫mero ùëõ; 

Passo 2. O n√∫mero 1, por defini√ß√£o, n√£o √© primo, logo deve ser retirado do conjunto; 

Passo 3. Deve-se seguir a an√°lise com o pr√≥ximo da lista, ou seja, o n√∫mero 2, que 

√© primo, logo deve ser mantido na lista. Em seguida s√£o cortados da lista todos os 

m√∫ltiplos de 2, isto √©, os n√∫meros pares; 

Passo 4.  A  seguir,  seleciona-se o  pr√≥ximo n√∫mero  n√£o  riscado  da  lista,  o 3,  que 

necessariamente √© primo, pois n√£o √© m√∫ltiplo do n√∫mero anterior, n√£o cortado. Ap√≥s 

isso, corta-se todos os m√∫ltiplos de 3 restantes no conjunto;  

Passo  5. Pelo mesmo  princ√≠pio  apresentado  na  Divis√£o  por Tentativa,  o  passo  4 

deve ser seguido at√© ‚àöùëõ. Ap√≥s isso, restar√£o na lista apenas os n√∫meros primos. 

Para  ilustrar,  vamos  selecionar  os  primos  para  ùëõ = 50.  Escreve-se 

inicialmente os n√∫meros naturais at√© 50. 

  4 

  2 

  5 

  3 

  8 

  7 

  10 
  6 
1 
11    12    13    14    15    16    17    18    19    20 
21    22    23    24    25    26    27    28    29    30 
31    32    33    34    35    36    37    38    39    40 
41    42    43    44    45    46    47    48    49    50 

  9 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Agora, risca-se o 1. Em seguida mant√©m-se o 2, por√©m, risca-se todos 

os m√∫ltiplos deste. 

47 

  4 

  3 

  5 

  2 

  8 

  7 

  9 

  10 
  6 
1 
11    12    13    14    15    16    17    18    19    20 
21    22    23    24    25    26    27    28    29    30 
31    32    33    34    35    36    37    38    39    40 
41    42    43    44    45    46    47    48    49    50 
Segue-se  o  mesmo  procedimento  para  o  pr√≥ximo  n√∫mero,  que 

necessariamente √© primo. Na nossa rela√ß√£o √© o n√∫mero 3, logo cortam-se todos os 

seus m√∫ltiplos. 

  3 

  2 

  4 

  5 

  8 

  7 

  10 
  6 
1 
11    12    13    14    15    16    17    18    19    20 
21    22    23    24    25    26    27    28    29    30 
31    32    33    34    35    36    37    38    39    40 
41    42    43    44    45    46    47    48    49    50 

  9 

O  pr√≥ximo  da  lista  √©  o  n√∫mero  7,  e  como  este  √©  o  n√∫mero  inteiro 

imediatamente anterior √†  ‚àö50,  ent√£o,  ser√°  o  √∫ltimo n√∫mero  cujos m√∫ltiplos  ser√£o 

cortados de nossa rela√ß√£o, assim. 

  3 

  5 

  4 

  2 

  8 

  9 

  7 

  10 
  6 
1 
11    12    13    14    15    16    17    18    19    20 
21    22    23    24    25    26    27    28    29    30 
31    32    33    34    35    36    37    38    39    40 
41    42    43    44    45    46    47    48    49    50 
Ao retirarmos os n√∫meros n√£o riscados de nosso conjunto, teremos todos 

os n√∫meros primos at√© o n√∫mero 50, a saber: 

2,3,5,11,13,17,19,23,29,31,37,41,43,47 

Algumas observa√ß√µes importantes podem ser feitas perante o processo 

anteriormente  apresentado.  A  primeira  √©  o  fato  de  que  alguns  n√∫meros  da  lista 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
48 

foram riscados mais de uma vez, como o n√∫mero 15, que foi cortado, primeiramente, 

por  ser  m√∫ltiplo  de  3  e,  posteriormente,  por  ser  m√∫ltiplo  de  5,  provocando  um 

trabalho desnecess√°rio.  

Este  esfor√ßo  pode  ser  extinguido  da  seguinte  forma:  ao  selecionar  um 

n√∫mero ùëõ cujos m√∫ltiplos ser√£o riscados da lista, ser√° notado que os seus m√∫ltiplos 

que  concomitantemente  s√£o  m√∫ltiplos  de  um  primo  anterior  da  rela√ß√£o  j√°  se 

encontram riscados, portanto basta iniciar o corte a partir de ùëõ¬≤, evitando-se utilizar 

fatores menores que ùëõ, que seguramente j√° resultaram em elimina√ß√µes de n√∫meros 

da  lista.  Em  suma,  a  partir  de  um  novo  primo  ùëõ,  a  exclus√£o  de  novos  n√∫meros 

dever√° ser realizada de ùëõ2 em diante, resultando em economia de tempo. 

Uma  forma  generalizada  do  crivo  de  Erat√≥stenes,  na  qual  se  ignora  a 

ordem do n√∫mero a ser selecionado como refer√™ncia na retirada dos m√∫ltiplos, al√©m 

de  englobar  qualquer  subconjunto  de  naturais,  pode  ser  descrita  conforme 

detalhamento abaixo.  

Passo 1. Seja o conjunto ùê¥ = {ùëõ1, ùëõ2, ùëõ3, ‚Ä¶ , ùëõùëö}, ùê¥ ‚äÇ ‚Ñï para o qual deseja-se testar 

a primalidade dos elementos de ùê¥; 

Passo  2.  Seja  ùëõ1  o  menor  n√∫mero  do  conjunto  ùê¥,  verifica-se  se  ùëõ1  √©  primo  ou 

composto, adotando-se o seguinte procedimento conforme o respectivo caso; 

Caso 1. Se ùëõ1 for composto, ent√£o ele √© retirado do conjunto, assim como todos os 

seus m√∫ltiplos pertencentes ao conjunto ùê¥; 

Caso 2. Se ùëõ1 for primo, ent√£o ele √© mantido no conjunto, contudo todos os seus 

m√∫ltiplos s√£o retirados do conjunto ùê¥; 

Passo  3.  O  passo  2  √©  repetido  com  o  menor  elemento  de  ùê¥,  a  exce√ß√£o  do 

anteriormente analisado, at√© que se atinja o maior elemento deste conjunto.  

Ap√≥s  conclus√£o  dos  passos  acima,  restar√£o  no  conjunto  ùê¥  apenas  os 

n√∫meros primos.   

Uma  boa  observa√ß√£o  do  passo  2,  nos  leva  a  concluir  que  o  n√∫mero 

selecionado como ponto de partida, ou qualquer outro que permane√ßa no conjunto 

 
 
49 

ùê¥,  n√£o  necessita  ser  o  menor  n√∫mero  de  ùê¥,  todavia,  na  escolha  de  um  n√∫mero 

aleat√≥rio como refer√™ncia para a retirada se seus m√∫ltiplos, o processo demandar√° 

um maior tempo de execu√ß√£o, visto que eventualmente poder√° ser o m√∫ltiplo de um 

n√∫mero ainda n√£o selecionado, o que acarretar√° um passo a mais no processo.  

O crivo de Erat√≥stenes √© um teste determin√≠stico e de custo exponencial. 

O‚ÄôNeill (2008, apud Junior, Neto, 2009, p. 1) relata que ‚Äúo algoritmo do crivo vai se 

tornando inapropriado √† medida que se aumenta o tamanho de ùëõ. O tamanho de ùëõ 

√©  exponencial  no  n√∫mero  de  d√≠gitos.  A  complexidade  deste  algoritmo  √© 

ùëÇ(ùëõ log log ùëõ).‚Äù 

Isto posto, temos um algoritmo de elevado custo, por√©m, apesar de sua 

impraticabilidade,  o  crivo  √©  uma  simples  forma  de  se  determinar  primos  em  um 

intervalo pequeno, al√©m  de  ser alvo de estudos  e  possuir  relevante  aplica√ß√£o  na 

computa√ß√£o. 

Atualmente,  existem  in√∫meros  dispositivos  digitais  (computadores, 

laptops, celulares, tablets etc.) que, por suas caracter√≠sticas diversas, possuem uma 

grande variedade de desempenho. Uma forma de avaliar sua performance √© atrav√©s 

de um ou mais programas.  

Um  dos  mais  reconhecidos  √©  o  m√©todo  denominado  benchmark,  que 

conforme Brookshear (2008, p. 93), ‚Äú√© o processo de comparar o desempenho de 

m√°quinas diferentes executando o mesmo programa, conhecido como amostra de 

teste (benchmark)‚Äù. 

Devido √† simplicidade do m√©todo, o crivo de Erat√≥stenes √© utilizado como 

benchmark  padr√£o  na  avalia√ß√£o  de  desempenho  de  programas  de  computador, 

uma vez que dispensa opera√ß√µes com divis√£o. Vejamos o que Gilbreath (1981, p. 

180) fala a respeito das caracter√≠sticas de um benchmark h√°bil. 

[...] o benchmark deve ser curto (n√£o mais do que uma p√°gina de c√≥digo-
fonte), capaz de acessar uma quantidade consider√°vel de mem√≥ria, sem 
realiza√ß√£o  de  multiplica√ß√£o  ou  divis√£o  e  facilmente  codificado  em  uma 
variedade  de  linguagens  de  alto  n√≠vel.  Finalmente,  o  benchmark  deve 
realizar algo √∫til (ou pelo menos reconhec√≠vel e verific√°vel) (GILBREATH, 
1981, p. 180, tradu√ß√£o nossa). 

 
 
50 

O programa supra idealizado baseava-se no Crivo de Erat√≥stenes, pelas 

peculiaridades j√° descritas. Em 1980, Gilbreath relatou em seu artigo a cria√ß√£o de 

um algoritmo do Crivo de Erat√≥stenes que calculava todos os n√∫meros primos entre 

3 e 16.000 e que, ao contr√°rio de outros m√©todos, o crivo evitava a divis√£o e era 

extremamente  r√°pido,  pois  usava  conhecimento  sobre  n√∫meros  que  podiam  ser 

primos (n√∫meros pares e m√∫ltiplos de primo) (GILBREATH, 1981). 

6.3 Teste de Fermat 

Como j√° descrito, Fermat foi um pensador do s√©culo XVII que realizou 

importantes  descobertas  no  campo  da  Teoria  dos  N√∫meros,  dentre  elas, 

destacamos  o  Pequeno  Teorema  de  Fermat,  j√°  apresentado  e  demonstrado20. 

Vejamos o que a literatura fala a respeito desse importante teorema. 

‚ÄúO teorema tem sido uma grande influ√™ncia em algoritmos da Teoria dos 

N√∫meros, na medida em que representa a base para alguns dos mais conhecidos 

algoritmos de testes de primalidade‚Äù (AGRAWAL, 2006, tradu√ß√£o nossa). 

O Teorema de Fermat tamb√©m pode ser exibido da seguinte forma. 

Teorema 3. Se p √© um n√∫mero primo, ent√£o, para todo ùëé ‚àà ‚Ñ§, ùëéùëù ‚â° ùëé mod p. 

Quando ùëù ‚à§ ùëé, ou seja, se (ùëé, ùëù) = 121, pelo Corol√°rio C.8.1, temos  

ùëéùëù ‚â° ùëé mod p ‚ü∫

ùëéùëù
ùëé

‚â°

ùëé
ùëé

 mod p ‚ü∫ ùëéùëù‚àí1 ‚â° 1 mod p 

Este resultado, apesar de ter sido proposto por Fermat no ano de 1640, 

s√≥ foi provado em 1736, por Euler, e serviu de base para formula√ß√µes de diversos 

testes de primalidade posteriores.  

Vejamos, portanto, alguns exemplos de que ùëù primo e (ùëé, ùëù) = 1 implica 

em ùëéùëù‚àí1 ‚â° 1 mod ùëù, para todo ùëé inteiro. Para tanto, adotemos a seguinte forma: 

ùëÉ primo  ‚üπ ùëù ‚à£ ùëéùëù‚àí1 ‚àí 1, ‚àÄ ùëé ‚àà ‚Ñ§   

20 Vide Cap√≠tulo 4, Item 4.1. 
21 Dados os inteiros ùëé e ùëè, denota-se por (ùëé, ùëè) o m√°ximo divisor comum de ùëé e ùëè. 

 
 
 
Como ùëù divide ùëéùëù‚àí1 ‚àí 1, ent√£o existe ùëò ‚àà ‚Ñ§, tal que ùëéùëù‚àí1 ‚àí 1 = ùëòùëù. Alguns 

resultados s√£o apresentados na tabela a seguir, para determinados valores de ùëé e 

ùëù.  

51 

Tabela 2 ‚Äì Valores de (ùëéùëù‚àí1 ‚àí 1)/ùëù para alguns primos ùëù 
ùëé 
2 
2 
2 
2 
2 
3 
3 
3 
3 
3 
4 
4 
4 
4 

ùëò = (ùëéùëù‚àí1 ‚àí 1)/ùëù 
1 
3 
9 
93 
315 
1 
16 
104 
5368 
40880 
5 
51 
585 
95325 

ùëéùëù‚àí1 ‚àí 1 
3 
15 
63 
1023 
4095 
2 
80 
728 
59048 
531440 
15 
255 
4095 
1048575 

ùëù 
3 
5 
7 
11 
13 
2 
5 
7 
11 
13 
3 
5 
7 
11 

Fonte: Elaborado pelo autor 

√â  importante  observar  que  a  utiliza√ß√£o  do  teste  para  confirma√ß√£o  de 

primos  consiste  na  utiliza√ß√£o  da  rec√≠proca  do  Teorema  de  Fermat,  uma  vez  que 

desejamos descobrir se determinado n√∫mero ùëù √© primo, contudo, nem todo ùëù que 

divide ùëéùëù‚àí1 ‚àí 1, para todo ùëé inteiro, √© primo.  

Vejamos a tabela seguinte com alguns valores de (ùëéùëù‚àí1 ‚àí 1)/ùëù: 

Tabela 3 ‚Äì Valores de (ùëéùëù‚àí1 ‚àí 1)/ùëù para alguns valores de ùëù composto 

ùëé 
2 
2 
2 
2 
3 
3 
3 
3 
4 
5 
5 
5 

ùëù 
9 
15 
21 
25 
4 
8 
10 
14 
9 
8 
10 
14 

ùëéùëù‚àí1 ‚àí 1 
255 
16383 
1048575 
16777215 
26 
2186 
19682 
1594322 
65535 
78124 
1953124 
1220703124 

ùëò = (ùëéùëù‚àí1 ‚àí 1)/ùëù 
28,33333333 
1092,2 
49932,14286 
671088,6 
6,5 
273,25 
1968,2 
113880,1429 
7281,666667 
9765,5 
195312,4 
87193080,29 

Fonte: Elaborado pelo autor 

 
 
52 

√Ä primeira vista, pode parecer que para todo ùëé inteiro e ùëù composto, tem-

se  que  ùëù  n√£o  divide  ùëéùëù‚àí1 ‚àí 1,  contudo  o  composto  ùëù = 561 = 3 ‚àô 11 ‚àô 17  √©  um 

contraexemplo de que a rec√≠proca do Pequeno Teorema de Fermat nem sempre √© 

verdadeira. 

Quando ùëé e ùëù s√£o coprimos, os n√∫meros compostos ùëù tais que ùëéùëù‚àí1 ‚â°

1 mod ùëù, para todo ùëé, 1 < ùëé < ùëù, s√£o denominados N√∫meros de Carmichael22, cujo 

menor √© 561 = 3 ‚àô 11 ‚àô 17 (RIBENBOIM, 2014). 

O  teste  de  Fermat  consiste  na  utiliza√ß√£o  do  Pequeno  Teorema  de 

Fermat, atrav√©s do qual adota-se um valor inteiro de ùëé para um determinado n√∫mero 

ùëù a ser testado como primo, com (ùëé, ùëù) = 1. Estipula-se uma quantidade ùëò de vezes 

de  realiza√ß√£o  do  teste.  Se  em  todas  estas,  resultar  ùëù ‚à£ ùëéùëù‚àí1 ‚àí 1,  ent√£o  p  ser√° 

retornado  como  provavelmente  primo.  Caso  contr√°rio,  ser√°  respondido  como 

seguramente composto. O teste √© probabil√≠stico, uma vez que √© imposs√≠vel realizar 

infinitas tentativas.  

O  teste  √©  quase  perfeito,  j√°  que  os  n√∫meros  de  Carmichael  s√£o 

extremamente  raros.  H√°  apenas  255  destes  menores  que  100.000.000,  ou  seja, 

somente  0,000255%  dos  primeiros  n√∫meros  naturais  s√£o  de  Carmichael 

(CORMEM, LEISERSON, et al., 2002). 

Segue-se,  a  partir  desta  ideia,  o  conceito  de  pseudoprimo,  definidos 

como  prov√°veis  primos  que  s√£o,  na  verdade,  compostos.  Consoante  Cadwell 

(2021),  ao  se  aplicar  o  Teste  de  Fermat,  em  ùëéùëù‚àí1 ‚â° 1 (mod ùëù), se  o  n√∫mero  ùëù 

testado for primo, ent√£o ser√° denominado prov√°vel primo base ùëé ou apenas a-PRP 

‚Äì do ingl√™s, probable prime base ùëé) (CALDWELL, 2021). 

O teste de Fermat possui larga utiliza√ß√£o em criptografia, na medida em 

que  se  busca  uma  r√°pida  localiza√ß√£o  de  chaves  criptogr√°ficas.  Seu  tempo  de 

execu√ß√£o √© ùëÇ(ùëé log ùëõ) opera√ß√µes aritm√©ticas para ùëé diferentes bases em a-PRP.  

22    Robert  Daniel  Carmichael  (1879-1967),  matem√°tico  estadunidense  com  √°rea  de  atua√ß√£o  em 
Teoria dos N√∫meros. Ficou mais conhecido pelo n√∫mero que leva seu nome, n√∫mero de Carmichael 
(O'CONNOR e ROBERTSON, 2010) 

 
 
 
53 

6.4 Teste de Proth 

Os  N√∫meros  de  Proth,  assim  denominados  em  alus√£o  ao  matem√°tico 

franc√™s Fran√ßois Proth, que viveu no s√©culo XIV, s√£o aqueles da forma  

ùëù = ùëò ‚àô 2ùëõ + 1  

Onde ùëò √© um n√∫mero inteiro √≠mpar e ùëõ √© um inteiro positivo tal que 2ùëõ >

ùëò. Os primeiros sete n√∫meros de Proth s√£o  

Para ùëò = 1 e ùëõ = 1, ùëù = 1 ‚àô 21 + 1 = 3 

Para ùëò = 1 e ùëõ = 2, ùëù = 1 ‚àô 22 + 1 = 5 

Para ùëò = 1 e ùëõ = 3, ùëù = 1 ‚àô 23 + 1 = 9 

Para ùëò = 3 e ùëõ = 2, ùëù = 3 ‚àô 22 + 1 = 13 

Para ùëò = 1 e ùëõ = 4, ùëù = 1 ‚àô 24 + 1 = 17 

Para ùëò = 3 e ùëõ = 3, ùëù = 3 ‚àô 23 + 1 = 25 

Para ùëò = 1 e ùëõ = 5, ùëù = 1 ‚àô 25 + 1 = 33 

√â importante notar que os N√∫meros de Fermat ùêπùëõ =   22ùëõ

+ 1, j√° definidos 

no atual trabalho, s√£o um caso particular dos n√∫meros de Proth. Quando primos, os 

n√∫meros de Proth s√£o denominados Primos de Proth. 

O Teste de Primalidade de Proth √© uma consequ√™ncia direta do Teorema 

de  Proth,  um  teste  probabil√≠stico  publicado  em  1878,  cuja  descri√ß√£o  pode  ser 

observada logo a seguir. 

Teorema 4. Seja ùëù = ùëò ‚àô 2ùëõ + 1  um n√∫mero de Proth. Se existe ùëé ‚àà ‚Ñ§, ùëé > 1, tal que  

ùëù‚àí1
2 ‚â° ‚àí1(mod ùëù) 

ùëé

Ent√£o ùëù √© primo. 

Demonstra√ß√£o. Adotemos o seguinte resultado, demonstrado na obra de Martinez, 

Moreira, et al., (2013).  

 
 
54 

Se ùëõ ‚àí 1 = ùêπùëÖ, com ùêπ > ùëÖ e para todo fator primo ùëû de ùêπ existe um ùëé >

1, tal que ùëéùëõ‚àí1 ‚â° 1 (mod ùëõ) e (ùëé

ùëõ‚àí1
ùëû ‚àí 1, ùëõ) = 1, ent√£o ùëõ √© primo. 

Agora, fazendo ùêπ = 2ùëò, temos ùëõ = ‚Ñé2ùëò + 1 ‚ü∫ ùëõ ‚àí 1 = ‚Ñé2ùëò, como 2ùëò > ‚Ñé 

e como para todo fator primo ùëû de 2ùëò (ùëû = 2), existe ùëé > 1 tal que  

ùëõ‚àí1
2 ‚â° ‚àí1(mod ùëõ) ‚ü∫ (ùëé

ùëé

2
ùëõ‚àí1
2 )

‚â° (‚àí1)2(mod ùëõ) ‚ü∫ ùëéùëõ‚àí1 ‚â° 1(mod ùëõ) 

E como  

ùëõ‚àí1
2 ‚â° ‚àí1(mod ùëõ) ‚ü∫ ùëõ ‚à£ ùëé

ùëõ‚àí1
2 + 1 

ùëé

Mas ùëõ √© √≠mpar maior que 1, logo  

ùëõ ‚à§   ùëé

ùëõ‚àí1
2 + 1 ‚àí 2 = ùëé

ùëõ‚àí1
2 ‚àí 1 

Dessa forma, (ùëé

ùëõ‚àí1
2 ‚àí 1, ùëõ) = 1 

Portanto, ùëõ √© primo.  

O maior primo conhecido antes da era computacional foi de Proth, com 

44  d√≠gitos,  encontrado  em  1951,  com  a  ajuda  de  uma  calculadora  mec√¢nica  de 

mesa, conforme descrito por Caldwell (2021): ‚Äúem 1951, Ferrier encontrou o primo 

(2148 + 1)/17 =  20988936657440586486151264256610222593863921‚Äù. 

Os  primos  de  Proth  s√£o  frequentes  e  facilmente  verificados,  pelos 

resultados  anteriormente  apresentados, 

logo  muitos  dos  maiores  primos 

conhecidos s√£o desse tipo (MARTINEZ, MOREIRA , et al., 2013). 

6.5 Teste de P√©pin 

O Teste de P√©pin √© um teste de primalidade para n√∫meros de Fermat. O 

teste  leva  o  nome  do  matem√°tico  franc√™s  Jean  Fran√ßois  Th√©ophile  P√©pin  (1826-

1905) e √© descrito da seguinte forma 

Teorema 5. Seja ùêπùëõ = 22ùëõ
ùêπùëõ √© primo.  

+ 1 (n√∫mero de Fermat), se 3

2 ‚â° ‚àí1 (mod ùêπùëõ), ent√£o 

ùêπùëõ‚àí1

 
 
55 

Demonstra√ß√£o.  Seja  a  seguinte  proposi√ß√£o,  demonstrada  na  obra  de  Martinez, 

Moreira, et al., (2013).  

Dado ùëõ > 1, se para cada fator primo ùëû de ùëõ ‚àí 1 existe um inteiro ùëéùëû tal 

que ùëéùëû

ùëõ‚àí1 ‚â° 1 (mod ùëõ) e ùëéùëû

ùëû ‚â¢ 1 (mod ùëõ), ent√£o ùëõ √© primo. 

ùëõ‚àí1

Agora, pela proposi√ß√£o destacada, dado ùêπùëõ = 22ùëõ

+ 1, que √© maior que 

1,  ent√£o  ùêπùëõ ‚àí 1 = 22ùëõ

,  cujo  fator  primo  √©  2.  Como,  pela  hip√≥tese,  3

2 ‚â°

ùêπùëõ‚àí1

‚àí1 (mod ùêπùëõ) ‚ü∫   (3

2

ùêπùëõ‚àí1

2 )

‚â° (‚àí1)2 (mod ùêπùëõ) ‚ü∫ 3ùêπùëõ‚àí1 ‚â° 1 (mod ùêπùëõ), ent√£o existe um 

inteiro  ùëéùëû  tal  que  ùëéùëû

ùëõ‚àí1 ‚â° 1 (mod ùëõ)  e  n√£o  existe  3

ùêπùëõ‚àí1
2

  congruente  √†  1  m√≥dulo  ùêπùëõ, 

logo, ùêπùëõ √© primo.  

Para exemplificar, vamos aplicar o teste para o n√∫mero de Fermat com 

ùëõ = 4. 

Devemos  provar  que  3

2 ‚â° ‚àí1 (mod ùêπ4).  Como  ùêπ4 = 224

+ 1 = 216 +

ùêπ4‚àí1

1 = 65536 + 1 = 65537, 

ent√£o 

ùêπ4‚àí1
2

= 32768. 

Mas 

332768 ‚â° 65536 ‚â°

‚àí1(mod 65537), ent√£o 3

ùêπ4‚àí1

2 ‚â° ‚àí1 (mod ùêπ4), e ùêπ4 √© primo.  

6.6 Teste de Lucas-Lehmer 

O teste a seguir foi apresentado por Lucas em 1876 e aperfei√ßoado por 

Lehmer em 1932. O algoritmo √© definido por recorr√™ncia e √© utilizado para testar a 

primalidade de n√∫meros de Mersenne. A chave do teste encontra-se na sequ√™ncia 

de inteiros ùëÜ0, ùëÜ1, ùëÜ2, ‚Ä¶ definida recursivamente como 

{

ùëÜ0 = 4
ùëÜùëõ = ùëÜùëõ‚àí1

2 ‚àí 2

Teste de Lucas-Lehmer. Seja ùëù um n√∫mero primo positivo. Se ùëÜùëù‚àí2 ‚â° 0 (mod ùëÄùëù), 

ent√£o o n√∫mero de Mersenne ùëÄùëù √© primo. 

Ou em outras palavras, se ùëÄùëù divide ùëÜùëù‚àí2, ent√£o ùëÄùëù√© primo.  

 
 
 
56 

Sua  demonstra√ß√£o  transcende  o  conte√∫do  abordado  nesse  trabalho, 

contudo pode ser verificada no trabalho de Coutinho (2004, p. 162), no entanto o 

teste √© de f√°cil implementa√ß√£o e utiliza√ß√£o. Vejamos alguns exemplos. 

Para  ùëõ = 3,  temos  ùëÄ3 = 23 ‚àí 1 = 7.  Como  ùëÜ0 = 4,  ent√£o  ùëÜ1 = 42 ‚àí 2 =

14. Dessa forma, ùëÄ3 ‚à£ ùëÜ1, logo ùëÄ3 √© primo. 

Para ùëõ = 7, temos ùëÄ7 = 27 ‚àí 1 = 127. Devemos achar ùëÜ5, ent√£o temos 

ùëÜ2 = 142 ‚àí 2 = 194 

ùëÜ3 = 1942 ‚àí 2 = 37.636 ‚àí 2 = 37.634 

ùëÜ4 = 366342 ‚àí 2 = 1.416.317.956 ‚àí 2 = 1.416.317.954 

ùëÜ5 = 1.416.317.9542 ‚àí 2 = 2.005.956.546.822.746.116 ‚àí 2
= 2.005.956.546.822.746.114 

Como  127 ‚àô 15.794.933.439.549.182 = 2.005.956.546.822.746.114,  ent√£o 

ùëÄ7 ‚à£ ùëÜ5 e, portanto, ùëÄ7 √© primo.  

O √∫ltimo exemplo serviu para mostrar que, como a sequ√™ncia ùëÜùëõ cresce 

rapidamente, √© mais conveniente utilizar opera√ß√µes com m√≥dulo ùëÄùëù. Assim, o Teste 

de Lucas-Lehmer poderia ser escrito da seguinte forma. 

ùëÜ0 = 4

{

ùëÜùëõ ‚â° (ùëÜùëõ‚àí1

2 ‚àí 2) (mod ùëÄùëù) 

ùëÜùëõ‚àí2 ‚â° 0 (mod ùëÄùëù) ‚üπ   ùëÄùëù √© primo

Logo, para ùëõ = 7 ter√≠amos. 

ùëÜ0 = 4 

 ùëÜ1 ‚â° 14 (mod 127) 

 ùëÜ2 ‚â° (142 ‚àí 2) ‚â° 194 ‚â° 67 (mod 127) 

 ùëÜ3 ‚â° (672 ‚àí 2) ‚â° 4487 ‚â° 42 (mod 127) 

 ùëÜ4 ‚â° (422 ‚àí 2) ‚â° 1762 ‚â° 111 (mod 127) 

 ùëÜ5 ‚â° (1112 ‚àí 2) ‚â° 12319 ‚â° 0 (mod 127) 

 
 
 
57 

Portanto, como  ùëÜ5 ‚â° 0 (mod ùëÄ7), ùëÄ7 √© primo.  

O m√©todo acima √© determin√≠stico de tempo polinomial e seu custo √© da 

ordem de O(ùëù2 log ùëù) (COLQUITT e WELSH JR, 1991). Comparado a outros testes, 

o algoritmo de Lucas-Lehmer √© de baixo custo, o que o tem colocado, desde a sua 

idealiza√ß√£o, como um dos principais na descoberta de primos.  

Lucas, em 1876, ao aplicar seu pr√≥prio teste, descobriu que ùëÄ127 √© primo. 

Com 39 algarismos, este foi o maior primo conhecido at√© o ano de 1951, quando se 

iniciou a era dos computadores modernos (RIBENBOIM, 2014). 

Na medida que ùëù aumenta, ùëÄùëù torna-se consideravelmente grande, o que 

torna  os  c√°lculos  excessivamente  trabalhosos  e  exaustivos,  contudo,  com  a 

evolu√ß√£o das m√°quinas, esta tarefa foi consideravelmente reduzida, conforme se v√™ 

na narrativa seguinte. 

A aplica√ß√£o do teste de LUCAS e LEHMER para investigar a primaridade 
de ùëÄùëû quando ùëû √© grande, exige c√°lculos muito longos. Para afrontar esses 
problemas t√©cnicos, trabalha-se com computadores muito possantes, em 
equipes. Mas tamb√©m  utilizam-se programas especialmente concebidos. 
[...]  WOLTMAN23  preparou  um  programa  com  janelas  e  criou  o  GIMPS 
(‚ÄòGreat  Internet  Mersenne  Prime  Search‚Äù).  Qualquer  um  que  queira 
participar  no  projeto,  com  seus  computadores  pessoais,  recebe  o 
‚Äúsoftware‚Äù gratuitamente, uma faixa de primos ùëû a serem investigados bem 
como acesso de informa√ß√µes sobre o assunto (RIBENBOIM, 2014, p. 76). 

Desde 1996, os √∫ltimos 15 maiores primos descobertos foram provados 

pelo programa GIMPS. At√© o fechamento deste trabalho (agosto de 2021), o maior 

primo conhecido √© o de Mersenne, ùëÄ82589933 = 282589933 ‚àí 1, com 24.862.048 de d√≠gitos 

(CALDWELL, 2021). 

6.7 Crivo de Sundaram 

Com um m√©todo parecido ao  Crivo de Erat√≥stenes, j√° detalhado nesta 

pesquisa, apresentaremos agora um sistema de n√∫meros dispostos em tabela com 

exclus√µes e destaque de certos algarismos.  

Muitos  leitores,  provavelmente,  est√£o  familiarizados  com  o  "Crivo  de 

Erat√≥stenes" para filtrar n√∫meros primos, contudo, em 1934, um jovem estudante 

23 George Woltman, criador e um dos diretores do GIMPS. 

 
 
 
58 

indiano  chamado  Sundaram,  prop√¥s  uma  outra  alternativa,  chamada  Crivo  de 

Sundaram (HONSBERGER, 1970).  

O m√©todo explora o fato de que todo primo a partir do 2 √© um n√∫mero 

√≠mpar n√£o composto. Consiste, portanto, na forma√ß√£o de uma tabela de n√∫meros 

naturais √≠mpares compostos dispostos em progress√£o aritm√©tica, em cada coluna. 

Ao final, os √≠mpares que n√£o estiverem na tabela, ser√£o primos.  

Consideremos os n√∫meros √≠mpares representados por 2ùëö + 1 e 2ùëõ + 1, 

com  ùëö  e  ùëõ  naturais.  Assim  sendo,  poder√≠amos  representar  o  n√∫mero  √≠mpar  ùëù 

composto da seguinte maneira: ùëù = (2ùëö + 1)(2ùëõ + 1) = 4ùëöùëõ + 2ùëö + 2ùëõ + 1 

A  montagem  da  tabela  consiste  em  organizar  seus  n√∫meros  ùëùùëñ√óùëó 

conforme a disposi√ß√£o das linhas ùëöùëñ = ùëñ, com ùëñ ‚àà ‚Ñï, e colunas ùëõùëó = ùëó, com ùëó ‚àà ‚Ñï. 

Assim, ter√≠amos ùëùùëñ√óùëó = 4ùëöùëñùëõùëó + 2ùëöùëñ + 2ùëõùëó + 1. Dessa forma, para a primeira linha e 

primeira coluna, temos ùëö1 = 1 e ùëõ1 = 1 que resultam em ùëù1√ó1 = 4 ‚àô 1 ‚àô 1 + 2 ‚àô 1 + 2 ‚àô

1 + 1 = 9; para a segunda linha e primeira coluna, possu√≠mos ùëö2 = 2 e ùëõ1 = 1 que 

resultam  em  ùëù2√ó1 = 4 ‚àô 2 ‚àô 1 + 2 ‚àô 2 + 2 ‚àô 1 + 1 = 15,  e  assim  sucessivamente,  at√© 

chegarmos na seguinte tabela, para valores de ùëö e ùëõ de 1 a 16. 

Tabela 4 ‚Äì Crivo de Sundaram 

ùëõ1  ùëõ2  ùëõ3  ùëõ4  ùëõ5  ùëõ6  ùëõ7  ùëõ8  ùëõ9  ùëõ10  ùëõ11  ùëõ12  ùëõ13  ùëõ14  ùëõ15  ùëõ16 
57 
99 
95 

63 
93 
105  115  125  135  145  155 

51 
85 

75 

69 

81 

87 

45 
75 
105  119  133  147  161  175  189  203 

39 
65 
91 
117  135  153  171  189  207  225  243 

33 
55 
77 
99 
121  143  165  187  209  231  253  275 

27 
45 
63 
81 
99 
117  143  169  195  221  247  273  299 

21 
35 
49 
63 
77 
91 
105  135  165  195  225  255  285  315 
119  153  187  221  255  289  323 
133  171  209  247  285  323 

ùëö1  9 
15 
ùëö2  15  25 
ùëö3  21  35 
ùëö4  27  45 
ùëö5  33  55 
ùëö6  39  65 
ùëö7  45  75 
ùëö8  51  85 
ùëö9  57  95 
ùëö10  63  105  147  189  231  273  315 
ùëö11  69  115  161  207  253  299 
ùëö12  75  125  175  225  275 
ùëö13  81  135  189  243 
ùëö14  87  145  203 
ùëö15  93  155 
ùëö16  99 
Fonte: Elaborado pelo autor  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
59 

A tabela formada pelos n√∫meros ùëöùëñ e ùëõùëó, com ùëñ = ùëó, separa os elementos 

(2ùëöùëñ‚Ä≤ + 1)(2ùëõùëó‚Ä≤ + 1)  e 

(2ùëöùëñ‚Ä≤‚Ä≤ + 1)(2ùëõùëó‚Ä≤‚Ä≤ + 1),  com 

ùëñ‚Ä≤ = ùëó‚Ä≤‚Ä≤  e 

ùëñ‚Ä≤‚Ä≤ = ùëó‚Ä≤,  e 

consequentemente  ùëöùëñ‚Ä≤ = ùëõùëó‚Ä≤‚Ä≤  e  ùëöùëñ‚Ä≤‚Ä≤ = ùëõùëó‚Ä≤,  logo  (2ùëöùëñ‚Ä≤ + 1)(2ùëõùëó‚Ä≤ + 1) = (2ùëöùëñ‚Ä≤‚Ä≤ +

1)(2ùëõùëó‚Ä≤‚Ä≤ + 1). A tabela 4 re√∫ne todos os elementos com ùëñ variando de 1 a 16 e ùëó de 

1 a 16, dos quais, os n√∫meros formados por ùëö1 e ùëõùëó, ùëó ‚àà (1,16), ùëö2 e ùëõùëó, ùëó ‚àà (1,9), 

ùëö3 e ùëõùëó, ùëó ‚àà (1,6), ùëö4 e ùëõùëó, ùëó ‚àà (1,5) formam todos os n√∫meros √≠mpares compostos 

at√© 99. Como, com exce√ß√£o do 1, todo n√∫mero √≠mpar n√£o contido na tabela n√£o √© 

composto, ent√£o todos os √≠mpares at√© 100, n√£o pertencentes √†quela, s√£o primos, a 

saber: 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 

83, 89, 97. 

 
 
 
 
60 

7 TESTES COMPUTACIONAIS 

7.1 Teste de Solovay-Strassen 

O  Teste  de  Slovay-Strassen  √© um m√©todo  desenvolvido  em  1977 pelo 

estadunidense Robert Martin Solovay e pelo alem√£o Volker Strassen. √â um teste 

probabil√≠stico  em  tempo  polinomial  do  tipo  Monte-Carlo.  Sobre  esta  √∫ltima 

ferramenta,  Weisstein  (2021)  a  define  como  ‚Äúqualquer  m√©todo  que  resolva  um 

problema por meio da gera√ß√£o adequada de n√∫meros aleat√≥rios e analise se aquela 

fra√ß√£o  de  n√∫meros  obedece  determinadas  propriedades.  O  m√©todo  √©  √∫til  para 

obten√ß√£o  de  solu√ß√µes  num√©ricas  para  problemas  que  s√£o  muito  complicados  de 

resolver analiticamente.‚Äù (WEISSTEIN, 2021, tradu√ß√£o nossa)  

O teste √© realizado, basicamente, atrav√©s de uma sele√ß√£o aleat√≥ria dos 

dados  de  entrada  que  retorna  um  resultado  provavelmente  correto.  Dado  um 

n√∫mero  de  entrada  ùëõ,  a  sa√≠da  ser√°  ùëõ  composto  ou  ùëõ  provavelmente  primo.  Seu 

funcionamento baseia-se no Crit√©rio de Euler, que afirma: 

Se ùëù √© um n√∫mero √≠mpar e ùëé ‚àà ‚Ñ§, com ùëé e ùëù coprimos, ent√£o 

ùëé

ùëù‚àí1
2 ‚â° (

ùëé
ùëù

) (mod ùëù) 

Onde (

ùëé

ùëù

) √© o s√≠mbolo de Legendre24, definido, para ùëù primo, como: 

0,

caso ùëù divida ùëé

{

 1, caso ùëé seja um res√≠duo quadr√°tico25 m√≥dulo ùëù
‚àí1, caso ùëé n√£o seja um res√≠duo quadr√°tico m√≥dulo ùëù

O crit√©rio √© demonstrado em Hefez (2014, p. 287). 

Para ùëõ ‚àà ‚Ñ§, √≠mpar, temos (

ùëé

ùëõ

) como resultado do produto dos s√≠mbolos 

de  Legendre,  definido  como  s√≠mbolo  de  Jacobi26,  portando  representa  uma 

generaliza√ß√£o daquele. Sendo ùëùùëñ cada um dos fatores primos de ùëõ, temos 

24 Adrien-Marie Legendre, matem√°tico franc√™s que viveu entre os s√©culos XVIII e XIX (1752-1833) 
25 Um n√∫mero ùëé ‚àà ‚Ñ§ √© um res√≠duo quadr√°tico m√≥dulo ùëù se existe algum ùë• que satisfa√ßa a equa√ß√£o 
ùë•2 ‚â° ùëé (mod ùëù) 
26 Carl Gustav Jakob Jacobi, matem√°tico alem√£o do s√©culo XIX (1804-1851). 

 
 
 
 
(

ùëé
ùëõ

) = (

ùëé
ùëù1

) (

ùëé
ùëù2

) (

ùëé
ùëù3

) ‚àô ‚ãØ ‚àô (

ùëé
ùëùùëõ

) 

61 

Como, para todo ùëé ‚àà ‚Ñ§, o crit√©rio √© verdadeiro, ent√£o se, ap√≥s testados 

todos os valores do intervalo (1, ùëõ ‚àí 1), o crit√©rio for satisfeito, ùëõ ser√° primo. Sendo 

assim, para valores aleat√≥rios de ùëõ, a congru√™ncia a ser verificada ser√°. 

ùëõ‚àí1
2 ‚â° (

ùëé

ùëé
ùëõ

) (mod ùëõ) 

Os passos adotados no algoritmo de Solovay-Strassen s√£o os seguintes. 

Passo 1. Selecionar aleatoriamente um n√∫mero ùë•; 

Passo 2. Aplicado o teste, este trar√° como resposta que ùë• √© seguramente composto 

ou que ùë• √© provavelmente primo; 

Passo 3. Se ùë• for provavelmente primo, a chance de ser composto √© de no m√°ximo 

1/2; 

Passo  4.  Ap√≥s  ùëõ  opera√ß√µes,  com  a  perman√™ncia  da  resposta  de  provavelmente 

primo, a probabilidade de retorno de um pseudoprimo √© de no m√°ximo de (¬Ω)ùëõ. Na 

medida que ùëõ aumenta, o erro se torna desprez√≠vel. 

Assim  como  os  demais  testes  probabil√≠sticos,  o  algoritmo  de  Solovay-

Strassen possuir√° maior precis√£o quanto maior for o n√∫mero de itera√ß√µes, logo, pelo 

exposto, o teste √© determin√≠stico para exames com todos os valores de ùëõ, contudo, 

para enormes valores de ùëõ, o m√©todo √© invi√°vel.  

Com  uso  de  r√°pidos  algoritmos  de  exponencia√ß√£o  modular,  o  custo 

computacional 

deste 

algoritmo 

√©  ùëÇ(ùëò ‚àô ùëôùëúùëî3ùëõ), 

para 

ùëò 

testagens 

(GEEKSFORGEEKS, 2021).  

7.2 Teste de Miller-Rabin 

√â  um  teste  probabil√≠stico  de  tempo  polinomial  tamb√©m  do  tipo  Monte 

Carlo, elaborado por Gary Miller e Michael Rabin. √â um aprimoramento do teste de 

Solovay-Strassen,  com  margem  de  erro  consideravelmente  menor.  Sobre  esse 

algoritmo, Sautoy (2007, p. 263) relata que ‚Äúnos anos de 1980, dois matem√°ticos, 

 
 
62 

Gary Miller e Michael Rabin, desenvolveram finalmente uma varia√ß√£o que garantiria, 

ap√≥s poucos testes, que um n√∫mero √© primo‚Äù. 

O teste √© fundamentado no seguinte teorema. 

Teorema  6.  Se  ùëù  √©  um  n√∫mero  primo  e  ùë• > 1,  tal que  ùë•2 ‚â° 1(mod ùëù),  ent√£o ùë• ‚â°

1 (mod ùëù) ou ùë• ‚â° (ùëù ‚àí 1) (mod ùëù) 

Demonstra√ß√£o..ùë•2 ‚â° 1 (mod ùëù) ‚üπ ùë•2 ‚àí 1 ‚â° 0 (mod ùëù) ‚üπ (ùë• + 1)(ùë• ‚àí 1) ‚â°

0 (mod ùëù) ‚üπ  ùë• + 1 ‚â° 0 (mod ùëù) ou ùë• ‚àí 1 ‚â° 0 (mod ùëù) ‚üπ ùë• ‚â° ‚àí1 (mod ùëù) ou ùë• ‚â°

1 (mod ùëù) ‚üπ ùë• ‚â° ‚àí1 ‚â° ùëù ‚àí 1 (mod ùëù) ou ùë• ‚â° 1 (mod ùëù) ‚üπ ùë• ‚â° (ùëù ‚àí

1) (mod ùëù) ou ùë• ‚â° 1 (mod ùëù) 

O funcionamento do teste √© baseado na seguinte an√°lise:  

Dado  um  n√∫mero  ùë• ‚àà ‚Ñ§,  par,  podemos  escrev√™-lo  como  ùë• = 2ùëù,  logo, 

temos dois casos: 

I.  ùëù √≠mpar ‚üπ ùë• = 2ùëù1 
II.  ùëù par ‚üπ ùëù1 = 2ùëù2, logo ùë• = 2 ‚àô 2ùëù2 = 22ùëù2 

No segundo caso, podemos continuar o processo enquanto  ùëùùëõ for par, 

com consequente aumento do √≠ndice ùëõ. √Ä vista disso, ùëùùëõ diminui at√© que em dado 
momento ùëùùëõ ser√° √≠mpar, ou seja, ùë• = 2ùëõùëùùëõ. Fazendo ùëùùëõ = ùëù, temos ùë• = 2ùëõùëù.  

Sabendo que para todo primo ùëù > 2, ùëù ‚àí 1 √© par, teremos ùëù ‚àí 1 = 2ùëõùëö.  

Dados  ùëù  primo  e  ùëé ‚àà ‚Ñ§ ,  se  ùëù ‚à§ ùëé,  ent√£o  (ùëé, ùëù) = 1  e,  pelo  Pequeno 

Teorema  de  Fermat,  ùëéùëù‚àí1 ‚â° 1 (mod ùëù),  assim  ùëé2ùëõùëö ‚â° 1 (mod ùëù) ‚üπ (ùëéùëö)2ùëõ
1 (mod ùëù). Dessa forma, pela Proposi√ß√£o C.9, ùëéùëö ‚â° 1 (mod ùëù) ou ùëéùëö ‚â° ‚àí1 (mod ùëù). 

‚â°

Pelo  Teorema  C.10,  se  ùëù ‚à§ ùëé,  ùëé ‚â¢ 1 (mod ùëù),  ùëé ‚â¢ ‚àí1 (mod ùëù)  e  ùëé2 ‚â°

1 (mod ùëù), ent√£o ùëù √© composto.  

Agora, utilizando-se destes resultados, podemos testar a primalidade de 

um n√∫mero da seguinte forma.  

Passo 1. Seleciona-se um n√∫mero inteiro ùëõ > 2 √≠mpar e faz-se ùëõ ‚àí 1 = 2ùëõùëö; 

 
 
63 

Passo 2. Seleciona-se  um  n√∫mero  inteiro ùëé  qualquer, 1 < ùëé < ùëõ ‚àí 1,  e  calcula-se 

ùëéùëömod ùëõ. Da√≠, haver√° dois casos poss√≠veis. 

 ùëéùëömod ùëõ = 1 ‚üπ ùëéùëö ‚â° 1 (mod ùëõ)  ou  ùëéùëömod ùëõ = ùëõ ‚àí 1 ‚üπ ùëéùëö ‚â° (n ‚àí
Caso  1. 
1) (mod ùëõ) ‚üπ ùëéùëö ‚â° ‚àí1 (mod ùëõ).  Logo  ùëéùëö ‚â° ¬±1 (mod ùëõ) ‚üπ ùëé2ùëõùëö ‚â° 1 (mod ùëõ), 
ent√£o ùëéùëõ‚àí1 ‚â° 1(mod ùëõ) e, portanto, ùëõ ser√° primo; 

Caso  2.  ùëéùëö mod ùëõ ‚â† 1  e  ùëéùëö mod ùëõ ‚â† ùëõ ‚àí 1 ‚üπ ùëéùëö ‚â¢ 1 (mod ùëõ)  e  ùëéùëö ‚â¢ (ùëõ ‚àí
1)(mod ùëõ) ‚üπ ùëéùëö ‚â¢ ‚àí1 (mod ùëõ) ‚üπ ùëéùëö ‚â¢ ¬±1 (mod ùëõ).  Fazemos,  ent√£o,  ùë•1 =
(ùëéùëömod ùëõ)2 mod ùëõ e teremos as seguintes possibilidades. 

I.  Se ùë•1 = ùëõ ‚àí 1, ent√£o ùëõ ser√° primo 

II.  Se ùë•1 = 1, ent√£o ùëõ ser√° composto 

III.  Se n√£o I ou II n√£o for verdadeiro, faz-se ùë•2 = ùë•1

2mod ùëõ, e verifica-se 

novamente se I ou II √© verdadeiro. 

Repete-se este processo at√© que ùë•ùëñ seja igual a ùëõ ‚àí 1 ou 1.  

O  teste  mostra-se  muito  eficiente  para  um  n√∫mero  determinado  de 

tentativas, conforme observa-se adiante. 

[...]  o  algoritmo  Miller-Rabin,  um  exemplo  de  teste  de  primalidade 
probabil√≠stico. Dado ùëõ, tomamos ùë° valores de ùëé ao acaso no intervalo 1 <
ùëé < ùëõ  e  verificamos  para  cada  ùëé  se  ùëõ  passa  no  teste  de  primalidade  na 
base ùëé. Se ùëõ for √≠mpar composto, a probabilidade de que um dado ùëé acuse 
a  n√£o-primalidade  de  ùëé  √©  maior  do  que  3/4  (pelo  teorema);  assim,  a 
probabilidade de que ùëõ escape a ùë° testes √© menor do que 4‚àíùë° (MOREIRA 
e SALDANHA, 2012, p. 3). 

Deste modo, para dado ùëõ, ap√≥s testagem de 75% das bases menores 

que ùëõ, haveria certeza sobre a primalidade de ùëõ, contudo, para elevados valores de 

ùëõ, o teste √© obviamente custoso. 

O teste apresentado neste t√≥pico √© uma varia√ß√£o probabil√≠stica, devida a 

Rabin,  de  um 

teste  determin√≠stico  proposto  por  Miller  que  dependia  da 

generaliza√ß√£o da Hip√≥tese de Riemann. Uma forma de transformar o teste de Miller-

Rabin  em  determin√≠stico  √©  testar  todos  os  valores  da  base  ùëé  em  um  intervalo 

suficientemente grande. A referida generaliza√ß√£o da Hip√≥tese citada implica que o 

 
 
64 

intervalo  de  1  at√©  2(ùëôùëúùëî ùëõ)2  √©  o  suficiente.  Apesar  deste  algoritmo  ser  r√°pido, 

depende da comprova√ß√£o de uma conjectura (MARTINEZ, MOREIRA , et al., 2013).  

7.3 Teste AKS 

No ano de 2002, os pesquisadores indianos Manindra Agrawal, Neeraj 

Kayal e Nitin Saxena publicaram no trabalho intitulado PRIMES is in P um algoritmo 

determin√≠stico que determina a primalidade de um n√∫mero em tempo polinomial, um 

relevante resultado da busca de um teste capaz de tal feito.  

O  teste  √©  de  f√°cil  aplica√ß√£o  e  utiliza  como  base  a  generaliza√ß√£o  do 

Pequeno Teorema de Fermat. O algoritmo fundamenta-se no seguinte lema: 

Lema 4. Dado ùëé inteiro, ùëõ natural maior que 2 e ùëé e ùëõ coprimos, ent√£o 

(ùë• + ùëé)ùëõ ‚â° ùë•ùëõ + ùëé (mod ùëõ) ‚ü∫ ùëõ √© primo   

Uma  vez  que  (ùë• + ùëé)ùëõ  e  ùë•ùëõ + ùëé  deixar√£o  o  mesmo  resto  m√≥dulo  ùëõ  se 

divididos por qualquer polin√¥mio, ent√£o, em particular, se forem divididos por ùë•ùëü ‚àí

1, teremos. 

(ùë• + ùëé)ùëõ ‚â° ùë•ùëõ + ùëé (mod ùë•ùëü ‚àí 1, ùëõ) ‚ü∫ ùëõ √© primo   

Ambos  resultados  s√£o  demonstrados  no  artigo  PRIMES  is  in  P 

(AGRAWAL, 2006) e o √∫ltimo mostra que para verificar a primalidade de ùëõ, basta 

testar a congru√™ncia para um determinado valor de ùëü, que no trabalho mencionado 

representa um n√∫mero primo no qual ùëü ‚àí 1 possui um fator primo ùëû ‚â• 4‚àöùëü log ùëõ, que 

divide a ordem de ùëõ m√≥dulo ùëü.  

Com este √∫ltimo resultado, a aplica√ß√£o do teste consiste em selecionar 

um determinado n√∫mero ùëõ a fim de testar sua primalidade e adotar um determinado 

valor primo para ùëé e ùëü. Em seguida, ap√≥s substitui√ß√£o na congru√™ncia (ùë• + ùëé)ùëõ ‚â°

ùë•ùëõ + ùëé (mod ùë•ùëü ‚àí 1, ùëõ),  analisar  se  os  restos  da  divis√£o  de  (ùë• + ùëé)ùëõ  e  ùë•ùëõ + ùëé  por 

ùë•ùëü ‚àí 1 divididos por ùëõ s√£o iguais.  

Os  autores  do  teste  puderam  avaliar  o  tempo  de  execu√ß√£o  deste 

algoritmo em (log ùëõ)12, o qual foi aprimorado e reduzido para (log ùëõ)7,5. Por fim, no 

trabalho intitulado Primality testing with Gaussian periods, pode ser verificada uma 

 
 
65 

redu√ß√£o  ainda  maior  da  complexidade  do  algoritmo  para  (log ùëõ)6  (RIBENBOIM, 

2014). 

Face a imensa import√¢ncia da identifica√ß√£o de primos cada vez maiores, 

este  teste  tornou-se  um  marco  na  busca  por  n√∫meros  prim√°rios  gigantes, 

fortalecendo  ainda mais as  opera√ß√µes  dependentes destes  algarismos,  conforme 

se v√™ nas palavras de Agrawal, Kayal e Saxena (2004). 

Os  n√∫meros  primos  s√£o  de  fundamental  import√¢ncia  na  matem√°tica  em 
geral,  e  na  Teoria  dos  N√∫meros,  em  particular.  Por  isso,  √©  de  grande 
interesse  estudar  diferentes  propriedades  de  n√∫meros  primos.  H√°  um 
destaque  especial  para  aquelas  propriedades  que  permitem  determinar 
eficientemente se um n√∫mero √© primo. Tais testes eficientes tamb√©m s√£o 
√∫teis  na  pr√°tica:  uma  s√©rie  de  protocolos  criptogr√°ficos  precisam  de 
grandes n√∫meros primos (AGRAWAL, KAYAL e SAXENA, 2004, p.  781, 
tradu√ß√£o nossa). 

7.4 Outros m√©todos computacionais  

Al√©m da relevante descoberta do teste AKS, que rompeu com a barreira 

da  espera  de  um  algoritmo  determin√≠stico  em  tempo  polinomial,  uma  s√©rie  de 

estudos avan√ßados foram desenvolvidos com o intuito de aprimorar os m√©todos de 

localiza√ß√£o  de  grandes  primos.  Nesta  corrida,  muitos  outros  testes  foram 

apresentados, com resultados e alcances not√°veis.  

O  Teste  de  Baillie  ‚Äì  PSW,  desenvolvido  por  Robert  Baillie,  Carl 

Pomerance,  John  Selfridgee  e  Samuel  Wagstaff,  √©  um  m√©todo  que  consiste  na 

utiliza√ß√£o de um conjunto de algoritmos probabil√≠sticos. 

Conforme  Weisstein  (2021),  uma  das  formas  desse  algoritmo  √©  a 

aplica√ß√£o  de  um  teste  de  pseudoprimo  forte  de  base  2,  para  um  n√∫mero  ùëõ.  Se 

 passar, aplica-se o teste de Lucas, com emprego do s√≠mbolo de Jacobi. Se ùëõ passar 

neste √∫ltimo, ent√£o ser√° considerado provavelmente primo.  

O teste possui algo grau de confiabilidade e at√© a data de fechamento 

deste  trabalho  ainda  n√£o  fora  apresentado  um  n√∫mero  composto  que  passe  no 

teste. Sobre esse fato, Weisstein (2021) afirma que n√£o h√° exemplos de n√∫meros 

compostos que passem no teste e, em 13 de junho de 2009, Jeff Gilchrist confirmou 

que n√£o h√° pseudoprimos Baillie-PSW at√© 1017. 

 
 
66 

As linhas de pesquisas sobre testes de primalidade foram desviadas para 

campos  mais avan√ßados  da matem√°tica,  com  uso de  conceitos mais complexos. 

Neste contexto, testes como APR, proposto por L. M. Adleman, C. Pomerance e R. 

S.  Rumely,  em  1983,  surgiram  como  novas  ferramentas  de  menor  custo  na 

identifica√ß√£o de primos.  

O  teste  APR  utiliza  conceitos  avan√ßados  de  Teoria  dos  N√∫meros, 

conforme se v√™ a seguir. 

O  teste  √©  rigorosamente  justificado  e,  para  isso,  foi  necess√°rio,  pela 
primeira vez nesse dom√≠nio, apelar para resultados dif√≠ceis da teoria dos 
n√∫meros  alg√©bricos;  h√°  necessidade  de  interven√ß√£o  de  c√°lculos  com  as 
ra√≠zes da unidade e da lei de reciprocidade geral do s√≠mbolo de restos de 
pot√™ncias (RIBENBOIM, 2014, p. 111). 

Trata-se,  ent√£o,  de  conte√∫dos  pouco  utilizados  em  cursos  b√°sicos  de 

matem√°tica,  √∫teis,  no  entanto,  em  √°reas  espec√≠ficas  de  estudo.  Ainda  conforme 

Ribenboim (2014), o teste possui larga vantagem em rela√ß√£o a seus antecessores, 

como a possibilidade de aplica√ß√£o a n√∫meros naturais quaisquer, sem necessidade 

de  determinar  fatores  primos  de  ùëõ ‚àí 1  ou  ùëõ + 1,  para  um  dado  ùëõ  testado.  Um 

exemplo de sua efici√™ncia √© a testagem de um n√∫mero de 247 algarismos em 1987, 

por Cohen e A.K Lenstra, que levou apenas 15 minutos.  

Outro  tipo  de  abordagem  na  verifica√ß√£o  de  primos,  √©  a  utiliza√ß√£o  de 

curvas  el√≠pticas27,  desenvolvido  em  1986  por  A.O.L.  Atkin  e  denominado  ECPP 

(Eliptic Curve Primality Proving). O teste √© realizado em tempo polinomial e  pode 

ser comprovado com rigor. Estima-se que seu custo computacional √© da ordem de 

ùëÇ(log ùëõ)5 (MORAIN, 2007).  

27 Curvas definidas por equa√ß√µes c√∫bicas 

 
 
 
 
 
 
67 

8 APLICA√á√ïES 

O que outrora aparentava ter um fim em si mesmo, atualmente o estudo 

dos n√∫meros primos possui uma imensa import√¢ncia na forma de organiza√ß√£o do 

mundo  moderno,  motivo  pelo  qual  os  testes  de  primalidade  ganharam  not√°vel 

destaque ao longo dos √∫ltimos s√©culos.  

Al√©m  das  aplica√ß√µes  j√°  elencadas  no  bojo  deste  trabalho,  salientamos 

uma  daquelas  que  podemos  considerar  de  maior  proveito  na  atualidade:  a 

criptografia.  Antes  de  adentramos  no  assunto,  vamos  discorrer  sobre  alguns 

conceitos relevantes no ramo desta ci√™ncia, a come√ßar pelo conceito de criptografia 

que, conforme (COUTINHO, 2005), √© descrita como. 

Em  grego,  cryptos  significa  secreto,  oculto.  A  criptografia  estuda  os 
m√©todos  para  codificar  uma  mensagem  de  modo  que  s√≥  o  destinat√°rio 
leg√≠timo consiga interpret√°-la. √â a arte dos ‚Äòc√≥digos secretos‚Äô, que todos j√° 
praticamos quando crian√ßa. O mais simples destes c√≥digos consiste em 
substituir  uma  letra  pela  seguinte;  isto  √©  transladar  o  alfabeto  uma  casa 
para adiante. Um c√≥digo semelhante foi usado por C√©sar para comunicar-
se com as legi√µes em combate pela Europa (COUTINHO, 2005, p. 1). 

A conceitua√ß√£o e detalhamento supra nos serve de confirma√ß√£o para a 

mais  basilar  import√¢ncia  das  comunica√ß√µes  secretas:  a  confidencialidade.  Em 

diversos  tipos  de  eventos,  a  troca  de  mensagens  necessita  de  seguran√ßa  na 

transmiss√£o de seu conte√∫do, logo, desde tempos remotos, o transmissor e receptor 

buscam meios de proteger a troca de informa√ß√µes.  

Ao  se  debater  sobre  a  seguran√ßa  das  informa√ß√µes,  logo  se  suscita  o 

m√©todo  de  codifica√ß√£o  de  mensagens,  atrav√©s  do  qual  o  conte√∫do  destas  √© 

cuidadosamente dissimulado por um conjunto de caracteres ou s√≠mbolos e, assim, 

modificado em sua apar√™ncia, mas mantido em seu conte√∫do.  

Um  dos  m√©todos  mais  antigos  de  codifica√ß√£o  de  mensagens  √©  a 

substitui√ß√£o de cada caractere por outro, o qual pode ser entendido pelo interlocutor 

que saiba quais crit√©rios na escolha do conjunto de s√≠mbolos foram utilizados pelo 

comunicante.  Para  exemplificar:  se  algu√©m  codifica  uma  mensagem  escolhendo 

como novo caractere de cada letra o correspondente da ordem inversa do alfabeto, 

ent√£o,  se  a  mensagem  original  for  PRIMOS,  pela  tabela  seguinte,  a  palavra 

codificada ser√° KIRNLH. 

 
 
68 

Tabela 5 ‚Äì C√≥digos de ordem invertida do alfabeto 
ORDEM  CARACTERE ORIGINAL  CARACTERE SUBSTITUTO 

1¬∞ 
2¬∞ 
3¬∞ 
4¬∞ 
5¬∞ 
6¬∞ 
7¬∞ 
8¬∞ 
9¬∞ 
10¬∞ 
11¬∞ 
12¬∞ 
13¬∞ 
14¬∞ 
15¬∞ 
16¬∞ 
17¬∞ 
18¬∞ 
19¬∞ 
20¬∞ 
21¬∞ 
22¬∞ 
23¬∞ 
24¬∞ 
25¬∞ 
26¬∞ 

a 
b 
c 
d 
e 
f 
g 
h 
i 
j 
k 
l 
m 
n 
o 
p 
q 
r 
s 
t 
u 
v 
x 
y 
w 
z 

z 
w 
y 
x 
v 
u 
t 
s 
r 
q 
p 
o 
n 
m 
l 
k 
j 
i 
h 
g 
f 
e 
d 
c 
b 
a 

Fonte: Elaborado pelo autor 

Esse  m√©todo  de  substitui√ß√£o  de  caracteres  por  s√≠mbolos  previamente 

estabelecidos possui algumas fraquezas, como o fato de cada idioma possuir certa 

regularidade  na  forma√ß√£o  de  suas  palavras.  Para  exemplificar, citamos o  fato  de 

que a probabilidade de uso de uma vogal em determinada palavra √© maior que o 

uso de uma consoante, j√° que estas s√£o em n√∫mero maior que aquelas. H√° tamb√©m 

o fato de que letras como ùëö e ùëù s√£o bem mais frequentes em palavras da l√≠ngua 

portuguesa do que letras como ùëß e ùë¶. Estes e outros fatos correlacionados geram 

 
 
 
 
69 

crit√©rios de forma√ß√£o de palavras que revelam dicas de decodifica√ß√£o, facilitando a 

descoberta do conte√∫do da mensagem.  

√â  importante,  tamb√©m,  definir  o  significado  dos  termos  codificar  e 

decodificar,  que  significam,  respectivamente,  um  conjunto  de  a√ß√µes  necess√°rias 

para  encobrir  e  descobrir  uma  mensagem,  ambas  realizadas  por  usu√°rios 

autorizados. Neste mesmo sentido, vem √† tona o termo decifrar, que significa a a√ß√£o 

de desvendar o c√≥digo a fim de interpretar a mensagem.  

In√∫meros  c√≥digos  foram  utilizados  ao  longo  dos  anos,  alguns  de  alta 

complexidade,  entretanto,  com  ferramentas  adequadas,  capazes  de  serem 

quebrados  e  terem  suas  mensagens  reveladas.  Um  famoso  exemplo  √©  o  c√≥digo 

utilizado  pelas  for√ßas  alem√£es  na  segunda  Guerra  Mundial,  com  o  aux√≠lio  da 

m√°quina denominada enigma, a mais avan√ßada da √©poca, conforme mencionado 

por Sautoy (2007, p. 241): ‚Äúo mais avan√ßado m√©todo mec√¢nico de codifica√ß√£o era 

a m√°quina Enigma‚Äù. 

Tal ferramenta era t√£o avan√ßada para a √©poca que a fa√ßanha de quebrar 

seu c√≥digo foi realizada por instrumentos que executavam a√ß√µes que transcendiam 

a capacidade mental. Era a √©poca da explora√ß√£o da computa√ß√£o e nascia uma das 

mais importantes coopera√ß√µes da hist√≥ria: o conhecimento humano e a capacidade 

de processamento de computadores.  

A  partir  da  cria√ß√£o  e  r√°pido  desenvolvimento  dos  computadores 

eletr√¥nicos,  c√≥digos  antes  inacess√≠veis  √†  compreens√£o  humana,  tornaram-se 

obsoletos ao poder computacional destas m√°quinas. Desta forma, era necess√°rio a 

ado√ß√£o  de  novos  m√©todos  de  codifica√ß√£o  de  mensagens,  capazes  de  reduzir  ao 

m√°ximo a possibilidade de sua quebra, at√© mesmo pelos computadores. 

Foi nesse cen√°rio, aliado √† amplia√ß√£o do mercado financeiro realizado 

por interm√©dio da rede mundial de computadores, que surgiram ideias de prote√ß√£o 

de  mensagens  e  de  seguran√ßa  das  transa√ß√µes  comerciais  por  meios  digitais. 

Destacamos, aqui, os modernos c√≥digos de chave p√∫blica, detalhados da seguinte 

forma: 

 
 
70 

Esta  √©  uma  ideia  introduzida  em  1976  por  W  Diffie  e  M.E.  Hellman  da 
Universidade  da  Calif√≥rnia.  No  c√≥digo  usado  por  C√©sar,  se  voc√™  sabe 
codificar, ent√£o sabe  decodificar.  Em  um c√≥digo de  chave p√∫blica saber 
codificar  n√£o  implica  saber  decodificar!  Isto  parece  imposs√≠vel:  se  sei 
codificar,  para  decodificar  basta  desfazer  o  que  fiz.  [...]  ‚Äòdesfazer‚Äô  o 
processo  de  codifica√ß√£o  pode  n√£o  ser  t√£o  simples  quanto  parece 
(COUTINHO, 2005, p. 3). 

Criptografia de Chave P√∫blica pode ser definida, ent√£o, como sendo um 

sistema criptogr√°fico que usa uma chave p√∫blica e uma chave privada, das quais, 

a primeira √© de conhecimento amplo e a segunda de dom√≠nio apenas do usu√°rio.  

Nasce, portanto, o RSA, assim denominado por conta de seus criadores, 

os pesquisadores R. L. Rivest, A. Shamir e L, Adleman, que em 1978 criaram este 

m√©todo de criptografia de chave p√∫blica que se tornaria um dos mais importantes 

das √∫ltimas d√©cadas. 

O m√©todo RSA baseia em conhecimentos sobre primos, pois para sua 

implementa√ß√£o  s√£o  necess√°rios  dois  destes  n√∫meros.  Vejamos  o  processo  no 

diagrama a seguir, para ùê¥ e ùêµ primos. 

Quadro 1: Processo de codifica√ß√£o e decodifica√ß√£o de mensagem no m√©todo RSA 

Fonte: Elaborado pelo autor 

Podemos  verificar  que  uma  determinada  mensagem,  na  criptografia 

RSA,  √©  encriptada  pela  chave  p√∫blica  ùëÅ,  logo  de  f√°cil  acesso,  contudo,  para  ser 

decodificada,  s√£o  necess√°rias  as  chaves  privadas,  representadas  pelos  fatores 

primos ùê¥ e ùêµ de ùëÅ. Fatorar ùëÅ, quando este √© grande, √© uma tarefa excessivamente 

dif√≠cil pelos m√©todos conhecidos atualmente, sen√£o vejamos:  

          *                                                                                                 ùê¥ ùêµ ùëÅ=ùê¥√óùêµ ùê¥ ùêµ CHAVE P√öBLICA ùëÅ CHAVES PRIVADAS ùê¥ E ùêµ  
 
 
71 

Decifrar o RSA √© teoricamente muito simples: o obst√°culo √© de natureza 
tecnol√≥gica. Usando como chaves de codifica√ß√£o do RSA n√∫meros muito 
grandes (de 150 algarismos ou mais), fatorar ùëõ, para achar ùëù e ùëû, com os 
m√©todos  atuais  levaria  alguns  milhares  de  anos.  √â  disto  que  depende  a 
seguran√ßa do RSA; da inefici√™ncia dos m√©todos de fatora√ß√£o atualmente 
conhecidos (COUTINHO, 2005, p. 4).  

Ent√£o,  para  a  seguran√ßa  do  RSA,  ùëõ  deve  ser  bem  grande  e 

consequentemente ùëé e ùëè tamb√©m ser√£o. Neste processo, os fatores primos de ùëõ 

tamb√©m ser√£o de dif√≠cil verifica√ß√£o, conforme estudado no decurso deste trabalho. 

Extrai-se daqui a elevada import√¢ncia dos testes de primalidade, fundamentais na 

localiza√ß√£o de primos cada vez maiores e sua utiliza√ß√£o em m√©todos como o RSA.  

 
 
 
 
 
72 

9 CONCLUS√ÉO 

Ap√≥s a an√°lise dos testes de primalidade e consumadas as discuss√µes 

apresentadas no transcurso deste trabalho, pode-se inferir importantes resultados 

alcan√ßados  ap√≥s  aplica√ß√£o  dos  m√©todos  pr√©-selecionados  e  abordagens  das 

refer√™ncias empregadas. 

Um relevante aspecto acerca dos primos √© a possibilidade de encontrar 

alguns  destes  por  meio  de  f√≥rmulas.  Neste  sentido,  apresentamos  a  f√≥rmula 

proposta  por  Pierre  de  Fermat,  todavia  esta  se  mostrou  verdadeira  apenas  para 

alguns valores testados. Outra forma de gerar primos mostrada nesse trabalho foi 

a  proposta apresentada  pelo estudioso  Mersenne, na  forma  2ùëö ‚àí 1,  em que ùëö  √© 

primo,  a  qual  √©  capaz  de  gerar  primos  para  diversos  valores  de  ùëö.  Os  maiores 

primos conhecidos s√£o do tipo idealizado por Mersenne.  

Com  o  mesmo  objetivo,  por√©m  com  uma  diferente  abordagem, 

apresentamos a fun√ß√£o ùúã de Gauss, desenvolvida durante v√°rios anos at√© que se 

demonstrasse o Teorema dos N√∫meros Primos, que provou que ùúã(ùë•) tende a se 

aproximar de ùë•/ ùëôùëõ ùë• √† medida que o valor de ùë• aumenta. Al√©m desta, outra fun√ß√£o 

de import√¢ncia na atualidade, √© a Fun√ß√£o Zeta de Riemann, desenvolvida a partir 

da  Fun√ß√£o  Zeta  de  Euler,  que  mostramos  resultar  em  uma  not√°vel  conjectura 

nomeada Hip√≥tese de Riemann. Apesar de ainda n√£o provada, os resultados desta 

estruturam relevantes testes de primalidade apresentados nos √∫ltimos anos.  

Os resultados que exibimos sobre os n√∫meros primos serviram de base 

para  a  elabora√ß√£o  daquelas  que  podemos  considerar as  principais  de  formas  de 

localiz√°-los,  os  testes  de  primalidade.  Estes  algoritmos  utilizam  como  base  fatos 

resultantes de teoremas e propostas de estrutura de primos, para ent√£o identific√°-

los ap√≥s a realiza√ß√£o de uma s√©rie de etapas pr√©-definidas. 

Tratamos  do  estudo  dos  m√©todos  de  localiza√ß√£o  dos  primos  de  forma 

cronol√≥gica,  abordando  sua  forma  mais  elementar  at√©  as  mais  sofisticadas, 

dividindo-os  em  dois  grandes  grupos:  os  testes  pr√©-computacionais  e  os 

computacionais. Nessa linha, sa√≠mos das formas mais simpl√≥rias de buscar primos, 

 
 
73 

como  as  divis√µes  sucessivas,  at√©  os  testes  mais  complexos,  como  o  APR, 

demonstrando como se deu esse processo de evolu√ß√£o. 

Observou-se  que  as  etapas  hist√≥ricas  de  evolu√ß√£o  dos  testes  de 

primalidade foram alicer√ßadas em diversos fatores, dos quais um mereceu grande 

destaque:  o  progresso  da  tecnologia.  Apresentamos  a  evolu√ß√£o  das  m√°quinas  e 

sua conex√£o com os testes de primalidade. A n√≠vel de exemplifica√ß√£o, destacamos 

a  calculadora  mec√¢nica  de  Leibniz  e  a  m√°quina  anal√≠tica  de  Babbage,  que 

evolu√≠ram  at√©  culminarem  nos  computadores  modernos,  cujas  ideias  iniciais  se 

fundamentaram nos trabalhos de Turing.  

No  campo  computacional,  os  importantes  aspectos  que  detalhamos 

sobre  os  testes  foram  o  custo  de  um  algoritmo,  com  destaque  para  o  tempo 

polinomial  e  o  tempo  exponencial,  al√©m  de  abord√°-los  mediante  sua  divis√£o  em 

testes determin√≠sticos e n√£o determin√≠sticos 

Os  testes  discorridos  nesse  estudo  foram  iniciados  pelos  cl√°ssicos, 

inclu√≠dos  na  era  pr√©-computacional.  O  primeiro  foi  o  de  Divis√£o  por  Tentativa, 

seguido  pelo  Crivo  de  Erat√≥stenes,  o  Teste  de  Fermat,  o  teste  probabil√≠stico  de 

Proth, o Teste de Pepin, o Teste de Lucas-Lehmer (utilizado frequentemente para 

testar n√∫meros de Mersenne Mp) e o crivo de Sundaram. 

Em  cumprimento  ao  acompanhamento  do  processo  de  evolu√ß√£o  dos 

testes  de  primalidade,  analisamos  tamb√©m  os  testes  da  era  computacional, 

iniciando  pelo  estudo  do  algoritmo  de  Solovay-Strassen  e  seguindo  pelo  teste 

probabil√≠stico de Miller-Rabin, acompanhado pela apresenta√ß√£o do inovador teste 

AKS, de Manindra Agrawal, Neeraj Kayal e Nitin Saxena, divulgado em 2006.  

Um pensamento diferente que relacionamos √† procura de primos √© o uso 

de  mais  de  um  teste  de  primalidade  para  um  mesmo  n√∫mero.  √â  a  forma  de 

abordagem do Teste de Baillie-PSW. Outros testes que mostramos consistem em 

temas matem√°ticos avan√ßados, como o APR. Por fim, tamb√©m foi abordado o teste 

de algoritmo ECPP (Eliptic Curve Primality Proving), com uso de equa√ß√µes c√∫bicas. 

 
 
74 

Apresentamos  um  m√©todo  criptogr√°fico  que  revolucionou  as  rela√ß√µes 

financeiras do mundo contempor√¢neo: a criptografia RSA. Esta ferramenta surgiu a 

partir de importantes fatos sobre os primos, como o da sua dif√≠cil localiza√ß√£o para 

valores  elevados e  consequente  dificuldade de  fatora√ß√£o  de  grandes  n√∫meros, o 

que torna os processos financeiros mais seguros. 

Os  testes  apresentados  e  discorridos  neste  estudo  mostraram  a  linha 

evolutiva dos conhecimentos acerca dos primos e os importantes passos dados ao 

longo dos anos para um conhecimento mais aprofundado destes n√∫meros. Pode-

se verificar as diversas formas de abordagem para se localizar primos, dentre as 

quais destacamos: a for√ßa bruta de divis√µes sucessivas; o uso de crivos (tabelas de 

n√∫meros com exclus√£o de algarismos compostos) para filtrar conjuntos de n√∫meros 

naturais e localizar primos; a utiliza√ß√£o de teoremas sobre propriedades dos primos 

e, por fim, a utiliza√ß√£o de conceitos avan√ßados em matem√°tica. 

Com  resultados  amplos  ou  restritos,  seguros  ou  prov√°veis,  r√°pidos  ou 

demorados, os testes aqui apresentados tiveram como fundamentos descobertas 

sobre  os  primos  reveladas  ao  longo  dos  anos  e  processos  engenhosos  de 

localiza√ß√£o destes n√∫meros, o que nos leva a garantir que essa busca por formas 

cada vez mais r√°pidas e confi√°veis permanecer√° por anos a frente, tornando este 

trabalho  um  alicerce  para  pesquisa  futuras,  apoiadas  nas  descobertas  a  serem 

reveladas.  

 
 
 
 
 
 
 
 
 
 
REFER√äNCIAS 

75 

AGRAWAL, M. Primality tests based on Fermat‚Äôs little theorem. In: CHAUDHURI , 
S., et al. Distributed computing and networking: 8th International Conference, 
ICDCN 2006, Guwahati, India, December 27-30, 2006, proceedings. [S.l.]: 
Springer Science & Business Media, v. 4308, 2006. ISBN 978-3-540-68139-7. 

AGRAWAL, M.; KAYAL, N.; SAXENA, N. PRIMES is in P. Annals of 
Mathematics, v. 160, p. 781-793, Setembro 2004. Disponivel em: 
<https://annals.math.princeton.edu/wp-content/uploads/annals-v160-n2-p12.pdf>. 
Acesso em: 05 Junho 2021. 

√ÅVILA, G. A s√©rie harm√¥nica e a f√≥rmula de Euler-Maclaurin. Matem√°tica 
Universit√°ria, Rio de Janeiro, n. 19, p. 55-63, Dezembro 1995. Disponivel em: 
<https://rmu.sbm.org.br/wp-content/uploads/sites/27/2018/03/n19_Artigo05.pdf>. 
Acesso em: 05 Janeiro 2021. 

BOYER, C.. Hist√≥ria da Matem√°tica. Tradu√ß√£o de Elza F. Gomide. S√£o Paulo: 
Edgard Blucher, Ed. da Universidade de S√£o Paulo, 1974. 

BROOKSHEAR, J. G. Ci√™ncia da Computa√ß√£o [recurso eletr√¥nico]: uma vis√£o 
abrangente. Tradu√ß√£o de Cheng Mei Lee. 7. ed. Porto Alegre: Bookman, 2008. 
ISBN 978-85-7780-314-9. Dados Eletr√¥nicos. 

CALDWELL, C. K. Probable Prime. The Prime Pages, 2021. Disponivel em: 
<https://primes.utm.edu/glossary/xpage/PRP.html>. Acesso em: 2 maio 2021. 

CALDWELL, C. K. The Largest Known prime by Year: A Brief History. The Prime 
Pages, 2021. Disponivel em: <https://primes.utm.edu/notes/by_year.html>. Acesso 
em: 19 Janeiro 2021. 

COLQUITT, W. N.; WELSH JR, L. A NEW MERSENNE PRIME. Mathematics of 
Computation, 56, n. 194, Abril 1991. 867-870. Disponivel em: 
<https://www.ams.org/journals/mcom/1991-56-194/S0025-5718-1991-1068823-
9/S0025-5718-1991-1068823-9.pdf>. Acesso em: 15 Maio 2021. 

CORMEM, T. H. et al. Algoritmos: teoria e pr√°tica. Tradu√ß√£o de Vanderberg D. 
de Souza. Rio de Janeiro: Elsevier, 2002. ISBN 85-352-0926-3. 

COSTA, R. George Boole. Brasil Escola, 2007. Disponivel em: 
<https://brasilescola.uol.com.br/biografia/george-boole.htm>. Acesso em: 06 abril 
2021. 

COUTINHO, S. C. Primalidade em Tempo Polinomial: uma introdu√ß√£o ao 
algoritmo AKS. Rio de Janeiro: [s.n.], 2004. Disponivel em: 
<https://dcc.ufrj.br/~collier/Books/AKS1.pdf>. Acesso em: 10 Fevereiro 2021. 

 
 
 
 
 
 
 
 
 
 
 
 
 
76 

COUTINHO, S. C. N√πmeros Inteiros e Criptografia RSA. 2¬™. ed. RIo de Janeiro: 
IMPA, 2005. ISBN 85-244-0124-9. 

D‚ÄôAMBROSIO, U. EULER, UM MATEM√ÅTICO MULTIFACETADO. Revista 
Brasileira de Hist√≥ria da Matem√°tica, [S. l.], Vol. 9, n. 17, p. 13-31, 2020. 
Disponivel em: <https://www.rbhm.org.br/index.php/RBHM/article/view/167. >. 
Acesso em: 09 Janeiro 2021. 

DELUMEAU, J. A Civiliza√ß√£o do Renascimento. 4. ed. Lisboa: Editorial 
Estampa, v. I, 1994. ISBN 972-33-1000-7. 

FEOFILOFF,. Minicurso de An√°lise de Algoritmos. S√£o Paulo: [s.n.], 2019. 
Disponivel em: <https://www.ime.usp.br/~pf/livrinho-AA/>. Acesso em: 05 Abril 
2021. 

FEOFILOFF,. Compara√ß√£o assint√≥tica de fun√ß√µes. IME, 2021. Disponivel em: 
<https://www.ime.usp.br/~pf/analise_de_algoritmos/aulas/Oh.html>. Acesso em: 
05 abril 2021. 

FONSECA, J. J. S. D. Metodologia da Pesquisa Cient√≠fica. Fortaleza: UEC, 
2002. Apostila. 

GEEKSFORGEEKS. Primality Test | Set 4 (Solovay-Strassen). GeeksforGeeks, 
19 Maio 2021. Disponivel em: <https://www.geeksforgeeks.org/primality-test-set-4-
solovay-strassen/>. Acesso em: 01 Junho 2021. 

GILBREATH, J. A High-Level Language Benchmark. BYTE Magazine Volume 06 
Number 09 - Artificial Intelligence, v. 6, Setembro 1981. Disponivel em: 
<https://archive.org/details/byte-magazine-1981-
09/page/n181/mode/2up?q=criteria+were>. Acesso em: 02 Abril 2021. 

HEFEZ, A. Elementos de Aritm√©tica. Rio de Janeiro: SBM, 2005. ISBN 85-
85818-25-5. 

HEFEZ, A. Aritm√©tica. 1. ed. Rio de Janeiro: SBM, 2014. ISBN 978-85-85818-92-
0. (Cole√ß√£o PROFMAT;08). 

HONSBERGER , ROSS. Sundaram's Sieve. Ingenuity in Mathematics, New 
York, v. 23, 1970. ISSN 0394709233. Disponivel em: 
<https://archive.org/details/ingenuityinmathe0000hons/page/76/mode/2up>. 
Acesso em: 15 maio 2021. 

IMPA. Instituto de Matem√°tica Pura e Aplicada, 15 Janeiro 2019. Disponivel em: 
<https://impa.br/noticias/descoberto-numero-primo-com-quase-25-milhoes-de-
digitos/>. Acesso em: 02 Janeiro 2021. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
77 

J√öNIOR, J. G. D. S.; NETO, L. P. V. Progra√ß√£o Concorrente e Paralela: 
algoritmo paralelo para o Crivo de Erat√≥stenes. [S.l.]: [s.n.], 2009. Disponivel em: 
<http://www.inf.puc-rio.br/~noemi/pcp-13/primos.pdf>. Acesso em: 09 abril 2021. 

LIMA, E. L. N√∫meros e Fun√ß√µes Reais. 1¬™. ed. RIo de Janeiro: SBM, 2013. ISBN 
978-85-85818-81-4. 

MACHADO, F. B.; MAIA, L. P. Arquitetura de sistemas operacionais. 5. ed. Rio 
de Janeiro: LTC, 2014. ISBN 978-85-216-2287-1. 

MARTINEZ, F. E. B. et al. Teoria dos N√∫meros: um passeio com primos e outros 
n√∫meros familiares pelo mundo inteiro. [S.l.]: [s.n.], 2013. Disponivel em: 
<https://edisciplinas.usp.br/pluginfile.php/4576649/mod_resource/content/1/Um%2
0passeio%20pelos%20primos%20e%20outros%20n%C3%BAmeros%20familiares
.pdf>. Acesso em: 02 Maio 2021. 

MORAIN, F. Implementing the Asymptotically Fast Version of the Elliptic Curve 
Primality Proving Algorithm. Mathematics of Computation, Providence - Rhode 
Island - USA, v. v. 76, n. 257, p. 493-505, Janeiro 2007. Disponivel em: 
<https://www.ams.org/journals/mcom/2007-76-257/S0025-5718-06-01890-
4/S0025-5718-06-01890-4.pdf>. Acesso em: 15 Junho 2021. 

MOREIRA, C. G. T. D. A.; SALDANHA, N. C. Crit√©rios de Primalidade, Rio de 
Janeiro, 19 Junho 2012. Disponivel em: <http://klein.sbm.org.br/wp-
content/uploads/sites/17/2016/02/criterios-de-primalidade.pdf>. Acesso em: 02 
Junho 2021. 

MOREIRA, C. G.; MARTIN√âZ, F. E. B. Primos g√™meos, primos de Sophie Germain 
e o Teorema de Brun. Matem√°tica Universit√°ria, Rio de Janeiro, n. 48/49, p. 93-
101, Junho/Dezembro 2010. Disponivel em: <https://rmu.sbm.org.br/wp-
content/uploads/sites/27/2018/03/n48_n49_Artigo06.pdf>. Acesso em: 06 Janeiro 
2021. 

O'CONNOR, J.; ROBERTSON, E. Fran√ßois √âdouard Anatole Lucas. MacTutor 
History of Mathematics Archive, Dezembro 1996. Disponivel em: 
<https://mathshistory.st-andrews.ac.uk/Biographies/Lucas/>. Acesso em: 18 
Janeiro 2021. 

O'CONNOR, J.; ROBERTSON, E. Georg Friedrich Bernhard Riemann. MacTutor 
History of Mathematics Archive, Setembro 1998. Disponivel em: 
<https://mathshistory.st-andrews.ac.uk/Biographies/Riemann/>. Acesso em: 15 
Janeiro 2021. 

O'CONNOR, J.; ROBERTSON, E. Eratosthenes of Cyrene. MacTutor History of 
Mathematics Archive, Janeiro 1999. Disponivel em: <https://mathshistory.st-
andrews.ac.uk/Biographies/Eratosthenes/>. Acesso em: 16 Janeiro 2021. 

 
 
 
 
 
 
 
 
 
 
 
78 

O'CONNOR, J.; ROBERTSON, E. Charles Jean Gustave Nicolas Baron de la 
Vall√©e Poussin. MacTutor History of Mathematics Archive, Mar√ßo 2001. 
Disponivel em: <https://mathshistory.st-
andrews.ac.uk/Biographies/Vallee_Poussin/>. Acesso em: 16 Janeiro 2021. 

O'CONNOR, J.; ROBERTSON, E. Derrick Henry Lehmer. MacTutor History of 
Mathematics Archive, Novembro 2002. Disponivel em: <https://mathshistory.st-
andrews.ac.uk/Biographies/Lehmer_Derrick/>. Acesso em: 18 Janeiro 2021. 

O'CONNOR, J.; ROBERTSON, E. Jacques Salomon Hadamard. MacTutor 
History of Mathematics Archive, Outubro 2003. Disponivel em: 
<https://mathshistory.st-andrews.ac.uk/Biographies/Hadamard/>. Acesso em: 2015 
Janeiro 2021. 

O'CONNOR, J.; ROBERTSON, E. Robert Daniel Carmichael. MacTutor History 
of Mathematics Archive, Fevereiro 2010. Disponivel em: <https://mathshistory.st-
andrews.ac.uk/Biographies/Carmichael/>. Acesso em: 30 Abril 2021. 

RIBENBOIM, P. N√∫meros Primos: velhos mist√©rios e novos recordes. 1. ed. Rio 
de Janeiro: IMPA, 2014. ISBN 978-85-244-0334-7. (Cole√ß√£o Matem√°tica 
Universit√°ria). 

SANTOS, J. P. D. O. Introdu√ß√£o √† Teoria dos N√∫meros. 3. ed. Rio de Janeiro: 
IMPA, 2015. ISBN 978-85-244-0142-8. 

SAUTOY, M. D. A M√∫sica dos N√∫meros Primos: a hist√≥ria de um problema n√£o 
resolvido na matem√°tica. Tradu√ß√£o de Diego Alfaro. Rio de Janeiro: Zahar, 2007. 
ISBN 978-85-378-007-9. 

SPENTHOF, R.; SOUZA, J. D. Primos: da aleatoriedade ao padr√£o. Revista 
eletr√¥nica da Sociedade Brasileira de Matem√°tica, v.1, n.1. Rio de Janeiro, 
2013. 12-31. Disponivel em: <http://pmo.sbm.org.br/wp-
content/uploads/sites/16/dlm_uploads/2019/03/art2_vol1_2013_SBM_PMO-1.pdf>. 
Acesso em: 27 Dezembro 2020. 

STEWART, I. Em Busca do Infinito: uma hist√≥ria da matem√°tica dos primeiros 
n√∫meros √† teoria do caos. Tradu√ß√£o de George Schlesinger. Edi√ß√£o digital: 
fevereiro 2014. ed. Rio de Janeiro: Zahar, 2014. ISBN 978-85-378-1193-1. 
Disponivel em: <https://lelivros.love/book/baixar-livro-em-busca-do-infinito-ian-
stewart-em-pdf-epub-e-mobi-ou-ler-online/>. Acesso em: 22 Dezembro 2020. 

STROHMAIER, E. et al. TOP500, 2020. Disponivel em: 
<https://top500.org/lists/top500/2020/11/>. Acesso em: 30 mar√ßo 2021. 

 
 
 
 
 
 
 
 
 
 
 
 
 
79 

WAZLAWICK, R. S. HIst√≥ria da Computa√ß√£o. 1. ed. Rio de Janeiro: Elsevier, 
2017. ISBN 978-85-352-8545-1. 

WEISSTEIN, E. W. Monte Carlo Method. MathWorld--A Wolfram Web Resource, 
18 Maio 2021. Disponivel em: 
<https://mathworld.wolfram.com/MonteCarloMethod.html>. Acesso em: 30 maio 
2021. 

WEISSTEIN, W. Baillie-PSW Primality Test. MathWorld, 23 Julho 2021. 
Disponivel em: <https://mathworld.wolfram.com/Baillie-PSWPrimalityTest.html>. 
Acesso em: 25 Julho 2021. 

ZIVIANI, N. Projeto de algoritmos: com implementa√ß√µes em Java e C++. 1. ed. 
S√£o Paulo: Cengage Learning, 2011. ISBN 978-85-221-0821-3. 

 
 
 
 
 
 
 
 
 
80 

AP√äNDICE A ‚Äì M√ÅXIMO DIVISOR COMUM E DEMONSTRA√á√ïES 

A.1 M√°ximo Divisor Comum. Dados a e b inteiros, com ùëé ‚â† 0 ùëúùë¢ ùëè ‚â† 0, define-se 

como m√°ximo divisor comum entre ùëé e ùëè, representado por (ùëé, ùëè), o n√∫mero inteiro 

ùëë, tal que ùëë √© o maior inteiro que divide ùëé e ùëè.  

A.2 Teorema. Se ùëë = (ùëé, ùëè), ent√£o existem ùëö, ùëõ ‚àà ‚Ñ§, tais que ùëë = ùëöùëé + ùëõùëè. 

Demonstra√ß√£o. Dados ùëé e ùëè inteiros e a combina√ß√£o linear ùëöùëé + ùëõùëè, com ùëö, ùëõ ‚àà ‚Ñ§. 

Seja,  agora,  ùë° = ùëö‚Ä≤ùëé + ùëõ‚Ä≤ùëè  tal  que  ùë°  √©  o  menor  inteiro  positivo  resultante  dessa 

combina√ß√£o  linear.  Devemos  provar  que  ùë°  divide  ùëé  e  ùë°  divide  ùëè.  Supondo,  por 

absurdo,  que  ùë° ‚à§ ùëé,  ent√£o,  pela  divis√£o  euclidiana,  podemos  escrever  ùëé = ùëûùë° + ùëü, 

como  0 < ùëü < ùë°.  Dessa  maneira,  ùëü = ùëé ‚àí ùëûùë° = ùëé ‚àí ùëû(ùëö‚Ä≤ùëé + ùëõ‚Ä≤ùëè) = ùëé ‚àí ùëûùëö‚Ä≤ùëé ‚àí

ùëûùëõ‚Ä≤ùëè = ùëé(1 ‚àí ùëûùëö‚Ä≤) + ùëè(‚àíùëûùëõ‚Ä≤). Da√≠, conclui-se que ùëü √© uma combina√ß√£o linear de ùëé 

e ùëè, pois 1 ‚àí ùëû‚Äôùëö e ‚àíùëûùëõ‚Ä≤ s√£o inteiros, mas 0 < ùëü < ùë° e ùë° √© o menor inteiro positivo 

resultante  da  combina√ß√£o  linear  ùëöùëé + ùëõùëè,  portanto  √©  uma  contradi√ß√£o,  provando 

que ùë° ‚à£ ùëé. Prova-se que ùë° ‚à£ ùëè de forma an√°loga.  

Agora, como ùëë = (ùëé, ùëè), ent√£o existem ùëê‚Ä≤ e ùëê" inteiros, tais que ùëé = ùëê‚Ä≤ùëë e 

ùëè = ùëê"ùëë, logo ùë° = ùëö‚Ä≤ùëé + ùëõ‚Ä≤ùëè = ùëö‚Ä≤ùëê‚Ä≤ùëë + ùëõ‚Ä≤ùëê"ùëë = ùëë(ùëö‚Ä≤ùëê‚Ä≤ + ùëõ‚Ä≤ùëê"), portanto ùëë ‚à£ ùë°. Como 

ùëë > 0 ùëí ùë° > 0, ent√£o ùëë ‚â§ ùë°, mas ùëë n√£o pode ser menor do que ùë°, pois ùëë √© o m√°ximo 

divisor comum entre ùëé ùëí ùëè. Logo ùë° = ùëë e conclui-se que ùëë = ùëö‚Äôùëé + ùëõ‚Äôùëè. 

A.2.1 Corol√°rio. Para todo ùë° inteiro n√£o nulo, temos (ùë°ùëé, ùë°ùëè) = ùë°(ùëé, ùëè) 

Demonstra√ß√£o. Pelo teorema anterior, (ùë°ùëé, ùë°ùëè) = ùëöùë°ùëé + ùëõùë°ùëè, ùëö, ùëõ ‚àà ùï´. Logo temos 

(ùë°ùëé, ùë°ùëè) = ùëöùë°ùëé + ùëõùë°ùëè = ùë°(ùëöùëé + ùëõùëè) = ùë°(ùëé, ùëè) 

A.2.2 Corol√°rio. Se ùëê > 0, ùëê ‚à£ ùëé e ùëê ‚à£ ùëè, ent√£o 

(

ùëé
ùëê

,

ùëè
ùëê

) =

1
ùëê

(ùëé, ùëè) 

Demonstra√ß√£o. Como ùëê ‚à£ ùëé, ent√£o   ùëé
ùëê

‚àà ùï´ e como ùëê ‚à£ ùëè, ent√£o  ùëè
ùëê

‚àà ‚Ñ§, logo ùëé = ùëêùëò‚Äô e 

ùëè = ùëêùëò‚Äù, para ùëò‚Ä≤, ùëò" inteiros, assim, para ùëö, ùëõ ‚àà ùï´, temos 

 
 
ùëé
(
ùëê

,

ùëè
ùëê

) = (

ùëêùëò‚Ä≤
ùëê

,

ùëêùëò"
ùëê

) = (ùëò‚Ä≤, ùëò") = ùëöùëò‚Ä≤ + ùëõùëò" =

ùëöùëêùëò‚Ä≤
ùëê

+

ùëõùëêùëò"
ùëê

=

ùëöùëé
ùëê

+

ùëõùëè
ùëê

=

1
ùëê

(ùëöùëé + ùëõùëè)

81 

=

1
ùëê

(ùëé, ùëè) 

A.2.3 Corol√°rio. Se ùëë = (ùëé, ùëè), para ùëé e ùëè inteiros, e ùëé ‚â† 0 ou ùëè ‚â† 0, temos 

Demonstra√ß√£o. 

ùëé
(
ùëë

,

ùëè
ùëë

) = 1 

ùëé
(
ùëë

,

ùëè
ùëë

) = (

ùëé
(ùëé, ùëè)

,

ùëè
(ùëé, ùëè)

) 

Como (ùëé, ùëè) divide ùëé e divide ùëè, ent√£o, pelo corol√°rio anterior,  

ùëé
(
(ùëé, ùëè)

,

ùëè
(ùëé, ùëè)

) =

1
(ùëé, ùëè)

(ùëé, ùëè) = 1 

A.3 Proposi√ß√£o. Dados ùëé, ùëè e ùëê inteiros positivos tais que ùëé ‚à£ ùëèùëê e (ùëé, ùëè) = 1, ent√£o 

ùëé ‚à£ ùëê. 

Demonstra√ß√£o. Como (ùëé, ùëè) = 1, pelo Teorema A.2, existem ùëö e ùëõ inteiros tais que 

ùëéùë• + ùëèùë¶ = 1. Multiplicando ambos os membros por ùëê, temos ùëéùë•ùëê + ùëèùë¶ùëê = ùëê. Como 

ùëé ‚à£ ùëéùë•ùëê e ùëé ‚à£ ùëèùë¶ùëê, ent√£o ùëé ‚à£ ùëê. 

A.4 Proposi√ß√£o. Se ùëù √© um n√∫mero primo e ùëù ‚à£ ùëéùëè ent√£o ùëù ‚à£ ùëé ou ùëù ‚à£ ùëè. 

Demonstra√ß√£o.  Se  ùëù ‚à£ ùëé,  est√°  provada  a  proposi√ß√£o.  Se  ùëù ‚à§ ùëé ,  ent√£o,  como  ùëù  √© 

primo, ent√£o (ùëé, ùëù) = 1, logo, pela Proposi√ß√£o A.3, ùëù ‚à£ ùëè. 

 
 
 
AP√äNDICE B ‚Äì N√öMEROS PRIMOS E DEMONSTRA√á√ïES 

82 

B.1 Lema. Dados os n√∫meros (ùëù

ùëò), com 0 < ùëò < ùëù. Se ùëù √© primo, ent√£o (ùëù

ùëò) √© divis√≠vel 

por ùëù. 

Demonstra√ß√£o. Para ùëò = 1, temos  

(

ùëù
1

) = ùëù 

Logo, divis√≠vel por ùëù. Vamos verificar, agora, para 1 < ùëò < ùëù. Como ùëò! =

ùëò(ùëò ‚àí 1)(ùëò ‚àí 2) ‚àô ‚Ä¶ ‚àô 2 ‚àô 1, ent√£o ùëò! divide ùëù(ùëù ‚àí 1) ‚àô ‚Ä¶ ‚àô (ùëù ‚àí ùëò + 1). J√° que ùëò! e ùëù s√£o 

primos entre si, ent√£o (ùëò!, ùëù) = 1, logo ùëò! divide (ùëù ‚àí 1) ‚àô ‚Ä¶ ‚àô (ùëù ‚àí ùëò + 1). Sabendo-

se que  

(

ùëù
ùëò

) = ùëù

(ùëù ‚àí 1) ‚àô ‚Ä¶ ‚àô (ùëù ‚àí ùëò + 1)
ùëò!

Ent√£o ùëù divide (ùëù

ùëò), concluindo, assim, a demonstra√ß√£o.  

 
 
 
 
 
83 

ANEXO C ‚Äì CONGRU√äNCIAS E DEMONSTRA√á√ïES 

C.1 Proposi√ß√£o. ùëé ‚â° ùëé mod ùëö, para ùëé ‚àà ‚Ñ§, ùëö ‚àà ‚Ñï 

Demonstra√ß√£o. Decorre imediatamente da defini√ß√£o de congru√™ncia 

C.2 Proposi√ß√£o. Se ùëé ‚â° ùëè mod ùëö, ent√£o ùëè ‚â° ùëé mod ùëö 

Demonstra√ß√£o. Decorre imediatamente da defini√ß√£o de congru√™ncia 

C.3 Proposi√ß√£o. Se ùëé ‚â° ùëè mod ùëö e ùëè ‚â° ùëê mod ùëö, ent√£o ùëé ‚â° ùëê mod ùëö 

Demonstra√ß√£o. Decorre imediatamente da defini√ß√£o de congru√™ncia 

C.4 Proposi√ß√£o. Dados ùëé, ùëè e ùëö inteiros, com ùëö > 1, ent√£o  

ùëé ‚â° ùëè mod ùëö ‚ü∫ ùëö ‚à£ ùëè ‚àí ùëé 

Demonstra√ß√£o. Se ùëé ‚â° ùëè mod ùëö, ent√£o o resto da divis√£o de ùëé por ùëö √© igual ao resto 

da divis√£o de ùëè por ùëö, assim, para ùëû1, ùëü1, ùëû2 e ùëü2 inteiros, temos 

ùëé = ùëû1ùëö + ùëü1 ‚üπ ùëü1 = ùëé ‚àí ùëû1ùëö 

ùëè = ùëû2ùëö + ùëü2 ‚üπ ùëü2 = ùëè ‚àí ùëû2ùëö  

Com 0 ‚â§ ùëü1 < ùëö e 0 ‚â§ ùëü2 < ùëö, logo  

ùëü1 = ùëü2 ‚üπ ùëé ‚àí ùëû1ùëö = ùëè ‚àí ùëû2ùëö ‚üπ ùëé ‚àí ùëè = ùëû1ùëö ‚àí ùëû2ùëö ‚üπ ùëé ‚àí ùëè = ùëö(ùëû1 ‚àí ùëû2)

= ùëè ‚àí ùëé = ùëö(ùëû2 ‚àí ùëû1) 

Portanto,  

ùëö ‚à£ ùëè ‚àí ùëé 

Reciprocamente,  se ùëö divide ùëè ‚àí ùëé, ent√£o existe ùëê ‚àà ‚Ñ§, tal que ùëè ‚àí ùëé =

ùëêùëö. Fazendo ùëê = ùëû2 ‚àí ùëû1, com ùëû1 e ùëû2 inteiros, temos ùëè ‚àí ùëé = (ùëû2 ‚àí ùëû1)ùëö, ent√£o 

ùëè ‚àí ùëé = (ùëû2 ‚àí ùëû1)ùëö ‚üπ ùëè ‚àí ùëé = ùëöùëû2 ‚àí ùëöùëû1 ‚üπ ùëè ‚àí ùëöùëû2 = ùëé ‚àí ùëöùëû1 

Como ùëè ‚àí ùëöùëû2 √© o resto da divis√£o de ùëè por ùëö e ùëé ‚àí ùëöùëû1 √© o resto da 

divis√£o de ùëé por ùëö, e s√£o iguais, ent√£o, pela defini√ß√£o de congru√™ncia, temos 

ùëé ‚â° ùëè mod ùëö 

Assim, conclui-se que  

 
 
84 

ùëé ‚â° ùëè mod ùëö ‚ü∫ ùëö ‚à£ ùëè ‚àí ùëé 

C.5 Proposi√ß√£o. ùëé ‚â° ùëè mod ùëö e ùëê ‚â° ùëë mod ùëö ‚üπ ùëé + ùëê ‚â° ùëè + ùëë mod ùëö 

Para ùëé, ùëè, ùëê, ùëë, ùëö inteiros e ùëö > 1 

Demonstra√ß√£o. Pela proposi√ß√£o anterior, se ùëé ‚â° ùëè mod ùëö, ent√£o ùëö ‚à£ ùëè ‚àí ùëé e se ùëê ‚â°

ùëë mod ùëö, ent√£o ùëö ‚à£ ùëë ‚àí ùëê. Agora, se ùëö ‚à£ ùëè ‚àí ùëé, ent√£o existe ùë• ‚àà ‚Ñ§, tal que  

ùëè ‚àí ùëé = ùë•ùëö 

Anologamente, se ùëö ‚à£ ùëë ‚àí ùëê, ent√£o existe ùë¶ ‚àà ‚Ñ§, tal que  

ùëë ‚àí ùëê = ùë¶ùëö 

Somando-se (I) e (II), temos 

(ùëè ‚àí ùëé) + (ùëë ‚àí ùëê) = ùë•ùëö + ùë¶ùëö = ùëö(ùë• + ùë¶) ‚üπ 

(ùëè + ùëë) ‚àí (ùëé + ùëê) = ùëö(ùë• + ùë¶) 

(I) 

(II) 

Portanto, ùëö divide (ùëè + ùëë) ‚àí (ùëé + ùëê) e, pela proposi√ß√£o anterior, conclui-

se que 

ùëé + ùëê ‚â° ùëè + ùëë mod ùëö 

C.6 Proposi√ß√£o. ùëé ‚â° ùëè mod ùëö ‚ü∫ ùëé + ùëê ‚â° ùëè + ùëê mod ùëö, para ùëé, ùëè, ùëê, ùëö inteiros e ùëö >

1 

Demonstra√ß√£o.  Se  ùëé ‚â° ùëè mod ùëö  e,  pela  Proposi√ß√£o  1,  ùëê ‚â° ùëê mod ùëö,  temos,  pela 

Proposi√ß√£o 5, o seguinte 

ùëé + ùëê ‚â° ùëè + ùëê mod ùëö 

Agora, se ùëé + ùëê ‚â° ùëè + ùëê mod ùëö, temos 

ùëé + ùëê ‚â° ùëè + ùëê mod ùëö ‚üπ ùëö ‚à£ (ùëè + ùëê) ‚àí (ùëé + ùëê) ‚üπ  ùëö ‚à£ ùëè ‚àí ùëé ‚üπ  ùëé ‚â° ùëè mod ùëö 

Portanto,  

ùëé ‚â° ùëè mod ùëö ‚ü∫ ùëé + ùëê ‚â° ùëè + ùëê mod ùëö 

C.7 Proposi√ß√£o. ùëé ‚â° ùëè mod ùëö e ùëê ‚â° ùëë mod ùëö ‚üπ ùëéùëê ‚â° ùëèùëë mod ùëö 

 
 
 
 
Para ùëé, ùëè, ùëê, ùëë, ùëö inteiros e ùëö > 1 

Demonstra√ß√£o.  Como  ùëé ‚â° ùëè mod ùëö  e  ùëê ‚â° ùëë mod ùëö,  ent√£o  ùëö ‚à£ ùëè ‚àí ùëé  e  ùëö ‚à£ ùëë ‚àí ùëê, 

respectivamente. Dessa forma, para ùë• e ùë¶ inteiros, temos  

85 

ùëè ‚àí ùëé = ùë•ùëö 

ùëë ‚àí ùëê = ùë¶ùëö 

(I) 

(II) 

Agora, multiplicando (I) e (II) por ùëë e ùëé, respectivamente, temos 

ùëèùëë ‚àí ùëéùëë = ùëëùë•ùëö 

ùëéùëë ‚àí ùëéùëê = ùëéùë¶ùëö 

(III) 

(IV) 

Somando-se (III) e (IV), obtemos 

ùëèùëë ‚àí ùëéùëê = ùëëùë•ùëö + ùëéùë¶ùëö = ùëö(ùëëùë• + ùëéùë¶) 

Logo, ùëö ‚à£ ùëèùëë ‚àí ùëéùëê, e, portanto, ùëéùëê ‚â° ùëèùëë mod ùëö. 

Uma consequ√™ncia direta da Prosi√ß√£o 6 √© o seguinte corol√°rio 

C.7.1 Corol√°rio. Dados ùëõ natural e ùëé, ùëè inteiros, temos 

ùëé ‚â° ùëè mod ùëö ‚üπ ùëéùëõ ‚â° ùëèùëõ mod ùëö 

C.8 Proposi√ß√£o 

ùëéùëê ‚â° ùëèùëê mod ùëö ‚ü∫ ùëé ‚â° ùëè ùëöùëúùëë 

ùëö
(ùëê, ùëö)

Para ùëé, ùëè, ùëê inteiros e ùëö inteiro maior do que 1. 

Demonstra√ß√£o.  Seja  ùëéùëê ‚â° ùëèùëê mod ùëö,  com  ùëé, ùëè, ùëê ‚àà ‚Ñ§  e  ùëö ‚àà ‚Ñ§, ùëö > 1,  ent√£o,  pela 

Proposi√ß√£o C.4,  

ùëéùëê ‚â° ùëèùëê mod ùëö ‚ü∫ ùëö ‚à£ ùëèùëê ‚àí ùëéùëê = ùëö ‚à£ ùëê(ùëè ‚àí ùëé) ‚ü∫

ùëö
(ùëê, ùëö)

‚à£

ùëê
(ùëê, ùëö)

(ùëè ‚àí ùëé) 

 
 
 
 
 
 
 
Como,  pelo  Corol√°rio  A.2.3,  (

ùëö
(ùëê,ùëö)

,

ùëê
(ùëê,ùëö)

) = 1,  ent√£o  ùëö
(ùëê,ùëö)

  e 

ùëê
(ùëê,ùëö)

  s√£o 

coprimos28, logo  

86 

ùëö
(ùëê, ùëö)

‚à£

ùëê
(ùëê, ùëö)

(ùëè ‚àí ùëé) ‚ü∫

ùëö
(ùëê, ùëö)

‚à£ ùëè ‚àí ùëé 

E novamente pela Proposi√ß√£o C.4, 

ùëö
(ùëê, ùëö)

‚à£ ùëè ‚àí ùëé ‚ü∫ ùëé ‚â° ùëè mod 

ùëö
(ùëê, ùëö)

C.8.1 Corol√°rio. Da Proposi√ß√£o C.8, se (ùëê, ùëö) = 1, ent√£o 

ùëéùëê ‚â° ùëèùëê mod ùëö ‚ü∫ ùëé ‚â° ùëè mod ùëö 

C.9 Proposi√ß√£o. Se ùëù √© primo, (ùëù, ùëé) = 1 e ùëé2 ‚â° 1 (mod ùëù), ent√£o ùëé ‚â° 1 (mod ùëù) ou 

ùëé ‚â° ‚àí1 (mod ùëù). 

Demonstra√ß√£o.  

ùëé2 ‚â° 1 (mod ùëù) ‚ü∫ ùëù ‚à£ (ùëé2 ‚àí 1) ‚ü∫ ùëù ‚à£ (ùëé + 1)(ùëé ‚àí 1) 

Como  ùëù  √©  primo,  ent√£o  ùëù ‚à£ (ùëé + 1)  ou  ùëù ‚à£ (ùëé ‚àí 1),  portanto  ùëé ‚â°

‚àí1 (mod ùëù) ou ùëé ‚â° 1 (mod ùëù). 

C.10 Teorema.  Sejam  ùëé  e  ùëû  inteiros,  se ùëû ‚à§ ùëé,  ùëé ‚â¢ 1 (mod ùëû)  e  ùëé ‚â¢ ‚àí1 (mod ùëû)  e 

ùëé2 ‚â° 1 (mod ùëû), ent√£o ùëû √© composto.  

Demonstra√ß√£o.  Como  ùëé2 ‚â° 1 (mod ùëû),  ent√£o  ùëû ‚à£ (ùëé2 ‚àí 1)  que  equivale  a  ùëû ‚à£ (ùëé +

1)(ùëé ‚àí 1). Supondo que ùëû √© primo, ent√£o, pela proposi√ß√£o anterior, temos ùëû ‚à£ (ùëé +

1) ou ùëû ‚à£ (ùëé ‚àí 1), um absurdo, pois, por hip√≥tese, ùëé ‚â¢ 1 (mod ùëû) e ùëé ‚â¢ ‚àí1 (mod ùëû), 

isto √©, ùëû ‚à§ (ùëé ‚àí 1) e ùëû ‚à§ (ùëé + 1), logo ùëû √© composto. 

28 Define-se como coprimos, dois n√∫meros inteiros ùëé e ùëè, cujo √∫nico divisor positivo comum √© 1, isto 
√©, (ùëé, ùëè) = 1. Os n√∫meros ùëé e ùëè tamb√©m s√£o definidos como primos entre si.  

 
 
 
 
 
 
 
