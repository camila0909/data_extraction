Universidade de Brasília
Instituto de Ciências Exatas
Departamento de Matemática
Programa de Mestrado Proﬁssional
em Matemática em Rede Nacional

Estudo sobre os Principais Aspectos da
Criptograﬁa Simétrica e Assimétrica ao longo
da História

Thiago Marques Esteves Póvoa

Brasília

2019

Thiago Marques Esteves Póvoa

Estudo sobre os Principais Aspectos da Criptograﬁa

Simétrica e Assimétrica ao longo da História

Dissertação apresentada ao Departamento
de Matemática da Universidade de Brasília,
como parte dos requisitos do Programa de
Mestrado Proﬁssional em Matemática em
Rede Nacional - PROFMAT, para obtenção
do grau de Mestre.

Universidade de Brasília - UnB

Departamento de Matemática - MAT

PROFMAT - SBM

Orientador: Prof. Dr. Vinícius de Carvalho Ríspoli

Brasília

2019

Thiago Marques Esteves Póvoa

Estudo sobre os Principais Aspectos da Criptograﬁa Simétrica e Assimétrica

ao longo da História/ Thiago Marques Esteves Póvoa. – Brasília, 2019-

110 p.

Orientador: Prof. Dr. Vinícius de Carvalho Ríspoli

Dissertação de Mestrado – Universidade de Brasília - UnB
Departamento de Matemática - MAT
PROFMAT - SBM, 2019.
1. Palavra Chave 1: Criptograﬁa 2. Palavra Chave 2: Criptograﬁa Simétrica
3. Palavra Chave 3: Criptograﬁa Assimétrica I. Nome do Orientador: Prof. Dr.
Vinícius de Carvalho Ríspoli II. Título.

Dedico esta dissertação, primeiramente, à minha família, pelo incondicional apoio com o qual
sempre pude contar, mesmo nas horas mais difíceis. Dedico também aos colegas de mestrado,
por terem me ajudado em diversos momentos da nossa caminhada e por terem me proporcionado
um imenso aprendizado, que jamais seria alcançado no estudo solitário. Dedico também aos
professores, que na incansável missão de ensinar, nos proporcionam, em cada nova aula, uma
nova visão sobre os conceitos matemáticos muitas vezes abstratos e de difícil compreensão. Por
ﬁm, dedico esta dissertação aos meus alunos, com os quais tenho o imenso prazer de resolver
problemas diversos e aprender cada vez mais a cada dia em que tenho o prazer de lecionar.

Agradecimentos

Agradeço a todos que, de alguma forma, contribuem para tornar o mundo um
lugar melhor. Sobretudo, àqueles que o fazem por meio da educação, essa ferramenta
que possui o poder de transformar a sociedade. Espero poder retribuir um pouco de
tudo que recebi de todos vocês.

“A mathematician, like a painter or a poet, is a maker of patterns. If his patterns are more
permanent than theirs, it is because they are made with ideas ”
G.H. Hardy

Resumo

A criptograﬁa está no nosso dia a dia. Nós utilizamos criptograﬁa quando realizamos
uma troca de e-mails por um provedor, quando realizamos uma troca de mensagens
pelo aplicativo WhatsApp, quando utilizamos um certiﬁcado digital para assinar do-
cumentos digitais ou atestar nossa identidade nos meios digitais, quando compramos
um produto em um site usando nosso cartão de crédito, quando conﬁguramos a segu-
rança da rede Wi-Fi das nossas casas... Enﬁm, nossa vida está repleta de criptograﬁa,
e não há como lidar com todas essas questões sem um conhecimento mínimo sobre o
funcionamento das cifras e dos algoritmos usados para garantir a nossa privacidade
e segurança. Esta dissertação busca prover ao leitor uma noção geral sobre as ideias e
sobre os processos utilizados na imensa atividade criptográﬁca que está diariamente à
nossa volta. Inicialmente, é apresentado um resumo do panorama geral da criptograﬁa
ao longo da história, seguido por descrições de processos de criptograﬁa simétrica e as-
simétrica, e de uma proposta de aplicação de criptograﬁa em sala de aula. O ferramental
matemático necessário para o bom entendimento dos tópicos deste trabalho consiste
em conhecimentos sobre Álgebra e Teoria dos Números, basicamente. À medida que a
complexidade das técnicas vai aumentando, a complexidade da matemática necessária
também aumenta. Portanto, algumas cifras especíﬁcas são tratadas mais detalhada-
mente, enquanto outras cifras, mais simples, são descritas com um grau de detalhes
consideravelmente menor. Os algoritmos criptográﬁcos mais complexos abordados
neste trabalho, baseados em propriedades algébricas de curvas elípticas, necessitam
de alguns conhecimentos básicos sobre espaços projetivos e variedades projetivas, que
são fornecidos no próprio texto. Por ﬁm, após a descrição das cifras e algoritmos, são
sugeridas ao professor propostas de utilização de criptograﬁa no contexto da sala de
aula do ensino fundamental II, com o intuito de tentar aproximar os estudantes dos
conceitos básicos da criptograﬁa.

Palavras-chaves: criptograﬁa. criptograﬁa simétrica. criptograﬁa assimétrica.

Abstract

Cryptography is in our day to day. We use cryptography when performing an e-mail
exchange by a provider, when we perform an exchange of messages by the WhatsApp
application, when we use a digital certiﬁcate to sign digital documents or to attest
our identity in digital media, when we buy a product on a site using our credit card,
when we conﬁgure the security of the Wi-Fi network in our homes... Anyway, our
life is full of cryptography, and there is no way to deal with all these issues without a
minimum knowledge about the operation of cyphers and algorithms used to ensure our
privacy and security. This dissertation seeks to provide the reader with a general notion
about the ideas and processes used in the immense cryptographic activity that is daily
around us. Initially, is presented a overview of cryptography throughout it’s history,
followed by descriptions of symmetric and asymmetric cryptography processes, and
by an application proposal of cryptography in classroom. The mathematical knowledge
necessary for a good understanding of the topics of this work consists of knowledge
about Algebra and Number Theory, basically. As the complexity of the techniques
increases, the complexity of the required mathematics also increases. Therefore, some
speciﬁc cyphers are treated in more detail, while others, more simple, are described
in a considerably lower degree of detail. The most complex cryptographic algorithms
in this work, that are based on algebraic properties of elliptic curves, require some
basic knowledge about projective spaces and projective varieties, which are provided
in the text itself. Finally, after describing the cyphers and algorithms, proposes to use
cryptography in the context of the elementary school classroom are suggested to the
teacher, in order to try to bring students closer to the basic concepts of cryptography.

Key-words: cryptography. symmetric cryptography. asymmetric cryptography.

Lista de ilustrações

. . . . . . . . . . . . . . . . . . .
. . .

19
Figura 1 – Cifra de Transposição com 2 Linhas
Figura 2 – Exemplo de citale (Disponível em <commons.wikimedia.org>)
20
Figura 3 – Alfabeto Original e Alfabeto Deslocado de 3 posições - Cifra de César 21
24
Figura 4 – Tábua de Vigenère . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
25
Figura 5 – Cifração Utilizando-se a Cifra de Vigenère . . . . . . . . . . . . . . .
27
Figura 6 – Texto Cifrado com Cifra de Vigenère . . . . . . . . . . . . . . . . . . .
28
Figura 7 – Repetições das sequências “EDA” e “EGI” . . . . . . . . . . . . . . . .
31
Figura 8 – Palavra-Chave e Texto Claro . . . . . . . . . . . . . . . . . . . . . . . .
49
Figura 9 – Resumo função-cifra . . . . . . . . . . . . . . . . . . . . . . . . . . . .
51
Figura 10 – Visão Geral da Cifra DES . . . . . . . . . . . . . . . . . . . . . . . . .
Figura 11 – Visão Geral da Obtenção das round-keys . . . . . . . . . . . . . . . . .
54
58
Figura 12 – Matriz de Bytes - AES . . . . . . . . . . . . . . . . . . . . . . . . . . .
Figura 13 – Operação ShiftRows . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
61
Figura 14 – Visão Geral da Cifra AES . . . . . . . . . . . . . . . . . . . . . . . . .
62
Figura 15 – Composição de Operações entre Bits para Construção da S-Box do
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Figura 16 – Gráﬁco da Curva Elíptica y2 = x3 − 4x, deﬁnida sobre R . . . . . . . .
Figura 17 – Gráﬁco da Curva Elíptica y2 = x3 + 4x, deﬁnida sobre R . . . . . . . .
Figura 18 – Soma de Pontos em uma Curva Elíptica . . . . . . . . . . . . . . . . .

63
77
78
80

AES .

.

.

.

.

.

.

.

Lista de tabelas

Tabela 1 – Letras Cifradas com 1a Letra da Palavra-Chave e Frequências
. . . .
.
Tabela 2 – Frequências das Letras na Língua Portuguesa (QUARESMA, 2008)
Tabela 3 – Permutação Inicial DES . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela 4 – Expansão dos Sub-Blocos Ri−1 . . . . . . . . . . . . . . . . . . . . . . .
Tabela 5 – Permutação de Bits P da função-cifra . . . . . . . . . . . . . . . . . . .
Tabela 6 – Permutação Final IP−1
. . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela 7 – 1a S-Box da Cifra DES . . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela 8 – Tabela PC-1 .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela 9 – Número de Deslocamentos à Esquerda para se obter Ci e Di
. . . . .
Tabela 10 – Tabela PC-2 .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela 11 – S-Box da Cifra AES . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela 12 – Tabela ASCII .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Tabela 13 – Comparação entre Tamanhos de Chaves com Nível de Segurança
Semelhante (BARKER, 2016) . . . . . . . . . . . . . . . . . . . . . . . .

.

.

.

.

.

.

29
30
47
48
49
50
51
52
53
53
60
68

96

Sumário

Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

13

.

.

.
.

.
.

TERMINOLOGIA E ASPECTOS HISTÓRICOS . . . . . . . . . . . .
15
Terminologia .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
Histórico .
.
Surgimento das Mensagens Secretas . . . . . . . . . . . . . . . . . . . 18
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
Tipos de Cifras .
Criptoanálise das Cifras de Substituição Monoalfabéticas . . . . . . . 22
Surgimento das Cifras de Substituição Polialfabéticas . . . . . . . . . 23
Criptoanálise da Cifra de Vigenère . . . . . . . . . . . . . . . . . . . . 25
One-Time Pad, a Cifra Perfeita . . . . . . . . . . . . . . . . . . . . . . . 31
Criptograﬁa na Era dos Computadores . . . . . . . . . . . . . . . . . . 33
Diﬁculdades na Troca de Chaves e o Surgimento da Criptograﬁa de
Chave Pública .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37
Necessidade da Assinatura Digital . . . . . . . . . . . . . . . . . . . . . 41
Autoridade Certiﬁcadora, Infraestrutura de Chaves Públicas e Certiﬁ-
cados Digitais .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43

.

.

.

46
CRIPTOGRAFIA DE CHAVE PRIVADA OU SIMÉTRICA . . . . . . .
Data Encryption Standard - DES . . . . . . . . . . . . . . . . . . . . 46
Cifração com o DES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46
Decifração com o DES . . . . . . . . . . . . . . . . . . . . . . . . . . . 54
Comentários sobre o DES . . . . . . . . . . . . . . . . . . . . . . . . . 55
Advanced Encryption Standard - AES . . . . . . . . . . . . . . . . . 56
Cifração com o AES-128 . . . . . . . . . . . . . . . . . . . . . . . . . . 57
Decifração com o AES-128 . . . . . . . . . . . . . . . . . . . . . . . . . 65
Comentários sobre o AES . . . . . . . . . . . . . . . . . . . . . . . . . 65

CRIPTOGRAFIA DE CHAVE PÚBLICA OU ASSIMÉTRICA . . . . .
67
Algoritmo de Criptograﬁa de Chave Pública RSA . . . . . . . . . . 67
Funcionamento do RSA . . . . . . . . . . . . . . . . . . . . . . . . . . . 67
Exemplo Numérico de Aplicação do RSA . . . . . . . . . . . . . . . . . 70
Exemplo de Aplicação do RSA em Assinatura Digital . . . . . . . . . . 71
Comentários sobre o RSA . . . . . . . . . . . . . . . . . . . . . . . . . 73
Algoritmo de Criptograﬁa com Curvas Elípticas . . . . . . . . . . . 74
Introdução às Curvas Elípticas . . . . . . . . . . . . . . . . . . . . . . . 75

1
1.1
1.2
1.2.1
1.2.2
1.2.3
1.2.4
1.2.5
1.2.6
1.2.7
1.2.8

1.2.9
1.2.10

2
2.1
2.1.1
2.1.2
2.1.3
2.2
2.2.1
2.2.2
2.2.3

3
3.1
3.1.1
3.1.2
3.1.3
3.1.4
3.2
3.2.1

3.2.2
3.2.3
3.2.4
3.2.5
3.2.6
3.2.7

4

4.1
4.1.1
4.1.2
4.2
4.2.1
4.2.2
4.3
4.3.1
4.3.2
4.4
4.4.1
4.4.2
4.4.3
4.5

Deﬁnição da Operação “soma” entre Pontos de Curvas Elípticas . . . 79
Ordem de uma Curva Elíptica e o Teorema de Hasse . . . . . . . . . . 84
Problema do Logaritmo Discreto para Curvas Elípticas . . . . . . . . . 88
Criptograﬁa com Curvas Elípticas . . . . . . . . . . . . . . . . . . . . . 91
Assinatura Digital com Curvas Elípticas . . . . . . . . . . . . . . . . . . 93
Comentários sobre Criptograﬁa de Curvas Elípticas . . . . . . . . . . 96

PROPOSTAS DE UTILIZAÇÃO DE CRIPTOGRAFIA EM SALA DE
98
AULA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Proposta 1 - Cifra de Deslocamento . . . . . . . . . . . . . . . . . . 98
Aula 1 - Cifração e Decifração com Cifra de Deslocamento . . . . . . 98
Aula 2 - Criptoanálise da Cifra de Deslocamento . . . . . . . . . . . . 99
Proposta 2 - Cifra de Transposição por Linhas . . . . . . . . . . . . 100
Aula 1 - Cifração e Decifração com Cifra de Transposição por Linhas 100
Aula 2 - Criptoanálise da Cifra de Transposição por Linhas . . . . . . 101
Proposta 3 - Cifra de Vigenère . . . . . . . . . . . . . . . . . . . . . . 102
Aula 1 - Cifração e Decifração com a Cifra de Vigenère . . . . . . . . 102
Aula 2 - Criptoanálise da Cifra de Vigenère . . . . . . . . . . . . . . . . 103
Proposta 4 - Algoritmo RSA . . . . . . . . . . . . . . . . . . . . . . . 104
Aula 1 - Introdução à Aritmética Modular . . . . . . . . . . . . . . . . . 104
Aula 2 - Cifração e Decifração com o RSA . . . . . . . . . . . . . . . . 104
Aula 3 - Criptoanálise do Algoritmo RSA . . . . . . . . . . . . . . . . . 106
Proposta 5 - Par ou Ímpar por Telefone com o RSA . . . . . . . . . 106

5

CONCLUSÕES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108

REFERÊNCIAS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109

Introdução

13

A criptograﬁa sempre esteve presente na história da humanidade, desde a nossa
história antiga, passando pela era medieval, pelo renascimento, pelos períodos mar-
cados pelas grandes guerras do século XX, culminando nos modernos processos de
criptograﬁa da atualidade, que permeiam toda a comunicação realizada atualmente
na internet. A engenhosidade no desenvolvimento dos mais variados mecanismos
para tentar ocultar uma mensagem dos olhos de um possível espião tornou a ciência
criptográﬁca extremamente soﬁsticada. A história do desenvolvimento dessas cifras,
cada vez mais seguras e complexas, é uma grande aventura pela própria história da
humanidade. Ao longo dos séculos, sempre houve um embate velado entre aqueles
que buscavam desenvolver as cifras seguras, denominados criptógrafos, e aqueles que
buscavam métodos não autorizados para decifrar as mensagens, denominados cripto-
analistas. A constante disputa entre a criptograﬁa e a criptoanálise foi o grande motor
do desenvolvimento das modernas tecnologias que possuímos hoje. A ciência que es-
tuda tanto as técnicas de criptograﬁa quanto as técnicas de criptoanálise é denominada
criptologia (DOOLEY, 2018). Antes da invenção dos computadores, essa disputa estava
restrita aos círculos diplomáticos e militares, sempre no âmbito governamental. Porém,
com a utilização em larga escala dos computadores pessoais e, principalmente, da in-
ternet, a necessidade de se viabilizar um mecanismo de troca segura de mensagens
entre todos que possuem uma conta de e-mail, por exemplo, trouxe novos e complexos
desaﬁos para os criptógrafos. Junto com esses desaﬁos, vieram ideias e soluções ino-
vadoras, que solucionaram problemas milenares como, por exemplo, o problema da
distribuição segura de chaves, que será abordado neste trabalho. Portanto, a história da
criptograﬁa deve ser encarada como uma verdadeira história de desaﬁo, competição e
aprendizado. Uma batalha intelectual entre aqueles que buscavam ocultar os segredos,
e aqueles que queriam conhecê-los. A cada nova geração de cifras, o desaﬁo estava
lançado aos criptoanalistas. E a cada vez que os criptoanalistas conseguiam desvendar
os segredos daquela geração de cifras, tornando-as inseguras, o desaﬁo estava lançado
aos criptógrafos. Dessa forma, construiu-se a história da criptograﬁa.

Objetivos

Os objetivos deste trabalho são, basicamente, prover ao leitor uma noção geral
sobre as ideias e sobre os processos utilizados na criptograﬁa que está diariamente
à nossa volta, e propor uma utilização de criptograﬁa em sala de aula, por meio de
atividades direcionadas a alunos do ensino fundamental II. A divisão das atividades

Introdução

14

por ano letivo escolar foi realizada com base na divisão de conteúdos estabelecida
pela Base Nacional Comum Curricular (BRASIL, 2017). Como ainda são escassos os
títulos sobre criptograﬁa escritos em língua portuguesa, este trabalho busca contribuir
para uma maior disseminação dos conhecimentos criptográﬁcos ao leitor que não
possui acesso aos títulos escritos, em sua grande maioria, em língua inglesa. Buscou-se,
sempre que possível, a contextualização histórica das cifras e dos algoritmos abordados,
na tentativa de tornar o ﬂuxo de ideias que foram surgindo na história da criptograﬁa o
mais natural possível. Espera-se que o leitor possa se beneﬁciar da abordagem sempre
pautada na busca pela clareza e simplicidade na descrição das ideias envolvidas nas
diversas aplicações criptográﬁcas da atualidade.

Estrutura do Trabalho

No Capítulo 1, serão apresentadas algumas deﬁnições e terminologia básica
utilizadas no universo criptográﬁco, seguidas de um panorama histórico acerca do de-
senvolvimento da criptograﬁa ao longo dos séculos, até o surgimento da criptograﬁa
de chave pública e da assinatura digital, no século XX. No Capítulo 2, será feita uma
apresentação de duas cifras simétricas muito utilizadas na atualidade, a cifra DES e a
cifra AES. No Capítulo 3, será apresentado o algoritmo de criptograﬁa assimétrica RSA,
e também serão abordados tópicos do ramo da criptograﬁa assimétrica conhecido como
Elliptic Curve Cryptography - ECC, por meio da apresentação de algoritmos de cripto-
graﬁa e assinatura digital baseados em propriedades de curvas elípticas. No Capítulo
4, serão apresentadas propostas de utilização de criptograﬁa no contexto da sala de
aula do ensino fundamental II, com o intuito de tentar aproximar os estudantes dos
conceitos básicos de criptograﬁa. Por ﬁm, no Capítulo 5, serão apresentadas algumas
conclusões e impressões gerais sobre a importância da criptograﬁa na sociedade.

1 Terminologia e Aspectos Históricos

15

1.1 Terminologia

A palavra criptograﬁa é derivada das palavras gregas kriptos, que signiﬁca
“oculto” e graphein, que signiﬁca “escrever”. A criptograﬁa é um dos ramos da cripto-
logia, e seu objetivo não é esconder a mensagem, mas sim ocultar seu signiﬁcado. Para
isso, devem ser utilizadas técnicas adequadas. As técnicas de criptograﬁa que realizam
a substituição de elementos da mensagem por outros elementos previamente combi-
nados são denominadas técnicas de substituição, e podem ser divididas em 2 grandes
grupos: os códigos e as cifras. Os códigos consistem em se transformar elementos da
mensagem, de comprimento variável, mas que carregam algum signiﬁcado, em ele-
mentos codiﬁcados, seguindo-se um padrão previamente combinado entre as partes.
Por exemplo, pode-se adotar um código em que a palavra “sorte” seja sistematicamente
substituída pelo símbolo *. Não há qualquer relação lógica entre a palavra original e o
símbolo codiﬁcado, apenas há a necessidade de que essa relação tenha sido combinada
previamente entre o emissor e o receptor da mensagem. As mensagens codiﬁcadas são
difíceis de serem descobertas por um espião, mas possuem uma grande desvantagem:
as relações entre o texto da mensagem e seus respectivos códigos precisam ser guarda-
das em uma espécie de “dicionário”, e tanto o emissor quanto o receptor da mensagem
precisam possuir dicionários idênticos. Esses dicionários costumam ser longos, pois
precisam conter todas as expressões dotadas de signiﬁcado que serão usadas na troca
de mensagens, bem como seus respectivos códigos. Além disso, se um dos dicionários
for roubado, todas as mensagens que já foram codiﬁcadas utilizando-se aquele padrão
de código poderão ser decodiﬁcadas por um espião. Não há qualquer ﬂexibilidade
para a mudança do padrão de codiﬁcação, todas as mensagens serão codiﬁcadas e
decodiﬁcadas com o mesmo padrão de dicionário. Daí a fragilidade da criptograﬁa
que se utiliza de códigos para esconder o signiﬁcado da mensagem. Diferentemente
dos códigos, o modo de operação das cifras consiste em se transformar elementos da
mensagem, de comprimento ﬁxo (letras, por exemplo), e que não carregam qualquer
signiﬁcado, em elementos cifrados, a partir de uma regra lógica, que pode ser apli-
cada em qualquer um dos elementos da mensagem original. Por exemplo, para cifrar
a palavra “sorte”, pode-se adotar a cifra que substitui cada letra pela letra seguinte do
alfabeto, resultando na mensagem cifrada “TPSUF”. A vantagem das cifras em relação
aos códigos é que uma só regra precisa ser compartilhada entre emissor e receptor da
mensagem, pois essa regra pode ser aplicada em qualquer elemento da mensagem.
Além disso, essa regra carrega uma certa ﬂexibilidade, conhecida como “chave” da

Capítulo 1. Terminologia e Aspectos Históricos

16

cifra, de forma que se possa mudar a regra sem grandes problemas, sempre que se
desejar. Por exemplo, em um alfabeto com 26 letras, é necessário memorizar apenas 26
regras, de qual letra utilizar para se substituir cada uma das letras da mensagem origi-
nal. Evidentemente, essa quantidade de informação a ser memorizada não precisa ser
colocada em um “dicionário”, o que impede que tal regra seja roubada por um espião.
Também, as 26 regras podem ser construídas de forma que haja uma relação entre elas,
como por exemplo, “substituir cada letra da mensagem original pela letra seguinte no
alfabeto”, de forma que memorizar essa instrução permite a construção de todas as 26
regras de cifragem das letras do alfabeto. Caso se deseje mudar a regra, basta mudar
a instrução, como por exemplo, “substituir cada letra da mensagem original pela letra
anterior no alfabeto”. Essa ﬂexibilidade da regra de cifração é uma enorme vantagem
da cifra em relação ao código. Além disso, o processo de cifração é muito mais simples
e rápido, pois não é necessário procurar no dicionário de códigos o correspondente
para cada elemento dotado de signiﬁcado do texto, basta aplicar a regra universal para
cada um dos elementos semelhantes a serem cifrados (letras, por exemplo). Isso torna
muito mais rápido o processo de cifração e decifração das cifras do que o processo de
codiﬁcação e decodiﬁcação dos códigos.

Nesse ponto, é necessário fazer uma ressalva quanto à terminologia utilizada, e
adotar algumas deﬁnições, que serão utilizadas ao longo de todo o trabalho. Primeira-
mente, o que se observa, tanto na literatura em língua portuguesa, quanto na literatura
em língua inglesa, é que não há uma padronização na utilização dos termos cifrar, deci-
frar, codiﬁcar e decodiﬁcar. Em alguns autores, por exemplo (DOOLEY, 2018), (SINGH,
2011) e (KAHN, 1996), os termos cifrar e decifrar, bem como codiﬁcar e decodiﬁcar, são
utilizados para designar as ações do emissor e do receptor da mensagem, não havendo
uma terminologia especíﬁca para um possível espião, que está tentando “quebrar” a
cifra ou o código. Em outros autores, por exemplo (COUTINHO, 2000), a utilização
dos termos codiﬁcar e decodiﬁcar se aplica às ações realizadas pelo emissor e pelo
receptor da mensagem, não importando se eles utilizaram uma cifra ou um código. Já o
termo decifrar, neste mesmo autor, é utilizado para designar a ação de um espião, que
está tentando “quebrar” a cifra ou o código. Dessa forma, neste trabalho optou-se pela
nomenclatura adotada em (DOOLEY, 2018), (SINGH, 2011) e (KAHN, 1996), por ser
mais especíﬁca e inequívoca, de forma que serão utilizados os termos cifrar e decifrar
para a utilização geral de cifras, e os termos codiﬁcar e decodiﬁcar para a utilização
geral de códigos.

É importante ressaltar também que, além de os códigos poderem ser utilizados
para a transmissão de mensagens secretas, sua utilidade não se restringe a esse propó-
sito. Os códigos podem ser utilizados como instrumento para permitir o processo de
transmissão de informações em determinados canais. É assim que a informação trafega
atualmente nos meios digitais, por meio de códigos, que transformam a linguagem hu-

Capítulo 1. Terminologia e Aspectos Históricos

17

mana em bits, que correspondem à linguagem dos computadores digitais. A teoria dos
códigos e da informação, que estuda técnicas eﬁcientes e seguras para a transmissão
de informações por meio de códigos, é bastante recente na história da humanidade,
tendo se iniciado com os trabalhos publicados por Claude Shannon, um matemático
norte-americano. Shannon publicou os artigos A mathematical theory of communication
(SHANNON, 1948) e Communication Theory of Secrecy Systems (SHANNON, 1949) em
1948 e 1949, respectivamente. Logo em seguida, vieram os trabalhos de Richard W.
Hamming, publicados em 1950 (SHOKRANIAN, 2012). Ambos trabalhavam no labo-
ratório da AT&T Bell, que atualmente é conhecido como laboratório Nokia Bell. A
partir dos trabalhos desses pesquisadores, sobretudo de Shannon, nasceram duas no-
vas teorias matemáticas, a Teoria da Informação e a Teoria dos Códigos Corretores de
Erros. Este trabalho não abordará os tópicos estudados nessas áreas de conhecimento.
Para uma abordagem mais detalhada sobre a Teoria dos Códigos Corretores de Erros,
pode-se consultar (HEFEZ A.; VILLELA, 2008), e para uma abordagem histórica sobre
surgimento da Teoria da Informação, pode-se consultar (GLEICK, 2012).

Conforme observado anteriormente, no universo da criptograﬁa, faz-se necessá-
rio deﬁnir uma terminologia padrão a ser adotada, para que não haja ambiguidade ou
confusão nos termos utilizados. Dessa forma, este trabalho utilizará uma terminologia
criptográﬁca alinhada com a termilogogia utilizada nas obras sobre criptograﬁa, em
geral. Por exemplo, quando nos referirmos ao emissor de uma mensagem, é comum
utilizarmos o nome Alice. Analogamente, quando nos referirmos ao receptor da men-
sagem, é comum utilizarmos o nome Bob. Por ﬁm, quando nos referirmos a um espião
que consegue interceptar a mensagem cifrada e deseja conhecer seu conteúdo, é co-
mum utilizarmos o nome Eve. Também, quando nos referirmos à mensagem original,
antes de passar pelo processo de cifração, é comum chamá-la de texto claro ou plaintext,
e a mensagem nesse formato será sempre escrita em letras minúsculas. Por sua vez,
quando nos referirmos à mensagem após ter passado pelo processo de cifração, é co-
mum chamá-la de texto cifrado, ou ciphertext, e a mensagem nesse formato será sempre
escrita em letras maiúsculas. Neste ponto, pela própria nomenclatura utilizada, ﬁca
claro que não serão abordados processos de codiﬁcação e decodiﬁcação neste trabalho,
apenas processos de cifração e decifração. Por ﬁm, quando nos referirmos ao segredo
necessário para cifrar e para decifrar mensagens utilizando-se uma cifra conhecida pelo
emissor e pelo receptor, é comum chamar esse segredo de chave ou key.

1.2 Histórico

Nesta seção, será apresentado um panorama geral do desenvolvimento da crip-
tograﬁa ao longo da história da humanidade. Sempre que possível, será dada prioridade
à elucidação dos fatos históricos. Os aspectos matemáticos das cifras serão abordados

Capítulo 1. Terminologia e Aspectos Históricos

18

nos capítulos seguintes.

1.2.1 Surgimento das Mensagens Secretas

Os primeiros registros de utilização de mensagens secretas ao longo da história
foram feitos pelo historiador grego Heródoto, em sua narrativa sobre a invasão da
Grécia pelos persas, no século V a.C (SINGH, 2011). Na história narrada por Heródoto,
consta que os gregos utilizaram uma técnica para esconder mensagens do conheci-
mento dos persas, que poderiam interceptá-las. Tratava-se de usar tábuas de madeira
recobertas com cera (algo que, na época, era utilizado para a escrita) como instrumento
para se esconder as mensagens. O que os gregos ﬁzeram foi escrever as mensagens
diretamente na madeira, e recobri-la com a cera, de forma que as mensagens não ﬁcas-
sem expostas. Dessa forma, conseguiam passar com as tábuas pelo controle dos persas,
sem que eles identiﬁcassem qualquer mensagem nas tábuas. Chegando ao seu destino,
os gregos derretiam ou raspavam a cera, de forma que a mensagem escondida se tor-
nava então visível. Essa técnica, embora bastante engenhosa, não pertence ao ramo da
criptograﬁa, trata-se de esteganograﬁa. A esteganograﬁa, nome derivado das palavras
gregas steganos, que signiﬁca “coberto” e graphein, que signiﬁca “escrever”, consiste
em um conjunto de técnicas utilizadas para se transmitir uma mensagem secreta de
maneira a ocultá-la em algum dos elementos relacionados com o transporte da men-
sagem. Por exemplo, pode-se utilizar uma tinta invisível para escrever a mensagem
sobre um tecido, que só se tornará visível quando o tecido for aquecido. Outro exemplo
mais moderno de esteganograﬁa consiste na utilização de uma imagem digital (um ar-
quivo JPEG, por exemplo) para se esconder uma mensagem secreta. Isso pode ser feito
utilizando-se a sequência binária de uns e zeros, que representam as cores de cada pixel
da imagem, para se esconder uma mensagem secreta, sem que haja uma alteração sig-
niﬁcativa nas cores da imagem. A esteganograﬁa se diferencia da criptograﬁa porque,
apesar de ambas as técnicas buscarem a mesma ﬁnalidade, que é impedir que um pos-
sível espião tenha acesso ao conteúdo da mensagem, elas o fazem de maneira distinta.
Enquanto na esteganograﬁa o objetivo é impedir que a mensagem seja descoberta, na
criptograﬁa o objetivo é impedir que a mensagem seja compreendida.

Pode-se, inclusive, utilizar-se uma combinação das técnicas de esteganograﬁa,
para esconder a mensagem dos olhos de espiões, com as técnicas de criptograﬁa para,
caso a mensagem seja descoberta, que não possa ser compreendida, aumentando-se
assim ainda mais a segurança do processo de troca de mensagens. Essa combinação de
criptograﬁa com esteganograﬁa foi utilizada pelos alemães durante a Segunda Guerra
Mundial (KAHN, 1996). Eles, primeiramente, cifravam a mensagem que desejavam
transmitir. Em seguida, reduziam fotograﬁcamente o texto cifrado, até que seu tama-
nho fosse compatível com o tamanho de um ponto ﬁnal de uma frase impressa em

Capítulo 1. Terminologia e Aspectos Históricos

19

tamanho natural. Dessa forma, eles inseriam o ponto ﬁnal com a mensagem cifrada em
correspondências aparentemente normais, de forma que o receptor da correspondência
pudesse ampliar o ponto ﬁnal com a mensagem cifrada e, conhecendo a cifra utilizada
e sua chave, pudesse ler seu conteúdo. Entretanto, nem todas as mensagens secretas en-
viadas pelos alemães por meio de micropontos foram cifradas previamente e, quando
essa técnica foi descoberta pelos agentes norte-americanos, várias mensagens alemãs
puderam ser lidas. Esse exemplo mostra que, muito embora a esteganograﬁa possa
oferecer algum nível de segurança para a transmissão de mensagens secretas, sem o
auxílio da criptograﬁa pode-se colocar tudo a perder.

1.2.2 Tipos de Cifras

Dentro da criptograﬁa, as cifras podem ser divididas em 2 grandes ramos,
dependendo de como elas funcionam para esconder o conteúdo das mensagens: as
cifras de transposição e as cifras de substituição.

As cifras de transposição funcionam embaralhando as letras do texto claro, para
gerar o texto cifrado. Em outras palavras, elas produzem anagramas do texto claro,
por meio de uma regra de embaralhamento das letras, conhecida como chave da ci-
fra. Quanto maior o número de letras na mensagem, maior o número de anagramas
possíveis, e esse crescimento é bastante rápido. Portanto, para mensagens com uma
grande quantidade de letras cifradas com uma cifra de transposição, sem se conhecer
a regra utilizada para cifrá-la (chave), espera-se encontrar alguma diﬁculdade na ten-
tativa de decifrar a mensagem, pois serão muitas possibilidades de anagramas para
se testar qual deles corresponde a uma mensagem coerente. Esse tipo de abordagem,
que consiste na tentativa de se obter o texto claro testando-se todas as possibilidades
de chaves de uma cifra, é conhecido como método da força bruta. Para mensagens
longas, o ataque pelo método da força bruta se mostra ineﬁciente nas cifras de trans-
posição, desde que somente o emissor e o receptor da mensagem conheçam a regra
utilizada (chave) para embaralhar as letras do texto claro. Há vários tipos de cifras de
transposição, alguns mais simples, outros mais complexos. Um tipo bastante simples
de cifra de transposição consiste em escrever a mensagem em 2 linhas, colocando-se
cada letra em cada linha, de maneira alternada. Por ﬁm, para obter o texto cifrado,
basta escrever a primeira linha seguida da segunda linha. Por exemplo, vamos cifrar
a frase “numeros sao abstratos” utilizando-se essa cifra, conforme se observa na ﬁgura 1.

Figura 1 – Cifra de Transposição com 2 Linhas

n m r
u e

s a a s

t
o s o b t a o

r

s

Capítulo 1. Terminologia e Aspectos Históricos

20

A mensagem cifrada será então ”NMRSAASRTSUEOSOBTAO”. Para o receptor
decifrá-la, basta aplicar o método contrário, isto é, escrever a mensagem em 2 linhas e
ler, alternadamente, uma letra de cada linha. Esse tipo de cifra de transposição pode ser
modiﬁcado aumentando-se o número de linhas em que se escrevem as letras de forma
alternada, produzindo-se assim uma nova cifra. Um outro exemplo de cifra de trans-
posição, utilizado desde o século V a.C., utiliza uma longa tira de tecido e um bastão
cilíndrico, denominado citale. A cifra consiste em se enrolar a tira de tecido no bastão,
de maneira helicoidal, e escrever o texto claro ao longo do comprimento do bastão,
iniciando uma nova linha sempre que a mensagem chegar até o ﬁm do comprimento
do bastão. Após ﬁnalizada a escrita da mensagem, basta desenrolar a tira de tecido
do bastão, e o que se observará ao longo da tira de tecido será o texto cifrado. Para o
receptor decifrar a mensagem, basta que ele enrole a tira em outro bastão, de mesmo
diâmetro do bastão utilizado para cifrar a mensagem, e leia a mensagem nas linhas ao
longo do comprimento do bastão. Essa técnica foi utilizada pelos espartanos, no século
V a.C., para transmitir mensagens secretas, de maneira que os persas não pudessem
conhecer seu conteúdo (SINGH, 2011). Um exemplo de citale pode ser observado na
ﬁgura 2.

Figura 2 – Exemplo de citale (Disponível em <commons.wikimedia.org>)

O outro tipo de cifra, diferente da cifra de transposição, é a cifra de substituição.
Enquanto a cifra de transposição se preocupa em embaralhar as letras da mensagem, a
cifra de substituição substitui cada letra do texto claro por uma outra letra, ou mesmo
um símbolo, previamente combinados, obtendo-se assim o texto cifrado. Na prática, o
que se faz para operacionalizar o processo de cifragem por substituição é escrever o
alfabeto original e, embaixo dele, as letras ou símbolos pelas quais as letras do alfabeto
original devem ser trocadas. Dessa forma, surge um segundo alfabeto, denominado
alfabeto cifrado. O alinhamento vertical das letras do alfabeto original com as letras ou
símbolos do alfabeto cifrado facilita o processo de cifragem e decifragem pela cifra de
substituição. Um exemplo bastante conhecido de cifra de substituição é a cifra que foi
utilizada por Júlio César, imperador romano, para se comunicar com seus generais em
combate pela Europa, por volta do século I a.C. (COUTINHO, 2000). A cifra de César

Capítulo 1. Terminologia e Aspectos Históricos

21

consistia em se deslocar as letras do alfabeto em 3 posições, de forma que cada letra do
alfabeto original no texto claro fosse substituída pela letra correspondente no alfabeto
deslocado, dando origem assim ao texto cifrado. Esse tipo de cifra de substituição, em
que ocorre apenas um deslocamento do alfabeto original, preservando-se a posição
relativa entre as letras, é denominado cifra de deslocamento. Segue na ﬁgura 3 uma
ilustração do alfabeto original e do alfabeto deslocado de 3 posições, que é utilizado na
cifra de César.

Figura 3 – Alfabeto Original e Alfabeto Deslocado de 3 posições - Cifra de César

Como exemplo, vamos utilizar a cifra de César para cifrar a mesma mensagem
cifrada anteriormente com a cifra de transposição: “números são abstratos”. Essa men-
sagem, cifrada com a cifra de César, se torna: “QXPHURVVDRDEVWRDWRV”. De
maneira geral, as cifras de substituição não precisam manter a posição relativa entre
as letras no alfabeto original e do alfabeto cifrado. Isto é, as letras do alfabeto cifrado
podem estar ordenadas de qualquer maneira. Esse fato faz com que o ataque às cifras
de substituição utilizando-se o método da força bruta seja bastante difícil, pois se tem
(26! − 1) possibilidades distintas de alfabetos cifrados (chaves), e é impraticável testar
cada um deles para obter a mensagem original. Além disso, é possível que, durante a
tentativa de busca do alfabeto cifrado correto, algum dos possíveis alfabetos cifrados
errados também produza uma mensagem coerente quando aplicado ao texto cifrado,
uma espécie de “falso positivo”, causando assim dúvida no criptoanalista. Porém, caso
a cifra de substituição seja uma simples cifra de deslocamento, o método da força bruta
é suﬁciente para se descobrir o conteúdo da mensagem, pois há somente 25 possibilida-
des de deslocamento do alfabeto (25 chaves), dado que há 26 letras e uma das posições
corresponde à posição do alfabeto original. Portanto, ﬁca evidente que as cifras de
deslocamento são bastante inseguras, não resistindo nem mesmo a um simples ataque
por força bruta. Também, é possível notar que as cifras de transposição e de substi-
tuição possuem caráter complementar: enquanto a primeira se preocupa em trocar a
posição das letras, sem alterar sua natureza, a segunda faz justamente o oposto, altera
a natureza de cada uma das letras, mas preserva a sua posição.

Tanto as cifras de transposição quanto as de substituição utilizam um segredo
comum, que deve ser partilhado entre o emissor e o receptor da mensagem. No caso
da cifra de transposição, o segredo é a maneira como se deve embaralhar as letras da
mensagem. No caso da cifra de substituição, o segredo consiste no alfabeto cifrado.
Esse segredo, em ambos os casos, é denominado chave da cifra. Portanto, a partir de

Capítulo 1. Terminologia e Aspectos Históricos

22

uma mensagem cifrada, basta que se conheça o tipo de cifra e a chave utilizada, para
que se possa decifrar a mensagem. Porém, caso um espião intercepte a mensagem
cifrada, mesmo que ele conheça a cifra utilizada, ele não poderá decifrar a mensagem
sem o conhecimento da chave. Portanto, a segurança da troca de mensagens secretas
utilizando essas cifras depende, essencialmente, do caráter secreto da chave. Para que
uma cifra seja forte contra o ataque por força bruta, ela deve possuir um número grande
de possibilidades de chaves, que inviabilize a tentativa de todas elas. É por esse motivo
que a cifra de deslocamento é insegura, pois só possui 25 chaves, sendo possível testar
todas elas rapidamente.

1.2.3 Criptoanálise das Cifras de Substituição Monoalfabéticas

Primeiramente, faz-se necessário deﬁnir o conceito de cifra de substituição mo-
noalfabética. Trata-se, simplesmente, de uma cifra de substituição em que apenas um
alfabeto cifrado é utilizado no processo de cifração de toda a mensagem. Isto é, o
alfabeto cifrado é ﬁxo, e é utilizado para cifrar toda a mensagem. Todas as cifras de
substituição abordadas anteriormente são cifras de substituição monoalfabéticas. Essas
cifras padecem de uma fraqueza sutil, que permite a sua decifração sem que se conheça
a chave secreta, e sem que seja necessário utilizar-se o método da força bruta: trata-se da
análise da frequência média de ocorrência das letras em cada idioma. A criptoanálise
das cifras de substituição monoalfabéticas pode ser realizada com base no conheci-
mento dessas frequências, caso o texto cifrado seja suﬁcientemente longo para que se
espere que as frequências de ocorrência das letras no idioma seja mantida no texto
cifrado. Como cada letra do alfabeto original possui apenas uma letra correspondente
no alfabeto cifrado, as frequências de ocorrências das letras em ambos os alfabetos
serão as mesmas. Por exemplo, caso a letra “a” do alfabeto original corresponda à letra
“P” do alfabeto cifrado, espera-se que a letra “P” no texto cifrado apresente a mesma
frequência que a letra “a” no idioma em que a mensagem foi escrita. Isso permite que se
possa comparar as frequências das letras do texto cifrado com as frequências das letras
no idioma em que a mensagem foi escrita, estabelecendo-se assim correspondências. A
primeira utilização documentada desse tipo de técnica de criptoanálise para quebra de
cifras de substituição monoalfabéticas se deu no século IX, com os trabalhos de al-Kindi
(SINGH, 2011), conhecido como “o ﬁlósofo dos árabes”. Portanto, a partir da técnica de
análise de frequências das letras em um determinado idioma, é possível “quebrar” as
cifras de substituição monoalfabéticas, bastando para isso conhecer o idioma no qual o
texto claro foi escrito, e possuir um texto cifrado suﬁcientemente longo para preservar
as frequências das letras naquele idioma.

Capítulo 1. Terminologia e Aspectos Históricos

23

1.2.4 Surgimento das Cifras de Substituição Polialfabéticas

Após o mundo árabe descobrir uma maneira eﬁcaz para decifrar mensagens
cifradas com cifras de substituição monoalfabéticas sem o conhecimento da chave
secreta, o mundo enfrentou um período em que os criptoanalistas estavam ganhando
a batalha, pois não havia cifra absolutamente segura. No início do século XV, grande
parte dos criptoanalistas da Europa já conheciam a técnica de análise de frequência,
de forma que se tornou necessário o desenvolvimento de cifras mais robustas, para
que se garantisse a segurança no processo de comunicação por mensagens secretas.
Nesse período, a cidade italiana de Florença estava repleta de pensadores, ﬁlósofos
e cientistas renascentistas. Um deles se chamava Leon Battista Alberti, e ele foi o
primeiro homem a propor um tipo de cifra mais robusta que as cifras de substituição
monoalfabéticas conhecidas até então (SINGH, 2011). Alberti percebeu que a grande
fragilidade das cifras de substituição monoalfabéticas, o que faz com que elas possam
ser exploradas com a análise de frequências, consiste no fato de cada letra do texto claro
possuir apenas um correspondente no texto cifrado, preservando assim a frequência
de ocorrência das letras. A ideia que Alberti teve para contornar essa fragilidade foi
utilizar 2 alfabetos cifrados diferentes para cifrar as letras da mensagem. Ele propôs a
utilização alternada de cada um dos alfabetos cifrados na cifração em sequência das
letras da mensagem, de forma que não houvesse mais a preservação das frequências
de ocorrência das letras, pois a mesma letra do alfabeto comum poderia agora ser
representada por 2 letras distintas dos alfabetos cifrados. Essa ideia de utilização de
diferentes alfabetos cifrados na cifração de uma mensagem revolucionou o pensamento
dos criptógrafos da Europa naquele período, de forma que surgiram algumas propostas
de cifras que se utilizavam desse princípio para tornarem a cifra de substituição mais
robusta. Essas cifras de substituição, que utilizam mais de um alfabeto cifrado na
cifração da mensagem, são conhecidas como cifras de substituição polialfabéticas, e sua
principal vantagem em relação às substituições monoalfabéticas é que as substituições
polialfabéticas não preservam a frequência de ocorrência das letras, diﬁcultando assim
o seu ataque pelos criptoanalistas.

Coube então ao diplomata francês Blaise de Vigenère, já no século XVI, propor
um modelo de cifra de substituição polialfabética que utilizava as ideias propostas
por Alberti de uma forma bastante prática e eﬁciente. O que Vigenère propôs foi a
utilização alternada de vários alfabetos cifrados, sendo essa quantidade de alfabetos
cifrados um parâmetro que podia ser variado em sua cifra. Outra característica da cifra
de Vigenère é que os vários alfabetos cifrados utilizados são fáceis de serem construí-
dos, não necessitando assim que emissor e receptor memorizassem longas sequências
de letras. Vejamos como funciona a cifra de Vigenère. Primeiramente, deve-se montar
uma tábua, denominada Tábua de Vigenère, em que o alfabeto aparece escrito 27 vezes.

Capítulo 1. Terminologia e Aspectos Históricos

24

A primeira linha da tábua corresponde ao alfabeto escrito em sua forma convencional,
e as outras 26 linhas correspondem aos alfabetos cifrados, escritos deslocando-se suas
letras sempre em uma posição em relação ao alfabeto da linha anterior. Portanto, a
segunda linha também corresponde ao alfabeto na forma convencional, a terceira linha
corresponde ao alfabeto deslocado em uma posição, a quarta linha em 2 posições, e
assim sucessivamente. A ﬁgura 4 representa uma Tábua de Vigenère.

Figura 4 – Tábua de Vigenère

Após a confecção da Tábua de Vigenère, deve-se combinar qual dos alfabetos
cifrados será utilizado para cifrar cada letra da mensagem. Isso pode ser feito de ma-
neira simples utilizando-se uma palavra-chave comum entre o emissor e o receptor:
escreve-se a palavra-chave de forma a se alinhar verticalmente suas letras com as letras
da mensagem e, para cada letra da mensagem a ser cifrada, utiliza-se o alfabeto da
Tábua de Vigenère que se inicia com a letra correspondente da palavra-chave. Dessa
forma, cada letra da palavra-chave determina qual alfabeto cifrado deve ser utilizado
para cifrar cada letra do texto claro. Caso a mensagem possua mais letras que a palavra-
chave, pode-se repetir a palavra-chave, seguidamente, quantas vezes forem necessárias,
de forma que se tenha uma letra da palavra-chave correspondente para cada letra do
texto claro, indicando assim qual alfabeto cifrado deve ser utilizado para cifrar aquela
letra da mensagem. Portanto, essa cifra utiliza tantos alfabetos cifrados quantas letras
distintas há na palavra-chave, de forma que não há a preservação da frequência de

Capítulo 1. Terminologia e Aspectos Históricos

25

ocorrência das letras no idioma do texto claro. Portanto, a cifra de Vigenère resiste ao
ataque de frequência utilizado na criptoanálise das cifras de substituição monoalfabé-
ticas. Como exemplo da utilização da cifra de Vigenère, vamos utilizá-la para cifrar a
frase “retas paralelas nunca param”, utilizando-se a palavra chave “GEOMETRIA”. A
letra “r” deve ser cifrada pelo alfabeto cifrado que se inicia pela letra “G”, de forma
que a letra correspondente ao “r” nesse alfabeto é a letra “X”. Em seguida, a letra “e”
deve ser cifrada pelo alfabeto cifrado que se inicia pela letra “E”, de forma que a letra
correspondente ao “e” nesse alfabeto é a letra “I”. E assim sucessivamente, até que se
obtém a mensagem completamente cifrada “XIHMWIRZARIZMWGLVCGTODEF”. A
ﬁgura 5 ilustra esse processo de cifração.

Figura 5 – Cifração Utilizando-se a Cifra de Vigenère

t

s

e

a

r
a m
G E O M E T R I A G E O M E T R I A G E O M E T
X I H M W I R Z A R I Z M W G L V C G T O D E F

n u n c

p

p

a

a

a

a

a

r

e

s

r

l

l

Pode-se observar que a letra “a” da palavra “retas” foi cifrada pela letra “M”.
Porém, na palavra “paralelas”, cada uma das letras “a” foi cifrada por uma letra
diferente, “R”, “A” e “M”, respectivamente. Portanto, ﬁca claro que a mensagem cifrada
não conserva a frequência de ocorrência de letras na língua portuguesa, idioma em que
a mensagem foi escrita. Essa é a principal vantagem da cifra de Vigenère frente às cifras
de substituição monoalfabéticas, conhecidas até então.

1.2.5 Criptoanálise da Cifra de Vigenère

O trabalho de Vigenère, que continha a descrição de sua cifra homônima, foi
publicado em 1586. A cifra era considerada tão segura que foi apelidada pelos crip-
tógrafos ao longo da história de le chiﬀre indéchiﬀrable. Portanto, pelos próximos 300
anos, os criptógrafos estariam ganhando a batalha contra os criptoanalistas. Porém,
na metade do século XIX, começaram a surgir as ideias necessárias para se conseguir
quebrar a cifra de Vigenère. Essas ideias surgiram nos trabalhos de Charles Babbage e
Friedrich Kasiski. Babbage foi um cientista britânico, que ﬁcou famoso por ter desen-
volvido o projeto de uma máquina de calcular programável, que seria o precursor dos
computadores modernos. Embora Babbage fosse um brilhante cientista, era comum
que ele não concluísse seus trabalhos (SINGH, 2011). No caso da cifra de Vigenère,
não foi diferente. Especula-se que ele conseguiu desenvolver a técnica para quebrar a
cifra por volta de 1854, mas ele nunca a publicou. Sua técnica só veio à luz no século

Capítulo 1. Terminologia e Aspectos Históricos

26

XX, quando estudiosos examinaram postumamente as suas anotações. Por outro lado,
a mesma técnica desenvolvida por Babbage foi descoberta, de maneira independente,
pelo oﬁcial da reserva do exército prussiano Friedrich Kasiski. Ele, ao contrário de
Babbage, publicou sua técnica de criptoanálise para quebrar a cifra de Vigenère no ano
de 1863, motivo pelo qual essa técnica ﬁcou conhecida como Teste de Kasiski.

Essencialmente, as estratégias tanto de Babbage quanto de Kasiski eram a
mesma. Elas consistiam em, primeiramente, tentar encontrar o tamanho da palavra-
chave utilizada na cifra de Vigenère. Para isso, eles buscavam sequências de letras
repetidas no texto cifrado. Essas sequências podem ter se formado ao acaso, mas, pro-
vavelmente, ocorreram devido ao fato de uma mesma sequência de letras do texto
claro estar alinhada com as mesmas letras da palavra-chave, produzindo assim as mes-
mas letras no texto cifrado. Caso se procure por sequências de 3 letras repetidas, por
exemplo, a probabilidade da repetição ter vindo do acaso já é bastante baixa. Portanto,
inicialmente, pode-se procurar sequências repetidas de 3 letras no texto cifrado. De-
pois disso, veriﬁca-se qual a quantidade de letras que há entre o início de uma das
sequências de 3 letras e o início das outras ocorrências da sequência. Vamos denominar
essa quantidade de letras como distância entre as repetições. Essa distância deverá
ser um múltiplo do número de letras da palavra-chave. Portanto, caso haja mais de
uma repetição da sequência de 3 letras no texto cifrado, o número de letras da palavra
chave provavelmente será um divisor comum de todas as distâncias. Essa informação
nos permite encontrar qual o número de letras da palavra-chave utilizada na cifração.
Sabendo-se o número de letras da palavra-chave, sabe-se quantos alfabetos cifrados
foram utilizados e sabe-se também a ordem em que eles foram utilizados, de forma que
se pode separar quais letras do texto cifrado foram cifradas com determinado alfabeto
cifrado. Isso permite que o problema de decifrar a cifra de Vigenère consista em decifrar
vários problemas de substituição monoalfabética, cada problema relacionado com um
dos alfabetos cifrados utilizados para cifrar a mensagem. Portanto, se a palavra-chave
contiver n letras, será necessário decifrar n cifras de substituição monoalfabética, o
que pode ser facilmente realizado por análise de frequência. Dessa forma, a cifra de
Vigenère pode ser quebrada.

Como exemplo da aplicação do método exposto, considere que, em uma troca
de mensagens cifradas utilizando-se a cifra de Vigenère, um espião intercepte a men-
sagem contida na ﬁgura 6.

Capítulo 1. Terminologia e Aspectos Históricos

27

Figura 6 – Texto Cifrado com Cifra de Vigenère

Sabendo-se que se trata de uma cifra de Vigenère, ele pode buscar sequências
de 3 letras repetidas para tentar descobrir qual o comprimento da palavra-chave utili-
zada na cifração. Essa busca pode ser facilmente realizada com o comando “Localizar”,
do software Microsoft R○ Word. Dessa forma, inicia-se buscando as sequências iniciais
do texto cifrado: “QNV”, “NVY”, “VYE”, e assim sucessivamente. Rapidamente, é
possível encontrar a sequência “EDA”, que se repete 2 vezes, com distância entre as
repetições de 21 letras. Portanto, a palavra-chave provavelmente é um dos divisores
não unitários de 21, que são 3, 7 e 21. Prossegue-se na busca por sequências de 3 letras
repetidas, e encontra-se facilmente a sequência “EGI”, que também se repete 2 vezes,
com uma distância entre as repetições de 686 letras. Portanto, analogamente, a palavra-
chave provavelmente é um dos divisores não unitários de 686, que são 2, 7, 14, 49, 98,
343 e 686. O único número comum nas 2 listas de divisores é o número 7. Portanto,
provavelmente a palavra-chave possui 7 letras. As repetições das sequências “EDA” e
“EGI” podem ser visualizadas na ﬁgura 7.

Capítulo 1. Terminologia e Aspectos Históricos

28

Figura 7 – Repetições das sequências “EDA” e “EGI”

Sabendo-se que a palavra-chave possui 7 letras, basta separar as letras da men-
sagem cifrada de acordo com sua posição em relação às letras da palavra-chave, e tentar
quebrar 7 cifras de substituição monoalfabética. Iniciando-se pelas letras do texto ci-
frado que correspondem à primeira letra da palavra-chave, deve-se agrupar todas as
letras que ocupam posições congruentes a 1 modulo 7, isto é, deve-se agrupar as letras
das posições 1a, 8a, 15a e assim sucessivamente, até o ﬁnal da mensagem cifrada. Isso
pode ser feito sem maiores diﬁculdades utilizando-se o software Microsoft R○ Excel.
Pode-se utilizar o mesmo software para realizar uma contagem de letras e análise de
frequência. O conjunto de letras correspondentes às posições congruentes a 1 modulo 7
da mensagem cifrada, bem como suas respectivas frequências, podem ser observadas
na tabela 1.

Capítulo 1. Terminologia e Aspectos Históricos

29

Tabela 1 – Letras Cifradas com 1a Letra da Palavra-Chave e Frequências

As frequências de ocorrência das letras podem, enﬁm, ser comparadas com as
frequências de ocorrência das letras no idioma em que a mensagem foi escrita pois,
agora, trata-se de uma sequência de letras cifrada de maneira monoalfabética, isto é,
com apenas um alfabeto cifrado. Como se sabe que o texto claro foi escrito em por-
tuguês, basta comparar suas frequências com as frequências de ocorrências das letras
da língua portuguesa. Nesta dissertação, as frequências das letras em língua portu-
guesa foram obtidas a partir do trabalho de (QUARESMA, 2008), que realizou uma
compilação de frequências a partir da contagem de letras em 141 obras de 47 autores
consagrados da língua portuguesa. Essas frequências podem ser observadas na tabela 2.

Capítulo 1. Terminologia e Aspectos Históricos

30

Tabela 2 – Frequências das Letras na Língua Portuguesa (QUARESMA, 2008)

Portanto, comparando-se as frequências das letras cifradas utilizando-se a 1a le-
tra da palavra-chave com as frequências da língua portuguesa, pode-se inferir algumas
coisas sobre a palavra-chave. Primeiramente, analisando-se a letra de maior frequência
nas letras cifradas, a letra “M”, observa-se que, provavelmente, corresponda à letra
“a” da mensagem clara, pois essa é a letra de maior frequência na língua portuguesa.
Para que isso tenha ocorrido, a letra “a” deve ter sido cifrada utilizando-se o alfabeto
cifrado que se inicia com a letra “M”. Portanto, pela análise da letra de maior frequên-
cia, chega-se à possibilidade de a primeira letra da palavra-chave ser a letra “M”. Isso
pode ser conﬁrmado analisando-se as frequências da segunda e da terceira letra mais
frequentes nas letras cifradas. Como a letra “Q” é a segunda mais frequente nas letras
cifradas, deve corresponder à letra “e” do texto claro, assim como a letra “A”, que é
a terceira mais frequente nas letras cifradas, deve corresponder à letra “o” do texto
claro. Essa correspondência ocorre exatamente quando se utiliza o alfabeto cifrado que
se inicia com a letra “M”. Portanto, conﬁrma-se a hipótese de que a primeira letra da
palavra-chave é a letra “M”.

Adotando-se o mesmo procedimento para cada um dos outros 6 grupos de le-
tras, correspondentes às posições congruentes à 2, 3, 4, 5, 6 e 0 modulo 7, obtém-se cada
uma das demais letras da palavra-chave. Fica de exercício para o leitor que se sentir
desaﬁado encontrá-las. Para os demais leitores, segue na ﬁgura 8 a palavra-chave com-
pleta, bem como o texto claro, obtido pela decifração da mensagem utilizando-se essa
palavra-chave.

Capítulo 1. Terminologia e Aspectos Históricos

31

Figura 8 – Palavra-Chave e Texto Claro

Percebe-se, portanto, que o texto claro se trata do último capítulo da obra Me-

mórias Póstumas de Brás Cubas, de Machado de Assis.

1.2.6 One-Time Pad, a Cifra Perfeita

Com a quebra da cifra de Vigenère, os criptógrafos estavam, mais uma vez, per-
dendo a batalha contra os criptoanalistas. Ninguém podia garantir que as mensagens
secretas que circulavam cifradas com a cifra de Vigenère não seriam quebradas por
alguém que conhecesse as estratégias desenvolvidas por Babbage e Kasiski. Portanto,
era necessário e urgente que se desenvolvesse uma nova cifra, mais forte que a geração
anterior. Os criptógrafos começaram analisando qual foi a fraqueza que permitiu a
criptoanálise da cifra de Vigenère, e concluíram que sua grande vulnerabilidade era o
fato de os alfabetos cifrados se repetirem com alguma periodicidade, igual ao compri-
mento da palavra-chave. Era essa periodicidade que permitia que se transformasse o
problema de uma substituição polialfabética em várias substituições monoalfabéticas.
Portanto, para sanar esse problema, bastaria que se utilizasse uma palavra-chave tão
longa quanto a própria mensagem a ser cifrada, de forma que não houvesse mais a
periodicidade dos alfabetos cifrados, observada com palavras-chave menores. Apesar
da diﬁculdade de se utilizar uma palavra-chave tão longa, aparentemente a segurança
que esta palavra-chave trazia à cifra compensava o esforço. Mas, com uma análise mais
precisa, pode-se veriﬁcar que, mesmo com uma palavra-chave de comprimento tão
grande quanto a própria mensagem, essa cifra ainda pode ser decifrada por um cripto-
analista persistente. Ele pode proceder da seguinte forma: sabendo em qual idioma a
mensagem foi cifrada, ele sabe que, provavelmente, algumas palavras mais frequentes
naquele idioma estarão presentes na mensagem. Na língua portuguesa, por exemplo,
de acordo com (QUARESMA, 2008), as palavras com 3 letras mais frequentes são “que”,
“não”, “com” e “uma”, nesta ordem. Portanto, o criptoanalista pode supor que essas

Capítulo 1. Terminologia e Aspectos Históricos

32

palavras frequentes aparecerão ao longo do texto. Ele pode alinhar essas palavras em
posições aleatórias do texto cifrado, e veriﬁcar qual deveria ser o “pedaço de palavra-
chave” necessário para que aquele trecho fosse cifrado conforme a palavra comum
da língua que ele alinhou naquele local. Se esse pedaço de palavra-chave obtido ﬁzer
algum sentido no idioma da mensagem, isso é uma pista de que, de fato, aquele é
um pedaço autêntico da palavra-chave. Esse método é bastante exaustivo, pois exige
muitas tentativas de se posicionar as palavras comuns do idioma no texto cifrado e
obter pedaços de palavra-chave, a maioria deles sem qualquer sentido. Mas um bom
criptoanalista, com bastante dedicação e um pouco de sorte, poderia quebrar essa cifra.
Seria necessário um modelo de cifra ainda mais segura.

Novamente, analisando onde estava a fraqueza da cifra, os criptógrafos percebe-
ram que, mesmo com palavras-chave de mesmo comprimento da mensagem original, a
cifra poderia ser quebrada porque o criptoanalista poderia obter pistas sobre pequenos
pedaços da palavra-chave alinhando palavras comuns no idioma aleatoriamente no
texto. Portanto, a fraqueza da cifra estava no fato de o criptoanalista conseguir iden-
tiﬁcar que esses pequenos pedaços da palavra-chave faziam algum sentido naquele
idioma, sendo assim bons candidatos para estarem corretos de fato. Portanto, para im-
pedir esse tipo de ataque, bastaria que a palavra-chave não ﬁzesse qualquer sentido em
qualquer idioma. Indo mais além, caso a palavra-chave não contivesse nenhum padrão
reconhecível em sua estrutura, o criptoanalista não teria pistas se estaria descobrindo a
palavra-chave correta ou não. Seguindo por esse caminho, o major Joseph Mauborgne,
na época diretor de pesquisa criptográﬁca do exército americano, introduziu o conceito
de chave aleatória, que consistia em uma sequência de letras desprovida de qualquer
padrão ou signiﬁcado (SINGH, 2011). O major Mauborgne propunha o uso de um bloco
de folhas de papel, com uma chave aleatória em cada página do bloco, e cada página
deveria ser usada apenas uma vez para cifrar a mensagem, para não dar a oportunidade
de o criptoanalista comparar 2 mensagens cifradas com a mesma página. Nascia aí o
conceito de cifra one-time pad. Essa cifra, inicialmente descrita por Gilbert Vernam, em
1917, para a cifração de mensagens telegráﬁcas, não utilizava letras, mas sim bits como
carregadores de informação. Como ela foi concebida para ser utilizada com o telégrafo,
antes de se cifrar a mensagem, era necessário codiﬁcá-la, de acordo com o padrão te-
legráﬁco, resultando em uma sequência de zeros e uns, que na terminologia atual são
chamados de bits. Essa sequência de bits deveria ser “mesclada” com a sequência de
bits correspondente à palavra-chave, obtendo-se assim o texto cifrado, também em bits.
A maneira como se deveria mesclar a mensagem clara com a palavra-chave, ambas em
bits, é a operação binária conhecida como XOR ou exclusive or, que opera da seguinte
forma: a cada par de bits de entrada, a operação atribui um bit de saída de acordo
com a paridade dos bits de entrada, isso é, caso os bits de entrada sejam iguais (ambos
zeros ou ambos uns), a operação retorna o bit zero, do contrário, a operação retorna o

Capítulo 1. Terminologia e Aspectos Históricos

33

bit um. É imediato perceber que essa operação corresponde simplesmente à adição em
Z
2. O problema da cifra proposta por Vernam é que ela reutilizava chaves, tornando-a
suscetível a ataques. Portanto, o verdadeiro conceito de one-time pad, com utilização
única de cada chave, foi aquele proposto pelo major Mauborgne (SINGH, 2011). A cifra
one-time pad, conforme foi provado por Shannon, era um exemplo de cifra que possuía
a propriedade que ele denominou segredo perfeito (perfect secrecy), isto é, o texto ci-
frado não fornecia qualquer informação adicional a respeito da mensagem clara. Dessa
forma, tratava-se de uma cifra perfeita no quesito segurança, ela era completamente
imune aos ataques dos criptoanalistas.

Porém, a cifra one-time pad, apesar de ser imune aos ataques dos criptoanalistas,
não resolvia todos os problemas da criptograﬁa da época, pois sua utilização é difícil
de ser implementada, por uma série de motivos. Primeiramente, porque é necessário
que emissor e receptor tenham o mesmo bloco de palavras-chave a serem usadas uma
única vez em cada mensagem trocada. A logística de distribuição desses blocos fre-
quentemente é bastante complexa, o que gera muitos custos. Outro problema dessa
cifra é a diﬁculdade de se gerar chaves realmente aleatórias em grande quantidade. A
aleatoriedade das chaves não é simples de ser obtida, sendo frequentemente retirada
de fenômenos naturais, como decaimento radioativo e ruído de diodos. Na prática,
utilizam-se chaves denominadas pseudoaleatórias, que consistem em chaves produ-
zidas a partir de chaves realmente aleatórias (denominadas seeds ou sementes), e que
guardam a maior parte das propriedades estatísticas da aleatoriedade necessárias para
a aplicação criptográﬁca segura. Para mais detalhes sobre geradores de chaves pseu-
doaleatórias, pode-se consultar (JUNIOR, 2014). Portanto, apesar de completamente
segura, a cifra one-time pad é extremamente difícil de ser viabilizada na prática, devido
à complexa logística de distribuição dos blocos de chaves e à diﬁculdade na geração
de chaves verdadeiramente aleatórias. Devido a toda essa necessidade logística, o uso
dessa cifra só se justiﬁca em casos de comunicações ultrassecretas, que podem arcar
com esse custo logístico. Um exemplo de comunicação que utiliza essa cifra é o cha-
mado “telefone vermelho” entre os presidentes dos Estados Unidos e da Rússia, uma
linha direta que permite que Washington se comunique com Moscou de maneira segura
(SINGH, 2011).

1.2.7 Criptograﬁa na Era dos Computadores

Com o surgimento dos computadores digitais, a maneira como a informação
trafegava mudou, e isso exigiria que a criptograﬁa responsável pela segurança dessas
informações também mudasse. Não seria possível utilizar palavras-chave no universo
dos computadores, porque eles lidam apenas com sequências de bits. Dessa forma, a
primeira modiﬁcação necessária para que as cifras pudessem ser utilizadas em ambi-

Capítulo 1. Terminologia e Aspectos Históricos

34

entes de computador é a representação, tanto da mensagem clara quanto da chave da
cifra, em uma linguagem adequada para a manipulação por meio de um computador
digital, ou seja, uma sequência de bits. Para isso, é necessário que se estabeleça um
código que faça a correspondência entre cada elemento da mensagem ou da chave em
uma sequência de bits. Um protocolo muito utilizado para fazer essa correspondência
é o American Standard Code for Information Interchange, ou simplesmente ASCII, como
é mais conhecido. O padrão ASCII codiﬁca as letras do alfabeto ocidental, maiúsculas
e minúsculas, além de uma série de outros símbolos utilizados na escrita, em uma
sequência de 7 bits. Porém, o ASCII apresenta uma desvantagem para os usuários
da língua portuguesa, porque ele não permite a codiﬁcação de caracteres acentuados
nem do caractere “cê-cedilha”. Após a conversão da mensagem clara e da chave em
uma sequência de bits utilizando-se um protocolo de codiﬁcação, por exemplo o AS-
CII, pode-se ﬁnalmente utilizar as cifras para cifrar a mensagem. As cifras aplicadas
a sequências de bits funcionam da mesma maneira que aplicadas em sequências de
letras, isto é, se baseiam nos princípios de transposição e substituição. Na transposição,
ocorre um rearranjo dos bits em uma sequência distinta da sequência original, ao passo
que na substituição ocorre a troca do valor dos bits. Qualquer cifra implementada em
um computador, por mais complexa que seja, consiste em uma sequência de transposi-
ções e substituições de bits, aplicadas em alguma ordem especíﬁca. Uma característica
interessante das transposições de sequências de bits é que pode haver transposição
entre bits provenientes de letras diferentes, pois cada letra é representada por mais de
um bit.

No universo das cifras que trabalham com sequências de bits, há 2 tipos básicos
de cifras, que funcionam de maneiras distintas: as Stream ciphers e as Block ciphers. As
Stream ciphers realizam a cifração de cada bit, individualmente, por meio de uma ope-
ração XOR realizada entre o bit da mensagem e o bit da key stream, que é uma espécie
de chave que é gerada a partir da chave da cifra, ou a partir de uma combinação entre
a chave da cifra e a própria sequência binária que está sendo gerada (ciphertext). Caso a
key stream dependa apenas da chave da cifra, essa cifra é denominada síncrona, caso de-
penda também do ciphertext que está sendo gerado, essa cifra é denominada assíncrona.
É possível observar que, como a Stream cipher opera bit a bit, ela não realiza transposi-
ções na mensagem, apenas substituições. Por outro lado, as denominadas Block ciphers,
ou cifras de bloco, realizam a cifração de blocos inteiros de bits da mensagem clara,
de tamanho ﬁxo, obtendo-se assim blocos inteiros de bits de mensagem cifrada, com
o mesmo tamanho dos blocos de bits da mensagem original. Nesse tipo de cifra, pode
ocorrer tanto a transposição quanto a substituição de bits, promovendo assim uma
maior segurança para a cifra. Neste trabalho não serão abordadas as Stream ciphers com
mais detalhes. Para uma abordagem mais detalhada, podem ser consultados (PAAR
C.; PELZL, 2010) ou (STINSON, 2006).

Capítulo 1. Terminologia e Aspectos Históricos

35

Com o avanço da tecnologia dos transistores, foi possível produzir computado-
res cada vez mais baratos e compactos, de forma que seu uso foi aumentando cada vez
mais. Por volta da década de 1960, cada vez mais empresas utilizavam computadores no
seu dia a dia, e buscavam métodos de cifração para proteger as suas informações mais
sensíveis, como por exemplo informações sobre transações bancárias. Nesse momento,
a utilização em larga escala da criptograﬁa saiu dos círculos militares e governamentais,
passando a fazer parte do dia a dia de segmentos da comunidade empresarial. Com
essa enorme expansão da atividade computacional e criptográﬁca no mundo, houve
também uma enorme demanda por cifras eﬁcientes e seguras. Nessa época, surgiram
várias cifras distintas, que eram utilizadas pelas empresas sem qualquer controle. Isso
acarretou diversos problemas por não haver uma padronização das cifras, pois cada
usuário tinha a liberdade de escolher a sua cifra, diﬁcultando assim a troca de infor-
mações entre entes que utilizassem cifras diferentes. Para tentar sanar esse problema
de padronização, em 1973, o National Bureau of Standards - NBS norte-americano, (atual
National Institute for Standards and Technology - NIST) solicitou propostas de cifras a se-
rem apresentadas pela comunidade de criptograﬁa mundial, com o objetivo de escolher
uma cifra e torná-la padrão da troca de mensagens criptografadas no âmbito federal dos
Estados Unidos. Várias cifras foram apresentadas, mas a vencedora foi a cifra Lucifer,
uma cifra de blocos de propriedade da empresa IBM. A cifra Lucifer foi desenvolvida
pelo pesquisador Horst Feistel, quando ele trabalhava no laboratório Thomas J. Watson
da IBM, nos arredores de Nova York. A versão original da cifra Lucifer trabalhava com
blocos de 64 bits de texto claro e utilizava chaves de 128 bits. Porém, o NBS, aconselhado
pela Nacional Security Agency - NSA norte-americana, solicitou que a cifra fosse modiﬁ-
cada, de forma que o novo tamanho das chaves deveria ser de 56 bits. Essa modiﬁcação
reduziu a segurança da cifra, de forma que, acredita-se, a própria NSA seria capaz de
quebrar a cifra com esse novo comprimento de chave, motivo pelo qual foi solicitada a
mudança na cifra original, que possuía chaves com 128 bits (SINGH, 2011). Após essa
mudança, a cifra foi rebatizada de Data Encryption Standard - DES, e passou a ser usada
como o padrão de toda a criptograﬁa não sensível na esfera federal norte-americana,
com a publicação da Federal Information Processing Standard - FIPS 46, em 1977 (NIST,
1999). O DES ﬁgurou como padrão de criptograﬁa norte-americana por 22 anos, pois
se mostrou uma cifra robusta e resistente aos diversos tipos de ataques disponíveis na
época. Como se trata de uma cifra de bloco, sua força reside na combinação de opera-
ções de transposição e substituição de bits, de modo a proporcionar ao texto cifrado 2
propriedades fundamentais para que uma cifra resista aos ataques dos criptoanalistas:
a difusão e a confusão. Esses 2 termos foram introduzidos na literatura criptográﬁca
por Shannon, com seus estudos sobre criptograﬁa e teoria da informação, e podem ser
resumidos da seguinte forma: a difusão em uma cifra consiste em, a partir de uma
pequena mudança no texto claro, por exemplo 1 bit, obter-se uma grande mudança

Capítulo 1. Terminologia e Aspectos Históricos

36

no texto cifrado, em vários bits. Essa propriedade é importante pois, a partir do texto
cifrado, não se obtém informações signiﬁcativas a respeito das propriedades estatísticas
do texto claro. Quem proporciona a difusão é geralmente a operação de transposição de
bits e suas variações. Por sua vez, a propriedade de confusão em uma cifra consiste em
cada bit do texto cifrado depender de vários bits da chave, de forma a se ter uma relação
obscura entre os bits do texto cifrado e os bits da chave. Quem proporciona a confusão
é geralmente a operação de substituição de bits e suas variações. Shannon propôs que,
para se ter uma cifra forte, deve-se concatenar várias operações que provoquem tanto
difusão quanto confusão ao bloco de bits a ser cifrado. As cifras que promovem essas
sequências de difusão e confusão são denominadas cifras produto, e o DES é uma delas,
motivo pelo qual se mostrou uma cifra resistente por bastante tempo. Os detalhes a
respeito do funcionamento da cifra DES serão apresentados no Capítulo 2, Seção 2.1.

No ﬁnal da década de 90, o NIST reconheceu que a cifra DES já não era mais
suﬁcientemente segura para as aplicações de criptograﬁa governamental da época. Em
1999, em um concurso promovido pelo RSA Laboratories Inc., o DES foi quebrado no
tempo recorde de 22 horas e 15 minutos, por um grupo de aproximadamente 100.000
computadores pessoais, conectados pela internet, que trabalhavam juntos na tentativa
de quebrar a cifra por força bruta (SALOMON, 2006). Portanto, era necessário encontrar
um substituto para o DES. Como uma medida paliativa, em 1999, o NIST recomendou
o uso de uma cifra semelhante ao DES, porém adaptada, denominada triploDES, ou
3DES, que consistia em se aplicar a cifra DES 3 vezes consecutivas, cada uma delas com
uma chave diferente (NIST, 1999). Essa cifra, apesar de segura, era muito mais lenta
computacionalmente que o DES, e sua implementação em software não permitia muitas
otimizações. Antes disso, em janeiro de 1997, o NIST lançou um novo concurso para
escolher deﬁnitivamente uma cifra substituta para o DES. O processo de escolha durou
4 anos e contou com a participação de vários pesquisadores, que propuseram várias
cifras, como por exemplo as cifras MARS, RC6, Serpent e Twoﬁsh, entre outras. Porém,
a cifra vencedora do concurso foi a cifra Rijndael, desenvolvida pelos pesquisadores
belgas Vincent Rijmen e Joan Daemen, daí o seu nome Rijndael, uma junção dos nomes
de seus desenvolvedores. Assim, em outubro de 2000, o Rijndael foi escolhido pelo
NIST como nova cifra padrão para a criptograﬁa não sensível no âmbito federal dos
Estados Unidos, e foi denominado Advanced Encryption Standard - AES, passando a ser
realmente adotado como padrão criptográﬁco mundial a partir de novembro de 2001.
Sua publicação em dezembro de 2001, por meio da FIPS 197, tornou pública a cifra
AES (NIST, 2001). Trata-se de uma cifra de bloco, que funciona de maneira semelhante
ao DES, promovendo várias rodadas que implementam tanto difusão quanto confusão
no texto cifrado. O AES trabalha com blocos de 128 bits de texto claro, e existem 3
possibilidades de tamanho para a chave: podem-se ter chaves de 128 bits e, nesse
caso, o algoritmo necessitará de 10 rodadas ou “rounds” para cifrar a mensagem,

Capítulo 1. Terminologia e Aspectos Históricos

37

podem-se ter chaves de 192 bits e, nesse caso, o algoritmo necessitará de 11 rodadas
ou, por ﬁm, podem-se ter chaves de 256 bits e, nesse caso, o algoritmo necessitará de
12 rodadas. Observa-se que, mesmo sendo o tamanho das chaves ﬂexível, ainda assim
o menor tamanho possível, 128 bits, é mais que o dobro dos 56 bits da chave da cifra
DES. Isso diﬁculta o ataque ao AES por força bruta, porque o número de chaves que
devem ser tentadas é absurdamente maior. Atualmente, o AES ainda é usado como
padrão de criptograﬁa mundial, dada a sua versatilidade aliada a sua robustez contra
os ataques dos criptoanalistas. Os detalhes a respeito do funcionamento da cifra AES
serão apresentados no Capítulo 2, Seção 2.2.

1.2.8 Diﬁculdades na Troca de Chaves e o Surgimento da Criptograﬁa

de Chave Pública

Na década de 70, embora a adoção da cifra DES resolvesse com segurança o
problema de padronização das cifras utilizadas pelas empresas ao redor do mundo,
ainda havia um problema que precisava ser resolvido para viabilizar uma comunicação
global segura: a troca de chaves entre as partes. Tudo que se conhecia sobre criptograﬁa
até aquele momento, desde as cifras de deslocamento mais primitivas, até o moderno
DES, necessitava de uma premissa crucial para o funcionamento: emissor e receptor
deveriam conhecer a mesma chave secreta, para que o receptor pudesse decifrar a men-
sagem cifrada pelo emissor. Esse compartilhamento da chave nem sempre era possível
de ser realizado por um meio seguro. Uma chamada telefônica, por exemplo, poderia
ser interceptada, ou uma correspondência poderia ser violada. Portanto, muitas ve-
zes a troca de chaves era realizada de maneira presencial, para que fosse garantida
a segurança do processo. O problema é que esse método de distribuição de chaves é
extremamente caro e ineﬁciente quando se deseja trocar mensagens cifradas com enti-
dades espalhadas por todo o mundo. Havia a necessidade de se desenvolver alguma
técnica que permitisse uma troca segura de chaves, mesmo que o trânsito da infor-
mação se desse por meio de um canal inseguro. Nem mesmo se sabia se era possível
desenvolver tal técnica, sendo a ideia negligenciada por muitos criptógrafos da época,
que acreditavam ser impossível existir algo do tipo (SINGH, 2011). Portanto, quem
resolvesse o problema da distribuição de chaves de maneira segura e eﬁcaz, estaria
seguramente imortalizando seu nome na própria história da criptograﬁa. Tratava-se
da busca pelo santo graal da criptograﬁa do século XX.

Essa busca chegou ao ﬁm no ano de 1976, quando os pesquisadores Whitﬁeld
Diﬃe e Martin Hellman, da Universidade de Stanford, e, de maneira independente,
Ralph Merkle, da Universidade da Califórnia, introduziram o conceito de criptograﬁa
de chave pública, também denominada criptograﬁa assimétrica. Neste novo modelo
criptográﬁco, não havia a necessidade de um compartilhamento prévio de chave entre

Capítulo 1. Terminologia e Aspectos Históricos

38

emissor e receptor, pois a técnica permitia justamente esse compartilhamento da chave
de maneira segura, mesmo que a troca de informação se desse por meio de um canal
inseguro. Em linhas gerais, a ideia desenvolvida pelos pesquisadores foi a seguinte:
suponha que Alice deseja compartilhar uma chave secreta com Bob. Para isso, ela
coloca a chave secreta em uma caixa, tranca a caixa com um cadeado do qual somente a
própria Alice possui a chave, e envia a caixa para Bob. Esse envio pode ocorrer mesmo
em um canal inseguro, pois somente Alice possui a chave do cadeado. Quando Bob
recebe a caixa, ele não pode abri-la, pois não possui a chave do cadeado de Alice. Bob
então coloca um novo cadeado na caixa, paralelamente ao cadeado de Alice, do qual
somente o próprio Bob possui a chave, e envia a caixa de volta para Alice, com os 2
cadeados trancados. Esse envio é duplamente seguro, pois, para se abrir a caixa, são
necessárias as chaves tanto de Bob como de Alice. Quando Alice recebe a caixa com
os 2 cadeados, ela destranca o seu próprio cadeado, e reenvia a caixa para Bob, agora
trancada somente com o cadeado do próprio Bob. Finalmente, quando Bob recebe a
caixa, ele pode destrancá-la com a chave do seu próprio cadeado e ler o conteúdo
da caixa, que corresponde à chave secreta escolhida por Alice. Portanto, agora ambos
conhecem uma chave secreta e podem utilizá-la para trocar mensagens utilizando-se
uma cifra qualquer. Observa-se que, ao longo de todos os envios da caixa com os
cadeados, mesmo que um espião, Eve, conseguisse interceptar a caixa no processo de
envio, ele nada poderia fazer para conhecer seu conteúdo, pois não dispunha nem da
chave de Alice nem da chave de Bob. Estava resolvido, ao menos de maneira teórica, o
problema da troca segura de chaves por meio de canais inseguros. Porém, era necessário
encontrar uma maneira de implementar a ideia, de forma que ela pudesse ser aplicada
ao universo criptográﬁco da época. Era necessário que fossem desenvolvidos “cadeados
criptográﬁcos”, que permitissem a troca de informações na forma de sequências de bits.
Diﬃe e Hellman encontraram uma maneira de operacionalizar essa ideia utilizando as
operações de exponenciação em corpos ﬁnitos como “funções cadeado”. Essas funções
são adequadas para o propósito porque são funções denominadas funções de uma
única via (one-way functions), isto é, dados 2 números naturais, denominados α e x, é
relativamente fácil realizar computacionalmente a exponenciação αx ≡ k mod(p) em um
Z*
p qualquer. Porém, dados k e α, é computacionalmente custoso encontrar o expoente
x = logαk em Z*
p. Esse problema é conhecido como problema do logaritmo discreto, e
sua intratabilidade computacional é a base para o funcionamento do algoritmo de troca
de chaves proposto por Diﬃe e Hellman. Esse algoritmo de troca de chaves por meio
de um canal inseguro ﬁcou conhecido na comunidade criptográﬁca como algoritmo de
troca de chaves de Diﬃe-Hellman.

Além da divulgação do algoritmo inovador para troca segura de chaves, em
1975, antes mesmo da descoberta desse algoritmo, os pesquisadores publicaram um
artigo em que propuseram as bases de algo também inovador para aquela época, eles

Capítulo 1. Terminologia e Aspectos Históricos

39

propuseram o conceito que hoje é conhecido como criptograﬁa de chave pública ou
criptograﬁa assimétrica. Nesse novo conceito de criptograﬁa, a troca de mensagens
entre emissor e receptor não necessitaria mais de uma chave secreta conhecida por
ambos. Para exempliﬁcar o novo conceito, vamos supor que Alice desejasse mandar
uma mensagem criptografada para Bob. Para isso, Alice utilizaria uma chave de Bob,
conhecida como chave pública, que é amplamente divulgada por Bob. De posse da
chave pública de Bob, Alice a utilizaria para cifrar a mensagem e a enviaria para Bob.
Ele, ao receber a mensagem cifrada, utilizaria uma outra chave, conhecida como chave
privada, para decifrar a mensagem e ler seu conteúdo. Para garantir a segurança do
processo, somente Bob deve conhecer sua chave privada. A ideia inovadora deste
tipo de criptograﬁa está na utilização de funções especíﬁcas, as chamadas funções de
uma única via, que, com algum engenho, permitem que somente o detentor da chave
privada possa decifrar uma mensagem cifrada com a chave pública, e que a obtenção da
chave privada a partir da chave pública seja um processo computacionalmente custoso.
Portanto, mesmo que o espião Eve pudesse interceptar a mensagem cifrada com a chave
pública de Bob, ele não poderia decifrá-la, pois não conhece a chave privada de Bob,
e é difícil obtê-la conhecendo-se somente a chave pública de Bob. Portanto, esse tipo
de criptograﬁa garantia o segredo da mensagem enviada em um canal inseguro, sem
que fosse necessária a utilização de uma chave secreta comum conhecida somente por
Alice e Bob.

Após a divulgação das ideias novas sobre troca de chaves e criptograﬁa segura
por meio de canais inseguros, vários pesquisadores da comunidade criptográﬁca se
debruçaram sobre o problema de encontrar funções adequadas para esse propósito,
as chamadas funções de mão única, e esses cientistas buscavam desenvolver uma ci-
fra realmente eﬁciente e aplicável à troca de informações criptografadas por meio de
sequências de bits, que são a linguagem dos computadores. Em 1977, os pesquisadores
do Massachusetts Institute of Technology Ron Rivest, Adi Shamir e Leonard Adleman de-
senvolveram uma cifra completamente nova, que utilizava a diﬁculdade de se fatorar
computacionalmente números compostos muito grandes como função de uma única
via, o que tornava a sua cifra forte. Eles deram o nome de RSA para a cifra, em referência
às iniciais de seus nomes. Pela sua simplicidade e facilidade de implementação, o RSA
foi imediatamente adotado pelos governos e empresas que necessitavam de cifras segu-
ras para mensagens que circulariam em canais inseguros. Os 3 pesquisadores do MIT
fundaram uma empresa para comercializar sua cifra, a RSA Data Security Inc. Apesar
de ser uma cifra segura e simples de se implementar, o RSA exige uma capacidade de
processamento computacional relativamente alta, pois trabalha com exponenciações de
números muito grandes. Dessa forma, o RSA não foi utilizado de maneira ampla como
uma cifra para troca de mensagens longas, pois a necessidade computacional se torna-
ria proibitiva. Alternativamente, utilizava-se o RSA para realizar a troca de pequenas

Capítulo 1. Terminologia e Aspectos Históricos

40

mensagens, frequentemente chaves, que pudessem ser utilizadas como chaves secretas
na criptograﬁa simétrica, por exemplo com a cifra AES, que é computacionalmente
muito mais “leve” que o RSA. Essa estratégia de se utilizar uma cifra de criptograﬁa
assimétrica para trocar as chaves da criptograﬁa simétrica é a base de funcionamento
dos atuais protocolos SSL/TLS de comunicação segura na internet.

Apesar de a cifra RSA ser extremamente simples de se implementar, ela exige
uma capacidade computacional relativamente grande para a troca de mensagens lon-
gas. Também, sua segurança reside na diﬁculdade computacional de se fatorar núme-
ros compostos muito grandes. Portanto, à medida que a capacidade computacional
avança, com a fabricação de processadores cada vez mais potentes, para se manter a
segurança do RSA é necessário que sejam utilizados números cada vez maiores, para
diﬁcultar a fatoração. Essa é uma das grandes desvantagens do RSA, sua necessidade
de chaves cada vez maiores ao longo dos anos, de forma que a necessidade de capa-
cidade computacional para se trabalhar com essas chaves enormes é cada vez maior.
Buscando contornar esse problema, em 1986, os pesquisadores Neal Koblitz e Victor
Miller, independentemente, propuseram as bases do que se conhece atualmente como
criptograﬁa de curvas elípticas - ECC. Tratava-se de um tipo de criptograﬁa assimétrica
que utilizava uma função de uma única via bastante inusitada para conferir segurança
à cifra: a segurança da ECC se baseava na intratabilidade computacional do problema
do logaritmo discreto adaptado ao universo da operação de multiplicação de pontos
de curvas elípticas deﬁnidas sobre corpos ﬁnitos por um número inteiro. Para o enten-
dimento desse tipo de cifra assimétrica exigia-se um conhecimento matemático muito
mais profundo do que para o pleno entendimento do RSA, motivo pelo qual a cripto-
graﬁa ECC demorou um pouco para ser aceita e utilizada de maneira mais ampla pela
comunidade de criptograﬁa mundial. A principal vantagem da criptograﬁa ECC sobre
o RSA é o reduzido tamanho das chaves necessárias para se garantir o mesmo nível de
segurança. Enquanto as chaves recomendadas atualmente para se garantir segurança
com o RSA possuem comprimento em torno de 4096 bits, as chaves recomendadas para
cifras de ECC possuem comprimento em torno de 521 bits para prover o mesmo nível
de segurança (ICP-BRASIL, 2018).

O surgimento da ideia de criptograﬁa assimétrica revolucionou a utilização
criptográﬁca conhecida até aquele momento, pois o conceito de segurança das cifras
de criptograﬁa assimétrica é bastante diferente do conceito de segurança das cifras
de criptograﬁa simétrica. Enquanto na criptograﬁa simétrica a segurança da cifra re-
side na chave secreta, a força das cifras de criptograﬁa assimétrica não está somente
no caráter secreto da chave, mas sim nas limitações computacionais para se realizar
certos tipos de operações matemáticas em um tempo reduzido. Isto é, na computação
clássica, não se conhecem algoritmos de complexidade polinomial para o tratamento
dos problemas matemáticos envolvidos nas cifras de criptograﬁa assimétrica. Em li-

Capítulo 1. Terminologia e Aspectos Históricos

41

nhas gerais, a complexidade de um algoritmo é dita polinomial quando o seu tempo
de execução é limitado superiormente por um polinômio P(n) de grau ﬁnito, em que
n é o comprimento da entrada do algoritmo. Com a capacidade dos computadores
clássicos da atualidade, os problemas para os quais existem algoritmos de complexi-
dade polinomial podem ser resolvidos computacionalmente, o que inviabiliza a sua
utilização em criptograﬁa. Portanto, para se garantir a segurança dos algoritmos de
criptograﬁa assimétrica, essas cifras devem ser baseadas em problemas matemáticos
para os quais não se conheçam algoritmos clássicos de complexidade computacional
polinomial. Também, a segurança desses algoritmos depende de outro fator crucial: a
inexistência de compudadores quânticos na atualidade. Isso ocorre pois já se conhecem
algoritmos passíveis de implementação em processadores quânticos e que resolvem,
em tempo polinomial, problemas intratáveis da computação clássica. Por exemplo, em
1994, o pesquisador Peter Shor, do AT&T Bell Laboratories, desenvolveu um algoritmo
quântico capaz de resolver em tempo polinomial problemas intratáveis da computação
clássica. Para mais detalhes sobre o trabalho de Shor, podem ser consultados (SHOR,
1997) e (COUTINHO, 2000). Neste trabalho, serão abordados 2 tipos de algoritmo de
criptograﬁa assimétrica: a cifra RSA, que baseia a sua segurança no problema da fatora-
ção de inteiros grandes, e a cifra baseada em curvas elípticas, que utiliza a diﬁculdade
de se obterem certos parâmetros a partir de multiplicações de pontos de curvas elíp-
ticas por números inteiros, como base para a sua segurança. Os detalhes a respeito do
funcionamento do RSA serão apresentados no Capítulo 3, Seção 3.1, e os detalhes a
respeito do funcionamento das cifras baseadas em ECC serão apresentados no Capítulo
3, seção 3.2.

1.2.9 Necessidade da Assinatura Digital

Quando se faz uma análise mais criteriosa do modelo criptográﬁco de chave
pública, surge um questionamento sobre a autenticidade do emissor da mensagem.
Isso ocorre pois, como o receptor deve divulgar sua chave pública por meio de um
canal aberto, é possível que uma entidade estranha utilize essa chave para criptogra-
far e enviar uma mensagem ao receptor, como se se tratasse do emissor conhecido.
Em outras palavras, uma entidade estranha qualquer pode “ﬁngir” ser um emissor
conhecido pelo receptor, e enviar mensagens se passando por esse emissor conhecido.
Portanto, na troca de mensagens por meio de cifras de chave pública, é necessário
também que se garanta a autenticidade da mensagem. Essa autenticidade pode ser
assegurada utilizando-se um método bastante simples, semelhante a uma “assinatura”
na mensagem, tal qual uma assinatura feita em um documento físico, para atestar
sua autenticidade. Essa “assinatura” funciona como uma prova de que realmente se
trata do emissor legítimo da mensagem, pois ela é realizada com a chave privada do
emissor, e se supõe que nenhuma outra entidade estranha a conheça. Portanto, sem a

Capítulo 1. Terminologia e Aspectos Históricos

42

chave privada do emissor, torna-se impraticável uma “falsiﬁcação” da assinatura do
emissor autêntico. Como a troca de mensagens ocorre com a informação codiﬁcada em
sequências de bits, o processo ﬁcou conhecido como assinatura digital. Em linhas ge-
rais, o processo consiste em o emissor “assinar” a mensagem utilizando para isso uma
característica que só ele conheça. Como no processo de criptograﬁa assimétrica a chave
privada é uma característica que somente seu próprio detentor conhece, o emissor pode
aproveitar sua própria chave privada para assinar a mensagem. Dessa forma, o emissor
utiliza a sua chave privada para assinar a mensagem, de forma que o correspondente
matemático daquela chave privada, isto é, a sua chave pública, poderá ser utilizado
para atestar a veracidade da assinatura. Dessa forma, o emissor pode enviar a mensa-
gem cifrada com a chave pública do receptor e, adicionalmente, também a mensagem
cifrada com sua própria chave privada, para garantir a sua autenticidade. O problema
dessa estratégia é que, como o emissor utiliza a sua chave privada para assinar a mensa-
gem, qualquer entidade com o conhecimento de sua chave pública poderia facilmente
decifrar a assinatura e ler o conteúdo da mensagem. Portanto, o emissor não deve as-
sinar a própria mensagem secreta com a sua chave privada, mas sim algum outro tipo
de mensagem, que possa ser obtida facilmente a partir da mensagem secreta original, e
cujo conteúdo possa ser tornado público sem prejuízo ao caráter secreto da mensagem.
Em outras palavras, é necessário que se assine uma espécie de “resumo” da mensagem
original, que, caso interceptado por uma entidade estranha, não possa ser lido sem o
conhecimento da mensagem original completa. Também é necessário que esse resumo
possa ser facilmente gerado pelo receptor a partir da mensagem completa, para que
este possa comparar o resumo gerado por ele com o resumo enviado assinado pelo
emissor, veriﬁcando assim a autenticidade da mensagem. Portanto, em um processo
de troca de mensagens utilizando-se assinatura digital, o emissor envia ao receptor a
mensagem cifrada utilizando a chave pública do receptor e envia também o “resumo”
desta mensagem, cifrado utilizando a sua própria chave privada. O receptor, então,
utiliza a sua chave privada para decifrar a mensagem e ler seu conteúdo. Porém, ainda
resta dúvida a respeito da autenticidade do emissor. Então, o receptor utiliza a chave
pública da entidade que ele supõe ser a emissora e decifra o “resumo”. De posse da
mensagem clara e do seu “resumo” o receptor pode concluir se o “resumo” foi obtido,
de fato, a partir daquela mensagem clara. Caso o emissor seja autêntico, a chave pública
utilizada pelo receptor para decifrar o “resumo” levará a uma coincidência com o que
se observa na mensagem clara. Porém, caso o emissor não seja autêntico, a utilização
da chave pública do suposto emissor para decifrar o “resumo” levará a um texto que
não guarda relação com a mensagem clara, podendo assim ser constatada a fraude na
autenticidade da mensagem. Dessa forma, garantem-se tanto a integridade da men-
sagem (pois, caso ela tenha sido alterada por uma entidade estranha, essa entidade
não poderá assinar seu “resumo” como o emissor autêntico) quanto a autenticidade

Capítulo 1. Terminologia e Aspectos Históricos

43

do emissor, pois só ele poderia assinar o “resumo” com sua chave privada. Esse tipo
de resumo especial utilizado em processos de assinatura digital é denominado hash,
e há vários algoritmos conhecidos para a geração de hash. O hash deve transformar o
texto claro da mensagem em um “texto resumido”, mas não deve permitir a operação
contrária, isto é, a obtenção do texto claro a partir do hash. O hash também não deve
permitir que 2 mensagens diferentes originem o mesmo resumo, pois, nesse caso, po-
deria haver um falso positivo no processo de autenticação da mensagem. Há muitas
outras propriedades desejáveis em um hash que não serão abordadas neste trabalho,
tampouco serão abordados detalhes sobre o funcionamento dos algoritmos geradores
de hash utilizados na atualidade. Na prática, muitas vezes não se utiliza o modelo de
assinatura digital para garantir a integridade e a autenticidade das mensagens trocadas,
mas sim os chamados MACs - Message Authentication Codes e HMACs - Hashed Message
Authentication Codes, que são estruturas que permitem a conferência da autenticidade
das mensagens em ambientes de criptograﬁa de chave secreta. A grande vantagem dos
MACs e HMACS frente aos protocolos de assinatura digital está no seu custo compu-
tacional, que é muito menor que o custo dos algoritmos de assinatura digital, pois estes
utilizam cifras de chave pública, enquanto os MACS e HMACS utilizam cifras de chave
secreta e funções geradoras de hash, que são computacionalmente muito menos custo-
sas. O protocolo de segurança TLS, utilizado na troca de informações criptografadas
entre um computador e um site, por exemplo, utiliza tanto assinaturas digitais quando
HMACs no seu funcionamento (PAAR C.; PELZL, 2010). Para uma abordagem mais
ampla sobre os protocolos de assinatura digital utilizando-se algoritmos geradores de
hash, podem ser consultados (STINSON, 2006) e (TRAPPE W.; WASHINGTON, 2006),
e para uma descrição mais detalhada dos MACs e HMACS pode ser consultado (PAAR
C.; PELZL, 2010).

1.2.10 Autoridade Certiﬁcadora, Infraestrutura de Chaves Públicas e

Certiﬁcados Digitais

À medida que surge a possibilidade de o emissor utilizar a sua chave privada
para assinar o hash da mensagem a ser enviada, atestando assim a autenticidade da
mensagem, surge também um problema nesse processo. Por exemplo, se Alice envia
uma mensagem cifrada para Bob e também envia um hash da mensagem, assinado com
a sua chave privada, Bob precisa conhecer a chave pública de Alice para que possa
confrontar o hash assinado com o hash gerado após a decifração da mensagem. Por
outro lado, Alice também precisa conhecer a chave pública de Bob, para que possa
cifrar a mensagem e enviá-la a Bob. Portanto, é necessário que ambos conheçam as
chaves públicas um do outro. Ora, mas como as chaves públicas são ostensivamente
divulgadas, isso não deveria ser um problema. Porém, supondo que um espião, Eve,

Capítulo 1. Terminologia e Aspectos Históricos

44

deseja se passar por Alice, basta que ele divulgue sua própria chave pública como se
fosse a chave pública de Alice. Como Bob poderia ter certeza de que aquela chave
pública, divulgada na internet, por exemplo, realmente pertence a Alice? Para que
essa dúvida não exista, é necessário que a divulgação da chave pública de Alice seja
feita por uma entidade que seja de conﬁança para ambos, emissor e receptor. Essa
entidade é conhecida como autoridade certiﬁcadora. Uma autoridade certiﬁcadora
precisa garantir a identidade dos proprietários das chaves públicas que ela divulga. Ela
deve realizar uma conferência criteriosa da identidade da pessoa cuja chave pública
ela se propõe a divulgar. Por isso, a autoridade certiﬁcadora deve ser uma entidade
com boa reputação em todo o mundo, para que os usuários da criptograﬁa conﬁem nos
dados por ela divulgados.

A ideia de uma autoridade certiﬁcadora resolve o problema da divulgação se-
gura de chaves públicas, porém, surge aí um enorme problema logístico: como uma
autoridade certiﬁcadora, localizada ﬁsicamente em algum lugar do mundo, pode ca-
dastrar e divulgar as chaves públicas de todos os usuários interessados em utilizar cifras
de chave pública e assinatura digital? É bastante improvável que uma entidade con-
siga lidar sozinha com essa quantidade de informações e validações de identidade dos
proprietários das chaves. Para contornar esse problema, as autoridades certiﬁcadoras
acabam “delegando” a sua responsabilidade para outras entidades que também sejam
conﬁáveis, para que o trabalho de cadastro e divulgação das chaves possa ser realizado
de forma distribuída. Essa ideia é a base da estrutura que se conhece como infraes-
trutura de chaves públicas - ICP, ou public key infrastructure - PKI. Essa infraestrutura
estabelece uma relação de hierarquia e cooperação entre diversos entes responsáveis
pela coleta de dados e divulgação de chaves públicas ﬁdedignas. A forma como essas
entidades, denominadas autoridades certiﬁcadoras, divulgam as chaves públicas dos
usuários, de maneira segura, é conhecida como certiﬁcado digital. Um certiﬁcado di-
gital é um conjunto de informações padronizadas, que são divulgadas pela autoridade
certiﬁcadora, contendo os dados do proprietário daquela chave pública que está no
certiﬁcado, além de outras informações relevantes. Como a autoridade certiﬁcadora
goza de uma reputação boa na comunidade de usuários, ela “assina” cada um dos
certiﬁcados que emite, atestando que aquelas informações, de fato, são ﬁdedignas. As
autoridades certiﬁcadoras podem fornecer certiﬁcados para os mais diversos tipos de
usuários, sejam pessoas, empresas, sites da internet e até mesmo equipamentos ele-
trônicos. A utilização de certiﬁcados digitais emitidos por autoridades certiﬁcadoras
reconhecidas é a base dos protocolos de segurança da internet utilizados atualmente,
que possibilitam, por exemplo, que se possa realizar compras com cartão de crédito de
maneira segura na internet.

No Brasil, a autoridade certiﬁcadora de mais alta hierarquia, denominada au-
toridade certiﬁcadora raiz ou AC-raiz, é gerida pelo Instituto Nacional de Tecnologia

Capítulo 1. Terminologia e Aspectos Históricos

45

da Informação - ITI, uma autarquia federal vinculada à Presidência da República. É o
ITI quem realiza a gestão da Infraestrutura de Chaves Públicas Brasileira - ICP-Brasil.
A autoridade certiﬁcadora raiz dessa infraestrutura “certiﬁca” as autoridades certiﬁca-
doras de grau hierárquico mais baixo, para que elas possam emitir certiﬁcados digitais.
Qualquer pessoa física ou jurídica pode solicitar um certiﬁcado digital às autoridades
certiﬁcadoras, arcando com o custo do certiﬁcado. Com a modernização e digitalização
de processos, tanto no setor público como no setor privado, o número de solicitações
de certiﬁcados digitais vem crescendo a cada ano no Brasil. Para mais detalhes sobre a
ICP-Brasil e seu funcionamento, podem ser consultados (ICP-BRASIL, 2018) e o site do
ITI na internet.

2 Criptograﬁa de Chave Privada ou Si-

46

métrica

Neste capítulo, serão apresentadas as cifras simétricas Data Encryption Standard

- DES e Advanced Encryption Standard - AES.

2.1 Data Encryption Standard - DES

O DES é uma cifra bastante conhecida no universo da criptograﬁa, sendo utili-
zada até hoje em aplicações de criptograﬁa de chave privada, por meio da sua modi-
ﬁcação conhecida como triploDES ou 3DES (NIST, 1999). A cifra foi desenvolvida na
década de 70 pelo pesquisador da IBM Horst Feistel, por meio de uma modiﬁcação da
sua cifra Lucifer, e foi utilizada como padrão de criptograﬁa mundial por 3 décadas,
até que, em 1999, foi anunciada a quebra do algoritmo no tempo recorde de 22 horas
e 15 minutos, o que colocou em xeque a conﬁança na utilização do DES como cifra
realmente segura. O DES é uma cifra de criptograﬁa simétrica, isto é, há uma chave
secreta compartilhada pelo emissor e pelo receptor, utilizada para cifrar e decifrar as
mensagens. A cifra realiza uma sequência de transposições e substituições de bits, pro-
movendo tanto a difusão quanto a confusão, conforme os preceitos estabelecidos por
Shannon para se ter uma boa cifra. A cifra trabalha com blocos de 64 bits como dados
de entrada, utiliza uma chave secreta de 56 bits, e gera um bloco de saída criptografado
de 64 bits. Portanto, trata-se de uma cifra de bloco. Apesar da chave secreta utilizada
pela cifra possuir 56 bits, frequentemente essa chave aparece com 64 bits. Porém, so-
mente 56 desses bits serão efetivamente utilizados no processo de cifragem, os demais
bits serão desprezados, conforme algumas regras que serão descritas mais à frente. O
motivo de se utilizar 64 bits em vez de 56 bits na chave é para aproveitar os 8 bits so-
bressalentes para realizar detecção de erros na geração, armazenamento e distribuição
de sub-chaves geradas ao longo do processo de funcionamento da cifra. Portanto, do
ponto de vista de segurança da cifra, esses bits não têm qualquer importância.

2.1.1 Cifração com o DES

A cifra DES funciona de maneira dividida em 3 etapas: primeiramente, ocorre
uma permutação inicial no bloco de entrada, denominada IP, seguida de um processo
de substituição em rodadas ou rounds, utilizando-se a chave secreta, e ﬁnalizando com
uma permutação ﬁnal, denominada IP−1. O primeiro passo, a IP, é um processo de
simples transposição de bits. Ele atua no bloco de 64 bits de entrada e não utiliza a

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

47

chave secreta ainda. A maneira como deve ser realizada a permutação inicial dos bits
está exempliﬁcada na tabela 3.

Tabela 3 – Permutação Inicial DES

Essa tabela determina a nova ordem dos bits no bloco. O bit que ocupava 58a
posição, por exemplo, passará a ocupar a 1a posição, já o bit que ocupava a 50a posição
passará a ocupar a 2a posição, e assim sucessivamente. A próxima etapa do processo
é um pouco mais complexa, e consiste em várias rodadas de substituição de bits, que
utilizam uma função criptográﬁca e uma parte do bloco de bits proveniente da rodada
anterior, além da chave secreta especíﬁca daquela rodada. Esse processo é composto
por 16 rodadas, em que cada rodada utiliza uma chave de comprimento 48 bits, es-
pecíﬁca para aquela rodada, chamada de round-key Ki, e essas chaves são geradas a
partir da chave original de 56 bits, por meio de um processo que será descrito um
pouco mais à frente. O bloco de 64 bits proveniente da IP é dividido em 2 sub-blocos
de 32 bits cada um, denominados L0 e R0, sendo L0 correspondente aos 32 primeiros
bits do bloco, e R0 aos 32 bits ﬁnais do bloco. Ao longo do processo, os sub-blocos
serão representados como Li e Ri, em que o índice subscrito representa a rodada em
que os sub-blocos se encontram. Em cada rodada, ocorre uma interação entre um dos
sub-blocos e a chave da rodada, por meio de uma função criptográﬁca denominada
função-cifra, ou simplesmente f . A função-cifra f possui como parâmetros de entrada
o sub-bloco Ri−1, de 32 bits, e a round-key Ki, de 48 bits, com i variando conforme
a rodada em que a função-cifra está atuando. Inicialmente, ocorre uma expansão do
sub-bloco Ri−1, denominada E, de 32 bits para 48 bits, conforme indica a tabela 4.

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

48

Tabela 4 – Expansão dos Sub-Blocos Ri−1

Esse novo sub-bloco expandido, agora com 48 bits, será somado modulo 2 com a
respectiva round-key de 48 bits, obtida a partir da chave original, de 56 bits. Cada uma
das round-keys é obtida a partir da chave original por um processo que será descrito no
ﬁnal desta seção. O resultado da soma modulo 2 (conhecida como XOR, e representada
por ⊕) é uma sequência de 48 bits. Em seguida, esses 48 bits são divididos em 8 peque-
nos blocos de 6 bits, e cada um desses pequenos blocos é submetido a um conjunto de
operações, consistindo em 8 substituições realizadas utilizando-se tabelas especíﬁcas
da cifra DES, chamadas S-boxes. Cada uma das 8 S-boxes recebe um pequeno bloco
de 6 bits e, por meio de algumas operações, retorna um bloco menor ainda, de 4 bits.
A concatenação dos 8 blocos de 4 bits fornece um novo bloco de 32 bits. As S-boxes
realizam uma operação de compressão de bits, pois sua entrada é uma sequência de 48
bits e sua saída uma sequência de 32 bits. O esquema de funcionamento das S-boxes é
o seguinte: cada uma das 8 S-boxes, denominada Sj , com j = 1, 2, . . . , 8, é uma matriz
4 x 16, que transforma a sua entrada, que é um dos 8 blocos de 6 bits, B j = b1b2b3b4b5b6,
com j = 1, 2, . . . , 8, em um bloco de 4 bits na sua saída. As 4 linhas de Sj são numeradas
de 0 a 3, e as 16 colunas de 0 a 15. Concatenando-se os bits b1b6 de Bj, obtém-se um
número entre 0 e 3 na base 10, e esse número indicará qual linha de Sj será utilizada.
Analogamente, concatenando-se os bits b2b3b4b5 de Bj, obtém-se um número entre 0 e 15
na base 10, e esse número indicará qual coluna de Sj será utilizada. Com as coordenadas
da linha e da coluna da S-box obtidas anteriormente, identiﬁca-se qual número ocupa a
posição correspondente a tais coordenadas em Sj. Por ﬁm, esse número sempre estará
no intervalo entre 0 e 15 na base 10, o que corresponde a uma sequência de 4 bits. Essa
será a saída da interação entre B j e Sj. Concatenando-se as sequências de 4 bits obtidas
nas 8 interações entre Bj e Sj, j = 1, 2, . . . , 8, obtém-se um novo bloco de 32 bits. Por ﬁm,
a última operação realizada pela função-cifra é uma Permutação de bits, denominada
P, que é realizada de acordo com a tabela 5.

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

49

Tabela 5 – Permutação de Bits P da função-cifra

Portanto, a função-cifra gera um bloco de 32 bits a partir de Ri−1, que possui 32
bits, e da round-key Ki, que possui 48 bits. O funcionamento resumido da função-cifra
está esquematizado na ﬁgura 9.

Figura 9 – Resumo função-cifra

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

50

Em cada rodada, o resultado de f (Ri−1

, Ki) é somado modulo 2 com o sub-bloco
Li−1, obtendo-se assim o sub-bloco Ri, da próxima rodada. Por sua vez, o sub-bloco Li é
obtido simplesmente atribuindo-se a ele a mesma sequência de bits do sub-bloco Ri−1,
da rodada anterior. Em resumo, tem-se:

Ri = f (Ri−1
Li = Ri−1

, Ki) ⊕ Li−1

Esse processo é realizado em cada uma das 16 rodadas da cifra. Após a obtenção
de R16 e L16, cada um com 32 bits, realiza-se a concatenação de seus bits, sendo os
primeiros 32 bits provenientes de R16, e os 32 bits ﬁnais de L16. Essa sequência de 64
bits obtida é denominada pre-output. Por ﬁm, a última etapa da cifra consiste em se
aplicar ao pre-output uma permutação ﬁnal, denominada IP−1, que consiste em uma
transposição de bits exatamente inversa à da permutação inicial IP. A permutação IP−1
é realizada de acordo com a tabela 6, a ﬁgura 10 apresenta um resumo geral da cifra e
a tabela 7 contém a 1a das 8 S-boxes.

Tabela 6 – Permutação Final IP−1

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

51

Figura 10 – Visão Geral da Cifra DES

Tabela 7 – 1a S-Box da Cifra DES

Para se obter cada uma das round-keys Ki, procede-se da forma a seguir. Em
alguns casos, a chave original é fornecida como uma sequência de 64 bits em vez de
56 bits, conforme mencionado anteriormente. Nesses casos, 8 bits dessa chave serão
desprezados, por meio de uma tabela que despreza os bits que ocupam as posições 8a,

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

52

16a, 24a ... 64a, e permuta os demais bits, obtendo-se assim uma sequência de 56 bits, que
corresponde efetivamente à chave. Essa primeira operação a ser realizada com os 64
bits da chave é denominada permutation choice 1 - PC-1. A operação PC−1 é realizada de
acordo com a tabela 8, que apresenta tanto a supressão dos 8 bits quanto a permutação
dos 56 bits restantes.

Tabela 8 – Tabela PC-1

O resultado da operação PC-1 é uma chave de 56 bits, que precisa ser transfor-
mada em 16 round-keys Ki, cada uma delas com 48 bits. Para se obter as Ki, inicialmente
dividem-se os 56 bits da chave em 2 grupos C0 e D0, de 28 bits cada um, sendo C0
composto pelos primeiros 28 bits da chave e D0 pelos últimos 28 bits. O próximo passo
é recursivo, e será realizado 16 vezes, para a obtenção das 16 round-keys. Para se obter
Ci e Di a partir de Ci−1 e Di−1, com i = 1, 2, . . . , 16, devem-se realizar transposições dos
bits de Ci−1 e Di−1 de 1 ou 2 posições para a esquerda, dependendo do valor de i. Por
exemplo, caso o 1o bit seja deslocado de 1 posição à esquerda, ele ocupará a posição
28o. Analogamente, caso seja deslocado de 2 posições à esquerda, ocupará a 27o posi-
ção, e assim sucessivamente. O número de posições que devem ser utilizadas para se
deslocarem os bits tanto de Ci−1 quanto de Di−1, para se obter Ci e Di, dependendo de i,
podem ser visualizados na tabela 9.

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

53

Tabela 9 – Número de Deslocamentos à Esquerda para se obter Ci e Di

Após a realização das transposições e obtenção de Ci e Di, esses 2 blocos de
28 bits são concatenados como CiDi, obtendo-se assim um bloco de 56 bits. Esse bloco
passará por um outro processo, que consiste em nova supressão de 8 bits e em uma per-
mutação dos bits restantes, denominado permutation choice 2 - PC-2. Após a realização
da operação PC-2, obtém-se um bloco de 48 bits, que será a round-key Ki da rodada i. A
operação PC-2 é realizada de acordo com a tabela 10, que apresenta tanto a supressão
dos 8 bits quanto a permutação dos 48 bits restantes.

Tabela 10 – Tabela PC-2

Procedendo-se dessa maneira para cada um dos 16 valores de i, obtêm-se as
16 round-keys utilizadas nas 16 etapas de cifração do DES. A ﬁgura 11 apresenta um

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

54

resumo geral do processo de obtenção das 16 round-keys.

Figura 11 – Visão Geral da Obtenção das round-keys

2.1.2 Decifração com o DES

A decifração de mensagens cifradas com a cifra DES não oferece grandes di-
ﬁculdades para o receptor que conheça a chave secreta. Primeiramente, ele realiza o
processo de se obter as mesmas 16 round-keys, de maneira análoga ao demonstrado na
seção anterior. Em seguida, o receptor realiza o mesmo procedimento descrito no pro-
cesso de cifração da seção anterior, com exceção das permutações IP e IP−1, realiza todas
as demais operações de maneira contrária, sem necessitar de mudanças na função-cifra.
Inicialmente, o receptor realiza a permutação IP no bloco cifrado de 64 bits. Como a
permutação IP é exatamente o inverso da permutação IP−1, ele obtém o pre-output
, K16),
R16L16. Analogamente ao processo de cifração, ele faz R15
obtendo-se assim R15 e L15. De maneira geral, para obter Ri−1 e Li−1 a partir de Ri e Li, o

= L16 e L15

⊕ f (L16

= R16

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

55

receptor realiza as seguintes operações:

Ri−1
Li−1

= Li
= Ri ⊕ f (Li, Ki)

Procedendo-se dessa maneira ao longo das 16 rodadas, obtém-se ao ﬁnal o bloco de 64
bits L0R0. Para se recuperar a mensagem original, basta realizar a operação IP−1, que
consiste no inverso da operação IP, obtendo-se assim o bloco de 64 bits correspondente
à mensagem clara, cifrada pelo emissor.

2.1.3 Comentários sobre o DES

Quando foi anunciado e divulgado o algoritmo para cifração utilizando o DES,
inicialmente isso gerou uma certa suspeita na comunidade criptográﬁca ao redor do
mundo, pois não se tinha certeza se, de fato, o DES não poderia ser quebrado por
meio de uma backdoor, algo colocado na cifra intencionalmente para permitir a sua
vulnerabilidade frente a um ataque de alguma entidade que conhecesse a backdoor.
Essa insegurança surgiu pois, como as S-Boxes utilizadas na cifra são cruciais para
promover confusão e trazer um componente não linear no processo de cifração, e a
maneira como essas S-Boxes foram projetadas não foi divulgado pelo NIST na época,
uma parcela da comunidade criptográﬁca suspeitou que esse segredo sobre o projeto
das S-Boxes pudesse estar associado à inserção de uma backdoor, para que o governo dos
EUA pudessem quebrar a cifra caso necessitassem (PAAR C.; PELZL, 2010). Entretanto,
essa backdoor jamais foi encontrada. Inclusive, já nos anos 90, após a IBM ter ﬁnalmente
revelado quais critérios usou no desenvolvimento das S-Boxes do DES, observou-se que
esses critérios faziam com que a cifra fosse resistente a um tipo de ataque denominado
criptoanálise diferencial, que não era conhecido pela comunidade criptográﬁca nos
anos 70, na época em que o DES foi lançado. A própria IBM conﬁrmou que já conhecia
a criptoanálise diferencial em 1977, quando desenvolveu o DES, pelo menos 16 anos
antes dessa técnica passar a ser conhecida e divulgada na comunidade criptográﬁca
mundial.

Ainda sobre as S-Boxes, elas constituem um elemento fundamental de segurança
da cifra DES, pois introduzem não linearidade ao processo de cifragem, o que torna
a cifra resistente a um outro tipo de ataque, conhecido como ataque do texto-claro
ou known-plaintext attack. Esse tipo de ataque necessita que o criptoanalista conheça ao
menos um exemplo de texto claro e seu respectivo texto cifrado. Dessa forma, caso a cifra
realize apenas processos lineares no texto claro para a obtenção do texto cifrado, como
o criptoanalista conhece ambos, pode montar sistemas lineares que os relacionem por
meio de dependência linear com a chave secreta. Ao resolver os sistemas, é obtida então
a chave secreta utilizada na cifra. Como as S-Boxes atuam na mensagem de maneira
não linear, elas protegem a cifra DES contra esse tipo de ataque. Para uma descrição

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

56

mais detalhada das técnicas de criptoanálise tanto do DES como de várias outras cifras,
pode ser consultado (MENEZES; OORSCHOT; VANSTONE, 2001). Entretanto, apesar
de o DES possuir resistência contra ataques criptoanalíticos mais soﬁsticados, ele possui
uma fraqueza que vem sendo explorada pelos criptoanalistas ao longo de toda a história
da criptograﬁa: ele pode ser quebrado pelo método da força bruta. Isso ocorre devido
ao tamanho reduzido da sua chave, 56 bits. Caso um criptoanalista deseje atacar o
DES por força bruta, deve testar todas as chaves possíveis, isto é, 256 possibilidades.
Talvez não seja possível para um computador pessoal realizar todas essas tentativas
de chave em um tempo razoável, mas os governos interessados em quebrar cifras
inimigas possuem supercomputadores muito potentes, dedicados inteiramente a essa
tarefa. Além disso, no ﬁnal dos anos 90, foram desenvolvidas máquinas com hardware
projetado especiﬁcamente para a tentativa exaustiva de chaves do DES, de forma que
mesmo 256 tentativas já poderiam ser realizadas em uma questão de dias, ou até mesmo
de horas (PAAR C.; PELZL, 2010).

2.2 Advanced Encryption Standard - AES

Em janeiro de 1997, o NIST iniciou o processo para a escolha da cifra sucessora
do DES. A cifra escolhida nesse processo passaria a ser o padrão mundial de criptograﬁa
simétrica, conhecido como Advanced Encryption Standard - AES. Dentre as várias cifras
candidatas, por exemplo MARS, RC6, Serpent e Twoﬁsh, a vencedora do concurso foi a
cifra Rijndael, desenvolvida pelos pesquisadores belgas Vincent Rijmen e Joan Daemen,
motivo do nome Rijndael, uma junção dos nomes de seus desenvolvedores. Assim, em
outubro de 2000, o Rijndael foi escolhido para ser o AES, passando a ser adotado
como padrão criptográﬁco mundial a partir de novembro de 2001, e sua publicação
em dezembro de 2001, na FIPS 197, tornou público o algoritmo. Essa é a cifra utilizada
como padrão em criptograﬁa simétrica na atualidade, sendo utilizada nos protocolos
de segurança de internet IPsec, TLS, SSH, WPA, WPA2, dentre várias outras aplicações.
Inclusive, o AES é recomendado pela Agencia Nacional de Segurança dos EUA - NSA,
para a criptograﬁa de documentos classiﬁcados como SECRET e TOP SECRET do
governo dos EUA. Essa foi a primeira ocasião na história em que foi divulgada a cifra
utilizada pelo governo dos EUA para criptografar documentos classiﬁcados (PAAR
C.; PELZL, 2010). O AES é uma cifra de criptograﬁa simétrica, isto é, há uma chave
secreta compartilhada pelo emissor e pelo receptor, utilizada para cifrar e decifrar as
mensagens. O AES funciona da seguinte maneira: a entrada da cifra é um bloco inicial
de comprimento 128 bits, e existem 3 tamanhos possíveis de chaves a serem adotados:
podem-se ter chaves de 128 bits, 192 bits ou 256 bits. Caso a chave possua 128 bits,
então a cifra é desenvolvida em 10 rodadas ou rounds, caso a chave possua 192 bits, são
11 rodadas e, caso a chave possua 256 bits, o AES realiza 12 rodadas no processo de

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

57

cifração. Como o funcionamento da cifra é semelhante para os três tamanhos possíveis
de chave, neste trabalho será apresentada apenas a descrição do processo para chaves
de 128 bits. A cifra AES, quando utiliza chaves de 128 bits, é denominada AES-128.

2.2.1 Cifração com o AES-128

As entradas da cifra são o bloco de mensagem que se deseja criptografar, com
comprimento de 128 bits, e a chave secreta, neste caso com comprimento de 128 bits
também. A saída da cifra é um bloco criptografado de comprimento 128 bits. A cifra
se divide em 4 operações básicas, denominadas SubBytes, ShiftRows, MixColumns e
AddRoundKey. A cifração é dividida em 10 rodadas, também chamadas de estados ou
rounds, sendo necessária a aplicação das 4 operações básicas em cada rodada. Somente
na 10a rodada não será aplicada a operação MixColumns. Antes do início da 1a rodada,
aplica-se a operação AddRoundKey na sequência de entrada de 128 bits, em uma rodada
extra denominada “rodada zero”, de forma que a 1a rodada é iniciada após a conclusão
dessa operação. Em cada uma das 11 rodadas, incluída a rodada zero, é utilizada uma
chave na operação AddRoundKey, que será denominada Ki, com i = 0, 1, 2, . . . , 10, sendo
K0 a chave secreta da cifra. As chaves Ki são obtidas a partir de K0, por meio de um
processo recursivo denominado KeyExpansion, que será descrito mais à frente.

Inicialmente, divide-se o bloco de 128 bits de entrada em 16 blocos de 8 bits cada
um, sendo cada bloco de 8 bits denominado 1 byte. Essa divisão deve ser realizada na
ordem em que os bits estão no bloco original, isto é, o 1o byte consiste na sequência do
1o ao 8o bit, o 2o byte consiste na sequência do 9o ao 16o bit, e assim sucessivamente,
até o 16o byte, que consiste na sequência do 121o ao 128o bit. Esses 16 bytes devem
ser agrupados em uma matriz 4 x 4, da seguinte forma: os primeiros 4 bytes são co-
locados na 1a coluna da matriz, os próximos 4 bytes na 2a coluna da matriz, e assim
sucessivamente, até completar a matriz com os 16 bytes. Cada byte em sua posição
na matriz será representado por Sjk, com j = 0, 1, 2, 3 e k = 0, 1, 2, 3, o primeiro índice
indicando a linha da matriz e o segundo índice indicando a coluna, conforme a ﬁgura 12.

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

58

Figura 12 – Matriz de Bytes - AES

Essa maneira de montar uma matriz 4 x 4 de 16 bytes a partir de uma sequência
de 128 bits será utilizada também para montar as matrizes das chaves Ki, que serão
utilizadas em cada rodada da cifra. Cada matriz 4 x 4 formada por bytes das chaves Ki
das rodadas será representada, de forma análoga à representação dos bytes do bloco,
por Kjk, com j = 0, 1, 2, 3 e k = 0, 1, 2, 3, o primeiro índice indicando a linha da matriz e
o segundo índice indicando a coluna.

Como forma de representar um byte de maneira mais sintética, é bastante co-
mum representá-lo na base hexadecimal pois, em vez de representá-lo com 8 dígitos na
base binária, na base hexadecimal bastam 2 dígitos para representá-lo. Essa represen-
tação dos bytes em base hexadecimal será utilizada nos próximos passos da descrição
do AES. Além disso, para se realizarem algumas operações da cifra, será necessário es-
tabelecer uma correspondência entre cada byte e um polinômio de grau 7, em que cada
um dos bits do byte representa um coeﬁciente binário do polinômio. Por exemplo, seja
Sjk = a7a6a5a4a3a2a1a0 um byte, sendo ar cada um de seus bits, com r = 0, 1, 2, . . . , 7. Esse
7∑︀
byte pode ser tratado como o polinômio a7x7 +a6x6 +a5x5 +a4x4 +a3x3 +a2x2 +a1x+a0
r=0
arxr. Utilizando-se determinadas operações de soma e multiplicação, esses polinômios
formam um corpo ﬁnito com 28 elementos, conhecido como GF(28). As operações de
soma e multiplicação desse corpo serão aplicadas aos bytes na cifra, e são deﬁnidas
da seguinte forma: A soma de 2 elementos em GF(28), isto é, a soma de 2 polinômios,
é realizada de maneira análoga à operação XOR deﬁnida anteriormente, somando-se
os coeﬁcientes correspondentes de cada potência de x, e o resultado de cada soma
é reduzido modulo 2. Essa operação entre bytes será representada pelo mesmo sím-
bolo utilizado na operação XOR, ⊕. Por exemplo, para se realizar a soma dos bytes
a7a6a5a4a3a2a1a0 e b7b6b5b4b3b2b1b0 em GF(28), procede-se da seguinte forma:

=

a7a6a5a4a3a2a1a0
sendo cada ci = ai ⊕ b1

⊕ b7b6b5b4b3b2b1b0

= c7c6c5c4c3c2c1c0

, com i = 0, 1, 2, . . . , 7

A multiplicação de 2 elementos em GF(28), isto é, o produto de 2 polinômios, é realizada

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

59

efetuando-se o produto usual de polinômios, e reduzindo-se o resultado modulo um
polinômio irredutível de 8o grau de Z
2[x]. No caso da cifra AES, o polinômio escolhido
foi x8 + x4 + x3 + x + 1. Essa operação entre bytes será representada pelo símbolo ⊙.
Por exemplo, para se realizar o produto dos bytes a7a6a5a4a3a2a1a0 e b7b6b5b4b3b2b1b0 em
GF(28), com o polinômio irredutível x8 + x4 + x3 + x + 1, procede-se da seguinte forma:

a7a6a5a4a3a2a1a0

⊙ b7b6b5b4b3b2b1b0

= c7c6c5c4c3c2c1c0 , sendo:

a(x) = a7x7 + a6x6 + a5x5 + a4x4 + a3x3 + a2x2 + a1x + a0

b(x) = b7x7 + b6x6 + b5x5 + b4x4 + b3x3 + b2x2 + b1x + b0

c(x) = c7x7 + c6x6 + c5x5 + c4x4 + c3x3 + c2x2 + c1x + c0

c(x) ≡ a(x) · b(x) mod(x8 + x4 + x3 + x + 1)

A necessidade de se realizar essa correspondência entre bytes e polinômios em GF(28)
será melhor explicada nos próximos passos da cifra.

Após a separação dos 16 bytes de entrada em formato de matriz 4 x 4, a primeira
operação realizada é a AddRoundKey. Essa operação é realizada em todas as rodadas, e
é a única operação realizada na rodada zero. Portanto, será apresentada uma descrição
geral da operação AddRoundKey, que vale para qualquer rodada da cifra. A operação
consiste em, para uma determinada rodada i, com i = 0, 1, 2, . . . , 10, realizar-se a soma
entre cada byte do bloco e o byte correspondente da chave da rodada, que ocupem as
mesmas posições da matriz 4 x 4. Basicamente, se Sjk é um byte do bloco da rodada i, e
Kjk é um byte da chave da rodada i, o byte do bloco Sjk da nova rodada i+1 será igual
a soma Sjk ⊕ Kjk da rodada i. Quando i = 0, a matriz de bytes Sjk, com j = 0, 1, 2, 3 e
k = 0, 1, 2, 3 corresponde ao bloco de mensagem inicial da cifra, e a matriz de bytes Kjk,
com j = 0, 1, 2, 3 e k = 0, 1, 2, 3 corresponde à chave secreta inicial.

Após a realização da operação AddRoundKey na rodada zero, todas as rodadas
subsequentes se iniciam com a operação SubBytes. Essa operação consiste em um pro-
cesso de substituição de bytes da matriz 4 x 4, em que cada byte da matriz da rodada
é substituído por outro byte de uma tabela previamente construída, conhecida como
S-Box da cifra AES. Ao contrário das S-Boxes da cifra DES, na cifra AES os parâmetros
de construção da S-Box foram divulgados juntamente com a cifra, o que proporciona
maior transparência ao processo. A maneira como a S-Box da cifra AES foi construída
será apresentada em detalhes mais à frente. Todos os bytes da S-Box são dados em base
hexadecimal. A troca de bytes ocorre da seguinte maneira: Seja Sjk = a7a6a5a4a3a2a1a0
um byte da matriz de bytes da rodada. Escreve-se Sjk na base hexadecimal, obtendo-se
o número de 2 dígitos IJ. Então, utilizam-se a linha I e a coluna J da S-Box para deﬁnir

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

60

qual será o novo byte que substituirá Sjk. A tabela 11 contém a S-Box da cifra AES.

Tabela 11 – S-Box da Cifra AES

Por exemplo, o byte 01010011, que corresponde ao número 53 em base hexadeci-
mal, deve ser substituído pelo byte que está na linha 5 e na coluna 3 da S-Box, portanto,
pelo byte “ED”, que em binário corresponde à 11101101.

Após a realização da operação SubBytes no início de cada uma das rodadas (com
exceção da rodada zero), a cifra realiza a operação ShiftRows, que consiste em deslocar
algumas posições para a esquerda determinadas linhas da matriz 4 x 4 obtida após a
operação SubBytes da rodada. A 1a linha da matriz é mantida inalterada, a 2a linha é
deslocada 1 posição para a esquerda, a 3a linha é deslocada 2 posições para a esquerda
e a 4a linha é deslocada 3 posições para a esquerda. Esse processo de deslocamento
pode ser melhor visualizado na ﬁgura 13.

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

61

Figura 13 – Operação ShiftRows

Após a realização da operação ShiftRows, realiza-se a operação MixColumns, que
consiste em realizar uma alteração em cada coluna da matriz 4 x 4 dos bytes obtida após
a operação ShiftRows da respectiva rodada. Nesta etapa, a alteração de cada coluna da
matriz não inﬂuencia as demais colunas, assim como na operação ShiftRows a alteração
de cada linha da matriz não inﬂuencia as demais linhas. Porém, a mudança de um
byte em uma coluna inﬂuencia o resultado em todos os bytes daquela coluna. Os bytes
da matriz da rodada são tratados como polinômios sobre o GF(28), conforme descrito
anteriormente. Nessa etapa, será necessário efetuar tanto somas quanto multiplicações
de elementos neste corpo ﬁnito, utilizando-se as operações sobre GF(28) deﬁnidas
anteriormente. Pode-se representar a operação MixColumns da seguinte maneira: Para
uma coluna c ﬁxada da matriz 4 x 4, consideremos seus elementos Sjc, com j = 0, 1, 2, 3.
Denotemos por Ujc, com j = 0, 1, 2, 3 os elementos da nova coluna c obtida, após a
operação de MixColumns nessa coluna. Assim, os novos elementos Ujc de c são obtidos
da seguinte maneira:

U0c = (00000010 ⊙ S0c) ⊕ (00000011 ⊙ S1c) ⊕ S2c ⊕ S3c
U1c = S0c ⊕ (00000010 ⊙ S1c) ⊕ (00000011 ⊙ S2c) ⊕ S3c
U2c = S0c ⊕ S1c ⊕ (00000010 ⊙ S2c) ⊕ (00000011 ⊙ S3c)
U3c = (00000011 ⊙ S0c) ⊕ S1c ⊕ S2c ⊕ (00000010 ⊙ S3c)

Portanto, aplicando-se o procedimento acima em cada uma das colunas c, c = 0, 1, 2, 3,
obtém-se a nova matriz de bytes após a operação MixColumns. Essa operação será
realizada em todas as rodadas da cifra, com exceção da última rodada.

Por ﬁm, após a operação MixColumns, realiza-se a operação AddRoundKey em
cada uma das rodadas da cifra, ﬁnalizando-se assim o processo de cifração do AES.
Uma representação geral dos processos necessários para o funcionamento da cifra

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

62

encontra-se na ﬁgura 14.

Figura 14 – Visão Geral da Cifra AES

Para ﬁnalizar a descrição da cifra, ainda resta descrever como é construída a
S-Box da cifra, e como são obtidas as chaves Ki, i = 1, 2, . . . , 10 a partir de K0. Primeira-
mente, será apresentado o processo de construção da S-Box. Seja Sjk = a7a6a5a4a3a2a1a0
um byte qualquer de entrada na operação SubBytes. Para construir a S-Box, basta veri-
ﬁcar como obter o byte de saída para cada um dos 256 possíveis bytes de entrada Sjk, e
colocá-los da forma de tabela. Vejamos como cada um desses bytes de saída é obtido.
Conforme descrito anteriormente, cada um dos bytes Sjk = a7a6a5a4a3a2a1a0 pode ser tra-
tado como um polinômio a7x7 + a6x6 + a5x5 + a4x4 + a3x3 + a2x2 + a1x + a0 de Z
2[x]. Como o
AES utiliza um polinômio irredutível de 8o grau na deﬁnição da sua multiplicação de
2[x]/(x8+x4+x3+x+1) na verdade é um corpo,
bytes, tratados como polinômios, o anel Z
que possui 28 = 256 elementos, e cada um desses elementos, com exceção do polinômio

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

63

jk

≡ 1 mod(x8 + x4 + x3 + x + 1). Caso Sjk = 00000000, faz-se S−1

nulo, possui um elemento inverso, que será denotado por S−1
= b7b6b5b4b3b2b1b0, tal
jk
que Sjk ⊙ S−1
= 00000000
2[x]/(x8 + x4 + x3 + x + 1) possuam
por deﬁnição, para que todos os 256 elementos de Z
elemento inverso. Portanto, a partir de um byte Sjk = a7a6a5a4a3a2a1a0 qualquer, pode-se
obter seu byte inverso S−1
jk , aplica-se uma
jk
composição de 2 operações em cada um de seus bits, obtendo-se assim o byte de saída
da S-Box Djk = b′
0. A composição das 2 operações a serem realizadas nos
bits do byte S−1
jk para se obter os bits do byte de saída Djk estão representadas na ﬁgura 15.

= b7b6b5b4b3b2b1b0. Por ﬁm, de posse de S−1

4b′

1b′

7b′

3b′

2b′

6b′

5b′

jk

Figura 15 – Composição de Operações entre Bits para Construção da S-Box do AES

⎛

⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎝

′
b
0
′
b
1
′
b
2
′
b
3
′
b
4
′
b
5
′
b
6
′
b
7

⎞

⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎠

⎛

⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎝

=

1 0 0 0 1 1 1 1
1 1 0 0 0 1 1 1
1 1 1 0 0 0 1 1
1 1 1 1 0 0 0 1
1 1 1 1 1 0 0 0
0 1 1 1 1 1 0 0
0 0 1 1 1 1 1 0
0 0 0 1 1 1 1 1

⎞

⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎠

·

⎛

⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎝

⎞

⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎠

b0
b1
b2
b3
b4
b5
b6
b7

+

⎛

⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎝

1
1
0
0
0
1
1
0

⎞

⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎠

mod(2)

Portanto, realizando-se o procedimento descrito acima com todos os possíveis
256 bytes Sjk de entrada da S-Box, obtêm-se cada um dos 256 possíveis bytes Djk de
saída da S-Box, permitindo assim a construção completa da S-Box.

O processo de obtenção das chaves Ki, i = 1, 2, . . . , 10 a partir de K0, deno-
minado KeyExpansion, será descrito a seguir. Novamente, é necessário fazer algumas
considerações a respeito da notação utilizada. Um conjunto de 4 bytes, isto é, 32 bits, é
denominado palavra e essa nomenclatura será utilizada na descrição da KeyExpansion.
Quando a cifra AES utiliza chaves de 128 bits, ela trabalha com 10 rodadas, sendo então
necessário que se obtenham 10 chaves diferentes a partir da chave inicial K0, por meio
do processo KeyExpansion. Como cada chave possui 128 bits, isto é, 4 palavras, ao todo
serão necessárias 40 palavras para se gerar as 10 chaves, além das 4 palavras iniciais de K0.
Portanto, ao ﬁnal do processo, são necessárias 44 palavras no total, que serão designa-
das por w[0], w[1], w[2], . . . , w[43], sendo K0
= w[4]w[5]w[6]w[7]
e assim sucessivamente. Deﬁne-se também uma matriz M de dimensões 1 x 10, em
que cada entrada m1i da matriz, com i = 1, 2, . . . , 10, representa uma palavra constante.
Os valores de cada m1i, com i = 1, 2, . . . , 10, estão representados a seguir, em base

= w[0]w[1]w[2]w[3], K1

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

64

hexadecimal:

m1
m2
m3
m4
m5

= 0x01000000
= 0x02000000
= 0x04000000
= 0x08000000
= 0x10000000

m6
m7
m8
m9
m10

= 0x20000000
= 0x40000000
= 0x80000000
= 0x1B000000
= 0x36000000

Por último, deﬁne-se uma variável temporária temp, necessária apenas para armazenar
palavras intermediárias ao longo do processo de ExpansionKey. Finalmente, segue a
= w[0]w[1]w[2]w[3], serão
descrição do processo: A partir da chave secreta inicial K0
realizadas operações recursivas com essas 4 palavras, obtendo-se assim novas palavras,
e assim sucessivamente, até que haja 44 palavras no total. O algoritmo utilizado para
expandir essas 4 palavras iniciais opera de 2 maneiras distintas, dependendo da posição
da palavra na sequência de geração. Assim, dada uma palavra w[i], se i for múltiplo de
4, realizam-se as seguintes operações:

1. Atribui-se à variável temp o valor de w[i − 1];

2. Realiza-se um deslocamento de uma posição para a esquerda nos bytes da variável
temp, isto é, se temp = B0B1B2B3, então após o deslocamento ter-se-á temp =
B1B2B3B0;

3. Após esse deslocamento, aplica-se o processo SubBytes em cada byte da variável

temp. Nesta etapa, utiliza-se a mesma S-Box da cifra AES;

4. De posse da variável temp permutada e substituída, faz-se w[i] = w[i − 4] ⊕ m i

4

⊕

temp.

Caso i não seja múltiplo de 4, procede-se da seguinte forma:

1. Atribui-se à variável temp o valor de w[i − 1];

2. Faz-se w[i] = w[i − 4] ⊕ temp.

Aplicando-se esse algoritmo para i = 4, 5, 6, ..., 43, obtém-se a sequência de 40 palavras
w[4], w[5], w[6], . . . , w[43]. Finalmente, faz-se:

= w[4]w[5]w[6]w[7]
= w[8]w[9]w[10]w[11]

K1
K2
...

Dessa forma, obtêm-se as 10 chaves Ki, com i = 1, 2, . . . , 10, necessárias para a

cifração utilizando o AES-128.

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

65

2.2.2 Decifração com o AES-128

Ao contrário do que ocorre na decifração da cifra DES, em que não há qualquer
mudança na descrição das operações necessárias para cifração e decifração, na cifra
AES, para se realizar a decifração, são necessárias algumas mudanças nas operações
realizadas nas rodadas de cifração. Das 4 operações realizadas ao longo das rodadas
no AES, apenas a operação AddRoundKey é a mesma tanto para a cifração quanto para
a decifração, pois trata-se apenas de uma operação XOR entre bytes, e essa operação é
idêntica à sua operação inversa, isto é, (S ⊕ K) ⊕ K = S, sendo S e K bytes. As demais
operações, SubBytes, ShiftRows e MixColumns, precisam ser adaptadas para a decifra-
ção, e são designadas por InvSubBytes, InvShiftRows e InvMixColumns, respectivamente.
Cada uma dessas novas operações descreve passos que devem ser aplicados aos bytes
cifrados, em cada uma das rodadas, para que a decifração recupere a mensagem origi-
nal. Este trabalho não descreverá as operações modiﬁcadas para a decifração do AES.
O leitor interessado em uma descrição detalhada das operações InvSubBytes, InvShif-
tRows e InvMixColumns pode consultar (NIST, 2001). Também, é necessário realizar-se
o mesmo processo para se obter as 10 chaves utilizadas nas rodadas do AES, a partir da
chave secreta K0. Porém, a utilização das chaves ocorre de maneira invertida em relação
à cifração, isto é, a primeira chave utilizada na operação AddRoundKey da decifração
é K10, seguida por K9, e assim sucessivamente, até que a última operação realizada na
decifração é AddRoundKey utilizando-se K0, recuperando-se assim a mensagem clara.

2.2.3 Comentários sobre o AES

O AES vem se mostrado por quase 20 anos, desde o seu lançamento como padrão
de criptograﬁa simétrica nos EUA, como uma cifra resistente aos métodos de cripto-
análise modernos, e o principal tipo de ataque contra a cifra continua sendo a força
bruta. Porém, como as chaves do AES são bem maiores que a chave do DES, a tentativa
à exaustão de todas as possibilidades de chaves, como foi feito no ataque ao DES, não se
mostra viável, nem mesmo utilizando-se hardwares especíﬁcos para tal tarefa. Devido à
segurança proporcionada pelo AES, essa cifra é utilizada modernamente por diversos
protocolos de transferência segura de arquivos na internet, como FTPS, HTTPS, grande
parte das VPNs disponíveis no mercado, também protocolos de segurança de redes
Wi-Fi, como WPA e WPA2. O AES é a cifra utilizada, inclusive, pelo aplicativo de troca
de mensagens mais popular do Brasil, o WhatsApp. Todas as mensagens trocadas pelos
usuários do WhatsApp são cifradas utilizando-se o AES com uma chave de 256 bits, tro-
cada entre os usuários por meio de um algoritmo de criptograﬁa de chave pública para
a troca de chaves, denominado Elliptic Curve Diﬃe Helman - ECDH. Essa troca segura
de chaves promove o que se conhece como criptograﬁa de ponta a ponta, o que garante
que nem mesmo o próprio WhatsApp conheça o conteúdo das mensagens trocadas,

Capítulo 2. Criptograﬁa de Chave Privada ou Simétrica

66

pois a chave secreta do AES é compartilhada entre emissor e receptor utilizando-se
um protocolo de compartilhamento de chaves por criptograﬁa assimétrica. O processo
de troca de mensagens criptografadas pelo WhatsApp possui vários detalhes técnicos
adicionais, que podem ser consultados em (WHATSAPP, 2017).

3 Criptograﬁa de Chave Pública ou As-

67

simétrica

Neste capítulo, serão apresentados o algoritmo de criptograﬁa assimétrica RSA
e algoritmos de criptograﬁa baseados em propriedades de curvas elípticas, conhecidos
como Elliptic Curve Cryptography - ECC.

3.1 Algoritmo de Criptograﬁa de Chave Pública RSA

No ano de 1976, Diﬃe e Hellman introduziram no universo criptográﬁco exis-
tente àquela época o conceito de criptograﬁa de chave pública, também chamada de
criptograﬁa assimétrica. As ideias inovadoras divulgadas pela dupla se espalharam
por todo o mundo, e, em 1977, três pesquisadores do Massachusetts Institute of Techno-
logy - MIT desenvolveram o algoritmo denominado RSA, cuja metodologia de funci-
onamento também se baseava no conceito de criptograﬁa assimétrica. Esse algoritmo
tornou-se mundialmente conhecido rapidamente, e começou a ser utilizado como pa-
drão mundial para troca de informações, inclusive chaves, por meio de canais inseguros
e em protocolos de assinatura digital, sendo amplamente utilizado principalmente em
transações pela internet. Ainda hoje, grande parte da troca de informações sigilosas
via internet se dá por meio da utilização de protocolos que se baseiam no algoritmo
RSA. A sigla RSA é derivada dos nomes dos autores do algoritmo: R. L. Rivest, A.
Shamir e L. Adleman. A força do algoritmo RSA reside na diﬁculdade computacional
para se fatorar números compostos muito grandes, embora a multiplicação de números
primos grandes seja relativamente simples do ponto de vista computacional. Até hoje,
não se conhecem algoritmos de computação clássica eﬁcientes o suﬁciente para que se
possam fatorar esses números compostos grandes em um tempo reduzido, o que torna
a quebra do RSA bastante improvável atualmente, desde que se utilizem chaves de
tamanho adequado. No entanto, já se conhecem algoritmos de computação quântica
que possibilitam a fatoração de números inteiros grandes em tempo polinomial, de
forma que a segurança do RSA estará fortemente comprometida caso os computadores
quânticos se tornem uma realidade.

3.1.1 Funcionamento do RSA

O RSA é um algoritmo de criptograﬁa assimétrica, isto é, usa-se uma chave
pública para cifrar a mensagem, e uma chave privada para decifrá-la. Portanto, para
que haja troca de mensagens entre 2 entidades, é necessário que cada uma delas possua

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

68

um par de chaves, uma pública e outra privada. Primeiramente, é necessário enten-
der o processo de geração desses pares de chaves pública e privada. Esse processo é
realizado de maneira totalmente independente entre as 2 entidades. Cada uma delas
escolhe, secretamente, dois números primos grandes p e q, e efetua a multiplicação
n = pq. Em seguida, calcula-se o valor da função φ de Euler do número n, dada por
φ(n) = (p − 1)(q − 1). Conhecendo-se o valor de φ(n), escolhe-se um número e, de forma
que 1 < e < φ(n), e também MDC(e, φ(n)) = 1. A necessidade de e e φ(n) serem primos
entre si está relacionada com o próximo passo, que consiste em encontrar o inverso
multiplicativo de e modulo φ(n). Por meio do algoritmo de Euclides estendido, pode-se
encontrar d, tal que de ≡ 1 mod(φ(n)), isto é, d ≡ e−1 mod(φ(n)). A chave pública de
cada uma das entidades consiste no par de números (n, e), e a chave privada no par
(n, d). Divulga-se a chave pública de maneira ostensiva em qualquer tipo de canal, seja
ele seguro ou não, e utiliza-se a chave privada para decifrar as mensagens recebidas
que foram cifradas utilizando a chave pública. Por exemplo, vamos analisar o caso em
que Bob deseja enviar uma mensagem cifrada para Alice, utilizando-se o RSA. Primei-
ramente, Bob deve conhecer a chave pública de Alice, que consiste no par (n, e). Em
, . . . , mi,
seguida, é necessário converter o texto a ser cifrado em blocos numéricos m1
de forma que cada número não exceda o valor de n. A conversão do texto em blocos
numéricos pode ser realizada, por exemplo, utilizando-se o padrão ASCII. Pode-se
observar o padrão de conversão ASCII na tabela 12.

, m2

Tabela 12 – Tabela ASCII

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

69

De posse de cada um dos blocos numéricos m1

, m2

, ..., mi, Bob calcula C1

≡

≡ me

2 mod(n), ... ,Ci ≡ me

1 mod(n), C2
, C2

, ..., Ci para Alice. Para decifrar os blocos C1

me
i mod(n), e envia a sequência de blocos cifrados
, ..., Ci, Alice realiza a exponenciação
C1
modulo n de cada um dos blocos pelo componente d da sua chave privada, de forma
que se obtém o seguinte:

, C2

Cd
1

Cd
2

Cd
i

≡ (me

1)d ≡ med

1

≡ (me

2)d ≡ med

2

≡ (me

i )d ≡ med

i

≡ mkφ(n)+1

1

φ(n)
≡ (m
1

)km1
1

≡ (1)km1

≡ m1 mod(n)

≡ mkφ(n)+1

2

φ(n)
≡ (m
2

)km1
2

≡ (1)km2

≡ m2 mod(n)

...

≡ mkφ(n)+1

i

φ(n)
≡ (m
i

)km1
i

≡ (1)kmi ≡ mi mod(n)

, ..., mi, que podem ser convertidos
Dessa forma, Alice obtém os blocos numéricos m1
na mensagem de texto original utilizando-se o mesmo padrão ASCII. Para justiﬁcar a
validade desse procedimento de decifração, o principal detalhe a ser observado é a
utilização do teorema de Euler, que estabelece o seguinte:

, m2

a e n ∈ Z, n > 1 e MDC(a, n) = 1 =⇒ a

φ(n) ≡ 1 mod(n)

φ(n)
Portanto, para provar que, de fato, (m
i
2 casos distintos:

)kmi ≡ (1)kmi ≡ mi mod(n), é necessário analisar

1. Caso MDC(mi, n) = 1, então a prova decorre imediatamente do teorema de Euler.

2. Caso MDC(mi, n) (cid:44) 1, então mi deve ser um múltiplo de p ou de q, pois n = pq. Sem
perda de generalidade, vamos supor que mi é um múltiplo de p, isto é, mi = rp,
para algum r ∈ N e r < q. Portanto, nesse caso, MDC(mi, q) = 1, o que nos permite
utilizar o teorema de Euler para concluir que:

φ(q)
m
i

≡ 1 mod(q)

φ(n)
Portanto, podemos calcular (m
i

)k mod(q) da seguinte forma:

φ(n)
(m
i

)k ≡ (m(p−1)(q−1)

i

)k ≡ (m(q−1)

i

)k(p−1) ≡ (m

φ(q)
i

)k(p−1) ≡ (1)k(p−1) ≡ 1 mod(q)

φ(n)
Dessa forma, concluímos que (m
i
φ(n)
aplicar esse resultado para realizar o cálculo de (m
i
forma:

)k = 1+sq, para algum s ∈ N. Por ﬁm, podemos
)kmi mod(n) da seguinte

φ(n)
(m
i

)kmi ≡ (1 + sq)mi ≡ mi + misq ≡ mi + (rp)sq ≡ mi + nrs ≡ mi mod(n)

Portanto, ﬁca provado que o processo de decifração descrito acima sempre per-
mite a recuperação do bloco numérico mi a partir de Ci, n e d.

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

70

Pode-se observar que a força do algoritmo reside no fato de que, caso o espião
Eve intercepte a mensagem e queira decifrá-la, é necessário que ele conheça a chave
privada (n, d) de Alice. Porém, a única informação disponível para Eve é a chave
pública (n, e) de Alice, que foi divulgada por meio de um canal qualquer. Para se obter
a chave privada (n, d) a partir da chave pública (n, e) é necessário calcular o valor
de φ(n), conhecendo-se apenas o número composto n, sem que sejam conhecidos os
seus fatores primos p e q. Portanto, como φ(n) = (p − 1)(q − 1), e não se conhece uma
maneira melhor para carcular φ(n), seria necessário decompor n em seus fatores primos
p e q. Porém, para fatores primos p e q suﬁcientemente grandes, essa decomposição é
computacionalmente inviável. Mesmo os melhores algoritmos de computação clássica
para fatoração conhecidos na atualidade ainda se mostram ineﬁcazes quando trabalham
com inteiros suﬁcientemente grandes, o que garante a segurança do RSA.

3.1.2 Exemplo Numérico de Aplicação do RSA

A seguir, será apresentado um exemplo numérico ilustrativo da utilização do
algoritmo RSA. Todos os cálculos foram realizados utilizando-se o software wxMaxima.
Supondo-se que Bob deseja enviar uma mensagem cifrada com o RSA para Alice, para
isso ele precisa da chave pública de Alice. Portanto, primeiramente, é necessário que
Alice execute o processo de geração do seu par de chaves pública e privada. Para isso,
Alice escolhe dois números primos grandes p e q, e efetua a multiplicação n = pq. Como
exemplo, serão tomados p = 14386079 e q = 250368653. Em seguida, Alice calcula:

n = pq

= (14386079)(250368653)
= 3601823221181587

Vale lembrar que os números primos utilizados em aplicações práticas do algoritmo
RSA são muito maiores que os números primos utilizados neste exemplo, que possui
o intuito meramente ilustrativo do método. Nas implementações mais atuais do RSA,
trabalha-se com chaves de 4096 bits, o que gera a necessidade de números primos muito
maiores que os desse exemplo. O próximo passo para que Alice gere seu par de chaves
pública e privada consiste em calcular o valor φ(n), obtendo-se:

φ(n) = (p − 1)(q − 1)

= (14386078)(250368652)
= 3601822956426856

Em seguida, Alice escolhe um número e, com 1 < e < φ(n), e MDC(e, φ(n)) = 1. Como
exemplo, será tomado e = 9166939. Então, calcula-se d, o inverso multiplicativo de e
mod(n), obtendo-se d = 1353380917365627. Finalmente, Alice publica o par de números
(n, e) como sua chave pública, e mantém secretamente o par de números (n, d) como

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

71

sua chave privada. Bob toma conhecimento da chave pública de Alice e deseja enviar
a ela a mensagem m = 64728264834628 cifrada com o RSA. Bob então calcula:

C ≡ me mod(n)

≡ (64728264834628)9166939 mod(n)
≡ 2062780619908712 mod(n)

Essa é a mensagem cifrada. Em seguida, Bob envia C para Alice. Ao receber a mensa-
gem cifrada, Alice utiliza sua chave privada para decifrá-la, realizando-se a seguinte
operação:

m ≡ Cd mod(n)

≡ (2062780619908712)1353380917365627 mod(n)
≡ 64728264834628 mod(n)

Dessa forma, Alice obtém a mensagem original enviada por Bob, sem que houvesse a
necessidade de um canal seguro para a comunicação entre emissor e receptor, exem-
pliﬁcando assim o funcionamento da criptograﬁa assimétrica ou de chave pública.

3.1.3 Exemplo de Aplicação do RSA em Assinatura Digital

O algoritmo RSA, além de possuir larga aplicação na criptograﬁa de mensagens,
também pode ser utilizado no processo de assinatura digital. A seguir, será apresen-
tado um exemplo numérico simpliﬁcado da utilização do algoritmo RSA em uma troca
de mensagens com assinatura digital. Como se trata meramente de um exemplo ilus-
trativo, a assinatura será feita na própria mensagem, o que não ocorre na prática. Nas
situações reais, a assinatura é feita no resumo ou hash da mensagem, para garantir a sua
conﬁdencialidade na transmissão por um canal inseguro. Analogamente ao exemplo
anterior, vamos supor que Bob deseja enviar uma nova mensagem para Alice, mas
agora Bob deseja assinar a mensagem utilizando o RSA. Inicialmente, é necessário que
Bob execute o processo de geração de seu par de chaves pública e privada, de maneira
análoga ao processo realizado por Alice. Esse processo não será descrito novamente,
de forma que já serão apresentadas as chaves pública e privada de Bob:

chave pública de Bob = (916106067524802526781, 7645321)
chave privada de Bob = (916106067524802526781, 497028085498237186681)

Bob deseja enviar a mesma mensagem m = 64728264834628 cifrada e assinada para
Alice. Conforme realizado no exemplo anterior, de posse da chave pública de Alice,
Bob calcula C = 20627806199087122 mod(3601823221181587). Essa é a mensagem ci-
frada, análoga àquela obtida no exemplo anterior. Em seguida, Bob deverá “assinar” a
mensagem, utilizando para isso a sua própria chave privada, e enviar tanto a mensa-
gem cifrada quanto a mensagem assinada para Alice, para que ela possa comparar as

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

72

duas e veriﬁcar a autenticidade do emissor da mensagem. Mais uma vez, vale ressal-
tar que, nas aplicações reais de assinatura digital, caso a mensagem a ser transmitida
seja conﬁdencial, não se assina a própria mensagem, mas sim seu hash, algo que não
será feito nesse exemplo, devido ao seu caráter simpliﬁcado e meramente didático.
Prosseguindo com o exemplo, Bob então calcula a mensagem “assinada” S da seguinte
forma:

S ≡ md mod(n)

≡ (64728264834628)497028085498237186681 mod(n)
≡ 171079776946897088586 mod(n)

Essa é a mensagem assinada por Bob. Dessa forma, Bob envia a mensagem cifrada
C e a mensagem assinada S para Alice. Ao receber as mensagens, Alice utiliza sua
chave privada para decifrar a mensagem C, de maneira análoga ao processo realizado
no exemplo anterior, obtendo-se assim m = 64728264834628. Além disso, Alice deseja
veriﬁcar a autenticidade da mensagem. Ela, então, realiza a exponenciação de S por e,
que faz parte da chave pública de Bob, obtendo-se:

m′ ≡ Se mod(n)

≡ (171079776946897088586)7645321 mod(n)
≡ 64728264834628 mod(n)

Como m = m′, Alice pode ter certeza de que Bob é o verdadeiro emissor da mensagem.
Caso as mensagens cifrada e assinada apresentassem conteúdos diferentes após Alice
decifrá-las, então se poderia aﬁrmar que a entidade emissora das mensagens não se
tratava de Bob, pois a chave pública de Bob não se mostrou adequada na decifração
da mensagem assinada. Na prática, conforme já ressaltado, não se assina a própria
mensagem, mas sim o seu hash. O algoritmo utilizado para a geração do hash deve
ser conhecido tanto pelo emissor quanto pelo receptor da mensagem. Dessa forma,
de maneira análoga ao exemplo numérico apresentado, o emissor envia dois blocos
numéricos ao receptor: o hash assinado com a sua própria chave privada, e a mensagem
original cifrada com a chave pública do receptor. Da mesma forma, o receptor utiliza a
sua própria chave privada para decifrar a mensagem e, para comprovar a autenticidade
do emissor, ele utiliza a chave pública do suposto emissor verdadeiro e decifra o hash.
Em seguida, ele aplica a função geradora do hash à mensagem original decifrada, e
compara o resultado com o hash assinado, que já havia sido decifrado. Se os dois hashes
forem idênticos, está assegurada a autenticidade do emissor, pois somente o emissor
autêntico poderia cifrar o hash utilizando a sua própria chave privada, de forma que
a sua chave pública pudesse ser utilizada para decifrá-lo corretamente. Há vários
motivos que justiﬁcam a utilização do hash no processo de assinatura digital, sendo o
principal deles a proteção do caráter sigiloso da mensagem. Caso o emissor enviasse a
própria mensagem assinada (como foi feito no exemplo numérico com Bob), qualquer
entidade estranha, por exemplo o espião Eve, que pudesse interceptar a mensagem

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

73

assinada poderia facilmente descobrir o seu conteúdo, bastando para isso decifrá-la
utilizando a chave pública do emissor, que é ostensivamente divulgada. Dessa forma,
caso a assinatura digital fosse aplicada diretamente à mensagem, haveria um sério
comprometimento do sigilo da mensagem, o que justiﬁca a necessidade de se assinar
o hash ao invés da própria mensagem. Para mais detalhes sobre funções geradoras de
hashes, podem ser consultados (STINSON, 2006) e (PAAR C.; PELZL, 2010).

3.1.4 Comentários sobre o RSA

Ao se analisar com cuidado a metodologia de funcionamento do algoritmo RSA,
surge uma questão muito importante: como obter o par de primos p e q grandes uti-
lizados no RSA, se os algoritmos de fatoração conhecidos atualmente não conseguem
determinar os fatores primos de números muito grandes? Essa aparente contradição
não se veriﬁca pelo seguinte fato: apesar de não se conhecerem algoritmos eﬁcientes
o suﬁciente para se fatorar números compostos grandes, são conhecidos algoritmos
que determinam se um número é primo ou composto sem a necessidade de fatorá-lo.
Há uma variedade de testes probabilísticos, com tempo de processamento polinomial,
que podem ser aplicados em números grandes e veriﬁcar se são compostos ou pro-
vavelmente primos, sem que para isso seja necessário conhecer seus fatores. No ano
de 2002, os pesquisadores indianos Manindra Agrawal, Neeraj Kayal e Nitin Saxena,
do Indian Institute of Technology Kanpur, publicaram o artigo “PRIME is in P”, no qual
apresentaram, pela primeira vez na história, um algoritmo determinístico que deter-
mina, em tempo de processamento polinomial, se um número qualquer n é primo ou
composto. Esse algoritmo ﬁcou conhecido como AKS Primality Test, devido às iniciais
dos sobrenomes de seus desenvolvedores. O funcionamento do AKS se baseia em uma
generalização polinomial do pequeno teorema de Fermat, e seus autores receberam
diversos prêmios pelo seu desenvolvimento, entre eles o Prêmio Gödel, no ano de
2006. Para maiores detalhes acerca do funcionamento do algoritmo AKS e de outros
testes de primalidade, podem ser consultados (AGRAWAL; KAYAL; SAXENA, 2002),
(SHOKRANIAN, 2008) e (COUTINHO, 2000).

Outro aspecto importante sobre o RSA diz respeito à sua segurança. Apesar
da segurança da troca de mensagens utilizando o RSA se basear no caráter secreto da
chave privada, o método para a obtenção da chave privada a partir da chave pública
não é um segredo, mas sim um problema computacional difícil de ser resolvido em um
tempo razoável, com a tecnologia da computação atual. Portanto, apesar da utilização
do RSA ser considerada segura atualmente com chaves suﬁcientemente grandes, o
surgimento de novos algoritmos de fatoração mais eﬁcientes pode colocar toda a se-
gurança do RSA em risco. Há inúmeros pesquisadores em todo o mundo trabalhando
no possível desenvolvimento de tais algoritmos. Outra possibilidade real de quebra do

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

74

RSA consiste no desenvolvimento dos chamados “computadores quânticos”, que se
baseiam na utilização de certas propriedades quânticas da matéria em seu funciona-
mento. Mesmo que a tecnologia dos chamados “processadores quânticos” ainda não
seja aplicável comercialmente, já há uma enorme expectativa acerca dos impactos que
seriam causados pelo desenvolvimento de um computador quântico. Por exemplo, em
1994, o pesquisador Peter Shor, do AT&T Bell Laboratories, desenvolveu um algoritmo
que poderia ser implementado em um computador quântico, capaz de fatorar núme-
ros inteiros enormes, e também resolver o problema do logaritmo discreto de maneira
extremamente rápida. Peter Shor também foi ganhador do Prêmio Gödel, no ano de
1999, pela publicação desse seu artigo sobre fatoração de números inteiros em tempo
polinomial em computadores quânticos. Dessa forma, caso o computador quântico seja
realmente viabilizado, toda a utilização atual do algoritmo RSA se tornará insegura.
Trata-se de um grande risco para a estabilidade dos serviços de troca de mensagens
criptografadas na internet. Além disso, muitas infraestruturas de chaves públicas ao
redor do mundo, inclusive a ICP Brasil, possuem processos de criptograﬁa fortemente
ancorados no RSA. A desestabilização do RSA causaria forte abalo nos principais ge-
renciadores de certiﬁcados digitais do mundo, o que traria grandes prejuízos para a
sociedade. A segurança do RSA se mostra, portanto, um tema extremamente relevante
no contexto global em que o algoritmo está inserido. Para mais detalhes sobre os al-
goritmos quânticos de fatoração de inteiros, podem ser consultados (SHOR, 1997) e
(COUTINHO, 2000).

3.2 Algoritmo de Criptograﬁa com Curvas Elípticas

O estudo das curvas elípticas e de suas propriedades teve início ainda no século
XVIII, com trabalhos dos matemáticos Giulio Fagnano e Leonhard Euler sobre integrais
elípticas. Ao contrário do que sugere seu nome, as curvas elípticas não são elipses. Elas
receberam esse nome devido à sua relação com algumas integrais elípticas que sur-
gem no cálculo do comprimento do arco de elipses. As primeiras aplicações de curvas
elípticas em criptograﬁa foram propostas no ano de 1985, de maneira independente,
pelos pesquisadores Neal Koblitz e Victor S. Miller. A criptograﬁa de curvas elípticas,
conhecida como ECC devido à sigla em inglês para Elliptic Curve Cryptography, é apli-
cada à criptograﬁa assimétrica, ou de chave pública, e também possui aplicabilidade
na troca de chaves de cifras simétricas entre emissor e receptor. Quando utilizada para
a troca de chaves, a criptograﬁa de curvas elípticas recebe o nome de ECDH devido à
sigla em para Elliptic Curve Diﬃe–Hellman Key Exchange. O algoritmo ECDH funciona de
maneira semelhante ao algoritmo de troca de chaves proposto por Diﬃe e Hellman, po-
rém, ao contrário deste, sua segurança não se baseia na intratabilidade computacional
do problema do logaritmo discreto em um Z*
p, mas sim em uma versão análoga para

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

75

curvas elípticas, denominado problema do logaritmo discreto para curvas elípticas.
Não apenas o algoritmo de troca de chaves ECDH, mas a própria troca de mensagens
utilizando-se ECC se baseia na intratabilidade computacional desse problema. Mais
à frente, serão apresentados mais detalhes acerca do problema do logaritmo discreto
p e do problema do logaritmo discreto para curvas elípticas também sobre Z*
sobre Z*
p.

3.2.1 Introdução às Curvas Elípticas

, a1

K pode ser representado como um vetor não nulo (a0

Antes de se apresentar a deﬁnição de uma curva elíptica, é necessário apresentar
algumas outras deﬁnições importantes. Primeiramente, é preciso deﬁnir o que é um
espaço projetivo: um espaço projetivo de dimensão n sobre um corpo K, representado
K, é deﬁnido como o conjunto de todas as direções possíveis em Kn+1, isto é, cada
por Pn
, ..., an) ∈ Kn+1. Como
ponto de Pn
2 ou mais vetores proporcionais de Kn+1 indicam a mesma direção, o conjunto desses
vetores é tratado como apenas 1 ponto em Pn
K, e essa é uma das grandes vantagens
dos espaços projetivos. Para simpliﬁcar a notação, pode-se deﬁnir uma equivalência
entre vetores de Kn+1 da seguinte forma: os vetores não nulos (a0
, ..., bn)
são equivalentes se existe um λ ∈ K não nulo, tal que ai = λbi, com i = 0, 1, . . . , n.
Dessa forma, cada classe de equivalência dos vetores de Kn+1 representa 1 ponto em
, ..., an) um vetor de de Kn+1, sua classe de equivalência será representada
Pn
...
K, que é conhecido como “reta projetiva”, é
, a1) ∈ K2. Ainda,
= 0,
: 1), que
= 0, a classe (a0 : a1) é equivalente à
K pode ser representado como a união de todas as classes da
∈ K, com a classe (1 : 0), sendo essa classe denominada “ponto

, a1
K. Seja (a0
por (a0 : a1 :
formado pelas classes de equivalência não nulas (a0 : a1), sendo (a0
podem-se separar as classes de equivalência em que a1
da seguinte forma: caso a1
também é equivalente à classe (a0 : 1); caso a1
classe (1 : 0). Portanto, P1
forma (a0 : 1), sendo a0
no inﬁnito” de P1

(cid:44) 0, a classe (a0 : a1) é equivalente à classe ( a0
a1

(cid:44) 0 daquelas em que a1

: an). Por exemplo, P1

, ..., an) e (b0

K. Em símbolos, tem-se:

, b1

, a1

P1
K

= {(a0 : 1), sendo a0

∈ K} ∪ {(1 : 0)}

Analogamente, pode-se deﬁnir o “plano projetivo” P2
(a0 : a1 : 1), com (a0
nulos, sendo essa classe denominada “reta no inﬁnito” de P2

K separando-se as classes da forma
, a1) ∈ K2, das classes da forma (a0 : a1 : 0), com a0 e a1 não ambos

K. Em símbolos, tem-se:

P2
K

=

{︁
(a0 : a1 : 1), sendo (a0

, a1) ∈ K2}︁

∪ {(a0 : a1 : 0), com a0 e a1 não ambos nulos}

Esse será o espaço projetivo utilizado na deﬁnição de curva elíptica, que será feita em
breve.

A ideia por trás da utilização do espaço projetivo P2

K é a deﬁnição de curvas
projetivas nesse espaço. Por exemplo, em K2, dado um polinômio qualquer p(x, y) ∈

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

76

, a1

[︀
x, y

]︀
K
, pode-se deﬁnir uma curva C como sendo o conjunto dos pares ordenados
(a, b), tais que p(a, b) = 0. Os elementos constituintes dessa curva são pares ordenados
(a, b) ∈ K2, que são chamados de pontos da curva. De maneira semelhante, pode-se
deﬁnir uma curva C no espaço projetivo P2
K, em que os “pontos” da curva sejam
classes de equivalência (a : b : c) que sejam soluções de um p(x, y, z) = 0, com
]︀
[︀
x, y, z
p(x, y, z) ∈ K
. Porém, como cada classe de equivalência representa inﬁnitos
, a2) ∈ K3, para que cada classe de equivalência seja um ponto
vetores equivalentes (a0
da curva, é necessário que todos os vetores equivalentes dessa classe sejam solução de
p(x, y, z) = 0. Isso pode ser facilmente satisfeito restringindo-se o polinômio p(x, y, z) a
um polinômio homogêneo, isto é, todos os seus monômios devem possuir o mesmo
grau. Por exemplo, se p(x, y, z) é homogêneo de grau r, então p(λx, λy, λz) = λrp(x, y, z).
Dessa forma, se p(a, b, c) = 0, então p(λa, λb, λc) = λrp(a, b, c) = 0, e conclui-se que todos
os vetores dessa classe de equivalência serão soluções de p(x, y, z) = 0. Portanto, desde
que se respeite a restrição de se utilizar um polinômio homogêneo, pode-se deﬁnir
uma curva projetiva C como sendo o conjunto de todas as classes de equivalência
(a : b : c) ∈ P2

K, tais que p(a, b, c) = 0.

Feita a elucidação dos conceitos de espaço projetivo e curva projetiva, ﬁnalmente
pode-se deﬁnir uma curva elíptica. Para as aplicações criptográﬁcas pretendidas neste
trabalho, serão abordadas apenas curvas elípticas deﬁnidas sobre corpos de caracte-
rística diferente de 2 e 3. Há uma deﬁnição mais abrangente de curvas elípticas, que
engloba curvas deﬁnidas sobre corpos de qualquer característica. Essa deﬁnição não
será abordada neste trabalho. Para mais detalhes sobre a deﬁnição mais abrangente
de curvas elípticas, podem ser consultados (WASHINGTON, 2008) e (JUNIOR, 2003).
Para as aplicações deste trabalho, deﬁne-se curva elíptica E sobre um corpo K como
uma curva projetiva em P2
K formada pelas classes de equivalência (x : y : z), tais que
y2z = x3 + Axz2 + Bz3, com constantes A, B ∈ K. Simbolicamente, tem-se:

{︁

E =

(x : y : z) ∈ P2
K

| y2z = x3 + Axz2 + Bz3, com constantes A, B ∈ K

}︁

Conforme discutido anteriormente, essas classes de equivalência podem ser separadas
em 2 grupos, aqueles em que z (cid:44) 0 e aqueles em que z = 0. O grupo das classes em
que z (cid:44) 0 é equivalente a (x : y : 1), de forma que a equação y2z = x3 + Axz2 + Bz3
se transforma em y2 = x3 + Ax + B. O grupo das classes em que z = 0 é equivalente
a (x : y : 0), de forma que a equação y2z = x3 + Axz2 + Bz3 se transforma em 0 = x3
e, portanto, x = 0. Nesse caso, as classes (x : y : 0) que pertencem à curva elíptica
são aquelas equivalentes a (0 : y : 0), que é equivalente a (0 : 1 : 0). Essa classe de
equivalência é denominada “ponto no inﬁnito” da curva elíptica, e denotada por O.
Portanto, por uma questão de simplicidade, pode-se trabalhar com os pontos das curvas
elípticas de maneira separada nas classes de equivalência em que z (cid:44) 0 ou z = 0, como
foi feito acima. Dessa forma, pode-se deﬁnir, simpliﬁcadamente, uma curva elíptica E

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

77

sobre um corpo K da seguinte forma:

{︁

E =

(x, y) ∈ K2 | y2 = x3 + Ax + B, com constantes A, B ∈ K

}︁

∪ {︀

}︀
ponto no inﬁnito O

Essa deﬁnição é conhecida como forma reduzida de Weierstrass de uma curva elíp-
tica. Apesar dessa deﬁnição simpliﬁcada não mostrar a verdadeira natureza das curvas
elípticas, em que seus pontos são classes de equivalência de P2
K, ela é muito mais conve-
niente para se realizar operações entre pontos de curvas elípticas, e será adotada neste
trabalho para as aplicações criptográﬁcas. Caso necessário, pode-se voltar à deﬁnição
projetiva sem grandes diﬁculdades. A partir deste ponto, somente a forma reduzida de
Weierstrass será utilizada nas aplicações de curvas elípticas deste trabalho. As ﬁguras
16 e 17 apresentam 2 exemplos de curvas elípticas deﬁnidas sobre R, para uma melhor
visualização dos seus “pontos”. Vale salientar que os corpos K sobre os quais serão
deﬁnidas as curvas elípticas para aplicações criptográﬁcas são corpos ﬁnitos, de forma
que a visualização de seus pontos não corresponde ao que se observa nas ﬁguras 16 e
17, em que as curvas estão deﬁnidas sobre R.

Figura 16 – Gráﬁco da Curva Elíptica y2 = x3 − 4x, deﬁnida sobre R

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

78

Figura 17 – Gráﬁco da Curva Elíptica y2 = x3 + 4x, deﬁnida sobre R

O que permite a utilização de curvas elípticas em aplicações criptográﬁcas é que
se pode deﬁnir uma operação “‘soma” entre pontos da curva, de forma que o conjunto
de seus pontos, juntamente com a operação “soma” deﬁnida, adquirem uma estrutura
de grupo abeliano. Para que essa operação esteja bem deﬁnida entre todos os pontos da
curva elíptica, é necessário que a curva seja não singular. Uma curva elíptica E formada
pelos pontos (x, y), tais que p(x, y) = y2 − x3 − Ax − B = 0, mais o ponto no inﬁnito
O, é dita não singular, ou suave, quando não possui pontos singulares. E um ponto
∂y (x, y) = 0. Portanto, para se garantir que
(x, y) de E é dito singular quando
a curva seja não singular, basta que as derivadas parciais de p(x, y) não sejam nulas
simultaneamente, isto é, deve-se evitar a seguinte situação:

∂x(x, y) = ∂p

∂p

∂p
∂x(x, y) = −3x2 − A = 0

∂p
∂x(x, y) = 2y = 0

Portanto, não se deve permitir que ocorra simultaneamente 3x2 + A = 0 e y = 0. Porém,
se y = 0, tem-se x3 + Ax + B = 0. Logo, deve-se evitar a seguinte situação:

x3 + Ax + B = 0

3x2 + A = 0

Ora, mas para que não exista x que torne as igualdades acima verdadeiras simul-
taneamente, basta que o polinômio q(x) = x3 + Ax + B não possua raízes múltiplas.
Por outro lado, sabe-se que o discriminante do polinômio cúbico q(x), cujas raízes são
− x3))2 = −(4A3 + 27B2). Portanto, garantindo-
x1
se que 4A3 + 27B2 (cid:44) 0, garante-se também a inexistência de raízes múltiplas em q(x),

, x2 e x3, é dado por ((x1

− x2)(x1

− x3)(x2

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

79

garantindo-se assim também a não-singularidade da curva elíptica E. Portanto, para
que a operação “soma” entre dois pontos da curva elíptica E sempre exista, basta que
4A3 + 27B2 (cid:44) 0.

3.2.2 Deﬁnição da Operação “soma” entre Pontos de Curvas Elípticas

Conforme citado anteriormente, o que possibilita a aplicação de curvas elípti-
cas em criptograﬁa é a estrutura de grupo abeliano que os pontos da curva adquirem
quando é deﬁnida uma certa operação “soma” entre eles. Essa operação, denomi-
nada Lei de Grupo (WASHINGTON, 2008), (JUNIOR, 2003) ou Lei da Corda-Tangente
(MARTINEZ et al., 2010), deve possuir as 5 propriedades fundamentais que deﬁnem
um grupo abeliano, que são: fechamento, associatividade, elemento neutro, elemento
inverso e comutatividade. O símbolo utilizado para se deﬁnir a operação “soma” de
pontos de curvas elípticas é +, análogo ao símbolo da soma usual de números. Portanto,
para que o conjunto de pontos de uma curva elíptica E, juntamente com a operação +
formem um grupo abeliano, deve-se ter:

1. Fechamento: sejam P e Q pontos quaisquer de E. Então, P + Q deve também ser

um ponto de E;

2. Associatividade: sejam P, Q e R pontos quaisquer de E. Então, deve-se ter (P +

Q) + R = P + (Q + R);

3. Elemento Neutro: seja P um ponto qualquer de E. Então, deve existir um ponto
N em E, tal que P + N = N + P = P. Mais à frente, ﬁcará evidente que esse ponto
N é justamente o ponto no inﬁnito O;

4. Elemento Inverso: seja P um ponto qualquer de E. Então, deve existir um ponto

−P em C, tal que P + (−P) = (−P) + P = N;

5. Comutatividade: sejam P e Q pontos quaisquer de E. Então, deve-se ter P + Q =

Q + P.

Das 5 propriedades acima, somente o fechamento e a associatividade não ﬁcarão evi-
dentes quando for apresentada a deﬁnição da “soma”. Para uma demonstração de que
tanto o fechamento quanto a associatividade, de fato, ocorrem com a deﬁnição dessa
operação, podem ser consultados (WASHINGTON, 2008) ou (MARTINEZ et al., 2010).

Na deﬁnição da operação “soma” de pontos de uma curva elíptica, serão, inici-
almente, consideradas curvas sobre o corpo K = R, devido ao forte apelo geométrico da
deﬁnição, utilizando-se retas secantes e tangentes, que são melhor visualizadas quando
a curva é deﬁnida sobre R. Porém, após o estabelecimento das expressões que deﬁnem

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

80

a operação, podem-se aplicar tais expressões em curvas elípticas deﬁnidas sobre qual-
quer corpo K cuja característica seja diferente de 2 e 3, basta que a curva elíptica seja
não singular. Dessa forma, segue a deﬁnição da operação “soma”:

= (x1

= (x2

Sejam P1

, y1) e P2

(cid:44) O. O ponto P3

, y2) pontos pertencentes a uma curva elíptica E,
+ P2, de-
dada pela equação y2 = x3 + Ax + B, com P1 e P2
nominado “soma” de P1 com P2, é deﬁnido como sendo a reﬂexão, através do eixo x, do
ponto de intersecção entre a reta que contém P1 e P2 e a curva elíptica E. Essa deﬁnição
faz uso de conceitos geométricos, que podem ser melhor visualizados quando a curva
elíptica E está deﬁnida sobre R, e foi apresentada dessa forma dar algum signiﬁcado
geométrico às expressões seguintes, que valem para qualquer corpo K de característica
diferente de 2 e 3. A ﬁgura 18 ilustra geometricamente o processo de adição de pontos
em uma curva elíptica.

, y3) = P1

= (x3

Figura 18 – Soma de Pontos em uma Curva Elíptica

Porém, o processo acima não contempla os casos em que algum dos pontos a
serem somados, ou mesmo ambos, sejam o ponto no inﬁnito O. Para estes casos, são
necessárias algumas deﬁnições extras, que serão apresentadas a seguir. Na tentativa
de deixar mais clara a deﬁnição da “soma” de pontos em uma curva elíptica de uma
maneira mais geral, os casos possíveis serão abordados de maneira separada. Tem-se:

Caso 1 - P1

(cid:44) P2 e ambos (cid:44) O.

Se x1

= x2, para que os pontos P1 e P2 pertençam à curva elíptica e sejam pontos

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

81

distintos, é necessário que y1

= −y2, pois se tem:

x3
1

+ Ax1

+ B = x3
2

+ Ax2

+ B ⇒ y2
1

= y2
2

⇒ y1

= ±y2

= y2, pois P1

(cid:44) P2, então y1

= −y2. Dessa forma, a reta que
Como não se pode ter y1
passa por P1 e P2 é vertical e, aparentemente, não intercepta a curva elíptica. Porém,
quando se utilizam coordenadas projetivas para se representar P1 e P2, a reta que passa
por esses pontos intercepta a curva elíptica em (0 : 1 : 0), que é o ponto no inﬁnto
O. Reﬂetindo o ponto no inﬁnito no eixo x, obtém-se o próprio ponto no inﬁnito, pois
(0 : y : 0) = (0 : −y : 0) = (0 : 1 : 0). Portanto, a inversão do ponto O leva a ele
= −P1, pois O é o elemento neutro
próprio. Então, P1
do grupo, conforme será mostrado nos casos 3 e 4 à frente.

= O. Nesse caso, denota-se P2

+ P2

Se x1

(cid:44) x2, calcula-se a equação da reta que passa por P1 e P2 da forma: (y − y1) =
m(x − x1), com m = (y2−y1)
(x2−x1) . É necessário determinar o ponto em que essa reta interceptará
a curva elíptica y2 = x3 + Ax + B. Fazendo-se y da reta coincidente com y da curva,
obtém-se uma equação cúbica em x, dada por:

x3 − m2x2 + (A − 2my1

+ 2m2x1)x + (B − m2x2

1

+ 2mx1y1) = 0

As três raízes da equação acima fornecem as abscissas dos três pontos de intersecção
entre a reta que passa por P1 e P2 e a curva elíptica. Porém, as abscissas de dois dos três
pontos de intersecção já são conhecidas, pois P1 e P2 são pontos da curva. Portanto, é
possível determinar a terceira abscissa utilizando-se a relação da soma das raízes da
equação:

m2 = x1
x

+ x2
= m2 − x1

′

3

′

3

+ x
⇒
− x2 e y

′

= m(x

′

3

− x1) + y1

3
, y

′

3

′

3) no eixo x, e obtém-se o ponto P3

=

Por ﬁm, realiza-se a reﬂexão do ponto (x
(x3

+ P2, com:

, y3) = P1

x3
y3

Caso 2 - P1

= P2

(cid:44) O.

′

= x
3
= −y

= m2 − x1
= m(x1

− x2
− x3) − y1

′

3

Nesse caso, como P1

= P2, não é possível encontrar uma reta secante à curva
que passe pelos dois pontos, pois eles são coincidentes. Porém, ao se construírem retas
passando por dois pontos distintos de uma curva, quanto mais os pontos se aproximam
um do outro, mais próxima essa reta se torna da reta tangente à curva naquele ponto.
= P2, basta que se tome a reta tangente à curva elíptica
Portanto, no caso em que P1
naquele ponto.

Se y1

= 0, a reta é vertical, e o caso é análogo ao caso anterior, em que P1

(cid:44) P2 e

x1

= x2, resultando em P1

+ P2

= O. Tem-se, portanto, P2

= −P1.

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

82

Se y1

(cid:44) 0, pode-se encontrar o coeﬁciente angular da reta tangente por meio de

derivação implícita da equação da curva elíptica:

2y dy
dx

= 3x2 + A ⇒

m = dy
dx

+A

= 3x2
1
2y1

Então, obtém-se a equação da reta tangente (y− y1) = m(x−x1) utilizando-se a inclinação
m calculada acima. Fazendo-se y da reta coincidente com y da curva, obtém-se uma
nova equação cúbica em x, dada por:

x3 − m2x2 + (A − 2my1

+ 2m2x1)x + (B − m2x2

1

+ 2mx1y1) = 0

Essa equação possui raiz dupla x1, portanto:

x

′

3

= m2 − x1 e y

′

3

′

= m(x
3

− x1) + y1

⇒

x3

= m2 − x1 e y3

= m(x1

− x3) − y1

= O.

Como P2

Caso 3 - P1

(cid:44) O e P2
= O, a reta que contém P1 e P2 é vertical para qualquer P1 da curva
= (−P1),
elíptica considerada. Dessa forma, a reta irá interceptar a curva em um ponto P
3
que é a reﬂexão do ponto P1 pelo eixo x. Por ﬁm, procedendo-se a reﬂexão do ponto P
3
pelo eixo x, obtém-se o próprio ponto P1. Portanto, P1
= O.

+ O = P1.

Caso 4 - P1

= P2

′

′

Este caso é uma extensão do caso anterior P1

+O = P1, permitindo-se que P1

= O.

Portanto, obtém-se: O + O = O.

Pela análise dos Casos 3 e 4, percebe-se que o ponto O funciona como elemento
neutro da “soma” deﬁnida. Vale salientar também que o processo de “soma” de pontos
de curvas elípticas descrito acima não equivale a uma simples adição das coordenadas
desses pontos e, portanto, embora compartilhem o mesmo símbolo +, não se deve
confundir a operação “soma” de pontos de uma curva elíptica com a operação usual
de soma de vetores do R2.

A título de ilustração do método apresentado, seguem abaixo dois exemplos nu-
méricos de “soma” de pontos de uma curva elíptica. Todos os cálculos foram realizados
no software SageMath.

Exemplo 1: Seja a curva elíptica E, deﬁnida sobre o corpo dos reais R, dada pela
= (3, 10) são pontos
equação y2 = x3 + 73. Por inspeção, constata-se que P1
+ P2,
(pares ordenados) pertencentes à curva elíptica E. Para se obter o ponto P3
inicialmente é necessário encontrar a equação da reta que passa pelos pontos P1 e

= (2, 9) e P2

= P1

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

83

P2, que é y = x + 7. Essa equação é facilmente obtida conforme descrito no Caso 1.
Fazendo-se y da equação coincidente com y da curva elíptica, obtém-se:

(x + 7)2 = x3 + 73
x3 − x2 − 14x + 24 = 0

⇒

′

Como já se conhecem duas das raízes dessa equação (x1

= 3), obtém-se
= −4. Substituindo-se x
3na equação da reta ou da própria
= 3. Procedendo-se a inversão do ponto (x
3), obtém-se
= (−4, −3). Alternativamente, caso se queira calcular P3 de uma maneira

facilmente a terceira raiz x
curva elíptica, obtém-se y
o ponto P3
direta, podem-se utilizar as fórmulas já determinadas no Caso 1:

= 2 e x2

, y

3

3

3

′

′

′

′

x3
y3

= m2 − x1
= m(x1

− x2
− x3) − y1

Dessa forma, têm-se:

Obtendo-se, assim, o ponto P3

= 12 − 2 − 3 = −4
= 1 · (2 − (−4)) − 9 = −3

x3
y3
= (−4, −3).

Exemplo 2: Seja a curva elíptica E, deﬁnida sobre Z

x3 + x + 6. Como 11 é um número primo, Z
é bastante simples e não será realizada aqui. Por inspeção, constata-se que P1
pertencente à curva elíptica. Para se obter o ponto 2P1
fórmulas já determinadas no Caso 2, têm-se:

11, dada pela equação y2 =
11 é, de fato, um corpo, e essa demonstração
= (2, 7)
+ P1, utilizando-se as

= P1

m = dy
dx

= (3x2

+A)

1
(2y1)

Portanto:

x3

= m2 − 2x1

e

y3

= m(x1

− x3) − y1

m = 3·22+1

2·7 mod(11) ⇒

m = 13

14 mod(11)

⇒

m = 2 · 3−1 mod(11) ⇒

m = 2 · 4 mod(11) ⇒

m = 8 mod(11)

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

84

Então:

x3

= 82 − 2 · 2 mod(11) ⇒

x3

= 60 mod(11)

⇒

x3

= 5 mod(11)

y3

= 8 · (2 − 5) − 7 mod(11) ⇒

y3

= −31 mod(11)

y3

= −9 mod(11)

y3

= 2 mod(11)

⇒

⇒

Assim, obtém-se o ponto 2P1

= P1

+ P1

= (5, 2)

Por ﬁm, seja P um ponto pertencente a uma curva elíptica E. Se k for um inteiro
não nulo, então o produto kP será kP = P + P + ... + P, com k parcelas, se k > 0. Caso
k < 0, então kP = (−k)(−P) = (−P) + (−P) + ... + (−P). Uma estratégia interessante para
se realizar a multiplicação kP consiste em se realizar sucessivas duplicações e somas
de P, até que se obtenha kP. Essa técnica é conhecida como double-and-add method,
e permite o cálculo de kP sem a necessidade de grande quantidade de memória. A
técnica funciona da seguinte forma: para se calcular 120P, por exemplo, basta realizar
a sequência 120P = 2(2(2(P + (2(P + (2(2P + P))))))) de duplicações e somas de pontos
da curva elíptica.

3.2.3 Ordem de uma Curva Elíptica e o Teorema de Hasse

Deﬁne-se ordem de uma curva elíptica E sobre um corpo K, e denota-se por #E,
a quantidade de pontos (pares ordenados (x, y)) pertencentes à curva, mais o ponto
no inﬁnito O. Também, deﬁne-se ordem de um ponto P de uma curva elíptica como
sendo o menor inteiro positivo k, tal que kP = O. Por exemplo, seja a curva elíptica E
deﬁnida sobre o corpo Z
11, dada pela equação y2 = x3 + x + 6, a mesma utilizada no
exemplo 2. Uma maneira possível de se encontrar a ordem da curva é determinar todos
os seus pontos. Isso pode ser feito por tentativas sucessivas, por exemplo, fazendo
x = 0, 1, 2, ..., 10 e veriﬁcando quais valores de y satisfazem a equação da curva modulo
11. Dessa forma, encontram-se os seguintes pontos: (2, 4), (2, 7), (3, 5), (3, 6), (5, 2), (5, 9),
(7, 2), (7, 9), (8, 3), (8, 8), (10, 2) e (10, 9). Além desses pontos, há ainda o ponto no inﬁnito
O, que pertence à curva. Portanto, como a curva possui 13 pontos, sua ordem #E = 13.
Como as curvas elípticas possuem uma estrutura de grupo abeliano com relação à sua

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

85

soma de pontos, caso a ordem de uma curva elíptica seja um número primo, pode-se
mostrar que o grupo formado por seus pontos é cíclico e, nesse caso, cada ponto da
curva, com exceção do ponto no inﬁnito, é uma raiz primitiva desse grupo. Esse fato
é uma consequência direta do teorema de Lagrange, que estabelece que a ordem de
cada um dos elementos de um grupo ﬁnito deve ser um divisor da ordem do grupo.
Portanto, no caso da curva y2 = x3 + x + 6 deﬁnida sobre Z
11, todos os seus pontos
possuem ordem 13. Por exemplo, para o ponto P = (2, 4), isso pode ser veriﬁcado por
meio dos seguintes cálculos:

2P = (5, 9)
3P = (8, 8)
4P = (10, 9)
5P = (3, 5)
6P = (7, 2)
7P = (7, 9)
8P = (3, 6)
9P = (10, 2)
10P = (8, 3)
11P = (5, 2)
12P = (2, 7)
13P = O

Para aplicações criptográﬁcas de curvas elípticas, é fundamental que se conheça a or-
dem da curva sobre o corpo K, pois esse número é um dos principais parâmetros a serem
escolhidos nos algoritmos de criptograﬁa com base em curvas elípticas. Quando se uti-
lizam corpos de ordem elevada, torna-se impraticável determinar a ordem da curva
elíptica encontrando-se todos os seus pontos e os contando. Portanto, é fundamental
que se conheça a ordem da curva de uma maneira indireta, sem que seja necessário
determinar todos os seus pontos. O teorema de Hasse fornece uma boa estimativa da
ordem de uma curva elíptica, sem que seja necessário encontrar todos os seus pontos.
Esse teorema estabelece que, dada uma curva elíptica E deﬁnida sobre um corpo ﬁnito
K com q elementos, então a ordem de E satisfaz a seguinte relação:

Portanto:

√

−2

q ≤ q + 1 − #E ≤ 2

√

q

√

q + 1 − 2

q ≤ #E ≤ q + 1 + 2

√
q

Utilizando-se o teorema de Hasse, pode-se estabelecer um intervalo de valores
possíveis para a ordem da curva E. Em aplicações práticas, pode-se utilizar o teorema
de Hasse juntamente com o teorema de Lagrange, pois, quando se conhece a ordem
de algum elemento do grupo, sabe-se que se trata de um divisor da ordem do grupo.

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

86

Portanto, quando se conhece a ordem de algum dos pontos de uma curva elíptica, sabe-
se que se trata de um divisor da ordem da própria curva. Essa informação, juntamente
com o intervalo fornecido pelo teorema de Hasse, muitas vezes é suﬁciente para se
estabelecer a ordem da curva elíptica. Para o caso particular de se conhecer a ordem de
um ponto que seja uma raiz primitiva da curva, mesmo que não se saiba previamente
que tal ponto é uma raiz primitiva, a união das duas informações (ordem do ponto e
teorema de Hasse) sempre possibilita a determinação exata da ordem da curva. Porém,
ainda há o problema de como se obter a ordem de um ponto da curva. Um dos métodos
utilizados para isso é conhecido como Baby Step, Giant Step. Trata-se de um método que
pode ser aplicado a alguns tipos de problemas, e que diminui pela metade o expoente
da quantidade de tentativas necessárias para se resolver um problema utilizando-se
o método da força bruta. Por exemplo, se um problema precisa de x tentativas para
√
x
ser resolvido, utilizando-se o método Baby Step, Giant Step, são necessárias apenas
tentativas. Esse método pode ser utilizado, inclusive, para se buscar a ordem da própria
curva elíptica, e será descrito juntamente com o procedimento para se buscar a ordem
de um determinado ponto da curva elíptica. Seja P um ponto pertencente a uma curva
elíptica E deﬁnida sobre um corpo ﬁnito K, com q elementos. Então, o algoritmo Baby
Step, Giant Step prevê os seguintes passos:

1. Calcule Q = (q + 1)P

2. Escolha um inteiro m > q 1

4 e calcule todos os pontos ±jP, para j = 0, 1, 2, . . . , m

3. Calcule todos pontos Q + k(2mP), para k = −m, −(m − 1), . . . , m, até que se obtenha

um dos pontos ±jP calculados no passo anterior

4. O ponto (q + 1 + 2mk ∓ j)P será o ponto no inﬁnito O. Seja M = q + 1 + 2mk ∓ j

5. Fatore M. Sejam p1

, ..., prseus fatores primos distintos

6. Calcule ( M
pi

)P, para i = 1, 2, . . . , r. Se ( M
pi

)P = O para algum i, então substitua M por
)P (cid:44) O para todos os valores de i, então M é a ordem

) e volte ao passo 5. Se ( M
pi

( M
pi
do ponto P

7. Para se determinar #E, basta repetir os passos 1 a 6 para vários pontos de E, até
que o MMC das ordens desses pontos divida apenas um inteiro N no intervalo
q + 1 − 2

q ≤ N ≤ q + 1 + 2

√

√

q

8. #E = N

Muitas vezes, conhece-se a ordem de uma curva elíptica deﬁnida sobre um
corpo ﬁnito K com uma quantidade q de elementos, sendo q um número pequeno, e
deseja-se conhecer a ordem dessa mesma curva deﬁnida sobre um corpo ﬁnito K com

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

87

qn elementos, para algum n ∈ N. Nesses casos, pode-se recorrer ao seguinte teorema,
derivado de uma das conjecturas de Weil (SILVERMAN, 2013), (JUNIOR, 2003), que
estabelece o seguinte:

Seja a ordem de uma curva elíptica E deﬁnida sobre um corpo ﬁnito K com
q elementos, dada por #E = q + 1 − a, para algum inteiro a. Então, a ordem de E
deﬁnida sobre um outro corpo ﬁnito K′, com qn elementos, é dada por qn + 1 − (γn + βn),
sendo γ e β determinados pela fatoração x2 − ax + q = (x − γ)(x − β). Esse teorema
possibilita que se conheça a ordem de uma curva elíptica deﬁnida sobre um corpo
ﬁnito com uma quantidade grande de elementos, conhecendo-se apenas a ordem da
curva deﬁnida sobre um corpo ﬁnito com um número bem menor de elementos, desde
que a quantidade de elementos do primeiro corpo seja uma potência da quantidade
de elementos do segundo corpo. Como exemplo de aplicação prática dos teoremas
deﬁnidos acima, juntamente com o teorema de Lagrange, a seguir serão apresentados
alguns exemplos numéricos:

Exemplo 1 - Seja uma curva elíptica E, deﬁnida sobre Z

79, que possui q = 79
elementos, descrita pela equação y2 = x3 + 10x + 5. Seja o ponto P = (30, 45), pertencente
a E. Utilizando-se o método Baby Step, Giant Step, pode-se encontrar a ordem de P:

1. Q = (79 + 1)P = 80P = (33, 13)

2. Seja m = 5 > 79

1
4 . Então:

3. Temos:

0.P = O
1.P = (30, 45)
2.P = (44, 25)
3.P = (28, 65)
4.P = (42, 75)
5.P = (33, 66)

(−0)P = O
(−1)P = (30, 34)
(−2)P = (44, 54)
(−3)P = (28, 14)
(−4)P = (42, 4)
(−5)P = (33, 13)

Q + (−5)(2 · 5 · P) = Q − 50P = (3, 33)
Q + (−4)(2 · 5 · P) = Q − 40P = (6, 26)
Q + (−3)(2 · 5 · P) = Q − 30P = (45, 16)
Q + (−2)(2 · 5 · P) = Q − 20P = (61, 47)
Q + (−1)(2 · 5 · P) = Q − 10P = (14, 19)
Q + (0)(2 · 5 · P) = Q = (33, 13)

O ponto Q + k(2mP) está na lista do passo 2, quando k = 0 e j = −5

4. M = 79 + 1 + 5 = 85

5. M = 5 · 17

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

88

6. 17P = (7, 24) (cid:44) O , 5P = (33, 66) (cid:44) O. Portanto, M = 85 é a ordem do ponto P.

Portanto, como a ordem de P é 85, a ordem da curva deve ser um múltiplo de 85. De
acordo com o teorema de Hasse, tem-se: 63 ≤ #E ≤ 97. Como o único múltiplo de 85
pertencente ao intervalo é o próprio 85, conclui-se que a ordem da curva é exatamente
85. Em outras palavras, #E = 85.

Exemplo 2 - Seja uma curva elíptica E, deﬁnida sobre Z

103, que possui q = 103
elementos, descrita pela equação y2 = x3 + 7x + 12. De acordo com o teorema de
Hasse, como q = 103, tem-se: 84 ≤ #E ≤ 124. Sejam os pontos P = (19, 0) e Q = (102, 2),
pertencentes a E. Utilizando-se o método Baby Step, Giant Step, pode-se concluir que a
ordem de P é 2, e a ordem de Q é 13. Portanto, a ordem de E deve ser um múltiplo de
2.13 = 26. Como 104 é o único múltiplo de 26 pertencente ao intervalo do teorema de
Hasse, conclui-se que a ordem da curva é 104. Isto é, #E = 104.

Exemplo 3 - Seja uma curva elíptica E, deﬁnida sobre K = Z

13, que possui q = 13
elementos, descrita pela equação y2 = x3 + 10x + 5. Sabe-se que a ordem de E deﬁnida
sobre K é 10. Deseja-se determinar a ordem de E sobre um corpo K’ = GF(135), que
possui 135 = 371293 elementos. Essa ordem será dada por qn + 1 − (γn + βn), sendo n = 5,
e γ e β determinados por x2 −ax+13 = (x−γ)(x−β), sendo a = q+1−#E = 13+1−10 = 4.
Portanto, realizando-se os cálculos, tem-se:

x2 − 4x + 13 = (x − γ)(x − β) ⇒ γ = 2 + 3i e β = 2 − 3i

Portanto:

135 + 1 − ((2 + 3i)5 + (2 − 3i)5) = 371293 + 1 − 244 = 371050

Dessa forma, conclui-se que a ordem de E deﬁnida sobre K’ = GF(135) é 371050.

A demonstração do teorema de Hasse e da validade do método Baby Step, Giant

Step podem ser encontradas em (WASHINGTON, 2008).

3.2.4 Problema do Logaritmo Discreto para Curvas Elípticas

A utilização das curvas elípticas em criptograﬁa só é possível porque se pode
construir um problema com curvas elípticas que se mostra como uma função de única
via, isto é, o cálculo é simples em uma direção, mas extremamente complicado na
direção inversa. Isso se aplica às curvas elípticas da seguinte forma: dado um ponto
P pertencente a uma curva elíptica E, deﬁnida sobre um corpo ﬁnito K, e um inteiro
k, é computacionalmente simples calcular o produto Q = kP. Porém, dados Q, P, E e
K, obter k é uma tarefa extremamente difícil do ponto de vista computacional. É nessa
assimetria da função multiplicação de pontos por um inteiro, no universo das curvas
elípticas, que se baseia a segurança das aplicações criptográﬁcas que utilizam curvas
elípticas. Essa assimetria produz o que se denomina problema do logaritmo discreto

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

89

para curvas elípticas. Apesar de não haver cálculo de exponenciações ou de logaritmos
no processo de soma de pontos de curvas elípticas, esse nome se originou devido
a sua semelhança com um outro problema, conhecido como problema do logaritmo
discreto sobre corpos ﬁnitos, em que, de fato, ocorrem tais cálculos. O problema do
logaritmo discreto sobre corpos ﬁnitos consiste no seguinte problema: Sejam a e b
inteiros não nulos modulo p, com p primo e MDC(a, p) = 1. Caso exista um inteiro k, tal
que ak ≡ b mod(p), é fácil calcular b a partir de a, k e p, mas é difícil determinar k a partir
de a, b e p. Vale salientar que o valor de k, tal que ak ≡ b mod(p) não é único, haja vista
′ = k + n(p − 1), n ∈ N, também é solução da equação modular, como
que qualquer k
consequência direta do teorema de Euler. Para não trabalhar com múltiplas soluções
para a equação, costuma-se representar a sua solução modulo (p−1), eliminando-se assim
o tratamento de múltiplas raízes. Pode-se deﬁnir o problema do logaritmo discreto
de maneira um pouco mais abrangente, para qualquer grupo multiplicativo G, da
seguinte forma: Sejam a e b ∈ G. Dado um inteiro positivo k, tal que ak = b, o problema
de se determinar b a partir de a e k costuma ser fácil de se computar utilizando-se a
técnica double-and-add, isto é, realizando-se uma sequências de duplicações a adições
do elemento a. Porém, dados a e b, costuma ser muito difícil encontrar k, pois não se
observa qualquer padrão nos resultados que surgem à medida que a é operado com
o resultado da operação anterior, o que faz com que seja necessário computar uma
grande quantidade de tentativas ai, com i = 2, 3, . . . , k para que se obtenha b, e isso é
computacionalmente muito custoso, daí o nome problema do logaritmo discreto. Como
os pontos de curvas elípticas deﬁnidas sobre corpos ﬁnitos, juntamente com a operação
“soma” deﬁnida anteriormente, possuem estrutura de grupo multiplicativo ﬁnito, o
problema do logaritmo discreto também se aplica para as curvas elípticas. O problema
consiste no fato de, dados P, k, E e K, é simples computar Q = kP, porém, dados P, Q, E
e K, é computacionalmente difícil encontrar k. A segurança da aplicação criptográﬁca
das curvas elípticas se baseia na diﬁculdade de se resolver esse problema, desde que
sejam respeitadas algumas restrições acerca da escolha da curva E, do corpo K e do
ponto P.

Antes de se apresentar como funcionam os algoritmos de ECC, convém ressaltar
que a mensagem a ser cifrada precisa ser codiﬁcada em um valor numérico, para que
as operações matemáticas pertinentes possam ser realizadas. Isso pode ser executado
de maneira bastante simples, por exemplo, utilizando-se o padrão ASCII, já apresen-
tado anteriormente. Porém, quando se utilizam algoritmos de ECC, é necessário que
se estabeleça uma relação entre a mensagem numericamente codiﬁcada e um ponto
pertencente à curva elíptica utilizada no algoritmo. Dessa forma, a mensagem nume-
ricamente codiﬁcada é inicialmente transformada em um ponto da curva elíptica e,
após a realização das operações matemáticas pertinentes, obtém-se um novo ponto,
também pertencente à curva elíptica. Esse novo ponto constitui a mensagem cifrada,

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

90

T . Caso m ≥ p

que deve ser enviada para o receptor. Portanto, é necessário utilizar-se um método
de conversão entre uma mensagem numericamente codiﬁcada m a ser cifrada e um
ponto pertencente à curva elíptica utilizada no algoritmo. Embora haja vários métodos
conhecidos para se realizar essa correspondência, será apresentado apenas um deles,
desenvolvido por Neal Koblitz, um dos pesquisadores pioneiros na aplicação de cur-
vas elípticas em criptograﬁa. Trata-se de um método probabilístico, que estabelece uma
relação entre a mensagem numericamente codiﬁcada m e um ponto da curva elíptica
2T , sendo T ∈ N* um parâmetro
utilizada, com uma probabilidade de sucesso de 1 − 1
controlável. Dessa forma, controlando-se T, pode-se limitar em valores bem pequenos
a probabilidade de fracasso do método. Segue uma descrição detalhada do método:
Seja uma curva elíptica E deﬁnida sobre um corpo K com característica p, dada pela
equação y2 = x3 + Ax + B. Seja m a mensagem que se quer cifrar, já previamente co-
diﬁcada em valor numérico. Estabelece-se o valor do parâmetro T, de forma que 1
2T
seja o máximo valor aceitável para a probabilidade de o método falhar. Deve-se ter
0 ≤ m < p
T , deve-se quebrar a mensagem m em outras mensagens menores,
e cifrá-las separadamente. Porém, na prática, como a grande maioria das mensagens
cifradas com algoritmos assimétricos são chaves secretas pequenas, que serão utiliza-
das em criptograﬁa simétrica, a necessidade de se quebrar a mensagens não ocorre com
muita frequência. Seja x j = Tm + j, para 0 ≤ j < T. Para cada um dos valores de x j,
deve-se calcular s j = x3
+ Axj + B. Se s
≡ 1 mod(p), então sj é um quadrado modulo p,
j
√
e a equação da curva elíptica está satisfeita para o ponto (xj,
sj). Para se recuperar a
sj), basta calcular m = ⌊ x j
mensagem m a partir do ponto (x j,
⌋ representa o
T
x j
maior inteiro menor ou igual a
T . Dessa forma, procedendo-se por tentativas, calcula-
se s j até que se encontre um quadrado modulo p, ou até que se tenha j = T e nenhum
quadrado modulo p tenha sido encontrado. Nesse caso, o método falhou. Porém, desde
que se escolha um valor adequado para T, a probabilidade de falha do método pode ser
limitada em valores bastante pequenos. Como cada um dos sj é, em tese, um elemento
aleatório de K, a probabilidade de s j ser um quadrado modulo p é de aproximadamente
2 . Como faz-se j variar de 0 a (T − 1), então a probabilidade de nenhum dos valores s j
1
corresponder a um quadrado modulo p é de 1
2T .

⌋ em que ⌊ x j

p−1
2

√

T

j

Segue um exemplo numérico a título de ilustração do método: Seja a curva
elíptica y2 = x3+2x+7, deﬁnida sobre Z
179. Admitindo-se uma probabilidade de falha do
(cid:27) 0, 00000095, toma-se T = 20. Seja m = 5 a mensagem que se quer cifrar.
método de 1
220
Então, faz-se x j = 100+ j, com 0 ≤ j < 20. Para j = 4, tem-se 1043+2·104+7 ≡ 64 mod(179).
Como 64 ≡ 82 mod(179), então a mensagem m = 5 pode ser representada pelo ponto
Pm = (104, 8). Para se recuperar a mensagem m a partir do ponto Pm, basta fazer
m = ⌊ 104
20

⌋ = 5, que de fato é o valor de m.

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

91

3.2.5 Criptograﬁa com Curvas Elípticas

Existem vários algoritmos criptográﬁcos baseados na intratabilidade do pro-
blema do logaritmo discreto para curvas elípticas. Como exemplos, podem-se citar o
algoritmo de troca de chaves de Diﬃe-Hellman ECDH (utilizado na troca de chaves do
aplicativo WhatsApp), o algoritmo de Massey-Omura, o algoritmo Menezes-Vanstone,
entre vários outros. Neste trabalho, serão abordados o algoritmo ElGamal baseado em
curvas elípticas, e o algoritmo ElGamal para assinatura digital. Para uma descrição
mais detalhada dos outros algoritmos, podem ser consultadas as referências (MENE-
ZES; OORSCHOT; VANSTONE, 2001) e (WASHINGTON, 2008). Inicialmente, será
apresentado o algoritmo criptográﬁco ElGamal na sua versão original e, em seguida,
será apresentada a sua versão para curvas elípticas.

O algoritmo criptográﬁco ElGamal consiste em um algoritmo de criptograﬁa
de chave pública, isto é, emissor e receptor possuem, cada um, um par de chaves,
uma pública e outra privada. Por exemplo, vamos supor que Alice e Bob desejam
trocar mensagens cifradas utilizando o algoritmo ElGamal. Alice deseja enviar uma
mensagem m cifrada para Bob. Primeiramente, é necessário que Bob escolha seu par
de chaves e divulgue a sua chave pública. Para isso, Bob escolhe um número primo
grande p, um número inteiro γ modulo p e um outro número inteiro a. Em seguida, ele
calcula β ≡ γa mod(p), divulga p, γ e β como sua chave pública e mantém a secreto,
como sua chave privada. Alice, que deseja enviar a mensagem m para Bob, escolhe
então aleatoriamente um número inteiro k e calcula os seguintes valores:

y1

≡ γk mod(p)

y2

≡ mβk mod(p)

Alice envia então (y1
calcula:

, y2) para Bob, essa é a mensagem m cifrada. Para decifrá-la, Bob

y2y

−a
1

≡ mβk(γk)

−a ≡ mβk(γa)

−k ≡ mβkβ−k ≡ m mod(p)

obtendo assim a mensagem original. A seguir, será apresentada a versão do algoritmo
ElGamal com curvas elípticas.

O algoritmo criptográﬁco ElGamal com curvas elípticas consiste também em um
algoritmo de criptograﬁa de chave pública. Analogamente ao caso anterior, supõe-se
que Alice deseja enviar para Bob uma mensagem m, cifrada utilizando-se o algoritmo
ElGamal com curvas elípticas. Primeiramente, é necessário que Bob escolha seu par de
chaves e divulgue a sua chave pública para Alice. Para isso, Bob escolhe uma curva
elíptica E e um corpo ﬁnito K, tais que o problema do logaritmo discreto seja difícil de
se resolver no grupo formado pelos pontos da curva. Bob também escolhe um ponto
P ∈ E, tal que a ordem de P possua, pelo menos, um fator primo “grande”, pois assim

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

92

previne-se um tipo de ataque ao problema do logaritmo discreto denominado método
de Pohlig-Hellman (para detalhes, consultar (MENEZES; OORSCHOT; VANSTONE,
2001) e (STINSON, 2006)). Na prática, muitas vezes toma-se um ponto P, tal que sua
ordem seja um número primo “grande”, sem outros fatores. Esse ponto P é denominado
ponto base do algoritmo. Por ﬁm, Bob também escolhe um número inteiro s, e calcula
Q = s.P. Então, Bob divulga E, K e P como parâmetros escolhidos para o algoritmo,
divulga Q como sua chave pública e mantém s secreto, como sua chave privada. Alice,
que deseja enviar a mensagem m para Bob, inicialmente expressa m como um ponto
M ∈ E. Em seguida, ela escolhe um número inteiro k (mantendo-o em segredo) e calcula
os seguintes pontos:

M1

= kP

M2

= M + kQ

Alice envia então (M1
calcula:

, M2) para Bob, essa é a mensagem m cifrada. Para decifrá-la, Bob

M2

− sM1

= M + kQ − skP = M + ksP − skP = M

obtendo assim a mensagem original. Supondo-se que o canal utilizado por Alice para
transmitir a mensagem cifrada para Bob não seja seguro, e haja um espião, Eve, capaz
, M2) enviada por Alice. Eve também conhece E, K, P e Q,
de interceptar a mensagem (M1
que são públicos. A partir dessas informações, para que Eve consiga obter a mensagem
M, é necessário que ela conheça s e calcule M = M2
− sM1, ou que ela conheça k e calcule
− kQ. Porém, como Q = sP, para se obter s a partir de P e Q, é necessário que
M = M2
Eve resolva o problema do logaritmo discreto para curvas elípticas, que não possui
tratamento computacional eﬁciente caso se façam boas escolhas de E, K e P. O mesmo
= kP. Nesses 2 problemas
ocorre quando Eve tenta obter k a partir de M1 e P, pois M1
do logaritmo discreto para curvas elípticas reside a segurança do algoritmo.

Segue um exemplo numérico a título de ilustração: Supondo-se que Alice deseja
enviar uma mensagem m, representada pelo ponto M = (5, 1743) para Bob, que publicou
os parâmetros do algoritmo como sendo E : y2 = x3 + 3x + 45, K = Z
8831 e P = (4, 11).
Secretamente, Bob escolheu s = 3, e também publicou o ponto Q = 3.P = (413, 1808),
que é sua chave pública. Alice escolhe k = 8, por exemplo, e calcula:

M1

= 8P = (5415, 6321)

M2

= M + 8Q = (6626, 3576)

Então, Alice mantém k em segredo, e envia para Bob a mensagem cifrada (M1
Para decifrá-la, Bob calcula:

, M2).

obtendo-se assim a mensagem original.

M2

− 3M1

= (5, 1743)

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

93

Por ﬁm, é preciso salientar que, para que o problema do logaritmo discreto para
curvas elípticas seja difícil o suﬁciente para garantir a segurança do algoritmo, algumas
restrições devem ser respeitadas na escolha da curva elíptica e do corpo ﬁnito utilizados.
Algumas classes especiais de curvas elípticas, conhecidas como curvas supersingulares
e curvas anômalas, devem ser evitadas para a aplicação criptográﬁca. Uma curva
elíptica E deﬁnida sobre um corpo K com q = pm elementos (p primo e m inteiro), tal
que #E = q + 1 − a, é chamada de supersingular quando p divide a. Em outras palavras,
E é supersingular se a ≡ 0 mod(p). As curvas supersingulares devem ser evitadas
porque o problema do logaritmo discreto para curvas elípticas nessa classe de curvas,
quando submetido a um ataque conhecido como ataque MOV - Menezes, Okamoto,
Vanstone, pode ser convertido em um problema do logaritmo discreto convencional,
consideravelmente mais simples de ser resolvido, por exemplo, utilizando-se o ataque
conhecido como Index Calculus. Para mais detalhes acerca desses métodos de ataque,
podem ser consultadas as referências (MENEZES; OORSCHOT; VANSTONE, 2001),
(STINSON, 2006) e (WASHINGTON, 2008). Uma curva elíptica E deﬁnida sobre um
corpo K com q = pm elementos é chamada de anômala quando #E = q. Vale ressaltar
que uma curva E anômala quando deﬁnida sobre um corpo K não necessariamente
será anômala quando deﬁnida sobre um corpo K′ (cid:44) K. As curvas anômalas devem ser
evitadas porque o problema do logaritmo discreto para curvas elípticas nessa classe de
curvas pode ser resolvido de maneira consideravelmente mais rápida que o normal,
comprometendo-se assim a segurança do processo criptográﬁco. Para mais detalhes
sobre a fragilidade do problema do logaritmo discreto para curvas elípticas anômalas,
pode ser consultada a referência (WASHINGTON, 2008). Por ﬁm, como já mencionado
anteriormente, sempre se deve utilizar um ponto P cuja ordem possua ao menos um
fator primo grande, pois, caso a ordem de P possa ser decomposta em fatores primos
pequenos, o problema do logaritmo discreto é passível de sofrer ataques com o método
de Pohlig-Hellman. Consequentemente, devem-se sempre utilizar curvas elípticas cuja
ordem possua ao menos um fator primo grande, pois, caso contrário, de acordo com
o teorema de Lagrange, não se pode obter pontos P cuja ordem possua ao menos um
fator primo grande.

3.2.6 Assinatura Digital com Curvas Elípticas

De maneira análoga ao algoritmo RSA, as curvas elípticas também podem ser
utilizadas em algoritmos de assinatura digital, algo fundamental no âmbito da cripto-
graﬁa assimétrica. Nas seções anteriores, foi apresentada a metodologia de funciona-
mento de um processo de assinatura digital utilizando-se como base o algoritmo RSA.
Analogamente, nesta seção será apresentado o algoritmo ElGamal de assinatura digital
com curvas elípticas, que utiliza como base a criptograﬁa com curvas elípticas - ECC.

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

94

O algoritmo ElGamal de assinatura digital com curvas elípticas será apresentado
por meio do seguinte exemplo: Supõe-se que Alice deseja enviar para Bob uma men-
sagem, assinada digitalmente utilizando-se o algoritmo ElGamal de assinatura digital
com curvas elípticas. Caso a mensagem seja secreta, Alice não deve assinar a própria
mensagem, mas sim o seu hash, conforme já foi explicitado anteriormente. Caso a men-
sagem não seja secreta, Alice pode assinar a própria mensagem, e o exemplo seguinte
trata apenas deste caso. Primeiramente, Alice escolhe uma curva elíptica E e um corpo
ﬁnito K, tais que o problema do logaritmo discreto seja difícil de ser resolvido com
esses parâmetros. Alice também escolhe um ponto P ∈ E, tal que a ordem de P possua,
pelo menos, um fator primo grande. A ordem de P será representada por n. Na prática,
escolhe-se um ponto P, tal que sua ordem n seja um número primo grande, sem outros
fatores. Esse ponto P é denominado ponto base do algoritmo, de maneira análoga ao
algoritmo anterior. Por ﬁm, Alice escolhe um número inteiro a, calcula Q = aP e es-
colhe também uma função f : E −→ Z que relaciona cada ponto da curva E com um
número inteiro. Alice divulga então E, K, f , P e Q, e mantém a em segredo. Para enviar
a mensagem assinada digitalmente para Bob, Alice inicialmente codiﬁca a mensagem
a ser enviada assinada como um número inteiro m, tal que m ≤ n. Caso m > n, Alice
deve escolher uma outra curva elíptica, de ordem maior. Em seguida, Alice escolhe
um número inteiro k, com MDC(k, n) = 1, e calcula R = kP. Por ﬁm, Alice calcula
s ≡ k−1(m − a f (R)) mod(n) e envia (m, R, s) para Bob, como a mensagem m assinada. Para
= mP.
veriﬁcar a autenticidade da assinatura de Alice, Bob calcula V1
= V2, então Bob considera a assinatura autêntica. Esse procedimento é válido,
Se V1
pois:

= f (R)Q + sR e V2

V1

= f (R)Q + sR ⇒

= f (R)aP + skP
Mas como s ≡ k−1(m − a f (R)) mod(n), então pode-se escrever sk = m − a f (R) + zn, com
z ∈ Z. Então:

V1

V1

= f (R)aP + (m − a f (R) + zn)P ⇒

V1

= f (R)aP + mP − a f (R)P + znP ⇒

V1

= mP + znP

Mas n é a ordem de P, de forma que nP = O. Como O é o elemento neutro da “soma”

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

95

de pontos, tem-se:

V1

= mP + zO ⇒

V1

= mP

⇒

V1

= V2

Dessa forma, para que um espião, por exemplo Eve, possa assinar uma mensagem
tentando se passar por Alice, é necessário que Eve conheça a e k para calcular s ≡
k−1(m − a f (R)) mod(n) e R = kP, respectivamente. Porém, como Q = aP, para se obter
a a partir de P e Q, é necessário que Eve resolva o problema do logaritmo discreto
para curvas elípticas, que não possui tratamento computacional eﬁciente caso se façam
boas escolhas de E, K e P. O mesmo ocorre quando Eve tenta obter k a partir de R e P,
pois R = kP. Nesses 2 problemas de logaritmo discreto para curvas elípticas reside a
= V2, pois não
autenticidade da assinatura de Alice, que Bob pode atestar quando V1
há maneiras de Eve assinar a mensagem se passando por Alice sem conhecer a e k.

Segue um exemplo numérico a título de ilustração: Supondo-se que Alice deseja
enviar uma mensagem m = 100, não secreta, assinada digitalmente para Bob. Alice
8831, P = (4, 11) e f dada por:
escolhe e publica os parâmetros E : y2 = x3 + 3x + 45, K = Z
⎧
⎪⎪⎨
⎪⎪⎩

f (P = (x, y)) = x , se P (cid:44) O
f (P) = 0 , se P = O

que relaciona a cada ponto de E um número inteiro x, que corresponde a sua própria
coordenada x. Alice calcula a ordem n do ponto P, que é igual a 4427, e também,
secretamente, escolhe um número inteiro a = 3, publicando então o ponto Q = 3P =
(413, 1808), completando assim a lista de parâmetros a serem publicados. Para enviar
a mensagem m = 100 assinada digitalmente para Bob, Alice escolhe um inteiro k = 8,
por exemplo, tal que MDC(8, 4427) = 1, e calcula R = 8P = (5415, 6321). Em seguida,
Alice calcula:

s ≡ 8

−1 · (100 − 3 · 5415) ≡ 4069 mod(4427)

Alice então envia (100, (5415, 6321), 4069) como a mensagem assinada para Bob. Para
veriﬁcar a autenticidade da assinatura de Alice, Bob calcula:

V1

= 5415 · (413, 1808) + 4069 · (5415, 6321) = (1296, 8024)

V2

= 100 · (4, 11) = (1296, 8024)

Como V1

= V2

= (1296, 8024), Bob então concluiu que a assinatura de Alice é autêntica.

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

96

3.2.7 Comentários sobre Criptograﬁa de Curvas Elípticas

Quando se analisam os algoritmos de ECC, surge o seguinte questionamento:
por que utilizar algoritmos de ECC no lugar do já estabelecido algoritmo RSA? Os al-
goritmos de ECC apresentam várias vantagens em relação ao RSA. Por exemplo, uma
grande vantagem dos algoritmos de ECC é a sua grande ﬂexibilidade, pois se pode
escolher qual o corpo ﬁnito sobre o qual a curva será deﬁnida, qual será a curva elíptica
utilizada no processo, qual será o ponto base P, etc. Claro que há uma série de restrições
a serem respeitadas para se garantir a segurança do algoritmo, porém ainda assim o
usuário goza de mais autonomia para a deﬁnição dos seus parâmetros, em comparação
com o algoritmo RSA. Dessa forma, é muito mais fácil adequar o “tamanho” dos parâ-
metros necessários para se obter um determinado nível de segurança com a demanda
do usuário do algoritmo. Uma outra vantagem da utilização dos algoritmos de ECC
é o tamanho pequeno das chaves utilizadas para se obter níveis de segurança seme-
lhantes aos obtidos utilizando-se chaves muito maiores com o RSA. Observando-se a
tabela 13, extraída de (BARKER, 2016), pode-se perceber a enorme diferença entre os
comprimentos, todos em bits, das chaves requeridas em diversos tipos de algoritmos
criptográﬁcos para se obter, aproximadamente, o mesmo nível de segurança.

Tabela 13 – Comparação entre Tamanhos de Chaves com Nível de Segurança Seme-

lhante (BARKER, 2016)

As cifras 2TDEA e 3TDEA correspondem ao triploDES, utilizado com 2 e 3
chaves distintas, respectivamente. A coluna com o título RSA apresenta comprimentos
do parâmetro n = pq do algoritmo RSA. Já a coluna com o título ECC apresenta
intervalos de comprimentos de f , que correspondem à ordem do ponto base P, utilizado
nos algoritmos de ECC descritos anteriormente. A diferença entre os valores de n
e f que proporcionam o mesmo nível de segurança com os algoritmos RSA e de
ECC, respectivamente, é enorme, e isso se traduz em custo computacional para se
realizar o processamento desses algoritmos na prática. Portanto, como os parâmetros
necessários para implementações seguras de ECC são muito menores que os parâmetros
dessas implementações com o RSA, os algoritmos de ECC são cada vez mais usados
atualmente.

Capítulo 3. Criptograﬁa de Chave Pública ou Assimétrica

97

Como exemplo da utilização cada vez maior de criptograﬁa de curvas elípticas,
pode-se citar o aplicativo de troca de mensagens WhatsApp. Conforme já citado no
capítulo anterior, o WhatsApp utiliza a cifra AES com chaves de 256 bits para cifrar
as mensagens trocadas por meio da sua plataforma. Porém, a distribuição das chaves
secretas do AES entre emissor e receptor é realizada por meio do algoritmo ECDH, de
forma que nem mesmo o próprio WhatsApp tem acesso às chaves privadas dos usuários
e, portanto, também não tem acesso à chave secreta do AES, o que impede que o próprio
WhatsApp conheça o conteúdo das mensagens. Portanto, mesmo sob determinação de
ordem judicial, o WhatsApp não possui mecanismos para revelar o conteúdo de men-
sagens trocadas entre seus usuários utilizando a combinação de criptograﬁa simétrica
(AES) e assimétrica (ECDH). Inclusive, o possível desconhecimento do poder judiciário
sobre essa impossibilidade já gerou, no passado, ordem de suspensão do aplicativo em
todo o território brasileiro, por 48 horas, sob a alegação de que o WhatsApp estaria des-
cumprindo decisão judicial referente à entrega de conteúdos de mensagens à justiça.
Por ﬁm, sobre a segurança da troca de mensagens utilizando-se o WhatsApp, há uma
ressalva que deve ser feita: embora o WhatsApp não possua mecanismos para conhecer
o conteúdo das mensagens trocadas utilizando-se sua criptograﬁa de ponta a ponta,
caso o usuário realize backup das suas mensagens em algum serviço de armazenamento
de dados, como por exemplo o Google Drive, essas mensagens transferidas para o backup
não são protegidas pela criptograﬁa do WhatsApp. Para mais detalhes sobre o protocolo
utilizado na troca de mensagens pelo WhatsApp, pode ser consultado (WHATSAPP,
2017).

A utilização atual da matemática envolvendo curvas elípticas não se restringe ao
campo da criptograﬁa. Podem-se citar como exemplos de utilização de curvas elípticas
fora do campo da criptograﬁa o algoritmo de fatoração de números inteiros baseado
em curvas elípticas, proposto pelo pesquisador H. W. Lenstra Jr. em 1987, e também
a utilização de resultados sobre curvas elípticas por A. J. Wiles, na demonstração do
último teorema de Fermat, que teve sua versão ﬁnal publicada em 1995. Por ﬁm, como
último exemplo da importância da teoria de curvas elípticas, mesmo fora da atividade
criptograﬁa, pode-se citar um dos chamados Problemas do Milênio, conhecido como
Conjectura de Birch e Swinnerton-Dyer. Trata-se de uma conjectura que, simpliﬁcada-
mente, estabelece condições necessárias e suﬁcientes para que uma determinada curva
elíptica possua inﬁnitos pontos racionais. O Clay Mathematics Institute, uma fundação
privada que se dedica ao acréscimo e à disseminação do conhecimento matemático
pelo mundo, oferece um prêmio de 1 milhão de dólares para quem conseguir resolver
qualquer um dos seus Problemas do Milênio. Para maiores detalhes sobre a utilização
de curvas elípticas fora do campo da criptograﬁa ou sobre os Problemas do Milênio,
podem ser consultados, respectivamente, (WASHINGTON, 2008) e (DEVLIN, 2005).

4 Propostas de Utilização de Criptogra-

ﬁa em Sala de Aula

98

Neste capítulo, serão apresentadas propostas de utilização de criptograﬁa em
sala de aula, em turmas do ensino fundamental II, com o objetivo de levar para o
universo do aluno algumas atividades básicas sobre esse tema. A escolha de alunos
do ensino fundamental se deu devido à sua maior receptividade para jogos e desaﬁos
matemáticos de caráter mais lúdico. A matemática e, em particular, a criptograﬁa,
quando apresentadas ao aluno em um contexto menos formal de sala de aula e mais
ligado a jogos e desaﬁos, tende a despertar maior interesse e curiosidade, sobretudo na
faixa etária que abrange os alunos do ensino fundamental II. A divisão das atividades
propostas foi relizada conforme o escalonamento de conteúdos constantes na BNCC
(BRASIL, 2017), sempre de maneira progressiva em termos de complexidade. Dessa
forma, para os alunos do 6o e 7o anos serão propostas uma atividade de cifração e
decifração utilizando cifras de deslocamento e uma atividade de cifração e decifração
utilizando cifras de transposição por várias linhas. Para os alunos do 8o ano será
proposta uma atividade de cifração e decifração utilizando a cifra de Vigenère. Por
ﬁm, para os alunos do 9o ano serão propostas uma atividade de cifração e decifração
utilizando o RSA e uma atividade de par ou ímpar por telefone, também utilizando o
RSA.

4.1 Proposta 1 - Cifra de Deslocamento

A proposta 1 terá como foco a utilização prática de cifras de deslocamento pelos
alunos do 6o e 7o anos do ensino fundamental, tanto para cifrar e decifrar mensagens,
quanto na tentativa de criptoanálise da cifra.

4.1.1 Aula 1 - Cifração e Decifração com Cifra de Deslocamento

O primeiro passo para a utilização da cifra de deslocamento em sala de aula é a
divisão dos alunos em grupos, para que haja interação entre eles nos grupos. Grupos
de 5 ou 6 alunos parecem adequados para salas de aula com 40 alunos, sendo essa
quantidade de alunos por grupo adaptável para a realidade de cada sala de aula e
de cada ano letivo. Após a divisão dos grupos, faz-se necessário mostrar aos alunos
exemplos de cifração e decifração com cifras de deslocamento com diferentes alfabetos
deslocados. É importante estabelecer diretrizes para a utilização da cifra, como por
exemplo a não utilização de caracteres acentuados ou com sinais gráﬁcos distintos

Capítulo 4. Propostas de Utilização de Criptograﬁa em Sala de Aula

99

das letras do alfabeto tradicional, como “ç”, “ã” etc. Caso a mensagem a ser cifrada
possua algum desses caracteres, eles devem ser substituídos por letras convencionais, o
que, na maioria dos casos, não prejudica o entendimento da mensagem. Outra diretriz
importante a ser estabelecida é a necessidade de ausência de espaços entre as palavras
no texto a ser cifrado, de forma que os alunos devem escrever tanto o texto claro como
o texto cifrado com as palavras de maneira concatenada, sem espaços, para diﬁcultar
a sua criptoanálise. Também, não devem ser diferenciados caracteres maiúsculos e
minúsculos na utilização da cifra de deslocamento, também com o intuito de diﬁcultar
a sua criptoanálise.

Após a divisão dos grupos e explicações sobre o funcionamento da cifra e exem-
plos, podem-se formar pares de grupos e pedir para que cada par de grupos combine
secretamente um alfabeto deslocado, que irá ser utilizado na cifração e decifração das
mensagens trocadas entre esses grupos. Por ﬁm, pode-se solicitar que cada grupo es-
colha uma mensagem, utilize o alfabeto deslocado combinado previamente para cifrar
a mensagem e envie a mensagem cifrada para o outro grupo com o qual combinou o
alfabeto deslocado, recebendo deste grupo uma mensagem cifrada da mesma forma.
Após os grupos terem, cada um, enviado e recebido uma mensagem cifrada, pede-se
que eles decifrem a mensagem recebida, utilizando o alfabeto deslocado combinado, e
leiam a mensagem. Com isso, pode-se ﬁnalizar a aula 1.

Seguem alguns exemplos de mensagens cifradas com a cifra de deslocamento,

utilizando-se alfabetos deslocados distintos:

∙ Mensagem Clara: nossomosaturmadobarulho

Alfabeto Deslocado: HIJKLMNOPQRSTUVWXYZABCDEFG

Mensagem Cifrada: UVZZVTVZHABYTHKVIHYBSOV

∙ Mensagem Clara: naoacreditoemdoendespoiselesmentemmuito

Alfabeto Deslocado: NOPQRSTUVWXYZABCDEFGHIJKLM

Mensagem Cifrada: ANBNPERQVGBRZQBRAQRFCBVFRYRFZRAGRZZHVGB

4.1.2 Aula 2 - Criptoanálise da Cifra de Deslocamento

Na aula 2, inicialmente pode-se relembrar rapidamente aos alunos como funci-
onam as cifras de deslocamento e solicitar que os grupos se juntem novamente. Nesse
momento, pode-se solicitar aos grupos que divulguem as suas mensagens cifradas na
aula 1, sem divulgar o alfabeto deslocado utilizado na cifração. Com isso, pode-se
encorajar os outros grupos a tentarem decifrar as mensagens cifradas. Essa etapa dá
aos alunos uma ideia sobre a segurança da cifra, dada sua maior facilidade ou diﬁ-
culdade em ser quebrada. Não são necessárias técnicas elaboradas para se realizar a

Capítulo 4. Propostas de Utilização de Criptograﬁa em Sala de Aula

100

criptoanálise da cifra de deslocamento, apenas tentativa e erro. Dessa forma, os alu-
nos provavelmente conseguirão decifrar as mensagens enviadas pelos demais grupos
sem grandes diﬁculdades. Pode-se encorajá-los a construir uma tabela com as 25 pos-
sibilidades de alfabetos deslocados distintos, e realizar a tentativa de cada um deles
ordenadamente, até que um texto claro seja encontrado. Esse procedimento permite
que eles percebam que, quanto maior for a quantidade de possibilidades de alfabetos
deslocados que uma cifra possui, mais difícil será quebrá-la por meio do ataque da
força bruta, isto é, por sucessivas tentativas. Com isso, pode-se ﬁnalizar a aula 2.

4.2 Proposta 2 - Cifra de Transposição por Linhas

A proposta 2 terá como foco a utilização prática de cifras de transposição por
várias linhas pelos alunos do 6o e 7o anos do ensino fundamental, tanto para cifrar e
decifrar mensagens, quanto na tentativa de criptoanálise da cifra.

4.2.1 Aula 1 - Cifração e Decifração com Cifra de Transposição por

Linhas

Os primeiros passos para se utilizarem cifras de transposição em sala de aula
são semelhantes aos adotados na utilização da cifra de deslocamento: divisão da sala
em grupos, apresentação da metodologia de funcionamento da cifra, realização de
exemplos e, por ﬁm, solicitar que os grupos formem pares e combinem entre si qual
será o número de linhas utilizadas na cifra de transposição. Novamente, é importante
estabelecer as mesmas diretrizes para a utilização da cifra: não utilizar caracteres acen-
tuados ou com sinais gráﬁcos distintos das letras do alfabeto tradicional, não utilizar
espaços entre as palavras no texto a ser cifrado e não diferenciar caracteres maiúsculos
e minúsculos na utilização da cifra de transposição.

Em seguida, pode-se solicitar que cada grupo escolha uma mensagem, utilize o
número de linhas combinado previamente para cifrar a mensagem e envie a mensagem
cifrada para o outro grupo com o qual combinou o número de linhas, recebendo deste
grupo uma mensagem cifrada da mesma forma. Após os grupos terem, cada um,
enviado e recebido uma mensagem cifrada, pede-se que eles decifrem a mensagem
recebida, utilizando o número de linhas combinado e leiam a mensagem. Com isso,
pode-se ﬁnalizar a aula 1.

Seguem alguns exemplos de mensagens cifradas com a cifra de transposição

por linhas, utilizando-se diferentes quantidades de linhas:

∙ Mensagem Clara: emterradesacicalcajeansdaparadois

Capítulo 4. Propostas de Utilização de Criptograﬁa em Sala de Aula

101

Transposição com 3 Linhas:

s

i
e a
e
m r d a c
e
t

j n a
e

o
i
c a a a d a d s

r
s p a

l
c

r

Mensagem Cifrada: EEASILJNAROMRDACCESPAITRECAAADADS

∙ Mensagem Clara: piratariaecrimeportantonaosedeveroubarnavios

Transposição com 5 Linhas:

c
r
i

p n o v b v
p a
i
o
t
r
i
r
o
r
o
i
a a m t n d o n s
a
t

e u a

a
r

s
e

e
r

a

e

e

Mensagem Cifrada: PACPNOVBVIRROTSEAIRIIROERROAAMTND
ONSTEEAAEUA

4.2.2 Aula 2 - Criptoanálise da Cifra de Transposição por Linhas

Na aula 2, novamente, pode-se relembrar rapidamente aos alunos como funcio-
nam as cifras de transposição por linhas e solicitar que os grupos se juntem novamente.
Nesse momento, pode-se solicitar aos grupos que divulguem as suas mensagens ci-
fradas na aula 1, sem divulgar o número de linhas utilizadas na transposição. Com
isso, pode-se encorajar os outros grupos a tentarem decifrar as mensagens cifradas.
Novamente, não são necessárias técnicas elaboradas para se realizar a criptoanálise
da cifra de transposição por linhas, apenas tentativa e erro. Dessa forma, os alunos
provavelmente conseguirão decifrar as mensagens enviadas pelos demais grupos sem
grandes diﬁculdades. A técnica de criptoanálise para essa cifra consiste em se contar
quantas letras tem a mensagem cifrada e dividir essas letras em linhas, de acordo com
a quantidade de linhas que se deseja testar. Caso a quantidade de linhas esteja correta,
ao se realizar a leitura das colunas de letras surgirá a mensagem clara. Logo os alunos
perceberão que a criptoanálise da cifra de transposição por linhas é mais fácil que a
criptoanálise da cifra de deslocamento, desde que o número de linhas utilizadas na
transposição seja menor que 26, o que gera uma quantidade de tentativas necessárias
menor que no caso da cifra de deslocamento. Com isso, pode-se ﬁnalizar a aula 2.

Capítulo 4. Propostas de Utilização de Criptograﬁa em Sala de Aula

102

4.3 Proposta 3 - Cifra de Vigenère

A proposta 3 terá como foco a utilização prática da cifra de Vigenére pelos alunos
do 8o ano, tanto para cifrar e decifrar mensagens, quanto na tentativa de criptoanálise
da cifra. Toda a teoria necessária para a utilização da cifra foi apresentada nas subseções
1.2.4 e 1.2.5 do capítulo 1, de forma que, neste capítulo, a abordagem será essencialmente
prática.

4.3.1 Aula 1 - Cifração e Decifração com a Cifra de Vigenère

Analogamente às propostas anteriores, inicialmente deve-se realizar a divisão
da sala em grupos, apresentar a metodologia de funcionamento da cifra de Vigenère,
seguida de exemplos com diferentes palavras-chave e, por ﬁm, solicitar que os grupos
formem pares e combinem entre si qual será a palavra-chave utilizada na cifra. Mais
uma vez, é importante estabelecer as mesmas diretrizes para a utilização das cifras
anteriores: não utilizar caracteres acentuados ou com sinais gráﬁcos distintos das letras
do alfabeto tradicional, não utilizar espaços entre as palavras no texto a ser cifrado e
não diferenciar caracteres maiúsculos e minúsculos na utilização da cifra de Vigenère.

Em seguida, pode-se solicitar que cada grupo escolha uma mensagem, utilize a
palavra-chave combinada previamente para cifrar a mensagem com a cifra de Vigenère,
e envie a mensagem cifrada para o outro grupo com o qual combinou a palavra-chave,
recebendo deste grupo uma mensagem cifrada com a mesma palavra-chave. Após os
grupos terem, cada um, enviado e recebido uma mensagem cifrada, pode-se pedir que
eles decifrem a mensagem recebida utilizando-se a palavra-chave combinada, e leiam
a mensagem. Também, pode-se solicitar aos grupos que divulguem as suas mensagens
cifradas, sem divulgar a palavra-chave, encorajando os outros grupos a tentar decifrar
essas mensagens. Nessa etapa, provavelmente os alunos não serão capazes de decifrar
as mensagens cifradas pelos outros grupos. Aproveitando-se desse momento de frus-
tração, pode-se propor uma espécie de desaﬁo entre o professor e a turma. Pode-se
solicitar que a turma toda combine secretamente uma palavra-chave de, no máximo, 4
letras (para facilitar a criptoanálise), e que cada aluno escreva uma frase para compor
a mensagem ﬁnal, sem o conhecimento do professor. Os alunos realizam então a con-
catenação de todas as frases, sem espaços ou pontuação, obtendo-se assim uma grande
mensagem a ser cifrada. Em seguida, os alunos devem utilizar a cifra de Vigenère para
cifrar essa mensagem com a palavra-chave combinada entre si, e entregar a mensagem
cifrada para o professor, que deverá tentar descobrir qual é a mensagem que os alunos
escreveram. Nesse ponto, pode-se ﬁnalizar a aula 1, com a promessa de se trazer a
mensagem devidamente decifrada na aula seguinte.

Seguem alguns exemplos de mensagens cifradas com a cifra de Vigenère, utilizando-

Capítulo 4. Propostas de Utilização de Criptograﬁa em Sala de Aula

103

se palavras-chave distintas:

∙ Mensagem Clara: sevocesquiserembrincardepiqueescondenahoradorecreiopode-

mosnosencontrarnopatio

Palavra-Chave: RECREIO

Mensagem Cifrada: JIXFGMGHYKJIZSDFTZRKOIHGGMYIVIUTSVRVRCYSZOU-
STVGZSZSRFHMAFWPFWMBTSPKVIFESRRXQC

∙ Mensagem Clara: arespostadaprimeiraquestaodaprovadematematicaeletradedaul-

timaquestaoeletrab

Palavra-Chave: ZOROASTRO

Mensagem Cifrada: ZFVGPGLKOCOGFIEXZFZELSSLTFRZDICVSWVAZHVA-
ALBTODZVHRSWVRZICHIETHIDGKOOWEVHQOS

4.3.2 Aula 2 - Criptoanálise da Cifra de Vigenère

Como ao ﬁnal da aula 1 foi estabelecido um desaﬁo entre professor e alunos,
em que o professor deveria decifrar uma mensagem cifrada pelos alunos com a cifra
de Vigenère, na aula 2 devem ser apresentadas as técnicas de criptoanálise da cifra.
Para a utilização de tais técnicas em um intervalo de tempo compatível com uma aula
do 8o ano, é necessário que se utilize um computador e alguns softwares especíﬁcos,
conforme demonstrado na subseção 1.2.5 do capítulo 1. Como é grande o número de
escolas que não dispõem de um laboratório de informática para atender uma turma
de 40 alunos, e também há a possibilidade de que grande parte dos alunos não esteja
muito familiarizada com os softwares utilizados na criptoanálise da cifra, a sugestão
para essa aula é que a criptoanálise ﬁque centrada na ﬁgura do professor, e que este
projete a tela do computador que utilizará para que os alunos possam acompanhar o
processo de criptoanálise. Utilizando as técnicas descritas na subseção 1.2.5, o professor
pode obter a palavra-chave e decifrar a mensagem, expondo seu conteúdo para os
alunos, que poderão conﬁrmar se a mensagem decifrada, de fato, está correta. Ao
longo do processo de criptoanálise, o professor pode explicar aos alunos as técnicas
utilizadas, desde a procura pelo comprimento da palavra-chave, até a resolução dos
problemas de substituição monoalfabética com a utilização da tabela de frequências
da língua portuguesa. Ao ﬁnal da decifração, pode-se encerrar a aula 2. Apesar de
essa abordagem não possibilitar que o aluno seja um participante ativo no processo
de criptoanálise, optou-se por sugeri-la devido ao fato de ser uma abordagem mais
simples de ser aplicada em um universo heterogêneo de salas de aula existente nas
escolas do Brasil.

Capítulo 4. Propostas de Utilização de Criptograﬁa em Sala de Aula

104

4.4 Proposta 4 - Algoritmo RSA

A proposta 4 terá como foco a utilização prática do algoritmo RSA por alunos
do 9o ano, tanto na cifração e decifração de mensagens, quanto na criptoanálise do
algoritmo. Toda a teoria necessária para a utilização da cifra foi apresentada na subseção
3.1.1 do capítulo 3, de forma que, neste capítulo, a abordagem será essencialmente
prática.

4.4.1 Aula 1 - Introdução à Aritmética Modular

Para a utilização do algoritmo RSA, é necessário que os alunos realizem opera-
ções modulo n. Como a aritmética modular não faz parte do conteúdo ministrado no
ensino básico brasileiro, sugere-se que, antes de se realizar a apresentação do algoritmo,
seja ministrada uma aula básica sobre aritmética modular, introduzindo-se o conceito
de congruência modulo n a partir dos conceitos de divisão euclidiana, que os alunos do
9o ano já conhecem. Também, como no RSA é necessário que os alunos encontrem o
inverso multiplicativo de um número modulo φ(n) para gerar o par de chaves, sugere-se
que sejam apresentados o algoritmo de Euclides e a teoria de resolução de equações
diofantinas lineares de 1o grau. Caso necessário, o professor pode utilizar mais uma
aula para a apresentação desses assuntos. Com isso, os alunos estarão aptos a reali-
zarem as operações necessárias para o pleno funcionamento do algoritmo RSA. Caso
o professor não queira se aprofundar tanto na aritmética modular, ele pode sugerir
que os alunos encontrem o inverso multiplicativo por tentativas, pois os valores de
n que serão utilizados nos exemplos de aplicação serão consideravelmente pequenos.
Caso o aluno tenha diﬁculdade em encontrar o inverso multiplicativo por tentativas, o
professor pode ajudá-lo nessa tarefa. Dessa forma, pode-se encerrar a aula 1.

4.4.2 Aula 2 - Cifração e Decifração com o RSA

O primeiro passo para a utilização do algoritmo RSA em sala de aula é, nova-
mente, a divisão dos alunos em grupos. Após a divisão dos grupos, faz-se necessário
mostrar aos alunos exemplos de codiﬁcação da mensagem textual em valor numérico,
exemplos de geração do par de chaves pública e privada e exemplos de cifração e
decifração da mensagem numérica previamente codiﬁcada. Para a codiﬁcação da men-
sagem textual em um valor numérico, sugere-se a adoção da tabela ASCII, apresentada
na subseção 3.1.1. Nesse caso, podem-se utilizar os espaços em branco da mensagem,
não sendo necessário escrevê-la com as letras todas concatenadas, e também podem-
se utilizar as letras maiúsculas e os sinais de pontuação, pois a tabela ASCII codiﬁca
esses espaços em branco, as letras maiúsculas e a pontuação. Porém, continua sendo
necessário não se utilizarem caracteres acentuados e o “ç”, por exemplo.

Capítulo 4. Propostas de Utilização de Criptograﬁa em Sala de Aula

105

Após a divisão dos grupos e explicações sobre o funcionamento do algoritmo,
pode-se solicitar que cada grupo escolha uma palavra ou frase curta para ser a men-
sagem, e a codiﬁque utilizando a tabela ASCII em um valor numérico. Em seguida,
pode-se solicitar que cada grupo gere seu par de chaves pública e privada, escolhendo-
se os respectivos parâmetros. Nesse ponto, sugere-se que os alunos possam fazer uso
de calculadoras, para facilitar os cálculos. Caso os alunos não disponham desse re-
curso e necessitem realizar os cálculos manualmente, sugere-se limitar a escolha dos
números primos p e q em valores menores que 20. Após a geração dos pares de chaves
pública e privada, pode-se solicitar que os grupos formem pares e troquem mensagens
cifradas entre si. Nesse momento, pode-se enfatizar aos grupos que não foi necessária
a combinação prévia de qualquer chave secreta para a troca de mensagens cifradas.
Assim, mostra-se aos alunos a verdadeira essência da criptograﬁa assimétrica quando
comparada com a criptograﬁa simétrica. Por ﬁm, solicita-se que os grupos decifrem as
mensagens recebidas utilizando para isso suas chaves privadas. Em seguida, solicita-se
que os grupos utilizem a tabela ASCII para decodiﬁcar o valor numérico obtido em
letras e, por ﬁm, possam ler o conteúdo da mensagem recebida. Neste ponto, pode-se
encerrar a aula 2.

Seguem alguns exemplos de mensagens codiﬁcadas com a tabela ASCII e cifra-
das com o algoritmo RSA, utilizando-se como parâmetros de geração da chave pública
os números p = 13, q = 17 e e = 5:

∙ Mensagem Clara: Dromedario

Mensagem Codiﬁcada: 068114111109101100097114105111

Mensagem Codiﬁcada Separada em Blocos: 068 114 111 109 101 100 097 114 105
111

Chave Pública do Grupo Receptor: (221,5)

Blocos de Mensagem Cifrados com o RSA: 204 173 076 096 186 172 054 173 209
076

∙ Mensagem Clara: A casa caiu!

Mensagem Codiﬁcada: 065032099097115097032099097105117033

Mensagem Codiﬁcada Separada em Blocos: 065 032 099 097 115 097 032 099 097
105 117 033

Chave Pública do Grupo Receptor: (221,5)

Blocos de Mensagem Cifrados com o RSA: 182 002 216 054 098 054 002 216 054
209 104 050

Capítulo 4. Propostas de Utilização de Criptograﬁa em Sala de Aula

106

4.4.3 Aula 3 - Criptoanálise do Algoritmo RSA

A criptoanálise do algoritmo RSA consiste, basicamente, em se encontrar o
inverso multiplicativo do número e modulo φ(n). Para isso, é preciso calcular φ(n) =
(p − 1)(q − 1). Portanto, o primeiro passo necessário para se realizar a criptoanálise do
RSA é encontrar a fatoração de n = pq. Em seguida, encontra-se d = e−1 mod(φ(n)) e
se pode decifrar a mensagem enviada com a chave pública (n, e). Pode-se sugerir que
os grupos de alunos, que estavam organizados em pares para troca de mensagens, se
misturem, gerando novos pares de grupos. Cada grupo divulga para seu novo par
qual é a sua chave pública (n, e) e qual foi a mensagem recebida na etapa anterior
da atividade, cifrada com essa chave pública, e desaﬁa o grupo a descobrir qual o
conteúdo da mensagem. Os grupos devem então fatorar n, calcular φ(n), encontrar
d = e−1 mod(φ(n)) e realizar a decifração da mensagem. Como os valores de n utilizados
são pequenos, os alunos não devem encontrar grandes problemas na sua fatoração.
Caso o grupo tenha diﬁculdades para encontrar o valor de d, pode ser solicitada ajuda
do professor nessa etapa. Dessa forma, encoraja-se que os próprios alunos realizem a
criptoanálise e percebam que o algoritmo se torna mais forte à medida que se aumenta
o valor de n, diﬁcultando assim a sua fatoração. Neste ponto, pode-se encerrar a aula
3.

4.5 Proposta 5 - Par ou Ímpar por Telefone com o RSA

A proposta 5 terá como foco a utilização do algoritmo RSA para se viabilizar um
jogo de par ou ímpar por telefone, de maneira que nenhuma das partes possa trapacear.
Essa proposta não será dividida em aulas, apenas será apresentada a sugestão de como
propor a brincadeira aos alunos. Essa aplicação do algoritmo RSA foi baseada na
sugestão contida em (MORAIS, 2019).

Propõe-se que os alunos Alice e Bob realizem um jogo de par ou ímpar pelo
telefone, sem a possibilidade de que qualquer um deles trapaceie. Para isso, ambos
devem possuir uma chave pública, sendo (nA, eA) a chave pública de Alice e (nB, eB)
a chave pública de Bob. Então, tanto Alice quanto Bob escolhem uma mensagem
textual que identiﬁque qual será o número escolhido no par ou ímpar. Por exemplo,
Alice pode escolher a mensagem “raiz quadrada de 36” para indicar que seu número
escolhido é 6. Após a escolha das mensagens textuais, estas mensagens devem ser
codiﬁcadas em valor numérico (utilizando o ASCII, por exemplo), de forma que as
mensagens de Alice e Bob, já codiﬁcadas, serão denominada mA e mB, respectivamente.
Então, Alice calcula CA ≡ (mA)eA mod(nA) e envia CA para Bob. Analogamente, Bob
calcula CB ≡ (mB)eB mod(nB) e envia CB para Alice. Nesse momento, eles devem decidir
quem será “par” e quem será “ímpar” no jogo. Pode-se observar que essa escolha será

Capítulo 4. Propostas de Utilização de Criptograﬁa em Sala de Aula

107

aleatória, pois Alice não conhece a mensagem mB com o número de Bob, nem Bob
conhece a mensagem mA com o número de Alice, ambos conhecem apenas CB e CA,
respectivamente, que precisam das respectivas chaves privadas para serem decifrados.
Portanto, a escolha do “par” ou “ímpar” é perfeitamente justa. Por ﬁm, para se decidir
quem ganhou o jogo, Alice envia mA para Bob, e Bob envia mB para Alice, de forma
que eles ﬁcam sabendo qual foi o número escolhido pelo adversário e podem veriﬁcar
quem foi o vencedor. Supondo-se que Bob, após receber mA de Alice, deseje trapacear
e enviar para ela uma mensagem m*
B diferente da sua escolha prévia mB. Nesse caso,
Alice pode facilmente identiﬁcar a trapaça realizando a operação C*
B)eB mod(nB)
B
e veriﬁcando que C*
(cid:44) CB, o que mostra que Bob alterou a sua escolha prévia mB.
B
Portanto, procedendo-se dessa maneira, pode-se promover um jogo de par ou ímpar
perfeitamente seguro e realizado por telefone, por exemplo, sem a necessidade de Alice
e Bob estarem ﬁsicamente presentes no mesmo lugar.

≡ (m*

5 Conclusões

108

Por ﬁm, após a apresentação de alguns tópicos de criptograﬁa e seu desenvol-
vimento ao longo da história, de algumas cifras de criptograﬁa simétrica e de outras
de criptograﬁa assimétrica, bem como de algumas propostas de aplicação de cripto-
graﬁa em sala de aula, é preciso ressaltar que o assunto é extremamente rico e vasto,
e este trabalho não teve a pretensão de cobri-lo de maneira abrangente. O leitor in-
teressado encontrará vasta bibliograﬁa sobre o assunto, que tem se tornado cada vez
mais relevante na sociedade, sobretudo nas aplicações mais modernas de tecnologia
da informação. Porém, apesar de vasta, grande parte dessa bibliograﬁa se encontra es-
crita em língua inglesa, sobretudo os títulos que tratam de aplicações mais atuais. Com
este trabalho, espera-se contribuir, mesmo que com uma ínﬁma parte, para a maior
divulgação em língua portuguesa da criptograﬁa na sociedade, sobretudo nos círculos
escolares. Talvez a abordagem de alguns tópicos mais básicos de criptograﬁa na escola,
principalmente no ensino fundamental, possam aumentar a visibilidade e o interesse
dos alunos por essa área. Foi com esse intuito que foram propostas as atividades do
capítulo 4.

Como se tem observado uma divulgação cada vez maior das olimpíadas de
matemática nas escolas brasileiras, acompanhada do crescimento do número de par-
ticipantes e medalhistas, talvez num futuro próximo possam ser criadas no Brasil
competições semelhantes na área de criptograﬁa. Com certeza, essas competições se-
riam muito bem recebidas pelos alunos, sempre ávidos por desaﬁos. Atualmente, há
uma olimpíada internacional de criptograﬁa, chamada NSUCRYPTO, organizada pela
Novosibirsk State University, na Rússia, cuja participação é aberta ao público em ge-
ral, por meio da internet. Talvez, se houvesse mais divulgação e algum estímulo para
que os estudantes brasileiros participassem dessa competição, haveria cada vez mais
pessoas interessadas em estudar criptograﬁa no país. Para mais informações sobre a
NSUCRYPTO, pode-se consultar o site da olimpíada na internet: nsucrypto.nsu.ru.

Finalmente, encerrando este trabalho, ﬁca a reﬂexão sobre a enorme importân-
cia da criptograﬁa como instrumento de soberania nacional. Na visão do autor deste
trabalho, um país que se propõe a manter o caráter secreto no trânsito das suas in-
formações, sobretudo as mais sensíveis, não deveria importar tecnologia criptográﬁca
desenvolvida por outros países, sob o risco de ser espionado pelos desenvolvedores. O
desenvolvimento de ciência criptográﬁca nacional, desde o fomento da pesquisa básica,
até o projeto e implementação de aplicações práticas em hardware e software, deveriam
ser, novamente na visão do autor deste trabalho, uma pauta prioritária na agenda dos
investimentos governamentais em segurança nacional.

Referências

109

AGRAWAL, M.; KAYAL, N.; SAXENA, N. Primes is in p. Ann. of Math, v. 2, p. 781–793,
2002. Citado na página 73.

BARKER, E. NIST Special Publication 800-57 Recommendation for Key Management – Part
1: General. Rev. 4. 2016. Citado 2 vezes nas páginas 10 e 96.

BRASIL. Base Nacional Comum Curricular (BNCC). 2017. Brasília: MEC/Secretaria de
Educação Básica. Citado 2 vezes nas páginas 14 e 98.

COUTINHO, S. Números Inteiros e Criptograﬁa RSA. Rio de Janeiro, Brasil.: IMPA, 2000.
ISBN 9788524401244. Citado 5 vezes nas páginas 16, 20, 41, 73 e 74.

DEVLIN, K. The Millennium Problems: The Seven Greatest Unsolved Mathematical Puzzles
of Our Time. London - UK: Granta, 2005. Citado na página 97.

DOOLEY, J. F. History of Cryptography and Cryptanalysis. Galesburg, IL, USA.: Springer
International Publishing, 2018. ISBN 9783319904436. Citado 2 vezes nas páginas 13
e 16.

GLEICK, J. The Information: A History, a Theory, a Flood. New York, USA.: Vintage Books,
2012. ISBN 9781400096237. Citado na página 17.

HEFEZ A.; VILLELA, M. L. T. Códigos Corretores de Erros. Rio de Janeiro, Brasil.: IMPA,
2008. ISBN 9788524401695. Citado na página 17.

ICP-BRASIL. Padrões e Algoritmos Criptográﬁcos da ICP-Brasil - DOC ICP-01.01 Versão
em: <https://www.iti.gov.br/images/repositorio/legislacao/
4.1. 2018. Disponível
documentos-principais/DOC-ICP-01.01_-_versao_4.1_PADROES_E_ALGORITMOS_
CRIPTOGRAFICOS_DA_ICP-BRASIL.pdf>. Citado 2 vezes nas páginas 40 e 45.

JUNIOR, E. A. D. C. Curvas Elípticas e Aplicações a Criptograﬁa. Dissertação (Dissertação
de Mestrado em Matemática) — Universidade de Brasília - UnB, Brasília, Brasil., 2003.
Citado 3 vezes nas páginas 76, 79 e 87.

JUNIOR, E. C. V. B. Introdução a Sistemas Criptográﬁcos e o uso de Geradores de Sequências
de Números Aleatórios e Pseudo-Aleatórios. Dissertação (Dissertação de Mestrado Proﬁs-
sional em Matemática - PROFMAT) — Universidade de Brasília - UnB, Brasília, Brasil.,
2014. Citado na página 33.

KAHN, D. The Codebreakers: The Comprehensive History of Secret Communication from
Ancient Times to the Internet. New York, NY: Scribner, 1996. Citado 2 vezes nas páginas
16 e 18.

MARTINEZ, F. et al. Teoria dos números: um passeio com primos e outros números familiares
pelo mundo inteiro. Rio de Janeiro - RJ: IMPA, 2010. (Projeto Euclides). Citado na página
79.

MENEZES, A. J.; OORSCHOT, P. C. V.; VANSTONE, S. A. Handbook of Applied Crypto-
graphy. [S.l.]: CRC Press, 2001. Citado 4 vezes nas páginas 56, 91, 92 e 93.

Referências

110

MORAIS, R. Curiosidades da Matemática (para não matemáticos). Brasília, DF: Ideal, 2019.
Citado na página 106.

NIST. Data Encryption Standard (DES). 1999. FIPS Publication 46-3. Citado 3 vezes nas
páginas 35, 36 e 46.

NIST. Advanced Encryption Standard. 2001. FIPS Publication 197. Citado 2 vezes nas
páginas 36 e 65.

PAAR C.; PELZL, J. Understanding Cryptography. Berlin, Germany.: Springer-Verlag
Berlin Heidelberg, 2010. Citado 5 vezes nas páginas 34, 43, 55, 56 e 73.

QUARESMA, P. Frequency Analysis of the Portuguese Language. Coimbra, Portugal, 2008.
Citado 4 vezes nas páginas 10, 29, 30 e 31.

SALOMON, D. Coding for Data and Computer Communications. New York, USA.: Springer
Science & Business Media, 2006. Citado na página 36.

SHANNON, C. E. A mathematical theory of communication. The Bell System Technical
Journal, v. 27, n. 3, p. 379–423, 1948. Citado na página 17.

SHANNON, C. E. Communication theory of secrecy systems. The Bell System Technical
Journal, v. 28, n. 4, p. 656–715, 1949. Citado na página 17.

SHOKRANIAN, S. Uma Introdução à teoria dos números. Rio de Janeiro: Ciencia Moderna,
2008. Citado na página 73.

SHOKRANIAN, S. Criptograﬁa Para Iniciantes. Rio de Janeiro, Brasil.: CIENCIA MO-
DERNA, 2012. ISBN 9788539902750. Citado na página 17.

SHOR, P. Polynomial-time algorithms for prime factorization and discrete logarithms
on a quantum computer. SIAM Journal on Computing, v. 26, n. 5, p. 1484–1509, 1997.
Citado 2 vezes nas páginas 41 e 74.

SILVERMAN, J. The Arithmetic of Elliptic Curves. New York - USA: Springer New York,
2013. (Graduate Texts in Mathematics). Citado na página 87.

SINGH, S. O Livro dos Códigos. Rio de Janeiro, Brasil.: RECORD, 2011. ISBN
9788501055989. Citado 10 vezes nas páginas 16, 18, 20, 22, 23, 25, 32, 33, 35 e 37.

STINSON, D. Cryptography: Theory and Practice, Third Edition. Boca Raton, FL, USA.: Tay-
lor & Francis, 2006. (Discrete Mathematics and Its Applications). ISBN 9781584885085.
Citado 5 vezes nas páginas 34, 43, 73, 92 e 93.

TRAPPE W.; WASHINGTON, L. Introduction to Cryptography: With Coding Theory, Second
Edition. Upper Saddle River, NJ, USA.: Pearson Prentice Hall, 2006. (Featured Titles for
Cryptography Series). ISBN 9780131862395. Citado na página 43.

WASHINGTON, L. Elliptic Curves: Number Theory and Cryptography, Second Edition. Boca
Raton, FL, USA.: CRC Press, 2008. (Discrete Mathematics and Its Applications). ISBN
9781420071474. Citado 6 vezes nas páginas 76, 79, 88, 91, 93 e 97.

WHATSAPP. WhatsApp Encryption Overview - Technical White Paper. California - USA,
2017. Citado 2 vezes nas páginas 66 e 97.

