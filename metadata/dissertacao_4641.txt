Universidade Estadual Paulista (cid:16)Jœlio de Mesquita Filho(cid:17)

Instituto de GeociŒncias e CiŒncias Exatas
Campus de Rio Claro

Aplica(cid:231)ıes de `lgebra Linear aos C(cid:243)digos
Corretores de Erros e ao Ensino MØdio

Everton Rodrigo Nicoletti

Disserta(cid:231)ªo apresentada ao Programa de P(cid:243)s-
Gradua(cid:231)ªo (cid:21) Mestrado Pro(cid:28)ssional em Mate-
mÆtica em Rede Nacional-PROFMAT como
requisito parcial para a obten(cid:231)ªo do grau de
Mestre

Orientadora
Profa. Dra. Carina Alves

2015

512.5
N643a

Nicoletti, Everton Rodrigo

Aplica(cid:231)ıes de `lgebra Linear aos C(cid:243)digos Corretores de Erros
[s.n.],

e ao Ensino MØdio/ Everton Rodrigo Nicoletti- Rio Claro:
2015.

71 f., il., (cid:28)gs., tabs.

Disserta(cid:231)ªo (mestrado) - Universidade Estadual Paulista, Insti-

tuto de GeociŒncias e CiŒncias Exatas.

Orientadora: Carina Alves

1. `lgebra Linear. 2. Matrizes. 3. C(cid:243)digos lineares. 4. C(cid:243)digos

de Hamming. I. T(cid:237)tulo

Ficha CatalogrÆ(cid:28)ca elaborada pela STATI - Biblioteca da UNESP
Campus de Rio Claro/SP

TERMO DE APROVA˙ˆO

Everton Rodrigo Nicoletti
Aplica(cid:231)ıes de `lgebra Linear aos C(cid:243)digos Corretores de

Erros e ao Ensino MØdio

Disserta(cid:231)ªo aprovada como requisito parcial para a obten(cid:231)ªo do grau
de Mestre no Curso de P(cid:243)s-Gradua(cid:231)ªo Mestrado Pro(cid:28)ssional em MatemÆ-
tica em Rede Nacional-PROFMAT do Instituto de GeociŒncias e CiŒncias
Exatas da Universidade Estadual Paulista (cid:16)Jœlio de Mesquita Filho(cid:17), pela
seguinte banca examinadora:

Profa. Dra. Carina Alves
Orientadora

Profa. Dra. Marta Cilene Gadotti
IGCE - Unesp

Profa. Dra. Cintya Wink de Oliveira Benedito
IMECC - Unicamp

Rio Claro, 24 de Fevereiro de 2015

(cid:192) minha mªe.

Agradecimentos

A Deus que permitiu a conclusªo deste trabalho.
Aos meus pais, em especial (cid:224) minha mªe, que apesar de pouca instru(cid:231)ªo sempre

me incentivou.

A Sociedade Brasileira de MatemÆtica que proporcionou, atravØs do PROFMAT -
Mestrado Pro(cid:28)ssional em MatemÆtica em Rede Nacional, a oportunidade de aprimorar
minha forma(cid:231)ªo pro(cid:28)ssional.

A CAPES pelo apoio (cid:28)nanceiro.
Aos professores do Departamento de MatemÆtica da Universidade Estadual Paulista
- Unesp/Rio Claro que de alguma forma contribu(cid:237)ram com minha forma(cid:231)ªo acadŒmica.
A minha orientadora Profa. Dra. Carina Alves que dedicou seu tempo, comparti-
lhando seus conhecimentos e toda sua experiŒncia acadŒmica, para o enriquecimento
da minha disserta(cid:231)ªo.

Aos professores FlÆvio R. Gazola e Taciana Belluci, que colaboraram com a revisªo

ortogrÆ(cid:28)ca da L(cid:237)ngua Portuguesa e Inglesa.

"O impulso para descobrir segredos estÆ profundamente enraizado na natureza
humana; mesmo a mente menos curiosa Ø estimulada pela perspectiva de
compartilhar o conhecimento oculto aos outros. [...]
Hist(cid:243)rias de detetive e palavras cruzadas divertem a maioria. JÆ a quebra de c(cid:243)digos
secretos pode ser uma tarefa para poucos".
John Chadwick

Resumo

Este trabalho aborda conceitos bÆsicos de `lgebra Linear e suas aplica(cid:231)ıes no
desenvolvimento da Teoria de C(cid:243)digos Corretores de Erros. O uso desta ferramenta
matemÆtica simpli(cid:28)ca a gera(cid:231)ªo e a decodi(cid:28)ca(cid:231)ªo dos c(cid:243)digos lineares. Destacamos
tambØm a import(cid:226)ncia de se trabalhar com este tema na educa(cid:231)ªo bÆsica.

Palavras-chave: `lgebra Linear, Matrizes, C(cid:243)digos lineares, C(cid:243)digos de Hamming.

Abstract

The present work addresses basic concepts of Linear Algebra and its applications in
the development of the Theory of Error Correcting Codes. The use of this mathematical
tool simpli(cid:28)es the generation and decoding of linear codes. This dissertation also
highlights the importance of working with this subject in high school.

Keywords: Linear Algebra, Matrices, Linear codes, Hamming codes.

Lista de Figuras

3.1 Diagrama - Sistema de Comunica(cid:231)ªo . . . . . . . . . . . . . . . . . . .
3.2 D(cid:237)gitos de paridade . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.3 Divisªo binÆria entre p(X) e G(X)
. . . . . . . . . . . . . . . . . . . .

4.1 Canal ruidoso . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

29
31
34

35

5.1 Representa(cid:231)ªo dos c(cid:243)digos binÆrios lineares como um subespa(cid:231)o vetorial

44

6.1 Alfabeto fonte e alfabeto c(cid:243)digo para c(cid:243)digos com matrizes . . . . . . .
6.2 Avalia(cid:231)ªo: multiplica(cid:231)ªo de matrizes
. . . . . . . . . . . . . . . . . . .
6.3 Avalia(cid:231)ªo: matriz inversa . . . . . . . . . . . . . . . . . . . . . . . . . .

59
65
66

Lista de Tabelas

2.1 Soma e multiplica(cid:231)ªo em Z2 . . . . . . . . . . . . . . . . . . . . . . . .

3.1 Alfabeto fonte e alfabeto c(cid:243)digo para o c(cid:243)digo de CØsar . . . . . . . . .

. . . . . . . . . . . . . . . .
4.1 C(cid:243)digo de Hamming (7,4) - Bits de dados
4.2 C(cid:243)digo de Hamming (7,4) - Bits de paridade . . . . . . . . . . . . . . .
4.3 Rela(cid:231)ªo entre dist(cid:226)ncia m(cid:237)nima e nœmero de erros . . . . . . . . . . . .

5.1 C(cid:243)digo C(4,2) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.2 C(cid:243)digo C(5,3) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

6.1 Alfabeto fonte e alfabeto c(cid:243)digo para c(cid:243)digos com matrizes . . . . . . .

15

30

36
37
41

45
46

64

SumÆrio

1 Introdu(cid:231)ªo

2 Preliminares

2.1 Anel e Corpo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2 Matrizes e Sistemas Lineares . . . . . . . . . . . . . . . . . . . . . . . .
2.3 Espa(cid:231)o e Subespa(cid:231)o Vetorial . . . . . . . . . . . . . . . . . . . . . . . .
2.3.1 Bases e Dimensªo . . . . . . . . . . . . . . . . . . . . . . . . . .
2.3.2 Produto interno, Complemento Ortogonal e Soma Direta . . . .
. . . . . . . . . . . . . . .

2.4 Transforma(cid:231)ıes Lineares e Operador Linear

3 Teoria da Informa(cid:231)ªo

3.1 Codi(cid:28)ca(cid:231)ªo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2 Decodi(cid:28)ca(cid:231)ªo (cid:218)nica e Decodi(cid:28)ca(cid:231)ªo Instant(cid:226)nea . . . . . . . . . . . . .
3.3 C(cid:243)digos de Bloco . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.4 Detec(cid:231)ªo de erro . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

4 C(cid:243)digos Corretores de Erros

4.1 C(cid:243)digos de Hammimg . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.1.1 A mØtrica de Hamming . . . . . . . . . . . . . . . . . . . . . . .
4.2 Detec(cid:231)ªo de erros . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.3 Corre(cid:231)ªo de erros . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Isometrias em An . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.4
4.5 C(cid:243)digos Equivalentes . . . . . . . . . . . . . . . . . . . . . . . . . . . .

5 C(cid:243)digos de Bloco Lineares

5.1 Representa(cid:231)ªo de um c(cid:243)digo linear como imagem de uma transforma(cid:231)ªo
linear . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.2 Representa(cid:231)ªo de um c(cid:243)digo linear como nœcleo de uma transforma(cid:231)ªo
linear . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . .
5.3 Matriz geradora de um c(cid:243)digo linear
5.4 Matriz de veri(cid:28)ca(cid:231)ªo de paridade . . . . . . . . . . . . . . . . . . . . .
5.5 C(cid:243)digos de Hamming sob o ponto de vista matricial . . . . . . . . . . .

11

14
14
15
18
19
21
23

28
29
30
31
32

35
36
37
38
40
41
42

44

47

47
49
53
56

6 Aplica(cid:231)ıes no Ensino MØdio

6.1 Mensagens secretas com matrizes

. . . . . . . . . . . . . . . . . . . . .

7 Considera(cid:231)ıes Finais

ReferŒncias

59
59

68

70

1 Introdu(cid:231)ªo

Durante milhares de anos, houve a preocupa(cid:231)ªo em manter informa(cid:231)ıes secretas,
como por exemplo, o C(cid:243)digo de CØsar, usado pelo imperador romano Jœlio CØsar, para
proteger mensagens de signi(cid:28)cado militar. Em contrapartida, houve tambØm o inte-
resse em desvendar tais informa(cid:231)ıes. A descoberta de mensagens sigilosas possibilitou
o surgimento dos c(cid:243)digos, com os quais, atravØs de diferentes estratØgias, foi poss(cid:237)vel
se comunicar em segredo. A partir do momento que um determinado c(cid:243)digo perde sua
(cid:28)nalidade, faz-se necessÆrio a cria(cid:231)ªo de c(cid:243)digos mais complexos e dif(cid:237)ceis de serem
decifrados. Deste modo, a matemÆtica moderna contribui, de forma e(cid:28)caz, com a ela-
bora(cid:231)ªo de tØcnicas para di(cid:28)cultar cada vez mais a decodi(cid:28)ca(cid:231)ªo desses c(cid:243)digos. Apesar
de suas ra(cid:237)zes no passado, a cria(cid:231)ªo dos c(cid:243)digos estÆ diretamente relacionada com o
mundo atual, principalmente com a inven(cid:231)ªo do computador e os avan(cid:231)os tecnol(cid:243)gicos.
Atualmente, com o grande volume de informa(cid:231)ıes que circulam na Internet, Ø de
extrema import(cid:226)ncia que esse processo de comunica(cid:231)ªo seja seguro, por exemplo, ao
realizarmos transa(cid:231)ıes (cid:28)nanceiras, como compras com cartªo de crØdito e envio de
senhas na rede.

O presente trabalho tem como objetivos: mostrar que a teoria dos c(cid:243)digos Ø um
campo de pesquisa atual, muito atraente, tanto do ponto de vista cient(cid:237)(cid:28)co quanto
tecnol(cid:243)gico; evidenciar as caracter(cid:237)sticas e a import(cid:226)ncia de alguns c(cid:243)digos; aplicar, ao
estudo da teoria dos c(cid:243)digos, conteœdos de `lgebra bÆsica bem como os de `lgebra
Linear, articulando conceitos e tØcnicas com aplica(cid:231)ıes imediatas no cotidiano, sempre
com a (cid:28)nalidade de garantir seguran(cid:231)a ao processo de comunica(cid:231)ªo; elaborar sequŒn-
cias didÆticas com esse tema para serem aplicadas (cid:224) n(cid:237)vel de educa(cid:231)ªo bÆsica, mais
precisamente no Ensino MØdio, articulando o curr(cid:237)culo com questıes que envolvam
diretamente a realidade dos alunos, como por exemplo, o acesso (cid:224)s redes sociais na
Internet atravØs de senhas pessoais e secretas.

Como toda codi(cid:28)ca(cid:231)ªo Ø pass(cid:237)vel de ser decodi(cid:28)cada, os avan(cid:231)os alcan(cid:231)ados neste
sentido tŒm como (cid:28)nalidade garantir cada vez mais que a troca de informa(cid:231)ıes seja
feita sem a ocorrŒncia de erros e da forma mais segura poss(cid:237)vel. (cid:201) neste aspecto que
a aplica(cid:231)ªo de teorias matemÆticas, (cid:224) luz das teorias da `lgebra Linear, possibilita a
compreensªo da complexa decodi(cid:28)ca(cid:231)ªo de mensagens secretas.

Segundo Tamarozzi (2001), citado por Groenwald (2011, p.2), "o estudo dos c(cid:243)digos

11

12

possibilita o desenvolvimento de atividades didÆticas envolvendo o conteœdo de matrizes
que se constitui em material œtil para exerc(cid:237)cios, atividades e jogos de codi(cid:28)ca(cid:231)ªo, onde
o professor pode utilizÆ-los para (cid:28)xa(cid:231)ªo de conteœdos". AlØm de (cid:28)xÆ-los, as atividades
aqui propostas possibilitam a constru(cid:231)ªo do racioc(cid:237)nio, a partir do conhecimento prØvio
dos alunos, para compreender o conceito de matriz inversa.

Para Shokranian (2005), citado por Groenwald (2010, p.2), "enviar uma mensagem
em c(cid:243)digo pode servir para dois objetivos, que sªo: enviar uma mensagem secreta e
proteger o conteœdo da mensagem contra pessoas nªo autorizadas". Neste sentido,
os alunos estarªo desenvolvendo estratØgias para quebrar um c(cid:243)digo e tambØm para
tornar a decodi(cid:28)ca(cid:231)ªo de seu c(cid:243)digo mais dif(cid:237)cil.

As situa(cid:231)ıes problema sªo articuladas ao cotidiano dos alunos tendo em vista sua
aplica(cid:231)ªo nos processos tecnol(cid:243)gicos que norteiam os sistemas de comunica(cid:231)ªo digital.
De acordo com o Curr(cid:237)culo do Estado de Sªo Paulo - MatemÆtica e suas Tecnologias

(2011, p. 21-22),

"A educa(cid:231)ªo tecnol(cid:243)gica bÆsica Ø uma das diretrizes que a Lei de Diretrizes e
Bases da Educa(cid:231)ªo Nacional - LDBEN estabelece para orientar o curr(cid:237)culo
do Ensino MØdio. A lei ainda associa a (cid:16)compreensªo dos fundamentos
cient(cid:237)(cid:28)cos dos processos produtivos(cid:17) ao relacionamento entre teoria e prÆtica
em cada disciplina do curr(cid:237)culo. E insiste quando insere o (cid:16)dom(cid:237)nio dos
princ(cid:237)pios cient(cid:237)(cid:28)cos e tecnol(cid:243)gicos que presidem a produ(cid:231)ªo moderna(cid:17) entre
as competŒncias que o aluno deve demonstrar ao (cid:28)nal da educa(cid:231)ªo bÆsica.
[...] a compreensªo dos fundamentos cient(cid:237)(cid:28)cos e tecnol(cid:243)gicos da produ(cid:231)ªo,
faz da tecnologia a chave para relacionar o curr(cid:237)culo ao mundo da produ(cid:231)ªo
de bens e servi(cid:231)os, isto Ø, aos processos pelos quais a humanidade (cid:21) e cada
um de n(cid:243)s (cid:21) produz os bens e servi(cid:231)os de que necessita para viver".

Mais especi(cid:28)camente, este trabalho estÆ estruturado como segue:
No Cap(cid:237)tulo 2, apresentamos algumas ferramentas matemÆticas que serªo aplicadas

ao estudo da teoria dos c(cid:243)digos.

No Cap(cid:237)tulo 3, apresentamos as principais caracter(cid:237)sticas de um sistema de comu-
nica(cid:231)ªo bem como seus elementos. Destacamos tambØm a contribui(cid:231)ªo de Shannon
para essa teoria. De(cid:28)nimos ainda, codi(cid:28)ca(cid:231)ªo, decodi(cid:28)ca(cid:231)ªo e c(cid:243)digos de bloco.

No Cap(cid:237)tulo 4, de(cid:28)nimos c(cid:243)digos que possuem a capacidade de detectar e corrigir
erros de acordo com sua caracter(cid:237)stica. Um c(cid:243)digo corretor de erros visa recuperar
informa(cid:231)ıes que, durante o processo de transmissªo, tenham sofrido algum tipo de
ru(cid:237)do. Pode-se a(cid:28)rmar que, hoje praticamente todo sistema de comunica(cid:231)ªo possui
algum tipo de c(cid:243)digo corretor de erros, por exemplo, a telefonia digital, a transmissªo
de dados via satØlite, a comunica(cid:231)ªo interna em computadores, armazenamento (cid:243)ptico
de dados e armazenamento de dados em HD, pen drive e blu-ray. Enfatizamos, neste
aspecto, os c(cid:243)digos de Hamming que serªo utilizados como ferramentas de detec(cid:231)ªo e
corre(cid:231)ªo de erros ocorridos na transmissªo de informa(cid:231)ıes.

No Cap(cid:237)tulo 5, abordamos o estudo dos c(cid:243)digos como um espa(cid:231)o vetorial, dando

destaque (cid:224)s representa(cid:231)ıes matriciais, inclusive para os c(cid:243)digos de Hamming.

13

No Cap(cid:237)tulo 6, apresentamos trŒs sequŒncias didÆticas relacionadas ao tema abor-
dado, para serem utilizadas como proposta de atividades no Ensino MØdio, proporcio-
nando um estudo contextualizado sobre multiplica(cid:231)ªo de matrizes e matriz inversa.

No Cap(cid:237)tulo 7, encontram-se as considera(cid:231)ıes (cid:28)nais, destacando a relev(cid:226)ncia de
estudos com o tema aqui abordado e tambØm sua articula(cid:231)ªo para o desenvolvimento
de atividades de n(cid:237)vel mØdio nas escolas de educa(cid:231)ªo bÆsica.

Por (cid:28)m, as referŒncias bibliogrÆ(cid:28)cas que foram utilizadas para o enriquecimento

deste trabalho.

2 Preliminares

A `lgebra Linear Ø a Ærea da MatemÆtica que estuda todos os aspectos relacio-
nados com um conjunto chamado Espa(cid:231)o Vetorial. Nele, sªo de(cid:28)nidas opera(cid:231)ıes e as
propriedades relacionadas (cid:224) essas opera(cid:231)ıes dªo estrutura a esse conjunto.

Neste cap(cid:237)tulo abordaremos as principais de(cid:28)ni(cid:231)ıes e resultados da `lgebra Linear,
que serªo utilizados como ferramentas para o estudo da teoria dos c(cid:243)digos lineares
nos cap(cid:237)tulos 5 e 6. Os itens [1], [2], [3] e [4] das referŒncias foram utilizados para o
desenvolvimento deste cap(cid:237)tulo.

2.1 Anel e Corpo

Nesta se(cid:231)ªo de(cid:28)niremos anel e corpo, que serªo ferramentas para o desenvolvimento

das pr(cid:243)ximas se(cid:231)ıes.

De(cid:28)ni(cid:231)ªo 2.1. Anel Ø um conjunto nªo vazio R munido de duas opera(cid:231)ıes, soma
(+) e multiplica(cid:231)ªo (·) em R, em que sªo satisfeitas as seguintes propriedades, para
quaisquer x, y, z ∈ R:

• comutatividade para a soma: x + y = y + x.

• associatividade para a soma: (x + y) + z = x + (y + z).

• elemento neutro para soma, ou seja, existe 0 ∈ A tal que x + 0 = 0 + x = x.

• elemento oposto para a soma, isto Ø, existe (−x) ∈ A tal que

x + (−x) = (−x) + x = 0.

• associatividade para a multiplica(cid:231)ªo: (x · y) · z = x · (y · z).

• distributividade para multiplica(cid:231)ªo em rela(cid:231)ªo (cid:224) soma: x · (y + z) = x · y + x · z

e (y + z) · x = y · x + z · x.

Observa(cid:231)ªo 2.1. Quando para todo x, y ∈ R tem-se, x · y = y · x, dizemos que o anel
Ø comutativo.

14

Matrizes e Sistemas Lineares

15

Observa(cid:231)ªo 2.2. Quando para todo x ∈ R, existe 1 ∈ R tal que x · 1 = 1 · x = x,
dizemos que o conjunto R Ø um anel com unidade.

Exemplo 2.1. O conjunto Z2 = {0, 1} Ø um anel, em que Z2 Ø o quociente Z2
∼ Ø a congruŒncia m(cid:243)dulo 2, com as opera(cid:231)ıes soma (+) e multiplica(cid:231)ªo (·) em Z2.

∼ , onde

+ 0 1

.

0 1

0
1

0
1

1
0

0 0
1 0

0
1

Tabela 2.1: Soma e multiplica(cid:231)ªo em Z2

Exemplo 2.2. O conjunto dos nœmeros inteiros, racionais, reais e complexos sªo anØis.

De(cid:28)ni(cid:231)ªo 2.2. Um corpo F Ø um anel comutativo com unidade, onde todo elemento
nªo nulo possui inverso multiplicativo.

Exemplo 2.3. O conjunto dos nœmeros racionais, reais e complexos sªo corpos.

Observa(cid:231)ªo 2.3. Se o corpo F possuir nœmero (cid:28)nito de elementos, dizemos que ele Ø
um corpo (cid:28)nito, denotado por Fq, onde q Ø a quantidade de elementos do corpo.

Exemplo 2.4. O conjunto Zp = {0, 1, . . . p − 1}, para todo p primo Ø um corpo (cid:28)nito.

De(cid:28)ni(cid:231)ªo 2.3. A caracter(cid:237)stica de um corpo F Ø o menor nœmero inteiro positivo m
tal que, sendo a ∈ F, ma = a + a + a + · · · + a
= 0. Se nªo existir tal nœmero m, a
(cid:125)

(cid:124)

(cid:123)(cid:122)
m vezes

caracter(cid:237)stica do corpo Ø de(cid:28)nida como zero.

2.2 Matrizes e Sistemas Lineares

Nesta se(cid:231)ªo abordaremos alguns t(cid:243)picos referentes ao estudo de matrizes: matriz
quadrada, matriz identidade, matriz transposta, multiplica(cid:231)ªo de matrizes e matriz
inversa. TambØm de(cid:28)niremos um sistema linear e apresentaremos a sua representa(cid:231)ªo
matricial.

De(cid:28)ni(cid:231)ªo 2.4. Uma matriz A de ordem m × n Ø uma tabela com m · n elementos,
distribu(cid:237)dos em m linhas e n colunas.

Observa(cid:231)ªo 2.4. Uma matriz A de ordem m × n tambØm pode ser denotada por
A = (aij)m×n, onde 1 (cid:54) i (cid:54) m e 1 (cid:54) j (cid:54) n. Cada elemento aij ∈ F Ø representado pela
sua posi(cid:231)ªo na matriz, ou seja, Ø o elemento que estÆ na i-Øsima linha e na j-Øsima
coluna da matriz.

Matrizes e Sistemas Lineares

16

Exemplo 2.5. Matriz A de ordem 2 × 3:
(cid:32)

A =

(cid:33)
.

5 0 −2
3
2 1

O elemento que estÆ estÆ na primeira linha e terceira coluna Ø o −2, isto Ø, a13 = −2.

Observa(cid:231)ªo 2.5. O conjunto de todas as matrizes de ordem m × n com elementos em
um corpo F serÆ representado por Mm×n(F).

De(cid:28)ni(cid:231)ªo 2.5. Uma matriz A Ø uma matriz quadrada quando o nœmero de linhas Ø
igual ao nœmero de colunas, ou seja, m = n.
(cid:32)

(cid:33)

Exemplo 2.6. A =

Ø uma matriz quadrada de ordem 2.

1 2
0 3

De(cid:28)ni(cid:231)ªo 2.6. A matriz identidade de ordem n, denotada por In = (aij)n×n Ø dada
por

(cid:40)

aij =

1, se i = j
0, se i (cid:54)= j

.

Exemplo 2.7. Matriz identidade de ordem 3:

I3 =






1 0 0
0 1 0
0 0 1




.

De(cid:28)ni(cid:231)ªo 2.7. Seja A = (aij) uma matriz de ordem m × n. A matriz At = (bij) de
ordem n × m cujas linhas sªo as colunas de A, isto Ø, bij = aji para todo i, j com
1 (cid:54) i (cid:54) m e 1 (cid:54) j (cid:54) n Ø chamada transposta de A.

Exemplo 2.8. Dada uma matriz A de ordem 2 × 3:

A =

(cid:32)

(cid:33)
.

1 2 0
4 1 3

A matriz transposta de A de ordem 3 × 2 Ø dada por

At =




.






1 4
2 1
0 3

De(cid:28)ni(cid:231)ªo 2.8. Sejam A = (aik) uma matriz de ordem m × p e B = (bkj) uma matriz
de ordem p × n. A matriz produto de A por B Ø a matriz AB = (cij) de ordem m × n
tal que

cij =

p
(cid:88)

k=1

aik · bkj, i = 1, ..., m; j = 1, ..., n.

Matrizes e Sistemas Lineares

17

Observa(cid:231)ªo 2.6. S(cid:243) podemos efetuar o produto AB se o nœmero de colunas da matriz
A for igual ao nœmero de linhas da matriz B.

Observa(cid:231)ªo 2.7. O elemento cij da matriz AB Ø obtido da soma dos produtos dos
elementos da i-Øsima linha da matriz A pelos elementos correspondentes da j-Øsima
coluna da matriz B.

Exemplo 2.9. Dadas as seguintes matrizes A de ordem 1 × 2 e B de ordem 2 × 2:

A =

(cid:16)

1 0

(cid:17)

B =

(cid:33)

(cid:32)

2 3
0 1

A matriz produto AB de ordem 1 × 2 Ø dado por

(cid:16)

AB =

1 · 2 + 0 · 0 1 · 3 + 0 · 1

(cid:17)

(cid:16)

(cid:17)

.

2 3

=

Observa(cid:231)ªo 2.8. O produto de duas matrizes nªo Ø comutativo, ou seja, nem sempre
teremos AB = BA.

Exemplo 2.10. Dadas as matrizes A e B de ordem 2:

A =

(cid:33)

(cid:32)

1 2
1 0

B =

(cid:33)

(cid:32)

2 1
1 3

A matriz produto AB de ordem 2 Ø

AB =

(cid:33)

(cid:32)

4 7
1 3

A matriz produto BA de ordem 2 Ø

BA =

(cid:33)

(cid:32)

2 5
1 5

Logo, as matrizes AB e BA nªo sªo iguais.

De(cid:28)ni(cid:231)ªo 2.9. Dada uma matriz A de ordem n. Se existir uma matriz B de ordem
n tal que AB = BA = In, a matriz A Ø dita invert(cid:237)vel e a matriz B Ø a sua inversa.
A matriz inversa de A Ø denotada por A−1, ou seja, B = A−1.

Exemplo 2.11. A matriz A−1 =

AA−1 = A−1A = I2.

(cid:32)

(cid:33)

3 −5
2
−1

Ø a inversa da matriz A =

(cid:33)

(cid:32)

2 5
1 3

, pois

De(cid:28)ni(cid:231)ªo 2.10. Um sistema de equa(cid:231)ıes lineares com m equa(cid:231)ıes e n inc(cid:243)gnitas Ø
um conjunto de equa(cid:231)ıes do tipo:






a11x1 + a12x2 + ... + a1nxn = b1
a21x1 + a22x2 + ... + a2nxn = b2
...
am1x1 + am2x2 + ... + amnxn = bm

Espa(cid:231)o e Subespa(cid:231)o Vetorial

18

onde aij, bi ∈ F, com 1 (cid:54) i (cid:54) m e 1 (cid:54) j (cid:54) n.

Uma solu(cid:231)ªo desse sistema Ø uma n-upla (x1, x2, ..., xn) em F × · · · × F = Fn que

satisfa(cid:231)a simultaneamente todas as m equa(cid:231)ıes.

O sistema acima pode ser escrito na forma matricial, assim:


















a12
a11
a22
a21
...
...
am1 am2

· · ·
· · ·

a1n
a2n
...
· · · amn







·













=







x1
x2
...
xn

b1
b2
...
bm



.




Deste modo, todo sistema de equa(cid:231)ıes lineares pode ser escrito na forma A·X = B,
onde A Ø a matriz dos coe(cid:28)cientes, X Ø a matriz das inc(cid:243)gnitas e B Ø a matriz dos
termos independentes.

Exemplo 2.12. Sistema de equa(cid:231)ıes lineares com aij, bi ∈ Z2:






x2 + x4 + x5 = 0
x1 + x3 + x4 = 0
x1 + x2 + x3 + x5 = 0

2.3 Espa(cid:231)o e Subespa(cid:231)o Vetorial

Nesta se(cid:231)ªo de(cid:28)niremos espa(cid:231)o vetorial e subespa(cid:231)o vetorial e abordaremos algumas

caracter(cid:237)sticas relacionadas a esses conceitos.

De(cid:28)ni(cid:231)ªo 2.11. Um conjunto nªo vazio V Ø um espa(cid:231)o vetorial sobre um corpo F se
para quaisquer vetores u e v ∈ V e um escalar α ∈ F sªo vÆlidos:

• u + v ∈ V ;

• α · v ∈ V .

E para todo u, v, w ∈ V e α, β ∈ F temos:

• u + v = v + u.

• (u + v) + w = u + (v + w).

• Existe 0 ∈ V tal que u + 0 = u, onde 0 Ø o vetor nulo.

• Existe (−u) ∈ V tal que u + (−u) = 0.

• α · (u + v) = α · u + α · v.

• (α + β) · v = α · v + β · v.

• (α · β) · v = α · (β · v).

Espa(cid:231)o e Subespa(cid:231)o Vetorial

19

• 1 · u = u

Exemplo 2.13. Todo corpo F Ø um espa(cid:231)o vetorial sobre si mesmo.

Exemplo 2.14. (Z2)n, n ∈ N Ø um espa(cid:231)o vetorial sobre Z2.

Exemplo 2.15. O conjunto Mm×n(F) das matrizes m × n com coe(cid:28)cientes em F Ø um
espa(cid:231)o vetorial sobre F.

De(cid:28)ni(cid:231)ªo 2.12. Considere um espa(cid:231)o vetorial V . Um subconjunto S de V Ø um
subespa(cid:231)o vetorial de V se S for um espa(cid:231)o vetorial com respeito (cid:224)s mesmas opera(cid:231)ıes
que tornam V um espa(cid:231)o vetorial.

Para identi(cid:28)car subespa(cid:231)os tomaremos como critØrio o resultado a seguir.

Teorema 2.1. S ⊂ V Ø um subespa(cid:231)o vetorial de V se, e somente se,

(i) S Ø nªo vazio,
(ii) S Ø fechado sob adi(cid:231)ªo de vetores, isto Ø, u, v ∈ S implica

u + v ∈ S.

(iii) S Ø fechado sob multiplica(cid:231)ªo por escalar: u ∈ S implica

α · u ∈ S, para cada α ∈ F.

CorolÆrio 2.1. S Ø um subespa(cid:231)o de V se, e somente se,

(i) 0 ∈ S ou (S (cid:54)= ∅),
(ii) u, v ∈ S implica

α · u + β · v ∈ S, para todo α, β ∈ F.

As demonstra(cid:231)ıes destes resultados podem ser encontradas em [4].

Exemplo 2.16. Se V Ø um espa(cid:231)o vetorial qualquer, entªo o conjunto {0} constitu(cid:237)do
somente do vetor nulo e tambØm o espa(cid:231)o todo V sªo subespa(cid:231)os de V .

Exemplo 2.17. Seja o espa(cid:231)o vetorial R3. O conjunto S constitu(cid:237)do dos vetores cuja
terceira componente Ø zero, S = {(a, b, 0) : a, b ∈ R} Ø um subespa(cid:231)o de R3.

2.3.1 Bases e Dimensªo

Nesta subse(cid:231)ªo de(cid:28)niremos combina(cid:231)ªo linear, dependŒncia e independŒncia linear

e tambØm base e dimensªo de um espa(cid:231)o vetorial V .

O conceito de dependŒncia e independŒncia linear desempenha um papel essencial

na teoria da `lgebra Linear e na MatemÆtica em geral.

De(cid:28)ni(cid:231)ªo 2.13. Um vetor v ∈ V Ø uma combina(cid:231)ªo linear dos vetores v1, ..., vn ∈ V
se existirem escalares α1, ..., αn ∈ F tais que

Espa(cid:231)o e Subespa(cid:231)o Vetorial

20

v = α1v1 + ... + αnvn.

De(cid:28)ni(cid:231)ªo 2.14. Seja V um espa(cid:231)o vetorial sobre um corpo F. Diz-se que os vetores
v1, ..., vn ∈ V sªo linearmente dependentes sobre F , se existem escalares α1, ..., αn ∈ F,
nem todos nulos, tais que

α1v1 + ... + αnvn = 0.

Caso contrÆrio, diz-se que os vetores sªo linearmente independentes (LI) sobre F.

Observe que se 0 Ø um dos vetores v1, ..., vn, digamos v1 = 0, entªo os vetores devem

ser linearmente dependentes, pois

1v1 + 0v2 + ... + 0vn = 1 · 0 + 0 + ... + 0 = 0,

Por outro lado, qualquer vetor nªo nulo v Ø, por si s(cid:243), linearmente independente, pois

α · v = 0, v (cid:54)= 0 implica α = 0.

Exemplo 2.18. Os vetores u = (1, −1, 0), v = (1, 3, −1) e w = (5, 3, −2) de R3 sªo
linearmente dependentes pois 3u + 2v − w = 3(1, −1, 0) + 2(1, 3, −1) − (5, 3, −2) =
(0, 0, 0).

Exemplo 2.19. Os vetores v1, v2 ∈ (Z2)2 tais que v1 = (1, 0) e v2 = (0, 1) sªo linear-
mente independentes.

De fato, sejam α1, α2 ∈ Z2, tais que α1v1 + α2v2 = (0, 0). Logo,(α1, α2) = (0, 0) e

portanto α1 = α2 = 0.

De(cid:28)ni(cid:231)ªo 2.15. Sejam V um espa(cid:231)o vetorial sobre F e B um subconjunto de V .
Dizemos que o espa(cid:231)o vetorial V Ø (cid:28)nitamente gerado se todo vetor de V pode ser
obtido como combina(cid:231)ªo linear dos vetores de B. Neste caso, denotamos V = [B], isto
Ø, V Ø gerado por B.

Exemplo 2.20. O espa(cid:231)o vetorial R3 Ø (cid:28)nitamente gerado, isto Ø,

R3 = [(1, 0, 0), (0, 1, 0), (0, 0, 1)].

De(cid:28)ni(cid:231)ªo 2.16. Seja V um espa(cid:231)o vetorial. Um subconjunto de vetores B = {v1, ..., vn}
Ø uma base de V se

(i) B Ø um conjunto linearmente independente.
(ii) O espa(cid:231)o gerado por B, isto Ø, o conjunto de todas as combina(cid:231)ıes lineares de

{v1, ..., vn} Ø V .

Se o espa(cid:231)o vetorial V for (cid:28)nitamente gerado, entªo o nœmero de elementos de uma
base de um espa(cid:231)o vetorial V Ø a dimensªo desse espa(cid:231)o e denotada por dimV . Caso
contrÆrio, dizemos que V tem dimensªo in(cid:28)nita.

Observa(cid:231)ªo 2.9. O subespa(cid:231)o U = {0} de V tem dimensªo nula, isto Ø, dimU = 0.

Espa(cid:231)o e Subespa(cid:231)o Vetorial

21

Exemplo 2.21. O conjunto {(1, 0), (0, 1)} Ø uma base de R2 e dimR2 = 2.
O conjunto {(1, 0, 0), (0, 1, 0), (0, 0, 1)} Ø uma base de R3 e dimR3 = 3.

Proposi(cid:231)ªo 2.1. Seja V um espa(cid:231)o vetorial sobre F de dimensªo (cid:28)nita n (cid:62) 1 e seja
B ⊆ V . As seguintes a(cid:28)rma(cid:231)ıes sªo equivalentes:

a) B Ø uma base de V ;
b) Cada elemento de V se escreve de maneira œnica como combina(cid:231)ªo linear de

elementos de B.

Demonstra(cid:231)ªo. a)⇒ b). Vamos supor que B = {v1, ..., vn} seja uma base de V . Por
de(cid:28)ni(cid:231)ªo, B gera V e, portanto, todo elemento de V se escreve como combina(cid:231)ªo
linear de v1, ..., vn. Para mostrar a unicidade, suponha que v = α1v1 + ... + αnvn e
v = β1v1 + ... + βnvn, onde alphai, β1 ∈ F, com 1 (cid:54) i (cid:54) n. Entªo,

α1v1 + ... + αnvn = β1v1 + ... + βnvn ⇔
(α1 − β1)v1 + ... + (αn − βn)vn = 0.

Como B Ø um conjunto linearmente independente, segue que αi − βi = 0, para todo
i = 1, ..., n. Logo, αi = βi para todo i. Portanto, v se escreve de maneira œnica como
combina(cid:231)ªo linear de elementos de B.

b)⇒ a). Considere que cada elemento de V se escreve de maneira œnica como
combina(cid:231)ªo linear de elementos de B. Por de(cid:28)ni(cid:231)ªo, B gera V . Para que B seja
uma base, esse conjunto deve ser linearmente independente. Sejam v1, ..., vn ∈ B e
λ1, ..., λn ∈ F tais que λ1v1 + ... + λnvn = 0. Como 0v1 + ... + 0vn = 0, segue da condi(cid:231)ªo
de unicidade que λi = 0 para todo i = 1, ..., n. Portanto, B Ø uma base.

2.3.2 Produto interno, Complemento Ortogonal e Soma Direta

Nesta subse(cid:231)ªo de(cid:28)niremos produto interno, o qual serÆ aplicado no conceito de

complemento ortogonal e tambØm abordaremos a de(cid:28)ni(cid:231)ªo de soma direta.

De(cid:28)ni(cid:231)ªo 2.17. Seja V um espa(cid:231)o vetorial sobre um corpo F. Um produto interno
sobre V Ø uma fun(cid:231)ªo que a cada par de vetores u e v ∈ V associa um escalar em F,
denotado por < u, v > e satisfazendo as seguintes propriedades para todos u, v e w ∈ V
e qualquer α ∈ F:

(i) < u, u >(cid:62) 0 e < u, u >= 0 se, e somente se u = 0.
(ii) < u, v >=< v, u >.
(iii) < u, v + w >=< u, v > + < u, w >.
(iv) < αu, v >= α < u, v >.

Observa(cid:231)ªo 2.10. No caso de F = C a propriedade (ii) Ø substitu(cid:237)da por < u, v >=
< v, u >, onde < v, u > representa o conjugado de < v, u >.

Exemplo 2.22. Sejam os vetores u = (u1, ..., un) e v = (v1, ..., vn) ∈ Rn. A fun(cid:231)ªo

Espa(cid:231)o e Subespa(cid:231)o Vetorial

22

< u, v >= u1v1 + ... + unvn

Ø um produto interno sobre Rn.

Observa(cid:231)ªo 2.11. Dois vetores u e v ∈ V sªo ortogonais e neste caso denotamos por
u ⊥ v se, e somente se, < u, v >= 0.

Exemplo 2.23. Sejam os vetores u = (x, 0) e v = (0, y) ∈ R2, para quaisquer x e
y ∈ R. Entªo,

< u, v >= x · 0 + 0 · y = 0.

Logo, u e v sªo ortogonais.

De(cid:28)ni(cid:231)ªo 2.18. Sejam V um espa(cid:231)o vetorial e U ⊂ V um subespa(cid:231)o vetorial de V.
Vamos representar por U ⊥ o subconjunto formado pelos vetores de V que sªo ortogonais
a todo vetor de U , isto Ø:

U ⊥ = {v ∈ V ; < v, u >= 0, ∀u ∈ U }.

O subconjunto U ⊥ Ø chamado complemento ortogonal de U e Ø tambØm um subes-

pa(cid:231)o vetorial de V .

Exemplo 2.24. Sejam o espa(cid:231)o vetorial R2 e o subespa(cid:231)o vetor U = {(x, 0), x ∈ R}.
O complemento ortogonal U ⊥ do subespa(cid:231)o U Ø o subespa(cid:231)o

U ⊥ = {(0, y), y ∈ R}.

De(cid:28)ni(cid:231)ªo 2.19. Sejam U e V subespa(cid:231)os vetoriais de W . A soma de U e V , denotada
U + V , consiste em todas as somas u + v tais que u ∈ U e v ∈ V , isto Ø

U + V = {u + v; u ∈ U e v ∈ V }.

Teorema 2.2. Se U e V sªo subespa(cid:231)os vetoriais de W , entªo U + V Ø subespa(cid:231)o de
W .

Demonstra(cid:231)ªo. O conjunto U + V Ø nªo vazio. De fato, U e V sªo nªo vazios. Em
particular, 0 ∈ U e 0 ∈ V . Logo, 0 = 0 + 0 ∈ U + V .

Mostremos que o conjunto U + V Ø fechado para a soma de vetores. Sejam x1, x2 ∈
U + V , tais que x1 = u1 + v1 e x2 = u2 + v2, para alguns u1, u2 ∈ U e v1, v2 ∈ V . Logo,

x1 + x2 = (u1 + v1) + (u2 + v2) = (u1 + u2) + (v1 + v2).

Como u1 + u2 ∈ U e v1 + v2 ∈ V , segue que x1 + x2 ∈ U + V .

Mostremos que o conjunto U + V Ø fechado para o produto por escalar. Seja

x = u + v ∈ U + V , tais que u ∈ U e v ∈ V . Logo,

αx = α(u + v) = αu + αv, para todo α ∈ F.

Transforma(cid:231)ıes Lineares e Operador Linear

23

Como αu ∈ U e αv ∈ V , segue que αx ∈ U + V .

De(cid:28)ni(cid:231)ªo 2.20. Dizemos que o espa(cid:231)o vetorial W Ø a soma direta dos subespa(cid:231)os
vetoriais U e V , denotada W = U ⊕ V , se todo vetor w ∈ W pode ser escrito de modo
œnico como w = u + v tais que u ∈ U e v ∈ V .

Teorema 2.3. Sejam U e V subespa(cid:231)os vetoriais de W . Dizemos que W = U ⊕ V Ø
a soma direta de U e V , se e somente se, (i) W = U + V . (ii) U ∩ V = {0}.

Demonstra(cid:231)ªo. Suponhamos W = U ⊕V . Todo vetor w ∈ W pode ser escrito de modo
œnico como w = u + v tais que u ∈ U e v ∈ V . Assim, em particular, W = U + V .
Suponhamos agora que w ∈ U ∩ V . Entªo,

w = w + 0, tal que w ∈ U e 0 ∈ V e
w = 0 + w, tal que 0 ∈ U e w ∈ V .

Como tal soma para w deve ser œnica, segue que w = 0. Portanto, U ∩ V = {0}. Por
outro lado, suponhamos que W = U + V e U ∩ V = {0}. Dado w ∈ W , existem u ∈ U
e v ∈ V , tais que w = u + v. Suponha que exista outra decomposi(cid:231)ªo w = u(cid:48) + v(cid:48), com
u(cid:48) ∈ U e v(cid:48) ∈ V . Assim,

u + v = u(cid:48) + v(cid:48)
(u − u(cid:48)) + (v − v(cid:48)) = 0
u − u(cid:48) = v − v(cid:48).

Mas, u − u(cid:48) ∈ U e v − v(cid:48) ∈ V . Por hip(cid:243)tese, U ∩ V = {0}. Logo,

u − u(cid:48) = v − v(cid:48) = 0
u = u(cid:48) e v = v(cid:48).

Portanto, a decomposi(cid:231)ªo Ø œnica e W = U ⊕ V .

Observa(cid:231)ªo 2.12. Se U ⊕ V = W , entªo dizemos que U e V sªo complementares.

Exemplo 2.25. Sejam U e U ⊥ subespa(cid:231)os de R3 de(cid:28)nidos assim:

U = {(0, 0, z); z ∈ R}
U ⊥ = {(x, y, 0); x, y ∈ R}.

Como R3 = U + U ⊥ e U ∩ U ⊥ = {(0, 0, 0)}, conclui-se que R3 = U ⊕ U ⊥.

2.4 Transforma(cid:231)ıes Lineares e Operador Linear

Nesta se(cid:231)ªo de(cid:28)niremos transforma(cid:231)ªo linear, nœcleo e imagem de uma transfor-
ma(cid:231)ªo linear, transforma(cid:231)ªo injetora e operador linear, estes terªo aplica(cid:231)ªo direta no
estudo dos c(cid:243)digos de bloco lineares.

Transforma(cid:231)ıes Lineares e Operador Linear

24

De(cid:28)ni(cid:231)ªo 2.21. Sejam V e W dois espa(cid:231)os vetoriais sobre F. Uma transforma(cid:231)ªo
T : V → W Ø linear se satisfaz as seguintes condi(cid:231)ıes:

i) T (u + v) = T (u) + T (v), ∀u, v ∈ V .
ii) T (αv) = αT (v), ∀α ∈ F e v ∈ V .

Exemplo 2.26. Seja T : R → R. A transforma(cid:231)ªo T (u) = ku, onde k Ø uma constante
(cid:28)xada Ø linear.

Exemplo 2.27. Seja T : R2 → R3. A transforma(cid:231)ªo T (x, y) = (2x, 0, x + y) Ø linear.

Exemplo 2.28. Seja T : V → V . A transforma(cid:231)ªo nula, T (v) = 0 Ø linear.

Exemplo 2.29. Sejam TA : Rn → Rm e A uma matriz de ordem m × n. A transfor-
ma(cid:231)ªo TA(v) = Av, onde v Ø um vetor coluna n × 1, Ø linear.

De(cid:28)ni(cid:231)ªo 2.22. Seja T : V → W uma transforma(cid:231)ªo linear. O subconjunto de V for-
mado por todos os vetores v ∈ V tais que T (v) = 0 Ø chamado nœcleo da transforma(cid:231)ªo
e Ø representado por N (T ), isto Ø

N (T ) = {v ∈ V ; T (v) = 0}.

O subconjunto N (T ) Ø um subespa(cid:231)o vetorial de V .

De(cid:28)ni(cid:231)ªo 2.23. Seja T : V → W uma transforma(cid:231)ªo linear. A imagem de T Ø o
subconjunto de W formado pelos vetores w ∈ W tais que existe um vetor v ∈ V que
satisfaz T (v) = w, ou seja,

Im(T ) = {w ∈ W ; T (v) = w para algum v ∈ V }.

O subconjunto Im(T ) Ø um subespa(cid:231)o vetorial de W .

Exemplo 2.30. Seja a transforma(cid:231)ªo linear T : R3 → R3 de(cid:28)nida por T (x, y, z) =
(x, 2y, 0). A imagem de T Ø

Im(T ) = {(x, 2y, 0) : x, y ∈ R}

= {x(1, 0, 0) + y(0, 2, 0) : x, y ∈ R}.

Logo, o subespa(cid:231)o Im(T ) Ø gerado pelos vetores LI (1, 0, 0) e (0, 2, 0), portanto dimIm(T ) =
2.

O nœcleo de T Ø dado por

N (T ) = {(x, y, z) : T (x, y, z) = (0, 0, 0)}

= {(x, y, z) : (x, 2y, 0) = (0, 0, 0)}
= {(0, 0, z) : z ∈ R}
= {z(0, 0, 1) : z ∈ R}.

Logo, o N (T ) Ø gerado pelo vetor (0, 0, 1) e assim dimN (T ) = 1.

Transforma(cid:231)ıes Lineares e Operador Linear

25

De(cid:28)ni(cid:231)ªo 2.24. Seja uma transforma(cid:231)ªo T : V → W . Dizemos que T Ø injetora se
dados u, v ∈ V com T (u) = T (v), entªo u = v.

Teorema 2.4. Seja T : V → W uma transforma(cid:231)ªo linear. Entªo, N (T ) = 0 se, e
somente se, T Ø injetora.

Demonstra(cid:231)ªo. Mostremos que se N (T ) = 0, entªo T Ø injetora.

Suponhamos que u, v ∈ V com T (u) = T (v). Entªo, T (u) − T (v) = T (u − v) = 0,
isto Ø, u − v ∈ N (T ). Por hip(cid:243)tese, N (T ) = 0, assim u − v = 0. Logo, u = v. Portanto,
T Ø injetora.

Agora mostremos que se T Ø injetora, entªo N (T ) = 0.
Seja v ∈ N (T ), isto Ø, T (v) = 0. Como necessariamente T (0) = 0, T (v) = T (0).

Logo, v = 0, pois T Ø injetora. Portanto, N (T ) = 0.

Teorema 2.5. Sejam V e W espa(cid:231)os vetoriais de dimensªo (cid:28)nita. Seja T : V → W
uma transforma(cid:231)ªo linear. Entªo,

dimN (T ) + dimIm(T ) = dimV .

Demonstra(cid:231)ªo. Vamos supor inicialmente que N (T ) (cid:54)= {0} e seja {v1, ..., vn} uma base
de N (T ). Como N (T ) ⊂ V Ø subespa(cid:231)o de V podemos completar este conjunto de
modo a obter uma base de V . Seja entªo, {v1, ..., vn, w1, ..., wm} uma base de V .
Queremos mostrar que {T (w1), ..., T (wm)} Ø uma base de Im(T ), isto Ø,

i) Os vetores T (w1), ..., T (wm) geram a imagem de T . De fato, dado w ∈ Im(T ),
existe u ∈ V tal que T (u) = w. Se u ∈ V , entªo u = α1v1+...+αnvn+β1w1+...+βmwm.
Mas,

w = T (u) = T (α1v1 + ... + αnvn + β1w1 + ... + βmwm)

= α1T (v1) + ... + αnT (vn) + β1T (w1) + ... + βmT (wm).

Como os vetores v1, ..., vn pertencem ao N (T ), T (v1) = ... = T (vn) = 0. Assim,

w = β1T (w1) + ... + βmT (wm)

e a imagem de T Ø gerada pelos vetores {T (w1), ..., T (wm)}.

ii) {T (w1), ..., T (wm)} Ø linearmente independente. Consideremos a combina(cid:231)ªo

linear

α1T (w1) + ... + αmT (wm) = 0.

e mostremos que os αi sªo todos nulos. Como T Ø linear, T (α1w1 + ... + αmwm) = 0
segue que α1w1 + ... + αmwm ∈ N (T ). Logo, α1w1 + ... + αmwm pode ser escrito como
combina(cid:231)ªo linear da base {v1, ..., vn} de N (T ), isto Ø, existem β1, ..., βn tais que

α1w1 + ... + αmwm = β1v1 + ... + βnvn, ou ainda,
α1w1 + ... + αmwm − β1v1 − ... − βnvn = 0.

Transforma(cid:231)ıes Lineares e Operador Linear

26

Mas {v1, ..., vn, w1, ..., wm} Ø uma base de V e temos entªo α1 = ... = αm = β1 = ... =
βn = 0. Portanto, dimV = n + m = dimN (T ) + dimIm(T ).

Se N (T ) = {0}, considere {v1, ..., vn} uma base de V e de maneira anÆloga (cid:224) feita

acima, pode-se mostrar que {T (v1), ..., T (vn)} Ø uma base de Im(T ).

Se N (T ) = V , entªo para todo v ∈ V , T (v) ∈ N (T ), isto Ø, T (v) = 0. Logo,
Im(T ) = {0} e dimIm(T ) = 0. Portanto, dimV = dimN (T ) + 0 = dimN (T ) +
dimIm(T ).

Exemplo 2.31. No exemplo 2.28 conclu(cid:237)mos que a dimensªo da imagem da transfor-
ma(cid:231)ªo linear T : R3 → R3 de(cid:28)nida por T (x, y, z) = (x, 2y, 0) Ø 2. Pelo teorema 2.5
dimR3 = dimN (T ) + dimIm(T ). Logo, dimN (T ) = 3 − 2 = 1.

De(cid:28)ni(cid:231)ªo 2.25. Sejam U e V espa(cid:231)os vetoriais sobre F, tais que dimU = n e dimV =
m. Seja T : U → V uma transforma(cid:231)ªo linear. Consideremos {u1, u2, ..., un} uma base
de U e {v1, v2, ..., vm} uma base de V . Para cada ui ∈ U , existe T (ui) ∈ V de modo
que os vetores T (ui) sªo combina(cid:231)ıes linear dos vetores da base de V . Assim, teremos:






T (u1) = α11v1 + α21v2 + ... + αm1vm
T (u2) = α12v1 + α22v2 + ... + αm2vm
...
T (un) = α1nv1 + α2nv2 + ... + αmnvm

onde αij ∈ F, com 1 (cid:54) i (cid:54) m e 1 (cid:54) j (cid:54) n.

A matriz de ordem m × n que se obtØm dos coe(cid:28)cientes αij ∈ F:









α11 α12
α21 α22
...
...
αm1 αm2









.

· · · α1n
· · · α2n
...
· · · αmn

Ø chamada matriz da transforma(cid:231)ªo linear.

Exemplo 2.32. Seja T : R3 → R2 uma transforma(cid:231)ªo linear tal que T (x, y, z) = (2x +
y − z, 3x − 2y + 4z). Sejam as bases {(1, 1, 1), (1, 1, 0), (1, 0, 0)} de R3 e {(1, 3), (1, 4)}
de R2. Fazendo:

T (1, 1, 1) = (2, 5) = 3(1, 3) − 1(1, 4),
T (1, 1, 0) = (3, 1) = 11(1, 3) − 8(1, 4),
T (1, 0, 0) = (2, 3) = 5(1, 3) − 3(1, 4).

Entªo, a matriz de ordem 2 × 3 desta transforma(cid:231)ªo Ø

(cid:32)

(cid:33)

3
5
11
−1 −8 −3

Transforma(cid:231)ıes Lineares e Operador Linear

27

De(cid:28)ni(cid:231)ªo 2.26. Sejam U , V e W espa(cid:231)os vetoriais sobre F, T : V → U e S : U → W
transforma(cid:231)ıes lineares. A transforma(cid:231)ªo composta S ◦ T Ø de(cid:28)nida por

S ◦ T : V → W

v (cid:55)→ S(T (v)).

Teorema 2.6. Sejam U , V e W espa(cid:231)os vetoriais sobre F, T : V → U e S : U → W
transforma(cid:231)ıes lineares. A transforma(cid:231)ªo composta S ◦ T Ø linear.

Demonstra(cid:231)ªo. Sejam u, v ∈ V e α ∈ F. Entªo,

(i) (S ◦ T )(u + v) = S(T (u + v)) = S(T (u) + T (v)) = S(T (u)) + S(T (v)) =

(S ◦ T )(u) + (S ◦ T )(v).

(ii) (S ◦ T )(αu) = S(T (αu)) = S(α(T (u)) = αS(T (u)) = α(S ◦ T )(u).
Logo, a transforma(cid:231)ªo composta S ◦ T Ø linear.

Exemplo 2.33. Sejam T : R2 → R e S : R → R transforma(cid:231)ıes lineares tais que
T (x, y) = x + 2y e S(x) = 2x. A transforma(cid:231)ªo composta S ◦ T : R2 → R de(cid:28)nida por:

S(T (x, y)) = 2(x + 2y) = 2x + 4y.

Ø linear.

De(cid:28)ni(cid:231)ªo 2.27. Seja V um espa(cid:231)o vetorial sobre F. Uma transforma(cid:231)ªo linear de V
em V , isto Ø, T : V → V Ø chamada de operador linear.

De(cid:28)ni(cid:231)ªo 2.28. Seja V um espa(cid:231)o vetorial sobre F. Um operador linear T : V → V Ø
invert(cid:237)vel se existe T −1 : V → V , tal que T ◦ T −1 = T −1 ◦ T = IV , em que IV : V → V
Ø a fun(cid:231)ªo identidade.

Exemplo 2.34. O operador linear T : R2 → R2 de(cid:28)nido por T (x, y) = (x + y, x + 2y)
Ø invert(cid:237)vel e T −1 : R2 → R2, tal que T ◦ T −1 = T −1 ◦ T = IR2 Ø de(cid:28)nida por
T −1(x, y) = (2x + y, −x + y).

Neste cap(cid:237)tulo destacamos alguns t(cid:243)picos da `lgebra Linear que serªo aplicados
no desenvolvimento da teoria dos c(cid:243)digos lineares no cap(cid:237)tulo 5. Aplicaremos tambØm
a teoria de matrizes, no cap(cid:237)tulo 6. No pr(cid:243)ximo cap(cid:237)tulo introduziremos o estudo da
teoria da informa(cid:231)ªo, onde destacaremos a funcionalidade e caracter(cid:237)sticas dos sistemas
de comunica(cid:231)ªo, bem como sua rela(cid:231)ªo com o tema proposto.

3 Teoria da Informa(cid:231)ªo

Para o desenvolvimento deste cap(cid:237)tulo foram utilizados os itens [9], [12], [14] e [16]

das referŒncias.

O advento de novas tecnologias proporciona sistemas de comunica(cid:231)ªo cada vez
mais modernos, porØm durante a transmissªo de informa(cid:231)ıes pode haver algum tipo
de perturba(cid:231)ªo ou algum erro pode ocorrer. Neste sentido, estudar o tema Teoria
da Informa(cid:231)ªo Ø fundamental, pois nestes sistemas de comunica(cid:231)ªo serªo aplicados os
c(cid:243)digos corretores de erros, objetos de estudo do cap(cid:237)tulo 4, para detectar e corrigir
poss(cid:237)veis erros.

O uso de sistemas de comunica(cid:231)ªo digital nas mais diversas Æreas tem possibilitado
o estudo e desenvolvimento de teorias matemÆticas que sirvam de suporte (cid:224)s novas
tecnologias digitais, os quais integram a teoria da informa(cid:231)ªo. Esta trata dos aspectos
quantitativos de armazenamento e transmissªo das mensagens e tem como um de seus
objetivos principais garantir que os dados enviados, atravØs de um canal, nªo sofra
nenhum tipo de perturba(cid:231)ªo. Durante esse processo, pode-se detectar dois problemas:

• falta de capacidade no armazenamento ou transmissªo das mensagens enviadas;

• ru(cid:237)do na transmissªo, ou seja, podem ocorrer erros nas mensagens enviadas.

Shannon, em seu trabalho "A Mathematical Theory of Communication" publicado
em 1948, a(cid:28)rma que atravØs de uma codi(cid:28)ca(cid:231)ªo adequada da informa(cid:231)ªo, erros introdu-
zidos pelo ru(cid:237)do do canal podem ser reduzidos a qualquer n(cid:237)vel desejado sem sacri(cid:28)car
a taxa de transmissªo da informa(cid:231)ªo. Na (cid:28)gura 3.1 podemos observar os seguintes
elementos de um sistema geral de comunica(cid:231)ªo:

• Fonte de informa(cid:231)ªo: produz a mensagem que serÆ enviada;

• Transmissor: possibilita enviar a mensagem com um sinal adequado;

• Canal: meio utilizado para enviar a mensagem do transmissor para o receptor;

• Receptor: realiza as a(cid:231)ıes inversas ao que foi feito pelo transmissor, recons-

truindo a mensagem;

• Destino: para quem/onde a mensagem foi destinada.

28

Codi(cid:28)ca(cid:231)ªo

29

Figura 3.1: Diagrama - Sistema de Comunica(cid:231)ªo

3.1 Codi(cid:28)ca(cid:231)ªo

C(cid:243)digo Ø um conjunto de s(cid:237)mbolos usados na transmissªo e recep(cid:231)ªo de mensagens.

Os elementos bÆsicos para se construir um c(cid:243)digo sªo:

• Alfabeto: Um conjunto (cid:28)nito de elementos. Cada um desses elementos, chama-
se d(cid:237)gito. Quando o nœmero de elementos do alfabeto Ø q, diz-se que o c(cid:243)digo Ø
q-Ærio.

• Palavra-c(cid:243)digo: (cid:201) uma sequŒncia (cid:28)nita de d(cid:237)gitos. O nœmero de d(cid:237)gitos de

uma palavra-c(cid:243)digo Ø o seu comprimento.

De(cid:28)ni(cid:231)ªo 3.1. Codi(cid:28)ca(cid:231)ªo Ø o processo de mapeamento, ou seja, Ø uma conversªo
de uma dada sequŒncia de d(cid:237)gitos (alfabeto fonte) em uma outra sequŒncia de d(cid:237)gitos
(alfabeto do c(cid:243)digo).

Matematicamente, uma codi(cid:28)ca(cid:231)ªo Ø uma fun(cid:231)ªo injetiva que a cada s(cid:237)mbolo do
alfabeto fonte faz corresponder uma palavra-c(cid:243)digo. Dada uma codi(cid:28)ca(cid:231)ªo, f , com
alfabeto fonte F = {s1, s2, ..., sn}, as palavras f (s1), f (s2), ..., f (sn) sªo palavras-c(cid:243)digo
e o c(cid:243)digo, C, Ø o conjunto dessas palavras-c(cid:243)digo,

C = {f (s1), f (s2), ..., f (sn)}.

Exemplo 3.1. O c(cid:243)digo de CØsar, utilizado pelo imperador romano Jœlio CØsar, con-
siste em fazer um deslocamento de 3 posi(cid:231)ıes nas letras do alfabeto. Observe a tabela
3.1.

Decodi(cid:28)ca(cid:231)ªo (cid:218)nica e Decodi(cid:28)ca(cid:231)ªo Instant(cid:226)nea

30

A B C D E F G H I
D E F G H I

J K L M
J K L M N O P

N O P Q R S T U V W X Y Z
Q R S T U V W X Y Z A B C

Tabela 3.1: Alfabeto fonte e alfabeto c(cid:243)digo para o c(cid:243)digo de CØsar

Ao recebermos a mensagem codi(cid:28)cada DOJHEUD, convertemos essa sequŒncia de

d(cid:237)gitos na sequŒncia ALGEBRA, o que nos permitirÆ ler a mensagem recebida.

Exemplo 3.2. Na codi(cid:28)ca(cid:231)ªo de Morse o alfabeto fonte Ø {A, B, C, ..., Y, Z} e o al-
fabeto do c(cid:243)digo Ø {·, −, }. A imagem do s(cid:237)mbolo (cid:16)A(cid:17) do alfabeto fonte Ø a palavra
“·, −, ”, ou seja, f (A) = ·− .

3.2 Decodi(cid:28)ca(cid:231)ªo (cid:218)nica e Decodi(cid:28)ca(cid:231)ªo Instant(cid:226)nea

Os c(cid:243)digos devem ser unicamente decodi(cid:28)cÆveis para permitir o mapeamento in-
verso para o s(cid:237)mbolo original do alfabeto no receptor. Dada uma codi(cid:28)ca(cid:231)ªo, f , com
alfabeto fonte F = {s1, s2, ..., sn}, as palavras no alfabeto F sªo codi(cid:28)cadas de(cid:28)nindo-se
a fun(cid:231)ªo,

f ∗(x1, x2, ..., xm) = f (x1)f (x2), ..., f (xm),

onde xi ∈ F, i = {1, . . . , m}.

Uma codi(cid:28)ca(cid:231)ªo f diz-se unicamente decodi(cid:28)cÆvel se a fun(cid:231)ªo f ∗, de(cid:28)nida no con-

junto das palavras-c(cid:243)digo no alfabeto fonte, Ø injetora.

Exemplo 3.3. Seja f a codi(cid:28)ca(cid:231)ªo de CØsar.

f ∗(ALGEBRA) = f (A)f (L)f (G)f (E)f (B)f (R)f (A) = DOJHEU D.

Neste caso, a codi(cid:28)ca(cid:231)ªo de CØsar Ø unicamente decodi(cid:28)cÆvel.

Exemplo 3.4. Considere a codi(cid:28)ca(cid:231)ªo binÆria,f , cujo alfabeto do c(cid:243)digo Ø A = {0, 1},
de(cid:28)nida no alfabeto fonte, F = {a, b, c, d} por

f (a) = 00 f (b) = 110 f (c) = 100 f (d) = 1101.

Esta codi(cid:28)ca(cid:231)ªo nªo Ø unicamente decodi(cid:28)cÆvel. De fato,

f ∗(bc) = f (b)f (c) = 110100 = f (d)f (a) = f ∗(da).

C(cid:243)digos de Bloco

31

De(cid:28)ni(cid:231)ªo 3.2. Uma codi(cid:28)ca(cid:231)ªo Ø instant(cid:226)nea se nenhuma palavra-c(cid:243)digo Ø pre(cid:28)xo de
outra palavra-c(cid:243)digo.

Exemplo 3.5. Considere a codi(cid:28)ca(cid:231)ªo binÆria,f , cujo alfabeto do c(cid:243)digo Ø A = {0, 1},
de(cid:28)nida no alfabeto fonte, F = {a, b, c} por

f (a) = 1 f (b) = 10 f (c) = 100.

Esta codi(cid:28)ca(cid:231)ªo nªo Ø instant(cid:226)nea, pois a palavra-c(cid:243)digo (1, 0) Ø pre(cid:28)xo da palavra-
c(cid:243)digo (1, 0, 0).

3.3 C(cid:243)digos de Bloco

Os c(cid:243)digos de bloco se caracterizam pelo fato do processo de codi(cid:28)ca(cid:231)ªo ser feito
sobre blocos de bits ou blocos de s(cid:237)mbolos. Isso quer dizer que um feixe de bits ou
s(cid:237)mbolos Ø segmentado em blocos de k bits ou s(cid:237)mbolos (dimensªo), a partir dos quais
sªo geradas palavras-c(cid:243)digo com n bits ou s(cid:237)mbolos (comprimento). Assim, a nota(cid:231)ªo
que caracteriza um c(cid:243)digo de bloco Ø C(n, k). Suponhamos que queremos codi(cid:28)car
uma mensagem constitu(cid:237)da por uma sequŒncia de s(cid:237)mbolos extra(cid:237)dos de um alfabeto
com q elementos. Primeiramente, o codi(cid:28)cador (cid:16)parte(cid:17), ou secciona, a mensagem em
(cid:16)blocos(cid:17) com um certo nœmero, k, de d(cid:237)gitos e a cada um desses blocos vai acrescentar
alguns d(cid:237)gitos extras, redundantes, chamados d(cid:237)gitos de veri(cid:28)ca(cid:231)ªo de paridade, de
modo que os blocos (cid:28)quem mais longos, com n d(cid:237)gitos. Se k bits estªo contidos em um
bloco de n bits, entªo a quantidade de bits de redund(cid:226)ncia introduzidos no processo
de codi(cid:28)ca(cid:231)ªo Ø n − k.

O segredo de uma boa codi(cid:28)ca(cid:231)ªo estÆ na escolha adequada dos d(cid:237)gitos de paridade,
ou seja, o desempenho do c(cid:243)digo perante a existŒncia de erros e a necessidade de
os detectar ou corrigir depende da qualidade da redund(cid:226)ncia que for introduzida na
mensagem.

A Figura 3.2 ilustra o acrØscimo dos d(cid:237)gitos de veri(cid:28)ca(cid:231)ªo de paridade pelo codi(cid:28)-

cador.

Figura 3.2: D(cid:237)gitos de paridade

A quantidade de palavras-c(cid:243)digo diferentes que podem ser geradas Ø qk. Para

Detec(cid:231)ªo de erro

32

c(cid:243)digos binÆrios, teremos 2k palavras-c(cid:243)digos. Daqui em diante, enfatizaremos durante
todo o texto o uso do c(cid:243)digo binÆrio.

De(cid:28)ni(cid:231)ªo 3.3. A taxa de codi(cid:28)ca(cid:231)ªo Rc de um c(cid:243)digo de bloco Ø a razªo entre o
nœmero de bits de informa(cid:231)ªo k e o nœmero de bits da palavra-c(cid:243)digo n, isto Ø,

Rc =

k
n

.

Como o nœmero de bits da informa(cid:231)ªo estÆ entre zero e n, temos que a taxa de

codi(cid:28)ca(cid:231)ªo estÆ entre zero e um.

Exemplo 3.6. O c(cid:243)digo de bloco binÆrio C(5, 3) possui 23 = 8 palavras-c(cid:243)digo. A
mensagem (0, 1, 0) pode gerar a palavra-c(cid:243)digo (0, 1, 0, 1,0), onde os dois œltimos s(cid:237)m-
bolos sªo os d(cid:237)gitos de paridade.

Exemplo 3.7. Vamos determinar o comprimento, a dimensªo e a taxa de codi(cid:28)ca(cid:231)ªo
do c(cid:243)digo C = {(0, 0, 0, 0), (0, 1, 1, 0), (1, 1, 1, 1), (1, 0, 0, 1)}.

Como cada palavra-c(cid:243)digo possui 4 bits, o comprimento do c(cid:243)digo Ø 4, ou seja,
n = 4. O c(cid:243)digo C tem 4 palavras-c(cid:243)digo, isto Ø, 22 = 4. Logo, sua dimensªo Ø 2, ou
seja, k = 2. Assim sendo, a taxa de codi(cid:28)ca(cid:231)ªo Ø Rc =

= 0, 5.

2
4

3.4 Detec(cid:231)ªo de erro

Os c(cid:243)digos corretores de erros codi(cid:28)cam a informa(cid:231)ªo inicial, adicionando informa-
(cid:231)ªo redundante, de modo que, ao receber o sinal modi(cid:28)cado pelo "ru(cid:237)do", seja poss(cid:237)vel,
de alguma forma, recuperar a mensagem original.

Considere uma informa(cid:231)ªo que serÆ transmitida atravØs de um canal ruidoso. Para
se ter certeza que essa informa(cid:231)ªo foi enviada sem erro algum, utiliza-se algum mØtodo
de detec(cid:231)ªo de erro. Abordaremos o mØtodo da paridade, que possibilita a anÆlise de
duas maneiras:

• Paridade Par: A quantidade de bits 1 na palavra-c(cid:243)digo deve ser par.

• Paridade ˝mpar: A quantidade de bits 1 na palavra-c(cid:243)digo deve ser (cid:237)mpar.

Exemplo 3.8. Vamos veri(cid:28)car se houve erro durante a transmissªo de dados ao receber
a mensagem (1, 0, 1, 1, 0, 1, 0, 1). Para isso, considere que o bit de paridade estÆ no in(cid:237)cio
da palavra e que a paridade utilizada Ø par. Para detectar se houve erro na transmissªo
retira-se o d(cid:237)gito de paridade da mensagem recebida, que neste caso Ø o bit 1, obtendo
(0, 1, 1, 0, 1, 0, 1). Em seguida, calcula-se o bit de paridade da palavra (0, 1, 1, 0, 1, 0, 1),
que Ø o bit 0, pois a palavra possui quatro bits 1 e a paridade em questªo deve ser par.
Comparando-se o bit de paridade recebido com o calculado, nota-se que sªo diferentes.
Portanto, houve erro durante a transmissªo.

Detec(cid:231)ªo de erro

33

Destaquemos tambØm o mØtodo que utiliza um c(cid:243)digo polinomial ou mØtodo CRC

(Cyclic Redundancy Check).

O emissor e o receptor no processo de transmissªo das informa(cid:231)ıes escolhem um
polin(cid:244)mio com coe(cid:28)cientes binÆrios para representar uma sequŒncia de bits. Este po-
lin(cid:244)mio Ø chamado de polin(cid:244)mio gerador e Ø indicado por G(X). Quanto maior o grau
de G(X) maior serÆ a capacidade de detec(cid:231)ªo de erros. Neste polin(cid:244)mio o bit de maior
ordem e o termo independente devem ser iguais a 1. O grau do polin(cid:244)mio G(X) de-
termina a quantidade de d(cid:237)gitos de veri(cid:28)ca(cid:231)ªo de paridade que serªo acrescentados na
mensagem inicial. Se a informa(cid:231)ªo que se deseja transmitir possui k bits, entªo ela Ø
representada por um polin(cid:244)mio de grau k − 1.

Considere que o emissor deseja enviar uma mensagem. O processo de codi(cid:28)ca(cid:231)ªo

consiste em:

• Acrescentar (cid:224) mensagem inicial tantos zeros quanto for o grau do polin(cid:244)mio

gerador G(X).

• Escrever o polin(cid:244)mio p(X) que representa a mensagem obtida no item anterior.

O polin(cid:244)mio p(X) deve ser divis(cid:237)vel pelo polin(cid:244)mio G(X).

• Dividir o polin(cid:244)mio p(X) por G(X), obtendo o polin(cid:244)mio resto R(X).

• Somar o polin(cid:244)mio p(X) com o polin(cid:244)mio R(X).

Os coe(cid:28)cientes do polin(cid:244)mio R(X) determinam os d(cid:237)gitos de veri(cid:28)ca(cid:231)ªo de paridade.
A mensagem recebida serÆ formada pelos coe(cid:28)cientes do polin(cid:244)mio p(X) + R(X).

Exemplo 3.9. Sejam (1, 0, 1, 1, 1, 0) a mensagem a ser enviada e o polin(cid:244)mio gerador
G(X) = X 3 + 1. Como G(X) possui grau 3, devemos acrescentar (cid:224) mensagem inicial
trŒs d(cid:237)gitos de veri(cid:28)ca(cid:231)ªo de paridade, obtendo a informa(cid:231)ªo (1, 0, 1, 1, 1, 0, 0, 0, 0).
Deste modo, determinamos o polin(cid:244)mio p(X), de modo que cada bit desta informa(cid:231)ªo
seja o coe(cid:28)ciente de um termo de p(X), isto Ø, p(X) = X 8 + X 6 + X 5 + X 4.

Fazendo

p(X)
G(X)

, obtemos o polin(cid:244)mio resto R(X) = 0 · X 2 + X + 1.

Logo, p(X) + R(X) = X 8 + X 6 + X 5 + X 4 + X + 1.
Portanto, a mensagem recebida Ø (1, 0, 1, 1, 1, 0, 0, 1, 1).

A Figura 3.3 ilustra a divisªo binÆria feita com os coe(cid:28)cientes dos polin(cid:244)mios p(X)

e G(X).

Detec(cid:231)ªo de erro

34

Figura 3.3: Divisªo binÆria entre p(X) e G(X)

O processo de decodi(cid:28)ca(cid:231)ªo consiste em dividir o polin(cid:244)mio, cujos coe(cid:28)cientes sªo os
bits da mensagem recebida, pelo polin(cid:244)mio gerador G(X). Se o polin(cid:244)mio resto R(X)
nªo for o polin(cid:244)mio nulo, entªo ocorreu erro durante a transmissªo da mensagem.

Exemplo 3.10. Seja (1, 0, 1, 0, 1, 0, 0, 1, 1) a mensagem recebida atravØs de um canal
ruidoso. Veri(cid:28)quemos se houve erro durante a transmissªo da mensagem utilizando o
polin(cid:244)mio gerador G(X) = X 3 + 1.

A mensagem em questªo Ø representada pelo polin(cid:244)mio m(X) = X 8 + X 6 + X 4 +

X + 1.

Fazendo

nulo.

m(X)
G(X)

, obtemos o polin(cid:244)mio resto R(X) = X 2, que nªo Ø o polin(cid:244)mio

Logo, a mensagem foi recebida com erro.

Neste cap(cid:237)tulo apresentamos dois mØtodos de detec(cid:231)ªo de erro, mas serÆ que ap(cid:243)s
detectar o erro Ø sempre poss(cid:237)vel corrigi-lo? No pr(cid:243)ximo cap(cid:237)tulo abordaremos os
c(cid:243)digos corretores de erros, com o objetivo de responder este questionamento.

4 C(cid:243)digos Corretores de Erros

Este cap(cid:237)tulo foi desenvolvido de acordo com os itens [6], [7], [8], [9], [14], [16] e [17]

das referŒncias bibliogrÆ(cid:28)cas.

No cap(cid:237)tulo anterior vimos que Ø poss(cid:237)vel detectar erros na transmissªo de informa-
(cid:231)ıes. Vamos agora, veri(cid:28)car a possibilidade de corre(cid:231)ªo destes erros com a (cid:28)nalidade
de garantir o recebimento da informa(cid:231)ªo enviada. Durante a transmissªo de dados,
algumas vezes ocorrem erros no processo de codi(cid:28)ca(cid:231)ªo. O ru(cid:237)do faz com que a men-
sagem recebida nªo seja aquela que foi enviada. O objetivo dos c(cid:243)digos corretores de
erro Ø detectar irregularidades e possibilitar a sua corre(cid:231)ªo.

Figura 4.1: Canal ruidoso

Por volta de 1947, Richard W. Hamming trabalhava no Laborat(cid:243)rio Bell de Tec-
nologia, onde analisava erros ocorridos na transmissªo de informa(cid:231)ıes. LÆ ele p(cid:244)de
perceber que, se era realmente poss(cid:237)vel detectar o erro entªo porquŒ nªo seria poss(cid:237)vel
localizÆ-lo e corrigi-lo. A partir deste questionamento, Hamming passou a desenvolver
uma teoria que possibilitaria tal intento.

Ressaltemos que os estudos subsequentes de Shannon (1948), que de certa forma
aprimorou a teoria de Hamming, foi de fundamental import(cid:226)ncia para o desenvolvi-
mento da teoria dos c(cid:243)digos. JÆ em 1949, Marcel J. E. Golay, ao ler sobre o c(cid:243)digo
(7, 4) de Hamming estendeu o resultado para um c(cid:243)digo corretor de erro œnico, cujo
comprimento Ø um nœmero primo. Os primeiros trabalhos com c(cid:243)digos corretores de
erros feitos por Golay, Hamming e Shannon possibilitaram desenvolver estudos e ideias
que sªo usadas em nosso dia a dia, como por exemplo a comunica(cid:231)ªo m(cid:243)vel (telefones
celulares), aparelhos de armazenamentos de dados (gravador, compact disk, DVD),
alØm de comunica(cid:231)ıes via satØlite, processamento de imagens digitais, internet e rÆdio,
entre outras.

35

C(cid:243)digos de Hammimg

36

4.1 C(cid:243)digos de Hammimg

O c(cid:243)digo de Hamming Ø um c(cid:243)digo corretor de erro utilizado no processamento de
sinal e em telecomunica(cid:231)ıes. A sua utiliza(cid:231)ªo permite a transferŒncia e armazenamento
de dados de forma segura e e(cid:28)ciente. Hamming desenvolveu um c(cid:243)digo capaz de
detectar atØ dois erros e corrigir um erro, caso este seja œnico. Conforme seus estudos
avan(cid:231)avam sempre ocorriam novos questionamentos no sentido de elaborar c(cid:243)digos
cada vez mais e(cid:28)cazes. Para construir um c(cid:243)digo corretor de erro de Hamming, deve-
se primeiramente determinar o nœmero de bits de paridade b necessÆrios, de acordo
com a rela(cid:231)ªo

2b (cid:62) k + b + 1, b ∈ N,

onde k Ø o nœmero de d(cid:237)gitos da informa(cid:231)ªo a ser codi(cid:28)cada e b Ø o primeiro nœmero
natural que satisfaz a esta rela(cid:231)ªo. Em seguida, arranjamos os bits de paridade na
informa(cid:231)ªo colocando-os da esquerda para a direita na posi(cid:231)ªo onde se encontram as
potŒncias de 2. Na sequŒncia devemos atribuir adequadamente o valor 0 ou 1 para
cada bit de paridade. Por (cid:28)m, determinamos a palavra-c(cid:243)digo resultante.

Exemplo 4.1. Vamos determinar o c(cid:243)digo de Hamming para a informa(cid:231)ªo (1, 0, 1, 0),
usando paridade par. Note que a informa(cid:231)ªo possui 4 bits, ou seja, k = 4. Usando a
rela(cid:231)ªo 2b (cid:62) 4 + b + 1, para b = 1, temos que 2 (cid:62) 4 + 1 + 1 nªo se veri(cid:28)ca. Para b = 2,
4 (cid:62) 4 + 2 + 1 tambØm nªo se veri(cid:28)ca. E para b = 3, 8 (cid:62) 4 + 3 + 1 se veri(cid:28)ca. Logo, a
palavra-c(cid:243)digo deverÆ ter 3 bits de paridade, totalizando assim uma mensagem com 7
bits. Portanto, teremos o c(cid:243)digo de Hamming conhecido como c(cid:243)digo (7, 4).

Bits
Posi(cid:231)ªo do bit
Posi(cid:231)ªo em binÆrio
Bits de dados (kn)
Bits de paridade (bn)

b1
1
001

b2
2
010

k1
3
011
1

b3
4
100

k2
5
101
0

k3
6
110
1

k4
7
111
0

Tabela 4.1: C(cid:243)digo de Hamming (7,4) - Bits de dados

Vamos agora determinar os bits de paridade.
O bit b1 veri(cid:28)ca os bits das posi(cid:231)ıes 1, 3, 5 e 7. Como temos um bit 1 nessas

posi(cid:231)ıes e a paridade Ø par devemos ter b1 = 1.

O bit b2 veri(cid:28)ca os bits das posi(cid:231)ıes 2, 3, 6 e 7. Como temos dois bits 1 nessas

posi(cid:231)ıes e a paridade Ø par devemos ter b2 = 0.

O bit b3 veri(cid:28)ca os bits das posi(cid:231)ıes 4, 5, 6 e 7. Como temos um bit 1 nessas

posi(cid:231)ıes e a paridade Ø par devemos ter b3 = 1.

Para determinar a palavra-c(cid:243)digo basta acrescentar os bits de paridade ao bits de

dados.

C(cid:243)digos de Hammimg

37

Bits
Posi(cid:231)ªo do bit
Posi(cid:231)ªo em binÆrio
Bits de dados (kn)

b1
1
001

b2
2
010

Bits de paridade (bn) 1

0

k1
3
011
1

b3
4
100

1

k2
5
101
0

k3
6
110
1

k4
7
111
0

Tabela 4.2: C(cid:243)digo de Hamming (7,4) - Bits de paridade

Portanto, a palavra-c(cid:243)digo Ø (1, 0, 1, 1, 0, 1, 0).

4.1.1 A mØtrica de Hamming

Sejam A um conjunto (cid:28)nito (alfabeto c(cid:243)digo) e C (cid:32) An = A × A × · × A um c(cid:243)digo

onde todas as palavras-c(cid:243)digo possuem comprimento n.

De(cid:28)ni(cid:231)ªo 4.1. A dist(cid:226)ncia de Hamming entre dois vetores x e y, denotada por d(x, y),
Ø o nœmero de posi(cid:231)ıes onde os d(cid:237)gitos correspondentes sªo diferentes.

Matematicamente, sejam x = (x1, · · · , xn) ∈ An e y = (y1, · · · , yn) ∈ An. A

dist(cid:226)ncia de Hamming entre x e y Ø de(cid:28)nida por

d(x, y) =| {i ∈ {1, 2, . . . , n} : xi (cid:54)= yi} |,

onde | ... | representa a quantidade de (cid:237)ndices i.

Exemplo 4.2. Sejam as palavras-c(cid:243)digo x = (1, 0, 1, 0, 0, 1, 1) e y = (0, 1, 0, 0, 0, 1, 1).
A dist(cid:226)ncia de Hamming entre x e y Ø d(x, y) = 3.

Para x ∈ C e y ∈ An, d(x, y) Ø o nœmero de erros cometidos se, ao ser transmitida

a palavra x Ø recebida a palavra y.

Proposi(cid:231)ªo 4.1. A dist(cid:226)ncia de Hamming Ø uma mØtrica em An, isto Ø, dados x, y, z ∈
An, temos

• d(x, y) (cid:62) 0 e d(x, y) = 0 ⇔ x = y.

• d(x, y) = d(y, x).

• Desigualdade triangular: d(x, z) (cid:54) d(x, y) + d(y, z).

A demonstra(cid:231)ªo desta proposi(cid:231)ªo encontra-se na referŒncia [17].

De(cid:28)ni(cid:231)ªo 4.2. A dist(cid:226)ncia m(cid:237)nima de um c(cid:243)digo, denotado por dmin Ø dada por

dmin = min{d(x, y) : x, y ∈ C e x (cid:54)= y}.

Detec(cid:231)ªo de erros

38

Exemplo 4.3. A dist(cid:226)ncia m(cid:237)nima do c(cid:243)digo

C = {(0, 0, 0, 0, 0), (0, 1, 0, 1, 1), (1, 0, 1, 1, 0), (1, 1, 1, 0, 1)}

Ø 3.

De fato, temos que:

d((0, 0, 0, 0, 0), (0, 1, 0, 1, 1)) = 3, d((0, 0, 0, 0, 0), (1, 0, 1, 1, 0)) = 3,
d((0, 0, 0, 0, 0), (1, 1, 1, 0, 1)) = 4, d((0, 1, 0, 1, 1), (1, 0, 1, 1, 0) = 4,
d((0, 1, 0, 1, 1), (1, 1, 1, 0, 1)) = 3 e d((1, 0, 1, 1, 0), (1, 1, 1, 0, 1)) = 3

Logo, dmin = min{3, 4} = 3.

De(cid:28)ni(cid:231)ªo 4.3. O peso de Hamming de um vetor x = (x1, · · · , xn) ∈ An, denotado por
w(x), Ø a quantidade de d(cid:237)gitos xi diferentes de zero.

Exemplo 4.4. Sejam as palavras-c(cid:243)digo x = (1, 0, 1, 0, 0, 1, 1) e y = (0, 1, 0, 0, 0, 1, 1).
O peso de Hamming dessas palavras-c(cid:243)digo Ø w(x) = 4 e w(y) = 3.

Proposi(cid:231)ªo 4.2. Se x e y sªo palavras-c(cid:243)digo de um c(cid:243)digo binÆrio qualquer, entªo
d(x, y) = w(x + y).

Demonstra(cid:231)ªo. Sejam x = (x1, · · · , xn) e y = (y1, · · · , yn) as palavras-c(cid:243)digos de um
c(cid:243)digo binÆrio. Pelo princ(cid:237)pio da indu(cid:231)ªo (cid:28)nita sobre n, temos que d(x, y) = w(x + y).

De fato, se n = 1, entªo x = 1 e y = 0 e d(x, y) = w(x + y) = 1.
Suponhamos que d(x, y) = w(x+y) = z, para algum n e mostremos que a igualdade

Ø vÆlida para n + 1.

Tomemos x = (x1, · · · , xn, xn+1) e y = (y1, · · · , yn, yn+1). Temos dois casos:
a) se xn+1 = yn+1, entªo, pela hip(cid:243)tese de indu(cid:231)ªo (cid:28)nita, d(x, y) = w(x + y) = z.
b) se xn+1 (cid:54)= yn+1, entªo d(x, y) = z + 1. Por outro lado, x + y = (x1 + y1, · · · , xn +
yn, xn+1 + yn+1). Assim, w(x + y) = z + 1, pois xn+1 + yn+1 (cid:54)= 0. Logo, d(x, y) =
w(x + y) = z + 1.

Portanto, pelo princ(cid:237)pio de indu(cid:231)ªo (cid:28)nita, d(x, y) = w(x + y), para todo n.

Exemplo 4.5. Sejam as palavras-c(cid:243)digo x = (1, 0, 1, 1, 1) e y = (0, 0, 1, 0, 1).

Temos que d(x, y) = 2. Como x + y = (1, 0, 0, 1, 0), segue que w(x + y) = 2.

Portanto, d(x, y) = w(x + y).

4.2 Detec(cid:231)ªo de erros

Nesta se(cid:231)ªo destacaremos a import(cid:226)ncia da dist(cid:226)ncia de Hamming no processo de

decodi(cid:28)ca(cid:231)ªo de mensagens.

De(cid:28)ni(cid:231)ªo 4.4. Sejam x = (x1, · · · , xn) ∈ An e r ∈ R+.

A bola com centro em x e raio r Ø o subconjunto de An

Detec(cid:231)ªo de erros

39

B(x, r) = {y ∈ An : d(x, y) (cid:54) r}.

Um c(cid:243)digo C (cid:32) An diz-se t-detector de erros se, para todo x ∈ C, havendo pelo
menos 1 erro e no mÆximo t erros na transmissªo de x, entªo a mensagem recebida nªo
Ø uma palavra-c(cid:243)digo.

Matematicamente, C Ø t-detector de erros se, para qualquer x ∈ C,

B(x, t) ∩ C = {x}.

Teorema 4.1. Um c(cid:243)digo C (cid:32) An Ø t-detector de erros, se e somente se, dmin > t.

Demonstra(cid:231)ªo. Suponha que C detecta t erros e que dmin (cid:54) t. Assim sendo, existem
x ∈ C e y ∈ C tais que

0 < d(x, y) = dmin (cid:54) t.

Logo, y ∈ B(x, t) ∩ C e x (cid:54)= y, o que contradiz a hip(cid:243)tese.
Reciprocamente, por hip(cid:243)tese temos que dmin > t. Tomemos x ∈ C qualquer. Se

y ∈ B(x, t) ∩ C, entªo

Logo, x = y.

d(x, y) (cid:54) t < dmin

Observa(cid:231)ªo 4.1. Uma vez detectado um erro, adotamos um critØrio de corre(cid:231)ªo que
irÆ substituir o elemento y recebido, pelo elemento x do c(cid:243)digo que estÆ mais pr(cid:243)ximo
de y. Para que a corre(cid:231)ªo seja poss(cid:237)vel serÆ necessÆrio entªo que nªo haja ambiguidades
quanto (cid:224) determina(cid:231)ªo de um tal elemento.

A decodi(cid:28)ca(cid:231)ªo pode ser feita utilizando-se a dist(cid:226)ncia de Hamming, ou seja, de-

codi(cid:28)cando pela palavra mais pr(cid:243)xima.

Exemplo 4.6. Consideremos o c(cid:243)digo

C = {(0, 0, 0, 0, 0), (0, 1, 0, 1, 1), (1, 0, 1, 1, 0), (1, 1, 1, 0, 1)}.

Ao receber a mensagem (0, 0, 1, 1, 0), o receptor detecta que houve um erro, pois a
mensagem (0, 0, 1, 1, 0) nªo pertence ao c(cid:243)digo. Vamos entªo, corrigir este erro.

Temos que,

d((0, 0, 1, 1, 0), (0, 0, 0, 0, 0)) = 2, d((0, 0, 1, 1, 0), (0, 1, 0, 1, 1)) = 3,
d((0, 0, 1, 1, 0), (1, 0, 1, 1, 0)) = 1 e d((0, 0, 1, 1, 0), (1, 1, 1, 0, 1)) = 4

Como as menores dist(cid:226)ncias sªo 1 e 2, tomemos as bolas com centro em (0, 0, 1, 1, 0)

e raios 1 e 2. Assim,

B((0, 0, 1, 1, 0), 2) ∩ C = {(0, 0, 0, 0, 0), (1, 0, 1, 1, 0)} e
B((0, 0, 1, 1, 0), 1) ∩ C = {(1, 0, 1, 1, 0)}.

Corre(cid:231)ªo de erros

40

A palavra-c(cid:243)digo que estÆ mais pr(cid:243)xima da mensagem recebida (0, 0, 1, 1, 0) Ø

(1, 0, 1, 1, 0).

Logo, se houver um erro na transmissªo da mensagem (1, 0, 1, 1, 0), e for rece-
bida a mensagem (0, 0, 1, 1, 0) que nªo pertence ao c(cid:243)digo, o erro pode ser corrigido,
substituindo (0, 0, 1, 1, 0) pela palavra-c(cid:243)digo x, tal que d(x, (0, 0, 1, 1, 0)) seja m(cid:237)nima.
Contudo, se houver dois erros e for recebida a mensagem (1, 1, 0, 1, 0), que nªo pertence
ao c(cid:243)digo, ao invØs de (1, 0, 1, 1, 0), o erro Ø detectado, mas nªo pode ser corrigido, uma
vez que hÆ duas palavras-c(cid:243)digo que estªo (cid:224) mesma dist(cid:226)ncia m(cid:237)nima de (1, 1, 0, 1, 0).

Observa(cid:231)ªo 4.2. A obten(cid:231)ªo de c(cid:243)digos e(cid:28)cientes, com a (cid:28)nalidade de melhorar a
rela(cid:231)ªo entre comprimento, nœmero de palavras-c(cid:243)digo e capacidade de corre(cid:231)ªo (dis-
t(cid:226)ncia entre as palavras-c(cid:243)digo) Ø o principal problema da teoria de c(cid:243)digos.

4.3 Corre(cid:231)ªo de erros

Um c(cid:243)digo C (cid:32) An diz-se t-corretor de erros se, para todo x ∈ C, havendo pelo
menos 1 erro e no mÆximo t erros na transmissªo de x, entªo ao receber uma mensagem
y, a mensagem x Ø a œnica mensagem de C que estÆ (cid:224) dist(cid:226)ncia m(cid:237)nima de y.

Matematicamente, C Ø t-corretor de erros se, para todo x ∈ C e todo y ∈ An, tais

que 1 (cid:54) d(x, y) (cid:54) t, tem-se

d(x, y) < d(z, y), ∀z ∈ C \ {x}.

Observa(cid:231)ªo 4.3. Utilizaremos as seguintes nota(cid:231)ıes: dado um nœmero real x, denota-
remos por (cid:98)x(cid:99) o maior inteiro menor ou igual a x e representaremos (cid:100)x(cid:101) como o menor
inteiro maior ou igual a x.

Teorema 4.2. Um c(cid:243)digo C (cid:32) An Ø t-corretor de erros, se e somente se, dmin > 2t.

Demonstra(cid:231)ªo. Suponha que dmin (cid:54) 2t e mostremos que C nªo Ø t-corretor de erros
construindo x ∈ C, y ∈ An e z ∈ C\{x}, tais que 1 (cid:54) d(x, y) (cid:54) t e d(x, y) (cid:62) d(z, y).

Sejam x, z ∈ C tais que d(x, z) = dmin = r e i1, i2, ..., ir ∈ {1, 2, ..., n} os (cid:237)ndices i

para os quais xi (cid:54)= zi. Assim sendo, 1 (cid:54) r = dmin (cid:54) 2t.

Seja y ∈ An de(cid:28)nido por
yi = xi, se i = ij com j ∈ {1, ..., r} par.
yi = zi, se i = ij com j ∈ {1, ..., r} (cid:237)mpar.
yi = xi = zi, se i /∈ {i1, ..., ir}.
1 (cid:54) d(x, y) =| {j ∈ {1, ..., r} : j Ø (cid:237)mpar } |= (cid:100) r
d(z, y) =| {j ∈ {1, ..., r} : j Ø par } |= (cid:98) r
Reciprocamente, suponha que dmin > 2t.
Sejam x ∈ C e y ∈ An tais que 1 (cid:54) d(x, y) (cid:54) t. Se z ∈ C \ {x}, entªo d(x, z) (cid:62)

2(cid:101) (cid:54) t.
2(cid:99) (cid:54) d(x, y).

dmin > 2t.

Logo, pela desigualdade triangular,

Isometrias em An

41

Portanto,

d(x, z) (cid:54) d(x, y) + d(y, z).

d(y, z) > 2t − d(x, y) (cid:62) t (cid:62) d(x, y).

CorolÆrio 4.1. Um c(cid:243)digo C com dist(cid:226)ncia m(cid:237)nima dmin pode detectar atØ dmin − 1
erros e corrigir atØ (cid:98) dmin−1

(cid:99) erros.

2

A demonstra(cid:231)ªo deste corolÆrio encontra-se na referŒncia [16].

Exemplo 4.7. Seja um c(cid:243)digo C com dist(cid:226)ncia m(cid:237)nima dmin. Esse c(cid:243)digo pode de-
tectar e corrigir a seguinte quantidade de erros:

dmin Nœmero de erros detectados por C Nœmero de erros corrigidos por C

1
2
3
4

0
1
2
3

0
0
1
1

Tabela 4.3: Rela(cid:231)ªo entre dist(cid:226)ncia m(cid:237)nima e nœmero de erros

Exemplo 4.8. Determine a dist(cid:226)ncia m(cid:237)nima do c(cid:243)digo

C = {(0, 1, 0, 1, 0, 1, 1, 0), (0, 0, 1, 1, 0, 0, 1, 1), (0, 1, 0, 1, 0, 0, 1, 1), (0, 0, 1, 1, 0, 1, 1, 0)}

e veri(cid:28)que sua capacidade de detec(cid:231)ªo e corre(cid:231)ªo de erros.

Analisemos a dist(cid:226)ncia entre cada uma das palavras-c(cid:243)digo, assim:
d((0, 1, 0, 1, 0, 1, 1, 0), (0, 0, 1, 1, 0, 0, 1, 1)) = 4,
d((0, 1, 0, 1, 0, 1, 1, 0), (0, 1, 0, 1, 0, 0, 1, 1)) = 2,
d((0, 1, 0, 1, 0, 1, 1, 0), (0, 0, 1, 1, 0, 1, 1, 0)) = 2,
d((0, 0, 1, 1, 0, 0, 1, 1), (0, 1, 0, 1, 0, 0, 1, 1)) = 2,
d((0, 0, 1, 1, 0, 0, 1, 1), (0, 0, 1, 1, 0, 1, 1, 0)) = 2,
d((0, 1, 0, 1, 0, 0, 1, 1), (0, 0, 1, 1, 0, 1, 1, 0)) = 4.
Logo, conclui-se que a dist(cid:226)ncia m(cid:237)nima do c(cid:243)digo C Ø 2 e portanto, pelo exemplo
anterior, esse c(cid:243)digo tem capacidade para detectar um erro e nªo possui capacidade de
corre(cid:231)ªo de tal erro.

4.4

Isometrias em An

Seja A um alfabeto e n um nœmero natural. Dizemos que uma fun(cid:231)ªo F : An −→ An

Ø uma isometria de An se ela preserva dist(cid:226)ncia, ou seja,

C(cid:243)digos Equivalentes

42

d(F (x), F (y)) = d(x, y), ∀x, y ∈ An.

Exemplo 4.9. Sejam A = {0, 1} e n = 3. A aplica(cid:231)ªo

F :

A3 −→ A3

(a1, a2, a3)

(cid:55)−→ (1 − a1, a2, a3).

Ø uma isometria, pois de 1 − a1 = 1 − b1 ⇔ a1 = b1, conclui-se que

d(F (a1, a2, a3), F (b1, b2, b3)) = d((1 − a1, a2, a3), (1 − b1, b2, b3)) =
d((a1, a2, a3), (b1, b2, b3)).

Exemplo 4.10. Se f Ø uma aplica(cid:231)ªo bijetora em A e i ∈ {1, 2, ..., n}, entªo

T i
f :

An −→ An

(a1, ..., an)

(cid:55)−→ (a1, ..., f (ai), ..., an).

Ø uma isometria.

Exemplo 4.11. Se π Ø uma permuta(cid:231)ªo de {1, 2, ..., n}, entªo

Tπ :

An −→ An

(a1, ..., an)

(cid:55)−→ (aπ(1), ..., aπ(n)).

Ø uma isometria.

4.5 C(cid:243)digos Equivalentes

Sejam C (cid:32) An e C (cid:48) (cid:32) An dois c(cid:243)digos. Se existe uma isometria F de An tal que
.

, dizemos que C Ø equivalente a C (cid:48)

F (C) = C (cid:48)

Teorema 4.3. Sejam C (cid:32) An e C (cid:48) (cid:32) An dois c(cid:243)digos e (a1, ..., an) ∈ C. Os c(cid:243)digos
C e C (cid:48)
sªo equivalentes, se e somente se, existe uma permuta(cid:231)ªo π de {1, 2, ..., n} e
f1, ..., fn bije(cid:231)ıes em A tais que

C (cid:48) = {(fπ(1)(aπ(1)), ..., fπ(n)(aπ(n)))}.

Dois c(cid:243)digos de comprimento n sobre o alfabeto A sªo equivalentes se, e s(cid:243) se, um

deles se obtØm do outro fazendo as seguintes opera(cid:231)ıes:

• Substituir o elemento do alfabeto A que estÆ na posi(cid:231)ªo i de cada palavra, segundo

uma bije(cid:231)ªo fi em A, para i = 1, 2, ..., n.

• Permutar as posi(cid:231)ıes dos s(cid:237)mbolos em cada palavra segundo uma permuta(cid:231)ªo π

de {1, 2, ..., n}.

C(cid:243)digos Equivalentes

43

Exemplo 4.12. Sejam o alfabeto A = {a, b, c, d, e} e o c(cid:243)digo C = {aab, abc, cde, bbd}.
Considere as bije(cid:231)ıes f1, f2 e f3 em A tais que

f1 : A −→ A
a (cid:55)−→ a
b
(cid:55)−→ b
c (cid:55)−→ c
d (cid:55)−→ d
e (cid:55)−→ e

f2 : A −→ A
a (cid:55)−→ a
b
(cid:55)−→ c
c (cid:55)−→ d
d (cid:55)−→ b
e (cid:55)−→ e

f3 : A −→ A
a (cid:55)−→ b
b
(cid:55)−→ c
c (cid:55)−→ a
d (cid:55)−→ e
e (cid:55)−→ d

Tomemos a permuta(cid:231)ªo de {1, 2, 3}, π = (1 2).
Logo,

aab (cid:57)(cid:57)(cid:75)

f1(a)f2(a)f3(b) = aac (cid:57)(cid:57)(cid:75)

aac

abc (cid:57)(cid:57)(cid:75)

f1(a)f2(b)f3(c) = aca (cid:57)(cid:57)(cid:75)

caa

cde (cid:57)(cid:57)(cid:75)

f1(c)f2(d)f3(e) = cbd (cid:57)(cid:57)(cid:75)

bcd

bbd (cid:57)(cid:57)(cid:75)

f1(b)f2(b)f3(d) = bce (cid:57)(cid:57)(cid:75)

cbe

Portanto, obtemos o c(cid:243)digo C (cid:48) = {aac, caa, bcd, cbe} equivalente a C.

5 C(cid:243)digos de Bloco Lineares

Os itens [12], [14] e [16] das referŒncias foram utilizados no desenvolvimento deste

cap(cid:237)tulo.

Sejam p um nœmero primo e m ∈ N e q = pm. Representa-se por Fq o corpo (cid:28)nito
com q elementos. Nos c(cid:243)digos de bloco lineares o alfabeto considerado Ø A = Fq, para
algum p primo e algum m ∈ N.

De(cid:28)ni(cid:231)ªo 5.1. Um c(cid:243)digo linear C(n, k) Ø um subespa(cid:231)o vetorial de dimensªo k do
espa(cid:231)o vetorial Fq.

Um c(cid:243)digo linear satisfaz as seguintes propriedades:

i) A palavra-c(cid:243)digo nula pertence ao conjunto de palavras-c(cid:243)digo.

ii) A soma de duas palavras-c(cid:243)digo Ø tambØm uma palavra-c(cid:243)digo.

Figura 5.1: Representa(cid:231)ªo dos c(cid:243)digos binÆrios lineares como um subespa(cid:231)o vetorial

Exemplo 5.1. O c(cid:243)digo de bloco linear C(4, 2) sobre Z2 possui 4 palavras-c(cid:243)digo.

Dada a mensagem (x1, x2), cada palavra-c(cid:243)digo serÆ da forma (x1, x2, x2, x1 + x2).

44

45

Mensagem Palavras-c(cid:243)digo

00
01
10
11

0000
0111
1001
1110

Tabela 5.1: C(cid:243)digo C(4,2)

Observa(cid:231)ªo 5.1. No exemplo 5.1, observe que a palavra-c(cid:243)digo (1, 1, 1, 0) pode ser
vista, por exemplo, como a soma, em Z2, das palavras-c(cid:243)digo (0, 1, 1, 1) e (1, 0, 0, 1).

Observa(cid:231)ªo 5.2. A œltima palavra-c(cid:243)digo da tabela 5.1 foi obtida a partir das k = 2
palavras cuja componente de mensagem tem apenas um bit 1: (0, 1) e (1, 0), as quais
sªo linearmente independentes, ou seja, nenhuma delas Ø combina(cid:231)ªo linear da outra.

Para um c(cid:243)digo linear qualquer C(n, k), as 2k − (k + 1) palavras-c(cid:243)digo restantes
(excluindo a palavra nula) sªo obtidas por combina(cid:231)ªo linear de k palavras-c(cid:243)digo
linearmente independentes.

Adotando a nota(cid:231)ªo de vetores, podemos associar as k entradas da informa(cid:231)ªo com
o vetor X = (x1, x2, ..., xk) e tambØm associar as n entradas da palavra-c(cid:243)digo com o
vetor Y = (y1, y2, ..., yn). Vamos supor sem perda de generalidade que os d(cid:237)gitos de
paridade (cid:28)cam todos juntos no (cid:28)nal da palavra-c(cid:243)digo.

Exemplo 5.2. Vamos construir um c(cid:243)digo binÆrio de comprimento 5 de modo que as
trŒs primeiras componentes x1, x2 e x3 de cada palavra-c(cid:243)digo sejam de informa(cid:231)ªo e
possuam dois d(cid:237)gitos de paridade, x4 e x5.
De(cid:28)nimos os d(cid:237)gitos de paridade assim:

x4 = x1 + x2

x5 = x1 + x3

Usando a representa(cid:231)ªo vetorial, cada palavra-c(cid:243)digo serÆ da forma

(x1, x2, x3, x1 + x2, x1 + x3)

Para cada informa(cid:231)ªo, de acordo com as coordenadas do vetor descrito acima,

obtØm-se cada uma das 8 palavras-c(cid:243)digo do c(cid:243)digo C(5, 3).

46

Mensagem Palavras c(cid:243)digo

000
001
010
100
011
101
110
111

00000
00101
01010
10011
01111
10110
11001
11100

Tabela 5.2: C(cid:243)digo C(5,3)

Proposi(cid:231)ªo 5.1. Seja C (cid:40) (Fq)n um c(cid:243)digo linear. Entªo

dmin = min{d(x, 0) : x ∈ C \ {0}}.

Demonstra(cid:231)ªo. Seja d(cid:48) = min{d(x, 0) : x ∈ C \ {0}}.

Sejam x, y ∈ C tais que dmin = d(x, y). Como C Ø um espa(cid:231)o vetorial, x−y ∈ C\{0}

e d(cid:48) = d(x − y, 0).

Logo,

d(cid:48) (cid:54) |{i ∈ {1, 2, ..., n} : xi − yi (cid:54)= 0}| = d(x, y) = dmin.

Por outro lado, como 0 ∈ C, para qualquer x ∈ C \ {0} temos d(x, 0) (cid:62) dmin.
Logo, d(cid:48) (cid:62) dmin.
Portanto, d(cid:48) = dmin, ou seja, dmin = min{d(x, 0) : x ∈ C \ {0}}.

Um c(cid:243)digo linear de comprimento n, dimensªo k e dist(cid:226)ncia m(cid:237)nima d serÆ chamado

c(cid:243)digo [n, k, d].

Exemplo 5.3. O c(cid:243)digo C = {(0, 0, 0, 0), (1, 0, 1, 1), (0, 1, 1, 0), (1, 1, 0, 1)} Ø um su-
bespa(cid:231)o vetorial de (Z2)4. O conjunto B = {(1, 0, 1, 1), (1, 1, 0, 1)} Ø uma base de C.
Temos que,

w(1, 0, 1, 1) = 3, w(1, 1, 0, 1) = 3 e w(0, 1, 1, 0) = 2.

Logo, a dist(cid:226)ncia m(cid:237)nima do c(cid:243)digo C Ø 2.
Portanto, temos um c(cid:243)digo [4, 2, 2].

Representa(cid:231)ªo de um c(cid:243)digo linear como imagem de uma transforma(cid:231)ªo linear

47

5.1 Representa(cid:231)ªo de um c(cid:243)digo linear como imagem

de uma transforma(cid:231)ªo linear

Seja C(n, k) um c(cid:243)digo linear sobre Fq e {v1, v2, ..., vk} uma base de C. A aplica(cid:231)ªo

T :

(Fq)k −→ (Fq)n

(x1, x2, ..., xk)

(cid:55)−→ x1v1 + x2v2 + · · · + xkvk

Ø linear, injetora e Im(T ) = C.

Assim, um c(cid:243)digo linear C(n, k) sobre Fq pode ser representado por uma aplica(cid:231)ªo

injetora T : (Fq)k −→ (Fq)n com caracter(cid:237)stica k.

Seja T uma transforma(cid:231)ªo linear que representa um c(cid:243)digo linear. Para determinar
se v ∈ (Fq)n Ø ou nªo uma palavra-c(cid:243)digo Ø preciso obter uma base {v1, v2, ..., vk} de
Im(T ) e resolver o sistema de equa(cid:231)ıes x1v1 + x2v2 + · · · + xkvk = v.

Exemplo 5.4. Dados A = {0, 1} = Z2, n = 5 e o c(cid:243)digo linear C(5, 2), tal que

C = {(0, 0, 0, 0, 0), (0, 1, 0, 1, 1), (1, 0, 1, 1, 0), (1, 1, 1, 0, 1)}.

O conjunto {(1, 0, 1, 1, 0), (0, 1, 0, 1, 1)} Ø uma base de C e tomando a aplica(cid:231)ªo

linear

T :

(Z2)2 −→ (Z2)5

(x1, x2)

(cid:55)−→ (x1, x2, x1, x1 + x2, x2)

obtemos C = Im(T ).

Esta Ø uma representa(cid:231)ªo do c(cid:243)digo C como subespa(cid:231)o imagem de uma transfor-

ma(cid:231)ªo linear.

Observa(cid:231)ªo 5.3. A codi(cid:28)ca(cid:231)ªo da mensagem (x1, x2) do c(cid:243)digo fonte Ø obtida calcu-
lando T (x1, x2) para quaisquer x1, x2 ∈ Z2.

5.2 Representa(cid:231)ªo de um c(cid:243)digo linear como nœcleo

de uma transforma(cid:231)ªo linear

Dado um c(cid:243)digo linear C(n, k) sobre Fq. Seja C (cid:48) um subespa(cid:231)o de (Fq)n tal que
C ⊕ C (cid:48) = (Fq)n. Tomemos w ∈ (Fq)n. Entªo existem um œnico x ∈ C e um œnico
y ∈ C (cid:48), tais que x + y = w. Escreve-se w = x ⊕ y. A aplica(cid:231)ªo

T :

C ⊕ C (cid:48) −→ (Fq)n
x ⊕ y (cid:55)−→ w.

Ø linear e N (T ) = C.

Dado w ∈ (Fq)n. Se w ∈ C entªo, T (w) = 0.

Representa(cid:231)ªo de um c(cid:243)digo linear como nœcleo de uma transforma(cid:231)ªo linear

48

Exemplo 5.5. Vamos obter uma representa(cid:231)ªo do c(cid:243)digo linear C(5, 2) dado por

C = {(0, 0, 0, 0, 0), (0, 1, 0, 1, 1), (1, 0, 1, 1, 0), (1, 1, 1, 0, 1)}

como nœcleo de uma transforma(cid:231)ªo linear.

Para isso, tomemos os vetores linearmente independentes de (Z2)5:

(1, 0, 1, 1, 0), (0, 1, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1).

Assim, o subespa(cid:231)o C (cid:48) de (Z2)5 gerado por {(0, 0, 1, 0, 0), (0, 0, 0, 1, 0), (0, 0, 0, 0, 1)}

Ø um subespa(cid:231)o complementar de C.

Para qualquer (x1, x2, x3, x4, x5) ∈ (Z2)5, existem escalares α1, α2, α3, α4, α5 ∈ Z2,

tal que

(x1, x2, x3, x4, x5) = α1(1, 0, 1, 1, 0) + α2(0, 1, 0, 1, 1) + α3(0, 0, 1, 0, 0)+
α4(0, 0, 0, 1, 0) + α5(0, 0, 0, 0, 1).

Da(cid:237) segue que (x1, x2, x3, x4, x5) = (α1, α2, α1+α3, α1+α2+α4, α2+α5). Concluindo

que,

α1 = x1
α2 = x2
α3 = x3 − x1
α4 = x4 − x1 − x2
α5 = x5 − x2
Logo,

(x1, x2, x3, x4, x5) = x1(1, 0, 1, 1, 0) + x2(0, 1, 0, 1, 1) + (x3 − x1)(0, 0, 1, 0, 0)+
(x4 − x1 − x2)(0, 0, 0, 1, 0) + (x5 − x2)(0, 0, 0, 0, 1).

Aplicando a transforma(cid:231)ªo linear T na expressªo anterior, temos

T (x1, x2, x3, x4, x5) = x1T (1, 0, 1, 1, 0) + x2T (0, 1, 0, 1, 1) + (x3 − x1)T (0, 0, 1, 0, 0)+
(x4 − x1 − x2)T (0, 0, 0, 1, 0) + (x5 − x2)T (0, 0, 0, 0, 1).

Como queremos uma transforma(cid:231)ªo linear cujo nœcleo Ø o c(cid:243)digo, segue que T (w) =

0, se w ∈ C e tomando T (w) = w, se w /∈ C, temos

T (x1, x2, x3, x4, x5) = x1(0, 0, 0, 0, 0) + x2(0, 0, 0, 0, 0) + (x3 − x1)(0, 0, 1, 0, 0)+
(x4 − x1 − x2)(0, 0, 0, 1, 0) + (x5 − x2)(0, 0, 0, 0, 1).

Portanto, sendo T : (Z2)5 −→ (Z2)5 a transforma(cid:231)ªo linear de(cid:28)nida por

T (x1, x2, x3, x4, x5) = (0, 0, x3 − x1, x4 − x1 − x2, x5 − x2).

teremos C = N (T ).

Matriz geradora de um c(cid:243)digo linear

49

De(cid:28)ni(cid:231)ªo 5.2. Seja C(n, k) um c(cid:243)digo linear sobre Fq. O c(cid:243)digo dual de C Ø o c(cid:243)digo
linear C ⊥(n, n − k) sobre Fq.

Exemplo 5.6. Considere o c(cid:243)digo

C = {(0, 0, 0, 0, 0), (0, 1, 0, 1, 1), (1, 0, 1, 1, 0), (1, 1, 1, 0, 1)} (cid:40) (Z2)5.

O c(cid:243)digo C ⊥(5, 3) Ø linear.

De fato, tomemos {(0, 1, 0, 1, 1), (1, 0, 1, 1, 0), (1, 1, 1, 0, 1)} uma base de C. Assim,

a mensagem (x1, x2, x3, x4, x5) ∈ (Z2)5 pertence a C ⊥, se e s(cid:243) se,






x2 + x4 + x5 = 0
x1 + x3 + x4 = 0
x1 + x2 + x3 + x5 = 0

Logo, C ⊥ = {(0, 0, 0, 0, 0), (1, 0, 1, 0, 0), (1, 1, 0, 1, 0), (0, 1, 1, 1, 0), (0, 1, 0, 0, 1),
(1, 0, 0, 1, 1), (1, 1, 1, 0, 1), (0, 0, 1, 1, 1)}.

5.3 Matriz geradora de um c(cid:243)digo linear

As palavras-c(cid:243)digo de um c(cid:243)digo linear podem ser obtidas a partir de uma matriz

especial, a qual apresentaremos a seguir.

De(cid:28)ni(cid:231)ªo 5.3. Sejam C(n, k) um c(cid:243)digo linear sobre Fq e B = {v1, v2, ..., vk} uma
base de C. A matriz G de ordem k × n cujas linhas sªo v1, v2, ..., vk Ø denominada
matriz geradora do c(cid:243)digo linear C.

Observa(cid:231)ªo 5.4. Identi(cid:28)ca-se (x1, x2, ..., xk) ∈ (Fq)k com a matriz linha

(cid:16)

x1 x2

... xk

(cid:17)

.

Proposi(cid:231)ªo 5.2. Se G Ø uma matriz geradora de um c(cid:243)digo linear C(n, k) sobre Fq,
entªo

C = {x · G : x ∈ (Fq)k}.

Exemplo 5.7. Dados A = {0, 1} = Z2, n = 5. Considere o c(cid:243)digo linear C(5, 2), tal
que

C = {(0, 0, 0, 0, 0), (0, 1, 0, 1, 1), (1, 0, 1, 1, 0), (1, 1, 1, 0, 1)}.

O conjunto {(1, 0, 1, 1, 0), (0, 1, 0, 1, 1)} Ø uma base de C.

Logo, a matriz geradora de C Ø

(cid:32)

G =

1 0 1 1 0
0 1 0 1 1

(cid:33)

.

Pela proposi(cid:231)ªo 5.2 as palavras-c(cid:243)digo sªo obtidas assim:

Matriz geradora de um c(cid:243)digo linear

50

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:17)

(cid:17)

(cid:17)

(cid:17)

·

·

·

·

0 0

0 1

1 0

1 1

(cid:32)

(cid:32)

(cid:32)

(cid:32)

1 0 1 1 0
0 1 0 1 1

1 0 1 1 0
0 1 0 1 1

1 0 1 1 0
0 1 0 1 1

1 0 1 1 0
0 1 0 1 1

(cid:33)

(cid:33)

(cid:33)

(cid:33)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

=

=

=

=

0 0 0 0 0

0 1 0 1 1

1 0 1 1 0

1 1 1 0 1

(cid:17)

(cid:17)

(cid:17)

(cid:17)

,

,

,

.

Observa(cid:231)ªo 5.5. No exemplo 5.7 para qualquer x = (x1, x2) ∈ (Z2)2 e dado y =
(y1, y2, y3, y4, y5) ∈ (Z2)5, para averiguar se y Ø uma palavra-c(cid:243)digo e, caso seja, deco-
di(cid:28)car y basta resolver o sistema

x · G = y ⇔






x1 = y1
x2 = y2
x1 = y3
x1 + x2 = y4
x2 = y5

Exemplo 5.8. Dado o corpo (cid:28)nito Z2, considere a transforma(cid:231)ªo linear e injetora

T :

(Z2)3 −→ (Z2)5

(x1, x2, x3)

(cid:55)−→ (x1, x3, x1 + x2, x2 + x3, x2).

Tomemos o c(cid:243)digo linear C(5, 3) tal que C = Im(T ).

Sejam {e1, e2, e3} a base can(cid:244)nica de (Z2)3 e {f1, f2, f3, f4, f5} a base can(cid:244)nica de

(Z2)5.

Vamos determinar a matriz geradora G do c(cid:243)digo C. Para isso, fazemos

T (1, 0, 0) = (1, 0, 1, 0, 0) = 1f1 + 0f2 + 1f3 + 0f4 + 0f5,
T (0, 1, 0) = (0, 0, 1, 1, 1) = 0f1 + 0f2 + 1f3 + 1f4 + 1f5,
T (0, 0, 1) = (0, 1, 0, 1, 0) = 0f1 + 1f2 + 0f3 + 1f4 + 0f5.

Logo, o conjunto {(1, 0, 1, 0, 0), (0, 0, 1, 1, 1), (0, 1, 0, 1, 0)} Ø uma base de C e a ma-

triz geradora Ø

G =






1 0 1 0 0
0 0 1 1 1
0 1 0 1 0




.

As palavras-c(cid:243)digo sªo obtidas assim:

(cid:16)

(cid:17)

0 0 0



·




1 0 1 0 0
0 0 1 1 1
0 1 0 1 0



(cid:16)


 =

0 0 0 0 0

(cid:17)

,

Matriz geradora de um c(cid:243)digo linear

51

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:17)

0 0 1

(cid:17)

0 1 0

(cid:17)

0 1 1

(cid:17)

1 0 0

(cid:17)

1 0 1

(cid:17)

1 1 0

(cid:17)

1 1 1



·






·






·






·






·






·






·




1 0 1 0 0
0 0 1 1 1
0 1 0 1 0

1 0 1 0 0
0 0 1 1 1
0 1 0 1 0

1 0 1 0 0
0 0 1 1 1
0 1 0 1 0

1 0 1 0 0
0 0 1 1 1
0 1 0 1 0

1 0 1 0 0
0 0 1 1 1
0 1 0 1 0

1 0 1 0 0
0 0 1 1 1
0 1 0 1 0

1 0 1 0 0
0 0 1 1 1
0 1 0 1 0




 =




 =




 =




 =




 =




 =




 =

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

0 1 0 1 0

0 0 1 1 1

0 1 1 0 1

1 0 1 0 0

1 1 1 1 0

1 0 0 1 1

1 1 0 0 1

(cid:17)

,

(cid:17)

,

(cid:17)

,

(cid:17)

,

(cid:17)

,

(cid:17)

,

(cid:17)

.

Portanto, obtemos o c(cid:243)digo C = {(0, 0, 0, 0, 0), (0, 1, 0, 1, 0), (0, 0, 1, 1, 1), (0, 1, 1, 0, 1),

(1, 0, 1, 0, 0), (1, 1, 1, 1, 0), (1, 0, 0, 1, 1), (1, 1, 0, 0, 1)}.

Exemplo 5.9. Dado o corpo (cid:28)nito Z2, considere o c(cid:243)digo linear C ⊂ (Z2)5 de(cid:28)nido
pela transforma(cid:231)ªo linear injetora

T :

(Z2)3 −→ (Z2)5

(x1, x2, x3)

(cid:55)−→ (x1, x2, x3, x1 + x3, x1 + x2).

Sejam {e1, e2, e3} a base can(cid:244)nica de (Z2)3 e {f1, f2, f3, f4, f5} a base can(cid:244)nica de

(Z2)5.

Vamos determinar a matriz geradora G do c(cid:243)digo C. Para isso, fazemos

T (1, 0, 0) = (1, 0, 0, 1, 1) = 1f1 + 0f2 + 0f3 + 1f4 + 1f5
T (0, 1, 0) = (0, 1, 0, 0, 1) = 0f1 + 1f2 + 0f3 + 0f4 + 1f5
T (0, 0, 1) = (0, 0, 1, 1, 0) = 0f1 + 0f2 + 1f3 + 1f4 + 0f5

Logo, o conjunto {(1, 0, 0, 1, 1), (0, 1, 0, 0, 1), (0, 0, 1, 1, 0)} Ø uma base de C e a ma-

triz geradora Ø

Matriz geradora de um c(cid:243)digo linear

52

G =






1 0 0 1 1
0 1 0 0 1
0 0 1 1 0




.

Note que a matriz geradora desse c(cid:243)digo, apresenta-se de forma especial. As trŒs

primeiras linhas e as trŒs primeiras colunas formam a matriz identidade de ordem 3.

As palavras-c(cid:243)digo sªo obtidas assim:

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:17)

0 0 0

(cid:17)

0 0 1

(cid:17)

0 1 0

(cid:17)

0 1 1

(cid:17)

1 0 0

(cid:17)

1 0 1

(cid:17)

1 1 0

(cid:17)

1 1 1



·






·






·






·






·






·






·






·




1 0 0 1 1
0 1 0 0 1
0 0 1 1 0

1 0 0 1 1
0 1 0 0 1
0 0 1 1 0

1 0 0 1 1
0 1 0 0 1
0 0 1 1 0

1 0 0 1 1
0 1 0 0 1
0 0 1 1 0

1 0 0 1 1
0 1 0 0 1
0 0 1 1 0

1 0 0 1 1
0 1 0 0 1
0 0 1 1 0

1 0 0 1 1
0 1 0 0 1
0 0 1 1 0

1 0 0 1 1
0 1 0 0 1
0 0 1 1 0




 =




 =




 =




 =




 =




 =




 =




 =

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

(cid:16)

0 0 0 0 0

0 0 1 1 0

0 1 0 0 1

0 1 1 1 1

1 0 0 1 1

1 0 1 0 1

1 1 0 1 0

1 1 1 0 0

(cid:17)

,

(cid:17)

,

(cid:17)

,

(cid:17)

,

(cid:17)

,

(cid:17)

,

(cid:17)

,

(cid:17)

.

Portanto, obtemos o c(cid:243)digo C = {(0, 0, 0, 0, 0), (0, 0, 1, 1, 0), (0, 1, 0, 0, 1), (0, 1, 1, 1, 1),

(1, 0, 0, 1, 1), (1, 0, 1, 0, 1), (1, 1, 0, 1, 0), (1, 1, 1, 0, 0)}.

Dada uma palavra-c(cid:243)digo, observe que as trŒs primeiras coordenadas sªo os bits
de informa(cid:231)ªo, e portanto as duas œltimas coordenadas os bits de veri(cid:28)ca(cid:231)ªo de pari-
dade. Em casos como esse, (cid:28)ca muito mais fÆcil interpretar a informa(cid:231)ªo enviada. Se
recebermos a palavra-c(cid:243)digo (1, 1, 0, 1, 0), entªo a mensagem enviada foi (1, 1, 0).

De(cid:28)ni(cid:231)ªo 5.4. Uma matriz geradora de um c(cid:243)digo linear C(n, k) estÆ na forma padrªo
se tiver a forma (Ik|P ), onde Ik Ø a matriz identidade de ordem k e P Ø a submatriz
de paridade de ordem (n − k) × k.

Matriz de veri(cid:28)ca(cid:231)ªo de paridade

53

De(cid:28)ni(cid:231)ªo 5.5. Um c(cid:243)digo linear Ø sistemÆtico se possui uma matriz geradora na forma
padrªo.

Exemplo 5.10. Considere o c(cid:243)digo linear sistemÆtico C(7, 4), cuja matriz geradora G
Ø dada por








1 0 0 0 1 1 0
0 1 0 0 0 1 1
0 0 1 0 1 1 1
0 0 0 1 1 0 1








.

Dada a informa(cid:231)ªo (1, 1, 0, 1), fazendo

(cid:16)

(cid:17)

1 1 0 1

·








1 0 0 0 1 1 0
0 1 0 0 0 1 1
0 0 1 0 1 1 1
0 0 0 1 1 0 1








,

obtemos a palavra-c(cid:243)digo (1, 1, 0, 1, 0, 0, 0).

Observa(cid:231)ªo 5.6. Dado um c(cid:243)digo C nem sempre Ø poss(cid:237)vel obter uma matriz geradora
de C na forma padrªo.

Exemplo 5.11. Considere o c(cid:243)digo linear C(5, 3) cuja matriz geradora Ø






0 1 0 1 1
0 0 1 1 0
0 1 1 0 0




.

Nªo Ø poss(cid:237)vel, efetuando-se opera(cid:231)ıes elementares nas linhas de G, obter uma
matriz na forma (I3|P ). Logo, nªo existe uma matriz geradora de C na forma padrªo.

5.4 Matriz de veri(cid:28)ca(cid:231)ªo de paridade

Ao recebermos uma mensagem, podemos utilizar uma outra matriz, que serÆ apre-
sentada a seguir, para veri(cid:28)car se a mensagem recebida Ø ou nªo uma palavra-c(cid:243)digo.

De(cid:28)ni(cid:231)ªo 5.6. Seja C(n, k) um c(cid:243)digo linear sobre Fq. Uma matriz H de ordem
(n − k) × n com n − k linhas linearmente independentes Ø denominada matriz de
veri(cid:28)ca(cid:231)ªo de paridade do c(cid:243)digo C se

C = {y ∈ (Fq)n : H · yt = 0}.

Em outras palavras, para saber se uma mensagem y Ø uma palavra-c(cid:243)digo devemos
veri(cid:28)car se suas respectivas entradas satisfazem as condi(cid:231)ıes impostas para os d(cid:237)gitos
de paridade, isto Ø, devemos ter H · yt = 0.

Matriz de veri(cid:28)ca(cid:231)ªo de paridade

54

Proposi(cid:231)ªo 5.3. Seja C(n, k) um c(cid:243)digo linear com matriz geradora G. Uma matriz
H com n colunas e n−k linhas linearmente independentes, Ø uma matriz de veri(cid:28)ca(cid:231)ªo
de paridade para C se, e somente se, H · Gt = 0.

Demonstra(cid:231)ªo. Se H Ø uma matriz de veri(cid:28)ca(cid:231)ªo de paridade para C, entªo H ·Gt·xt =
0, para todo x ∈ (Fq)k. Fazendo x percorrer a base can(cid:244)nica de (Fq)k conclui-se que as
colunas de H · Gt sªo nulas, ou seja, H · Gt = 0.
Reciprocamente, suponha que H · Gt = 0.
Dado y ∈ C, existe x ∈ (Fq)k tal que y = x · G. Entªo, H · yt = H · Gt · xt = 0.

Logo,

C ⊆ {y ∈ (Fq)n : H · yt = 0}.

Por outro lado, jÆ que a matriz H possui n − k linhas linearmente independentes,

o sistema homogŒneo H · yt = 0 tem k variÆveis livres e, por isso, temos

|{y ∈ (Fq)n : H · yt = 0}| = qn.

Como C(n, k) um c(cid:243)digo linear sobre Fq, segue que |C| = qn.
Portanto, C = {y ∈ (Fq)n : H · yt = 0} e H Ø uma matriz de veri(cid:28)ca(cid:231)ªo de paridade

para C.

Exemplo 5.12. Para o c(cid:243)digo linear C(5, 3) do exemplo 5.9 de(cid:28)nimos os d(cid:237)gitos de
paridade assim:

Reescrevendo as duas expressıes obtemos:

x4 = x1 + x3 e x5 = x1 + x2.

x1 + x3 + x4 = 0 e x1 + x2 + x5 = 0.

Da(cid:237) teremos a matriz veri(cid:28)ca(cid:231)ªo de paridade

H =

(cid:32)

1 0 1 1 0
1 1 0 0 1

(cid:33)
.

Assim sendo, note que y = (1, 0, 0, 1, 1) Ø uma palavra-c(cid:243)digo e y = (1, 0, 1, 0, 1)

nªo Ø uma palavra-c(cid:243)digo, pois

(cid:32)

(cid:32)

1 0 1 1 0
1 1 0 0 1

1 0 1 1 0
1 1 0 0 1

(cid:33)

(cid:33)

·

·






















1

0


0



1

1

1

0


1



0

1

(cid:33)
(cid:32)
0
0

,

=

(cid:32)
(cid:33)
0
1

.

=

Matriz de veri(cid:28)ca(cid:231)ªo de paridade

55

Exemplo 5.13. A matriz veri(cid:28)ca(cid:231)ªo de paridade

(cid:32)

H =

(cid:33)

1 0 1 0
1 1 0 1

de(cid:28)ne o c(cid:243)digo linear C(4, 2). A mensagem (x1, x2) Ø codi(cid:28)cada como a palavra-c(cid:243)digo
y = (y1, y2, y3, y4), onde

x1 = y1 e x2 = y2.

Os d(cid:237)gitos de veri(cid:28)ca(cid:231)ªo de paridade y3 e y4 sªo obtidos da expressªo H · yt = 0, ou
seja,

y1 + y3 = 0
y1 + y2 + y4 = 0.

Para esse c(cid:243)digo teremos 22 = 4 palavras-c(cid:243)digo. Sªo elas: (0, 0, 0, 0), (0, 1, 0, 1), (1, 0, 1, 1)
e (1, 1, 1, 0).

Proposi(cid:231)ªo 5.4. Seja C(n, k) um c(cid:243)digo linear. Se x e y sªo palavras-c(cid:243)digo, entªo
x + y e c ˙x tambØm sªo palavras-c(cid:243)digo.

Demonstra(cid:231)ªo. Se x e y sªo palavras-c(cid:243)digo, entªo H · xt = 0 e H · yt = 0.

Logo, H · (x + y)t = H · (xt + yt) = H · xt + H · yt = 0 + 0 = 0 e H · (c · x)t =

H · c · xt = c · H · xt = c · 0 = 0.

De(cid:28)ni(cid:231)ªo 5.7. Seja C(n, k) um c(cid:243)digo binÆrio linear sistemÆtico com matriz geradora
G = (Ik|P ). A matriz H = (P t|In−k) Ø uma matriz de veri(cid:28)ca(cid:231)ªo de paridade para C.

Exemplo 5.14. Considere o c(cid:243)digo linear C(5, 2)

C = {(0, 0, 0, 0, 0), (0, 1, 0, 1, 1), (1, 0, 1, 1, 0), (1, 1, 1, 0, 1)}.
O conjunto {(1, 0, 1, 1, 0), (0, 1, 0, 1, 1)} Ø uma base de C.
Logo, uma matriz geradora de C Ø
(cid:32)

(cid:33)

G =

Portanto, a matriz

1 0 1 1 0
0 1 0 1 1

H =






1 0 1 0 0
1 1 0 1 0
0 1 0 0 1

Ø uma matriz de veri(cid:28)ca(cid:231)ªo de paridade para C.

.






C(cid:243)digos de Hamming sob o ponto de vista matricial

56

Exemplo 5.15. Considere o corpo (cid:28)nito Z2. Dada a transforma(cid:231)ªo linear

T :

(Z2)3 −→ (Z2)2

(x1, x2, x3)

(cid:55)−→ (x1 + x2, x3).

cujo nœcleo Ø C = N (T ) = {(x1, x1, 0); x1 ∈ Z2}.

Agora considere as bases can(cid:244)nicas {e1, e2, e3} e {f1, f2} de (Z2)3 e (Z2)2 respecti-

vamente.

Vamos determinar a matriz H que representa a transforma(cid:231)ªo linear T nessas bases.
Logo,

T (1, 0, 0) = (1, 0) = 1f1 + 0f2,
T (0, 1, 0) = (1, 0) = 1f1 + 0f2,
T (0, 0, 1) = (0, 1) = 0f1 + 1f2.

Portanto, a matriz veri(cid:28)ca(cid:231)ªo de paridade Ø

H =

(cid:32)

(cid:33)

1 1 0
0 0 1

.

Qualquer y ∈ (Z2)3 pertence ao c(cid:243)digo C se a condi(cid:231)ªo H · yt = 0 Ø vÆlida.
Dados x = (1, 1, 1) e y = (1, 1, 0) ∈ (Z2)3, como

H · xt =

(cid:32)

(cid:33)

1 1 0
0 0 1



·





1

 =
1
1

(cid:32)
(cid:33)
0
1

e

H · yt =

temos que x /∈ C e y ∈ C.

(cid:32)

(cid:33)

1 1 0
0 0 1



·





1

 =
1
0

(cid:32)

(cid:33)
0
0

5.5 C(cid:243)digos de Hamming sob o ponto de vista matri-

cial

Na se(cid:231)ªo 4.1 apresentamos os c(cid:243)digos de Hamming como um c(cid:243)digo corretor de
erro enfatizando a dist(cid:226)ncia m(cid:237)nima como ferramenta de detec(cid:231)ªo de erros. Nesta
se(cid:231)ªo abordaremos esses c(cid:243)digos novamente, porØm utilizando a matriz veri(cid:28)ca(cid:231)ªo de
paridade para detectar um œnico erro na transmissªo de informa(cid:231)ıes.

Um c(cid:243)digo de Hamming de ordem m (cid:62) 2 Ø um C(2m − 1, 2m − m − 1) c(cid:243)digo linear
que possui uma matriz de veri(cid:28)ca(cid:231)ªo de paridade com m linhas, Hm, cujas colunas sªo
todos os elementos nªo nulos de (Z2)m, dispostos em qualquer ordem.

C(cid:243)digos de Hamming sob o ponto de vista matricial

57

Exemplo 5.16. Considere o c(cid:243)digo de Hamming de ordem 3, ou seja, o c(cid:243)digo C(7, 4)
linear, cuja matriz veri(cid:28)ca(cid:231)ªo de paridade Ø

H3 = (P3×4|I3) =






0 1 1 1 1 0 0
1 0 1 1 0 1 0
1 1 0 1 0 0 1




.

Logo, a matriz geradora correspondente serÆ

(I4|P4×3) =








1 0 0 0 0 1 1
0 1 0 0 1 0 1
0 0 1 0 1 1 0
0 0 0 1 1 1 1








.

Portanto, dado x ∈ (Z2)4, a sua codi(cid:28)ca(cid:231)ªo (cid:28)ca sendo (x1, x2, x3, x4, x5, x6, x7),

onde

x5 = x2 + x3 + x4
x6 = x1 + x3 + x4
x7 = x1 + x2 + x4

Vamos agora utilizar a matriz veri(cid:28)ca(cid:231)ªo de paridade H para identi(cid:28)car um poss(cid:237)vel
erro em uma das posi(cid:231)ıes dos bits na mensagem recebida e assim, recuperarmos a
mensagem enviada.

Suponha que a palavra-c(cid:243)digo x Ø enviada e a mensagem r Ø recebida e que ocorreu
um erro na i-Øsima componente de x, trocando zero por um ou vice-versa. Entªo
podemos escrever

r = x + ei

onde o vetor ei possui zeros em todas as componentes exceto na i-Øsima posi(cid:231)ªo.

Exemplo 5.17. Se x = (0, 1, 1, 1, 1, 0, 0) e r = (0, 0, 1, 1, 1, 0, 0), entªo

ei = x + r = (0, 1, 1, 1, 1, 0, 0) + (0, 0, 1, 1, 1, 0, 0) = (0, 1, 0, 0, 0, 0, 0).

Neste caso o erro ocorreu na 2a posi(cid:231)ªo.

O problema agora consiste em saber se Ø poss(cid:237)vel recuperarmos a mensagem enviada
x quando conhecemos a mensagem recebida r. Observe que saber em qual posi(cid:231)ªo
ocorreu o erro Ø su(cid:28)ciente para determinar a mensagem x, pois r = x + ei implica em
x = r + ei, jÆ que nossos c(cid:243)digos sªo binÆrios. De fato,

H · rt = H · (x + ei)t = H · xt + H · ei

t.

Sendo x uma palavra-c(cid:243)digo, temos que H · xt = 0. Logo,

C(cid:243)digos de Hamming sob o ponto de vista matricial

58

H · rt = 0 + H · ei

t = H · ei

t.

Portanto, se temos a mensagem recebida r, pode-se obter H · ei

t. Por outro lado,

H · ei

t = H ·






















0

0

...




0


1



0


0


...


0

.

Assim, H · ei
œnico erro e consequentemente recuperar x a partir de r.

t Ø a i-Øsima coluna da matriz H. E da(cid:237) pode-se saber a localiza(cid:231)ªo do

Exemplo 5.18. C(cid:243)digo C(7, 4). Considere a matriz veri(cid:28)ca(cid:231)ªo de paridade de ordem
3 × 7 dada por






H =

0 1 1 0 0 1 1
1 0 1 0 1 0 1
0 0 0 1 1 1 1




.

Como o c(cid:243)digo Ø constru(cid:237)do de modo que as palavras-c(cid:243)digo satisfa(cid:231)am H · xt = 0 e
essa matriz possui 3 colunas linearmente independentes, segue que dimC = 7 − 3 = 4.
Assim sendo, temos o c(cid:243)digo C(7, 4) com 24 = 16 palavras-c(cid:243)digo.

Consideremos que um œnico erro ocorre na transmissªo de uma mensagem e que o

vetor recebido Ø r = (0, 0, 1, 1, 1, 0, 0).


Logo, H · rt =





1

, que Ø a 2a coluna da matriz H, ou seja, o erro se encontra na
0
0

2a posi(cid:231)ªo. Assim sendo, e2 = (0, 1, 0, 0, 0, 0, 0).

Portanto, o vetor recebido pode ser decodi(cid:28)cado como a palavra-c(cid:243)digo

x = r + e2 = (0, 1, 1, 1, 1, 0, 0).

Neste cap(cid:237)tulo vimos que os c(cid:243)digos lineares podem ser estudados sob o ponto
de vista matricial, fazendo uso da matriz geradora para obtermos todas as palavras-
c(cid:243)digo e tambØm utilizando a matriz de paridade para veri(cid:28)car se uma determinada
informa(cid:231)ªo pertence ao c(cid:243)digo. No pr(cid:243)ximo cap(cid:237)tulo tambØm abordaremos o estudo
das matrizes como aplica(cid:231)ªo na codi(cid:28)ca(cid:231)ªo e decodi(cid:28)ca(cid:231)ªo de mensagens secretas.

6 Aplica(cid:231)ıes no Ensino MØdio

Neste cap(cid:237)tulo abordaremos a rela(cid:231)ªo do estudo da codi(cid:28)ca(cid:231)ªo com alguns conteœ-
dos do Ensino MØdio: multiplica(cid:231)ªo de matrizes, matriz inversa e sistemas de equa(cid:231)ıes
lineares. Essa abordagem evidencia o aspecto motivacional ao trabalhar com esses con-
teœdos, uma vez que os alunos estarªo contextualizando a aprendizagem com situa(cid:231)ıes
reais de seu cotidiano ligadas (cid:224) Ærea da tecnologia, tais como: troca de informa(cid:231)ıes
atravØs da internet, transa(cid:231)ıes (cid:28)nanceiras, telecomunica(cid:231)ıes, sinais digitais, armaze-
namento de informa(cid:231)ıes em computadores, pen drives, entre outros.

6.1 Mensagens secretas com matrizes

Para iniciarmos um processo de codi(cid:28)ca(cid:231)ªo precisamos do alfabeto fonte e do alfa-

beto c(cid:243)digo. Para nossa primeira atividade usaremos os alfabetos da (cid:28)gura 6.1.

Figura 6.1: Alfabeto fonte e alfabeto c(cid:243)digo para c(cid:243)digos com matrizes

Observa(cid:231)ªo 6.1. Cada letra do alfabeto fonte corresponde a um par de nœmeros
(matriz coluna) no alfabeto c(cid:243)digo. Cada par de nœmeros serÆ, portanto uma coluna
da matriz mensagem.

59

Mensagens secretas com matrizes

60

SequŒncia DidÆtica I

A sequŒncia didÆtica que se segue Ø uma adapta(cid:231)ªo do conteœdo apresentado na
referŒncia [13], onde utilizo as ideias apresentadas para fazer a codi(cid:28)ca(cid:231)ªo de mensa-
gens, porØm enfatizo no processo de decodi(cid:28)ca(cid:231)ªo a constru(cid:231)ªo do racioc(cid:237)nio dos alunos
sobre matriz inversa, uma vez que eles ainda nªo sabem nada a respeito de inversªo de
matrizes.

I) Processo de codi(cid:28)ca(cid:231)ªo
O professor deverÆ escolher uma mensagem para enviar aos seus alunos.
Para codi(cid:28)car essa mensagem utilizando matrizes seguimos os passos:
1) Escreva a matriz M que representa a mensagem que deseja enviar de acordo com

a (cid:28)gura 6.1.

2) Escolher uma matriz quadrada C invert(cid:237)vel. Considere a matriz C quadrada de

ordem 2 dada por

C =

(cid:32)

3 1
2 1

(cid:33)

.

Essa matriz C serÆ chamada de matriz codi(cid:28)cadora.
3) A mensagem codi(cid:28)cada MC serÆ representada pelo produto da matriz C pela

matriz M , ou seja,

MC = C · M .

Os alunos receberªo a mensagem codi(cid:28)cada e precisarÆ saber como reverter o pro-
cesso descrito anteriormente para poder decifrÆ-la. Nesse momento eles ainda nªo tem
conhecimento sobre matriz inversa e o professor deverÆ deixar seus alunos fazerem
tentativas, levantar hip(cid:243)teses e estratØgias diferenciadas para conseguir decifrar a men-
sagem. Durante esta etapa, o professor pode fazer a seguinte coloca(cid:231)ªo: "Encontre
uma matriz quadrada de ordem 2 que quando multiplicada pela mensagem codi(cid:28)cada
MC resulte na mensagem M ". Deste modo, os alunos estarªo resolvendo sistemas de
equa(cid:231)ıes lineares de ordem 2.

Assim que os alunos encontrarem a matriz inversa de C, que representaremos por
C −1 e conseguirem decodi(cid:28)car a mensagem, o professor pede para os alunos analisarem
a rela(cid:231)ªo que existe entre essas duas matrizes, fazendo os produtos C · C −1 e C −1 · C.
A partir dessa rela(cid:231)ªo, o aluno terÆ a de(cid:28)ni(cid:231)ªo de matriz inversa e saberÆ, entªo que
precisa da matriz inversa para decodi(cid:28)car a mensagem codi(cid:28)cada.

I) Processo de decodi(cid:28)ca(cid:231)ªo
Os alunos receberªo a mensagem codi(cid:28)cada de seu professor.
Para decodi(cid:28)car essa mensagem os alunos deverªo multiplicar a matriz C −1 pela

matriz MC, obtendo assim a mensagem M .

A matriz C −1 serÆ chamada de matriz decodi(cid:28)cadora e neste exemplo sugerido ela

Ø dada por

Mensagens secretas com matrizes

61

C −1 =

(cid:32)

(cid:33)

.

1 −1
3
−2

De modo geral, podemos justi(cid:28)car matematicamente o processo de decodi(cid:28)ca(cid:231)ªo,

fazendo

M = (C −1 · C) · M = C −1 · (C · M ) = C −1 · MC.

Na segunda etapa dessa sequŒncia didÆtica, o professor orienta seus alunos, que
deverªo estar divididos em duplas, a codi(cid:28)carem uma mensagem e trocarem com outra
dupla de alunos para fazerem a decodi(cid:28)ca(cid:231)ªo. Neste momento pode-se questionar se
qualquer matriz quadrada de ordem 2 pode ser usada como matriz codi(cid:28)cadora, ou
seja, questionando se toda matriz Ø invert(cid:237)vel.

Relatos da sequŒncia didÆtica I: Aplica(cid:231)ªo em sala de aula

A sequŒncia didÆtica I foi aplicada, por mim, aos alunos da segunda sØrie do ensino

mØdio, na escola onde leciono desde o ano de 2008.

As atividades foram propostas em etapas, de modo que os alunos tivessem condi(cid:231)ıes
de construir o racioc(cid:237)nio para a compreensªo do estudo da matriz inversa. Primeira-
mente, eles escolheram uma mensagem para codi(cid:28)car, utilizando como chave a matriz
escolhida por mim. Neste momento, os educandos perceberam que a multiplica(cid:231)ªo de
matrizes foi utilizada como ferramenta de aplica(cid:231)ªo para o processo de codi(cid:28)ca(cid:231)ªo das
mensagens. Em seguida, eles receberam uma mensagem codi(cid:28)cada por mim com o
objetivo de decifrÆ-la. Como os alunos ainda nªo conheciam matriz inversa, eles levan-
taram hip(cid:243)teses e de(cid:28)niram estratØgias para tentar encontrar uma matriz que pudesse
ser a chave decodi(cid:28)cadora. Ap(cid:243)s a socializa(cid:231)ªo das estratØgias realizadas nos pequenos
grupos e as orienta(cid:231)ıes feitas por mim, eles conseguiram encontrar, coletivamente, uma
matriz que desempenhasse o papel de decifrar a mensagem que eles haviam recebido. A
partir da(cid:237), fui questionando-os da rela(cid:231)ªo que hÆ entre as duas matrizes utilizadas como
chave codi(cid:28)cadora e decodi(cid:28)cadora, e entªo compreender a necessidade de aprofundar
os estudos sobre matriz inversa. Como utilizamos matrizes de ordem 2, estudamos
como encontrar a matriz inversa resolvendo sistema de equa(cid:231)ıes lineares e tambØm
pela Regra de Crammer. Por (cid:28)m, os alunos escolheram uma matriz chave qualquer e
trocaram as mensagens entre si, para que pudessem obter a matriz inversa e decifrar a
mensagem. Nesta etapa, os alunos puderam perceber que determinar a matriz inversa
pode ser uma tarefa nem sempre fÆcil, principalmente quando eles perceberam que
precisariam utilizar nœmeros racionais. Notou-se tambØm que nem toda matriz possui
inversa. Tudo isso, foi realizado dando enfoque ao educando como protagonista de seu
aprendizado, ou seja, um aprendizado signi(cid:28)cativo e relevante para suas argumenta(cid:231)ıes
em sala de aula.

Mensagens secretas com matrizes

62

As (cid:28)guras a seguir sªo registros das atividades realizadas pelos alunos na etapa
codi(cid:28)cando com matrizes. Nesta etapa os alunos multiplicaram a matriz codi(cid:28)cadora
pela matriz mensagem obtendo a matriz codi(cid:28)cada. Com essa atividade os alunos estªo
aprimorando as habilidades relacionadas (cid:224) multiplica(cid:231)ªo de matrizes, uma vez que eles
jÆ tinham conhecimentos prØvios sobre este conteœdo.

As (cid:28)guras a seguir sªo registros das atividades realizadas pelos alunos na etapa
decodi(cid:28)cando com matrizes. Neta os alunos ainda nªo tinham conhecimento sobre
matriz inversa. Deste modo, eles foram orientados a elaborar estratØgias, levantar
hip(cid:243)teses de como obter uma matriz que pudesse decodi(cid:28)car a mensagem recebida.
Com essa atividade os alunos tambØm desenvolveram a habilidade de multiplica(cid:231)ªo de
matrizes, opera(cid:231)ıes com nœmeros inteiros, determinantes e resolu(cid:231)ªo de sistemas de
equa(cid:231)ıes lineares de ordem 2 pela Regra de Cramer.

Mensagens secretas com matrizes

63

SequŒncia DidÆtica II

Nesta sequŒncia didÆtica vamos abordar os processos de codi(cid:28)ca(cid:231)ªo e decodi(cid:28)ca(cid:231)ªo
com matrizes da mesma forma que foi realizado na atividade anterior, porØm utilizare-
mos outros alfabetos fonte e c(cid:243)digo. Assim, podemos abordar esta temÆtica utilizando
alfabetos diferentes, possibilitando tambØm que os pr(cid:243)prios alunos construam seus al-
fabetos para a codi(cid:28)ca(cid:231)ªo. Vamos, entªo exempli(cid:28)car o processo de codi(cid:28)ca(cid:231)ªo com
matrizes utilizando o alfabeto fonte e o alfabeto c(cid:243)digo representado na tabela a seguir:

A B C D E F G H I
9
5
1

3

7

6

2

8

4

J K L M N
14
12
10

11

13

Mensagens secretas com matrizes

64

O P Q R S
19
17
15

18

16

T U V W X Y Z
26
23
20

24

22

25

21

.
27

/
28

Tabela 6.1: Alfabeto fonte e alfabeto c(cid:243)digo para c(cid:243)digos com matrizes

Observa(cid:231)ªo 6.2. O s(cid:237)mbolo / serÆ utilizado para separar as palavras na mensagem.

Vamos codi(cid:28)car a mensagem: OS N(cid:218)MEROS GOVERNAM O MUNDO. Fazendo

a correspondŒncia de acordo com a tabela 6.1 teremos:

O S
19
15

/
28

N U M E R O S
19
5
14

15

21

13

18

/ G O V
22
28

15

7

E R N A M / O / M U N D O .
5
28
Utilizaremos a seguinte matriz codi(cid:28)cadora C quadrada de ordem 2:

14

14

27

15

21

18

15

28

13

13

1

4

C =

(cid:32)

3 1
2 1

(cid:33)

.

Como cada s(cid:237)mbolo da mensagem corresponde a um nœmero e a matriz codi(cid:28)cadora
possui ordem 2, colocaremos esses nœmeros de 2 em 2, por colunas, em uma outra
matriz, obtendo-se assim uma matriz mensagem M de ordem 2 × 14:

(cid:32)

M =

15 28 21
19 14 13 18 19

15 28 15
7

5
22 18

5

14 13 15 13 14 15
27
1

28 28 21

4

Para obtermos a mensagem codi(cid:28)cada MC fazemos o produto C · M .

Logo,

(cid:32)

MC =

64 98 76 33 64 91 67 33 43 67 73 60 46 72
49 70 55 28 49 63 52 28 29 54 58 47 32 57

(cid:33)

.

(cid:33)

.

Portanto, a mensagem codi(cid:28)cada Ø:

64 − 49 − 98 − 70 − 76 − 55 − 33 − 28 − 64 − 49 − 91 − 63 − 67 − 52 − 33 − 28 −

43 − 29 − 67 − 54 − 73 − 58 − 60 − 47 − 46 − 32 − 72 − 57.

Ao receber essa mensagem, fazemos o produto C −1 · MC para decodi(cid:28)cÆ-la, isto Ø,
(cid:32)

(cid:33)

(cid:33)

(cid:32)

1 −1
3
−2

·

64 98 76 33 64 91 67 33 43 67 73 60 46 72
49 70 55 28 49 63 52 28 29 54 58 47 32 57

.

Logo, obtemos a matriz

(cid:32)

M =

15 28 21
19 14 13 18 19

15 28 15
7

5
22 18

5

14 13 15 13 14 15
27
1

28 28 21

4

(cid:33)

,

ou seja, a mensagem decodi(cid:28)cada Ø:

15 − 19 − 28 − 14 − 21 − 13 − 5 − 18 − 15 − 19 − 28 − 7 − 15 − 22 − 5 − 18 − 14 −

1 − 13 − 28 − 15 − 28 − 13 − 21 − 14 − 4 − 15 − 27.

Mensagens secretas com matrizes

65

Novamente de acordo com a tabela 6.1 teremos a mensagem: OS N(cid:218)MEROS GO-

VERNAM O MUNDO.

Os objetivos tra(cid:231)ados para essas sequŒncias didÆticas consistem no reconhecimento
da aplica(cid:231)ªo de multiplica(cid:231)ªo de matrizes para o processo de codi(cid:28)ca(cid:231)ªo e tambØm das
tØcnicas utilizadas para obter a matriz inversa.

A sequŒncia didÆtica II foi aplicada na forma de avalia(cid:231)ªo para os mesmos alunos
que apliquei a sequŒncia didÆtica I, onde avaliei se o aluno adquiriu a habilidade de
multiplicar matrizes. A maioria dos alunos conseguiu fazer a multiplica(cid:231)ªo de matrizes
e decodi(cid:28)car a mensagem. Na avalia(cid:231)ªo desta habilidade o que leva alguns alunos a
cometerem erros Ø nªo seguir a ordem correta das opera(cid:231)ıes ao multiplicar matrizes,
ou seja, operar cada linha da primeira matriz com todas as colunas da segunda matriz.

Abaixo segue o registro da avalia(cid:231)ªo realizada.

Figura 6.2: Avalia(cid:231)ªo: multiplica(cid:231)ªo de matrizes

Mensagens secretas com matrizes

66

Na atividade de decodi(cid:28)ca(cid:231)ªo a maior di(cid:28)culdade por parte dos alunos Ø determinar
a matriz decodi(cid:28)cadora, ou seja, conseguir obter a matriz inversa. Entre outras coisas,
podemos destacar a o fato deles nªo possu(cid:237)rem a habilidade de resolver sistemas de
equa(cid:231)ıes lineares de ordem 2. Eles preferem utilizar a regra de Crammer para soluci-
onar tais sistemas, porØm quando surgem nœmeros racionais (cid:28)ca mais dif(cid:237)cil continuar
ou (cid:28)nalizar o processo da inversªo de matrizes.

Para avaliar se o aluno adquiriu a habilidade de determinar a matriz inversa, apli-

quei a atividade a seguir.

Figura 6.3: Avalia(cid:231)ªo: matriz inversa

SequŒncia DidÆtica III

Para di(cid:28)cultar ainda mais a decodi(cid:28)ca(cid:231)ªo de mensagens secretas, podemos utilizar

matrizes codi(cid:28)cadoras quadradas de ordem 3.

Esta atividade segue os mesmos procedimentos descritos nas sequŒncias didÆtica I
e II. Ela nªo foi aplicada em sala de aula, visto a di(cid:28)culdade dos alunos em determinr
a matriz inversa de uma matriz de ordem 2. Contudo, (cid:28)ca registrada aqui como uma
sugestªo para aprofundar os conhecimentos dos alunos quanto (cid:224) resolu(cid:231)ªo de sistemas
de equa(cid:231)ıes lineares de ordem 3 e consequentemente determinar a matriz inversa de
uma matriz de ordem 3.

Vamos exempli(cid:28)car o processo de decodi(cid:28)ca(cid:231)ªo de mensagens secretas usando a

seguinte matriz codi(cid:28)cadora de ordem 3.

Mensagens secretas com matrizes

67






C =




.

1 2 3
2 1 2
0 1 2

Suponhamos que as senhas numØricas de seis d(cid:237)gitos dos clientes de um determinado
banco sªo representadas como uma matriz S de ordem 2 × 3, em que os trŒs primeiros
d(cid:237)gitos sªo a primeira linha da matriz e os trŒs œltimos d(cid:237)gitos sªo a segunda linha. O
banco usa uma matriz invert(cid:237)vel C, para manter o sigilo das senhas de seus clientes.
Por questıes de seguran(cid:231)a, o banco gera uma nova matriz SC = S · C , com a senha
codi(cid:28)cada. Para recuperar a senha de um cliente, o banco utiliza a matriz inversa C −1,
que neste caso, Ø:

C −1 =






0, 5 −0, 5
0
2 −1 −2
1, 5
−1 0, 5




.

Multiplicando-se a matriz SC pela matriz C −1 obtØm-se a matriz S, ou seja, S =

SC · C −1.

Sabendo que a senha codi(cid:28)cada de um determinado cliente Ø 7−13−23−8−20−34,

temos:

Entªo,

Logo,

SC =

(cid:32)

(cid:33)

7 13 23
8 20 34

.

(cid:32)

S =

(cid:33)

7 13 23
8 20 34



·




0
0, 5 −0, 5
2 −1 −2
1, 5
−1 0, 5




.

S =

(cid:32)

(cid:33)
.

3 2 5
6 1 7

Portanto, a senha desse cliente Ø 325617.
Ap(cid:243)s a realiza(cid:231)ªo destas sequŒncias didÆticas, a expectativa Ø que os problemas
propostos tenham permitido um bom n(cid:237)vel de discussªo, em que os argumentos, as
anÆlises de situa(cid:231)ıes, os levantamentos de hip(cid:243)teses e as compara(cid:231)ıes das solu(cid:231)ıes
tenham forti(cid:28)cado o grupo de alunos como um coletivo gerador de conhecimento.

7 Considera(cid:231)ıes Finais

O presente trabalho constitui aspectos da teoria dos c(cid:243)digos corretores de erros. A
teoria dos c(cid:243)digos corretores de erros surgiu no in(cid:237)cio da dØcada de 50. O trabalho
inicial para a obten(cid:231)ªo dos primeiros tipos e(cid:28)cientes de c(cid:243)digos corretores de erros
foi Ærduo, pois exigia, entre outros aspectos, um profundo conhecimento de `lgebra
Abstrata. DØcadas se passaram e hoje se tem conhecimento de vÆrias classes de bons
c(cid:243)digos corretores de erros que podem ser perfeitamente entendidas por engenheiros
e cientistas de computa(cid:231)ªo, gra(cid:231)as ao esfor(cid:231)o de alguns pesquisadores que souberam
apresentar esse material com um m(cid:237)nimo rigor matemÆtico.

Primeiramente, enfocamos conceitos bÆsicos de `lgebra Linear, os quais foram os
principais prØ-requisitos para o desenvolvimento dos demais cap(cid:237)tulos. Abordamos os
c(cid:243)digos corretores de erros, que Ø um tema de grande relev(cid:226)ncia devido sua aplica(cid:231)ªo em
diversas situa(cid:231)ıes da vida prÆtica. No entanto, nosso objetivo maior, neste trabalho, foi
relacionar a teoria dos c(cid:243)digos corretores de erros com conteœdos matemÆticos, como os
de `lgebra Linear. Neste sentido, a articula(cid:231)ªo dos conhecimentos matemÆticos com os
avan(cid:231)os tecnol(cid:243)gicos, principalmente na Ærea computacional, permite o aprimoramento
e maior e(cid:28)ciŒncia destes c(cid:243)digos.

A MatemÆtica estÆ presente na vida humana desde os prim(cid:243)rdios das civiliza(cid:231)ıes.
Situa(cid:231)ıes que utilizam uma linguagem de c(cid:243)digos e problemas que envolvem mensagens
ocultas existem hÆ milhares de anos. Com a evolu(cid:231)ªo dessas civiliza(cid:231)ıes, a forma de
registrar estes c(cid:243)digos e tambØm os processos de transmissªo de informa(cid:231)ıes que os
envolvem vªo sendo aperfei(cid:231)oados.

Diante disso, destacamos a import(cid:226)ncia de abordar este estudo no Ensino MØdio,
proporcionando atividades didÆticas sobre codi(cid:28)ca(cid:231)ªo, aplicando e ampliando os estu-
dos com Matrizes. Esta import(cid:226)ncia Ø evidente no Curr(cid:237)culo do Estado de Sªo Paulo,
que enfatiza o estudo atravØs da resolu(cid:231)ªo de problemas no contexto da Ærea da tecno-
logia e que sejam signi(cid:28)cativos aos alunos. Assim, estes vivenciam situa(cid:231)ıes problema
que demonstram a articula(cid:231)ªo do curr(cid:237)culo com o seu cotidiano, aspecto relevante no
desenvolvimento do aprendizado pautado em habilidades e competŒncias. Assim sendo,
atravØs das sequŒncias didÆticas propostas neste trabalho e aplicadas em sala de aula,
podemos destacar a participa(cid:231)ªo efetiva dos educandos de modo que se tornem os
protagonistas de seu aprendizado.

68

69

Por (cid:28)m, destacamos que a realiza(cid:231)ªo de atividades didÆticas com estes aspectos
norteados pelo curr(cid:237)culo, possibilitou ao estudo de multiplica(cid:231)ªo de matrizes e matriz
inversa, uma signi(cid:28)cativa compreensªo dos educandos, de modo que percebessem que
os conteœdos matemÆticos podem estar relacionados (cid:224)s situa(cid:231)ıes que estªo presentes
em suas vidas, mesmo que de alguma forma, nªo sejam tªo evidentes. Logo, a sala de
aula Ø um descortinador de possibilidades para esses educandos ampliarem sua visªo
de mundo e principalmente seus prØ-conceitos sobre a matemÆtica, que normalmente Ø
vista como uma grande vilª nas escolas de educa(cid:231)ªo bÆsica.

ReferŒncias

[1] BOLDRINI, JosØ Luiz et al. `lgebra Linear. 3. ed. Sªo Paulo: Editora HARBRA

ltda, 1986. p. 411.

[2] CALLIOLI, C. A.; DOMINGUES, H. H.; COSTA, R. C. F. `lgebra Linear e

Aplica(cid:231)ıes. 6. ed. Sªo Paulo: Editora Atual, 2003. p. 352.

[3] COELHO, F. U.; LOUREN˙O, M. L. Um Curso de `lgebra Linear. 2. ed. Sªo

Paulo: Editora EDUSP, 2005. p. 272.

[4] LIPSCHUTZ, S.; LIPSON, M. `lgebra Linear. Cole(cid:231)ªo Schaum. 4. ed. Editora

Bookman, 2011. p. 432.

[5] HEFEZ, A.; VILLELA, M.L.T. C(cid:243)digos Corretores de Erros. 1. ed. Rio de Janeiro:

IMPA, 2008. p. 206.

[6] AD`MEK, J. Foundations of Coding: Theory and Applications of Error-
Correcting Codes with an Introduction to Cryptography and Information Theory.
John Wiley & Sons, Inc, 1991.

[7] MILIES, C. P. Introdu(cid:231)ªo (cid:224) Teoria dos C(cid:243)digos Corretores de Erros. Col(cid:243)quio de

MatemÆtica da Regiªo Centro-Oeste: SBM, 2009.

[8] HAMMING, R. W. Error-Detecting and Error-Correcting Codes, Bell Sys-
tems Technical Journal, No. 2, Vol. XXIX, 1950. pp. 147-160. Dispon(cid:237)vel em:
<http://www.lee.eng.uerj.br/ gil/redesII/hamming.pdf>.

[9] SHANON, C. E. A Mathematical Theory of Communication, Bell Systems Tech-
nical Journal, Vol. XXVII, 1948. pp. 379-423. Dispon(cid:237)vel em: <http://cm.bell-
labs.com/cm/ms/what/shannonday/shannon1948.pdf>.

[10] MACHADO, N. J. Curr(cid:237)culo do Estado de Sªo Paulo-MatemÆtica e suas Tecno-

logias. 1. ed. Sªo Paulo, 2011. p. 21-22.

[11] TAMAROZZI, A. C. Codi(cid:28)cando e decifrando mensagens. Revista do Professor de

MatemÆtica 45, Sªo Paulo: Sociedade Brasileira de MatemÆtica.

70

ReferŒncias

71

[12] http://www.cesarkallas.net/arquivos/faculdade-pos/TP301-codi(cid:28)cacao-fonte/ 2_

Bloco_V2011_Rev4.pdf. (cid:218)ltimo acesso em 18/fev/2015.

[13] http://www.m3.ime.unicamp.br/recursos/1020. (cid:218)ltimo acesso em 15/jan/2015.

[14] http://www.mat.uc.pt/∼caldeira/CodigosCriptogra(cid:28)a_07_08/PDFs_ indispo-
niveis/Codigos_07_08/PDFs_handout.pdf. (cid:218)ltimo acesso em 10/dez/2014.

[15] http://www.ufsj.edu.br/portal2-repositorio/File/i-ermac/anais/minicursos/mc8.

pdf. (cid:218)ltimo acesso em 10/dez/2014.

[16] http://www.sbm.org.br/docs/coloquios/CO-1-09.pdf. (cid:218)ltimo acesso em 10/dez/

2014.

[17] http://www.ime.unicamp.br/∼m(cid:28)rer/3NotasFoz2006.pdf. (cid:218)ltimo acesso em 16/

mar/2015.

[18] http://www.gente.eti.br/lematec/CDS/XIIICIAEM/artigos/691.pdf. (cid:218)ltimo a-

cesso em 18/mar/2015.

[19] http://www.lematec.no-ip.org/CDS/ENEM10/artigos/CC/T17_CC555.pdf. (cid:218)l-

timo acesso em 16/mar/2015.

