 UNIVERSIDADE FEDERAL DO CEAR√Å 

CENTRO DE CI√äNCIAS 

DEPARTAMENTO DE MATEM√ÅTICA 

PROGRAMA DE P√ìS-GRADUA√á√ÉO EM MATEM√ÅTICA EM REDE NACIONAL 

RAIMUNDO IN√ÅCIO NETO 

O ALGORITMO GANANCIOSO: UMA INTRODU√á√ÉO √Ä TEORIA DOS 

MATR√ìIDES 

FORTALEZA 

2023 

RAIMUNDO IN√ÅCIO NETO 

O ALGORITMO GANANCIOSO: UMA INTRODU√á√ÉO √Ä TEORIA DOS MATR√ìIDES 

Disserta√ß√£o  apresentada  ao  Programa  de 
P√≥s-Gradua√ß√£o  em  Matem√°tica  em  Rede 
Nacional  (PROFMAT)  do  Departamento  de 
Matem√°tica  da  Universidade  Federal  do 
Cear√°,  como  requisito  parcial  √†  obten√ß√£o  de 
t√≠tulo  de  mestre  em  Matem√°tica.  √Årea  de 
Concentra√ß√£o: Ensino de Matem√°tica. 

Orientador: Prof. Dr. Marcos Ferreira de Melo. 

FORTALEZA 

2023 

Dados Internacionais de Cataloga√ß√£o na Publica√ß√£o 

Universidade Federal do Cear√°
Sistema de Bibliotecas
Gerada automaticamente pelo m√≥dulo Catalog, mediante os dados fornecidos pelo(a) autor(a)

I32a

In√°cio Neto, Raimundo.
    O algoritmo ganancioso : uma introdu√ß√£o √† teoria dos matr√≥ides / Raimundo In√°cio Neto. ‚Äì 2023.
    25 f. : il. color.

     Disserta√ß√£o (mestrado) ‚Äì Universidade Federal do Cear√°, Centro de Ci√™ncias, Departamento de
Matem√°tica, Programa de P√≥s-Gradua√ß√£o em Matem√°tica em Rede Nacional, Fortaleza, 2023.
     Orienta√ß√£o: Prof. Dr. Marcos Ferreira de Melo.

1. Matr√≥ides. 2. Depend√™ncia linear. 3. Matrizes (matem√°tica). 4. Teoria dos grafos. 5. Algoritmo

ganancioso. I. T√≠tulo.

CDD 510

RAIMUNDO IN√ÅCIO NETO 

O ALGORITMO GANANCIOSO: UMA INTRODU√á√ÉO √Ä TEORIA DOS MATR√ìIDES 

Disserta√ß√£o apresentada ao Programa de P√≥s- 
Gradua√ß√£o  em  Matem√°tica  em  Rede  Nacional 
do  Departamento 
da 
Universidade Federal do Cear√°, como requisito 
parcial  √†  obten√ß√£o  do  t√≠tulo  de  mestre  em 
Matem√°tica.  √Årea  de  concentra√ß√£o:  Ensino  de 
Matem√°tica 

de  Matem√°tica 

Aprovada em 20/01/2023. 

BANCA EXAMINADORA 

________________________________________ 
Prof. Dr. Marcos Ferreira de Melo (Orientador) 

Universidade Federal do Cear√° (UFC) 

_________________________________________ 
Prof. Dr. Marcelo Ferreira de Melo  

Universidade Federal do Cear√° (UFC) 

_________________________________________ 
Prof. Dr. √Çngelo Papa Neto 

Instituto Federal de Educa√ß√£o, Ci√™ncia e Tecnologia do Cear√° (IFCE) 

Este trabalho √© dedicado ao meu av√¥ Raimundo 

In√°cio (in memoriam), maior exemplo de um ser 

humano √≠ntegro e √©tico. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
AGRADECIMENTOS 

A Deus por ter me dado sa√∫de e for√ßa para superar as dificuldades. 

A esta Universidade, seu corpo docente, dire√ß√£o e administra√ß√£o que me deram a 

oportunidade de fazer o curso. 

Aos professores pelas orienta√ß√µes ao longo do curso. 

√Ä minha fam√≠lia, que em todos os momentos me apoiaram e que ao longo de toda 

a minha forma√ß√£o sempre me incentivaram nos momentos de fraqueza e serviram de alento nos 

momentos dif√≠ceis. 

Aos companheiros de curso, pela ajuda m√∫tua em percorrer esse caminho. 

 
 
 
 
 
 
 
 
 
‚ÄúA matem√°tica, vista corretamente, possui n√£o 

apenas verdade, mas tamb√©m suprema beleza - 

uma beleza fria e austera, como a da escultura.‚Äù 

(RUSSELL) 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
RESUMO 

Em matem√°tica, um matr√≥ide √© uma estrutura apresentada como uma generaliza√ß√£o da no√ß√£o  

de independ√™ncia  linear.  Est√°,  portanto,  naturalmente  ligado  √† √°lgebra  linear,  mas  tamb√©m 

√† teoria dos grafos, ao algoritmo ganancioso e √† geometria. (Para v√°rias quest√µes relacionadas 

com representa√ß√£o). Este trabalho visa estabelecer explicitamente qual a rela√ß√£o dessa estrutura 

com  o  algoritmo  ganancioso.  Partindo  de  problemas  que  exigem  uma  solu√ß√£o  otimizada, 

definimos o conceito de matr√≥ide e suas propriedades. Em seguida ser√£o demonstradas atrav√©s 

de  teoremas  e  exemplos  as  rela√ß√µes  com  matrizes  e  grafos,  assim  como  alguns  tipos  de 

matr√≥ides. Por fim, ser√° demonstrado o teorema que consolida a liga√ß√£o com o algoritmo. 

Palavras-chave:  matr√≥ides;  depend√™ncia  linear;  matrizes  (matem√°tica);  teoria  dos  grafos; 

algoritmo ganancioso. 

 
 
 
 
 
 
 
 
 
ABSTRACT 

In mathematics, a matroid is a structure presented as a general framework for the concept of 

linear independence. It is therefore naturally linked to linear algebra, but also to graph theory, 

the greedy algorithm and geometry. (For various questions related to representation). This work 

aims to explicitly establish the relationship of this structure with the greedy algorithm. Starting 

from  problems  that  require  an  optimized  solution,  we  define  the  concept  of  matroid  and  its 

properties. Next, relations with matrices and graphs, as well as some types of matroids, will be 

demonstrated  through  theorems  and  examples.  Finally,  the  theorem  that  consolidates  the 

connection with the algorithm will be demonstrated. 

Keywords:  matroids;  linear  dependence;  matrices  (mathematics);  graph  theory;  greedy 

algorithm.  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
LISTA DE FIGURAS 

Figura 1  ‚àí Grafo representante das estradas entre cidades...............................................  12 

Figura 2  ‚àí Exemplo de grafo............................................................................................  14 

Figura 3  ‚àí O ciclo √© um grafo que satisfaz o circuito eliminat√≥rio do axioma (C3)..........  19 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
SUM√ÅRIO 

1 

2 

2.1 

2.2 

3 

INTRODU√á√ÉO..................................................................................................  10 

MATR√ìIDES.....................................................................................................  13 

Defini√ß√£o de Matr√≥ides......................................................................................  15 

Matr√≥ides Pesados..............................................................................................  21 

CONCLUS√ÉO....................................................................................................  24 

REFER√äNCIAS.................................................................................................  25 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 

1 INTRODU√á√ÉO 

Em  geral,  quando  temos  que  fazer  escolhas,  tendemos  a  escolher  aquelas  que 

maximizam  nossos  ganhos  e/ou  minimizam  nossas  perdas.  Mas  h√°  problemas  em  que  suas 

solu√ß√µes decorrem de uma s√©rie de escolhas sucessivas, e ao fazermos sempre a escolha onde 

a  situa√ß√£o  √©  ‚Äúlocalmente‚Äù  otimizada,  estamos  utilizando  um  algoritmo  conhecido  como 

‚ÄúAlgoritmo Ganancioso‚Äù ou ‚ÄúAlgoritmo Guloso.‚Äù Sobre o algoritmo guloso, Parberry (1995) 

diz: 

Um algoritmo guloso come√ßa com uma solu√ß√£o para um subproblema muito pequeno 
e o aumenta sucessivamente para uma solu√ß√£o para o grande problema. O aumento √© 
feito de maneira 'gananciosa', ou seja, prestando aten√ß√£o ao ganho de curto prazo ou 
local, sem levar em conta se isso levar√° a uma boa solu√ß√£o de longo prazo ou global. 
Como na vida real, algoritmos gananciosos √†s vezes levam √† melhor solu√ß√£o, √†s vezes 
levam a solu√ß√µes muito boas e √†s vezes levam a solu√ß√µes ruins. O truque √© determinar 
quando ser ganancioso. (PARBERRY, 1995, p.101) 

Dessa forma nos vem a seguinte pergunta: Quando podemos ser gananciosos? Antes 

de  responder  a  essa  pergunta,  abaixo  veremos  alguns  problemas  e  tentaremos  resolv√™-los 

utilizando o algoritmo  guloso. A partir da√≠,  vamos  estabelecer o cen√°rio ideal  para o uso do 

mesmo. 

Problema 1. 

Um certo n√∫mero de trabalhos ser√° executado por uma √∫nica m√°quina. Todos 

requerem  o  mesmo  tempo  de  processamento,  uma  hora.  Est√£o  associados  a  um  tempo 

para entrega, o qual n√£o satisfeito, implica em uma penalidade fixa ùíëùíä, independente do 

atraso.  Determinar  a  sequ√™ncia  para  execu√ß√£o  dos  trabalhos  de  forma  que  o  total  das 

penalidades seja m√≠nimo. 

Para  que  o  total  de  penalidades  seja  m√≠nimo,  podemos  resolver  o  problema  da 

seguinte maneira: A princ√≠pio, devemos organizar os trabalhos em ordem crescente de tempo 

de  entrega,  no  caso  de  empate,  deve-se  organizar  em  ordem  decrescente  de  penalidade. 

Come√ßando assim, a m√°quina deve executar os trabalhos nessa ordem estabelecida, descartando 

somente aqueles trabalhos que n√£o puderem ser feitos, obedecendo o tempo de entrega. Por 

fim, os trabalhos descartados ser√£o feitos ap√≥s o √∫ltimo feito dentro do tempo de entrega, sendo 

esses em qualquer ordem. 

 
 
 
 
 
 
 
 
 
 
 
 11 

Temos ent√£o que pudemos utilizar o algoritmo guloso nesse problema e ele nos leva 

√† melhor solu√ß√£o poss√≠vel. Para melhor visualiza√ß√£o, tomemos o exemplo abaixo. 

TRABALHOS 

T. DE ENTREGA 

PENALIDADE 

1 

1 

9 

2 

3 

7 

3 

2 

6 

Organizando utilizando o algoritmo, temos: 

TRABALHOS 

T. DE ENTREGA 

4 

1 

PENALIDADE 

10 

1 

1 

9 

3 

2 

6 

4 

1 

10 

2 

3 

7 

5 

3 

4 

5 

3 

4 

6 

6 

2 

6 

6 

2 

Com essa ordena√ß√£o a m√°quina realizaria o trabalho 4, descartaria o 1, realizaria o 

3 e o 2, descartaria o 5, realizaria o 6. Depois  disso realizaria o 1  e 5,  em  qualquer  ordem, 

totalizando uma penalidade P = 13. Que √© a menor poss√≠vel, em qualquer situa√ß√£o. 

Problema 2. 

Deseja-se  construir  trechos  de  estradas  que  conectem  cinco  cidades  com  a 

menor quantidade de asfalto poss√≠vel. Sejam as cidades A, B, C, D e E, se h√° um trecho 

que liga A e B, e outro que ligue B e C, ent√£o A e C j√° est√£o conectadas. 

Para que a quantidade de asfalto seja a m√≠nima poss√≠vel, deve-se construir os trechos 

que ligam duas cidades com a menor dist√¢ncia poss√≠vel. Usando o algoritmo ganancioso, basta 

escolhermos os trechos em ordem crescente de dist√¢ncia, descartando somente os trechos que 

conectam a uma cidade j√° escolhida formando um ciclo. Vejamos no exemplo abaixo. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figura 1 - Grafo representante das estradas entre cidades 

 12 

Fonte: elaborada pelo autor. 

A  menor  dist√¢ncia  entre  duas  cidades  √©  2,  logo  o  primeiro  trecho  escolhido  √©  o 

trecho DC. Seguindo a ordem crescente, temos em seguida o trecho CB, com dist√¢ncia 3. O 

pr√≥ximo trecho seria BD, com dist√¢ncia 4, mas ao fazermos isso criamos um ciclo, pois B j√° 

est√°  conectada  com  D  pelo  trecho  DCB. Assim,  descartamos  esse  trecho  e  vamos  para  o 

pr√≥ximo de menor valor, que pode ser tanto AC ou BA, pois ambos t√™m a mesma dist√¢ncia 5. 

Escolhemos  ent√£o  AC,  fazendo  isso  descartamos  o  trecho  BA,  pois  ter√≠amos  um  ciclo.  O 

pr√≥ximo e √∫ltimo trecho a ser feito ent√£o √© EC, com dist√¢ncia 6. Assim, todas as cidades est√£o 

conectadas, e a soma dos trechos √© 2+3+5+6 = 16, que √© a menor poss√≠vel. 

Problema 3. 

Ap√≥s  realizar  uma  venda,  deve-se  dar  um  troco  de  40  centavos  para  o 

comprador entregando a menor quantidade de moedas poss√≠vel. As moedas dispon√≠veis 

para o troco s√£o de 5, 10, 20 e 25 centavos. 

Se seguirmos o algoritmo ganancioso, ent√£o para que a quantidade de moedas seja 

a  menor  poss√≠vel  devemos  come√ßar  com  as  de  maior  valor  e  seguir  em  ordem  decrescente, 

descartando somente aquelas que ultrapassariam a quantia desejada. Temos assim a seguinte 

escolha: Primeiramente escolhemos a de 25 centavos, em seguida a de 10, pois com mais 25 ou 

mais 20, ultrapassar√≠amos a quantia desejada. Para finalizar, escolhemos a de 5, totalizando 25+ 

10+5 = 40. Por√©m para que a quantidade de moedas seja m√≠nima, a configura√ß√£o de escolha 

correta deve ser duas moedas de 20 centavos, e n√£o as tr√™s moedas obtidas com o algoritmo. 

Podemos concluir com os problemas acima que somente em algumas situa√ß√µes o 

algoritmo ganancioso nos d√° a resposta para uma quest√£o de escolhas otimizada. Na se√ß√£o a 

seguir,  veremos  uma  estrutura  matem√°tica  onde  sempre  poderemos  utilizar  o  algoritmo 

ganancioso, dando uma introdu√ß√£o √† Teoria dos Matr√≥ides. 

 
 
 
 
 
 
 
 13 

2 MATR√ìIDES 

S√£o passados quase 90 anos desde que pela primeira vez surgiu o termo matr√≥ide e 

este continua desconhecido da maioria dos amantes da matem√°tica. Apesar disto, os matr√≥ides 

t√™m  um  papel  muito  importante  em  diversas  √°reas  cient√≠ficas.  √Ålgebra,  geometria,  teoria  da 

computa√ß√£o, investiga√ß√£o operacional  s√£o algumas das que os utilizam,  muitas vezes sem  o 

saberem. 

Tal como o nome sugere, matr√≥ide vem da palavra matriz. O conceito de matr√≥ide 

surgiu  em  1935,  quando  Whitney  tentou  generalizar  a  no√ß√£o  de  depend√™ncia  linear  de  um 

conjunto de vetores, pertencentes a um dado espa√ßo vetorial. A teoria de matr√≥ides surgiu da 

tentativa de unificar, de certa maneira a √°lgebra e a teoria dos grafos. Hassler Whitney ap√≥s 

v√°rios  anos  de  estudos  sobre  teoria  dos  grafos  notou  similaridades  entre  as  ideias  de 

independ√™ncia e posto em teoria dos grafos a independ√™ncia linear e dimens√£o no estudo de 

espa√ßos vetoriais. Vejamos um exemplo na √°lgebra linear: 

Exemplo 2.1 Seja ùê¥ a seguinte matriz, com tr√™s linhas, seis colunas e preenchida 

por  n√∫meros  reais:  ùê¥ = [

1 0 0
0 1 0
0 0 1

1 1 0
1 1 0
1 0 0

].  Numerando  as  colunas  da  matriz  ùê¥  e 

simplificando a nota√ß√£o, podemos designar por E = {1, 2, 3, 4, 5, 6} o conjunto das colunas da 

matriz ùê¥. Reparando nas colunas 1, 4, 5, se tentarmos encontrar n√∫meros reais ùëé1, ùëé2 e ùëé3 tais 

1
] + ùëé2 [
0
0
ùëé2
ùëé2
ùëé2

1
1
1
ùëé3
ùëé3
0

] + [

que ùëé1 [

] + [

ùëé1
0
[
0
ùëé1 + ùëé2 + ùëé3
ùëé2 + ùëé3
ùëé2

[

] + ùëé3 [

1
1
0

] = [

0
] , teremos de encontrar n√∫meros reais ùëé1, ùëé2 e ùëé3 tais que 
0
0

] = [

0
],  isto  √©  equivalente  a  encontrar  n√∫meros  reais  ùëé1, ùëé2 e  ùëé3  tais  que 
0
0

] = [

0
0
0

], ou seja, resolver o sistema {

ùëé1 + ùëé2 + ùëé3 = 0
ùëé2 + ùëé3 = 0
ùëé2 = 0

. A √∫nica solu√ß√£o deste 

sistema √© ùëé1 = ùëé2 = ùëé3 = 0. Isto significa que o subconjunto de E formado pelas colunas 1, 4, 

5 de ùê¥ √© linearmente independente. Este subconjunto n√£o seria linearmente independente se o 

sistema anterior tivesse mais do que uma solu√ß√£o. Sendo ùêº1 a cole√ß√£o de subconjuntos de E, 

formados por colunas da matriz A, linearmente independentes, ent√£o podemos afirmar que ùêº1  

tem todos os conjuntos com, no m√°ximo, tr√™s elementos de ùê∏ ‚àí {6}, exceto os conjuntos {1, 2, 

5} e {3, 4, 5}. 

 
 
 
 
 
 
 
 
     
 14 

Outra  no√ß√£o  √©  a  de  grafo.  Este  pode  ser  definido  como  um  conjunto  de  pontos 

(chamados v√©rtices do grafo) e uma cole√ß√£o de linhas a unir determinados pontos (chamadas 

arestas do grafo). 

Exemplo 2.2 Na figura 2 pode ver-se o grafo ùê∫ com o conjunto de v√©rtices ùëã =

{ùë•1, ùë•2, ùë•3, ùë•4} e a cole√ß√£o das arestas ùëà = {ùë¢1, ùë¢2, ùë¢3, ùë¢4, ùë¢5, ùë¢6}. 

Figura 2 - Exemplo de grafo 

Fonte: Fernandes (2015, p. 38). 

Para  falarmos  da  no√ß√£o  de  depend√™ncia  em  grafos,  necessitamos  de  um  outro 

conceito, o conceito de ciclo. Um ciclo √© uma sequ√™ncia alternada de v√©rtices e arestas de um 

grafo, iniciada e terminada num v√©rtice, tal que cada aresta tem uma extremidade no v√©rtice 

que imediatamente a precede na sequ√™ncia e outra extremidade no v√©rtice que imediatamente a 

sucede  na  sequ√™ncia. Al√©m  disto,  num  ciclo,  todas  as  arestas  s√£o  distintas  e  todos  os  seus 

v√©rtices tamb√©m, √† exce√ß√£o do primeiro e do √∫ltimo, que s√£o o mesmo. Reparando na figura, 

temos por exemplo: 

-A sequ√™ncia ùë•3, ùë¢1, ùë•1, ùë¢5, ùë•2, ùë¢2, ùë•3 √© um ciclo do grafo ùê∫. 

-A sequ√™ncia ùë•4, ùë¢6, ùë•4 tamb√©m √© um ciclo do grafo ùê∫ (ciclos com uma √∫nica aresta 

chamam-se la√ßos). 

Quando nomeamos uma aresta ficam definidos os v√©rtices que s√£o extremidades 

dessa aresta, assim podemos omitir os v√©rtices quando estamos a escrever um ciclo. Pensando 

nos ciclos exemplificados anteriormente no grafo ùê∫, poder√≠amos escrever o primeiro ciclo como 

 ùë¢1, ùë¢5, ùë¢2,  e  o  segundo,  que  √©  um  la√ßo,  como  ùë¢6.  Com  o  conceito  de  ciclo  estabelecido, 

podemos falar da no√ß√£o de depend√™ncia nos conjuntos constitu√≠dos por arestas de um grafo. 

Exemplo 2.3 Olhando para o grafo ùê∫, e sendo ùêº2 a cole√ß√£o dos subconjuntos de ùëà, 

formados  por  arestas  do  grafo  G  que  n√£o  cont√™m  nenhum  ciclo  do  grafo,  ent√£o,  podemos 

afirmar que ùêº2 tem todos os conjuntos com, no m√°ximo, tr√™s elementos de ùëà ‚àí {ùë¢6}, exceto os 

conjuntos {ùë¢1, ùë¢2, ùë¢5} ùëí {ùë¢3, ùë¢4, ùë¢5}. 

 
 
 
 
 
 
 
 15 

Repare  na  semelhan√ßa  que  existe  entre  ùêº1  do  exemplo  2.1  e  ùêº2  do  exemplo  2.3. 

Whitney reparou nesta semelhan√ßa e reparou tamb√©m nas seguintes tr√™s propriedades que ùêº1 e 

ùêº2 verificavam: (designando por ùêº indiferentemente as cole√ß√µes ùêº1 e ùêº2) 

ùë∑ùüè) ‚àÖ √© elemento de ùêº. 

ùë∑ùüê) Se ùëå ‚àà ùêº e ùëç ‚äÜ ùëå, ent√£o ùëç ‚àà ùêº . 

ùë∑ùüë) Se ùëç, ùëå  ‚àà  ùêº e |ùëç| > |ùëå|, ent√£o existe ùëß ‚àà ùëç ‚àí ùëå tal que ùëå ‚à™ {ùëß} ‚àà ùêº (em que 

|ùëå| e |ùëç| designam o n√∫mero de elementos dos conjuntos ùëå e ùëç, respectivamente). 

Foi a partir destas tr√™s propriedades que Whitney definiu o conceito de matr√≥ide. 

2.1 DEFINI√á√ÉO DE MATR√ìIDES 

Defini√ß√£o 2.1.1 Um matr√≥ide ùëÄ √© uma estrutura do tipo ùëÄ = (ùê∏, ùêº) em que ùê∏ √© um 

conjunto  finito  e  ùêº  √©  uma  cole√ß√£o  de  subconjuntos  de  ùê∏  que  verificam  as  tr√™s  propriedades 

anteriores. 

Se  ùëÄ = (ùê∏, ùêº)  √©  um  matr√≥ide,  ent√£o  os  conjuntos  de  ùêº  chamam-se  conjuntos 

independentes do matr√≥ide ùëÄ. O conjunto ùê∏ √© o suporte do matr√≥ide ùëÄ. O subconjunto de E que 

n√£o est√° em ùêº √© chamado dependente.  Se o conjunto ùêº satisfizer as propriedades P1 e P2 mas n√£o 

necessariamente P3, ent√£o (ùê∏, ùêº) √© denominado um complexo simplicial. 

Proposi√ß√£o 2.1.1 Seja E o conjunto de colunas rotuladas de uma matriz m x n sobre 

um corpo F, e seja ùêº o conjunto dos subconjuntos X de E para os quais multiconjuntos (conjunto 

cujos  elementos  podem  ser  repetidos)  de  colunas  rotuladas  por  X  √©  linearmente  independente 

(L.I) no espa√ßo vetorial de dimens√£o ùëâ(ùëö, ùêπ) sobre o corpo F. Ent√£o (E, ùêº) √© um Matr√≥ide. 

Demonstra√ß√£o:  Evidentemente,  ùêº  satisfaz  (P1),  pois  ‚àÖ  ‚àà  ùêº  e  (P2)  tamb√©m  √© 

satisfeito, pois, subconjuntos de conjuntos linearmente independentes tamb√©m s√£o linearmente 

independentes.  Para  provar  (P3),  sejam  ùêº1 ùëí ùêº2  conjuntos  independentes  de  ùêº.  Supondo  que 

|ùêº1| < |ùêº2|, devemos provar que ‚àÉ ùëí ‚àà ùêº2 ‚àí ùêº1 com ùêº1 ‚à™ {ùëí} ‚àà ùêº. Por absurdo, vamos supor que 

‚àÄ ùëí ‚àà ùêº2 ‚àí ùêº1, ùêº1 ‚à™ {ùëí} ‚àâ ùêº ‚áí ùêº1 ‚à™ {ùëí} gera vetores linearmente dependentes. Seja W subespa√ßo 

de  ùëâ(ùëö, ùêπ)  gerado  por  ùêº1 ‚à™ ùêº2.  Logo  a  dimens√£o  de  W  √©  no  m√≠nimo  |ùêº2|,  pois  ùêº2 ‚äÇ ùêº1 ‚à™ ùêº2. 

Portanto,  W  est√°  contido  no  gerado  de  ùêº1.  Assim  |ùêº2| ‚â§  ùëëùëñùëö ùëä ‚â§   |ùêº1| < |ùêº2|   √©  uma 

contradi√ß√£o. Logo, conclu√≠mos que ùêº2 ‚àí ùêº1 cont√©m um elemento ùëí tal que ùêº1 ‚à™ {ùëí} ‚àà ùêº, isto √©, 

(P3) √© v√°lida. 

 
 
 
 
 
 
 
 
 
 16 

Um Matr√≥ide obtido de uma matriz A como do exemplo 2.1, denotada por M[A], √© 

chamado Matr√≥ide Vetorial de A.  

Exemplo  2.1.1  Voltando  a  analisar  a  matriz  ùê¥ = [

1 0 0
0 1 0
0 0 1

1 1 0
1 1 0
1 0 0

]  do 

exemplo 2.1, cujas colunas s√£o rotuladas por 1,2,3,4,5 e 6. Obtemos: 

E = {1, 2, 3, 4, 5, 6} e 

A cole√ß√£o de subconjuntos dependentes √©: 

{{1,2,5}, {3,4,5}} ‚à™ {ùëã ‚äÜ ùê∏; |ùëã| ‚â• 4 ùëúùë¢ 6 ‚àà ùëã} 

Dentre  os  conjuntos  dependentes  existem  os  minimais,  ou  seja,  conjuntos 

dependentes cujos subconjuntos pr√≥prios s√£o independentes, e isso origina a seguinte defini√ß√£o: 

Defini√ß√£o  2.1.2  Um  conjunto  dependente  minimal  de  um  Matr√≥ide  M  ser√° 

denominado circuito de M, e o conjunto de todos os circuitos do Matr√≥ide M ser√° denominado 

por ùíû ou ùíû(M).   

Um circuito de M com n elementos √© denominado n-circuito. Evidentemente, tal 

como no exemplo anterior, toda vez que ùíû(M) for especificado, M tamb√©m o ser√°: os membros 

de ùêº(ùëÄ) s√£o os subconjuntos de M e E que n√£o cont√™m nenhum membro de ùíû(M). Assim, um 

Matr√≥ide √© determinado exclusivamente por seu conjunto ùíû de circuitos.  

Vamos  agora  analisar  algumas  propriedades  de  ùíû,  com  vista  a  caracterizar  esses 

dois subconjuntos de que pode ocorrer como o conjunto de circuitos de um Matr√≥ide sobre E. 

Lema 2.1.1 Seja ùíû o conjunto dos circuitos de um Matr√≥ide M, ent√£o s√£o v√°lidas 

as seguintes propriedades:  

C1) ‚àÖ ‚àâ ùíû.  

C2) Se ùê∂1 ùëí ùê∂2 s√£o membros de ùíû e ùê∂1 ‚äÜ ùê∂2, ent√£o ùê∂1 = ùê∂2.  

C3) Se ùê∂1 ùëí ùê∂2 s√£o membros distintos de ùíû e ‚Ñ∞ ‚àà ùê∂1 ‚à© ùê∂2. Ent√£o existe um membro 

ùê∂3 de ùíû tal que  ùê∂3 ‚äÜ (ùê∂1 ‚à™ ùê∂2) ‚Äì ‚Ñ∞.  

Demonstra√ß√£o: C1) ‚àÖ ‚àâ ùíû. Por P1) ‚àÖ ‚àà I, pois I n√£o cont√©m circuito.  

C2) Vamos supor que ùê∂1, ùê∂2 ‚àà ùíû com ùê∂1 ‚äÜ ùê∂2 e ùê∂1 ‚â† ùê∂2. ‚àÉ ùìç ‚àà ùê∂2 ‚àí ùê∂1. Ent√£o 

ùê∂1 ‚äÜ ùê∂2 ‚àí {ùìç}. Mas ùê∂2 ‚àí {ùìç} ‚àà  ùêº, por P2) ùê∂1 ‚àà I √© um absurdo.  

 
 
 
 
 
 
 
     
 17 

Para  verificar  C3)  vamos  supor  que  n√£o  existe  um  circuito  contido  em 

(ùê∂1 ‚à™ ùê∂2)‚Äì {‚Ñ∞}, ou seja, (ùê∂1 ‚à™ ùê∂2) ‚Äì ‚Ñ∞ √© independente. Por C2), ùê∂2 ‚àí ùê∂1 ‚â† ‚àÖ ent√£o existe f em 

ùê∂2 ‚àí ùê∂1. Como  ùê∂2  √©  conjunto  dependente  minimal,  ùê∂2‚Äì ùëì ‚àà ùêº.  Seja  J  um  subconjunto  de         

ùê∂1 ‚à™ ùê∂2  que  √©  maximal  com  a  propriedade  que  este  cont√©m  a  ùê∂2 ‚Äì ùëì  √©  independente. 

Evidentemente f ‚àâ J. Mas como ùê∂1 √© um circuito, algum elemento g de ùê∂1 n√£o est√° em I. Como 

ùëì ‚àà ùê∂2 ‚àí ùê∂1, os elementos f e g s√£o distintos. Ent√£o  

‚îÇùêΩ‚îÇ ‚â§ ‚îÇ(ùê∂1 ‚à™ ùê∂2) ‚àí {ùëì, ùëî} ‚îÇ = ‚îÇ(ùê∂1 ‚à™ ùê∂2)‚îÇ ‚Äì 2  < ‚îÇ(ùê∂1 ‚à™ ùê∂2) ‚Äì {‚Ñ∞}‚îÇ.  

Agora  aplicando,  P3),  tomando  ùêº1  como  J  e  ùêº2  como  (ùê∂1 ‚à™ ùê∂2) ‚Äì ‚Ñ∞.  O  conjunto 

independente resultado contradiz com a maximalidade de J. 

A condi√ß√£o C3) √© chamada de axioma da elimina√ß√£o do circuito 

Podemos ent√£o classificar um Matr√≥ide atrav√©s das condi√ß√µes C1, C2 e C3. 

Teorema  2.1.1  Seja  E  um  conjunto  e  ùíû  uma  cole√ß√£o  de  subconjuntos  de  E  que 

satisfaz  C1,  C2  e  C3.  Seja  I  uma  cole√ß√£o  de  todos  os  subconjuntos  de  E  que  n√£o  cont√©m 

membros de ùíû. Ent√£o (ùê∏, ùêº) √© um Matr√≥ide que tem ùíû como sua cole√ß√£o de circuitos. 

Demonstra√ß√£o: Primeiramente mostraremos que ùêº satisfaz P1, P2 e P3. Por C1, ‚àÖ 

n√£o √© um elemento de ùíû, dessa forma ‚àÖ ‚àà ùêº. Logo P1 √© satisfeito. Se Y n√£o cont√©m elementos 

de ùíû e Z est√° contido em Y, ent√£o Z n√£o cont√©m elementos de ùíû. Logo P2 √© satisfeito.  

Para provar P3, suponhamos que ùêº1 e ùêº2 s√£o membros de ùêº e |ùêº1| ÀÇ |ùêº2|. Suponhamos 

que P3 falha para o par ùêº1, ùêº2. Agora ùêº cont√©m um elemento que √© um subconjunto de ùêº1 ‚à™ ùêº2 e 

cont√©m  mais  elementos  que  ùêº1.  Escolha  um  subconjunto  ùêº3  de  ùêº  contido  em  ùêº1 ‚à™ ùêº2  tal  que 

a |ùêº1‚Äì ùêº3| √© minimal. Como P3 falha, ùêº1‚Äì ùêº3 √© n√£o vazio, assim podemos escolher um elemento 
ùëí deste conjunto. Para cada elemento f de ùêº3‚Äì ùêº1, seja ùëáùëì = (ùêº3 ‚àí {ùëì}) ‚à™   {ùëí}. Ent√£o ùëáùëì   ‚äÜ   ùêº1 ‚à™

ùêº2  e  ‚îÇùêº1 ‚àí ùëáùëì‚îÇ ÀÇ ‚îÇùêº1‚Äì ùêº3‚îÇ.  Portanto  ùëáùëì ‚àâ ùêº,  assim  ùëáùëì  cont√©m  um  elemento  ùê∂ùëì  de  ùíû. 

Evidentemente ùëì ‚àâ ùê∂ùëì. Mas, ùëí ‚àà ùê∂ùëì, pois caso contr√°rio temos ùê∂ùëì ‚äÜ ùêº3 contradiz o fato que ùêº3 ‚àà

ùêº.   

Seja g um elemento de ùêº3‚Äì ùêº1. Se ùê∂ùëî ‚à© (ùêº3‚Äì ùêº1) = ‚àÖ. Ent√£o ùê∂ùëî ‚äÜ (ùêº1 ‚à© ùêº3) ‚à™ {ùëí} ‚àí

{ùëî} ‚äÜ ùêº1 o que d√° uma contradi√ß√£o. Portanto, tem um elemento h em ùê∂ùëî ‚à© (ùêº3‚Äì ùêº1). Ent√£o ùëí ‚àà

ùê∂ùëî ‚à© ùê∂‚Ñé. Assim, C3 implica que tem um membro ùê∂ de ùíû tal que ùê∂ ‚äÜ (ùê∂ùëî ‚à™ ùê∂‚Ñé) ‚àí {ùëí}. Mas, 

ambos ùê∂ùëî e ùê∂‚Ñé s√£o subconjuntos de ùêº3 ‚à™ {ùëí} e, portanto ùê∂ ‚äÜ ùêº3 √© uma contradi√ß√£o. Conclu√≠mos 

 
 
 
 
 
 
 
 18 

que P3 n√£o falha e consequentemente (ùê∏, ùêº) √© um Matr√≥ide M. 

Para provar que ùíû √© um conjunto ùíû (M) de circuitos de M, notamos que os seguintes 

enunciados s√£o equivalentes.  

(i) C √© um circuito de M.  

(ii) C ‚àâ I(M) e C ‚Äì x ‚àà I(M) para todo x em C.  

(iii)  C  cont√©m  um  membro  C‚Äô  de  ùíû  como  um  subconjunto,  mas  C‚Äô  n√£o  √©  um 

subconjunto pr√≥prio de C.  

(iv) C ‚àà ùíû.  

Como consequ√™ncia imediata do teorema anterior tem-se: 

Corol√°rio 2.1.1 Seja ùíû uma cole√ß√£o de subconjuntos de E. Ent√£o ùíû √© uma cole√ß√£o 

de subconjuntos do circuito de um Matr√≥ide M se, e somente se, satisfaz as seguintes condi√ß√µes:  

(C1) ‚àÖ ‚àâ ùíû.  

(C2) Se ùê∂1 e ùê∂2 s√£o elementos de ùíû e ùê∂1 ‚äÜ ùê∂2. Ent√£o ùê∂1= ùê∂2.  

(C3)  Se  ùê∂1  e  ùê∂2  s√£o  elementos  distintos  de  ùíû  e  ùúÄ  ‚àà  ùê∂1  ‚à©  ùê∂2,  ent√£o,  existe  um 

elemento ùê∂3 de ùíû tal que ùê∂3 ‚äÜ (ùê∂1 ‚à™ ùê∂2) ‚Äì ùúÄ. 

Proposi√ß√£o  2.1.2  Seja  I  um  conjunto  independente  em  um  Matr√≥ide  M  e  ùúÄ  um 

elemento  de  M  tal  que  ùêº ‚à™ {ùúÄ}  √©  dependente.  Ent√£o  M  tem  um  √∫nico  circuito  C  contido  em       

ùêº ‚à™ {ùúÄ}, que cont√©m ùúÄ.  

Demonstra√ß√£o:  Evidentemente,  ùêº ‚à™ {ùúÄ}  cont√©m  um  circuito,  pois  ùêº ‚à™ {ùúÄ}  √©  um 

conjunto  dependente.  Portanto,  todo  circuito  C  contido  em  ùêº ‚à™ {ùúÄ}  cont√©m  ùúÄ,  pois,  caso 

contr√°rio,  C  ‚äÇ  I,  um  absurdo.  Supor  que  existe  um  circuito  C‚Äô,  distinto  de  C,  contido  em            

ùêº ‚à™ {ùúÄ}. Ent√£o, por (C3), (C ‚à™ C‚Äô) ‚àí ùúÄ cont√©m um circuito C‚Äô, mas (C ‚à™ C‚Äô) ‚àí ùúÄ ‚äÜ I, e assim C‚Äô 

‚äÇ  I,  o  que  √©  um  absurdo,  pois  I  √©  independente.  Portanto,  C  √©  o  √∫nico  circuito  contido  em          

ùêº ‚à™ {ùúÄ}  e que cont√©m ùúÄ. 

Com  as defini√ß√µes, teoremas e proposi√ß√µes acima demonstradas, podemos agora 

escrever formalmente como se d√° a constru√ß√£o de matr√≥ides derivados de grafos, como visto 

no exemplo 2.2. 

Proposi√ß√£o 2.1.3. Seja E o conjunto das arestas de um grafo G e ùíû a fam√≠lia dos 

 
 
 
 
 
 
 
 19 

conjuntos das arestas dos ciclos de G. Ent√£o ùíû √© a fam√≠lia dos circuitos de um Matr√≥ide sobre 

E.  

Demonstra√ß√£o: (C1) ‚àÖ ‚àâ  ùíû. Por P1, ‚àÖ ‚àà ùêº.  

(C2) Supor ùê∂1  e ùê∂2  ‚àà ùíû com ùê∂1 ‚äÜ ùê∂2  e ùê∂1 ‚â† ùê∂2. Ent√£o ‚àÉ ùúÄ ‚àà   ùê∂2 ‚Äì ùê∂1 , e assim 

ùê∂1   ‚äÜ ùê∂2 ‚àí {ùúÄ}. Mas ùê∂2 ‚àí {ùúÄ}   ‚àà  ùêº, donde, por P2, ùê∂1 ‚àà I, uma contradi√ß√£o. 

(C3)  Sejam  ùê∂1  e  ùê∂2  os  conjuntos  das  arestas  de  dois  ciclos  distintos  de  G  que 

possuem ùëí como uma aresta em comum. Considere a Fig. (3). Sejam u e v os v√©rtices da aresta 

ùëí. Vamos agora construir um ciclo de G cujas arestas est√£o contidas em ùê∂1 ‚à™ ùê∂2 ‚Äì ùëí, para i = 1, 

2,  seja  ùëÉ1  um  caminho  de  u  a  v  em  G  cujas  arestas  est√£o  em  ùê∂ùëñ ‚Äì ùëí.  Come√ßando  em  u, 

percorrendo ùëÉ1 em dire√ß√£o de v, seja w o primeiro v√©rtice cuja pr√≥xima aresta de ùëÉ1 n√£o pertence 

a ùëÉ2. Continuando a percorrer ùëÉ1 de w em dire√ß√£o v, encontramos um v√©rtice x distinto de w 

que tamb√©m est√° em ùëÉ2. Como ùëÉ1 e ùëÉ2 terminam em v tal v√©rtice existe. Unindo o subcaminho 

de ùëÉ1 que vai de w a x ao subcaminho de ùëÉ2 vai de x at√© w encontramos um ciclo cujas arestas 

est√£o  contidas  em  ùê∂1 ‚à™ ùê∂2 ‚Äì ùëí.  Portanto,  ùíû  satisfaz  a  propriedade  (C3),  ùê∂3 ‚äÜ ùê∂1 ‚à™ ùê∂2 ‚àí ùëí. 

Logo ùíû √© a fam√≠lia dos circuitos de um Matr√≥ide sobre E. 

Assim, um ciclo √© uma sequ√™ncia alternada de arestas e v√©rtices, de um grafo G, 

formando um ciclo fechado. 

Figura 3 - O ciclo √© um grafo que satisfaz o circuito eliminat√≥rio do axioma (C3) 

Fonte: Ales (2017, p. 24). 

Defini√ß√£o 2.1.3  MATR√ìIDE UNIFORME: Sejam ùëõ e  ùëü dois n√∫meros inteiros 

n√£o  negativos,  com  0 ‚â§ ùëü ‚â§ ùëõ.  Chama-se  matr√≥ide  uniforme,  denotando-se  por  ùëàùëü,ùëõ,  um 

matr√≥ide ùëÄ = (ùê∏, ùêº) em que E √© um conjunto com ùëõ elementos e ùêº √© a cole√ß√£o de subconjuntos 

de E com, no m√°ximo, ùëü elementos.  

√â f√°cil verificar que o par (ùê∏, ùêº) da defini√ß√£o acima constitui um matr√≥ide. 

 
 
 
 
 
 
 
 20 

Exemplo 2.1.2 Pedro tem uma lista de compras para o supermercado: 1 d√∫zia de 

ovos;  1  kg  de  arroz;  1  lata  de  atum;  1  pacote  de  salada.  No  supermercado,  repara  que  se 

esqueceu da carteira em casa e que nos seus bolsos s√≥ tem tr√™s reais. Olha para as prateleiras e 

acrescenta √† sua lista de produtos os respectivos pre√ßos: 1 d√∫zia de ovos = 1,00 real; 1 kg de 

arroz = 1,10 reais; 1 lata de atum = 1,30 reais; 1 pacote de salada = 1,20 reais. Face ao exposto, 

Pedro tem, no m√°ximo,  dinheiro para  comprar quaisquer dois  produtos  da sua lista. Ou n√£o 

compra nada, ou compra um produto, ou compra dois produtos. Estamos perante um problema 

que tem quatro elementos (os produtos da lista do Rui) e podemos construir subconjuntos destes 

quatro elementos com, no m√°ximo, dois elementos (o Rui s√≥ tem dinheiro para comprar, no 

m√°ximo, dois produtos da lista). Portanto o que temos neste exemplo √© o matr√≥ide uniforme 

ùëà2,4. 

Defini√ß√£o  2.1.4  Seja  um  conjunto  E,  um  conjunto  sobre  o  qual  definimos  uma 

propriedade. Seja o  M√ÅXIMO (M√çNIMO) ou MAXIMAL (MINIMAL)  subconjunto  ùëÖ ‚äÜ ùê∏ 

aquele  tal  que  n√£o  existe  um  outro  subconjunto  ùëÖ‚Ä≤ ‚äÜ ùê∏  que  cont√©m  (contido  em) ùëÖ 

propriamente, satisfazendo a mesma propriedade.  

Exemplo 2.1.3 Seja ùê∏ = {ùëÇ, 2, . . . , 10} conjunto dos pares menores ou iguais a 10. 

O  subconjunto  maximal  (minimal)  ùëÖ ‚äÜ ùê∏  contendo  pares  menores  que  7  √©  ùëÖ = {ùëÇ, 2, 4, 6}    

(ùëÖ = {ùëÇ}, ùëÖ = {2}, ùëÖ = {4}, ùëÖ = {6} todos minimais). 

Um  outro  tipo  de  matr√≥ide  que  ser√°  utilizado  nas  se√ß√µes  posteriores  s√£o  os 

matr√≥ides transversais. Para caracteriz√°-los definiremos alguns elementos b√°sicos. 

Seja  E  um  conjunto  finito  e  ùëÑ = {ùëÑ1, ùëÑ2, ‚Ä¶ , ùëÑùëõ}  um  conjunto  de,  n√£o 

necessariamente  distintos,  subconjuntos  de  E.  Um  TRANSVERSAL  DE  Q  √©  um  conjunto 

formado tomando-se um √∫nico elemento de cada subconjunto ùëÑ1, ùëÑ2, ‚Ä¶ , ùëÑùëõ, de maneira que 

todos estes elementos sejam distintos. Um PARCIAL TRANSVERSAL DE Q √© uma transversal 

de algum subconjunto de ùëÑ. 

Exemplo  2.1.4  ùëÑ = {ùëÑ1, ùëÑ2, ùëÑ3}  um 

conjunto  de 

subconjuntos  de                                

ùê∏ = {ùëí1, ùëí2, ùëí3, ùëí4} onde ùëÑ1 = {ùëí2, ùëí3, ùëí4} e ùëÑ2 = ùëÑ3 = {ùëí1}. N√£o temos um transversal pois 

ùëÑ2 = ùëÑ3, mas ‚àÖ, {ùëí1}, {ùëí2}, {ùëí3}, {ùëí4}, {ùëí1, ùëí2}, {ùëí1, ùëí3}, {ùëí1, ùëí4} s√£o parciais transversais. 

Defini√ß√£o  2.1.5  Com  as  defini√ß√µes  acima,  ùëÄ = (ùê∏, ùêº)  √©  um  MATR√ìIDE 

TRANSVERSAL sobre ùê∏ se ùêº √© o conjunto de parciais transversais de ùëÑ, ou seja, as parciais 

transversais de ùëÑ s√£o os subconjuntos independentes de ùê∏. As propriedades P1, P2 e P3 s√£o 

 
 
 
 
 
 
 
 21 

facilmente verificadas. 

Entre  os  subconjuntos  independentes  de  ùê∏  temos  o  MAXIMAL  PARCIAL 

TRANSVERSAL DE Q, que √© o parcial transversal tal que n√£o existe nenhum outro parcial 

transversal contendo-o. 

2.2 MATR√ìIDES PESADOS 

Queremos agora relacionar matr√≥ides com problemas de otimiza√ß√£o. Grosso modo, 

o objetivo de um problema de otimiza√ß√£o √© minimizar/maximizar uma determinada quantidade, 

de acordo com certas restri√ß√µes. Vamos fazer isso atribuindo uma certa quantidade (designada 

por ‚Äúpeso‚Äù) a cada elemento de E. 

Seja ùëÄ = (ùê∏, ùêº) um matr√≥ide e seja ùë§: ùê∏ ‚ü∂ ‚Ñù0

+ uma fun√ß√£o. Dizemos que w √© a 

fun√ß√£o  peso  do  matr√≥ide  e  w(x)  √©  o  peso  do  elemento  x.  Dado  ùëã ‚äÜ ùê∏,  o  peso  de  ùëã,  que 

denotamos por w(X) (abuso de nota√ß√£o!) √© a soma de todos os pesos dos seus elementos, ou 

seja, ùë§(ùëã) = ‚àë

ùë•‚ààùëã

ùë§(ùë•)

. O problema que pretendemos resolver √© o seguinte: 

PROBLEMA: Determinar um conjunto independente maximal de peso m√°ximo. 

Por ‚Äúconjunto independente maximal‚Äù entenda-se um conjunto independente que 

n√£o  est√°  estritamente  contido  em  nenhum  outro  conjunto  independente.  O  problema  de 

determinar um independente maximal de peso m√≠nimo √© inteiramente an√°logo, logo, focar-nos-

emos apenas no caso acima. 

Vamos  agora  ver  que  a  resposta  ao  problema  acima  √©  ‚Äúusando  um  algoritmo 

ganancioso!‚Äù. 

Seja M = (E, I) um matr√≥ide pesado cuja fun√ß√£o peso √© ùë§: ùê∏ ‚ü∂ ‚Ñù0

+. Consideremos 

o  seguinte  algoritmo  ganancioso  (ou  guloso),  cujo  objetivo  √©  determinar  um  conjunto 

independente maximal de peso m√°ximo: 

‚Ä¢ Passo 1: Come√ßamos por considerar o conjunto independente ùëã = ‚àÖ  

‚Ä¢  Passo  2:  Acrescentamos  a  X  um  elemento  x  de  peso  m√°ximo  satisfazendo             

ùëã ‚à™ {ùë•} ‚àà ùêº. 

‚Ä¢ Passo 3:  Continuamos  a acrescentar  elementos como  no  Passo 2  at√© obter um 

independente maximal. 

 
 
 
 
 
 
 
 
 
 22 

Nota-se que a propriedade P3 satisfeita pelo matr√≥ide assegura que conseguimos 

‚Äúcompletar‚Äù  qualquer  conjunto  independente  at√©  atingirmos  um  independente  maximal,  da√≠ 

podermos  executar  o  Passo  2  at√©  alcan√ßarmos  um  tal  conjunto.  Al√©m  disso,  esta  mesma 

propriedade  garante  que  quaisquer  dois  conjuntos  independentes  maximais  t√™m  a  mesma 

cardinalidade. 

Chegamos enfim ao resultado que procuramos: 

Teorema 2.2.1  O algoritmo  ganancioso  acima encontra a melhor solu√ß√£o  para  o 

PROBLEMA. 

Demonstra√ß√£o: Seja M = (E, I) um matr√≥ide pesado com fun√ß√£o peso ùë§: ùê∏ ‚ü∂ ‚Ñù0

+. 

Suponhamos,  com  vista  a  um  absurdo,  que  o  algoritmo  ganancioso  devolve  um  conjunto 

independente maximal ùëã = {ùë•1, . . . , ùë•ùëõ}, mas existe um conjunto independente maximal  ùëå =
{ùë¶1, . . . , ùë¶ùëõ}  satisfazendo  ùë§(ùëå ) > ùë§(ùëã).  Suponhamos  ainda  que  ùë§(ùë•1) ‚â• ¬∑ ¬∑ ¬∑ ‚â• ùë§(ùë•ùëõ)  e  

ùë§(ùë¶1) ‚â• ¬∑ ¬∑ ¬∑ ‚â• ùë§(ùë¶ùëõ). Ent√£o, tem de existir algum 1 ‚â§ ùëò ‚â§ ùëõ tal que ùë§(ùë¶ùëò) > ùë§(ùë•ùëò). Como 

os  conjuntos  ùëã‚Ä≤ = {ùë•1, . . . , ùë•ùëò‚àí1}  e  ùëå‚Ä≤ = {ùë¶1, . . . , ùë¶ùëò}  s√£o  independentes  e  |ùëå‚Ä≤| > |ùëã‚Ä≤|,  a 

propriedade P2 satisfeita por I garante que existe 1 ‚â§ ùëü ‚â§ ùëò tal que o conjunto {ùë•1, . . . , ùë•ùëò‚àí1, ùë¶ùëü} 

√© independente. Mas ùë§(ùë¶ùëü) ‚â• ùë§(ùë¶ùëò) pois ùëü ‚â§ ùëò, e ùë§(ùë¶ùëò) > ùë§(ùë•ùëò) pela escolha de ùëò. Logo 

ùë§(ùë¶ùëü) > ùë§(ùë•ùëò), pelo que o algoritmo ganancioso teria escolhido o elemento ùë¶ùëü ao inv√©s de ùë•ùëò, 

absurdo! Conclu√≠mos ent√£o que X √© um independente maximal de peso m√°ximo. 

Est√° ent√£o demonstrado que, se um problema de otimiza√ß√£o possui a estrutura de 

matr√≥ide, ent√£o um algoritmo ganancioso fornece a melhor solu√ß√£o poss√≠vel. 

Mas, intuitivamente, porque √© que a prova funciona? Novamente, a propriedade P3 

√© o ingrediente essencial: ela permite-nos assegurar a exist√™ncia de uma solu√ß√£o √≥tima para o 

problema que √© consistente com as escolhas que o algoritmo ganancioso vai fazendo. Isto √©, 

podemos ir acrescentando cada vez mais elementos aos nossos independentes ‚Äúlocais‚Äù de modo 

a culminar num independente ‚Äúglobal‚Äù que satisfaz o pretendido. 

A  observa√ß√£o  pr√©via  motiva  a  seguinte  quest√£o:  o  que  acontece  se  n√£o 

considerarmos a propriedade P3? Ser√° que as propriedades P1 e P2 s√£o suficientes para garantir 

que  um  algoritmo  ganancioso  encontra  a  solu√ß√£o  √≥tima  para  o  problema  em  quest√£o? 

Lembremos que um complexo simplicial S √© uma estrutura do tipo ùëÜ = (ùê∏, ùêº) em que o conjunto 

ùêº ‚äÜ ùëÉ(ùê∏), onde P(E) √© o conjunto de todos os subconjuntos de ùê∏, satisfaz as propriedades P1 e 

P2,  mas  n√£o  necessariamente  P3.  Para  ser  mais  simples,  vamos  continuar  a  referir-nos  aos 

 
 
 
 
 
 
 
 23 

elementos I como ‚Äúindependentes‚Äù. O pr√≥ximo resultado indica que se um complexo simplicial 

n√£o satisfaz P3, ent√£o existe uma fun√ß√£o peso ùë§: ùê∏ ‚ü∂ ‚Ñù0

+ tal que o algoritmo ganancioso N√ÉO 

encontra um independente maximal com peso m√°ximo. Ou seja, a propriedade  P3 √© mesmo 

indispens√°vel para que o algoritmo ganancioso forne√ßa a solu√ß√£o √≥tima para qualquer fun√ß√£o 

peso que possamos considerar! 

Teorema 2.2.2 Se um complexo simplicial n√£o for um matr√≥ide, ent√£o o algoritmo 

ganancioso pode n√£o encontrar a solu√ß√£o √≥tima para o PROBLEMA. 

Demonstra√ß√£o: Seja ùëÜ = (ùê∏, ùêº) um complexo simplicial e sejam ùëã, ùëå ‚àà ùêº tais que 

|ùëå | > |ùëã| mas ùëã ‚à™ {ùë¶} ‚àâ ùêº para todo ùë¶ ‚àà ùëå ‚àí ùëã (i.e. |ùëã| e |ùëå| violam a propriedade P3. Como 

|ùëå ‚àí ùëã| > |ùëã ‚àí ùëå |, existe algum 0 < ùëê < 1 satisfazendo |ùëã ‚àí ùëå| < ùëê|ùëå ‚àí ùëã|. Consideremos 

a fun√ß√£o peso ùë§: ùê∏ ‚ü∂ ‚Ñù0

+  dada por 

ùë§(ùë•) = {

1       ùë†ùëí ùë• ‚àà ùëã         
ùëê       ùë†ùëí ùë• ‚àà ùëå ‚àí ùëã 
 0       ùë†ùëí ùë• ‚àâ ùëå ‚à™ ùëã  

Ent√£o, no processo de obten√ß√£o de um independente maximal com peso m√°ximo, o 

algoritmo ganancioso come√ßa por escolher todos os elementos de X; consequentemente, n√£o 

vai poder escolher nenhum elemento de Y, pois estamos a assumir que ùëã ‚à™ {ùë¶} ‚àâ ùêº para todo o 

ùë¶ ‚àà ùëå ‚àí ùëã.  Assim,  os  elementos  restantes  que  o  algoritmo  escolhe  t√™m  de  pertencer  a                 

ùê∂ ‚àí (ùëã ‚à™ ùëå),  pelo  que  todos  ter√£o  peso  0.  Portanto,  o  peso  do  independente  maximal  Z 

selecionado  pelo  algoritmo  ganancioso  √©  dado  por  ùë§(ùëç) = |ùëã|.  Por  outro  lado,  sendo  Y 

independente, existe algum ùëä ‚àà ùêº maximal tal que ùëå ‚äÜ ùëä, e tem-se 

ùë§(ùëä) ‚â• ùë§(ùëå) = ùë§(|ùëã ‚à© ùëå|) + ùë§(|ùëå ‚àí ùëã|) 

                 = |ùëã ‚à© ùëå| + ùëê|ùëå ‚àí ùëã| 

               > |ùëã ‚à© ùëå| + |ùëã ‚àí ùëå| 

   = |ùëã| = ùë§(ùëç) 

Portanto,  o  independente  maximal  W  tem  um  peso  superior  ao  independente 

maximal Z fornecido pelo algoritmo ganancioso. Mostramos assim que, para esta fun√ß√£o peso, 

o algoritmo ganancioso n√£o alcan√ßa a solu√ß√£o √≥tima para o problema. 

Combinando os dois teoremas anteriores, obtemos a seguinte caracteriza√ß√£o: 

Teorema  2.2.3:  Os  complexos  simpliciais  em  que  os  algoritmos  gananciosos 

alcan√ßam a solu√ß√£o √≥tima para o PROBLEMA s√£o precisamente os matr√≥ides. 

 
 
 
 
 
 
 
 
 24 

3 CONCLUS√ÉO 

Verificamos que inicialmente √© definido o conjunto E e em seguida uma ‚Äúestrutura 

de  independ√™ncia‚Äù  que  gerar√°  I.  Este  passo  nem  sempre  √©  evidente.  Para  a  conclus√£o  deste 

trabalho,  veremos  o  porqu√™  de  os  problemas  propostos  que  nos  serviram  como  motiva√ß√£o 

podem ser, ou n√£o, resolvidos com o algoritmo ganancioso.  

O problema 3 n√£o tem resultado otimizado com o algoritmo ganancioso, logo n√£o 

possui estrutura de matr√≥ide. Com rela√ß√£o ao problema 2, temos um problema de grafos, que 

j√° foi demonstrado possuir uma estrutura de matr√≥ide. Logo nos resta analisar o problema 1. 

Vejamos novamente o problema: 

Problema  1.  Um  certo  n√∫mero  de  trabalhos  ser√°  executado  por  uma  √∫nica 

m√°quina. Todos requerem o mesmo tempo de processamento, uma hora. Est√£o associados 

a  um  tempo  para  entrega,  o  qual  n√£o  satisfeito,  implica  em  uma  penalidade  fixa  ùíëùíä, 

independente do atraso. Determinar a sequ√™ncia para execu√ß√£o dos trabalhos de forma 

que o total das penalidades seja m√≠nimo. 

Nesse problema um conjunto de trabalhos ser√£o executados. Seja ùê∏ = {ùëí1, ‚Ä¶ , ùëíùëõ} 

este  conjunto  de  trabalhos.  A  cada  trabalho  est√°  associado  um  tempo  de  entrega  e  uma 

penalidade. Podemos assim separar os trabalhos em conjuntos por tempo de entrega. Seja ùëÑ =

{ùëÑ1, ‚Ä¶ , ùëÑùëõ} onde ùëÑùëñ cont√©m todos os trabalhos a serem entregues no tempo ùë° = ùëñ. Definimos 

assim um matr√≥ide transversal ùëÄ = (ùê∏, ùêº) sobre ùê∏. ùêº √© o conjunto dos parciais transversais de 

ùëÑ, ou seja, o conjunto de sequ√™ncias para execu√ß√£o dos trabalhos. Como a cada elemento de ùê∏ 

est√°  associada  uma  penalidade,  uma  fun√ß√£o  de  pesos  n√£o  negativa,  aplicando  o  algoritmo 

ganancioso, obtemos um transversal S de peso m√°ximo. Consequentemente uma sequ√™ncia para 

execu√ß√£o dos trabalhos com um total m√≠nimo de penalidade.  

 
 
 
 
 
 
 
 
 
 25 

REFER√äNCIAS 

ALES, R. Matr√≥ides e c√≥digos qu√¢nticos. 2017. 87p. Disserta√ß√£o (Mestrado em Ci√™ncias) ‚Äì 
Universidade Estadual de Ponta Grossa, Ponta Grossa, 2017. 

FERNANDES, R. O que √© um matr√≥ide? Gazeta de Matem√°tica, n. 175, ano 76, p. 36-40, 
mar. 2015. Dispon√≠vel em: https://gazeta.spm.pt/get?gid=175. Acesso em: 02 jan. 2023. 

MATEUS,  G.  R.  Matr√≥ides  e  algoritmos  greedy.  1980.  249  p.  Disserta√ß√£o  (Mestrado  em 
Engenharia  de  Sistemas  e  Computa√ß√£o)  ‚Äì  Universidade  Federal  do  Rio  de  Janeiro,  Rio  de 
Janeiro, 1980. 

OXLEY, J. G. Matroid theory. Oxford: Oxford University Press, 1992. 

PARBERRY, I. Problems on algorithms. Englewood Cliffs, N. J.: Prentice Hall, 1995. 

WHITNEY,  H.  On  the  abstract  properties  of  linear  dependence.  American  Journal 
Mathematics, v. 57, n. 3, p. 509-533, Jul. 1935. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
