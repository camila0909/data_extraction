USO DE LÓGICA DE PROGRAMAÇÃO
NO ENSINO DE MATEMÁTICA

Aldeni Mont Serrat Rosa da Silva

Orientadores: Prof.o Dr. Thiago Guimarães Moraes

Prof.a Dra. Monique Robalo Moura Carmona

Rio de Janeiro - RJ

Dezembro de 2018

USO DE LÓGICA DE PROGRAMAÇÃO
NO ENSINO DE MATEMÁTICA

Aldeni Mont Serrat Rosa da Silva

Dissertação de Mestrado Proﬁssional em Matemática em Rede Na-

cional para aprimoramento da formação proﬁssional de professores

de educação básica pela Universidade Federal do Rio de Janeiro,

como parte dos requisitos necessários à obtenção do título de Mestre.
Orientadores: Prof.o Dr. Thiago Guimarães Moraes

Prof.a Dra. Monique Robalo Moura Carmona

Rio de Janeiro - RJ

Dezembro de 2018

CIP - Catalogação na PublicaçãoElaborado pelo Sistema de Geração Automática da UFRJ com os dados fornecidospelo(a) autor(a), sob a responsabilidade de Miguel Romeu Amorim Neto - CRB-7/6283.S586uSilva, Aldeni Mont Serrat Rosa da   Uso de Lógica de Programação no Ensino deMatemática / Aldeni Mont Serrat Rosa da Silva. --Rio de Janeiro, 2018.   87 f.   Orientador: Thiago Guimarães Moraes.   Coorientadora: Monique Robalo Moura Carmona.   Dissertação (mestrado) - Universidade Federal doRio de Janeiro, Instituto de Matemática, Programade Pós-Graduação em Ensino de Matemática, 2018.      1. Ensino de matemática. 2. Lógica de programação.3. Programação na matemática. 4. Scratch. 5.Code.org. I. Moraes, Thiago Guimarães, orient. II.Carmona, Monique Robalo Moura, coorient. III. Título.Dedico mais essa conquista na minha vida àqueles que
fazem parte dela, aos que me amam incondicionalmente.

Agradecimentos

Agradeço a todos os meus familiares, em especial meu pai Aldeni Rosa da Silva, a minha
mãe Denise Martins Mont Serrat, e minha irmã Aldenise Mont Serrat Rosa da Silva, pelo
incentivo e apoio durante a realização das disciplinas do curso.

A minha esposa Laís Curvêlo Oliveira Mont Serrat, por toda paciência, sendo

verdadeiramente uma parceira, me incentivando e dando força.

Aos meus sogros Paulo Roberto de Oliveira e Ivana Curvêlo de Oliveira, pelo

incentivo e apoio durante o mestrado.

A todos os meus amigos, em especial Akauã de Ávila e Marcel Chacon, por me

ajudar a estudar ﬁns de semana e feriados e por todo apoio durante essa jornada.

Aos meus orientadores Thiago Guimarães Moraes e Monique Robalo Moura Car-
mona, pelas discussões valiosas, pela atenção, paciência e dedicação durante a orientação
deste trabalho.

A todos os professores que ﬁzeram parte da minha formação.

Agradeço a todos os meus alunos, em especial aqueles que participaram do experi-

mento.

Agradeço à CAPES por oportunizar que esse Mestrado fosse realizado com o auxílio

de bolsa de estudo.

E ﬁnalmente a todos que de alguma forma contribuíram para a realização deste

trabalho.

Muito obrigado!

“Sábio é o ser humano que entende que tem
mais a aprender do que a ensinar.”
Autor desconhecido

Resumo

O aprendizado nas salas de aula tem sofrido pressões em decorrência das inﬂuências
tecnológicas. O local onde o professor estava habituado a ser o protagonista e principal
provedor do saber está passando por transformações, visto que as tecnologias de infor-
mação e comunicação estão contribuindo para facilitar o acesso a informação dentro e
fora das salas de aula. Conviver com o avanço desta tecnologia de computação aumenta
a preocupação dos professores acerca das tarefas a serem aplicadas na sala de aula, pois
aumenta o desaﬁo para estimular o interesse dos seus alunos. Especiﬁcamente no ensino e
aprendizagem da Matemática, os desaﬁos são constantes e a inserção da tecnologia parece
que pode gerar novas motivações aos estudantes. O presente trabalho de pesquisa pretende
mostrar que o uso da lógica de programação dentro de um planejamento bem elaborado
pode, de fato, ajudar na compreensão de diversos conteúdos matemáticos. Deste modo, o
estudante é estimulado a desenvolver suas ideias por meio da capacidade investigativa,
resolução de problemas, testes, formulação de hipóteses e generalização com o objetivo
de buscar coerência em seus cálculos e clareza na comunicação e argumentação de ideias.
A investigação acerca dessas hipóteses foi conduzida, primeiramente, por meio de uma
pesquisa bibliográﬁca sobre a relevância e as estratégias desenvolvidas para o uso de
tecnologias digitais em sala de aula. Posteriormente, foi desenvolvida e aplicada ativida-
des educativas, em um experimento controlado, utilizando plataformas computacionais
Code.org e Scratch. As atividades foram realizadas em 6 encontros, sendo 3 encontros
utilizando a plataforma Code.org e os outros 3 encontros utilizando a plataforma Scratch,
sobre os quais foram aplicados questionários que permitiram coletar dados e derivar as
conclusões desta pesquisa.

Palavras-chave: Ensino de matemática. Lógica de programação. Programação na

matemática. Code.org. Scratch.

Abstract

Classroom learning has been under pressure as a result of technological inﬂuences.
The place where the teacher was accustomed to being the protagonist and main provider
of knowledge is undergoing transformations, since information and communication tech-
nologies are contributing to facilitate the access to information inside and outside the
classrooms. Living with the advancement of this computing technology increases teach-
ers’ concern about the tasks to be applied in the classroom in order to stimulate the
interest of their students. Speciﬁcally in the teaching and learning of Mathematics, the
challenges are constant and the insertion of technology seems to generate new motivations
for students. The present research intends to show that the use of the programming
logic within a well elaborated planning can, in fact, help to understanding the diversity
of mathematical contents. In this way, the student is stimulated to develop his / her
ideas through investigative capacity, problem solving, testing, hypothesis formulation
and generalization with the purpose of seeking consistency in his / her calculations and
clarity in the communication and argumentation. Research on these hypotheses was ﬁrst
conducted through a bibliographical review on the relevance and strategies developed for
the use of digital technologies in the classroom. Subsequently, educational activities were
developed and applied in a controlled experiment using Code.org and Scratch computing
platforms. The activities were carried out in 6 meetings, 3 meetings using the Code.org
platform and the other 3 meetings using the Scratch platform, on which questionnaires
were used to collect data and derive the conclusions of this research.

Keywords: Mathematics teaching. Logic. Programming in mathematics. Code.org.

Scratch.

Sumário

1
1.1
1.2
1.3
1.4
1.5

2
2.1

2.2
2.3

3
3.1
3.2
3.3
3.4
3.5

4

Lista de Figuras . . . . . . . . . . . . . . . . . . . . . . . . . . . xiii

Lista de Quadros . . . . . . . . . . . . . . . . . . . . . . . . . . xiv

INTRODUÇÃO . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Apresentação do Problema . . . . . . . . . . . . . . . . . . . . . . . .
Questões de Investigação . . . . . . . . . . . . . . . . . . . . . . . . .
Metodologia de Pesquisa . . . . . . . . . . . . . . . . . . . . . . . . .
Principais contribuições . . . . . . . . . . . . . . . . . . . . . . . . . .
Organização da dissertação . . . . . . . . . . . . . . . . . . . . . . . .

1
2
3
3
4
4

REVISÃO DE LITERATURA . . . . . . . . . . . . . . . . . . . . . .
Competências para o mercado de trabalho e a Base Nacional Co-
6
. . . . . . . . . . . . . . . . . . . . . . . . .
mum Curricular (BNCC)
A lógica de programação na educação básica . . . . . . . . . . . . . 12
Estratégias para ensinar Matemática por meio da lógica de progra-
mação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17

6

EXPERIMENTAÇÃO . . . . . . . . . . . . . . . . . . . . . . . . . . 23
Objetivo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
Caracterização . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
Fase 1 - Code.org . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
Fase 2 - Scratch . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
Análise dos experimentos . . . . . . . . . . . . . . . . . . . . . . . . . 42

CONCLUSÃO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

REFERÊNCIAS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47

APÊNDICE A – AVALIAÇÃO DO APRENDIZADO COM CODE.ORG. 52

APÊNDICE B – AVALIAÇÃO DO APRENDIZADO COM SCRATCH. 54

APÊNDICE C – PLANO DE AULA 1 – CODE.ORG . . . . . . . . 56

APÊNDICE D – PLANO DE AULA 2 – CODE.ORG . . . . . . . . 59

APÊNDICE E – PLANO DE AULA 3 – CODE.ORG . . . . . . . . 61

APÊNDICE F – PLANO DE AULA 1 – SCRATCH . . . . . . . . . 63

APÊNDICE G – PLANO DE AULA 2 – SCRATCH . . . . . . . . . 68

APÊNDICE H – PLANO DE AULA 3 – SCRATCH . . . . . . . . . 71

Lista de ilustrações

7
Figura 1 – Competências para o mercado de trabalho. . . . . . . . . . . . . . . . .
. 15
Figura 2 – Resultados da proﬁciência em matemática no SAEB de 1995 a 2015.
Figura 3 – Trabalhos realizados com Ensino de Lógica de Programação. . . . . . . 16
. . . . . . . . . . . . . . . . . . . . . . . . . . . 25
Figura 4 – Interface do Code.org.
. . . . . . . . . . 26
Figura 5 – Link para criação de turma na plataforma Code.org.
Figura 6 – Visão geral do progresso da Turma. . . . . . . . . . . . . . . . . . . . . 27
Figura 7 – Visão detalhada do progresso de um aluno. . . . . . . . . . . . . . . . . 28
Figura 8 – Temas das fases 2, 4 e 5 respectivamente. . . . . . . . . . . . . . . . . . 29
Figura 9 – Temas das fases 6, 8 e 9 respectivamente. . . . . . . . . . . . . . . . . . 29
Figura 10 – Contato com a lógica de programação.
. . . . . . . . . . . . . . . . . . 30
31
Figura 11 – Níveis de diﬁculdades das atividades.
Figura 12 – Percepção sobre o uso dos conceitos matemáticos durante as atividades. 31
. . . . . . . . . . . . . . . . 32
Figura 13 – Avaliação das atividades usando Code.org.
Figura 14 – Nível de aprendizado em matemática usando Code.org. . . . . . . . . . 33
Figura 15 – Nível de aprendizado em programação usando Code.org.
. . . . . . . . 33
. . . . . . . . . . . . . . . . . . . . . . . . . . 34
Figura 16 – Interface do Scratch 1.4.
Figura 17 – Espiral do pensamento criativo, de Resnick (a) e Espiral correspondente,

. . . . . . . . . . . . . . . . . . .

no contexto da programação de Mélo et al. (b).

. . . . . . . . . . . . . 34
. . . . . . . . . . . . . . 38
Figura 18 – Etapas da animação do antecessor e sucessor.
Figura 19 – Etapas da animação da área de um retângulo.
. . . . . . . . . . . . . . 39
Figura 20 – Classiﬁcação do nível de diﬁculdades das atividades propostas. . . . . . 40
Figura 21 – Classiﬁcação do nível de diﬁculdade do Scratch em relação ao Code.org. 40
41
Figura 22 – Identiﬁcação do uso dos conceitos matemáticos usando Scratch.
. . . .
41
Figura 23 – Classiﬁcação de aprendizado em matemática usando Scratch. . . . . . .
Figura 24 – Aprendizado dos conceitos matemáticos usando Scratch.
. . . . . . . . 42
Figura 25 – Criar conta no Code.org. . . . . . . . . . . . . . . . . . . . . . . . . . . 57
. . . . . . . . . . . . . . . . . . . . . . . . . 57
Figura 26 – Criar turma no Code.org.
Figura 27 – Local para digitar o código da turma no Code.org.
. . . . . . . . . . . 57
Figura 28 – Exemplo da 2o fase.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 58
Figura 29 – Exemplo da 4o fase.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 58
Figura 30 – Exemplo da 5o fase.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 60
Figura 31 – Exemplo da 6o fase.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 60
Figura 32 – Exemplo da 8o fase.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
Figura 33 – Exemplo da 9o fase.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 64
Figura 34 – Interface do Scratch.

Lista de ilustrações

xiii

Figura 35 – Blocos de comandos de Movimento, Aparência, Som e Caneta respecti-

vamente. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64

Figura 36 – Blocos de comandos de Controle, Sensores, Operadores e Variáveis

respectivamente.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
Figura 37 – Atividade do antecessor e sucessor.
. . . . . . . . . . . . . . . . . . . . 65
Figura 38 – Atividade da área de um retângulo. . . . . . . . . . . . . . . . . . . . . 66
Figura 39 – Exemplo de algoritmo da atividade antecessor e sucessor. . . . . . . . . 66
. . . . . . . 67
Figura 40 – Exemplo de algoritmo da atividade área de um retângulo.
. . . . . . . . 69
Figura 41 – Exemplo de algoritmo da atividade área de um trapézio.
Figura 42 – Exemplo de algoritmo da atividade idade expressa apenas em dias.
. . 69
. . . . 69
Figura 43 – Exemplo de algoritmo da atividade distância entre dois pontos.
Figura 44 – Exemplo de algoritmo da atividade estatística da eleição. . . . . . . . . 72
. . . . . . . . . . 72
Figura 45 – Exemplo de algoritmo da atividade reajuste salarial.
. . . . . . . . 73
Figura 46 – Exemplo de algoritmo da atividade formar um triângulo.

Lista de quadros

xiv

Quadro 1 – Competências Gerais da BNCC relacionadas às classes de competências

para o mercado de trabalho.

. . . . . . . . . . . . . . . . . . . . . . .

9
Quadro 2 – Pontos das Escalas Recomendados pelo Movimento Todos Pela Educação. 14
Quadro 3 – Resultados quantitativos do grau de diﬁculdades em matemática. . . . 17
Quadro 4 – Programação da Oﬁcina de Produção de Jogos. . . . . . . . . . . . . . 19
. . . . . . . . . . . . . . . . . 19
Quadro 5 – Mapeamento de conceitos matemáticos.
Quadro 6 – Roteiro do primeiro encontro usando a plataforma Code.org.
. . . . . 27
Quadro 7 – Roteiro do segundo encontro usando a plataforma Code.org. . . . . . . 28
Quadro 8 – Roteiro do terceiro encontro usando a plataforma Code.org. . . . . . . 29
Quadro 9 – Conceitos matemáticos usados em cada fase.
. . . . . . . . . . . . . . 30
Quadro 10 – Atividades realizadas com Scratch. . . . . . . . . . . . . . . . . . . . . 35
. . . . . . 37
Quadro 11 – Roteiro do primeiro encontro usando a plataforma Scratch.
. . . . . . 37
Quadro 12 – Roteiro do segundo encontro usando a plataforma Scratch.
Quadro 13 – Roteiro do terceiro encontro usando a plataforma Scratch. . . . . . . . 38

1 Introdução

1

Cada vez mais os jovens estão imersos em tecnologia, porém apenas com o saber
comum e não um saber cientíﬁco. Um exemplo evidente disso pode ser observado no uso
de uma calculadora. Muitos sabem apenas multiplicar e dividir com vírgula na calculadora,
mas não sabem como é feito e nem veriﬁcar se está correto. Outro exemplo é quando
uma pessoa vai atravessar uma rua, pois quando está vindo um veículo, ela tem ciência se
haverá tempo suﬁciente para atravessar sem o veículo colidir nela (senso comum), mas
pode não ter conhecimento de como calcular a velocidade de um veículo até um objeto
(conhecimento cientíﬁco).

De fato, a tecnologia está cada vez mais presente no ambiente escolar, forçando
o proﬁssional da educação a buscar novos recursos para a sala de aula, visto que, com
o grande crescimento tecnológico, a prática docente tradicional, puramente expositiva,
parece ser pouco atraente. Como docentes, não podemos deixar de avaliar o potencial que
essas ferramentas têm a oferecer. Nesse sentido, trago à discussão a adoção de atividades de
programação de computadores para o ensino de matemática, pois este artifício tecnológico
pode permitir lançar aos alunos novos conceitos, trabalhando uma didática diferenciada
de modo a tornar o ensino da matemática algo mais prazeroso, contribuindo também com
a criação de novas relações entre professor-aluno.

De acordo com os parâmetros curriculares nacionais para o ensino médio estabeleci-
dos pelo Ministério da Educação (MEC)1BRASIL (2018b), o desenvolvimento tecnológico
conduziu a um novo olhar social em relação aos meios de assimilar, socializar e reter infor-
mação. Essas mudanças implicam no aluno, fazendo com que ele crie seus conhecimentos e
não memorize os conceitos.

À luz desse novo olhar foi estabelecido um padrão curricular comum para orientar
todas as instituições de ensino do país. Esta Base Nacional Comum Curricular (BNCC)
destaca em seu capítulo introdutório 10 competências gerais que devem ser desenvolvidas
nos estudantes de modo a mobilizar conhecimentos de acordo com os princípios éticos,
estéticos e políticos, visando a formação humana em suas múltiplas dimensões. Essas
competências gerais têm como objetivo perpetuar no ensino uma comunicação integral,
fomentando conhecimentos, atitudes, valores e habilidades necessárias para suprir as
demandas do cotidiano, promovendo o crescimento do aluno como cidadão e qualiﬁcando-o
para o mercado de trabalho.

Segundo CHAVES (1998), o aprendizado nas salas de aula passa por alterações em
decorrência das inﬂuências tecnológicas, local onde o professor era dono do conhecimento

1 MEC - Ministério da Educação. Disponível em http://portal.mec.gov.br

Capítulo 1.

Introdução

2

passa a ser orientador, fazendo com que o aluno busque instruções e conhecimentos de
assuntos que vão além das salas de aula. CASTELLS (2002) reforça essa presença alargada
da tecnologia indicando que

a revolução tecnológica é caracterizada pela sua penetrabilidade, ou
seja, pela forma como se introduz em todos os domínios da atividade
humana, não como fonte exógena de impacto, mas como tecido em que
essa atividade é exercida.(CASTELLS, 2002)

Conviver com o avanço tecnológico aumenta cada vez mais a preocupação das
tarefas a serem aplicadas na sala de aula, pois para o professor de matemática os desaﬁos
são constantes. Porém a inserção da tecnologia no ambiente escolar e na matemática geram
grandes estímulos, aﬁnal, a aplicação de ambos corresponde diretamente a essa inserção
relacionada tanto nos dias atuais quanto no futuro, sendo de grande eﬁcácia no futuro do
aluno (SILVA, 2003)(p.2).

Por outro lado, há pesquisadores que questionam o uso de computadores, argumen-
tando quanto ao esforço da mente, pois os computadores fazem com que os alunos sejam
mecânicos e não usem o raciocínio lógico. SHIRLEY (2000) exempliﬁca essa percepção ao
citar o uso das máquinas de calcular nas salas de aula que nos dias atuais ainda passam
por grandes resistências.

As máquinas de calcular surgiram no século XX e nos anos 70, foram inseridas na
matemática devido ao seu valor acessível e a incomplexidade de manuseá-la, deixar os
cálculos de lado é uma das implicações que a inserção da tecnologia traz para o currículo
matemático (PONTE; CANAVARRO, 1997)(p.103).

Porém o uso da calculadora dentro de um planejamento bem elaborado pode ajudar
na compreensão de diversos conteúdos matemáticos, fazendo com que o aluno desenvolva
as suas ideias, gerando a capacidade investigativa de ideias matemáticas, como desenvolver
problemas, testar e formular hipóteses, investigar, enumerar e generalizar ideias com o
objetivo de buscar coerência em seus cálculos, comunicar e argumentar ideias com clarezas.

1.1 Apresentação do Problema

É visível a grande evolução da informática no decorrer dos últimos anos e a tendência
é que esta área evolua ainda mais, necessitando de proﬁssionais qualiﬁcados que possam
desempenhar um bom trabalho (BEZERRA; DIAS, 2014). Porém, sabe-se que esta é uma
área que exige bastante esforço pelo seu grau de diﬁculdade, principalmente no que se diz
respeito à lógica de programação, que é um dos requisitos fundamentais nos cursos de
computação (PEREIRA; RAPKIEWICZ, 2004).

A utilização de novas estratégias de ensino para trabalhar a Lógica de Programação
na Educação Básica pode contribuir para que os estudantes desenvolvam melhor seu

Capítulo 1.

Introdução

3

aprendizado cognitivo para as disciplinas exigidas na educação básica, despertar o interesse
dos alunos pela área da computação e também corroborar com a diminuição dos índices
de evasão nos cursos superiores (GARLET; BIGOLIN; SILVEIRA, 2016).

Segundo PEREIRA (2013), a Lógica de Programação deveria andar junto com
outras disciplinas da Educação Básica, tais como Biologia, Química e Física. Neste contexto,
o ensino de programação para crianças poderia desenvolver o pensamento computacional
e passos lógicos para a resolução automatizada de problemas (KAFAI; BURKE, 2013).

1.2 Questões de Investigação

O presente trabalho de pesquisa tem a pretensão de obter um maior entendimento
sobre o impacto no aprendizado dos estudantes da educação básica ao adotar atividades
de lógica de programação no ensino de Matemática. Especiﬁcamente, a principal ﬁnalidade
desta investigação é buscar respostas para as seguintes questões:

• Q1. Como a lógica de programação pode ser introduzida na formação regular de
estudantes do ensino médio e utilizada como instrumento pedagógico alternativo
para aprender Matemática?

• Q2. De que maneira as Diretrizes Curriculares Nacionais para o Ensino Médio
orientam os sistemas de ensino quanto ao desenvolvimento das propostas pedagógicas
nacionais que exploram as potencialidades da prática de lógica de programação no
aprendizado de Matemática?

1.3 Metodologia de Pesquisa

A ﬁm de responder às questões objeto deste trabalho de pesquisa, foi adotada uma
abordagem que procurou introduzir conceitos fundamentais de algoritmos e estruturas de
dados, necessários para o desenvolvimento de soluções computacionais, ao longo do plano
de aulas de Matemática para estudantes do ensino médio de uma escola da rede pública
da cidade de Niterói.

Em síntese, a metodologia de pesquisa adotada baseou-se nas seguintes atividades:

1. Foi realizada uma pesquisa bibliográﬁca sobre estratégias baseadas em atividades
de lógica e resolução de problemas, com a utilização de tecnologias computacionais,
utilizadas por educadores para o desenvolvimento das competências necessárias ao
estudante em seu aprendizado de Matemática.

2. Foram desenvolvidas atividades educativas para proporcionar aos estudantes a
oportunidade de adquirir competências relacionadas ao desenvolvimento do raciocínio

Capítulo 1.

Introdução

4

lógico, especiﬁcamente na resolução de problemas do dia-a-dia por meio de algoritmos
e estruturas de dados.

3. Foi realizado um experimento cientíﬁco em um ambiente real para veriﬁcação dos
efeitos nos estudantes e seu aprendizado de Matemática decorrentes da prática de
lógica de programação em sala de aula.

1.4 Principais contribuições

As principais contribuições deste trabalho de pesquisa foram:

1. Revisão da literatura: sobre as competências da Base Nacional Comum Curricular
(BNCC) e do mercado de trabalho, como estão inserindo a lógica de programação na
educação básica e quais estratégias utilizadas para ensinar matemática por meio da
lógica de programação.

2. “Show da Programática”: é um ambiente virtual contendo um avatar que representa
o próprio professor da turma. No qual propõe os estudantes a descrever a lógica
necessária para o avatar apresentar corretamente determinados conceitos da matemá-
tica. Deste modo, os estudantes eram desaﬁados a ensinar o professor a ensinar. Com
objetivo de conectar o lúdico, o pensamento computacional e conceitos matemáticos.

3. Planos de aula: roteiros contendo o passo a passo das atividades realizadas no
experimento com as plataformas Code.org e Scratch para aqueles que pretendem
reproduzir esta experiência.

4. Código Fonte das atividades: algoritmo de cada atividade realizada com a plataforma

Scratch.

5. Percepções e feedbacks dos estudantes: aspectos considerados relevantes, tais como
assiduidade, concentração, comprometimento e motivação, foram obtidos com formu-
lários e durante as aulas, no qual sinaliza o efeito do ensino de matemática utilizando
a lógica de programação.

1.5 Organização da dissertação

O presente trabalho de pesquisa está estruturado da seguinte forma: O Capítulo 2
se apoia no relatório do Banco Mundial divulgado em 2018 sobre competências cognitivas,
técnicas e socioemocionais necessárias para mercado de trabalho brasileiro atual e futuro,
nos objetos de conhecimento e habilidades para o ensino médio conforme recomenda a base
nacional comum curricular, e em trabalhos sobre estratégias utilizadas por educadores
para o desenvolvimento das competências dos estudante em Matemática.

Capítulo 1.

Introdução

5

No capítulo 3 é relatado o experimento realizando com estudantes do ensino
médio de uma escola pública do Rio de Janeiro. Neste experimento foram trabalhadas
algumas atividades introdutórias de lógica de programação, em ambientes computacionais,
planejadas para explorar competências e habilidades do currículo regular de Matemática.

As conclusões ﬁnais deste trabalho estão reunidas no Capítulo 4 aonde foi feita uma
revisão das questões de investigação à luz dos resultados das atividades da metodologia
de pesquisa aplicada. As principais reﬂexões e sugestão de estudos futuros encerram o
capítulo.

2 Revisão de literatura

6

2.1 Competências para o mercado de trabalho e a Base Nacional

Comum Curricular (BNCC)

A Federação das Indústrias do Estado do Rio de Janeiro (FIRJAN, 2018) fez
uma pesquisa em 2011 que aponta a falta de competência matemática e de raciocínio
lógico como algumas das deﬁciências apresentadas pelos trabalhadores, o que tem levado a
carência de proﬁssionais qualiﬁcados para atuar nas empresas.

Essa preocupação sobre a falta de oferta de proﬁssionais qualiﬁcados para o mercado
de trabalho também está presente no relatório do Banco Mundial (MUNDIAL, 2018),
o qual pede urgência de políticas públicas que atente ao desenvolvimento de competên-
cias cognitivas, socioemocionais e técnicas em linha com a demanda dos empregadores
brasileiros.

O Banco Mundial reforça que uma parte dessa agenda de política pública deve focar
em dar mais apoio a melhorias nas trajetórias de aprendizagem dos jovens, incentivar a sua
conclusão do ensino médio com qualidade e modernizar o sistema de desenvolvimento de
competências laborais para que, em colaboração com o setor privado, produza trabalhadores
com as competências que as empresas estão procurando, e provavelmente procurarão no
futuro, e seja capaz de acompanhar a evolução das demandas das empresas em uma
economia globalmente competitiva.

De fato, é ﬂagrante que a mudança tecnológica e a crescente inclusão de tecnologia
no local de trabalho estão alterando o conjunto de competências que os empregadores
procuram e o conteúdo das tarefas das ocupações brasileiras. ALMEIDA, CORSEUIL e
POOLE (2017), por exemplo, mostram que as empresas com mais altos níveis de adoção
de tecnologia digital, e as primeiras expostas à Internet, se baseiam, em menor medida,
em atividades de rotina e habilidades manuais. Um número crescente de ﬁrmas procura
colaboradores com competências cognitivas e analíticas de mais alto nível, tais como
raciocínio lógico claro, capacidade de realizar com eﬁciência atividades não rotineiras,
como interagir com computadores.

Essa relevante transformação do mercado de trabalho está moldando o futuro do
trabalho no país, gerando novos desaﬁos à educação e ao sistema de desenvolvimento de
competências do Brasil. Essas novas prioridades para esses sistemas devem estar centrados
em novas competências, bem como, em conhecimentos para lidar com tecnologias digitais,
para dar maior apoio à empregabilidade e à produtividade do trabalho por meio de maior

Capítulo 2. Revisão de literatura

7

adoção e uso de tecnologia digital.

O relatório do Banco Mundial também traz uma observação relevante sobre a
evasão escolar dos estudantes brasileiros. Segundo a pesquisa, a principal razão de evasão
no ensino médio está vinculada à falta de interesse pelos conteúdos acadêmicos que a
escola oferece. Um olhar pelos atuais currículos do Ensino Fundamental e do Ensino
Médio percebe-se que facilmente a direção pedagógica está no sentido da memorização em
detrimento do pensamento crítico e, raramente, aprofundam tópicos especíﬁcos.

Outro fator que pode contribuir com o desinteresse do estudante está no desali-
nhamento da sua expectativa com o que ele acredita ser importante aprender em sala
de aula como necessário para o mercado de trabalho. Isso aumenta sua probabilidade de
abandonar a escola e ir para o mercado de trabalho com a bagagem atual.

A Figura 2.1 ilustra a classiﬁcação das competências com foco para desenvolvimento

dos estudantes que atuarão no mercado de trabalho:

Figura 1 – Competências para o mercado de trabalho.

O Banco Mundial (MUNDIAL, 2018) descreve essas competências como segue:

Competências cognitivas: constituem o alicerce do aprendizado da

Capítulo 2. Revisão de literatura

8

maioria dos estudantes. Essas competências normalmente são aprendidas
no ensino fundamental e desenvolvidas ao longo da vida. As competências
cognitivas permitem que os estudantes pensem criticamente e costumam
ser acadêmicas, incluindo aspectos básicos como ler, contar e dizer as
horas. São as competências centrais que o cérebro usa para pensar,
raciocinar e prestar atenção. Serão usadas todos os dias.

Competências socioemocionais: são aprendidas durante as intera-
ções sociais e interpessoais, bem como, com as estruturas sociais. Essas
competências são comportamentos, atitudes e valores que a pessoa pode
expressar em qualquer momento e determinam a maneira como pode
reagir em várias situações. Podem incluir consciência de si, competências
relacionais e conversacionais. As competências socioemocionais fazem
parte das “competências para a vida” necessárias para a boa condução
da própria vida, para além dos limites cuidadosamente estruturados da
escola e da vida familiar quando jovem. Aplicam-se a uma ampla gama de
disciplinas e podem ser aprendidas em diversas facetas da vida, inclusive
em casa, na escola ou no local de trabalho.

Competências técnicas: são o conhecimento e a experiência necessá-
rios para realizar uma tarefa. Podem ser bastante especíﬁcas e incluir o
domínio de temas e de certos materiais ou tecnologias. As competências
técnicas muitas vezes são aprendidas depois das cognitivas e socioemocio-
nais em anos posteriores de escolaridade básica, tais como ensino médio,
escola técnica ou educação terciária.

Estes três tipos de competência interagem para formar uma pessoa equi-
librada e permitir que seja bem-sucedida e lide com diversos desaﬁos e
situações. As competências reforçam-se umas às outras, sendo as cogniti-
vas as mais necessárias para formar o início da aprendizagem. A aquisição
de uma base sólida de competências cognitivas e socioemocionais pode
determinar o rumo da trajetória de toda uma vida de realizações, pois
facilita a aquisição de competências técnicas mais adiante.(MUNDIAL,
2018)

Essas classes de competências descritas pelo Banco Mundial estão relacionadas com
as competências gerais que integram o capítulo introdutório da BNCC. Essas competências
foram deﬁnidas a partir dos direitos éticos, estéticos, políticos assegurados pelas Diretrizes
Curriculares Nacionais e dos conhecimentos, habilidades, atitudes e valores essenciais
para a vida no século 21. Por isso são recomendadas pelo Ministério da Educação para
serem trabalhadas em todas as áreas de conhecimento, isto é, em Linguagens, Matemática,
Ciências Humanas e Ciências da Natureza.

A BNCC é um documento de caráter normativo que deﬁne o conjunto orgânico e
progressivo de aprendizagens essenciais que todos os alunos devem desenvolver ao longo
das etapas e modalidades da Educação Básica, de modo a que tenham assegurados seus
direitos de aprendizagem e desenvolvimento, em conformidade com o que determina o
Plano Nacional de Educação (PNE)1. Este documento normativo aplica-se exclusivamente
à educação escolar, tal como a deﬁne o § 1o do Artigo 1o da Lei de Diretrizes e Bases da
Educação Nacional2 (LDB, Lei no 9.394/1996), e está orientado pelos princípios éticos,

1 PNE - Plano Nacional de Educação. Disponível em http://pne.mec.gov.br/
2 LDB

de Diretrizes

Bases

Lei

da

e

-

Educação Nacional. Disponível

em

http://portal.mec.gov.br/index.php?option=com_content&view=article&id=12907:legislacoes&catid=70:legislacoes

Capítulo 2. Revisão de literatura

9

políticos e estéticos que visam à formação humana integral e à construção de uma sociedade
justa, democrática e inclusiva, como fundamentado nas Diretrizes Curriculares Nacionais
da Educação Básica (DCN)3.

A BNCC foi homologada em 20 de dezembro de 2017, em Brasília pelo Ministro
da Educação José Mendonça Filho. Isso signiﬁca que o Brasil tem agora um ponto de
referência que explicita os direitos de aprendizagem de todos os alunos da Educação
Infantil e do Ensino Fundamental. Ela servirá de base para a construção dos currículos nas
redes públicas e privadas do país. Uma vez homologada, a BNCC começa a valer em todo
país. De acordo com o parecer e a resolução normativa do Conselho Nacional de Educação
(CNE)4, as redes já podem começar a trabalhar na implementação da política. A revisão
dos currículos deve acontecer preferencialmente em 2019 e até o prazo máximo do ano
letivo de 2020.

Quadro 1 – Competências Gerais da BNCC relacionadas às classes de competências para

o mercado de trabalho.

Competências
Gerais
(BNCC)

Argumentação

Descrição

Argumentar com base em fatos, dados e
informações conﬁáveis para formular,
negociar e defender ideias, pontos de vista e
decisões comuns, com base em direitos
humanos, consciência socioambiental,
consumo responsável e ética.

Classes de
competências
(Banco
Mundial)

Cognitivas

Cultura Digital Compreender, utilizar e criar tecnologias

digitais de forma crítica, signiﬁcativa e ética
para comunicar-se, acessar e produzir
informações e conhecimentos, resolver
problemas e exercer protagonismo e autoria.

Valorizar as diversas manifestações artísticas
e culturais para fruir e participar de práticas
diversiﬁcadas da produção artístico-cultural.

Repertório
Cultural

Cognitivas e
técnicas

Socioemocionais

3 DCN - Diretrizes Curriculares Nacionais

em
http://portal.mec.gov.br/index.php?option=com_docman&view=download&alias=13448-diretrizes-
curiculares-nacionais-2013-pdf&Itemid=30192

Educação Básica. Disponível

da

4 CNE - Conselho Nacional de Educação. Disponível em http://www.cnedu.pt/pt/

Capítulo 2. Revisão de literatura

10

Trabalho e
Projeto de Vida

Empatia e
Cooperação

Conhecimento

Comunicação

Autoconhecimento
e Autocuidado

Responsabilidade
e Cidadania

Pensamento
Cientíﬁco,
Crítico e
Criativo

Valorizar e apropriar-se de conhecimentos e
experiências para entender o mundo do
trabalho e fazer escolhas alinhadas à
cidadania e ao seu projeto de vida com
liberdade, autonomia, criticidade e
responsabilidade.
Exercitar a empatia, o diálogo, a resolução
de conﬂitos e a cooperação para fazer-se
respeitar e promover o respeito ao outro e
aos direitos humanos, com acolhimento e
valorização da diversidade, sem preconceitos
de qualquer natureza.

Valorizar e utilizar os conhecimentos sobre o
mundo físico, social, cultural e digital para
entender, explicar a realidade, continuar
aprendendo e colaborar com a sociedade.
Utilizar diferentes linguagens para
expressar-se e partilhar informações,
experiências, ideias, sentimentos e produzir
sentidos que levem ao entendimento mútuo.
Conhecer-se, compreender-se na diversidade
humana e apreciar-se para cuidar de sua
saúde física e emocional, reconhecendo suas
emoções e as dos outros, com autocrítica e
capacidade para lidar com elas.
Agir pessoal e coletivamente com autonomia,
responsabilidade, ﬂexibilidade, resiliência e
determinação para tomar decisões com base
em princípios éticos, democráticos,
inclusivos, sustentáveis e solidários.

Exercitar a curiosidade intelectual e utilizar
as ciências com criticidade e criatividade
para investigar causas, elaborar e testar
hipóteses, formular e resolver problemas e
criar soluções.

Socioemocionais

Socioemocionais
e cognitivas

Socioemocionais,
cognitivas e
técnicas

O Quadro 1 relaciona as competências gerais da BNCC com as classes de compe-

tências do relatório do banco mundial.

Capítulo 2. Revisão de literatura

11

Como pode ser observado, cada competência geral pode ser relacionada a uma ou
mais classes de competências. A classe de competência cognitiva é descrita pelo Banco
Mundial como uma competência essencial para o dia a dia como, por exemplo, ler, contar,
pensar, relacionar e prestar atenção. Com base nessa deﬁnição percebe-se uma relação,
por exemplo, a competência geral de Argumentação que tem como uns dos objetivos
defender ideias e pontos de vista, que está associado ao pensar, relacionar e contar. O
mesmo acontece com as competências gerais Cultura Digital, Conhecimento, Comunicação,
Autoconhecimento e Autocuidado, Responsabilidade e Cidadania, Pensamento Cientíﬁco,
Crítico e Criativo que estão associados as competências essenciais.

Neste mesmo sentido, as competências gerais Repertório Cultural, Trabalho e
Projeto de Vida, Empatia e Cooperação, Conhecimento, Comunicação, Autoconhecimento
e Autocuidado, Responsabilidade e Cidadania, Pensamento Cientíﬁco, Crítico e Criativo,
estão relacionadas com a classe de competência socioemocional pois estas compreendem
comportamentos, atitudes e valores decorrentes das interações sociais.

Por ﬁm, relacionamos as competências gerais denominadas por Cultura Digital
e Pensamento Cientíﬁco, Crítico e Criativo com a classe de competências técnicas, pois
é a classe que compreende a capacidade de resolução de problemas e as habilidades de
conhecimentos e experiências para executar uma tarefa.

Ainda que as Competências Gerais da BNCC sejam válidas para toda a Educação
Básica, a sua progressão para o Ensino Médio deverá ser revista quando homologar, a
homologação está prevista para acontecer ao longo de 2018. A ﬁnalidade das competências
gerais é ter um parâmetro, que irá guiar o trabalho das escolas e dos professores em todos
os anos e em todas as disciplinas (componentes curriculares como chamados atualmente)
da Educação Básica.

Mobilização de conhecimentos (conceitos e procedimentos), habilidades
(práticas, cognitivas e socioemocionais), atitudes e valores para resolver
demandas complexas da vida cotidiana, do pleno exercício da cidadania
e do mundo do trabalho.(BRASIL, 2018a).

A BNCC estava prevista no Plano Nacional de Educação (BRASIL, 2018c) e
começou a ser construída em 2015, seguindo um processo conduzido pelo MEC, Conselho
Nacional dos Secretários Estaduais de Educação (Consed)5, União Nacional dos Dirigentes
Municipais de Educação (Undime)6 e CNE.

Assim como o Banco Mundial e os que contribuíram para a criação da BNCC,
a Organização para Cooperação e Desenvolvimento Econômico (OCDE) também tem
manifestado sua preocupação com as competências a serem desenvolvidas nos estudantes

5 Consed - Conselho Nacional dos Secretários Estaduais de Educação. Disponível

em

http://www.consed.org.br/

6 Undime - União Nacional dos Dirigentes Municipais de Educação. Disponível em https://undime.org.br/

Capítulo 2. Revisão de literatura

12

de todo o mundo. Por meio do seu Programa Internacional de Avaliação de Estudantes
(Programme for International Student Assessment) (PISA, 2018), tem procurado avaliar
múltiplos aspectos e a qualidade do aprendizado dos estudantes em diferentes países.

O PISA é desenhado a partir de um modelo dinâmico de aprendizagem, no qual no-
vos conhecimentos e habilidades devem ser continuamente adquiridos para uma adaptação
bem-sucedida em um mundo em constante transformação. Para serem aprendizes efetivos
por toda a vida, os jovens precisam de uma base sólida em domínios-chave e devem ser
capazes de organizar e gerir seu aprendizado. Isso requer consciência da própria capacidade
de raciocínio e de estratégias e métodos de aprendizado.

O objetivo do PISA é produzir indicadores que contribuam para a discussão da
qualidade da educação nos países participantes, de modo a subsidiar políticas de melhoria
do ensino básico. A avaliação procura veriﬁcar até que ponto as escolas de cada país
participante estão preparando seus jovens para exercer o papel de cidadãos na sociedade
contemporânea.

Além de observar tais competências, o PISA coleta informações para a elaboração
de indicadores contextuais que possibilitam relacionar o desempenho dos alunos a variáveis
demográﬁcas, socioeconômicas e educacionais. Essas informações são coletadas por meio
da aplicação de questionários especíﬁcos para os alunos, para os professores e para as
escolas.

2.2 A lógica de programação na educação básica

Aristóteles (ﬁlósofo grego - 342 a.C) sistematizou os conhecimentos existentes,
elevando-os à categoria de ciência. Em sua obra chamada Órganon ("ferramenta para o
correto pensar"), estabeleceu princípios tão gerais e tão sólidos que até hoje são consi-
derados válidos. Aristóteles se preocupava com as formas de raciocínio que, a partir de
conhecimentos considerados verdadeiros, permitiam obter novos conhecimentos. A partir
dos conhecimentos tidos como verdadeiros, caberia a Lógica a formulação de leis gerais
de encadeamentos racionais que levariam à descoberta de novas verdades. Essa forma de
encadeamento é denominada argumento.

Argumento é deﬁnido na lógica e na ﬁlosoﬁa como um conjunto de uma ou mais
sentenças declarativas conhecidas como proposições, ou ainda, premissas, acompanhadas
de uma outra frase declarativa conhecida como conclusão. E pode ser um recurso valioso no
exame daquilo que se tem como verdadeiro. Nesse sentido, uma possível maneira de deﬁnir
o objetivo da lógica é estudar e sistematizar a validade ou invalidade da argumentação,
além de proporcionar o estudo da inferência.

O estudo da lógica não se faz necessariamente apenas na ﬁlosoﬁa, mas também

Capítulo 2. Revisão de literatura

13

em outras áreas do conhecimento. Há vários tipos de lógicas dos quais os ﬁlósofos têm
se dedicado ao longo dos séculos. Uma divisão aceitável é separar os argumentos entre
dedutivos e não dedutivos. Esses últimos podem incluir as generalizações e previsões,
denominadas por induções. Pode-se dizer que os argumentos dessa classe são caracterizados
pela intensidade que suportam as conclusões a partir de premissas como prováveis, ou
provavelmente verdadeiras. Um exemplo famoso é:

Todos os cisnes vistos até hoje são brancos. (1)

Portanto, todos os cisnes são brancos. (2)

A conclusão (2) é claramente uma generalização da premissa (1). Vale destacar
que nesse caso temos um problema em deﬁnir quantas observações são necessárias para
concluir (2).

A Lógica é deﬁnida de diversas maneiras pelos estudiosos. A seguir foi destacado

alguns autores que propuseram uma deﬁnição:

O estudo da lógica é o estudo dos métodos e princípios usados para
distinguir o raciocínio correto do incorreto.

Irving Copi

A lógica trata de argumentos e inferências. Um de seus propósitos básicos
é apresentar métodos capazes de identiﬁcar os argumentos logicamente
válidos, distinguindo-os dos que não são logicamente válidos.

Wesley Salmon

A tarefa da lógica sempre foi a de classiﬁcar e organizar as inferências
válidas, separando-as daquelas que não o são. A importância desta or-
ganização não deve ser subestimada, pois usam-se as inferências (de
preferência válidas) tanto na vida comum como nas ciências formais,
sendo um exemplo a matemática.

Jesus Eugênio de Paula Assis

Para Aristóteles, a lógica é a ciência da demonstração; (...) para Lyard é a
‘ciência das regras do pensamento’. Poderíamos ainda acrescentar: (...) é a
ciência das leis ideais do pensamento e a arte de aplicá-las corretamente
na procura e demonstração da verdade.

Maria Lucia de Arruda Aranha e Maria Helena Pires

Todas estas deﬁnições se referem a inferências válidas, a raciocínios corretos e as

leis do pensamento.

O encadeamento racional de argumentos é o fundamento para programação de
computadores. A lógica de programação é utilizada para materializar regras e instruções

Capítulo 2. Revisão de literatura

14

que emulam comportamentos determinísticos nos sistemas computacionais. Tais comporta-
mentos são denominados algoritmos. Um algoritmo pode ser comparado a uma receita,
pois descreve passo a passo os procedimentos necessários para resolução de uma tarefa. Ele
não responde a pergunta: "o que fazer?", mas sim "como fazer". Em termos mais técnicos,
um algoritmo é uma sequencia lógica, ﬁnita e deﬁnida de instruções que devem ser seguidas
para resolver um problema ou executar uma tarefa. Embora não percebemos, utilizamos
algoritmo de forma intuitiva diariamente quando executamos tarefas comuns, passando
totalmente despercebido, porém estando presente o tempo todo.

A primeira vista, a lógica de programação apresenta-se aplicável apenas à construção
de sistemas computacionais, sem muito benefício para o aprendizado em matemática.
Entretanto é possível aliar o potencial lúdico da linguagem de programação à necessidade
de metodologias de ensino e aprendizagem em matemática, visando um maior envolvimento
dos alunos no aprendizado dos conteúdos curriculares, unindo deste modo a lógica de
programação ao aprendizado de matemática.

Geralmente quando se pergunta a um estudante sobre quais as disciplinas que
ele sente mais diﬁculdade é comum à matemática ser uma das mais citadas. Isso não
deveria acontecer, pois ela está presente em diversos aspectos no cotidiano do estudante.
Resultados mais preocupantes são encontrados quando observamos os índices de avaliação
como o Sistema de Avaliação da Educação Básica (SAEB).

Embora nota-se um progresso nas proﬁciências em matemática nos anos iniciais
do Ensino Fundamental ao longo das edições de 1995 a 2015 do SAEB, no Ensino Médio
houve um retrocesso neste mesmo período, como ilustra a Figura 2.

Os resultados alcançados no SAEB ainda estão muito longe do recomendado, pois
o Movimento Todos pela Educação, criado em 2006 é uma aliança de representantes da
sociedade civil, da iniciativa privada, organizações sociais, educadores e gestores públicos
de Educação que tem como objetivo garantir Educação Básica de qualidade para todos os
brasileiros até 2022. Com base nesse objetivo foi deﬁnido os pontos das escalas recomendados
para as três séries avaliadas pelo SAEB, que estão representadas no Quadro 2.

Quadro 2 – Pontos das Escalas Recomendados pelo Movimento Todos Pela Educação.

Série
5o ano
9o ano
3o ano EM

Língua Portuguesa Matemática

200
275
300

225
300
350

Fonte: Todos Pela Educação.

De acordo com GARCIA, CORREIA e SHIMABUKURO (2008) o uso de uma
linguagem de programação motiva os alunos, além de melhorar a capacidade de resolução

Capítulo 2. Revisão de literatura

15

Figura 2 – Resultados da proﬁciência em matemática no SAEB de 1995 a 2015.

de problemas e o raciocínio lógico. Para FRANÇA e TEDESCO (2015) os Estados Unidos
e países da Europa perceberam a relevância desse assunto e têm buscado promover o
ensino de Computação em suas escolas (CSTA, 2005). Já no Brasil, tal ação é ofertada
apenas em cursos técnicos, de graduação e de pós-graduação na área, sendo observadas
algumas iniciativas envolvendo estudantes dos níveis fundamental e médio.

O ACM Model Curriculum for K-12 Computer Science (CSTA, 2011) reforça
que ensinar os conceitos fundamentais da Ciência da Computação desde a educação
básica melhora o aprendizado escolar dos estudantes e possibilita o uso mais eﬁcaz da
tecnologia em benefício da sociedade e que, além disso, o ensino de Computação na escola
pode desenvolver a capacidade de resolver problemas pelos estudantes, além de apoiar e
relacionar-se com outras ciências.

No Brasil ainda temos poucos trabalhos focados no ensino de conceitos de computa-
ção a alunos do ensino médio, conforme OLIVEIRA et al. (2014), e no ensino fundamental
os números são ainda menores. Foram encontrados 23 trabalhos realizados com essa temá-
tica no período entre 2005 e 2013, e entre eles, apenas 6 realizaram atividades apenas no
ensino fundamental, e 2 que incluíam ambos.

Já no trabalho de BARCELOS e SILVEIRA (2013) os autores investigaram, em
uma instituição de São Paulo, de que forma as competências relacionadas à Matemática são
mobilizadas por estudantes do ensino médio no processo de desenvolvimento do pensamento
computacional através da construção de jogos digitais. Para MOR e NOSS (2008), há
evidências que a lógica de programação possa atuar como um reforço para a compreensão de

Capítulo 2. Revisão de literatura

16

Figura 3 – Trabalhos realizados com Ensino de Lógica de Programação.

alguns conceitos matemáticos, constituindo-se como uma narrativa matemática e descreve
essa narrativa como uma transição mais fácil da imprecisão da linguagem coloquial para o
formalismo matemático. Eles também descrevem como os estudantes do ensino fundamental
identiﬁcam o padrão de formação de sequências matemáticas utilizando uma ferramenta
computacional de programação visual.

LEWIS e SHAH (2012) também citam uma correlação entre as notas de alunos de
6o ano em testes de Matemática padronizados e o seu desempenho em testes aplicados
em uma oﬁcina de programação. Os autores apresentam alguns pontos de intersecção
do currículo de Matemática e tópicos da oﬁcina de programação, porém a metodologia
adotada pelo estudo não permite demonstrar como ocorreria a associação entre esses
conteúdos. Sob outra perspectiva, SETTI (2009) apresenta em sua tese uma atividade
com alunos cursando uma disciplina introdutória em programação, onde muitos alunos
conseguiram identiﬁcar a regra matemática de formação de uma sequência, produzindo
um algoritmo que implementasse a criação da sequência.

Nos trabalhos de BARCELOS e SILVEIRA (2012a) e (BARCELOS; SILVEIRA,
2012b) foi proposta a sistematização das competências e habilidades comuns ao pensamento
computacional e à Matemática. Comparando as diretrizes curriculares para o ensino médio
do Brasil e do Chile, foram identiﬁcadas três grupos de competências comuns: alternar

Capítulo 2. Revisão de literatura

17

a representação de problemas e suas soluções entre diferentes representações semióticas
(verbal, algorítmica, matemática); identiﬁcar regularidades e padrões; elaborar e interpretar
modelos que descrevem e representam problemas a serem resolvidos.

De acordo com CAVALCANTE, COSTA e ARAUJO (2016) o pensamento compu-
tacional pode ser aplicado na resolução de problemas dos mais variados campos do saber, e
não exclusivamente na área da computação. A aplicabilidade transversal e multidisciplinar
reaﬁrma o “pensar computacionalmente” como uma habilidade fundamental para todas
as pessoas, não apenas para proﬁssionais da computação, sendo considerado como um
requisito essencial para a formação básica dos proﬁssionais de todas as áreas.

O trabalho de LOPES et al. (2016) avaliou o impacto da aprendizagem de mate-
mática usando o ensino de algoritmo e lógica de programação em uma certa instituição
com alunos do 5o ano do ensino fundamental, onde obteve resultados positivos. O Quadro
3 ilustra o resultado ﬁnal do grau de diﬁculdades dos alunos em matemática.

Quadro 3 – Resultados quantitativos do grau de diﬁculdades em matemática.

Grau de diﬁculdade 1o Semestre 3o Bimestre 4o Bimestre

Muita diﬁculdade
Diﬁculdade moderada
Pouca diﬁculdade

27%
62%
11%

20%
42%
38%

23%
50%
27%

Uma das metodologias aplicadas que contribuiu para esse resultado foi a abordagem

com jogos digitais.

Por sua vez, o uso de jogos digitais no desenvolvimento de competências relacionadas
ao raciocínio lógico (SOUZA; DIAS, 2012) e a Lógica de Programação (HERNANDEZ et
al., 2010) é um artiﬁcio que está sendo muito utilizado por educadores devido ao forte
apelo desse tipo de sistema interativo para envolver e motivar a geração que hoje frequenta
a educação superior e técnica, caracterizada por PRENSKY (2001) como nativos digitais.

2.3 Estratégias para ensinar Matemática por meio da lógica de

programação

O entretenimento e o aprendizado lúdico por meio do computador tem se tornado
uma forte tendência, incentivada por recursos tecnológicos cada vez mais soﬁsticados e
acessíveis. Esses espaços digitais devem proporcionar um ambiente crítico, fazendo com que
os estudantes se sensibilizem para a construção de seus conhecimentos com oportunidades
prazerosas para o desenvolvimento de suas cognições.

...por muitos anos os jogos têm sido usados apenas para diversão, mas só

Capítulo 2. Revisão de literatura

18

recentemente têm sido aplicados os elementos estratégicos de jogos em
computadores com propósitos instrutivos.(LERNER, 1991)

Mesmo para desenvolver pequenos games é necessário um mínimo de conhecimento
de programação por parte do desenvolvedor. Felizmente existem algumas alternativas que
podem facilitar o desenvolvimento de games até mesmo por crianças de forma lúdica e
divertida.

PEREIRA (2018) revela que os jogos digitais têm uma contribuição muito impor-
tante para os ﬁns educativos. Os efeitos dos games nas aulas de matemática de crianças de
uma escola estadual de São Paulo tiveram resultados promissores. Pereira relata também
que os jogos conferiram novo sentido ao ensino e à aprendizagem da matemática.

Os alunos estudam matemática e sentem que não vai usá-la na vida
prática; eles se sentem desmotivados. Ao contrário, a compreensão da
matemática passa a ter um signiﬁcado quando os alunos conseguem
praticar o raciocínio lógico, por meio do seu exercício efetivado com os
jogos.(PEREIRA, 2018)

A matemática, assim como outros conteúdos curriculares, utiliza vocabu-
lário técnico, pouco familiar aos alunos. Os jogos ofereceram oportunidade
de dar sentido à linguagem matemática das resoluções de problemas,
transformando a compreensão do conceito matemático, aos níveis mais
abstratos comunicados por linguagem alfanumérica.(PEREIRA, 2018)

BARCELOS e SILVEIRA (2013) enfatizam isso no trabalho deles apresentando
o cronograma relacionando as atividades realizadas com os conceitos de programação
abordados, conforme o Quadro 4. Já no Quadro 5 está relacionando as atividades realizadas
com os conceitos matemáticos.

Apesar das diﬁculdades enfrentadas para inserir os conteúdos básicos da área de
computação nos anos escolares, o que se tem feito são trabalhos que abordam o pensamento
computacional. SCAICO et al. (2012), por exemplo, utilizou o software Scratch2, com alunos
do ensino médio. O Scratch possui uma interface gráﬁca baseada em blocos de instruções
para o computador aonde o estudante vai agrupando-os de acordo com seus objetivos.
JÚNIOR et al. (2005) utilizou este mesmo experimento para conduzir uma Oﬁcina de
Lógica de Programação com alunos do segundo ano, no Rio de Janeiro, em que foram
abordados tópicos de resolução de problemas, linguagem natural e até o desenvolvimento
de algoritmos. ANDRADE, SILVA e OLIVEIRA (2013) também desenvolveu atividades
pedagógicas apoiadas no software Scratch com seus alunos e notou que o interesse pela
disciplina de matemática aumentou consideravelmente, além de despertar o interesse de
criar jogos para outras disciplinas.

2 Scratch – https://scratch.mit.edu/

Capítulo 2. Revisão de literatura

19

Quadro 4 – Programação da Oﬁcina de Produção de Jogos.

Semana

Atividade / conteúdo Novos conceitos

1

2

3

4

Criar uma colisão entre dois
sprites
Pesca – O sonho do gato

Adivinhe o número

Pedra, papel e tesoura

5 – 6

Simulação de Guerra

7 – 8
9 – 11
12

Breakout
Pacman
Apresentação dos projetos
ﬁnais

introduzidos
Algoritmo, comando,
condicional, condição lógica
Variáveis e operações
Repetição – “loop inﬁnito”
Repetição com teste lógico
Expressões relacionais
Sincronização via
mensagens
Operador booleano OU
Estrutura condicional
se...senão
–
Operador booleano E
–

Quadro 5 – Mapeamento de conceitos matemáticos.

Jogo

Conceito matemático

O sonho do gato

Adivinhe o número
Pedra, papel e tesoura
Simulação de Guerra

Breakout

Pacman

Proporcionalidade e expressões algébricas
Intervalos numéricos (números reais) Pontos
no plano cartesiano
Intervalos numéricos (números inteiros)
Princípio fundamental da contagem
Intervalos no plano cartesiano Variação de
posições nos eixos x e y
Círculo trigonométrico Ângulo suplementar e
expressões algébricas
Resto da divisão Distância entre pontos no
plano cartesiano

Um experimento também relevante foi conduzido por SILVA, SILVA e MELO
(2011), que procurou ensinar conceitos da Computação no ensino médio introduzindo
noções de algoritmos combinado com música e robótica. O conceito de algoritmo foi
abordado com o instrumento musical pandeiro, de maneira que a música foi associada com
a ideia de executar um conjunto de instruções para reproduzir a saída desejada, que seria
a melodia. Assim, a sequência de passos para realizar a melodia representou as instruções
e passos que um algoritmo possui.

Capítulo 2. Revisão de literatura

20

No Rio Grande do Sul, ANDRADE, CARVALHO e SILVEIRA (2013) propuseram
atividades direcionadas ao ensino fundamental que envolvem os princípios do pensamento
computacional. Já VIEIRA, PASSOS e BARRETO (2013) realizaram peças teatrais no
Amazonas possibilitando aos participantes compreender os fundamentos da Computação
de forma clara e descontraída. De outra forma, SOUZA et al. () têm utilizado o AgentShe-
ets3 em suas pesquisas em escolas do Rio de Janeiro possibilitando que os educandos
expressem seus interesses e capacidades de comunicação por meio da programação de jogos
e simulações.

Nos últimos anos foram criadas plataformas para o ensino de programação que
adotam estratégias compostas por traços lúdicos, possui ambiente amigável e adotam
a programação através de blocos. O Scracth, App Inventor4, Alice5, Blockly Games6
são alguns exemplos dessas plataformas. MARTINS, REIS e MARQUES (2016) aborda
Code.org7 que é uma outra plataforma, que auxilia no ensino dos conceitos básicos
sobre lógica de programação em blocos para o ambiente escolar. A plataforma Code.org
disponibiliza recursos para aprender e ensinar lógica de programação, por meio de jogos
educacionais digitais. A principal iniciativa da plataforma é “A Hora do Código”. Essa
opção da plataforma consiste em proporcionar, aos alunos e professores, uma introdução
divertida à lógica de programação em blocos durante um determinado tempo. O material
utilizado em cada fase é disponibilizado na plataforma através de tutoriais, possibilitando
o uso posterior. Os tutoriais abordam determinados conceitos e fundamentos de Ciência
da Computação através de jogos educacionais digitais.

CAVALCANTE, COSTA e ARAUJO (2016) corrobora para o uso do Code.org,
indicando um diferencial que é possuir um ambiente voltado exclusivamente aos educadores,
onde eles podem criar e gerenciar turmas e acompanhar o progresso individual dos alunos
nas atividades.

Apesar de alguns programas de inclusão digital desenvolvidos pelo governo, esses
programas não incluem atividades voltadas à lógica de programação, apenas o treinamento
de tecnologias, tendo como foco a informática básica – exemplo desta iniciativa são os
Telecentros, que têm como objetivo proporcionar a inclusão digital com o uso intensivo
da tecnologia da informação, oferecendo cursos básicos de computadores e da Internet
AFONSO (2006).

De acordo com D’AMBRÓSIO (1990) computadores e calculadoras devem ser
inseridas no cotidiano escolar, isso incluiu todas as redes escolares da alta sociedade até as
mais carentes, permitindo assim que alunos mais e menos favorecidos tenham acesso a

3 AgentSheets - http://www.agentsheets.com/
4 App Inventor - http://appinventor.mit.edu/explore/
5 Alice - https://www.alice.org/
6 Blockly Games - https://blockly-games.appspot.com/
7 Code.org - https://code.org/

Capítulo 2. Revisão de literatura

21

esses tipos de tecnologias que no mercado de trabalho, fará parte de todas as proﬁssões. E
também não se devem privar os alunos dos conhecimentos e manipulação de instrumentos
tecnológicos que será útil em sua vida proﬁssional.

E quando um professor decide fazer uso da máquina de calcular em sala de aula,
com certeza está optando por uma forma de ensinar a matemática que não está focando
em resoluções de operações básicas nas habilidades de cálculos, mas está investindo no
desenvolvimento de raciocínio lógico de habilidades estimativas, onde a calculadora será o
instrumento mediador.

Já seguindo a linha de raciocínio de SILVA, LOUREIRO e VELOSO (1989) que
também é a favor do uso de calculadora nas salas de aula, ele aﬁrma que os cálculos
aplicados nos programas de matemática são de grande importância, não devendo ser
excluído. Ele ainda diz que é contra as habilidades mecânicas de repetição, portanto
para inserir a calculadora deve-se fazer uma analise de conhecimento sobre a capacidade
de cálculos básicos, tanto geométricos quanto aritméticos. Vale salientar que o uso da
calculadora também permite que alunos com mais diﬁculdades de calcular trabalhe com
outros alunos em um mesmo nível, descordando da aﬁrmação que matemática não é para
todos. Aﬁnal a calculadora incentiva, experimentar, veriﬁcar e formular novas hipóteses.

Com isso a calculadora por conta própria gera novos problemas e conceitos como
por exemplo: aproximação, arredondamento e convergência. Fazer o uso da calculadora
aproxima a sala de aula ao cotidiano, fazendo uso de dados da vida real, gerando mais
interesses nos alunos, aumentando e diversiﬁcando as atividades em relação ao ensino-
aprendizagem. (PONTE, 1989).

A utilização de qualquer tecnologia no espaço escolar deve ser feita com muito pla-
nejamento. Para VASCONCELLOS (2010) a ação do professor é um elemento fundamental,
e por isso o planejamento é essencial, pois é com objetivo estabelecido no planejamento
que o professor busca estratégias para alcançar resultados.

MENEGOLLA e SANT’ANNA (2001) explicam que o planejamento serve para
desenvolver tanto nos professores como nos alunos uma ação eﬁcaz de ensino e aprendizagem,
uma vez que ambos são atuantes em sala de aula. Porém é de responsabilidade do professor
elaborar o plano de aula.

Um dos desaﬁos para ser abordado é o modo como os conceitos sobre lógica de
programação são lecionados em sala de aula. Para COLLING et al. (2014), a maneira
de ensinar algo tão complexo para crianças e adolescentes é um grande obstáculo, pois é
difícil até mesmo para adultos.

Devido a essa diﬁculdade, por muito tempo a programação vem sendo considerada
como uma atividade reservada apenas a alguns especialistas que são capazes de adquirir
as competências necessárias. E existem estudiosos e educadores que defendem que a

Capítulo 2. Revisão de literatura

22

programação não é para todos, e que não haveria necessidade do ensino da programação
de computadores no ensino básico. LOVE (2014) citado por GERALDES (2014) enfatiza
isso:

Em entrevista ao site Businnes Insider, Linus Torvalds, responsável
pelo kernel do famoso sistema operacional Linux, disse: ‘Acho que é
algo especializado, e ninguém espera que a maioria das pessoas faça
isso. Não é como aprender a ler e a escrever ou fazer contas básicas de
matemática.(GERALDES, 2014)

GERALDES (2014) cita também

Vera Rita da Costa (2014), em seu artigo intitulado ‘Computação para
os pequenos’, publicado no portal UOL, diz que os críticos dessa questão
aﬁrmam que o ensino de programação nas escolas pode atrapalhar o
desenvolvimento das crianças e adolescentes, privando estes do convívio
social e das experiências comuns dessas fases da vida, como brincar e
divertir-se ao ar livre.(GERALDES, 2014)

Segundo SETZER (1988), dar o computador para uma criança é uma das maneiras
de fazer uma criança perder sua necessária infantilidade. Ele faz o adolescente perder
sua juventude e o torna senil dos pontos de vista mental, emocional e volitivo. Uma das
características fundamentais da infância e da juventude é a generalidade, o computador,
em virtude de suas peculiaridades, obriga a uma especialização mental precoce.

No entanto, é importante salientar que também existem alguns estudiosos que
defendem que a programação de computadores é uma atividade acessível a todos e deve ser
ensinada na educação básica. Atualmente tem várias iniciativas que defendem o ensino da
programação de computadores nas escolas regulares, sem restrições. Várias personalidades
da tecnologia, como Bill Gates, Mark Zuckerberg, Jack Dorsey têm defendido publicamente
o ensino de programação nas escolas como forma de inclusão digital. Para eles, interpretar
e escrever código é tão importante quanto ler e escrever.

3 Experimentação

23

A intenção deste experimento é avaliar a relevância do uso da lógica de progra-
mação no ensino da matemática. Para tal, foram utilizadas plataformas computacionais,
software livre, disponíveis atualmente. Deste modo, alguns fatores foram selecionados e
sistematicamente observados a ﬁm de encontrar informações úteis sobre a introdução de
software em sala de aula, sua aplicação e seu efeito no aprendizado dos estudantes.

Foram elaboradas e aplicadas atividades pontuais para que os alunos fossem
instigados a solucionar alguns desaﬁos que podem ser encontrados no dia-a-dia, tendo que
usar como recurso a lógica de programação e os conhecimentos matemáticos.

Esse capítulo descreve este experimento cientíﬁco cujos objetivos estão delineados
nas seções iniciais, seguido por duas seções que apresentam o planejamento do experimento
de cada plataforma abordada e descreve as técnicas utilizadas para coletar os dados que
serviram de base para as conclusões desta pesquisa.

Ao decorrer deste capítulo estão algumas análises e sínteses dos resultados en-
contrados, bem como, algumas sugestões para aqueles que pretendem reproduzir esta
experiência.

3.1 Objetivo

As plataformas educacionais digitais selecionadas para esta pesquisa foram Code.org
e Scratch, elas foram utilizadas numa instituição de ensino brasileira como ferramentas
para fomentar as competências e habilidades recorrentes da disciplina de matemática e
que também estão deﬁnidas na BNCC, por meio do uso da lógica de programação.

Esta experimentação procurou utilizar tecnologia digital para uma abordagem
diferente da usada numa aula expositiva tradicional de modo a veriﬁcar se corrobora para
compreensão dos conteúdos matemáticos. E analisar se despertou o interesse pela área
através da abordagem de lógica de programação.

Foi planejado estrategicamente o uso da plataforma computacional Code.org para
esse primeiro contato com a lógica de programação. Essa plataforma usa blocos de comandos.
E uma das propostas de atividade na plataforma são jogos com vários níveis e objetivos
deﬁnidos. Já o segundo contato foi com a plataforma Scratch, que também usa blocos,
porém não possui níveis e nem objetivos deﬁnidos explicitamente.

A plataforma computacional Code.org foi planejada para ser o primeiro contato
porque a abordagem é feita através de jogos educativos digitais e possui objetivos explici-

Capítulo 3. Experimentação

24

tamente deﬁnidos de forma mais gradual em termos de complexidade. Após esse primeiro
contato foi utilizado à plataforma Scratch que exige um desaﬁo maior apesar de também
usar blocos, pois diferente das atividades trabalhadas no Code.org, não são deﬁnidos os
blocos necessários para realização da tarefa.

3.2 Caracterização

Este experimento foi planejado para ocorrer em 6 encontros do ano letivo de 2018
com estudantes do ensino médio e que cursam o 1o ano, 2o ano e 3o ano em uma escola
estadual de ensino integral situada na cidade de Niterói no estado do Rio de Janeiro. Esta
instituição de ensino possui apenas turmas de ensino médio sendo 3 turmas de 1o ano, 2
turmas de 2o ano e 1 turma de 3o ano, totalizando 160 estudantes, com idades entre 14
e 18 anos. Este estudo se concentrou em observar os estudantes dos três anos do ensino
médio, sendo duas turmas do primeiro ano composta por 46 estudantes - 21 alunos e 25
alunas, uma turma do segundo ano composta por 29 estudantes – 19 alunos e 10 alunas e
uma turma do terceiro ano composta por 19 estudantes – 10 alunos e 9 alunas.

A escolha dessa instituição ocorreu pelo fato de ser uma das poucas escolas do
estado equipadas com uma sala “SESI Matemática” que contém um kit com 40 laptops,
entre outros materiais. Os encontros ocorreram nesta sala “SESI Matemática”, onde 18
laptops com acesso a internet estavam disponibilizados para o experimento. Apesar de ter
40 laptops na sala, os mesmos só funcionam quando ligados na tomada e por limitação
da infraestrutura da escola, somente 18 laptops puderam ser utilizados. Como as turmas
tinham mais de 18 alunos, foi necessário organizá-los em duplas.

A experimentação ocorreu através de encontros presenciais com estudantes do
ensino médio, o qual foi dividido em 3 encontros para cada plataforma abordada com
acompanhamento e coleta de dados. A partir dos dados coletados, foram elaboradas
algumas análises. Na maior parte do tempo, os estudantes realizaram atividades visando à
solução de problemas com o auxílio de instruções. As atividades incluíram aulas expositivas
e trabalho colaborativo.

3.3 Fase 1 - Code.org

Para a introdução a lógica de programação foi usada à plataforma Code.org. O
Code.org foi criado pelo iraniano Hadi Partovi, formado em Ciências da Computação
pela Universidade de Harvard e grande investidor de empresas como Facebook, Dropbox
e Airbnb. Com a ajuda de seu irmão Ali, lançou em fevereiro de 2013 o projeto para
promover o ensino de programação nas escolas. Em 9 de dezembro de 2013, o Code.org
lançou a iniciativa “Hour of Code 2013”, em português, “A hora do código 2013”, em que

Capítulo 3. Experimentação

25

qualquer pessoa poderia dedicar 1 (uma) hora para aprender lógica de programação.

O website Code.org é uma plataforma onde o aluno pode aprender os primeiros
passos na programação de computadores através de uma plataforma de tutoriais, inclusive
em língua portuguesa. No tutorial para iniciantes, o aluno tem o primeiro contato com
a programação de computadores através da linguagem Blockly, que possibilita arrastar
e soltar blocos para escrever os códigos. Cada bloco corresponde a uma linha de código
real. O objetivo do primeiro algoritmo é conseguir que o personagem Red de Angry Birds
atravesse um labirinto para chegar ao Porco Verde, conforme ilustra a parte demarcada
como 1 da Figura 4.

Na Figura 4 foi destacada quatro partes, a primeira parte é a área do jogo, onde
ocorre a ação, isto é, execução do algoritmo. A segunda parte é a “caixa de ferramentas”
onde ﬁcam os blocos necessários para a construção do algoritmo e concluir o nível. A
terceira parte é chamada “Área de trabalho” para onde os blocos deverão ser arrastados
para a construção do algoritmo. Já a quarta parte são instruções a serem seguidas para
conclusão do nível. Caso seja necessário apagar os blocos arrastados para a área de trabalho,
é possível arrastá-los para uma lixeira que aparece quando arrastado para cima da caixa
de ferramentas.

Figura 4 – Interface do Code.org.

Cada bloco é um comando: se o aluno arrastar o bloco onde está escrito “Avançar”
para a área de trabalho e depois pressionar o botão “Executar programa”, o personagem irá
se mover uma unidade para frente no sentido em que se encontra. Para que o personagem
faça outras ações, é só adicionar outros blocos à área de trabalho e encaixá-los: cada ação
será executada de cima para baixo. Caso o programa não funcione corretamente, é possível
corrigi-lo através do botão “Recomeçar” (CODE.ORG., 2018).

A plataforma tem um recurso para professores, que é a função “Criar uma Turma”,
conforme a Figura 5 ilustra e direcionar o curso (sequência de atividades) que irão fazer.

Capítulo 3. Experimentação

26

Além disso, o professor consegue visualizar o progresso geral (Figura 6) e o progresso
individual (Figura 7) dos alunos em relação a atividade proposta.

Figura 5 – Link para criação de turma na plataforma Code.org.

A Figura 6 é um exemplo de como o professor visualiza o progresso de todos os
alunos inscritos naquela turma de modo geral em relação à atividade proposta. Na aba
superior a outras opções, se na atividade proposta exigir do estudante uma resposta em
forma de texto, cada resposta dada pode ser visualizada na aba “Respostas de texto”. Na
aba “Estatísticas” é possível acompanhar quantas linha de códigos cada aluno produziu
até aquele momento, além de informar quantos níveis o aluno conseguiu concluir. Já na
aba “Gerenciar alunos” o professor pode alterar senha, nome, idade e gênero de cada aluno,
pode também mudar ou remover o aluno da turma.

Já na Figura 7 é um exemplo do progresso detalhado de um aluno, visualizando

quais níveis foram feitos e se foi usado muitos blocos ou não na criação do algoritmo.

No primeiro encontro foi explicado o conceito de lógica e em seguida foi reproduzido
um vídeo para turma utilizando um projetor e uma caixa de som, o vídeo falava sobre
algoritmo e a computação desplugada. As atividades selecionadas para serem trabalhadas
com a Turma foi o “Express Course (2018)”. As fases 1, 3, 7 e 10 não foram feitas, pois
eram atividades para serem feitas sem o uso do computador.

Segundo FERREIRA et al. (2015) a Computação Desplugada, ou "Computer
Science Unplugged", são atividades que estimulam o raciocínio computacional sem o uso
de computadores ou quaisquer outros recursos eletroeletrônicos.

Após a reprodução do vídeo foi comentado sobre a importância do algoritmo
na lógica de programação. Em seguida foi questionado se eles conseguiriam descrever
uma sequência lógica de alguma atividade que fazem parte do cotidiano deles. Uma das
atividades que eles descreveram foi à ação “ir para a escola”. Depois da euforia de descrever
um algoritmo eles começaram a atividade.

Capítulo 3. Experimentação

27

Figura 6 – Visão geral do progresso da Turma.

A seguir nos Quadros 6, 7 e 8 estão detalhados os roteiros do primeiro, segundo e
terceiro encontro respectivamente. O plano de aula de cada encontro usando a plataforma
Code.org e o modelo do formulário aplicado no último encontro está descrito nos Apêndices
C, D, E e A respectivamente.

Quadro 6 – Roteiro do primeiro encontro usando a plataforma Code.org.

Etapa
Preparação da sala SESI Matemática (Ligar projetor,
notebook e laptops).

Objetivo

1
2
3
4

Cadastro na plataforma Code.org.
Apresentação da plataforma.
Explicação de lógica e do que é um algoritmo.
Execução das atividades da 2o fase e da 4o fase.

Desligar equipamentos (projetor, notebook e laptops).

Duração
5 min.

5 min.
15 min.
25 min.
45 min.
5 min.

As Figuras 8 e 9 a seguir ilustram os temas de cada fase trabalhada. Na fase 2,
o tema foi “Angry Birds” que teve como objetivo fazer com que o personagem “Red”
atravesse um labirinto para chegar ao Porco Verde, usando conhecimento algébrico, sistema
posicional. O tema da fase 4 foi “Era do Gelo” no qual teve que fazer com que o esquilo
pule pelos blocos de gelo para pegar a nozes, para isso foi necessário identiﬁcar e corrigir

Capítulo 3. Experimentação

28

Figura 7 – Visão detalhada do progresso de um aluno.

Quadro 7 – Roteiro do segundo encontro usando a plataforma Code.org.

Etapa
Preparação da sala SESI Matemática (Ligar projetor,
notebook e laptops).

Objetivo

1
2
3

Acessar a plataforma Code.org e fazer o login.
Execução das atividades da 5o fase.
Execução das atividades da 6o fase.
Desligar equipamentos (projetor, notebook e laptops).

Duração
5 min.

5 min.
45 min.
40 min.
5 min.

os erros do algoritmo. Já na fase 5 foi “Caça ao Tesouro” onde o objetivo era recolher
os diamantes pelo caminho, usando padrões para repetição e simpliﬁcação. A fase 6 foi
sobre “Criar Artes” que teve como objetivo desenhar ﬁguras planas, usando conhecimento
geométrico e algébrico. Na fase 8 o tema foi “Star Wars” e o objetivo era recolher todas
as sucatas pelo caminho de maneira mais simples e rápida. Por ﬁm na fase 9 foi sobre
“Arte com Adesivos” que teve como objetivo reproduzir imagens usando rotação e arcos
congruentes.

O Quadro 9 relaciona conceitos matemáticos usados em cada fase. Nem todos os

Capítulo 3. Experimentação

29

Quadro 8 – Roteiro do terceiro encontro usando a plataforma Code.org.

Etapa
Preparação da sala SESI Matemática (Ligar projetor,
notebook e laptops).

Objetivo

1
2
3
4

Acessar a plataforma Code.org e fazer o login.
Execução das atividades da 8o fase.
Execução das atividades da 9o fase.
Preenchimento do formulário sobre Code.org

Desligar equipamentos (projetor, notebook e laptops).

Duração
5 min.

5 min.
35 min.
35 min.
15 min.
5 min.

Figura 8 – Temas das fases 2, 4 e 5 respectivamente.

Figura 9 – Temas das fases 6, 8 e 9 respectivamente.

alunos conseguiram chegar até a fase 9, porém teve alunos que chegaram até a fase 12. No
ﬁnal do terceiro encontro utilizando o Code.org foi aplicada uma pesquisa qualitativa com
58 estudantes, usando o formulário do Google, com ênfase sobre o uso desta plataforma.

Uma das perguntas que compõem o formulário aplicado nas turmas é se eles já
tiveram contato com lógica de programação antes desses encontros, e o resultado obtido
foi que 16 alunos (28%) já tiveram contato e 42 alunos (72%) não tiveram contato com
programação. Como ilustra a Figura 10.

Capítulo 3. Experimentação

30

Quadro 9 – Conceitos matemáticos usados em cada fase.

Fases
Angry Birds

Era do Gelo

Caça ao Tesouro

Criar Artes

Star Wars

Conceitos matemáticos
Raciocínio lógico; Números naturais;
Operações Algébricas; Sistema posicional.
Raciocínio lógico; Resolução de problema;
Números naturais; Operações Algébricas;
Sistema posicional.
Raciocínio lógico; Resolução de problema;
Números naturais; Operações Algébricas;
Sistema posicional; Reconhecimento de
padrões.
Raciocínio lógico; Resolução de problema;
Números naturais; Operações Algébricas;
Geometria plana; Ângulo externo.
Raciocínio lógico; Resolução de problema;
Números naturais; Operações Algébricas;
Sistema posicional; Reconhecimento de
padrões; Padrões de repetição.

Arte com Adesivos Raciocínio lógico; Resolução de problema;
Números naturais; Operações Algébricas;
Geometria plana; Arcos congruentes; Círculo
trigonométrico.

Figura 10 – Contato com a lógica de programação.

Nesse formulário foi solicitado para eles classiﬁcarem o nível de diﬁculdade de
cada fase que ﬁzeram e caso não tenham feito marcar “Não Fiz”. A Figura 11 ilustra os
resultados obtidos.

Como pode ser observado na Figura 11 as diﬁculdades das fases foram aumentando

Capítulo 3. Experimentação

31

Figura 11 – Níveis de diﬁculdades das atividades.

gradativamente, porém observa-se que as fases de Artes geraram maiores diﬁculdades,
com isso foi possível identiﬁcar os conceitos trabalhados naquelas fases, que no caso foram
conceitos de geometria e trabalhar essa diﬁculdade.

Com objetivo de veriﬁcar se eles conseguiram identiﬁcar o uso da matemática nas
atividades foi questionado se precisaram utilizar conceitos matemáticos para conseguir
concluir os níveis. Das 58 respostas obtidas, 51 alunos (88%) responderam “sim”, isto é,
que precisou usar conceitos matemáticos e os outros 7 (12%) responderam que “não”.

Figura 12 – Percepção sobre o uso dos conceitos matemáticos durante as atividades.

Foi solicitado para eles avaliarem de modo geral as atividades que eles ﬁzeram. As

Capítulo 3. Experimentação

32

opções eram Péssimo, Ruim, Regular, Bom e Excelente. Os resultados foram os seguintes, 21
alunos (36%) avaliaram como excelente, 33 (57%) avaliaram como bom, 3 (5%) avaliaram
como regular e 1 (2%) avaliou como péssimo.

Figura 13 – Avaliação das atividades usando Code.org.

A Figura 14 representa o resultado obtido da classiﬁcação do nível de aprendizado em
matemática usando a plataforma Code.org. As opções eram Fraco, Moderado, Satisfatório,
Muito bom e Excelente, em que a opção Fraco signiﬁca que não conseguiu aprender e
Excelente signiﬁca que foi muito fácil aprender usando está metodologia. Os resultados
obtidos foram, 3 alunos (5%) classiﬁcaram como excelente, 8 (14%) classiﬁcaram como
muito bom, 21 (36%) classiﬁcaram como satisfatório, 23 (40%) classiﬁcaram como Moderado
e 3 (5%) classiﬁcaram como fraco.

Um dos objetivos de usar a plataforma Code.org, era de também ensinar programa-
ção que serviu como base para usar a plataforma Scratch, no qual também usa blocos. Por
isso foi questionado sobre como foi o aprendizado de programação usando o Code.org. Os
critérios foram os mesmos usados pelo “Nível de aprendizado em matemática”. Os dados
obtidos foram, 6 alunos (10%) classiﬁcaram como excelente, 13 (23%) classiﬁcaram como
muito bom, 18 (31%) como satisfatório, 18 (31%) como moderado e 3 (5%) como fraco.

3.4 Fase 2 - Scratch

A segunda plataforma computacional utilizada nesta pesquisa foi Scratch, versão
1.4. O Scratch é um ambiente gráﬁco de programação criado e desenvolvido pelo “Lifelong
Kindergarten Group”, do MIT, que permite a criação de aplicativos que integram recursos
de multimídia, de forma intuitiva. Seu objetivo primário é facilitar a introdução de conceitos

Capítulo 3. Experimentação

33

Figura 14 – Nível de aprendizado em matemática usando Code.org.

Figura 15 – Nível de aprendizado em programação usando Code.org.

de matemática e de lógica de programação, enquanto também contribui para induzir o
pensamento criativo, o raciocínio sistemático e o trabalho colaborativo (SCRATCH, 2018).
A Figura 3.13 ilustra a interface desta plataforma.

O objetivo é levar o estudante a um processo de aprendizado contínuo, numa
sequência que envolve criação, experimentação, compartilhamento e reﬂexão, que leva a
mais criação, resultando na expansão de suas habilidades, conhecimento e competências,
na “espiral do pensamento criativo” conforme descrito por Resnick RESNICK (2018). A
Figura 17 (a) ilustra esta espiral do pensamento criativo.

Capítulo 3. Experimentação

34

Figura 16 – Interface do Scratch 1.4.

Em relação à prática de programação, MÉLO et al. (2011) propõe a espiral conforme
ilustrada na Figura 17 (b). Entende-se que a prática de programação é um processo criativo
que, após a análise de um determinado problema, exige que o mesmo seja codiﬁcado,
executado, depurado, e documentado para que assim outros possam reproduzi-lo ou mesmo
melhorá-lo. O processo se repete, iniciando o ciclo num estágio mais evoluído.

Figura 17 – Espiral do pensamento criativo, de Resnick (a) e Espiral correspondente, no

contexto da programação de Mélo et al. (b).

Com a intenção de incentivar os estudantes a aprenderem conceitos matemáticos
usando a lógica de programação através do Scratch, foram propostas algumas atividades co-
nectando o lúdico, o pensamento computacional e conceitos matemáticos. Essas atividades
foram planejadas dentro de um cenário hipotético nomeado “Show da PROGRAMÁTICA”,
o qual consiste de um ambiente virtual contendo um avatar que representa o próprio
professor da turma. As atividades convidam os estudantes a descrever a lógica necessária

Capítulo 3. Experimentação

35

para o avatar apresentar corretamente determinados conceitos da matemática. Deste modo,
os estudantes eram desaﬁados a ensinar o professor a ensinar.

O Quadro 10 a seguir apresenta as 8 atividades, seus objetivos e conceitos matemá-
ticos, que foram propostas para serem praticadas com os estudantes. O plano de aula das
atividades está descrito nos Apêndices F, G e H.

Quadro 10 – Atividades realizadas com Scratch.

No. Atividade

Objetivos

1 Criar uma animação

chamada “Show da
Programática”, onde o
apresentador do show é um
professor e fazer com que
ele receba um número
inteiro qualquer e vocalize o
antecessor e o sucessor
desse número.

Informar ao professor do
Show da Programática a
unidade de medida, a altura
e a base de um retângulo de
modo que ele possa
vocalizar a área do
retângulo.

Informar ao professor do
Show da Programática a
unidade de medida, a
altura, a base maior e a
base menor de um trapézio
de modo que ele possa
vocalizar a área do trapézio.

2

3

Escrever um algoritmo
para ler um valor (do
teclado) e escrever (na
tela) o seu antecessor e
sucessor.

Conceitos
Matemáticos

Raciocínio lógico,
Resolução de
problema, Números
Inteiros, Operações
Algébricas,
Sequência,
Progressão
Aritmética.

Escrever um algoritmo
para ler as dimensões de
um retângulo (base e
altura), calcular e
escrever a área do
retângulo.

Raciocínio lógico,
Resolução de
problema, Números
Reais, Operações
Algébricas, Área de
ﬁguras planas.

Escrever um algoritmo
para ler as dimensões de
um trapézio (base maior,
base menor e altura),
calcular e escrever a área
do trapézio.

Raciocínio lógico,
Resolução de
problema, Números
Reais, Operações
Algébricas, Área de
ﬁguras planas.

Capítulo 3. Experimentação

36

4

5

6

7

Informar ao professor do
Show da Programática a
idade expressa em anos,
meses e dias de modo que
ele possa vocalizar a idade
expressa apenas em dias.
(Considerando o ano com
365 dias e o mês com 30
dias)

Informar ao professor do
Show da Programática as
coordenadas de dois pontos
A(x1, y1) e B(x2, y2) de
modo que ele possa
vocalizar a distância entre
esses dois pontos.

Informar ao professor do
Show da Programática o
total de eleitores de um
município, a quantidade de
votos brancos, nulos e
válidos de modo que ele
possa vocalizar o percentual
de votos brancos, nulos e
válidos em relação ao total
de eleitores.

Informar ao professor do
Show da Programática o
salário mensal atual e o
percentual de aumento que
recebeu de modo que ele
possa vocalizar o novo
salário.

Escrever um algoritmo
para ler a idade de uma
pessoa expressa em anos,
meses e dias, calcular e
escrever a idade dessa
pessoa expressa apenas
em dias. Considerando o
ano com 365 dias e o mês
com 30 dias.

Escrever um algoritmo
para ler dois pontos (x1,
y1, x2 e y2), calcular e
escrever a distância entre
esses dois pontos.

Escrever um algoritmo
para ler o número total
de eleitores de um
município, o número de
votos brancos, nulos e
válidos. Calcular e
escrever o percentual que
cada um representa em
relação ao total de
eleitores.

Escrever um algoritmo
para ler o salário mensal
atual de uma pessoa e o
percentual de reajuste.
Calcular e escrever o
valor do novo salário.

Raciocínio lógico,
Resolução de
problema, Números
Naturais,
Operações
Algébricas,
Transformação da
unidade de tempo.

Raciocínio lógico,
Resolução de
problema, Números
Reais, Operações
Algébricas, Plano
Cartesiano,
Distância entre
dois ponto.

Raciocínio lógico,
Resolução de
problema, Números
Reais, Operações
Algébricas,
Porcentagem,
Estatística.

Raciocínio lógico,
Resolução de
problema, Números
Reais, Operações
Algébricas,
Porcentagem,
Matemática
ﬁnanceira.

Capítulo 3. Experimentação

37

8

Informar ao professor do
Show da Programática 3
medidas de mesma unidade
(lado 1, lado 2 e lado 3) de
modo que ele possa
vocalizar se é possível criar
um triângulo ou não.

Raciocínio lógico,
Resolução de
problema, Números
Reais, Operações
Algébricas,
Triângulo.

Escrever um algoritmo
para ler 3 medidas de
mesma unidade (lado 1,
lado 2 e lado 3) e
veriﬁcar se é ou não é
possível criar um
triângulo, se for possível
escrever “É possível criar
um triângulo” caso
contrário escrever “Não é
possível criar um
triângulo”.

Conforme mencionado, foram realizados 3 encontros utilizando a plataforma Scratch.
O primeiro deles foi planejado para ocorrer de acordo com o Quadro 11, ao passo que os
roteiros do segundo e terceiro encontro estão detalhados nos Quadros 12 e 13, respectiva-
mente.

Quadro 11 – Roteiro do primeiro encontro usando a plataforma Scratch.

Etapa
Preparação da sala SESI Matemática (Ligar projetor,
notebook e laptops).

Objetivo

1
2
3
4

Apresentação da plataforma Scratch.
Demonstração das duas primeiras atividades feitas.
Execução da primeira atividade. (antecessor e sucessor)
Execução da segunda atividade. (área de um retângulo)

Desligar equipamentos (projetor, notebook e laptops).

Duração
5 min.

5 min.
15 min.
35 min.
35 min.
5 min.

Quadro 12 – Roteiro do segundo encontro usando a plataforma Scratch.

Etapa
Preparação da sala SESI Matemática (Ligar projetor,
notebook e laptops).

Objetivo

1
2

3

Execução da terceira atividade. (área de um trapézio)
Execução da quarta atividade. (idade expressa apenas
em dias)
Execução da quinta atividade. (distância entre dois
pontos)

Desligar equipamentos (projetor, notebook e laptops).

Duração
5 min.

30 min.
30 min.

30 min.

5 min.

Capítulo 3. Experimentação

38

Quadro 13 – Roteiro do terceiro encontro usando a plataforma Scratch.

Etapa
Preparação da sala SESI Matemática (Ligar projetor,
notebook e laptops).

Objetivo

1
2
3
4

Execução da sexta atividade. (Estatística)
Execução da sétima atividade. (Porcentagem)
Execução da oitava atividade. (Triângulo)
Preenchimento do formulário sobre Scratch.

Desligar equipamentos (projetor, notebook e laptops).

Duração
5 min.

25 min.
25 min.
25 min.
15 min.
5 min.

A primeira atividade consistiu em criar o Show da Programática, em que o professor
pede para escrever qualquer número e ele fala qual o antecessor e o sucessor deste número.
A Figura 18 ilustra as etapas da animação. Baseado nessa atividade pode ser abordado os
conceitos de números inteiros, sequência e progressão aritmética.

Figura 18 – Etapas da animação do antecessor e sucessor.

Já na Figura 19 ilustra a segunda animação, que foi feita como uma continuação
do “show da PROGRAMÁTICA”, mas dessa vez o professor pede a unidade de medida, a
base e a altura de um retângulo e fala a área do retângulo. Com essa atividade pode ser
abordado os conceitos de números reais, área do retângulo, área do paralelogramo, área
do quadrado.

A terceira atividade foi para calcular a área do trapézio, no qual pode ser abordadas
áreas de ﬁguras planas, função quadrática se usar uma medida em função da outra. A
quarta atividade era para expressar a idade em dias, onde pode ser abordada transformação

Capítulo 3. Experimentação

39

Figura 19 – Etapas da animação da área de um retângulo.

de unidades de tempo.

Na atividade de calcular a distância entre dois pontos, pode ser abordado o plano
cartesiano e os conceitos da geometria analítica. Já na atividade que era para calcular a
porcentagem dos votos brancos, nulos e validos, pode ser abordado o conteúdo de estatística
e na atividade seguinte que era para calcular o reajuste do salário, pode ser abordado o
conteúdo de matemática ﬁnanceira. E por último a atividade de triângulo, que era para
calcular se era possível formar um triângulo, podem ser abordados os tipos de triângulos,
cálculo da área usando os lados.

No ﬁnal do terceiro encontro utilizando o Scratch foi aplicada uma pesquisa
qualitativa com 70 estudantes, usando novamente o formulário do Google, sobre o uso
desta plataforma. O modelo do formulário aplicado encontra-se no (Apêndice B). Foi
solicitado para eles classiﬁcarem o nível de diﬁculdade das atividades propostas utilizando
o Scratch. Os resultados obtidos podem ser observados na Figura 3.17. No qual 10
alunos (14%) classiﬁcaram como Fácil, 47 (67%) classiﬁcaram como Moderado e 13 (19%)
classiﬁcaram como Difícil.

Capítulo 3. Experimentação

40

Figura 20 – Classiﬁcação do nível de diﬁculdades das atividades propostas.

Foi solicitado para eles classiﬁcarem o nível de diﬁculdade do Scratch em comparação
com Code.org, os resultados obtidos foram que 14 alunos (20%) acharam mais fácil, 18
(26%) acharam que ambas tem a mesma diﬁculdade e 38 (54%) acharam que o Scratch
era mais difícil que o Code.org.

Figura 21 – Classiﬁcação do nível de diﬁculdade do Scratch em relação ao Code.org.

Quando questionados se precisaram utilizar conceitos matemáticos para a realização
das atividades usando o Scratch, os resultados foram que 66 alunos (94%) identiﬁcaram
que foi preciso e 4 (6%) não identiﬁcaram.

Foi solicitado aos alunos para classiﬁcarem o nível de aprendizado em matemática

Capítulo 3. Experimentação

41

Figura 22 – Identiﬁcação do uso dos conceitos matemáticos usando Scratch.

utilizando o Scratch, em que foi obtido o seguinte resultado, 22 alunos (32%) classiﬁcaram
como Moderado, 22 (31%) classiﬁcaram como Satisfatório, 21 (30%) classiﬁcaram como
Muito bom e 5 (7%) classiﬁcaram como Excelente.

Figura 23 – Classiﬁcação de aprendizado em matemática usando Scratch.

Também foi questionado se conseguiram aprender alguns conceitos matemáticos
durante as atividades com Scratch, e 49 alunos (70%) responderam que conseguiram, 5
(7%) responderam que não e 16 (23%) não souberam responder.

Capítulo 3. Experimentação

42

Figura 24 – Aprendizado dos conceitos matemáticos usando Scratch.

3.5 Análise dos experimentos

Foi observado que nas aulas abordando a lógica de programação os alunos ﬁcaram
mais concentrados e envolvidos nas atividades, onde muitas vezes foi necessário informa-los
que a aula havia abacado, diferente do que ocorre em aulas expositivas tradicionais.

Um fato que reforça isso foi a assiduidade que passaram a ter nas aulas de matemá-
tica não somente em relação a presença mais também, quanto a pontualidade, haja vista
que uma reclamação frequente entre os professores da escola era a demora dos estudantes
para retornar para a sala de aula após os intervalos, onde muitos deles se apresentavam 10
a 15 minutos depois. Nas aulas de matemática que seguiram a dinâmica proposta por este
trabalho de pesquisa, notou-se que a maioria retornava pontualmente.

Adicionalmente a percepção do professor quanto a assiduidade, foi feita uma
consulta aos alunos por meio de um formulário no qual se perguntou sobre alguns aspectos
da nova dinâmica de aula proposta. A seguir destacamos algumas das respostas obtidas que
também corroboram uso da lógica de programação como instrumento para os estudantes
compreenderem o uso da matemática no cotidiano.

"[Gostei de] saber que a matemática pode ser usada em muitos âmbitos de nossa vida.”

“O aspecto mais valioso foi a aproximação dos conteúdos matemáticos para uma realidade
cotidiana. Usa-la para além de cálculos abstratos.”

“Esse formato de aula ajuda os alunos a enxergarem a matemática e sua aplicação fora da
sala de aula.”

“Analisando como um todo, foi de extrema importância relembrar alguns conceitos

Capítulo 3. Experimentação

43

matemáticos a partir do Scratch e, também, entender e aprender um pouco sobre a
linguagem da programação. Principalmente, porque contextualizou com a minha realidade
e então pude aproveitar da melhor forma as aulas.”

A plataforma Scratch oferece mais possibilidades para os estudantes explorarem a
lógica de programação e os conceitos matemáticos. Na plataforma computacional Code.org
foram trabalhados conceitos básicos de matemática . A seguir são destacadas algumas
respostas que enfatizam essas aﬁrmações.

“O Code.org utilizava mais a matemática básica (que a maioria das pessoas do segundo
anos do ensino médio sabe) e o Scratch trabalho com pontos mais complexos da
matemática.”

“Ao contrário do Code, no Scratch o aluno acaba desenvolvendo uma autonomia para
realizar as suas atividades em relação aos exercícios propostos, pois por mais que haja
exigência, no ﬁm será o aluno a decidir como realiza-las. Já no code as atividades já são
prontas e seus meios de execução também.”

“O Code pra mim nos tínhamos uma certa limitação, agora o Scratch já é o programa para
montar realmente o jogo, e é muito mais aberto e varias ferramentas, possibilidade de
criação de vários jogos e isso é muito legal.”

“No Scratch, você precisa ’pensar’ mais que no Code, no Code tem uma certa ’formula’
que você só tem que seguir, já no Scratch você cria a ideia, faz a programação toda desde
o inicio.”

Também procurou-se coletar pontos positivos e negativos a partir dos feedbacks
dos estudantes. Esses feedbacks podem oferecer pistas acerca da interferência que foi feita
no processo de aprendizado ao passo que nos permite capturar sugestões de melhoria.
Destaco a seguir alguns feedbacks:

“Revisar conceitos matemáticos para melhores atuações nas aulas de programação”

“As aulas foram boas, mais o professor poderia ter explicado um pouco mais claramente,
tive que recorrer as vezes a internet, ou mesmo aos meus colegas de classe, tirando isso as
aulas foram boas.”

“Mais silêncio da classe com ﬁnalidade de melhorar a concentração dos alunos.”

“Ser jogado em dupla para facilitar.”

Percebe-se a partir dos dois primeiros feedbacks que os estudantes podem enfrentar
diﬁculdades na realização das atividades por falta de compreensão de determinados
conceitos matemáticos. No entanto, é sugerido como mitigação que tal diﬁculdade pode

Capítulo 3. Experimentação

44

ser transpassada por meio da colaboração entre os próprios estudantes. Note que o
segundo feedback menciona que o estudante buscou ajuda com seus colegas de classe
para compreender os conceitos requeridos pela atividade proposta de modo a conseguir
concluí-la.

Outra pista interessante é percebida no terceiro feedback e remete à importância
do professor ter controle sobre a turma de modo a assegurar um ambiente adequando (ex.:
silêncio durante as atividades) dentro de sala de aula e que favoreça a concentração.

4 Conclusão

45

A proposta deste trabalho foi realizar atividades que envolvem conceitos de lógica de
programação, como facilitador na compreensão dos conceitos matemáticos. As atividades
propostas foram aplicadas com alunos do ensino médio e foi utilizado o questionário para
avaliar os resultados obtidos.

Assim foi possível trazer à discussão a temática da adoção de atividades de progra-
mação de computadores para apoiar no processo ensino e aprendizagem da Matemática
pois, com este artifício tecnológico mostrou ser possível lançar aos alunos novos concei-
tos, trabalhando uma didática diferenciada de modo a tornar prazerosa a relação com a
matemática.

Diante dos dados obtidos na pesquisa, percebe-se que a aprendizagem pautada
na utilização das tecnologias digitais possibilita, não somente a atração da geração de
crianças e jovens de hoje, como também potencializa o desenvolvimento de habilidades
necessárias ao século XXI. Desenvolvendo cidadãos para o exercício da reﬂexão crítica,
da investigação, da experimentação e da autonomia, incentivando-os ao protagonismo do
próprio desenvolvimento.

Através da metodologia empregada, foi possível notar signiﬁcativo aumento do
interesse dos alunos à medida que os mesmos foram submetidos a pensarem em situações
problemas do cotidiano, fato que valoriza a motivação pessoal do aluno que busca, na
atual sociedade, signiﬁcado prático dos conceitos estudados formalmente nas aulas de
matemática.

A pesquisa aqui desenvolvida despertou interesse na maior parte dos alunos, estimu-
lando a criatividade através das atividades propostas e tornando as aulas mais instigantes
para os estudantes e também, para o professor.

O presente trabalho abre espaço para futuras pesquisa, como por exemplo:

1. Explorar a utilização de outras plataformas digitais tais como aplicativos mobile,
pois tal artiﬁcio tecnológico não exige que a instituição de ensino precise dispor de
um laboratório de informática. Por outro lado, pressupõe que os estudantes possuam
smartphones, o que não necessariamente é uma realidade em escolas públicas.

2. Ensinar lógica de programação através da computação desplugada, isto é, sem o uso
de computadores, utilizando atividades de computação despluagada proposta pela
plataforma Code.org.

3. Utilizar uma versão modiﬁcada do Scratch para ensinar matemática e robótica

Capítulo 4. Conclusão

46

usando uma placa arduino, chamada “Scratch for Arduino” (S4A). Essa versão foi
desenvolvida em 2010 pela Equipe de Smalltalk do Citilab para interagir com placas
Arduino. O Arduíno é descrito pelos seus construtores como “uma plataforma de
prototipação de fonte aberta, baseada em hardware e software fácil de utilizar. É
planejada para artistas, designers, hobbystas e qualquer um interessado em criar
ambientes ou objetos interativos” (ARDUINO, 2018).

Após a conclusão desse trabalho foi possível responder as questões de investigação

contidas no capítulo 1 que são:

• Q1. Como a lógica de programação pode ser introduzida na formação regular de
estudantes do ensino médio e utilizada como instrumento pedagógico alternativo
para aprender Matemática?

R: Uma das possibilidades de inserir a lógica de programação na formação regular
do estudante é utilizando as plataformas Code.org e Scratch para ensina de uma maneira
mais lúdica os conceitos matemáticos. E de acordo com as percepções e feedbacks dos
estudantes é possível perceber que serve como ferramenta motivacional para o aprendizado.

• Q2. De que maneira as Diretrizes Curriculares Nacionais para o Ensino Médio
orientam os sistemas de ensino quanto ao desenvolvimento das propostas pedagógicas
nacionais que exploram as potencialidades da prática de lógica de programação no
aprendizado de Matemática?

R: Não existe nenhum parâmetro especiﬁco sobre abordagem da lógica de progra-
mação no ensino básico, porém pode-se observar que na BNCC fala sobre o aprendizado
das seguintes competência , tecnologia digital, resolução de problemas, raciocínio lógico,
criar soluções, entre outros. Essas competências estão associadas ao aprendizado de lógica
de programação.

Referências

47

AFONSO, C. A. Políticas públicas e inclusão digital. pesquisa sobre o uso das tecnologias
da informação e da comunicação. In: Comitê Gestor da Internet no Brasil. [S.l.: s.n.],
2006. Citado na página 20.

ALMEIDA, R. k.; CORSEUIL, C. H.; POOLE, J. P. “the impact of digital technologies
on routine tasks: Do labor policies matter?”. In: World Bank Policy Research Working
Paper. No. 8187.: [s.n.], 2017. Citado na página 6.

ANDRADE, D.; CARVALHO, T.; SILVEIRA, J. “proposta de atividades para o
desenvolvimento do pensamento computacional no ensino fundamental”. In: In XIX
Workshop de Informática na Escola (WIE 2013). São Paulo, Brasil. [S.l.: s.n.], 2013.
Citado na página 20.

ANDRADE, M.; SILVA, C.; OLIVEIRA, T. "desenvolvendo games e aprendendo
matemática utilizando o scratch.". In: Simpósio Brasileiro de Jogos e Entretenimento
Digital. São Paulo: [s.n.], 2013. p. 260–263. Citado na página 18.

ARDUINO. In: . [S.l.: s.n.], 2018. Acessado em outubro, 2018. Citado na página 46.

BARCELOS, T. S.; SILVEIRA, I. Relações entre o pensamento computacional e a
matemática através da construção de jogos digitais. Anais do XII Simpósio Brasileiro de
Games e Entretenimento Digital (SBGames), 2013. Citado 2 vezes nas páginas 15 e 18.

BARCELOS, T. S.; SILVEIRA, I. F. Pensamento computacional e educação matemática:
Relações para o ensino de computação na educação básica. In: XX Workshop sobre
Educação em Computação, Curitiba. Anais do XXXII CSBC. [S.l.: s.n.], 2012. v. 2, p. 23.
Citado na página 16.

BARCELOS, T. S.; SILVEIRA, I. F. Teaching computational thinking in initial series
an analysis of the conﬂuence among mathematics and computer sciences in elementary
education and its implications for higher education. In: IEEE. Informatica (CLEI), 2012
XXXVIII Conferencia Latinoamericana En. [S.l.], 2012. p. 1–8. Citado na página 16.

BEZERRA, F.; DIAS, K. Programação de computadores no ensino fundamental:
Experiências com logo e scratch em escola pública. In: In XXII Workshop sobre Educação
em Informática. Brasília, DF: SBC: [s.n.], 2014. Citado na página 2.

BRASIL. Base nacional comum curricular. In: . [S.l.: s.n.], 2018. Acessado em Abril, 2018.
Citado na página 11.

BRASIL. Ministério da educação e cultura - programa inglês sem fronteiras. In: . [S.l.:
s.n.], 2018. Acessado em Março, 2018. Citado na página 1.

BRASIL. Observatório do pne. In: . [S.l.: s.n.], 2018. Acessado em Abril, 2018. Citado na
página 11.

CASTELLS, M. A sociedade em rede. Lisboa: Fundação Calouste Gulbenkian., p. p. 35,
2002. Citado na página 2.

Referências

48

CAVALCANTE, A.; COSTA, L. D. S.; ARAUJO, A. L. Um estudo de caso sobre
competências do pensamento computacional desenvolvidas na programação em blocos no
code. org. In: Anais dos Workshops do Congresso Brasileiro de Informática na Educação.
[S.l.: s.n.], 2016. v. 5, n. 1, p. 1117. Citado 2 vezes nas páginas 17 e 20.

CHAVES, E. Tecnologia e educação: O futuro da escola na sociedade da informação.
Campinas: Mindware editora / Unicamp, 1998. Citado na página 1.

CODE.ORG. In: . [S.l.: s.n.], 2018. Acessado em Setembro, 2018. Citado na página 25.

COLLING, J. et al. Programação de computadores como meio de desenvolvimento do
raciocínio lógico em crianças e adolescentes. Anais do Seminário de Iniciação Cientíﬁca
do Curso de Pedagogia, p. 2–8, 2014. Citado na página 21.

CSTA. - computer science teacher association. the new educational imperative: Improving
high school computer science education. ﬁnal report of the csta. In: Curriculum
Improvement Task Force. ACM - Association for Computing Machinery. [S.l.: s.n.], 2005.
Citado na página 15.

CSTA. - computer science teacher association. csta k-12 computer science standards. csta
standards task force. In: ACM - Association for Computing Machinery. [S.l.: s.n.], 2011.
Citado na página 15.

D’AMBRÓSIO, U. Etnomatemática: arte ou técnica de explicar e conhecer. São Paulo:
Ed. Ática, 1990. Citado na página 20.

FERREIRA, A. C. et al. Experiência prática interdisciplinar do raciocínio computacional
em atividades de computação desplugada na educação básica. In: Anais do Workshop de
Informática na Escola. [S.l.: s.n.], 2015. v. 21, n. 1, p. 256. Citado na página 26.

FIRJAN. Federação das indústrias do estado do rio de janeiro. In: . [S.l.: s.n.], 2018.
Acessado em Maio, 2018. Citado na página 6.

FRANÇA, R.; TEDESCO, P. Desaﬁos e oportunidades ao ensino do pensamento
computacional na educação básica no brasil. In: Anais dos Workshops do Congresso
Brasileiro de Informática na Educação. [S.l.: s.n.], 2015. v. 4, n. 1, p. 1464. Citado na
página 15.

GARCIA, R. E.; CORREIA, R. C. M.; SHIMABUKURO, M. H. Ensino de lógica de
programação e estruturas de dados para alunos do ensino médio. In: XVII WEI–Workshop
sobre o Ensino de Computação. Belém do Pará–PA. [S.l.: s.n.], 2008. p. 246–249. Citado
na página 14.

GARLET, D.; BIGOLIN, N. M.; SILVEIRA, S. R. Uma proposta para o ensino de
programação de computadores na educação básica. In: Departamento de Tecnologia da
Informação, Universidade Federal de Santa Maria. Rio Grande do Sul, Brasil: [s.n.], 2016.
Citado na página 3.

GERALDES, W. B. Programar é bom para as crianças? uma visão crítica sobre o ensino
de programação nas escolas. Texto Livre: Linguagem e Tecnologia, v. 7, n. 2, p. 105–117,
2014. Citado na página 22.

HERNANDEZ, C. C. et al. Teaching programming principles through a game engine. In:
CLEI Electronic Journal, pp. 1– 8. [S.l.: s.n.], 2010. Citado na página 17.

Referências

49

JÚNIOR, J. C. R. P. et al. Ensino de algoritmos e programação: uma experiência no nível
médio. In: XIII Workshop de Educação em Computação (WEI’2005). São Leopoldo, RS,
Brasil. [S.l.: s.n.], 2005. Citado na página 18.

KAFAI, Y. B.; BURKE, Q. Computer programming goes back to school. In: In: Education
Week. [S.l.: s.n.], 2013. Citado na página 3.

LERNER, M. Uma avaliação da utilização de jogos em educação. In: Oﬁcinas de
Informática na Educação. COPPE/UFRJ, Rio de Janeiro: [s.n.], 1991. Citado na página
18.

LEWIS, C. M.; SHAH, N. “building upon and enriching grade four mathematics standards
with programming curriculum,” in proc. In: SIGCSE ’12, New York. [S.l.: s.n.], 2012.
Citado na página 16.

LOPES, C. C. et al. O ensino de algoritmos e lógica de programação como uma ferramenta
pedagógica para auxiliar a aprendizagem de matemática: Um relato de experiência. In:
Anais do Workshop de Informática na Escola. [S.l.: s.n.], 2016. v. 22, n. 1, p. 41. Citado
na página 17.

LOVE, D. A conversation with linus torvalds, who built the world’s most
robust operating system and gave it away for free. In: Jun. 7. Disponível em:
https://www.businessinsider.com/linus-torvalds-qa-2014-6 . Acesso em: 30 ago. 2018. [S.l.:
s.n.], 2014. Citado na página 22.

MARTINS, R.; REIS, R.; MARQUES, A. B. Inserção da programação no ensino
fundamental uma análise do jogo labirinto clássico da code. org através de um modelo de
avaliação de jogos educacionais. In: Anais do Workshop de Informática na Escola. [S.l.:
s.n.], 2016. v. 22, n. 1, p. 121. Citado na página 20.

MENEGOLLA, M.; SANT’ANNA, I. M. Por que planejar? como planejar? In: 10a Ed.
Petrópolis, RJ: Vozes. [S.l.: s.n.], 2001. Citado na página 21.

MÉLO, F. et al. Do scratch ao arduino: Uma proposta para o ensino introdutório de
programação para cursos superiores de tecnologia. In: SN. Congresso Brasileiro de
Informática na Educação, Santa Catarina. [S.l.], 2011. Citado na página 34.

MOR, Y.; NOSS, R. Programming as mathematical narrative. International Journal of
Continuing Engineering Education and Life Long Learning, Inderscience Publishers, v. 18,
n. 2, p. 214–233, 2008. Citado na página 15.

MUNDIAL, G. B. “competências e empregos: Uma agenda para a juventude”. In:
Relatório. [S.l.: s.n.], 2018. Citado 3 vezes nas páginas 6, 7 e 8.

OLIVEIRA, M. d. et al. Ensino de lógica de programação no ensino fundamental
utilizando o scratch: um relato de experiência. In: XXXIV Congresso da SBC-XXII
Workshop de Ensino de Computação, Brasília. [S.l.: s.n.], 2014. Citado na página 15.

PEREIRA, A. B. C. Games dão sentido prático à matemática e motivam alunos a
aprender. In: . Instituto de Matemática e Estatística (IME) da USP. São Paulo.: [s.n.],
2018. Acessado em Maio, 2018. Citado na página 18.

Referências

50

PEREIRA, J. C. R.; RAPKIEWICZ, C. O processo de ensino-aprendizagem de
fundamentos de programação: Uma visão crítica da pesquisa no brasil. In: WEI RJES.
[S.l.: s.n.], 2004. Citado na página 2.

PEREIRA, L. Escolas defendem ensino de programação a crianças e adolescentes.olhar
digital,06 fev. 2013. In: . [S.l.: s.n.], 2013. Acessado em Março, 2018. Citado na página 3.

PISA. Programme for international student assessment. In: . [S.l.: s.n.], 2018. Acessado
em Abril, 2018. Citado na página 12.

PONTE, J. P. A calculadora e o processo de ensino-aprendizagem. In: Educação
Matemática. Lisboa, Portugal: [s.n.], 1989. Citado na página 21.

PONTE, J. P.; CANAVARRO, P. Matemática e novas tecnologias. Lisboa: Universidade
Aberta., 1997. Citado na página 2.

PRENSKY, M. Digital natives, digital immigrants. In: On the horizon, vol. 9, no. 5, Oct.
[S.l.: s.n.], 2001. Citado na página 17.

RESNICK, M. Sowing the seeds for a more creative society. In: . [S.l.: s.n.], 2018. Acessado
em Maio, 2018. Citado na página 33.

SCAICO, P. D. et al. "programação no ensino médio: uma abordagem de ensino orientado
ao design com scratch". In: In Anais do XVIII WIE. Rio de Janeiro, Brasil. [S.l.: s.n.],
2012. Citado na página 18.

SCRATCH. About scratch (scratch documentation site). In: . [S.l.: s.n.], 2018. Acessado
em Maio, 2018. Citado na página 33.

SETTI, M. D. O. G. O processo de discretização do raciocínio matemático na tradução
para o raciocínio computacional: um estudo de caso no ensino/aprendizagem de algoritmos.
2009. Citado na página 16.

SETZER, V. W. O computador no ensino: nova vida ou destruição. EO Chaves e VW
Setzer, O uso de Computadores em Escolas-Fundamentos e Críticas. São Paulo: Scipione,
1988. Citado na página 22.

SHIRLEY, L. Matemática do século xx: o século em revista. Lisboa: APM., 2000. Citado
na página 2.

SILVA, A.; LOUREIRO, C.; VELOSO, M. G. Calculadoras na educação matemática.
In: Associação de Professores de Matemática. Lisboa, Portugal: [s.n.], 1989. Citado na
página 21.

SILVA, J. A Matemática, a Tecnologia e a Escola. [S.l.]: In APM (Ed.) Educação e
Matemática, 2003. n.o 71. Lisboa: APM. Citado na página 2.

SILVA, T. S.; SILVA, A. S.; MELO, J. C. Ensino de algoritmos a nível médio utilizando
música e robótica: Uma abordagem lúdica. 2011. Citado na página 19.

SOUZA, C. S. et al. Apropriação cultural da pesquisa de aquisição de pensamento
computacional: semeando campos de diversidade. In: Proceedings of the 2014 conference
on Innovation & technology in computer science education. [S.l.: s.n.]. p. 117–122. Citado
na página 20.

Referências

51

SOUZA, P. R. D. A.; DIAS, L. R. Kodu game labs: Estimulando o raciocínio lógico
através de jogos. In: In Anais do 23o SBIE, Rio de Janeiro. [S.l.: s.n.], 2012. Citado na
página 17.

VASCONCELLOS, C. D. S. Planejamento: projeto de ensino-aprendizagem e projeto
político-pedagógico – elementos metodológicos para elaboração e realização. In: 20 ed. São
Paulo: Libertad. [S.l.: s.n.], 2010. Citado na página 21.

VIEIRA, A.; PASSOS, O.; BARRETO, R. Um relato de experiência do uso da técnica
computação desplugada. In: Anais do XXI Workshop sobre Educação em Computação.
SBC, p. 670-679. [S.l.: s.n.], 2013. Citado na página 20.

APÊNDICE A – Avaliação do aprendizado
com Code.org.

52

Pesquisa sobre o uso da plataforma Code.org para o ensino na matemática.

1. Nome

——————————————————————————-

2. Idade

——————————————————————————-

3. Sexo

( ) Feminino ( ) Masculino ( ) Preﬁro não responder

4. Turma

( ) 1001 ( ) 1003 ( ) 2002 ( ) 3001

5. Já teve contato com a lógica de programação antes de usar o Code.org?

( ) Sim ( ) Não

6. Classiﬁque o nível de diﬁculdade das seguintes fases:

Fases|Diﬁculdades Muito
Fácil

Fácil Moderado Difícil Muito
Difícil

Não Fiz

Angry Birds

Era do Gelo

Caça ao tesouro

Criar Artes

Star Wars

Arte com Adesivos

7. Você precisou usar conceitos matemáticos para concluir os níveis?

( ) Sim ( ) Não

8. Como você classiﬁcaria o nível de aprendizado em programação usando

Code.org?

( ) Fraco ( ) Moderado ( ) Satisfatório ( ) Muito bom ( ) Excelente

APÊNDICE A. Avaliação do aprendizado com Code.org.

53

9. Como você classiﬁcaria o nível de aprendizado em matemática usando

Code.org?

( ) Fraco ( ) Moderado ( ) Satisfatório ( ) Muito bom ( ) Excelente

10. Como você classiﬁcaria essas atividades?

( ) Péssimo ( ) Ruim ( ) Regular ( ) Bom ( ) Excelente

11. Quais aspectos das aulas foram mais úteis ou valiosas para você?

——————————————————————————-

12. O que poderia ser feito para melhorar as aulas?

——————————————————————————–

APÊNDICE B – Avaliação do aprendizado
com Scratch.

54

Pesquisa sobre o uso do programa Scratch para o ensino na matemática.

1. Nome

——————————————————————————-

2. Idade

——————————————————————————-

3. Sexo

( ) Feminino ( ) Masculino ( ) Preﬁro não responder

4. Turma

( ) 1001 ( ) 1003 ( ) 2002 ( ) 3001

5. Como você classiﬁcaria o nível de diﬁculdade das atividades propostas

utilizando Scratch?

( ) Muito Fácil ( ) Fácil ( ) Moderado ( ) Difícil ( ) Muito Difícil

6. Como você classiﬁcaria o nível de diﬁculdade do Scratch em relação ao

Code.org?

( ) Mais fácil ( ) Igual ( ) Mais difícil

7. Qual foi a principal diferença entre o Scratch e o Code.org para você?

——————————————————————————-

8. Qual programa você mais gostou?

( ) Code.org ( ) Scratch ( ) Os dois ( ) Nenhum deles

9. Você precisou usar conceitos matemáticos para fazer as atividades pro-

postas no Scratch?

( ) Sim ( ) Não

10. Como você classiﬁcaria o uso do scratch para aprender matemática?

( ) Fraco ( ) Moderado ( ) Satisfatório ( ) Muito bom ( ) Excelente

APÊNDICE B. Avaliação do aprendizado com Scratch.

55

11. Você conseguiu aprender alguns conceitos matemáticos usando o Scratch?

( ) Sim ( ) Não ( ) Não sei responder

12. Quais aspectos das aulas foram mais úteis ou valiosas para você?

——————————————————————————-

13. O que poderia ser feito para melhorar as aulas?

——————————————————————————-

APÊNDICE C – Plano de Aula 1 – Code.org

56

1o Encontro - Fase 2 e 4 do Code.org.

1. Identiﬁcação

Curso: Ensino Médio

Disciplina: Matemática

Carga horária: 1h 40min.

Série: 1o ano, 2o ano, 3o ano

Ano: 2018

Professor: Aldeni Mont Serrat Rosa da Silva

2. Objetivo geral

Possibilitar uma aprendizagem satisfatória do uso da plataforma Code.org, construir
algoritmos usando blocos e relembrar operações matemáticas.

3. Objetivos especíﬁcos

Habilitar os alunos para resolver problemas e exercer protagonismo e autoria. De-
senvolver a criatividade para investigar, elaborar e testar. Formular e criar soluções.
Reforçar os conceitos matemáticos.

4. Conteúdo programático

Raciocínio lógico; Resolução de problema; Números naturais; Operações Algébricas;
Sistema posicional, montar algoritmo e criar sequência.

5. Roteiro

Duração de 5 min. - Solicitar que os alunos liguem os laptops.

Duração de 5 min. - Pedir para acessar a plataforma Code.org e criar uma conta.

Duração de 15 min. - O professor precisa criar uma turma e selecionar atividade
“Express Course (2018)”, pois ira gerar um código da turma.

Solicitar aos alunos para continuarem logados e irem para o ﬁnal da página para
digitarem o código da turma. Em seguida clicar na atividade proposta, fazer uma
breve apresentação sobre a plataforma.

Duração de 25 min. – Reproduzir o primeiro vídeo da atividade sobre algoritmo.
Após o vídeo perguntar o que eles entenderam e explicar algoritmo e lógica.

APÊNDICE C. Plano de Aula 1 – Code.org

57

Figura 25 – Criar conta no Code.org.

Figura 26 – Criar turma no Code.org.

Figura 27 – Local para digitar o código da turma no Code.org.

Duração de 45 min. – Execução da 2o e 4o fase. A 2o fase usa um personagem do jogo
Angry Birds, os alunos desenvolverão algoritmos sequenciais para mover o pássaro
até o porco. Para isso, eles arrastaram blocos de código para a “área de trabalho”,
criando uma sequência linear.

APÊNDICE C. Plano de Aula 1 – Code.org

58

Figura 28 – Exemplo da 2o fase.

A 4o fase usa o personagem do ﬁlme A Era do Gelo, os alunos encontrarão enigmas
que foram resolvidos incorretamente. Eles precisarão percorrer o código existente
para identiﬁcar erros, incluindo repetições incorretas, blocos ausentes, blocos extras
e blocos que estão fora de ordem, para corrigir e fazer com que o personagem chegue
até a noz.

Figura 29 – Exemplo da 4o fase.

Duração de 5 min. – Pedir para os alunos deslogar e desligar o laptop.

6. Avaliação

A avaliação será o acompanhamento do desenvolvimento das atividades durante a
aula.

7. Recursos

Quadro branco; Piloto; Projetor; caixa de som; Sala SESI; Laptop; Plataforma
Code.org

APÊNDICE D – Plano de Aula 2 – Code.org

59

2o Encontro - Fase 5 e 6 do Code.org.

1. Identiﬁcação

Curso: Ensino Médio

Disciplina: Matemática

Carga horária: 1h 40min.

Série: 1o ano, 2o ano, 3o ano

Ano: 2018

Professor: Aldeni Mont Serrat Rosa da Silva

2. Objetivo geral

Possibilitar uma aprendizagem satisfatória do uso da plataforma Code.org, construir
algoritmos usando blocos e relembrar operações matemáticas e geometria plana.

3. Objetivos especíﬁcos

Habilitar os alunos para resolver problemas e exercer protagonismo e autoria. De-
senvolver a criatividade para investigar, elaborar e testar. Formular e criar soluções.
Reforçar os conceitos matemáticos.

4. Conteúdo programático

Raciocínio lógico; Resolução de problema; Números naturais; Operações Algébricas;
Sistema posicional, Reconhecimento de padrões, Geometria plana; Ângulos; montar
algoritmo e criar sequência.

5. Roteiro

Duração de 5 min. - Solicitar que os alunos liguem os laptops.

Duração de 5 min. - Pedir para acessar a plataforma Code.org e fazer o login.

Duração de 15 min. - Execução da 5o fase. Nessa fase usa o personagem Laurel, the
Aventure, em que os alunos criarão algoritmos usando repetições para fazer com que
Laurel recolha os tesouros enquanto percorre por um caminho.

Duração de 40 min. – Execução da 6o fase. Nessa fase os alunos assumirão o controle
do Artista para concluir desenhos na tela. Esta fase do Artista permitirá que os

APÊNDICE D. Plano de Aula 2 – Code.org

60

Figura 30 – Exemplo da 5o fase.

alunos criem imagens de crescente complexidade usando novos blocos como “avance
por 100 pixels” e “vire à direita por 90 graus”.

Figura 31 – Exemplo da 6o fase.

Duração de 5 min. – Pedir para os alunos deslogar e desligar o laptop.

6. Avaliação

A avaliação será o acompanhamento do desenvolvimento das atividades durante a
aula.

7. Recursos

Quadro branco; Piloto; Projetor; Sala SESI; Laptop; Plataforma Code.org.

APÊNDICE E – Plano de Aula 3 – Code.org

61

3o Encontro - Fase 8 e 9 do Code.org.

1. Identiﬁcação

Curso: Ensino Médio

Disciplina: Matemática

Carga horária: 1h 40min.

Série: 1o ano, 2o ano, 3o ano

Ano: 2018

Professor: Aldeni Mont Serrat Rosa da Silva

2. Objetivo geral

Possibilitar uma aprendizagem satisfatória do uso da plataforma Code.org, construir
algoritmos usando blocos e relembrar operações matemáticas, geometria plana,
padrões de repetição e Círculo trigonométrico.

3. Objetivos especíﬁcos

Habilitar os alunos para resolver problemas e exercer protagonismo e autoria. De-
senvolver a criatividade para investigar, elaborar e testar. Formular e criar soluções.
Reforçar os conceitos matemáticos.

4. Conteúdo programático

Raciocínio lógico; Resolução de problema; Números naturais; Operações Algébricas;
Sistema posicional; Reconhecimento de padrões; Padrões de repetição. Geometria
plana; Ângulos; Arcos congruentes; Círculo trigonométrico montar algoritmo e criar
sequência.

5. Roteiro

Duração de 5 min. - Solicitar que os alunos liguem os laptops.

Duração de 5 min. - Pedir para acessar a plataforma Code.org e fazer o login.

Duração de 35 min. - Execução da 8o fase. Nessa fase tem o tema Star Wars, os
alunos vão ajudar o Droide BB-8 a atravessar um labirinto recolhendo as sucatas,
reconhecendo padrões e usando repetições.

Duração de 35 min. – Execução da 9o fase. Nessa fase os alunos reproduzem as
sombras das ﬁguras ou podem criam seus próprios designers usando os recursos

APÊNDICE E. Plano de Aula 3 – Code.org

62

Figura 32 – Exemplo da 8o fase.

disponíveis daquele nível. É necessário utilizar os conceitos de geometria, como
ângulos e círculo trigonométrico.

Figura 33 – Exemplo da 9o fase.

Duração de 15 min. – Pedir para os alunos responderem ao formulário sobre a
plataforma Code.org.

Duração de 5 min. – Pedir para os alunos deslogar e desligar o laptop.

6. Avaliação

A avaliação será o acompanhamento do desenvolvimento das atividades durante a
aula e o formulário sobre aprendizado usando a plataforma Code.org.

7. Recursos

Quadro branco; Piloto; Projetor; Sala SESI; Laptop; Plataforma Code.org.

APÊNDICE F – Plano de Aula 1 – Scratch

63

1o Encontro

1. Identiﬁcação

Curso: Ensino Médio

Disciplina: Matemática

Carga horária: 1h 40min.

Série: 1o ano, 2o ano, 3o ano

Ano: 2018

Professor: Aldeni Mont Serrat Rosa da Silva

2. Objetivo geral

Possibilitar uma aprendizagem satisfatória do uso da plataforma Scratch, construir
algoritmos usando blocos e ajudar a ﬁxar conceitos matemáticos.

3. Objetivos especíﬁcos

Habilitar os alunos para resolver problemas e exercer protagonismo e autoria. De-
senvolver a criatividade para investigar, elaborar e testar. Formular e criar soluções.
Reforçar os conceitos matemáticos.

4. Conteúdo programático

Raciocínio lógico, resolução de problema, números Inteiros, números reais, operações
algébricas, sequência, progressão aritmética, área de ﬁguras planas.

5. Roteiro

Duração de 5 min. - Solicitar que os alunos liguem os laptops.

Duração de 5 min. - Apresentar a interface do programa Scratch e explicar um pouco
sobre os blocos de comando que existe no programa.

Duração de 15 min. – Apresentação das duas primeiras atividades feitas. A primeira
atividade foi do antecessor e sucessor. Essa atividade foi planejada dentro de um
cenário hipotético nomeado “Show da PROGRAMÁTICA”, no qual o apresentador
do show é o avatar do próprio professor da turma, em que é informado (digitado)
para o professor qualquer número inteiro e ele responde quem é o antecessor e o
sucessor.

APÊNDICE F. Plano de Aula 1 – Scratch

64

Figura 34 – Interface do Scratch.

Figura 35 – Blocos de comandos de Movimento, Aparência, Som e Caneta respectivamente.

A segunda atividade foi da área de um retângulo, no qual é informado para o professor
a unidade de medida, a base e a altura do retângulo e ele responde qual é o valor da
área.

Duração de 35 min. – Criar uma animação chamada “Show da Programática”, onde
o apresentador do show é um professor e fazer com que ele receba um número inteiro
qualquer e vocalize o antecessor e o sucessor desse número.

Duração de 35 min. – Informar ao professor do Show da Programática a unidade de
medida, a altura e a base de um retângulo de modo que ele possa vocalizar a área
do retângulo.

Duração de 5 min. – Pedir para os alunos desligarem o laptop.

6. Avaliação

APÊNDICE F. Plano de Aula 1 – Scratch

65

Figura 36 – Blocos de comandos de Controle, Sensores, Operadores e Variáveis respectiva-

mente.

Figura 37 – Atividade do antecessor e sucessor.

A avaliação será o acompanhamento do desenvolvimento das atividades durante a
aula.

7. Recursos

Quadro branco; Piloto; Projetor; Sala SESI; Laptop; Scratch.

APÊNDICE F. Plano de Aula 1 – Scratch

66

Figura 38 – Atividade da área de um retângulo.

Figura 39 – Exemplo de algoritmo da atividade antecessor e sucessor.

APÊNDICE F. Plano de Aula 1 – Scratch

67

Figura 40 – Exemplo de algoritmo da atividade área de um retângulo.

APÊNDICE G – Plano de Aula 2 – Scratch

68

2o Encontro

1. Identiﬁcação

Curso: Ensino Médio

Disciplina: Matemática

Carga horária: 1h 40min.

Série: 1o ano, 2o ano, 3o ano

Ano: 2018

Professor: Aldeni Mont Serrat Rosa da Silva

2. Objetivo geral

Possibilitar uma aprendizagem satisfatória do uso da plataforma Scratch, construir
algoritmos usando blocos e ajudar a ﬁxar conceitos matemáticos.

3. Objetivos especíﬁcos

Habilitar os alunos para resolver problemas e exercer protagonismo e autoria. De-
senvolver a criatividade para investigar, elaborar e testar. Formular e criar soluções.
Reforçar os conceitos matemáticos.

4. Conteúdo programático

Raciocínio lógico, resolução de problema, números naturais, números reais, operações
algébricas, transformação da unidade de tempo, plano cartesiano, distância entre
dois ponto, área de ﬁguras planas.

5. Roteiro

Duração de 5 min. - Solicitar que os alunos liguem os laptops.

Duração de 30 min. - Informar ao professor do Show da Programática a unidade de
medida, a altura, a base maior e a base menor de um trapézio de modo que ele possa
vocalizar a área do trapézio.

Duração de 30 min. – Informar ao professor do Show da Programática a idade
expressa em anos, meses e dias de modo que ele possa vocalizar a idade expressa
apenas em dias. (Considerando o ano com 365 dias e o mês com 30 dias)

Duração de 30 min. – Informar ao professor do Show da Programática as coordenadas
de dois pontos A(x1, y1) e B(x2, y2) de modo que ele possa vocalizar a distância
entre esses dois pontos.

APÊNDICE G. Plano de Aula 2 – Scratch

69

Figura 41 – Exemplo de algoritmo da atividade área de um trapézio.

Figura 42 – Exemplo de algoritmo da atividade idade expressa apenas em dias.

Figura 43 – Exemplo de algoritmo da atividade distância entre dois pontos.

Duração de 5 min. – Pedir para os alunos desligarem o laptop.

6. Avaliação

A avaliação será o acompanhamento do desenvolvimento das atividades durante a
aula.

7. Recursos

APÊNDICE G. Plano de Aula 2 – Scratch

70

Quadro branco; Piloto; Projetor; Sala SESI; Laptop; Scratch.

APÊNDICE H – Plano de Aula 3 – Scratch

71

3o Encontro

1. Identiﬁcação

Curso: Ensino Médio

Disciplina: Matemática

Carga horária: 1h 40min.

Série: 1o ano, 2o ano, 3o ano

Ano: 2018

Professor: Aldeni Mont Serrat Rosa da Silva

2. Objetivo geral

Possibilitar uma aprendizagem satisfatória do uso da plataforma Scratch, construir
algoritmos usando blocos e ajudar a ﬁxar conceitos matemáticos.

3. Objetivos especíﬁcos

Habilitar os alunos para resolver problemas e exercer protagonismo e autoria. De-
senvolver a criatividade para investigar, elaborar e testar. Formular e criar soluções.
Reforçar os conceitos matemáticos.

4. Conteúdo programático

Raciocínio lógico, resolução de problema, números reais, operações algébricas, por-
centagem, estatística, matemática ﬁnanceira, triângulo.

5. Roteiro

Duração de 5 min. - Solicitar que os alunos liguem os laptops.

Duração de 25 min. - Informar ao professor do Show da Programática o total de
eleitores de um município, a quantidade de votos brancos, nulos e válidos de modo
que ele possa vocalizar o percentual de votos brancos, nulos e válidos em relação ao
total de eleitores.

Duração de 25 min. – Informar ao professor do Show da Programática o salário
mensal atual e o percentual de aumento que recebeu de modo que ele possa vocalizar
o novo salário.

Duração de 25 min. – Informar ao professor do Show da Programática 3 medidas
de mesma unidade (lado 1, lado 2 e lado 3) de modo que ele possa vocalizar se é
possível criar um triângulo ou não.

APÊNDICE H. Plano de Aula 3 – Scratch

72

Figura 44 – Exemplo de algoritmo da atividade estatística da eleição.

Figura 45 – Exemplo de algoritmo da atividade reajuste salarial.

Duração de 15 min. – Pedir para os alunos responderem ao formulário sobre o
programa Scratch.

Duração de 5 min. – Pedir para os alunos desligarem o laptop.

6. Avaliação

A avaliação será o acompanhamento do desenvolvimento das atividades durante a
aula e o formulário sobre aprendizado usando a plataforma Scratch.

7. Recursos

Quadro branco; Piloto; Projetor; Sala SESI; Laptop; Scratch.

APÊNDICE H. Plano de Aula 3 – Scratch

73

Figura 46 – Exemplo de algoritmo da atividade formar um triângulo.

