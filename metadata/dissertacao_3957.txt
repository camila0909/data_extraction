FUNDAÇÃO UNIVERSIDADE FEDERAL DO AMAPÁ – UNIFAP 

MESTRADO PROFISSIONAL EM MATEMÁTICA EM REDE NACIONAL – PROFMAT 

RONALDO LOBATO PINHEIRO 

FUNÇÕES RECURSIVAS 

A MATEMÁTICA DA CIÊNCIA DA COMPUTAÇÃO APLICADA AO 

ENSINO MÉDIO. 

MACAPÁ – AP  

Dezembro/2021

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
FUNDAÇÃO UNIVERSIDADE FEDERAL DO AMAPÁ – UNIFAP 

MESTRADO PROFISSIONAL EM MATEMÁTICA EM REDE NACIONAL – PROFMAT 

RONALDO LOBATO PINHEIRO 

FUNÇÕES RECURSIVAS 

A MATEMÁTICA DA CIÊNCIA DA COMPUTAÇÃO APLICADA AO 

ENSINO MÉDIO. 

Dissertação  apresentada  ao  Programa  de  Pós-
Graduação  Mestrado  Profissional  em  Matemática 
em  Rede  Nacional  -  PROFMAT,  Universidade 
Federal do Amapá, como requisito para a obtenção 
do grau de Mestre em Matemática. 

Orientador: Prof. Dr. José Walter Cárdenas Sótil. 

Macapá – AP 

Dezembro/2021

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
FUNDAÇÃO UNIVERSIDADE FEDERAL DO AMAPÁ – UNIFAP 

MESTRADO PROFISSIONAL EM MATEMÁTICA EM REDE NACIONAL-PROFMAT 

TERMO DE APROVAÇÃO 

Os  membros  da  Banca  Examinadora  designada  pelo  Colegiado  do  Programa  de  Pós-
Graduação  Mestrado  Profissional  em  Matemática  em  rede  Nacional  –  PROFMAT,  da 
Universidade  Federal  do Amapá  –  UNIFAP,  foram  convocados  para  realizar  a  arguição  da 
Dissertação  de  Mestrado  de  RONALDO  LOBATO  PINHEIRO,  intitulada:  ―Funções 
Recursivas. A matemática da ciência da computação aplicada ao Ensino Médio‖, após terem 
inquerido o aluno e realizado avaliação do trabalho, são de parecer pela sua APROVAÇÂO 
no rito da defesa. 

A outorga do título de Mestre está sujeita à homologação pelo colegiado, ao atendimento de 
todas as indicações e correções solicitadas pela Banca e ao pleno atendimento das demandas 
regimentais do Programa de Pós-Graduação. 

Macapá, 03 de dezembro de 2021. 

 
 
 
 
 
 
 
Aos  meus  pais  Alderico  e  Rosilda  Pinheiro  (in 

memoriam) pelos exemplos de vida, amor, traba-

lho árduo e dedicação. 

À minha esposa Priscila e aos meus filhos Davi e 

Anna,  pelo  amor  familiar  duplamente  especial  e 

incondicional. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
AGRADECIMENTOS 

Primeiramente a Deus, pelas oportunidades e bênçãos em nossas vidas, principalmente 

por Ele ter colocado as pessoas certas em nosso árduo caminho. 

Aos meus pais pela dedicação, educação, princípios e valores de vida; aos meus irmãos 

pelo apoio e carinho. Minha esposa e meus filhos por entenderem minha ausência. 

Aos professores que contribuíram bastante não apenas com conhecimento matemático, 

mas  também  pelo  ensino  de  vida.  E  principalmente  ao  amigo  Walter  Cárdenas  pelo  apoio, 

grande ajuda e compreensão, sem os quais provavelmente hoje eu não estaria concluindo esta 

importante etapa da minha vida. 

Aos meus amigos (antes colegas) de turma pela convivência fraternal, ajuda e troca de 

conhecimentos. 

 
 
 
 
 
 
 
Como o tecido do universo é o mais perfeito e 
fruto  do  trabalho  do  mais  sábio  Criador,  nada 
acontece no universo sem que alguma lei de máximo 
e mínimo apareça. 

Leonhard Euler 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
RESUMO 

Esta dissertação mostra ferramentas para tornar o aprendizado mais sólido: a matemática das 
funções recursivas aplicadas à ciência da computação. Mas não apenas isso, são abordadas a 
utilização da recursividade em diferentes perspectivas: funções recursivas e arte matemática, 
com  a  construção  de  fractais  em  papel,  construções  geométricas  em  Geogebra  e  imagens 
recursivas (efeito Droste). Propomos que é possível trabalharmos alguns conceitos de ciência 
da computação, visto que, já temos alunos com noções de programação, o que está longe da 
realidade  de  muitos.  Alguns  exemplos  acompanham,  para  se  ter  uma  noção,  o  básico  do 
código em Python. Logo, ferramentas mais rebuscadas, geralmente deixadas de lado, podem 
sim ser inseridas num contexto palpável para nossos alunos. E seria uma arma contra a uma 
prática crescente: ensinar só o mínimo. 

Palavras-chave:  Funções  recursivas.  Ciência  da  computação.  Educação  matemática.  Arte-
matemática.  

 
 
 
  
 
 
ABSTRACT 

This dissertation shows tools to make learning more solid: the mathematics of recursive func-
tions applied to computer science. But not only that, we approach the use of recursion in dif-
ferent perspectives: recursive functions and mathematical art, with the construction of fractals 
in paper, geometric constructions in Geogebra and recursive images (Droste effect). We pro-
pose that it is possible to work with some computer science concepts, since we already have 
students  with  programming  notions,  which  is  far  from  the  reality  of  many.  Some  examples 
accompany, to have a notion, the basics of Python code. Therefore, more elaborate tools, usu-
ally left aside, can be inserted in a context that is palpable for our students. And it would be a 
weapon against a growing practice: teaching only the minimum. 

Word-key: Recursive functions. Computer science. Mathematics education. Art-mathematics. 

 
 
 
 
  
 
LISTA DE SIGLAS 

BNCC – Base Nacional Comum curricular. 

LDBEN — Lei de Diretrizes e Bases da Educação Nacional.  

GIF – Graphics interchange Format (Formato para intercâmbio de gráficos). 

IMPA — Instituto de Matemática Pura e Aplicada. 

PAPMEM — Programa de Aperfeiçoamento para Professores do Ensino Médio. 

PCN – Parâmetros Curriculares Nacional. 

PISA – Programme for International Student Assessment (Avaliação de Alunos). 

PROFMAT – Mestrado Profissional em Matemática em Rede Nacional. 

STEAM – Science, Technology, Enginnering, Arts and Mathematics. 

UNIFAP — Universidade Federal do Amapá. 

 
 
 
 
 
 
 
 
 
 
 
 
 
LISTA DE FIGURAS 

Figura 1: Gráfico da Função 91 de McCarthy .......................................................................... 28 

Figura 2: Jogo da torre de Hanói .............................................................................................. 41 

Figura 3: etapas de solução da torre de Hanói com 3 discos .................................................... 41 

Figura 4: representação da PA em gráfico cartesiano ............................................................... 45 

Figura 5: representação da PG em gráfico cartesiano .............................................................. 46 

Figura 6: espiral de Fibonacci com 5 iterações e com 7 iterações. .......................................... 49 

Figura 7: Interface do Geogebra com a função de Fibonacci. .................................................. 50 

Figura 8: Efeito recursivo usando apenas quadrados no Geogebra .......................................... 51 

Figura 9: Construção do fractal triângulo de Sierpinski. .......................................................... 51 

Figura 10: Números triangulares no Geogebra de forma dinâmica. ......................................... 52 

Figura 11: Flor de girassol, espiral de Fibonacci. ..................................................................... 53 

Figura 12: Imagens obtidas com 4 e 8 iterações ....................................................................... 54 

Figura 13: imagem do Dragão barbudo com 5 iterações. ......................................................... 54 

Figura 14: Fractal clássico do triângulo de Sierpinski ............................................................. 55 

Figura 15: Clássico fractal de papel, degraus de escada. .......................................................... 56 

 
 
 
 
 
 
 
 
SUMÁRIO 

1. INTRODUÇÃO .................................................................................................................... 14 

2. FUNÇÕES RECURSIVAS ................................................................................................... 17 

2.1 Relações e Funções: ........................................................................................................ 17 

2.2 Recursividade ................................................................................................................. 19 

3. É UMA FUNÇÃO? .............................................................................................................. 23 

3.1 Função de Fibonacci ....................................................................................................... 23 

3.2 Aproximação da raiz quadrada de 2 ............................................................................... 25 

3.3 Função 91 de McCarthy ................................................................................................. 26 

3.4 A recursividade G ........................................................................................................... 28 

3.5 A recursividade H ........................................................................................................... 29 

3.6 Conjetura de Collatz (Problema 3n+1) ........................................................................... 30 

4. APLICAÇÕES DE FUNÇÕES RECURSIVAS ................................................................... 32 

4.1 Triângulo de Pascal ......................................................................................................... 32 

4.2 Fatorial ............................................................................................................................ 34 

4.3 Função de Ackermann .................................................................................................... 35 

4.4 Progressão geométrica .................................................................................................... 37 

4.5 Progressão aritmética ...................................................................................................... 39 

4.6 Torre de Hanói ................................................................................................................ 40 

5. RECURSIVIDADE USANDO O GEOGEBRA E OUTROS RECURSOS 
TECNOLÓGICOS ................................................................................................................... 44 

5.1 Definição de Progressões................................................................................................ 44 

5.1.1 Progressão aritmética ............................................................................................... 44 

5.1.2 Progressão Geométrica ............................................................................................ 45 

5.2 Matemática financeira .................................................................................................... 46 

5.3 Proposta de utilização do Geogebra ............................................................................... 48 

 
 
 
5.4 Imagens Recursivas (efeito Droste): Arte tecnológica com estrutura recursiva. ............ 53 

5.5 Fractais de papel ............................................................................................................. 55 

6. CONSIDERAÇÕES FINAIS ............................................................................................... 57 

Referências bibliográficas ........................................................................................................ 59 

ANEXOS .................................................................................................................................. 60 

 
 
 
 
 
 
14 

1. INTRODUÇÃO 

É notório que a educação básica há tempos passa por momentos difíceis. Pensava-se que 

com as novas tecnologias no ensino ocorreria um avanço na matemática, porém, ainda vemos 

a falta de significado para a maioria dos alunos. Os resultados do PISA, segundo relatório de 

2018,  vêm  nos  alertando  acerca  disso,  esse  Programa  para  avaliação  internacional  de 

estudantes avalia três domínios: letramento em leitura, letramento em ciência e letramento em 

matemática, que no relatório Brasil no PISA 2018 é definido como:  

[...] a capacidade de formular, empregar e interpretar a matemática em uma série de 
raciocinar  matematicamente  e  utilizar  conceitos, 
contextos,  o  que 
procedimentos,  fatos  e  ferramentas  matemáticos  para  descrever,  explicar  e  prever 
fenômenos. (BRASIL, 2020, p. 24). 

inclui 

Atualmente  temos  várias  propostas  pedagógicas  que  visam  reverter  a  situação  nada 

confortável da aprendizagem matemática.  

Dentre  os  conteúdos  que  atormentam  os  estudantes,  o  tema  Funções  merece  atenção 

especial,  pois  os  alunos  apresentam  grande  dificuldade,  devido  principalmente  ao  uso  da 

álgebra, mesmo sendo um conteúdo com várias aplicações no cotidiano. E as abordagens no 

presente trabalho são uma forma de chamar a atenção desses alunos. 

Novas  propostas  são  sempre  necessárias,  como  citam  os  Parâmetros  Curriculares 

Nacionais (PCN) para o Ensino Médio (1999): 

Em um mundo onde as necessidades sociais, culturais e profissionais ganham novos 
contornos,  todas  as  áreas  requerem  alguma  competência  em  Matemática  e  a 
possibilidade de  compreender  conceitos e procedimentos matemáticos  é  necessário 
tanto para tirar conclusões e fazer argumentações, quanto para o cidadão agir como 
consumidor prudente ou tomar decisões em sua vida pessoal e profissional (p. 40). 

E a partir de 2018 temos também a BNCC para nortear docentes a focar nas habilidades 

dos alunos, no ‗saber usar‘, preparar os jovens para viver, criar, argumentar, não apenas saber 

o conteúdo. Vejamos a definição presente na própria:  é um documento de caráter normativo 

que define o conjunto orgânico e progressivo de aprendizagens essenciais que todos os alunos 

devem desenvolver ao longo das etapas e modalidades da Educação Básica. (BRASIL, 2018). 

Essa  dissertação  é  uma  pesquisa  bibliográfica  e,  na  busca  por  propostas,  surgiu  a 

recursividade, precisamente, funções recursivas usadas na ciência da computação. Associados 

a  ela  utilizaremos:  sequências,  relações,  funções,  recursividade,  noção  de  programação  em 

Python,  progressões,  matemática  financeira,  construções  em  Geogebra,  fractais  em  papel  e 

imagens com efeito Droste (efeito recursivo). Objetivando, com esses conteúdos, a educação 

básica,  apesar  de  usarmos  o  método  de  Newton  (estudado  na  graduação)  como  exemplo  de 

 
 
 
15 

recursividade. 

No primeiro capítulo falaremos sobre os conceitos de relações, funções e recursividade; 

consequentemente  de  funções  recursivas.  E  já  temos  exemplos  de  código  em  Python 

(linguagem  de programação amplamente difundida).  Segundo Markushevich (1986, p. 8)  ―a 

palavra recorrente se aplica aqui precisamente porque para determinar o termo posterior tem 

que recorrer aos anteriores‖. 

No  segundo  capítulo  demonstramos  quando  uma  recursividade  é  função  ou  não,  para 

isso, usamos as funções: Fibonacci, aproximação da raiz quadrada de dois (usando o método 

de Newton), função 91 de McCarthy, as duas recursividades G e H, e a conjectura de Collatz. 

Também com as funções escritas em Python  

No  terceiro  temos  como  aplicações  de  funções  recursivas:  Triângulo  de  pascal 

(relacionando também com combinação simples), fatorial, função Ackermann, PA e PG como 

funções e a famosa torre de Hanói. 

No  quarto  capítulo  temos  a  recursividade  usando  o  Geogebra,  tanto  com  figuras 

geométricas planas quanto um exemplo envolvendo geometria dinâmica, editores de imagens 

para gerar o efeito recursivo e folhas de papel para construção de fractais.  

Levando em consideração o que a BNCC diz sobre a percepção acerca da matemática 

no trecho: 

Essa  percepção  da  unidade  da  Matemática,  além  da  diversidade  de  suas  práticas, 
serve  também  para  mostrar  que  o  desenvolvimento  da  disciplina  é  fruto  da 
experiência humana ao longo da história. Assim, ela não é um edifício perfeito que 
surgiu  pronto  da  mente  de  poucos  seres  privilegiados,  a  fim  de  ser  estudada  para 
puro deleite intelectual. O desenvolvimento gradual desse campo do saber, por seres 
humanos  inseridos  em  culturas  e  sociedades  específicas,  confere  a  ela  valores 
estéticos  e  culturais,  e  fornece  uma  linguagem  com  a  qual  pessoas  de  diferentes 
realidades  podem  se  comunicar,  com  precisão  e  concisão,  em  várias  áreas  do 
conhecimento. (BRASIL, 2018, p.522) 

Mostramos  ferramentas  para  diferenciar  as  aulas  buscando  oferecer,  sempre  que 

possível,  um  ambiente  escolar,  diversificado  (como  é  a  nossa  juventude),  estimulante  e  que 

prepara essa geração para os desafios do futuro. 

A  educação  precisa  do  professor  como  educador/mentor.  É  também  papel  dos 

educadores conhecer cada aluno (não de forma geral), se aproximar dos estudantes, não basta 

transmitir  conhecimentos,  tem  que  oferecer  atividades  diversificadas  para  atender  as 

diferenças. 

Na  elaboração  dessa  dissertação  visamos  ampliar  o  repertório  de  possibilidades,  pois, 

pela  BNCC,  o  ensino  não  deve  ser  apenas  na  dimensão  do  conhecimento,  mas  o 

 
 
 
16 

desenvolvimento pleno: pessoal, social, emocional, físico e cultural. 

Hoje,  contamos  com  algumas  escolas  que  possuem  sala  Maker  e/ou  laboratório  de 

robótica.  Estamos  longe  de  ser  uma  realidade  para  todos,  mas  já  é  um  início.  E  devemos 

mencionar também franquias de escolas de Robótica e Programação, a maioria com o slogan 

―educação do futuro‖. Logo temos a missão de nos preparar para receber os ―novos‖ alunos 

que já entrarão no fundamental II e no ensino médio com essa bagagem de conhecimento. 

As  propostas  desse  trabalho  estão  alinhadas  com  as  novas  metodologias  de  ensino,  o 

uso delas tem como base o conceito da metodologia STEAM (traduzindo do inglês: Ciência, 

Tecnologia, Engenharia, Arte e Matemática), que está mudando a forma de como as crianças e 

adultos aprendem. 

 
 
 
 
17 

2.  FUNÇÕES RECURSIVAS 

Uma  função  recursiva  é  uma  função  que  se  refere  a  si  própria.  A  ideia  consiste  em 

utilizar  as  saídas  da própria função como novas  entradas.  Ou,  segundo  CORMEN  (2002,  p. 

50), ―Uma recorrência é uma equação ou desigualdade que descreve uma função em termos 

de seu valor em entradas menores‖. 

Porém,  antes  de  detalharmos  o  significado  da  função  recursiva  vamos  definir  os 

conceitos  de  produto  cartesiano  e  relações  entre  conjuntos  que  são  necessários  para  a 

definição de função. 

2.1  Relações e Funções: 

Podemos usar medidas para tudo, indicar a distância entre cidades, a velocidade de um 

ônibus, a temperatura em uma cidade, a quantidade de chuva, etc. 

Qualquer característica que pode ser expressa por uma medida (quantidade) é chamada 

de grandeza. Exemplos de grandeza: massa, comprimento, área, volume, velocidade, pressão, 

temperatura, profundidade, tempo, vazão, etc. 

Um  fenômeno/objeto  que  tem  a  variação  de  sua  medida  associada  a  outro  fenôme-

no/objeto depende da variação das medidas dessa outra grandeza. Por exemplo: o crescimento 

de  uma  planta  depende  da  quantidade  de  nutrientes  e  do  tempo;  a  taxa  de  evaporação  das 

águas de um rio depende  da temperatura e da  umidade do ar;  a  pressão no  mar depende  da 

profundidade. 

Então, função é a uma forma de estabelecer uma relação entre duas ou mais grandezas. 

Para  estudar  essas  relações,  podemos  recorrer  a  equações  matemáticas  que  relacionem  as 

grandezas envolvidas. 

Definição 2.1 O produto cartesiano 𝑨 × 𝑩 entre os conjuntos 𝑨 e 𝑩 é o conjunto formado por 

todos  os  pares  ordenados  (𝒂, 𝒃),  onde  a  é  um  elemento  do  conjunto  𝑨(𝒂 ∈ 𝑨)  e  b  é  um 

elemento do conjunto 𝑩(𝒃 ∈ 𝑩). 

Exemplo  2.1.    O  produto  cartesiano  dos  conjuntos  𝑨 = *𝒂, 𝒃+  e  𝑩 = *𝟏, 𝟐, 𝟑+  é  o  conjunto 

𝑨 × 𝑩 = *(𝒂, 𝟏), (𝒂, 𝟐), (𝒂, 𝟑), (𝒃, 𝟏), (𝒃, 𝟐), (𝒃, 𝟑)+.  Observe  que  o  conjunto  A  tem  2 

elementos, o conjunto B  tem 3 elementos e o produto cartesiano 𝑨 × 𝑩 tem 6 elementos.  

Em geral, se 𝑨 e 𝑩 são conjuntos finitos, o número de elementos do produto cartesiano 

𝑨 × 𝑩 é calculado pelo produto entre o número de elementos do conjunto A e o número de 

 
 
18 

elementos  do  conjunto  B  (para  prova,  ver  LAGES,  Elon;  et  all.  A  Matemática  do  Ensino 

Médio, vol. 1. Pg. 78). 

Definição 2.2 Uma relação 𝑹: 𝑨 → 𝑩 é qualquer subconjunto do produto cartesiano 𝑨 × 𝑩, 

Se (𝒂, 𝒃) ∈ 𝑹, escrevemos 𝑹(𝒂) = 𝒃 ou 𝒂 → 𝒃. 

Exemplo 2.2  Como 𝑨 × 𝑩 no exemplo 1.1 tem 6 elementos, então o produto cartesiano tem 

𝟐𝟔 subconjuntos e, portanto, existem 64 relações entre os conjuntos 𝑨 e 𝑩. As relações triviais 

são  o  conjunto  nulo  𝑹𝟏 = 𝝓  e  o  próprio  produto  cartesiano  𝑹𝟐 = 𝑨 × 𝑩.  Na  relação  𝑹𝟑 =

*(𝒂, 𝟏), (𝒂, 𝟑)+ o elemento a de A está associado a dois elementos de B, enquanto o elemento 

b  de  A  não  tem  nenhum  elemento  associado  a  B.  Já  nas  relações  𝑹𝟒 = *(𝒂, 𝟏), (𝒃, 𝟐)+  e 
𝑹𝟓 = *(𝒂, 𝟑), (𝒃, 𝟏)+ a cada elemento de A corresponde um único elemento de B. 

Segundo  PAIVA  (2010,  p.  67),  ―uma  relação  f  de  A  em  B  é  função  se,  e  somente  se, 

qualquer elemento de A está associado, através de f, a um único elemento de B”. 

Definição  2.3  Uma  função  𝒇: 𝑨 → 𝑩  é  uma  relação  de  A  em  B,  tal  que  a  cada  um  dos 

elementos de A está associado um único elemento de B. 

O  domínio  da  função  𝒇: 𝑨 → 𝑩  é  o  conjunto A,  o  contradomínio  é  o  conjunto B  e  a 

imagem é o conjunto formado pelos elementos de B que estão associados a algum elemento 

de  A.  Denotamos  𝑫(𝒇)  o  domínio  de  𝒇,  𝑪𝑫(𝒇)  o  contradomínio  de  𝒇  e  𝑰𝒎(𝒇) =

*𝒚 ∈ 𝑩|∃𝒙 ∈ 𝑨 𝒄𝒐𝒎(𝒙, 𝒚) ∈ 𝒇+ a imagem de 𝒇. 

Exemplo 2.3   No exemplo 1.2, a relação 𝑹𝟑 = *(𝒂, 𝟏), (𝒂, 𝟑)+ não é uma função, enquanto 
𝑹𝟒 = *(𝒂, 𝟏), (𝒃, 𝟐)+ e 𝑹𝟓 = *(𝒂, 𝟑), (𝒃, 𝟏)+ são funções.  

Exemplo  2.4    Se  𝑨 = *𝟎, 𝟏, 𝟐, 𝟑, 𝟒+,  e  𝑩 = *𝟎, 𝟏, 𝟐, 𝟑, 𝟒, 𝟓, 𝟔, 𝟕, 𝟖, 𝟗+    então  𝒇 = *(𝟎, 𝟎),

(𝟏, 𝟐), (𝟐, 𝟒), (𝟑, 𝟔), (𝟒, 𝟖)+ é uma função de A em B com domínio 𝑫(𝒇) = 𝑨, contradomínio  

𝑪𝑫(𝒇) = 𝑩  e  imagem  𝑰𝒎(𝒇) = *𝟎, 𝟐, 𝟒, 𝟔, 𝟖+.  A  função  𝒇  verifica  a  seguinte  lei  𝒇(𝒙) =

𝟐𝒙, ∀𝒙 ∈ 𝑨. 

 
 
 
 
19 

2.2 Recursividade 

A  recursão  está  presente  em  diversas  áreas  do  conhecimento  como: Arte,  Linguística, 

música,  computação  e  matemática,  nesta  última,  objeto  desse  trabalho,  pode  ser  usada  para 

definir, por exemplo, sequências e funções.  

Na computação, um algoritmo recursivo é o processo pelo qual passa certo procedimen-

to quando um dos passos do procedimento em questão envolve a repetição do passo anterior. 

Um procedimento que se utiliza da recursão é dito recursivo. Para que a recursão funcione, a 

parte que falta resolver deve se parecer com o problema original, mas sendo ligeiramente me-

nor ou mais simples do que o problema original. 

Segundo  ROSEN  (2010,  p.  294),  ―às  vezes  é  difícil  definir  um  objeto  explicitamente. 

entretanto,  pode  ser  fácil  defini-lo  em  termos  de  si  próprio‖.  Ou  seja,  recursivamente,  seria 

incluir o item que está sendo definido como parte da definição, como veremos no exemplo.  

Exemplo 2.5 Para ajudar a entender o conceito de recursão consideremos a clássica recursão 

de Fibonacci: 𝒇(𝟎) = 𝟏, 𝒇(𝟏) = 𝟏, 𝒇(𝟐) = 𝟐, 𝒇(𝟑) = 𝟑, 𝒇(𝟒) = 𝟓, 𝒇(𝟓) = 𝟖, 𝒇(𝟔) = 𝟏𝟑,.., 

em  que  o  primeiro  e  o  segundo  termos  são  iguais  a  1,  e  a  partir  do  terceiro,  cada  termo  é 

obtido pela soma dos dois anteriores (𝟏 + 𝟏 = 𝟐; 𝟏 + 𝟐 = 𝟑, 𝟐 + 𝟑 = 𝟓, ⋯).  

Esta sequência recebeu o nome do matemático italiano Leonardo de Pisa (1180-1250), 

mais conhecido por Fibonacci, que descreveu, em seu livro Liber Abaci (livro do cálculo) no 

ano de 1202, dentre diversos outros problemas, o crescimento de uma população de coelhos a 

partir de um casal de animais (sequência não realista na biologia). Esta sequência já era, no 

entanto, conhecida na antiguidade, por gregos e indianos. 

Definição 2.4 Uma função recursiva é uma função com domínio nos inteiros não negativos 

que chama a si própria quando invocada.  

Como uma função recursiva chama a si mesma, ela deve ser definida com os valores 

necessários para que a recursão possa funcionar. 

Exemplo 2.6  A função 

𝒇(𝒏) = {

𝒇(𝒏) = 𝟑𝒇(𝒏 − 𝟏), 𝒏 = 𝟏, 𝟐, 𝟑, ⋯
𝒇(𝟎) = 𝟏                                             

 
 
 
 
é recursiva, o valor da função no estado atual é três vezes o valor da função no estado anterior, 

sendo que o valor inicial é 𝑓(0) = 1. Segue os primeiros cinco valores gerados pela função 

recursiva: 

20 

𝑓(1) = 3𝑓(0) = 3 ⋅ 1 = 3
𝑓(2) = 3𝑓(1) = 3 ⋅ 3 = 9
𝑓(3) = 3𝑓(2) = 3 ⋅ 9 = 27
𝑓(4) = 3𝑓(3) = 3 ⋅ 27 = 81
𝑓(5) = 3𝑓(4) = 3 ⋅ 81 = 243

Em Python1 temos o seguinte código para implementar esta função recursiva: 

def f(n): 

if n == 0: 

return 1 

else: 

return 3*f(n-1) 

Para calcular 𝑓(3) a função chama a si mesma várias vezes: 

  𝑓(3) = 3 ⋅ 𝑓(2)  

(𝑓(3) fez a chamada a 𝑓(2)) 

  𝑓(3) = 3 ⋅ 3 ⋅ 𝑓(1) 

(𝑓(2) fez a chamada a 𝑓(1)) 

  𝑓(3) = 3 ⋅ 3 ⋅ 3 ⋅ 𝑓(0)  

(𝑓(1) fez a chamada a 𝑓(0)) 

como 𝑓(0) = 1 é conhecido, o processo vai ser finalizado 

  𝑓(3) = 3 ⋅ 3 ⋅ 3 ⋅ 1 = 27 

Exemplo 2.7 A recursão que gera a sequencia de Fibonacci no exemplo 2.5 é escrito na forma 

de função como:  

{

𝒇(𝒏) = 𝒇(𝒏 − 𝟏) + 𝒇(𝒏 − 𝟐), 𝒏 = 𝟐, 𝟑, 𝟒, …
𝒇(𝟎) = 𝟏                                                                 
𝒇(𝟏) = 𝟏                                                                 

O código em Python da recursão de Fibonacci: 

1 

 Para fins didáticos pode-se utilizar um compilador online, uma opção é: 
onlinegdb.com/online_python_compiler 

 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
                                                 
 
 
 
 
 
 
21 

def f(n): 

if n==0 or n==1: 

return 1 

else: 

return f(n-1) + f(n-2) 

para calcular 𝑓(5) segue-se a seguinte recursão, 

  𝑓(5) = 𝑓(4) + 𝑓(3) 

  𝑓(5) = (𝑓(3) + 𝑓(2)) + (𝑓(2) + 𝑓(1)) = 𝑓(3) + 2𝑓(2) + 𝑓(1) 

  𝑓(5) = (𝑓(2) + 𝑓(1)) + 2(𝑓(1) + 𝑓(0)) + 𝑓(0) = 𝑓(2) + 3𝑓(1) + 3𝑓(0) 

  𝑓(5) = (𝑓(1) + 𝑓(0)) + 3𝑓(1) + 3𝑓(0) = 4𝑓(1) + 4𝑓(0) 

  𝑓(5) = 4 ⋅ 1 + 4 ⋅ 1 = 8 

Exemplo 2.8  Funções recursivas são usadas para resolver diversos problemas como mostra a 

seguinte função: 

𝒇(𝒏) = 𝒇(𝒏 − 𝟏) −

{

𝒇𝟐(𝒏 − 𝟏) − 𝟐
𝟐𝒇(𝒏 − 𝟏)

, 𝒏 = 𝟏, 𝟐, 𝟑, ⋯

𝒇(𝟎) = 𝟐                                                                            

os primeiros valores gerados pela recorrência: 

 

 

 

 

 

 

f(0) = 2 

f(1) = 1,5 

f(2) = 1,4166666666666667 

f(3) = 1,4142156862745099 

f(4) = 1,4142135623746899 

f(5) = 1,4142135623730951 

observando os resultados temos que a função recursiva aproxima o valor de √2. Os dígitos em 

negrito  indicam  os  dígitos  significativos,  isto  é,  os  dígitos  calculados  corretamente.  Inicial-

mente a condição inicial não tem nenhum dígito correto, na primeira iteração foi calculado um 

dígito correto, na segunda iteração três dígitos corretos, na terceira iteração 6 dígitos corretos, 

na quarta iteração 12 dígitos corretos e na quinta iteração foram calculados 17 dígitos corre-

 
 
 
 
 
 
 
 
 
 
 
 
 
22 

tamente.  Esta  função  é  uma  aplicação  de  métodos  iterativos  para  calcular  raízes  de  polinô-

mios, denominado Método de Newton (ou Método de Newton-Raphson). Veremos mais deta-

lhes em relação a esta função no item 3.2 do próximo capítulo e o método de Newton em ane-

xo. 

 
 
 
 
23 

3.  É UMA FUNÇÃO? 

Na  seção  2.1  foi  definido  o  conceito  de  função  e  foram  dados  vários  exemplos  de 

funções. Ela pode ser apresentada como uma relação, uma lei ou por recursividade. Mas se no 

processo  de  modelagem  construímos  uma  relação,  desejamos  saber  se  realmente  foi  obtida 

uma função por ser um fator importante na pesquisa.  

Se a função em análise for dada como uma relação comparamos os pares ordenados, se 

dois elementos diferentes da imagem são associados ao mesmo elemento do domínio pode-se 

concluir  que  a  relação  em  análise  é  uma  função.  No  exemplo  2.2  𝑅3  não  é  uma  função, 

enquanto 𝑅4  e 𝑅5 são funções. 

O processo de modelagem pode ser representado como uma lei, na maioria dos casos é 

relativamente  simples  verificar  se  essa  lei  é  uma  função  como  mostram  os  seguintes 

exemplos. 

Exemplo 3.1  Sendo, 𝑨: 𝑹 → 𝑹, com lei de correspondência 𝑨(𝒓) = 𝝅𝒓𝟐 modela a área de um 

círculo  de  raio  𝒓.  Como  para  cada  valor  do  raio  𝒓  corresponde  um  único  valor  da  área  do 

círculo 𝑨(𝒓) = 𝝅𝒓𝟐, temos que 𝑨 é uma função. 

Exemplo 3.2 Sendo, 𝒇: 𝒁 → 𝒁, com lei de correspondência 𝒇(𝒛) =

𝟏
𝒛𝟐:𝟏

 não é uma função pois 

𝒇(𝒛) não é um número inteiro. 

Exemplo 3.3 Sendo, 𝒇: 𝑹 → 𝑹,com lei de correspondência 𝒇(𝒙) a raiz do polinômio 𝒑(𝒛) =

𝒛 − 𝒙²    não  é  uma  função.  Pois  para  cada  valor  do  domínio  𝒙  corresponde  dois  valores  da 

imagem |𝒙| e −|𝒙|. 

No caso da recursividade não é evidente  se a lei recursiva por chamar a ela mesma, é 

uma  função.  Mesmo  a  recursividade  de  Fibonacci  precisa  ser  verificada  que  origina  uma 

função. 

3.1 Função de Fibonacci 

A recursividade de Fibonacci foi mostrada no exemplo 2.5 e definida no exemplo 2.7, 

agora vamos demonstrar que é uma função: 

 
 
24 

𝒇(𝒏) = {

𝒇(𝒏) = 𝒇(𝒏 − 𝟏) + 𝒇(𝒏 − 𝟐), 𝒏 = 𝟐, 𝟑, 𝟒, ⋯
𝒇(𝟎) = 𝟏                                                                
𝒇(𝟏) = 𝟏                                                                

 A resposta a se a recursividade de Fibonacci é uma função parece ser obviamente que 

sim, pois cada valor da recursividade depende dos dois valores anteriores. Uma possibilidade 

é mostrar por indução matemática que a recursividade é crescente e por tanto gera uma fun-

ção.  Outra  possibilidade  é  observar  que  esta  recursividade  é  do  tipo  linear  e,  portanto,  é  da 

forma: 

𝑓(𝑛) = 𝑟𝑛 

𝑟𝑛 = 𝑟𝑛;1 + 𝑟𝑛;2 

𝑟2 − 𝑟 − 1 = 0 

substituindo na recursividade, temos 

dividindo ambos por 𝑟𝑛;2 resulta 

a qual gera as soluções 

𝑟1 =

1 + √5
2

 𝑒 𝑟2 =

1 − √5
2

𝑓(𝑛) é combinação linear de 𝑟1 e 𝑟2: 

𝑓(𝑛) = 𝛼𝑟1

𝑛 
𝑛 + 𝛽𝑟2

substituindo as condições iniciais temos o sistema de equações 

𝛼 + 𝛽 = 1

{

𝛼 ⋅ (

1 + √5
2

) + 𝛽 ⋅ (

1 − √5
2

) = 1

resolvendo este sistema temos, 

 
 
 
 
 
25 

 𝛼 =

𝛽 =

{

1

√5
−1

√5

⋅ (

1 + √5
2

)

⋅ (

1 − √5
2

)

e substituindo em 𝑓(𝑛) resulta, 

𝑓(𝑛) =

1

√5

⋅ (

1 + √5
2

)

𝑛:1

𝑛:1

−

1

√5

⋅ (

1 − √5
2

)

o que confirma que para cada valor de 𝑛  se associa um único valor na imagem e, portanto, a 

recorrência de Fibonacci é uma função. 

Observe que no item anterior resolvemos diretamente a recorrência simplesmente para 

mostrar que se  trata de uma função, os  conceitos  e definições  sobre recorrências podem ser 

estudados em LAGES, vol. 2, 2006, p. 65. 

3.2 Aproximação da raiz quadrada de 2 

No exemplo 2.8 foi apresentada a recursão que aproxima √2 : 

𝑓(𝑛) = 𝑓(𝑛 − 1) −

{

𝑓2(𝑛 − 1) − 2
2𝑓(𝑛 − 1)

, 𝑛 = 1,2,3, ⋯

𝑓(0) = 2                                                                          

Para  mostrar  que  a  recursão  define  uma  função,  observa-se  que  esta  é  um  caso  especial  do 

método de Newton para calcular os zeros de um polinômio 𝑝(𝑥), com recorrência: 

𝑥𝑛 = 𝑥𝑛;1 −

𝑝(𝑥𝑛;1)
𝑝′(𝑥𝑛;1)

a  qual  converge  para  a  raiz  do  polinômio.  No  nosso  caso  𝑥𝑛 = 𝑓(𝑛)  e  𝑝(𝑥𝑛) = 𝑓2(𝑛) − 2. 
Logo, 𝑝′(𝑥) = 2𝑓(𝑥). Portanto 𝑓 é uma função. 

Para se chegar à função acima, uma das opções é partir de: 𝑥 = √2, eleva-se ambos ao 

quadrado, 𝑥2 = 2, gerando a equação 𝑥2 − 2 = 0, e obtemos a função 𝑓(𝑥) = 𝑥2 − 2, ressal-

tando que os zeros dessa função são 𝑥1 = √2 e 𝑥2 = −√2. 

 
 
 
 
 
 
 
 
 
Neste item usamos o conceito de derivada de função polinomial para aplicar o método 

de Newton, no anexo mostramos os conceitos e as definições desses conteúdos, que também 

podem ser consultados em STEWART, 2010, p. 313. 

26 

3.3 Função 91 de McCarthy 

John McCarthy2 criou a função conhecido com seu nome, definida por 

𝑀(𝑛) = {

𝑛 − 10                     𝑠𝑒 𝑛 > 100
𝑀(𝑀(𝑛 + 11))     𝑠𝑒 𝑛 ≤ 100

Para verificar se temos uma função consideremos os seguintes casos, 

  se 𝑛 > 100, temos que 𝑀(𝑛) = 𝑛 − 10 

  se 90 ≤ 𝑛 ≤ 100, temos que 101 ≤ 𝑛 + 11 ≤ 111, logo 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(𝑛 + 11 − 10) = 𝑀(𝑛 + 1) 

neste intervalo a função é constante, e igual a 

𝑀(100) = 𝑀(101) = 101 − 10 = 91 

isto é, 𝑀(𝑛) = 91, 𝑠𝑒90 ≤ 𝑛 ≤ 100 

  se 80 ≤ 𝑛 ≤ 89, então 91 ≤ 𝑛 + 11 ≤ 100, logo 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(99)=91 

  se 70 ≤ 𝑛 ≤ 79, então 81 ≤ 𝑛 + 11 ≤ 90, logo 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(99)=91 

  se 60 ≤ 𝑛 ≤ 69, então 71 ≤ 𝑛 + 11 ≤ 80, logo 

2 Um dos fundadores da inteligência artificial, foi cientista da computação e criador da linguagem de 
programação Lisp. Recebeu o Prêmio Turing de 1972 e a Medalha Nacional de Ciências dos Estados 
Unidos de 1991. 

 
 
 
 
 
                                                 
27 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(99)=91 

  se 50 ≤ 𝑛 ≤ 59, então 61 ≤ 𝑛 + 11 ≤ 70, logo 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(99)=91 

  se 40 ≤ 𝑛 ≤ 49, então 51 ≤ 𝑛 + 11 ≤ 60, logo 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(99)=91 

  se 30 ≤ 𝑛 ≤ 39, então 41 ≤ 𝑛 + 11 ≤ 50, logo 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(99)=91 

  se 20 ≤ 𝑛 ≤ 29, então 31 ≤ 𝑛 + 11 ≤ 40, logo 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(99)=91 

  se 10 ≤ 𝑛 ≤ 19, então 21 ≤ 𝑛 + 11 ≤ 30, logo 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(99)=91 

  se 0 ≤ 𝑛 ≤ 9, então 11 ≤ 𝑛 + 11 ≤ 10, logo 

𝑀(𝑛) = 𝑀(𝑀(𝑛 + 11)) = 𝑀(99)=91 

este procedimento pode ser aplicado para números negativos, portanto, 

𝑀(𝑛) = {

𝑛 − 10,   𝑠𝑒 𝑛 > 100
𝑠𝑒 𝑛 ≤ 100
91,

Concluindo que 𝑀 é uma função. 

O código em Python  

def M91(n): 

if n > 100: 

return n-10 

else: 

return M91(M91(n+11) 

 
 
 
 
 
 
 
 
 
 
 
 
28 

É  possível  construir  o  gráfico  da  função  91  de  McCarthy  no  Geogebra  (destacado  no 

item 5.3), utilizando-se a planilha e álgebra, mas ficamos com o exemplo do portal Mathworld 

Wolfram. 

Figura 1: Gráfico da Função 91 de McCarthy 

Fonte: mathworld.wolfram.com/McCarthy91-Function.html 

3.4 A recursividade G 

A recursividade 𝐺 é definida como: 

𝐺(𝑛) = {

1 + 𝐺 (

𝑛
2

1,   𝑠𝑒 𝑛 = 1      

) ,   𝑠𝑒 𝑛 é 𝑝𝑎𝑟                   

𝐺(3𝑛 − 1),   𝑠𝑒 𝑛 é í𝑚𝑝𝑎𝑟 𝑒 𝑛 > 1

para  verificar  se  𝐺  é  uma  função,  vamos  calcular  alguns  valores  para  analisar  seu 

comportamento, 

  se 𝑛 = 1, temos que 𝐺(1) = 1 

  se 𝑛 = 2, temos que 𝐺(2) = 1 + 𝐺(1) = 1 + 1 = 2 

  se 𝑛 = 3, temos que 𝐺(3) = 𝐺(8) = 1 + 𝐺(4) 

  se 𝑛 = 4, temos que 𝐺(4) = 1 + 𝐺(2) = 1 + 2 = 3 e, portanto, 𝐺(3) = 1 + 3 = 4 

  se 𝑛 = 5, temos que 

𝐺(5) = 𝐺(14) = 1 + 𝐺(7) = 1 + 𝐺(20) = 2 + 𝐺(10) = 3 + 𝐺(5) 

 
 
 
 
 
 
29 

logo,  𝐺(5) = 3 + 𝐺(5) ⇒ 0 = 3,  o  qual  é  uma  contradição. Assim  a  recursividade  𝐺  não  é 

bem definida e, portanto. 𝐺 não é uma função. 

Aqui não utilizaremos o código em Python porque, como verificado acima, teremos um 

erro de execução. 

3.5 A recursividade H 

A recursividade 𝐻 é definida como: 

𝐻(𝑛) = {

1 + 𝐻 (

𝑛
2

1,   𝑠𝑒 𝑛 = 1   

) ,   𝑠𝑒 𝑛 é 𝑝𝑎𝑟                 

𝐻(3𝑛 + 1),   𝑠𝑒 𝑛 é í𝑚𝑝𝑎𝑟 𝑒 𝑛 > 1

para  verificar  se  é  uma  função,  vamos  calcular  alguns  valore  para  analisar  seu 

comportamento, 

  se 𝑛 = 1, temos que 𝐻(1) = 1 

  se 𝑛 = 2, temos que 𝐻(2) = 1 + 𝐻(1) = 1 + 1 = 2 

  se 𝑛 = 3, temos que 𝐻(3) = 𝐻(10) = 1 + 𝐻(5) 

  se 𝑛 = 4, temos que 𝐻(4) = 1 + 𝐻(2) = 1 + 2 = 3  

  se 𝑛 = 5, temos que 𝐻(5) = 𝐻(16) = 1 + 𝐺(8) = 2 + 𝐻(4) = 5 

logo, 𝐻(3) = 1 + 5 = 6 

  se 𝑛 = 6, temos que 𝐻(6) = 1 + 𝐻(3) = 1 + 6 = 7 

usamos o seguinte código Python para continuar calculando os próximos valores da função, 

def h(n): 

if n == 1: 

return 1 

elif n % 2 ==0: 

else: 

return 1+h(n/2) 

return h(3*n+1) 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
30 

temos ℎ(7) = 12, ℎ(8) = 4, ℎ(9) = 14, ℎ(10) = 6, ℎ(11) = 11, ℎ(12) = 8, ℎ(13) = 8, 

ℎ(14) = 13, ℎ(15) = 13ℎ(16) = 5, ℎ(17) = 10, ℎ(18) = 15, ℎ(19) = 15, ℎ(20) = 7. 

Continuando  com  este  processo  temos  ℎ(1000) = 73, ℎ(10000) = 24,  e  assim  sucessiva-

mente. Mas este processo de calcular os valores de ℎ não é concluinte para afirmar que é uma 

função,  somente  temos  indícios.  Na  realidade  até  o  momento  não  se  há  comprovado  que  ℎ 

esteja definida e, portanto, seja uma função. Ela tem sido calculada para 𝑛 < 109. 

3.6 Conjetura de Collatz (Problema 3n+1) 

A  conjectura  é  simples,  porém,  difícil  de  ser  provada  como  verdadeira  ou  não,  para 

alguns  esse  é  o  problema  mais  simples  ainda  em  aberto.  Em  ROSEN  (2010),  encontramos: 

Seja C(n) a recursividade que leva um número par n para n/2 e um número ímpar n para 3n+1, 

para todos os números inteiros positivos n, vamos chegar ao inteiro 1. 

𝐶(𝑛) = {

1,   𝑠𝑒 𝑛 = 1 
𝑛
2

) ,   𝑠𝑒 𝑛 é 𝑝𝑎𝑟

𝐶 (

𝐶(3𝑛 + 1),   𝑠𝑒 𝑛 é í𝑚𝑝𝑎𝑟

Por exemplo, se 𝑛 = 32, encontramos 𝐶(32) = 16, 𝐶(16) = 8, 𝐶(8) = 4, 𝐶(4) = 2 e 

𝐶(2) = 1.  Se  𝑛  é  par  𝐶(𝑛) = 𝐶(𝑛/2),  logo  𝐶(32) = 𝐶(16) = 𝐶(8) = 𝐶(4) = 𝐶(2) =

𝐶(1) = 1.  Ou  seja,  a  conjetura  chega  a  1  quando  ―encontra‖  qualquer  potência  de  base  2. 

Porém, se 𝑛 = 27, encontraremos 111 passos, cálculos, para chegarmos em 1. 

Observe os números ―percorridos‖ no cálculo de C(27) para se chegar a 1, em negrito o 

número 9232 foi o maior alcançado: 27, 82, 41, 124, 62, 31, 94, 47, 142, 71, 214, 107, 322, 

161, 484, 242, 121, 364, 182, 91, 274, 137, 412, 206, 103, 310, 155, 466, 233, 700, 350, 175, 

526, 263, 790, 395, 1186, 593, 1780, 890, 445, 1336, 668, 334, 167, 502, 251, 754, 377, 1132, 

566, 283, 850, 425, 1276, 638, 319, 958, 479, 1438, 719, 2158, 1079, 3238, 1619, 4858, 2429, 

7288,  3644,  1822,  911,  2734,  1367,  4102,  2051,  6154,  3077,  9232,  4616,  2308,  1154,  577, 

1732, 866, 433, 1300, 650, 325, 976, 488, 244, 122, 61, 184, 92, 46, 23, 70, 35, 106, 53, 160, 

80, 40, 20, 10, 5, 16, 8, 4, 2, 1. 

 
 
 
 
 
 
 
31 

Em Python 

def collatz (n): 

if n == 1: 

return 

if n % 2 ==0: 

collatz (n/2) 

else: 

collatz (3*n+1) 

O recorde em 2020, de David Barina, é para 𝑁 < 268 (aproximadamente 2,95 × 1020). 

Observe  a  semelhança  entre  as  três  últimas  recursividades,  a  teoria  dos  números  tem 

ajudado bastante na solução de diversos problemas relacionados a ciência da computação. 

Outra opção de consulta é https://mathworld.wolfram.com/CollatzProblem.html. 

 
 
 
  
 
 
 
 
 
 
 
32 

4. APLICAÇÕES DE FUNÇÕES RECURSIVAS 

Funções recursivas aparecem em diferentes áreas e suas aplicações são amplas, elas são 

úteis  no  processo  de  modelagem  de  vários  fenômenos  na  natureza,  economia  entre  outras 

áreas.  Ou  seja,  se  encaixa  na  BNCC  na  competência  específica  1  de  matemática  e  suas 

tecnologias para o ensino médio, que diz:  

Utilizar  estratégias,  conceitos  e  procedimentos  matemáticos  para  interpretar  situa-
ções em diversos contextos, sejam atividades cotidianas, sejam fatos das Ciências da 
Natureza e Humanas, das questões socioeconômicas ou tecnológicas, divulgados por 
diferentes meios, de modo a contribuir para uma formação geral. (BRASIL, 2018, p. 
531) 

A seguir são apresentadas algumas das aplicações das funções recursivas. 

4.1 Triângulo de Pascal 

Seja a função 𝑓: 𝑁 × 𝑁 → 𝑁, definida recursivamente por: 

𝑓(𝑚, 𝑛) = {

        1,   𝑠𝑒 𝑛 = 0
𝑓(𝑚 − 1, 𝑛 − 1) + 𝑓(𝑚 − 1, 𝑛),
         1,   𝑠𝑒 𝑛 = 𝑚

 𝑠𝑒 1 ≤ 𝑛 ≤ 𝑚 − 1 

Segue alguns valores da função 𝑓, 

  𝑓(0,0) = 1 

  𝑓(1,0) = 1, 𝑓(1,1) = 1 

  𝑓(2,0) = 1, 𝑓(2,1) = 𝑓(1,0) + 𝑓(1,1) = 1 + 1 = 2, 𝑓(2,2) = 1 

  𝑓(3,0) = 1, 𝑓(3,1) = 𝑓(2,0) + 𝑓(2,1) = 1 + 2 = 3, 

𝑓(3,2) = 𝑓(2,1) + 𝑓(2,2) = 2 + 1 = 3, 𝑓(3,3) = 1 

  𝑓(4,0) = 1, 𝑓(4,1) = 𝑓(3,0) + 𝑓(3,1) = 1 + 3 = 4, 

𝑓(4,2) = 𝑓(3,1) + 𝑓(3,2) = 3 + 3 = 6, 𝑓(4,3) = 𝑓(3,2) + 𝑓(3,3) = 3 + 1 = 4, 

𝑓(4,4) = 1 

  𝑓(5,0) = 1, 𝑓(5,1) = 𝑓(4,0) + 𝑓(4,1) = 1 + 4 = 5, 

𝑓(5,2) = 𝑓(4,1) + 𝑓(4,2) = 4 + 6 = 10, 𝑓(5,3) = 𝑓(4,2) + 𝑓(4,3) = 6 + 4 = 10, 

𝑓(5,4) = 𝑓(4,3) + 𝑓(4,4) = 4 + 1 = 5,   𝑓(5,5) = 1 

 
 
 
as  próximas  linhas  continuam  sendo  geradas  recursivamente.  Observe  que  função  recursiva 

está de acordo com a relação de Stifel (ou relação de Pascal). Na Tabela 4.1 se  mostram os 

valores gerados pela recursão: 

33 

            n   

m 
0 

1 

2 

3 

4 

5 

6 

7 

8 

9 

0 

1 

1 

1 

1 

1 

1 

1 

1 

1 

1 

Tabela 4.1   Triângulo de Pascal 

1 

2 

3 

4 

5 

6 

7 

8 

9 

1 

2 

3 

4 

5 

6 

7 

8 

9 

1 

3 

6 

10 

15 

21 

28 

36 

1 

4 

10 

20 

35 

56 

84 

1 

5 

15 

35 

70 

1 

6 

21 

56 

126 

126 

Fonte: O autor 

1 

7 

28 

84 

1 

8 

36 

1 

9 

1 

Os valores do triângulo de Pascal têm a aplicação prática de ser os coeficientes do po-

linômio (𝑎 + 𝑏)𝑛  mediante a fórmula: 

𝑛

(𝑎 + 𝑏)𝑛 = ∑ 𝑓(𝑛 − 𝑘, 𝑘)𝑎𝑛;𝑘

𝑏𝑘 

𝑘<0

Isto é: 

(𝑎 + 𝑏)0 = 𝑓(0,0)𝑎0𝑏0 = 1 

(𝑎 + 𝑏)1 = 𝑓(1,0)𝑎1𝑏0 + 𝑓(1,1)𝑎0𝑏1 = 𝑎 + 𝑏 

(𝑎 + 𝑏)2 = 𝑓(2,0)𝑎2𝑏0 + 𝑓(2,1)𝑎1𝑏1 + 𝑓(2,2)𝑎0𝑏2 = 𝑎2 + 2𝑎𝑏 + 𝑏² 

(𝑎 + 𝑏)3 = 𝑓(3,0)𝑎3𝑏0 + 𝑓(3,1)𝑎2𝑏1 + 𝑓(3,2)𝑎1𝑏2 + 𝑓(3,3)𝑎0𝑏3
𝑎3 + 3𝑎2𝑏 + 3𝑎𝑏2 + 𝑏3

(𝑎 + 𝑏)4 = 𝑓(4,0)𝑎4𝑏0 + 𝑓(4,1)𝑎3𝑏 + 𝑓(4,2)𝑎2𝑏2 + 𝑓(4,3)𝑎𝑏3 + 𝑓(4,4)𝑎0𝑏4
𝑎4 + 4𝑎3𝑏 + 6𝑎2𝑏2 + 4𝑎3𝑏 + 𝑏4

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
34 

(𝑎 + 𝑏)5 = 𝑓(5,0)𝑎5𝑏0 + 𝑓(5,1)𝑎4𝑏 + 𝑓(5,2)𝑎3𝑏2 + 𝑓(5,3)𝑎2𝑏3 + 𝑓(5,4)𝑎𝑏4 + 𝑓(5,5)𝑎0𝑏5
𝑎5 + 5𝑎4𝑏 + 10𝑎3𝑏2 + 10𝑎2𝑏3 + 5𝑎𝑏4 + 𝑏5

e assim sucessivamente. Do binômio de Newton conhecemos que: 

portanto, podemos concluir que 

𝑛

(𝑎 + 𝑏)𝑛 = ∑ 𝐶𝑛;𝑘

𝑘 𝑎𝑛;𝑘

𝑏𝑘 

𝑘<0

𝑓(𝑚, 𝑛) = 𝐶𝑚

𝑛 =

𝑚!
𝑛! (𝑚 − 𝑛)!

Relacionamos  assim  a  função  recursiva  do  triângulo  de  Pascal  com  a  teoria 

combinatória, duas áreas que aparentemente não tinham conexão. 

4.2 Fatorial  

O fatorial de um número tem diversas aplicações não apenas da análise combinatória, o 

fatorial de um número 𝑛 é em forma recursiva: 

𝑓(𝑛) = {

1,   𝑠𝑒 𝑛 = 0
𝑛 ⋅ 𝑓(𝑛 − 1),   𝑠𝑒 𝑛 ≥ 1

Numericamente, para calcular 𝑓(4) temos: 

𝑓(4) = 4 ⋅ 𝑓(3) = 4 ⋅ 3 ⋅ 𝑓(2) = 12 ⋅ 2 ⋅ 𝑓(1) = 24 ⋅ 1 ⋅ 𝑓(0) = 24 ⋅ 1 = 24 

Escrevemos a função fatorial de 𝑛 até 1 da seguinte maneira: 

𝑓(𝑛) = 𝑛 ⋅ 𝑓(𝑛 − 1)
𝑓(𝑛 − 1) = (𝑛 − 1) ⋅ 𝑓(𝑛 − 2)
⋮

𝑓(4) = 4. 𝑓(3) 

𝑓(3) = 3. 𝑓(2) 

𝑓(2) = 2. 𝑓(1) 

𝑓(1) = 1. 𝑓(0) 

 
 
 
 
 
 
 
35 

Multiplicando ambos os lados, cancelam-se os termos riscados, obtendo: 

𝑓(𝑛) = 𝑛 ⋅ (𝑛 − 1) ⋅ (𝑛 − 2) ⋅ ⋯ ⋅ 4 ⋅ 3 ⋅ 2 ⋅ 1 

denotamos 𝑓(𝑛) = 𝑛! = 𝑛 ⋅ (𝑛 − 1) ⋅ (𝑛 − 2) ⋯ 4 ⋅ 3 ⋅ 2 ⋅ 1 

4.3 Função de Ackermann  

A  função  de  Ackermann,  bastante  utilizada  na  ciência  da  computação,  originalmente 

tem  3  argumentos,  porém  Rózsa  Peter  e  Raphael  Robinson  reduziram  para  dois.  Hoje,  é 

definida usualmente com dois argumentos (também chamada de Função Ackermann-Peter) da 

seguinte forma: 

𝐴(𝑚, 𝑛) = {

𝑛 + 1,   𝑠𝑒 𝑚 = 0
𝐴(𝑚 − 1,   1),   𝑠𝑒 𝑛 = 0
𝐴(𝑚 − 1, 𝐴(𝑚,   𝑛 − 1)),   𝑠𝑒 𝑚 > 0 𝑒 𝑛 > 0

alguns valores de 𝐴(𝑚, 𝑛) podem ser calculados facilmente: 

  se 𝑚 = 0,  

então 𝐴(0, 𝑛) = 𝑛 + 1 para 𝑛 ≥ 0, por exemplo 𝐴(0,234) = 235 

  se 𝑚 = 1, 

𝐴(1,0) = 𝐴(1 − 1,1) = 𝐴(0,1) = 1 + 1 = 2 = 0 + 2 

𝐴(1,1) = 𝐴(0, 𝐴(1,0)) = 𝐴(0,2) = 2 + 1 = 3 = 1 + 2 

𝐴(1,2) = 𝐴(0, 𝐴(1,1)) = 𝐴(0,3) = 3 + 1 = 4 = 2 + 2 

por indução matemática concluímos que 𝐴(1, 𝑛) = 𝑛 + 2  

  se 𝑚 = 2, 

𝐴(2,0) = 𝐴(1,1) = 3 = 2 ⋅ 0 + 3 

𝐴(2,1) = 𝐴(1, 𝐴(2,0)) = 𝐴(1,3) = 3 + 2 = 5 = 2 ⋅ 1 + 3 

 
 
 
 
36 

𝐴(2,2) = 𝐴(1, 𝐴(2,1)) = 𝐴(1,5) = 5 + 2 = 7 = 2 ⋅ 2 + 3 

𝐴(2,3) = 𝐴(1, 𝐴(2,2)) = 𝐴(1,7) = 7 + 2 = 9 = 2 ⋅ 3 + 3 

𝐴(2,4) = 𝐴(1, 𝐴(2,3)) = 𝐴(1,9) = 9 + 2 = 11 = 2 ⋅ 4 + 3 

por indução matemática se conclui que 𝐴(2, 𝑛) = 2 ⋅ 𝑛 + 3 

  se 𝑚 = 3, 

𝐴(3,0) = 𝐴(2,1) = 5 = 23 − 3 

𝐴(3,1) = 𝐴(2, 𝐴(3,0)) = 𝐴(2, 𝐴(2,1)) = 𝐴(2,5) = 13 = 24 − 3 

𝐴(3,2) = 𝐴(2, 𝐴(3,1)) = 𝐴(2,13) = 29 = 25 − 3 

𝐴(3,3) = 𝐴(2, 𝐴(3,2)) = 𝐴(2,29) = 61 = 26 − 3 

𝐴(3,4) = 𝐴(2, 𝐴(3,3)) = 𝐴(2,61) = 125 = 27 − 3 

𝐴(3,5) = 𝐴(2, 𝐴(3,4)) = 𝐴(2,125) = 253 = 28 − 3 

por indução matemática se conclui que 𝐴(3, 𝑛) = 2𝑛:3 − 3. 

Uma propriedade interessante é observada, enquanto 𝐴(0, 𝑛), 𝐴(1, 𝑛) e 𝐴(2, 𝑛) crescem 

segundo um polinômio linear, 𝐴(3, 𝑛) cresce segundo uma função exponencial. 

  Se 𝑚 = 4, 

𝐴(4,0) = 𝐴(3,1) = 13 = 222

-3 

𝐴(4,1) = 𝐴(3, 𝐴(4,0)) = 𝐴(3,13) = 216 − 3 = 2222

− 3 

𝐴(4,2) = 𝐴(3, 𝐴(4,1)) = 𝐴(3, 216 − 3) = 2216

− 3 = 22222

− 3 

𝐴(4,3) = 𝐴(3, 𝐴(4,2)) = 222222

− 3 

 
 
37 

por indução matemática se conclui que 𝐴(4, 𝑛) = 222⋰2
de 2. 

− 3, com 𝑛 + 3 níveis nas potências 

O comportamento de 𝐴(4, 𝑛) cresce muito mais rápido que qualquer função exponenci-

al, por isso a função de Ackermann é muito usada em computação, principalmente para anali-

sar  o  desempenho  dos  compiladores  no  uso  da  recursividade.  Se  calculamos  𝐴(4,4)  usando 

todos os níveis de recursividade até chegar a 𝐴(0, 𝑝) = 𝑝 + 1 precisamos de uma quantidade 

de  chamadas  a  recursão  que  não  é  suportada  pelos  compiladores.  Uma  solução  é  calcular  a 

função de Ackermann da forma que foi apresentada aqui, salvando os valores calculados para 

serem usados nos próximos níveis. 

4.4 Progressão geométrica 

Uma progressão geométrica é uma função recursiva 𝑓: 𝑁 → 𝑅 definida por 

𝑓(𝑛) = 𝑟 ⋅ 𝑓(𝑛 − 1),   𝑛 ≥ 1
{
𝑓(0) = 𝑎

o quociente de dois termos consecutivos  𝑓(𝑛)
𝑓(𝑛;1)
geométrica3 e 𝑓(0 = 𝑎 é denominado o valor inicial da progressão geométrica. Temos que 

 é igual a 𝑟, denominada a razão da progressão 

𝑓(1) = 𝑟 ⋅ 𝑓(0) = 𝑟 ⋅ 𝑎 = 𝑎 ⋅ 𝑟
𝑓(2) = 𝑟 ⋅ 𝑓(1) = 𝑟 ⋅ 𝑎 ⋅ 𝑟 = 𝑎 ⋅ 𝑟2
𝑓(3) = 𝑟 ⋅ 𝑓(2) = 𝑟 ⋅ 𝑎 ⋅ 𝑟2 = 𝑎 ⋅ 𝑟3
⋮

por indução matemática, temos que   

𝑓(𝑛) = 𝑎 ⋅ 𝑟𝑛, 𝑛 ≥ 0 

portanto, a progressão geométrica é uma versão discreta da função exponencial. 

Exemplo  4.9  A  sequência  1,  2,  4,  8,  16,  ...  verifica  que  o  quociente  de  dois  termos 

consecutivos  é  sempre  igual  a  2.  Logo  ela  é  uma  progressão  geométrica  de  razão  𝒓 = 𝟐  e 

valor inicial 𝒂 = 𝟏. O termo geral é dado por 𝒇(𝒏) = 𝟏 ⋅ 𝟐𝒏 = 𝟐𝒏.  

3 

 Nos livros de ensino médio é comum o uso da letra q para representar a razão da PG. 

 
 
 
 
 
                                                 
38 

Exemplo  4.2  A  sequência  𝟏, −𝟏, 𝟏, −𝟏, 𝟏, −𝟏, ⋯  verifica  que  o  quociente  de  dois  termos 

consecutivos é sempre igual a −𝟏. Logo ela é uma progressão geométrica de razão 𝒓 = −𝟏 e 

valor inicial 𝒂 = 𝟏. O termo geral é dado por 𝒇(𝒏) = 𝟏 ⋅ (−𝟏)𝒏 = (−𝟏)𝒏. 

Exemplo  4.3 A sequência  𝟏 𝟐⁄ , 𝟏 𝟒⁄ , 𝟏 𝟖⁄ , 𝟏 𝟏𝟔⁄

, 𝟏 𝟑𝟐⁄

, ⋯  verifica que o quociente de dois 

termos  consecutivos  é  sempre  igual  a  1/2.  Logo  ela  é  uma  progressão  geométrica  de  razão 

𝒓 = 𝟏 𝟐⁄  e valor inicial 𝒂 = 𝟏 𝟐⁄ . O termo geral é dado por 𝒇(𝒏) =

𝒏

𝟏

𝟐

⋅ (

𝟏

𝟐

)

= (

𝟏

𝟐

)

𝒏:𝟏

.  

O cálculo da soma dos termos de uma progressão geométrica 𝑓(𝑛) = 𝑟 ⋅ 𝑓(𝑛 − 1) 

segue os seguintes passos: 

𝑛
∑ 𝑓(𝑘) = 𝑓(0) + ∑ 𝑓(𝑘) = 𝑓(0) + ∑ 𝑟𝑓(𝑘 − 1)
𝑘<0

𝑘<1

𝑛

𝑛

𝑛
∑ 𝑓(𝑘) = 𝑓(0) + 𝑟 ∑ 𝑓(𝑘)
𝑘<0

𝑛;1

𝑘<0

𝑘<1
𝑛
= 𝑓(0) + 𝑟 ∑ 𝑓(𝑘) − 𝑟𝑓(𝑛)
𝑘<0

𝑛

𝑛
∑ 𝑓(𝑘) − 𝑟 ∑ 𝑓(𝑘)
𝑘<0

𝑘<0

= 𝑓(0) − 𝑟𝑓(𝑛)

𝒏
∑ 𝒇(𝒌) =
𝒌<𝟎

𝒇(𝟎) − 𝒓𝒇(𝒏)
𝟏 − 𝒓

Como 𝑓(𝑛) = 𝑎 ⋅ 𝑟𝑛 e 𝑓(0) = 𝑎, a soma dos termos de uma progressão geométrica pode ser 

escrita em termos da razão e valor inicial, como: 

𝑛
∑ 𝑓(𝑘)
𝑘<0

=

𝑎 ⋅ (1 − 𝑟𝑛:1)
1 − 𝑟

Exemplo 4.4 Na progressão geométrica 𝟏, 𝟐, 𝟒, 𝟖, 𝟏𝟔, ⋯ do exemplo 4.1, a soma é: 

𝑛
∑ 𝑓(𝑛) =
𝑘<0

1 ⋅ (1 − 2𝑛:1)
1 − 2

= 2𝑛:1 − 1 

Exemplo 4.5 Na progressão geométrica 𝟏, −𝟏, 𝟏, −𝟏, 𝟏, ⋯ do exemplo 4.2, a soma é: 

𝑛
∑ 𝑓(𝑛) =
𝑘<0

1 ⋅ (1 − (−1)𝑛:1)
1 − (−1)

= {

1, 𝑠𝑒 𝑛 é 𝑝𝑎𝑟
−1, 𝑠𝑒 𝑛 é 𝑖𝑚𝑝𝑎𝑟

 
 
 
 
 
 
39 

Exemplo 4.6 Na progressão geométrica 𝟏 𝟐⁄ , 𝟏 𝟒⁄ , 𝟏 𝟖⁄ , 𝟏 𝟏𝟔⁄

, ⋯ do exemplo 4.3, a soma é: 

𝑛
∑ 𝑓(𝑛) =
𝑘<0

1
2

⋅ (1 − (

1 −

)

1
2
1
2

𝑛:1

)

= 1 − (

𝑛:1

1
2

)

Uma das aplicações da progressão geométrica é na matemática financeira, no regime de 

capitalização de juros compostos, que será estudado no item 5.2. 

4.5 Progressão aritmética 

Uma progressão aritmética é uma função recursiva 𝑓: 𝑁 → 𝑅 definida por 

{

𝑓(𝑛) = 𝑟 + 𝑓(𝑛 − 1),   𝑛 ≥ 1
𝑓(0) = 𝑎

A diferença de dois termos consecutivos 𝑓(𝑛) − 𝑓(𝑛 − 1) é igual a 𝑟 denominada a ra-

zão da progressão aritmética e 𝑓(0 = 𝑎 é denominado o valor inicial da progressão aritmética. 

Temos que 

𝑓(1) = 𝑟 + 𝑓(0) = 𝑟 + 𝑎 = 𝑎 + 𝑟
𝑓(2) = 𝑟 + 𝑓(1) = 𝑟 + 𝑎 + 𝑟 = 𝑎 + 2 ⋅ 𝑟
𝑓(3) = 𝑟 + 𝑓(2) = 𝑟 + 𝑎 + 2 ⋅ 𝑟 = 𝑎 + 3 ⋅ 𝑟
⋮

por indução matemática, temos que   

𝑓(𝑛) = 𝑎 + 𝑛 ⋅ 𝑟, 𝑛 ≥ 0 

portanto, a progressão aritmética é uma versão discreta da função polinomial de grau 1. 

Exemplo  4.7  A  sequência  𝟓, 𝟏𝟏, 𝟏𝟕, 𝟐𝟑, 𝟐𝟗, 𝟑𝟓, ⋯  verifica  que  a  diferença  de  dois  termos 

consecutivos é sempre igual a 6. Logo ela é uma progressão aritmética de razão 𝒓 = 𝟔 e valor 

inicial 𝒂 = 𝟓. O termo geral é dado por 𝒇(𝒏) = 𝟓 + 𝟔 ⋅ 𝒏. 

Exemplo  4.8  A  sequência  𝟒, 𝟕, 𝟏𝟎, 𝟏𝟑, 𝟏𝟔, 𝟏𝟗, 𝟐𝟐, 𝟐𝟓, ⋯  verifica  que  a  diferença  de  dois 

termos consecutivos é sempre igual a 3. Logo ela é uma progressão aritmética de razão 𝒓 = 𝟑 

e valor inicial 𝒂 = 𝟒. O termo geral é dado por 𝒇(𝒏) = 𝟒 + 𝟑 ⋅ 𝒏.  

 
 
 
 
 
 
O  cálculo  da  soma  dos  termos  de  uma  progressão  aritmética  𝑓(𝑛) = 𝑟 + 𝑓(𝑛 − 1) 

segue os seguintes passos: 

40 

𝑛

𝑛
∑ 𝑓(𝑘) = ∑(𝑎 + 𝑘 ⋅ 𝑟) = 𝑎 ⋅ ∑ 1
𝑘<0

𝑘<0

𝑛

𝑛

+ 𝑟 ⋅ ∑ 𝑘

𝑛
∑ 𝑓(𝑘) = 𝑎 ⋅ (𝑛 + 1) + 𝑟 ⋅
𝑘<0

𝑘<1

𝑘<0
𝑛 ⋅ (𝑛 + 1)
2

𝑛
∑ 𝑓(𝑘) =
𝑘<0

(2𝑎 + 𝑟. 𝑛) ⋅ (𝑛 + 1)
2

Exemplo 4.9 Na progressão aritmética 𝟓, 𝟏𝟏, 𝟏𝟕, 𝟐𝟑, 𝟐𝟗, 𝟑𝟓, ⋯ do exemplo 4.7, a soma é: 

𝑛
∑ 𝑓(𝑛) =
𝑘<0

(2 ⋅ 5 + 6 ⋅ 𝑛) ⋅ (𝑛 + 1)
2

= (5 + 3 ⋅ 𝑛) ⋅ (𝑛 + 1) 

Exemplo 4.10 Na progressão aritmética 𝟒, 𝟕, 𝟏𝟎, 𝟏𝟑, 𝟏𝟔, 𝟏𝟗, 𝟐𝟐, ⋯ do exemplo 4.9, a soma é: 

𝑛
∑ 𝑓(𝑛) =
𝑘<0

(2 ⋅ 4 + 3 ⋅ 𝑛) ⋅ (𝑛 + 1)
2

=

(8 + 3 ⋅ 𝑛) ⋅ (𝑛 + 1)
2

Uma das aplicações da progressão aritmética é na matemática financeira, no regime de 

capitalização de juros simples, que veremos no item 5.2. 

4.6 Torre de Hanói  

É  um  tipo  de  "quebra-cabeça"  em  que  uma  base  contendo  três  pinos,  e  em  um  deles 

quais  são  dispostos  alguns  discos  uns  sobre  os  outros,  em  ordem  crescente  de  diâmetro,  de 

cima para baixo. 

O problema consiste em passar todos os discos de um pino para outro qualquer, um de 

cada vez, usando um dos pinos como auxiliar, de maneira que um disco maior nunca fique em 

cima de outro menor em nenhuma situação. O número de discos pode variar sendo que o mais 

simples contém apenas três.  

 
 
 
 
 
 
 
 
41 

Figura 2: Jogo da torre de Hanói 

Fonte: www.americanas.com.br 

A lenda citada abaixo, assim como o jogo, foi criação do matemático francês Edouard 

Lucas em 1882, com o objetivo de chamar atenção: 

Na  origem  do  tempo,  num  templo  oriental,  Deus  colocou  64  discos  perfurados  de 

ouro  puro  ao  redor  de  uma  de  três  colunas  de  diamante  e  ordenou  a  um  grupo  de 

sacerdotes que movessem os discos de uma coluna para outra, respeitando as regras 

acima explicadas. Quando todos os 64 discos fossem transferidos para outra coluna, 

o mundo acabaria. (HEFEZ, 2011, p 25)  

Vamos escrever uma função recursiva para determinar o menor número de movimentos 

para resolver o ―quebra-cabeça‖ da Torre de Hanói. Abaixo temos a solução para o jogo com 

3 discos. 

Figura 3: etapas de solução da torre de Hanói com 3 discos 

Fonte: próprio autor. 

 
 
 
 
 
 
42 

Quantidade de movimentos mínimos de acordo com o número de discos 

Tabela 4.2: Quantidade de discos x número mínimo de movimentos 

Quantidade 
1 
2 
3 
4 
⋮ 
n 

Número de movimentos 
1 
3 
7 
15 
⋮ 
2𝑛 − 1 

Fonte: próprio autor. 

Escrevendo a função recursiva temos 

𝑓(𝑛) = {

1   𝑠𝑒 𝑛 = 1
2𝑓(𝑛 − 1) + 1     𝑠𝑒 𝑛 > 1

Que aplicando na função os valores de n a partir de 1, obtemos:  

𝑓(1) = 1 

𝑓(2) = 2. 𝑓(1) + 1 = 2 × 1 + 1 = 3 

𝑓(3) = 2. 𝑓(2) + 1 = 2 × 3 + 1 = 7 

𝑓(4) = 2. 𝑓(3) + 1 = 2 × 7 + 1 = 15 

𝑓(5) = 2. 𝑓(4) + 1 = 2 × 15 + 1 = 31 

𝑓(6) = 2. 𝑓(5) + 1 = 2 × 31 + 1 = 63 

⋮ 

𝑓(𝑛 − 1) = 2. 𝑓(𝑛 − 2) + 1 = 2𝑛;1 − 1 

𝑓(𝑛) = 2. 𝑓(𝑛 − 1) + 1 = 2𝑛 − 1 

Agora  veremos  uma  dedução  de  como  calcular  diretamente  a  quantidade  mínima  de 

movimentos: 

De 𝑓(𝑛) = 2. 𝑓(𝑛 − 1) + 1 obtemos 𝑓(𝑛) − 2. 𝑓(𝑛 − 1) = 1 

𝑓(𝑛 − 1) − 2. 𝑓(𝑛 − 2) = 1 

 
 
 
43 

𝑓(𝑛 − 2) − 2. 𝑓(𝑛 − 3) = 1 

⋮ 

𝑓(3) − 2. 𝑓(2) = 1 

𝑓(2) − 2. 𝑓(1) = 1 

𝑓(1) = 1 

Se  apenas  somarmos  não  haverá  eliminação,  então  a  segunda  linha  vamos  multiplicar 

por 2, e terceira linha por 4, a quarta linha por 8, assim sucessivamente, até a ultima linha ser 

multiplicada por 2𝑛;1, obtendo 

𝑓(𝑛) − 2. 𝑓(𝑛 − 1) = 1 

2. 𝑓(𝑛 − 1) − 4. 𝑓(𝑛 − 2) = 2 

4. 𝑓(𝑛 − 2) − 8. 𝑓(𝑛 − 3) = 4 

8. 𝑓(𝑛 − 3) − 16. 𝑓(𝑛 − 4) = 8 

⋮ 

2𝑛;2. 𝑓(2) − 2𝑛;1. 𝑓(1) = 2𝑛;2 

2𝑛;1. 𝑓(1) = 1. 2𝑛;1 

Somando-se ambos os lados, obtemos 𝑓(𝑛) = 1 + 2 + 4 + 8 + ⋯ 2𝑛;1 e as parcelas à 

direita da equação formam uma P.G. com 𝑛 elementos e razão 2 e primeiro elemento 1, cuja 

soma é igual a 2𝑛 − 1, assim a equação se reduz à:𝑓(𝑛) = 2𝑛 − 1 

Uma aplicação online pode ser encontrada no site Só Matemática no endereço eletrôni-

co: https://www.somatematica.com.br/jogos/hanoi/. 

 
 
 
 
44 

5.  RECURSIVIDADE  USANDO  O  GEOGEBRA  E  OUTROS  RECURSOS 

TECNOLÓGICOS  

Na  educação  básica  temos  diversos  conteúdos  que  envolvem  a  ideia de  recursividade, 

por  exemplo:  Sequências,  Progressões,  Funções  recursivas,  Matemática  financeira  e  Arte 

(imagens recursivas, também chamadas de efeito Droste). E se relacionam de forma interes-

sante. 

Toda  essa  diversidade  de  atividades  em  torno  das  funções  recursivas  visa  esse  novo 

momento  da  educação  brasileira  e  busca  se  encaixar  na  BNCC  que  tem  como  uma  das 

competências: 

Exercitar a curiosidade intelectual e recorrer à abordagem própria das ciências, in-
cluindo  a  investigação,  a  reflexão,  a  análise  crítica,  a  imaginação  e  a  criatividade, 
para  investigar  causas,  elaborar  e  testar hipóteses,  formular  e  resolver problemas  e 
criar  soluções  (inclusive  tecnológicas)  com  base  nos  conhecimentos  das  diferentes 
áreas. (BRASIL, 2018, p. 9). 

Busca-se desenvolver competências e habilidades em Matemática como: Representação 

e comunicação, ou seja, como se utilizar adequadamente os recursos tecnológicos como ins-

trumentos de produção, representação e de comunicação. 

5.1 Definição de Progressões 

Um  dos  ramos  da  álgebra  matemática  é  o  estudo  das  progressões  aritméticas  (PA)  e 

progressões geométricas (PG). Aqui associamos com o estudo das funções e a recursividade 

presente na definição de progressões, outros conceitos, como por exemplo a interpolação de 

termos, não são objeto do presente trabalho. 

Nos itens anteriores 4.4 (PG) e 4.5 (PA) as funções recursivas tem o 𝑓(0) como primei-

ro termo da sequência; já nos itens a seguir 5.1.1 e 5.1.2, o primeiro termo é 𝑓(1) da função, 

essa mudança é apenas para facilitar o entendimento para os alunos. 

5.1.1 Progressão aritmética 

A PA é uma sequência determinada de forma que, a partir do segundo termo, é adicio-

nada uma constante r (razão da PA) ao termo antecessor, o que permite que o termo seja en-

contrado. 

 
 
45 

A 𝑃𝐴(1, 4, 7, 10, . . . ) tem como primeiro termo 𝑎1 = 1  e razão 𝑟 = 3, na forma recur-
siva tem-se 𝑎𝑛 = 𝑎𝑛;1 + 3 e a fórmula do termo geral é definida por  𝑎𝑛 = 1 + 3(𝑛 − 1) =

3𝑛 − 2. Para representar em um gráfico o comportamento dessa sequência usaremos a função 

𝑓: 𝑁∗ → 𝑅 dada por 𝑓(𝑥) = 3𝑥 − 2. Ou seja, os valores de entrada 𝑥, são naturais não nulos. 

Figura 4: representação da PA em gráfico cartesiano 

Fonte: próprio autor. 

5.1.2  Progressão Geométrica 

A 𝑃𝐺 é uma sequência determinada de forma que, a partir do segundo termo, é multipli-

cada uma constante q (razão da PG) ao termo antecessor, o que permite que o termo seja en-

contrado. 

A 𝑃𝐺(1,2,4,8, . . . ) tem como primeiro termo 𝑎1 = 1  e razão 𝑞 = 2, na forma recursiva 
tem-se  𝑎𝑛 = 2. 𝑎𝑛;1  e  a  fórmula  do  termo  geral  é  definida  por  𝑎𝑛 = 2𝑛;1.  Pode-se  usar  a 
função 𝑓: 𝑁∗ → 𝑅 dada por 𝑓(𝑥) = 2𝑥;1. Ou seja, os valores de entrada  𝑥, são naturais não 
nulos. 

 
 
 
 
Figura 5: representação da PG em gráfico cartesiano 

46 

Fonte: próprio autor. 

5.2 Matemática financeira 

O  regime  de  juros  simples  é  uma  aplicação  de  progressões  aritméticas  e  também  de 

função  afim,  pois  de  𝐽 = 𝑐. 𝑖. 𝑛  e  𝑀 = 𝐶 + 𝐽,  temos  que  𝑀 = 𝐶,  𝑀 = 𝐶. 𝑖. 𝑛 + 𝐶,  o  que  é 

mesma  estrutura  de  𝑎𝑛 = 𝑟(𝑛 − 1) + 𝑎1  e  𝑓(𝑥) = 𝑎𝑥 + 𝑏.  Mantendo-se  a  ideia  de 
recursividade, temos: 

Tabela 5.1: montante em juros simples como recorrência. 

Período 

Montante como 
recorrência 

𝑀1 = 𝐶 + 𝐽 
𝑀2 = 𝑀1 + 𝑗 
𝑀3 = 𝑀2 + 𝑗 
⋮ 

1 

2 

3 

⋮ 

n 

Montante 

𝑀1 = 𝐶(1 + 𝑖) 
𝑀2 = 𝐶(1 + 2𝑖) 
𝑀3 = 𝐶(1 + 3𝑖) 
⋮ 

𝑀𝑛 = 𝑀𝑛;1 + 𝑗 

𝑀𝑛 = 𝐶(1 + 𝑛𝑖) 

Em que C – capital inicial (principal), i – percentual de juros, n – período da aplicação e 

M – montante (capital adicionado ao juro). 

 
 
 
 
Observe a tabela, um exemplo em que temos o principal (capital inicial) de R$ 1000,00 

a uma taxa de juros i=10%, em cada mês o montante é obtido pela soma do montante do mês 

anterior aos juros do mês corrente, no caso R$ 100,00. 

47 

Tabela 5.2: montante em juros simples. 

Mês 

Principal (R$) 

Juros R$ (10%) 

0 

1 

2 

3 

4 

5 

1000 

1100 

1200 

1300 

1400 

1500 

100 

100 

100 

100 

100 

1000+100 

1100+100 

1200+100 

1300+100 

1400+100 

Agora  associamos  o  sistema  de  juro  composto  como  uma  aplicação  de  progressões 

geométricas  e  também  de  função  exponencial,  pois  em  𝑀 = 𝐶(1 + 𝑖)𝑛  temos  a  mesma 
estrutura de 𝑎𝑛 = 𝑎1. 𝑞𝑛;1 e de 𝑓(𝑥) = 𝑎. 𝑏𝑥. 

Observe a tabela 

Tabela 5.3: montante em juros compostos como recorrência. 

Período  Montante como recorrência 

Montante 

1 

2 

3 

⋮ 

n 

𝑀1 = 𝐶(1 + 𝑖) 
𝑀2 = 𝑀1(1 + 𝑖) 
𝑀3 = 𝑀2(1 + 𝑖) 
⋮ 

𝑀𝑛 = 𝑀𝑛;1(1 + 𝑖) 

𝑀1 = 𝐶(1 + 𝑖) 
𝑀2 = 𝐶(1 + 𝑖)2 
𝑀3 = 𝐶(1 + 𝑖)3 
⋮ 
𝑀𝑛 = 𝐶(1 + 𝑖)𝑛 

Usaremos um exemplo com os valores do anterior: temos o principal (capital inicial) de 

R$ 1000,00 a  uma taxa de juros i=10%, em cada mês  o  montante  é obtido pelo produto do 

montante do mês anterior por 1,1 (1+10%) 

 
 
 
 
 
 
 
 
 
 
48 

Tabela 5.4: montante em juros compostos. 

Mês 

Principal (R$) 

Juros R$ (10%) 

0 

1 

2 

3 

4 

5 

1000 

1100 

1210 

1331 

1464,1 

1610,51 

100 

110 

121 

133,1 

146,41 

1000+100 

1100+110 

1210+121 

1331+133,1 

1464,1+146,41 

As tabelas  com valores enfatizam o  crescimento linear (juro simples-função afim)  e o 

crescimento  exponencial  (juro  composto-função  exponencial).  Enquanto  no  juro  simples  a 

aplicação gerou R$ 1500,00, no juro composto foram R$ 1610,51. 

5.3 Proposta de utilização do Geogebra  

Vamos explicitar o motivo de usarmos o Geogebra (deriva da aglutinação das palavras 

Geometria e Álgebra) e mostrar alguns resultados a partir de sua utilização, ou seja, veremos 

que sua utilidade além dos gráficos apresentados no capítulo anterior. 

O  GeoGebra  é  um  aplicativo  de  matemática  dinâmica,  o  projeto  foi  iniciado  na 

Universidade Salzburg – Áustria em 2001, para ser utilizado em ambiente de sala de aula, sua 

distribuição é livre e disponível em várias plataformas. É utilizado em quase todo o planeta 

(mais  de  55  idiomas),  pois  é  para  todos  os  níveis  de  ensino  que  reúne  Geometria,  Álgebra, 

Planilha de Cálculo, Gráficos, Probabilidade, Estatística e Cálculos Simbólicos em um único 

pacote fácil de se usar; em uma única interface gráfica (GUI) 

Possui  uma  comunidade  de  milhões  de  usuários  espalhados  por  todo  o  mundo;  e  se 

tornou  um  líder  na  área  de  softwares  de  matemática  dinâmica,  apoiando  o  ensino  e  a 

aprendizagem em Ciência, Tecnologia, Engenharia e Matemática. 

Nas figuras 4 e 5 do item anterior, os gráficos foram feitos no Geogebra. 

Espiral de Fibonacci 

Construção da Espiral de Fibonacci utilizando o Geogebra. Os dois primeiros quadrados 

menores  têm  lado  medindo  1  u.c.,  o  lado  do  terceiro  mede  2  u.c.  (1 + 1,  a  soma  dos  dois 

 
 
 
 
 
 
49 

primeiros)  ,  o  quarto  quadrado  de  lado  3  u.  c.  (1 + 2,  a  soma  do  segundo  com  o  terceiro). 

Segue a recursividade, a medida do lado de um quadrado é a soma dos lados dos quadrados 

anteriores. 

Figura 6: espiral de Fibonacci com 5 iterações e com 7 iterações. 

Fonte: próprio autor. 

A função de Fibonacci, com auxílio da planilha e o ―botão‖ controle deslizante (slider) 

para que a se destaque os pontos da função que correspondem a sequência. 

 
 
 
  
Figura 7: Interface do Geogebra com a função de Fibonacci. 

50 

Fonte: próprio autor. 

Porém  temos  diversas  opções  de  formas  e  cores  para  criação  de  imagens  com 

recursividade. O que nos faz adentrar no conceito de fractal, de geometria Fractal. 

Fractal  é  uma  figura  da geometria ou  física,  algumas  encontradas  na  natureza, 

geralmente  muito  similares  em  diferentes  níveis  ou  escalas,  isto  é,  um  objeto  em  que  suas 

partes  separadas  repetem  os  traços  (a  aparência)  do  todo.  Gerando  um  padrão  recursivo 

(padrão repetitivo). 

Não  falaremos  da  teoria  Fractal,  criada  em  1975  por  Benoit  Mandelbrot  (1924-2010), 

que  utilizou  as  ideias  anteriormente  expostas  por  outros  matemáticos.  Por  exemplo:  o 

conjunto de Cantor, floco de neve de Koch, e o triângulo de Sierpinski. 

 
 
 
 
Figura 8: Efeito recursivo usando apenas quadrados no Geogebra 

51 

Fonte: próprio autor. 

Na próxima figura temos um exemplo clássico de fractal, construído no Geogebra. 

Utilizou-se polígono regular e ponto médio.  

Figura 9: Construção do fractal triângulo de Sierpinski. 

Fonte: próprio autor. 

Com  o  geogebra  é  possivel  desenvolver  também  figuras  dinâmicas,  a  sequência  de 

blocos quadrados formando a ideia dos números triangulares, em que é possível modificar a 

figura pelo botão ‗controle deslizante‘ (Slider) em que defini o valor de n de 0 até 20. Ou seja, 

para  𝑛 = 0  não  há  figura,  para  𝑛 = 1,  temos  apenas  um  quadrado;  para  𝑛 = 2,  temos  3 

quadrado  concatenados;  para  𝑛 = 3,  temos  6  quadrados  concatenados  e  assim  segue  a 

sequência dos números triangulares.  

 
 
 
 
Trata-se de uma recorrência, que no caso é simples 𝑇𝑛 = 𝑇𝑛;1 + 𝑛. Sendo 𝑇1 = 1. 

52 

Tabela 5.5: Recorrência para os números triangulares. 

n 

1 

2 

3 

4 

5 

𝑇𝑛 = 𝑇𝑛;1 + 𝑛 
𝑇1 = 1 
𝑇2 = 𝑇1 + 2 
𝑇3 = 𝑇2 + 3 
𝑇4 = 𝑇3 + 4 
𝑇5 = 𝑇4 + 5 

𝑇𝑛 
𝑇1 = 1 
𝑇2 = 1 + 2 = 3 
𝑇3 = 3 + 3 = 6 
𝑇4 = 6 + 4 = 10 
𝑇5 = 10 + 5 = 15 

Para  elaboração  (há  o  passo  a  passo  em  sites  especializados  em  Geogebra)  da  figura 

abaixo foram usados os comandos sequence, translate e take, e mais os elementos polígono, 

controle deslizante e dois vetores. 

Para 𝑛 = 8 temos 36 polígonos e para 𝑛 = 12 temos 78. 

Figura 10: Números triangulares no Geogebra de forma dinâmica. 

Fonte: próprio autor. 

Temos  a  opção  de  criar  GIF  (Graphics  interchange  Format:  Formato  para  intercâmbio 

de gráficos: imagem estática ou dinâmica) no Geogebra, em que as imagens são ‗animadas‘ a 

partir do controle deslizante (Slider) selecionado no momento em que se cria o GIF. 

Além das imagens, podemos trabalhar a criação de vídeos, para que alguns alunos usem 

suas técnicas e também a criatividade. Um exemplo bem interessante é o Nature by numbers 

de  Cristóbal Vila,  em  canais  de  língua  portuguesa  chamado  de  Sequência  de  Fibonacci,  no 

endereço  youtube.com/user/etereaestudios,  nos  mostra  alguns  casos  muito  interessantes  em 

que podemos visualizar aplicações da sequência de Fibonacci. 

 
 
 
53 

Um exemplo do vídeo é o Girassol: suas sementes preenchem o miolo dispostas em dois 

conjuntos de espirais: geralmente, 21 no sentido horário e 34 no anti-horário (que são termos 

da sequência) 

Figura 11: Flor de girassol, espiral de Fibonacci. 

Fonte: SunFlower: the Fibonacci sequence, no Pintereste4 

5.4 Imagens Recursivas (efeito Droste): Arte tecnológica com estrutura recursiva. 

As  imagens  recursivas,  ou  efeito  Droste  (em  referência  à  embalagem  de  cacau  em  pó 

holandesa  Droste),  ou  também  conhecidas  como  Mise  en  abyme  (termo  em francês que 

costuma  ser  traduzido  como  "narrativa  em  abismo"),  são  imagens  bonitas  e  curiosas  que 

relacionam arte e matemática. 

Pode-se  usar  qualquer  editor  de  imagem  para  se  obter  uma  imagem  recursiva,  nos 

exemplos  abaixo,  apesar  de  haver  programas  gratuitos  com  mais  recursos,  usei  o  Microsoft 

Paint, em que é possível reduzir e deslocar imagens facilmente. 

O  primeiro  exemplo  é  a  obra  Deus  Pai,  de  Girolamo  Santacroce,  cerca  de  1530, 

Nápoles,  Itália. Técnica Mármore,  dimensões:  84x80x40  cm. A  fotografia  feita  pelo  próprio 

autor  no  MASP  –  Museu  de  arte  de  São  Paulo  Assis  Chateaubriand,  em  2015  gerada 

recursivamente  com  redução  de  1/3  em  cada  dimensão,  ou  seja,  cada  imagem  dentre  as 

menores tem (2 3⁄ )² = 4 9⁄  da área da figura imediatamente maior.  

4 Pintereste: endereço: https://www.pinterest.ru/pin/437623288774832621/?lp=true 

 
 
 
                                                 
 
Figura 12: Imagens obtidas com 4 e 8 iterações 

54 

Fonte: próprio autor. 

Como  segundo  exemplo,  pensando  em  um  ‗link‘  com  a  biologia  (por  que  não?),  uma 

foto do Dragão Barbudo, um lagarto do gênero Pogona, que apesar do nome é bastante dócil 

e amigável, originário das regiões desérticas da Austrália e Nova Guiné. Fotografia realizada 

pelo  próprio  autor  no Aquário  de  São  Paulo  em  2016.  Imagem  gerada  recursivamente  com 

redução  de  70%  da  área,  ou  seja,  cada  imagem  dentre  as  menores  é  30%  da  área  da  figura 

imediatamente maior. 

Figura 13: imagem do Dragão barbudo com 5 iterações. 

Fonte: próprio autor. 

 
 
 
 
55 

5.5 Fractais de papel 

Podemos  facilmente  aplicar  o  conceito  de  recursividade  em  um  material  palpável, 

lúdico e de baixo custo não apenas para os alunos da educação básica. Aqui vamos usar um 

termo  recente,  as  ‗Fractatividades‘,  que  são  atividades  envolvendo  fractais,  despertam  a 

curiosidade e a criatividade; são uma forma de ensinar o conceito de fractal de forma divertida 

e artística. 

A palavra Fractal deriva de Fractus (fração, quebrado). O termo fractal foi cunhado por 

Benoit  Mandelbrot  em  1975,  em  seu  livro  no  qual  cria  a  teoria  fractal,  criando  assim  a 

geometria  fractal.  Esse  novo  tipo  de  geometria  se  aplica  a  vários  ramos  como  cinema, 

economia, hidráulica, geologia, meteorologia e também na linguística. 

Figura 14: Fractal clássico do triângulo de Sierpinski 

Fonte: próprio autor. 

O passo a passo da construção, assim como diversas aplicações e exemplos de fractais, 

pode 

ser 

seguido 

no 

sítio 

eletrônico 

da  Fundação  Fractal 

no 

endereço 

https://fractalfoundation.org/resources/fractivities/fractal-cutout/.  

Mais  um  exemplo,  também  clássico,  de  fractal  de  papel.  Cujo  passo  a  passo  pode  ser 

seguido no Youtube no endereço:  www.youtube.com/watch?v=Xj2Vnk4wy-w. 

 
 
 
Figura 15: Clássico fractal de papel, degraus de escada. 

56 

Fonte: próprio autor. 

Para reforçar as pesquisas sobre fractais temos dois conteúdos da Revista do Professor 

de matemática, sendo: Fractais no ensino médio (nº.: 57) https://rpm.org.br/cdrpm/57/1.htm e 

Geometria Dinâmica: Uma nova Geometria (nº.: 49) https://rpm.org.br/cdrpm/49/5.htm. 

Claro  que  devemos  estimular  a  criação  de  novos  modelos  de  Fractais,  as  sequências 

matemáticas  são  infinitas.  E  como  a  maioria  dos  alunos  tem  certo  domínio  sobre  as 

ferramentas  tecnológicas,  eles  mesmos  podem  desenvolver  o  passo  a  passo  dos  modelos 

criados, não se restringindo aos cartões com fractais de papel. Em anexo uma criação feita em 

parceria com os alunos da Escola Estadual Igarapé da Fortaleza. 

 
 
 
 
 
 
57 

6. CONSIDERAÇÕES FINAIS 

A  educação  é  um  elemento  primordial  para  o  desenvolvimento  de  qualquer  país  ou 

nação.  Então  aulas  diferenciadas,  que  abordam  conteúdos  de  outras  áreas,  são 

importantíssimas, principalmente para que a matemática faça sentido para os estudantes.  

Despertar a curiosidade utilizando-se de novas ferramentas não deveria ser um trabalho 

diferenciado, mas sim, algo comum. Porém as provas e exames conteudistas ainda nos forçam 

para  aulas  que  funcionam  como  preparação  para  as  provas  e  não  em  algo  que  esteja  ligado 

mais a vida do aluno.  

E com a BNCC devemos oportunizar a criatividade e o empreendedorismo. 

Essa  percepção  da  unidade  da  Matemática,  além  da  diversidade  de  suas  práticas, 
serve  também  para  mostrar  que  o  desenvolvimento  da  disciplina  é  fruto  da 
experiência humana ao longo da história. Assim, ela não é um edifício perfeito que 
surgiu  pronto  da  mente  de  poucos  seres  privilegiados,  a  fim  de  ser  estudada  para 
puro deleite intelectual. O desenvolvimento gradual desse campo do saber, por seres 
humanos  inseridos  em  culturas  e  sociedades  específicas,  confere  a  ela  valores 
estéticos  e  culturais,  e  fornece  uma  linguagem  com  a  qual  pessoas  de  diferentes 
realidades  podem  se  comunicar,  com  precisão  e  concisão,  em  várias  áreas  do 
conhecimento. (BRASIL, 2018, p.522). 

Mas para melhorar a qualidade da educação no Brasil, sabemos que há muito a se fazer. 

A deficiência na formação dos professores e o mau uso dos escassos recursos para a educação 

são sem dúvidas problemas antigos e sem uma perspectiva de solução, nem que seja em longo 

prazo. 

Por isso esse trabalho proporciona maior relação da matemática com a tecnologia, com 

a arte e outras ciências. Reforça o que vários autores defendem: não usar apenas matemática 

pela matemática. 

Dessa  forma  este  trabalho  amplia  as  possibilidades  de  desenvolvimento  pleno,  o  que 

está presente na BNCC, o ensino não deve ser apenas na dimensão do conhecimento, mas o 

desenvolvimento pessoal, social, emocional, físico e cultural. 

Então,  com  o  advento  das  escolas  de  Robótica  e  Programação,  salas  ―Maker‖  e 

laboratórios de robótica devemos usar a programação como ferramenta de auxílio na sala de 

aula.  O  aluno  vai  modelar  programas  para  resoluções  de  problemas  conforme  os  valores  de 

entrada. 

Hoje,  contamos  com  escolas  que  possuem  sala  Maker  e/ou  laboratório  de  robótica, 

devemos  mencionar  também  franquias  educacionais.  Logo  temos  a  missão  de  nos  preparar 

para receber os ―novos‖ alunos que já entrarão no fundamental II e no ensino médio com essa 

bagagem de conhecimento.  

A  palavra,  em  inglês,  steam  significa  vapor  e  o  conceito  do  conjunto  de  novas 

 
 
58 

metodologias  STEAM  combina  com  a  forma  de  como  as  crianças  aprendem  (mais  intenso, 

diversificado, quente), alinhando em um único ambiente, o escolar, áreas que por muito tempo 

foram  um  tanto  distantes,  mas  que  agora  é  imprescindível  para  a  educação  do  futuro  que 

trabalhem  junto:  Ciência,  Tecnologia,  Engenharia,  Arte  e  Matemática.  Com  o  objetivo  de 

preparar para o mercado de trabalho e os desafios como cidadão 

 
 
 
 
 
59 

Referências bibliográficas 

ASSOCIAÇÃO  BRASILEIRA  DE  NORMAS  TÉCNICAS.  Informação  e  documentação: 
referências – elaboração: 6023: 2002. Rio de Janeiro, 2002.  

BRASIL. Instituto Nacional de Estudos e Pesquisas Educacionais Anísio Teixeira. Brasil no 
Pisa 2018 [recurso eletrônico]. – Brasília: INEP, 2020. Disponível em: <www.gov.br/inep/pt-
br/areas-de-atuacao/avaliacao-e-exames-educacionais/pisa/resultados>.  Acesso  em  20  mar. 
2021. 

______,  Ministério  da  educação.  Base  Nacional  Comum  Curricular.  Brasília.  2018. 
Disponível 
em: 
<basenacionalcomum.mec.gov.br/images/BNCC_EI_EF_110518_versaofinal_site.pdf>. 
Acesso em 20 mar.2021. 

______, Ministério da educação. Parâmetros curriculares nacionais: ensino médio. Parte III 
-  Ciências  da  Natureza,  Matemática  e 
suas  Tecnologias.  Disponível  em:  < 
http://portal.mec.gov.br/seb/arquivos/pdf/ciencian.pdf>. Acesso em 08 dez. 2020.  

CORMEN, Thomas H.; et all. Algoritmos: Teoria e Prática, Tradução da 2ª ed. São Paulo: 
Elsevier editor Ltda., 2002. 

Fractal Foundation. Disponível em <https://fractalfoundation.org/>. Acesso em 21 jul. 2021. 

HEFEZ, Abramo. Elementos de aritmética. 2ª ed. Rio de Janeiro: SBM, 2011. 

LAGES, Elon; et all. A Matemática do Ensino Médio, 4 vols., 9 ed. Coleção Professor de 
Matemática. Rio de Janeiro: SBM, 2006. 

MARKUSHEVICH, A. I. Sucesiones Recurrentes. 3ª ed. Moscou: Editorial Mir, 1986. 

PAIVA, Manoel Rodrigues. Matemática: Paiva, vol. 1. 2 ed. – São Paulo: Moderna, 2010. 

ROSEN,  Kenneth  H.  Matemática  discreta  e  suas  aplicações,  Tradução:  Helena  Castro  e 
João Guilherme Giudice, 6ª ed. – Dados eletrônicos. – Porto Alegre: McGraw-Hill, 2010. 

STEWART, James. Cálculo, vol. 1. Tradução: Antonio Carlos Moretti e Antonio Carlos Gilli 
Martins. 6ª ed. São Paulo: Cengage Learning, 2010. 

WOLFRAM 
<http://mathworld.wolfram.com/AckermannFunction.html>. Acesso em 17 de dez. 2019. 

MATHWORLD. 

Ackermann. 

Disponível 

Função 

em 

 
 
 
 
 
 
60 

ANEXOS 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
61 

MÉTODO DE NEWTON 

Também chamado de Newton-Raphson, esse método é usado para estimar os zeros (as 

raízes)  de  uma  função,  é  o  método  mais  usado  pela  maioria  das  calculadoras  e  softwares 

matemáticos. Para isso, começamos com uma aproximação inicial 𝑥1, obtida por conjetura, ou 

esboço  de  gráfico  (ou  gerado  por  computador).  Após  isso,  calcula-se  a  equação  da  reta 

tangente (por meio da  derivada)  ao gráfico da função  nesse ponto (aproximação  inicial) e a 

interseção dela com o eixo das abcissas, a fim de encontrar uma melhor aproximação para a 

raiz,  obtendo-se  𝑥2.  Repetindo-se  o  processo,  cria-se  um  método  iterativo,  recursivo,  para 

encontrarmos  a  raiz  da  função.  Em  notação  matemática,  o  método  é  dado  pela  seguinte 

sequência recursiva: 

𝑥𝑛:1 = 𝑥𝑛 −

𝑓(𝑥𝑛)
𝑓′(𝑥𝑛)

,

𝑛 ∈ ℕ 

Na figura podemos observar um exemplo das retas tangentes, primeiramente no ponto 

(𝑥1, 0), depois (𝑥2, 0), e a sequencia vai se aproximando da raiz 𝑟. 

Gráfico com representação do método de Newton 

Fonte: STEWART, 2010, p. 314.  

Demonstração: A  primeira  reta  tangente  a  curva  𝑓(𝑥)  no  ponto  (𝑥1, 0)  nos  fornece  a  tan 𝜃 

(sendo 𝜃 o ângulo de inclinação), que é igual a 𝑓’(𝑥1), derivada de 𝑓(𝑥), naquele ponto, ou 

seja, temos que: 

tan 𝜃 = 𝑓’(𝑥1) =

𝑓(𝑥1);0
𝑥1;𝑥2

    ⇒    𝑥1 − 𝑥2 =

𝑓(𝑥1)
𝑓’(𝑥1)

    ⇒    𝑥2 = 𝑥1 −

𝑓(𝑥1)
𝑓’(𝑥1)

Calculamos 𝑥3 a partir de 𝑥2 e assim aplicando a recursividade, obtemos  
𝑓(𝑥𝑛)
𝑓′(𝑥𝑛)

𝑥𝑛:1 = 𝑥𝑛 −

𝑛 ∈ ℕ 

,

 
 
 
 
 
 
 
 
62 

PROPOSTA DE ATIVIDADE I 

Exercícios  escolhidos  para  proporcionar  o  desenvolvimento  das  competências  operativas  no 
que tange as Funções Recursivas.  

1  –  Construir  no  Geogebra,  na  espiral  de 
Fibonacci,  o  sétimo  e  o  oitavo  termo.  como 
construção geométrica. 

2 – Construir o gráfico cartesiano da sequência de Fibonacci, usando a planilha do Geogebra. 

3 – Baseando-se nas Fractatividades, criar um fractal de papel usando a ideia recursiva. 

4 – A partir de uma imagem de sua preferência, criar uma imagem com recursividade, ou seja, 
utilizando a ideia de estrutura fractal.  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
63 

FRACTHEART – Fractal Coração 

Fractal desenvolvido em parceria com alunos da Escola Estadual Igarapé da Fortaleza – 

Santana -AP, em 2012, durante atividades envolvendo arte e matemática. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Atividade de aluno. 

O  Fractal  abaixo  foi  feito  por  um  ex-aluno  da  Fundação  Bradesco  em  2015.  A  primeira 
imagem com 4 iterações e a segunda com 5. 

64 

 
 
 
 
 
 
