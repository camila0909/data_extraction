Raoni do Nascimento Gonzaga

Bitcoin: uma introdução à matemática das
transações

Dissertação de Mestrado

Dissertação apresentada como requisito parcial para obtenção
do grau de Mestre pelo Programa de Pós–graduação em
Matemática, do Departamento de Matemática da PUC-Rio.

Orientador: Prof. Sinésio Pesco

Rio de Janeiro
Julho de 2021

Raoni do Nascimento Gonzaga

Bitcoin: uma introdução à matemática das
transações

Dissertação apresentada como requisito parcial para obtenção do
grau de Mestre pelo Programa de Pós–graduação em Matemática
da PUC-Rio. Aprovada pela Comissão Examinadora abaixo:

Prof. Sinésio Pesco
Orientador
Departamento de Matemática – PUC-Rio

Profa Renata Rosa
Departamento de Matemática - PUC-Rio

Prof Marcos Craizer
Departamento de Matemática - PUC-Rio

Profa Miriam del Milagro Abdón
Instituto de Matematica e Estatística - UFF-RJ

Rio de Janeiro, 16 de Julho de 2021

Todos os direitos reservados. A reprodução, total ou parcial
do trabalho, é proibida sem a autorização da universidade, do
autor e do orientador.

Raoni do Nascimento Gonzaga

Graduado em Engenharia Mecânica pelo Instituto Militar de
Engenharia (IME). Professor da rede particular de ensino e
de projetos sociais de preparação para concursos. Engenheiro
de Equipamentos na indústria de Óleo e Gás.

Gonzaga, Raoni do Nascimento

Ficha Catalográﬁca

Bitcoin: uma introdução à matemática das transações /
Raoni do Nascimento Gonzaga; orientador: Sinésio Pesco. –
2021.

65 f: il. color. ; 30 cm

Dissertação (mestrado) - Pontifícia Universidade Católica

do Rio de Janeiro, Departamento de Matemática, 2021.

Inclui bibliograﬁa

1. Matemática – Teses. 2. Criptomedas. 3. Bitcoin. 4.
ECDSA. I. Pesco, Sinésio. II. Pontifícia Universidade Católica
do Rio de Janeiro. Departamento de Matemática. III. Título.

CDD: 510

À minha ﬁlha Valentina, jóia das nossas vidas, que você realize os seus
sonhos com seu esforço e amor.

Agradecimentos

Gostaria de agradecer à minha esposa Karlla Fernanda pela paciência
nessa jornada pandêmica que possibilitou a minha dedicação para elaboração
desse trabalho, foram só nós dois e nossa ﬁlha Valentina em isolamento por
mais de um ano. Obrigado pelo seu amor durante esse período que foi diaria-
mente demonstrado. Fomos esteio um do outro em todos os momentos.

Agradeço à minha mãe Sônia pelo seu exemplo e empenho em criar a

mim e meus irmãos e por sempre me incentivar a estudar.

Aos professores Alexandre e Paulo, por serem meus primeiros professores

de matemática e por alimentarem minha vontade de aprender.

Ao eterno Malba Tahan pelas estórias de Beremiz que me ﬁzeram admi-

rar a matemática.

Ao Colégio Pedro II por me apresentar uma educação pública de ex-

celência.

Agradeço ao meu Orientador, Prof. Sinésio Pesco sempre disponível e
motivador, que me ajudou muito no direcionamento desse trabalho. Gostaria
de agradecer ao Programa de Mestrado Proﬁssional em Rede Nacional em
Matemática, à SBM e à PUC-Rio por permitirem a realização desse curso.

O presente trabalho foi realizado com apoio da Coordenação de Aper-
feiçoamento de Pessoal de Nível Superior - Brasil (CAPES) - Código de Fi-
nanciamento 001.

Resumo

Gonzaga, Raoni do Nascimento; Pesco, Sinésio. Bitcoin: uma in-
trodução à matemática das transações. Rio de Janeiro, 2021.
65p. Dissertação de Mestrado – Departamento de Matemática, Pon-
tifícia Universidade Católica do Rio de Janeiro.

O conceito de moedas descentralizadas vem sendo amplamente dissemi-
nado com o advento das criptomoedas, dentre as quais tem destaque o Bitcoin.
O objetivo deste trabalho é apresentar as etapas de uma transação de Bitcoin,
explorando os conceitos matemáticos como Curvas elípticas e suas aplicações
sobre a geração de chaves públicas nas transações de Bitcoin chamando a
atenção para as características que conferem segurança, em particular, a apli-
cação de criptograﬁa por meio do algoritmo ECDSA.

Palavras-chave

Criptomedas; Bitcoin; ECDSA.

Abstract

Gonzaga, Raoni do Nascimento; Pesco, Sinésio (Advisor). Bitcoin:
an introduction to Mathematics of transactions. Rio de
Janeiro, 2021. 65p. Dissertação de Mestrado – Departamento de
Matemática, Pontifícia Universidade Católica do Rio de Janeiro.

The concept of decentralized currencies has been widely disseminated
with the advent of cryptocurrencies, among which Bitcoin stands out. The
objective of this work is to present the steps of a Bitcoin transaction, exploring
mathematical concepts such as elliptical curves and their applications on
the generation of public keys in Bitcoin transactions, drawing attention to
in particular, the application of
the characteristics that provide security,
encryption through the ECDSA algorithm.

Keywords

Cryptocurrencies; Bitcoin; ECDSA.

Sumário

1
Introdução
1.1 Contextualização
1.2 Objetivo
1.3 Breve Histórico

2 Conceitos fundamentais
2.1 O que é Blockchain?
2.1.1 Funções Hash criptográﬁcas
2.2 O que é Bitcoin?
2.2.1 Emissão de Bitcoins
2.3 Entendendo a diﬁculdade da mineração
2.4 Transações de Bitcoin

3 Fundamentos matemáticos das transações
3.1 Grupos, Anéis e Corpos
3.1.1 Grupos
3.1.2 Subgrupos
3.1.3 Classes Residuais
3.2 Problema do Logaritmo Discreto
3.3 Troca de Chaves - Sistema DHM
3.4 Curvas Elípticas e suas operações
3.4.1 Caracteríticas Geométricas
3.4.2
3.4.3 Álgebra da operação de soma de pontos em uma curva elíptica
3.4.4 Curvas Elípticas sobre o Corpo dos Inteiros Módulo p (Zp)
3.5 Parâmetros das Curvas Elípticas
3.5.1 Ordem de uma Curva elíptica
3.5.2 Subgrupos cíclicos
3.5.3 Ordem e Cofator de um Subgrupo
3.6 Problema do logaritmo discreto elíptico
3.7 Troca de Chaves - sistema DHM aplicado às curvas elípticas sobre

"Somando" Pontos geometricamente em uma curva elíptica

Zp

4 Criptograﬁa aplicada no protocolo Bitcoin
4.1 Parâmetros das Curvas Elípticas sobre um corpo ﬁnito (Zp)
4.1.1 A Curva elíptica do Protocolo Bitcoin
4.2 Mecanismo de geração de chaves públicas na Curva Elíptica
4.3 Assinando uma mensagem com ECDSA
4.4 Veriﬁcando uma Assinatura Digital
4.5 Transações de Bitcoin

5 Considerações ﬁnais

Referências bibliográﬁcas

13
14
15
15

17
17
18
21
22
24
24

27
27
27
28
29
32
34
35
38
39
42
43
47
47
47
48
48

48

50
50
50
52
53
54
55

61

62

Lista de ﬁguras

Figura 1.1 Cotação do Bitcoin em Reais no período de Nov/2015 a

Jun/2021

Figura 2.1 Encadeamento de blocos em uma blockchain
Figura 2.2 Variação do parâmetro Nonce em um determinado bloco
Figura 2.3 Evolução da Quantidade de Bitcoin em circulação
Figura 2.4 Exemplo de transação e geração de UTXO de "troco"
Figura 2.5 Exemplo de transação com consumo de mais de uma

UTXO de entrada

Figura 3.1 Exemplo de Curvas Elípticas Singulares
Figura 3.2 Exemplo de Curvas Elípticas Não Singulares
Figura 3.3 Reta que passa por P e Q em E(R)
Figura 3.4 Rebatimento de R em relação ao eixo x, obtendo R0 =

16

18
21
23
25

26

38
39
40

P ⊕ Q

40
Figura 3.5 Reta vertical e o ponto no inﬁnito O = P ⊕ −P
41
Figura 3.6 Adicionando um ponto a ele mesmo, R0 = P ⊕ P = 2 ⊗ P 41
Figura 3.7 Pontos da curva elíptica E : y2 = x3 + 7 sobre Z11
45
Figura 3.8 Tábua das somas dos pontos de E : y2 = x3 + 7 sobre Z11 46

Figura 4.1 Esquema das etapas do processo de assinatura digital
Figura 4.2 Etapas do processo de autenticação da assinatura digital
Figura 4.3 Esquema das operações que garantem segurança às

Transações

Figura 4.4 Esquema transação de João para Maria
Figura 4.5 Esquema de Transação de Maria para Ana

56
56

57
58
59

Lista de tabelas

Tabela 3.1 Adição em Z3
31
Tabela 3.2 Multiplicação em Z3
31
Tabela 3.3 Adição em Z4
31
Tabela 3.4 Multiplicação em Z4
31
Tabela 3.5 Adição em Z5
31
Tabela 3.6 Multiplicação em Z5
31
44
Tabela 3.7 Lado Direito da equação: atribuindo valores à variável x
Tabela 3.8 Lado Esquerdo da equação: atribuindo valores à variável y 44

Lista de Abreviaturas

ECDSA – Elliptic Curve Digital Signature Algorithm

SHA – Secure Hash Algorithm

NSA – Natioanl Secure Agency

PROFMAT – Progama de Mestrado Proﬁssional em Matemática em Rede

Nacional

UTXO – Unspent Transaction Output

SCGE – Standards for Eﬃcient Cryptography Group

P2PKH – Pay to Public Key Hash

UBUNTU: eu sou porque nós somos

Nelson Mandela, Longo caminho para a liberdade.

1
Introdução

A economia global inﬂuencia todas as nossas vidas e atividades, são
muitos números, índices, moedas e taxas. Termos como "geração de renda",
"taxa básica de juros", "fundos de investimento"e, mais recentemente até a
possibilidade de pagamento por PIX ocupam diariamente o noticiário e, grande
parte das vezes, os cidadãos não têm conhecimento básico para concatenar
essas ideias e entender relações de causa e efeito entre os números apresentados
e sua realidade.

No conteúdo programático da Educação Básica de Ensino Fundamental
e Médio temos pouca oportunidade de trabalhar a educação ﬁnanceira para
além da matemática ﬁnanceira básica, pensando nesse ponto e na crescente
digitalização de grande parte de nossa realidade, inclusive a econômica, que
decidimos lançar luz sobre um tema intrigante e motivante como o das
criptomoedas, nesse trabalho representadas pelo Bitcoin.

O Bitcoin vem se consolidando ao longo da última década como um
ativo digital, reconhecido pelo mercado e chamando atenção pela sua alta
volatilidade. No início do ano de 2021, em poucos meses a moeda chegou
a acumular variações de mais de 400%, por exemplo. Quanto mais ganha
notoriedade, mais dúvidas são geradas em seu entorno: do que se trata? É
conﬁável? Como se dão as transações?

A intenção desse texto é de tornar o leitor capaz de reconhecer os
principais termos desse universo e entender o quanto há de matemática na
implementação dessa criptomoeda, em particular, entender como a matemática
confere segurança às transações através da Criptograﬁa de Curvas Elípticas no
corpo dos Inteiros Módulo p.

Durante a pesquisa bibliográﬁca realizada nesse trabalho, foi constatado
que ainda há muito a ser publicado em Lingua Portuguesa sobre esse tema, os
textos não são muitos e, frequentemente serão citados textos em inglês. O artigo
[1] e o livro [2] apresentam um bom tutorial sobre os conceitos relacionados
ao tema que são trabalhados no capítulo 02 desse texto. Os trabalhos [3; 4]
abordam a criptograﬁa com emprego de curvas elípticas, tanto em R quanto em
Zp. Já em [5] o autor traz o conceito das funções hash criptográﬁcas e elementos
de blockchain, inclusive um exemplo de aplicação em ambiente educacional.

Capítulo 1.

Introdução

14

A série de artigos [6; 7; 8; 9], fornece boas referências teóricas sobre o
estabelecimento de uma criptomoeda, em particular do Bitcoin, já a série de
artigos [10; 11] exibe implementações interessantes de operações em curvas
elípticas e do ECDSA (Elliptic Curve Digital Signature Algorithm).

Por se tratar de um tema dos mais recentes, não tratado corriqueiramente
em aula, procurou-se ao longo do texto ponderar formalismo e linguagem didá-
tica. O texto se destina aos estudantes dos períodos iniciais do Ensino Superior,
entretanto um aluno concluinte do Ensino Médio é capaz de compreender o
texto em quase sua totalidade. Adicionalmente, esse trabalho tem como público
professores de matemática que desejem contextualizar o estudo de aritmética,
criptograﬁa e teoria dos números.

1.1
Contextualização

O preﬁxo "cripto" da palavra criptomoeda vem do grego e traz a noção
de algo que está escondido, o que nos remete à ideia de manter sigilo sobre
algo, essa ideia acompanha a humanidade ao longo de toda a sua evolução,
todos nós desejamos sigilo em algum grau para assuntos pessoais. Por exemplo,
se perguntarmos em uma enquete se os participantes gostariam de ter o
seu sigilo telefônico quebrado, provavelmente ouviríamos, de grande parte
dos entrevistados, um NÃO como resposta, o mesmo ocorreria para o sigilo
bancário, provavelmente ninguém aceitaria tornar públicas todas as suas
operações bancárias e saldo de contas.

A solução que a sociedade moderna desenvolveu de preservar a privaci-
dade dos indivíduos ao longo do tempo foi amplamente inﬂuenciada pela crip-
tograﬁa, sem contar com as históricas aplicações militares, em particular nas
duas grandes guerras mundiais do século passado, que desenvolveram bastante
esse campo do conhecimento. A criptograﬁa está muito presente em nossas
vidas, desde as comunicações militares até as mensagens trocadas através de
aplicativos como "WhatsApp", que aliás utliza a mesma técnica criptográﬁca
[12] que o protocolo Bitcoin: a criptograﬁa de curvas elípticas.

A grande quebra de paradigma associada ao Bitcoin é a descentralização
da moeda,
isso pode soar estranho, pois estamos habituados a sistemas
econômicos centralizados, com uma autoridade como um Banco Central que
é responsável por consolidar e validar as operações bancárias executadas,
entretanto esses sistemas estão sensívelmente ligados à política econômica de
cada país, que pode tomar decisões que afetem a taxa básica de juros do
sistema ﬁnanceiro ou até mesmo cause impacto no valor da moeda no mercado
internacional por exemplo.

Capítulo 1.

Introdução

15

Já no Bitcoin, não há essa autoridade central, mas sim uma rede
internacional que guarda toda a informação das transações de forma segura
em milhares de nós diferentes de modo que em qualquer lugar da Terra se tem
acesso a essa informação, que é disposta em uma cadeia de blocos denominada
blockchain. Assim, a essência dessa inciativa é a liberdade sob a qual foi
idealizada, sem depender diretamente de um governo ou instituição que possa
inﬂuenciar diretamente sua política monetária.

1.2
Objetivo

O objetivo desse trabalho é apresentar uma introdução à matemática so-
bre a qual se baseiam as aplicações que permitem o protocolo Bitcoin operar
com segurança. Para isso vamos trabalhar os conceitos fundamentais que com-
põem esse sistema no capítulo 02, o desenvolvimento matemático propriamente
dito se dará mais intensamente no capítulo 03, onde será apresentada a teoria
que subisidia a aplicação do algoritmo de assinatura digital (ECDSA) que ga-
rante a segurança nas transações entre endereços Bitcoins, tema do capítulo
04.

1.3
Breve Histórico

A idealização do Bitcoin se apoiou em trabalhos anteriores de Cientistas
da Computação como Ralph C. Merkle, Whitﬁeld Diﬃe e Martin Hellman
que desenvolveram em 1976 um relevante trabalho no campo da criptograﬁa
assimétrica [13]. Bem como David Chaum e Adam Back, que nas décadas
de 1980 e 1990, respectivamente, desenvolveram o e-cash e o hashcash, que
abriram caminho para tornar a mineração de Bitcoin factível [13].

O conceito de Bitcoin foi proposto pela primeira vez por Satoshi Na-
kamoto em 2008 quando da publicação do artigo, "Bitcoin: A Peer-to-Peer
Electronic Cash System"[14] por meio de um fórum online que disponibilizava
uma lista de correio eletrônico de proﬁssionais da área de criptograﬁa [4]. Sa-
toshi Nakamoto é um pseudônimo e até hoje não se sabe exatamente quem ele
(ou ela) é (ou são, pois pode ser um grupo de pessoas) de fato. O protocolo Bit-
coin foi introduzido pela primeira vez em 2009 como software de código aberto
e se tornou a primeira criptomoeda descentralizada do mundo. De acordo com
o artigo de Nakamoto, Bitcoin é essencialmente uma versão "peer to peer"de
dinheiro eletrônico que permitiria que pagamentos online fossem enviados di-
retamente de uma parte para outra sem passar por uma instituição ﬁnanceira.

Capítulo 1.

Introdução

16

Entretanto, foi em 22 de Maio de 2010, que o Bitcoin passou a ter
valor comercial de fato, quando foram compradas duas pizzas em Jacksonville,
Florida [13], por 10.000,00 BTC, valor equivalente a R$ 1,8 Bilhões de Reais
em junho de 2021! Ao longo da década de de 2010, o Bitcoin passou de menos
de 1 centavo de real para o pico em 64 mil reais em 2017, fechando o ano de
2019 um pouco abaixo dos 30 mil reais (Fig 1.1) .

Figura 1.1: Cotação do Bitcoin em Reais no período de Nov/2015 a Jun/2021

Fonte:https://g.co/ﬁnance/BTC-BRL

Nesse percurso a criptomoeda foi ganhando notoriedade e milhões de
usuários foram adicionados à rede em todo o mundo, as pessoas foram se in-
formando e desfazendo seus mitos em relação a esse mercado. Já recentemente,
com o advento da pandemia de COVID-19 que se alastrou internacionalmente
em 2020, as características do Bitcoin como independência e descentralização
chamaram a atenção dos investidores frente ao cenário de grandes incertezas
que a pandemia gerou no mercado internacional e a procura pela criptomoeda
disparou ainda fomentada pela entrada de grandes instituições ﬁnanceiras que
passaram a estudar a viabilidade de aceitar pagamentos em Bitcoins.

2
Conceitos fundamentais

Nesse capítulo vamos descrever o ambiente onde se dão as operações de
bitcoin, uma série de deﬁnições serão necessárias para entender as etapas das
transações que serão apresentadas nos capítulos posteriores.

2.1
O que é Blockchain?

Essa palavra está sempre presente nas discussões sobre tecnologia, sempre
sucitando curiosidade e um pouco de surpresa, por ser algo simples por um
lado, mas hermético por outro. Literalmente a palavra blockchain pode ser
traduzida como "cadeia de blocos" e, de fato não passa disso. Os blocos aqui
podem ser entendidos como um conjunto de informações, entretanto há uma
característica nessa estrutura que é a forma de interligar um bloco com o
bloco anterior, isso acontece de maneira que um dado bloco, carrega consigo
informações de seu antecessor e, caso se altere qualquer dado desse, aquele
também se altera.

Por conta desse modo de conexão entre os blocos não se consegue
alterar o histórico dessa sequência de informações, pois nesse caso, todos os
blocos sucessores do que recebeu a modiﬁcação, também se modiﬁcariam. Essa
propriedade é crucial para conferir conﬁabilidade a essa estrutura de dados. No
escopo desse texto, a blockchain da que falamos é a que armazena os dados das
transações de uma criptomoeda. Segundo [15], uma criptomoeda é um meio de
troca, podendo ser centralizado ou descentralizado que se utiliza da tecnologia
de blockchain e da criptograﬁa para assegurar a validade das transações e a
criação de novas unidades da moeda.

Uma das principais criptomoedas e a mais famosa de todas é o Bit-
coin, cuja origem misteriosa em 2008 representou uma grande inovação por
representar um sistema monetário descentralizado, alheio às decisões político-
econômicas locais como o sistema bancário convencional.

Mas como garantir a veracidade das transações em uma rede descentra-
lizada, sem um agente central como um banco para validar se as operações
apresentam inconsistências ﬁnanceiras? Caso não exista um consenso de que,

Capítulo 2. Conceitos fundamentais

18

de fato eu disponho de R$ 20,00 na minha conta, não serei capaz de comprar
uma pizza de R$10,00, por exemplo.

A maneira encontrada por Satoshi Nakamoto [14] utiliza a tecnologia
blockchain para atingir esse consenso sobre a validade das transações, primeiro
por garantir a possibilidade de contabilizar o saldo de todos os participantes
da rede e depois por implementar uma segurança capaz de checar a veracidade
de origem e destino da transação.

A blockchain pode ser vista como se fossem as folhas consecutivas de um
livro caixa, no qual estão registradas todas as transações de todos os usuários
da rede, desde a primeira emissão de bitcoin. Entretanto esse livro seria público,
imutável e digital pois qualquer usuário pode consultá-lo a qualquer momento
pela rede bitcoin, entretanto não pode alterar nenhum registro.

2.1.1
Funções Hash criptográﬁcas

Mas como é feita essa conexão entre os blocos? Isso só é possível
porque a Blockchain utiliza a função Hash criptográﬁca SHA-256. Essa função
recebe uma entrada de tamanho aleatório (uma sequência de caracteres, um
documento de texto, uma imagem ou até mesmo um vídeo) e a converte, através
de transformações matemáticas combinadas, em uma sequência de saída de
tamanho ﬁxo de 256 bits escrita na base hexadecimal que conecta ao bloco
atual toda a informação contida no bloco anterior.

No caso da blockchain do bitcoin, a informação de entrada são as
transações que compõem o bloco, o hash do bloco anterior e mais algumas
informações que vamos tratar adiante.

Figura 2.1: Encadeamento de blocos em uma blockchain

A função hash criptográﬁca SHA-256 cifra o conteúdo de um bloco de
maneira que a partir do hash obtido não se consegue chegar na mensagem
original. Essa função foi desenvolvida pela Agência Nacional de Segurança
(NSA) dos EUA e seu nome vem de Secure Hash Algoritm. Em vários sites,
como https://emn178.github.io/online-tools/sha256.html, podemos "rodar"
essa função para visualizar como são expostos os resultados, por exemplo
se tivermos como entrada a palavra PROFMAT ou caso a entrada seja 1
googol = 10100:

Capítulo 2. Conceitos fundamentais

19

•Hash(PROFMAT) =
d3ad00e5a62a28ba5cc3b1fa394a1c50ea44906317fd299860fb037750bb2b93

•Hash(10100) =
4de7cee3e8159d7d618855575d7bebf 35ed07f c3556779f 4f e8726e818741836

Vamos ver as propriedades dessa função abaixo [16]:

1. Admite entradas de qualquer tamanho;

2. Produz uma saída de tamanho ﬁxo de 256 bits;

3. Tempo de implementação é razoavelmente curto, mais tecnicamente esse

tempo é linear em relação ao tamanho da entrada em bits;

4. Inexistência de função inversa: As funções hash criptográﬁcas são espe-
ciais por serem unidirecionais, ou seja, não existe uma função inversa
capaz de retornar a respectiva entrada a partir de uma dada saída.

5. Efeito avalanche: Caso a entrada seja alterada minimamente, como
adicionando um ponto ao ﬁnal dos caracteres ou uma letra passar de
maiúscula para minúscula, o resultado da função muda drasticamente e
não guarda relação alguma com o Hash anterior como vemos abaixo:

Hash(Criptograf ia) =
06daa551e10e768c77f 7f 95a008851c50851e604ed8acbc89039b62d2add2903
Hash(criptograf ia) =
d93449f 3e5b4bc1f b096a29c2f e7cb71b2694f 1436f 738741c35950f db36f baf

6. Resistência à colisão, aqui deﬁnimos colisão como a situação na qual
duas entradas distintas geram a mesma saída. Uma função Hash é dita
resistente à colisão se é inviável de encontrar dois valores x e y tais que
x 6= y e Hash(x) = Hash(y).

Dizemos inviável e não impossível, na verdade, sabemos com certeza que
existem colisões e podemos provar isso por meio de um simples argumento
de contagem. O conjunto de todas as entradas para a função hash contém
todas as entradas de todos os tamanhos, mas o conjunto de todas as
saídas contém apenas saídas de um comprimento ﬁxo especíﬁco. Logo,
haverá necessariamente mais de uma entrada possível para uma dada
saída.

Entretanto, até o presente momento ninguém foi capaz de encontrar uma
colisão nessa função, em teoria, se escolhermos 2256 + 1 entradas, pelo

Capítulo 2. Conceitos fundamentais

20

menos duas dessas terão a mesma saída, pois o número de entradas é
maior do que o número de saídas possíveis. Acontece que para calcular
apenas os hash de 2128 entradas (quantidade muito menor) com um PC
comercial, levaria-se mais do que 1027 anos [16].

Assim, assumimos que a função é resistente à colisão e para x 6= y temos
Hash(x) 6= Hash(y), o que implica no fato de se obtermos saídas iguais
então as entradas são iguais, isso permite uma série de aplicações dessa
função.

Quando um novo bloco de transações é adicionado à blockchain, ele é
transmitido para cada nó da rede bitcoin, que são milhões de ususários em
todo o mundo formando uma rede distribuída peer to peer. Para que a rede
como um todo reconheça a validade desse bloco, todos os nós tem que receber
a mesma informação e gerar um consenso em torno dessa informação.

Entretanto caso algum agente invasor mude o valor de alguma transação,
o hash desse bloco se alterará assim como o hash de todos os blocos após
esse também e essa informação quando restransmitida à rede vai gerar uma
inconsistência, pois alguns nós vão receber os dados corretos enquanto outros
os dados adulterados. Quando essa situação de falta de consenso ocorre, a rede
consegue identiﬁcar que houve uma alteração e corrigi-la, garantindo assim que
as informações das transações armazenadas na blockchain formem um registro
imutável, conﬁável e auditável por qualquer nó da rede.

Representando os blocos com mais detalhes, podemos dividi-los em
duas partes: Cabeçalho e Transações. No cabeçalho está o Hash do bloco
anterior, informações de data e horário em que o bloco foi criado (Timestamp),
um parâmetro chamado nonce e outro chamado de diﬁculdade, ambos estão
relacionados diretamente com o processo de mineração que veremos nas seções
posteriores do texto. Já no conteúdo do bloco estão as transações propriamente
ditas, com as informações de valores, endereços de origem e endereços de
destino de cada uma dessas operações.

Para adicionar um bloco na blockchain é necessário que seja satisfeita
uma condição chamada de Prova de trabalho (Proof of Work) que consiste
em se exibir que o resultado da função hash aplicada ao bloco obedece à uma
restrição que requer um grande esforço computacional para ser atendida [1].
Essa restrição adotada na prática pelo protocolo da rede Bitcoin é encontrar
um bloco cujo hash resultante possua os primeiros n bits iguais a zero, onde n
depende da diﬁculdade de mineração determinada pelo sistema.

Na Fig 2.2 é ilustrado de forma simpliﬁcada como se atingir a prova de
trabalho através da variação do parâmetro nonce até que o hash resultante do

Capítulo 2. Conceitos fundamentais

21

Figura 2.2: Variação do parâmetro Nonce em um determinado bloco

bloco atinja a diﬁculdade desejada. No exemplo bastaram apenas 03 valores
diferentes de nonce para já se atingir a restrição imposta. Entretanto na
prática, são necessárias mais do que milhões de tentativas até que se obtenha
um hash de saída com os 19 primeiros bits iguais a zero e esse bloco então
seja adicionado à blockchain. Por conta dessa diﬁculdade de encontrar esses
parâmetros, esse processo foi comparado à atividade de mineração.

O leitor pode estar se perguntando o motivo pelo qual alguém estaria
disposto a executar esse processo de mineração, que consome esse grande
esforço computacional para obter a prova de trabalho, em troca de quê? A
resposta é Bitcoins! A cada bloco adicionado à Blockchain com sucesso, o
minerador recebe uma quantia em Bitcoins, mas aﬁnal o que é Bitcoin? Vamos
entender melhor na próxima sessão.

2.2
O que é Bitcoin?

Diferente de uma moeda ﬁduciária, como o Real ou o Dolar, controladas
por um Banco Central que regula a sua emissão, o Bitcoin é uma moeda virtual
criptograﬁcamente segura que circula em um sistema de pagamento eletrônico
descentralizado ponto a ponto (Peer to Peer).

Vamos comparar isso com exemplos do dia a dia: PayPal, Cartão de
crédito ou PIX, que são sistemas de pagamento com os quais grande parte dos
brasileiros está familiarizada. O PayPal tem mais paralelos com o Bitcoin [17],
pois ambos envolvem transações que ocorrem online e com dinheiro digital em
vez de Reais. Como o Bitcoin é descentralizado, ele não pode depender de uma
única entidade para controlar a moeda; em vez disso, o Bitcoin depende da
criptograﬁa para gerar novas moedas em circulação e para validar transações.
Ao contrário das moedas tradicionais, bitcoins são totalmente virtuais, o que
signiﬁca que não há moeda palpável. As moedas estão implícitas em transações
que transferem valor entre remetente e destinatário [2].

Capítulo 2. Conceitos fundamentais

22

Pagamentos efetuados através de uma empresa de cartões de crédito
convencional, se baseiam no fato de o usuário ter estabelecido uma relação
de conﬁança com essa empresa e ter a delegado a responsabilidade de validar
os seus dados e efetuar a transação corretamente. Entretanto em criptomoedas
como o Bitcoin não há a necessidade de uma autoridade intermediária para
essa validação, que é realizada através da tecnologia de blockchain.

A adoção do bitcoin como forma de pagamento vem crescendo por conta
dos benefícios que oferecidos em relação às formas de pagamento tradicionais.
Um usuário pode efetuar um pagamento para um receptor em qualquer
lugar do mundo a qualquer momento, sem a necessidade de uma instituição
intermediária, o que leva a menores taxas de transações, maior controle, e
mais privacidade [1]. É importante notar que muitos dos benefícios oferecidos
pelas criptomoedas em relação às instituições ﬁnanceiras tradicionais, como
descentralização e maior privacidade, são possibilitados pela utilização da
tecnologia de blockchains, explorada na seção anterior.

2.2.1
Emissão de Bitcoins

Um questionamento natural quando somos apresentados ao Bitcoin é
como eles são criados. Os Bitcoins não são criados à revelia de algum usuário
da rede ou "do nada". No trabalho que deu origem à essa moeda [14],
Satoshi Nakamoto deﬁniu bem as regras sob as quais haveria emissão dessa
criptomoeda. O protocolo escrito por ele estabalece toda a política monetária
de como serão gerados os Bitcoins e como serão as transações. Apesar de o
código ser aberto para melhorias, a lógica inicial permanece inalterada.

Para adquirir Bitcoins precisamos comprar de quem tem ou então mi-
nerar, que consiste em realizar os cálculos de hash necessários para satisfazer
a prova de trabalho e com isso, adicionar blocos de transações à blockchain.
Assim, todo bitcoin negociado hoje em dia veio de um minerador que foi re-
munerado pela rede bitcoin para "fazer rodar"a blockchain.

Satoshi Nakamoto estabeleceu que a cada 10 minutos um bloco seria
adicionado à blockchain, assim o protocolo bitcoin inclui algoritmos integrados
que regulam a diﬁculdade de mineração na rede.

A diﬁculdade do problema que os mineradores devem resolver é ajustada
dinamicamente para que, em média, algum deles encontre uma resposta
correta a cada 10 minutos, independentemente de quantos mineradores estão
trabalhando no problema a qualquer momento.

Outras criptomoedas trabalham com tempo entre blocos diferentes, como
é o caso do Ethereum com apenas 15 segundos entre os blocos. Esse parâmetro

Capítulo 2. Conceitos fundamentais

23

depende de diversos fatores desde a aplicação da criptomoeda até quantidade
de mineradores.

O protocolo bitcoin também possui uma programação que reduz pela
metade a taxa na qual novos bitcoins são criados (e a consequente remuneração
dos mineradores) a cada ciclo de 4 anos, essa redução recebe o nome de
"Halving", no primeiro ciclo 50 BTC eram emitidos por bloco minerado, isso
foi reduzido para 25 BTC/bloco em 2012 e novamente para 12,5 BTC/bloco
em 2016. Mais recentemente, na metade de 2020, se iniciou um novo ciclo com
6,25 BTC/bloco. Assim o número total de bitcoins que serão criados é ﬁxo
e de aproximadamente 21 milhões de moedas. A diminuição da recompensa
estende a vida do sistema ao impedir que todo o suprimento de moedas seja
emitido em um curto período de tempo, o que acabaria com a motivação para
a criação de novos blocos válidos [1].

Figura 2.3: Evolução da Quantidade de Bitcoin em circulação

O resultado dessa maneira de emitir a criptomoeda é que o número de
bitcoins em circulação segue a curva da Fig 2.3 que chega aproximadamente a
21 milhões até o ano 2140. Devido à diminuição da taxa de emissão do bitcoin,
a longo prazo, a moeda é deﬂacionária, pois o bitcoin não pode ser inﬂado
pela “impressão” de dinheiro novo além da taxa de emissão esperada, como
acontece com as moedas ﬁduciárias. Maiores detalhes sobre esse tema podem
ser encontrados em [16].

Mas o que acontece quando as 21 milhões de unidades do bitcoin forem
emitidas? A blockchain do Bitcoin continuará operando normalmente assim
como hoje e, já sem as recompensas por bloco, mineradores serão remunerados
pelas taxas de transação que serão pagas pelos usuários, entretanto isso levará
mais de um século para acontecer!

Capítulo 2. Conceitos fundamentais

24

2.3
Entendendo a diﬁculdade da mineração

Agora vamos fazer um pouco de conta, o objetivo aqui é mostrar
numericamente a diﬁculdade da mineração. Pegaremos por exemplo, o último
bloco adicionado à blockchain do bitcoin no momento em que esse texto é
escrito, o bloco é o de número 685448 e seu hash é escrito abaixo:

2c37de19d48c2d15df d528d95c33ebb0dd81f 8c6e30a8
0000000000000000000
}
{z
|
19zeros

1,1579.1077 = 1, 32.10−23;

- Como a função hash tem saída de 64 dígitos na base hexadecimal, o total de
saídas diferentes é 16 × 16 × . . . × 16 = 1664 ≈ 1, 1579.1077;
- Entretanto o número de saídas que satisfazem a condição de se iniciarem com
19 zeros é de 1664−19 ≈ 1, 532.1054;
- Assim, a probabilidade da saída da função hash apresentar 19 zeros seguidos
é dada por aproximadamente 1,532.1054
- Mas sabemos que as saídas são calculadas a partir da variação do parâmetro
nonce, que é um número de 32 bits, portanto, a quantidade máxima de
escolhas para esse parâmetro é de 232, assim a probabilidade de ao menos
uma dessas escolhas resultar em uma saída que se inicie com 19 zeros é dada
por: (232).(1, 32.10−23) = 5, 68.10−14 que ainda é um número muito pequeno.
Um parâmetro importante quando falamos de mineração é a capacidade
de processamento de saídas da função hash, que é medido em hash/segundos.
Atualmente existem hardwares especializados para mineração capazes de atin-
gir altas taxas de processamento. Para aumentar a probabilidade de conse-
guirem realizar a prova de trabalho, a maioria dos mineradores se unem em
chamadas mining pools, compartilhando suas máquinas para processamento
em paralelo, assim, quando conseguem adicionar um bloco à rede, a recom-
pensa é dividida entre todos os mineradores.

2.4
Transações de Bitcoin

Agora vamos entender um pouco como o sistema bitcoin estrutura suas
transações [18]. Suponha que eu tenha recebido bitcoins de 03 amigos da
seguinte maneira:
- Bruno -> Raoni: 0,15 BTC;
- Ana -> Raoni: 0,04 BTC;
- Sinesio -> Raoni: 0,003 BTC

Cada uma dessas operações gera uma UTXO (Unspent Transaction
Output) que pode ser traduzida como saída de transação não gasta. Assim

Capítulo 2. Conceitos fundamentais

25

eu tenho 03 UTXOs que posso utilizar para negociar como bem entender.
Caso queira adquirir um smartphone de 0,01 BTC, por exemplo, posso utilizar
a UTXO que recebi de Ana como a entrada gerando duas outras UTXOs: uma
de 0,01 para a loja de celulares e uma outra de 0,03 BTC de volta para mim,
como ilustrada na Fig 2.4 abaixo. Isso mesmo, a UTXO de origem tem que
ser "consumida"totalmente, caso o valor dela seja superior do que o necessário
na transação é gerada uma UTXO adicional com o "troco" de volta para o
detentor dos bitcoins.

Figura 2.4: Exemplo de transação e geração de UTXO de "troco"

Na realidade, essa transação após a sua geração vai para o mempool, que
é o repositório de todas as transações, a partir do qual se coletam as que irão
compor o próximo bloco da blockchain. Existe uma ordem de prioridade nessa
coleta e as transações que pagam melhores taxas para o minerador são as que
entram nos blocos primeiro, assim, na saída da transação acima haveria ainda
mais uma UTXO destinada à remuneração do minerador.

Continuando a explorar as negociações possíveis, uma outra situação é
quando preciso de mais bitcoins do que há em uma dada UTXO, por exemplo,
se meu objetivo fosse comprar um carro de luxo de 0,18 BTC. Nesse caso teria
que utilizar como entrada as UTXOs recebidas de Bruno e de mim mesmo
para obter o valor necessário, pois nenhuma sozinha atingira o saldo suﬁciente
para a transação ser válida, conforme ilustrado na Fig 2.5

Após a relização dessas duas compras, só me restaria a UTXO gerada
pelo depósito de Sinesio, no valor de 0,003 BTC, mas como a rede consegue
saber o saldo de cada usuário? A resposta está no aplicativo da Carteira (Wallet
em inglês) que todo usuário utiliza para saber o seu saldo, esse script percorre

Capítulo 2. Conceitos fundamentais

26

Figura 2.5: Exemplo de transação com consumo de mais de uma UTXO de
entrada

toda a blockchain totalizando todas as UTXOs feitas cujo endereço de saída
é o meu. Assim, na minha carteira estaria sendo exibida apenas a UTXO de
Sinesio para mim, pois o aplicativo identiﬁcaria que as UTXOs que recebi
anteriormente de Bruno, Ana e de mim mesmo, foram gastas.

A carteira Bitcoin é equivalente a uma carteira física, onde estão de
fato as suas moedas. Esse software de carteira cria uma chave pública e uma
chave privada para o usuário. A chave privada pode ser considerada uma senha
do banco que permite que você acesse seus bitcoins e autorize pagamentos,
devendo ser mantida em segredo. Enquanto que a chave pública pode ser
considerada um número de conta bancária.

A chave pública é derivada matematicamente da chave privada usando
a multiplicação de pontos em curvas elípticas. Entretanto as transações se
dão entre endereços, que são obtidos a partir de saídas de funções hash
criptográﬁcas aplicadas às chaves públicas dos usuários. Achou complicado?
Não se preocupe, pois vamos construir um caminho para entender essas etapas
nos Capítulos 3 e 4.

As propriedades matemáticas das curvas elípticas e das funções hash crip-
tográﬁcas signiﬁcam que é computacionalmente impossível descobrir-se a chave
privada de um usuário a partir de seu endereço bitcoin. Cada endereço tem seu
próprio saldo de bitcoins e as transações são essencialmente a transferência de
bitcoins entre esses endereços. Pronto, agora que temos uma noção básica do
ambiente em que as transações ocorrem, vamos explorar a matemática sobre
a qual são baseadas.

3
Fundamentos matemáticos das transações

Nesse capítulo serão apresentadas as bases matemáticas sobre as quais
a segurança das transações é construída, então serão expostas brevemente
a teoria de grupos, o problema do logaritmo discreto, as curvas elípticas e
como essas são utilizadas no contexto da aritmética modular para gerar chaves
públicas a partir de chaves privadas.

3.1
Grupos, Anéis e Corpos

Nessa seção vamos pensar a álgebra e a aritmética de uma maneira um
pouco diferente do que é abordado no Ensino Médio. Vamos abstrair para
um conjunto de números diferentes dos conjunto dos Inteiros ou Reais, por
exemplo e de operações diferentes de somar e multiplicar. Serão omitidas
algumas demonstrações e em vários pontos do texto o formalismo característico
da teoria de grupos não foi enfatizado em detrimento da didática, a motivação
é entender o que conjuntos com essas operações deﬁnidas têm em comum entre
si.

Vamos trabalhar com algumas deﬁnições para construirmos um entendi-
mento sobre como essas propriedades resultam em uma robusta infraestrutura
que esses conjuntos numéricos fornecem para aplicações criptográﬁcas. Os con-
ceitos apresentados são baseados nos livros [19; 20] e nos artigos [8; 6; 11].

3.1.1
Grupos

Um Grupo é um conjunto não vazio G associado a uma operação binária
G × G → G, denotada por ∗, tal que (G, ∗) satisfaça as seguintes propriedades:

1. Associatividade: sejam a, b e c ∈ G ⇒ a ∗ (b ∗ c) = (a ∗ b) ∗ c;

2. Existência de elemento neutro: ∃e ∈ G tal que ∀a ∈ G, tem-se a∗e = e∗a;

3. Existência de elemento inverso: ∀a ∈ G, ∃ um único elemento a−1 ∈ G
tal que a ∗ a−1 = a−1 ∗ a = e. Dizemos que a−1 é o inverso de a em (G, ∗)

Em particular, se o grupo (G, ∗) satisfaz à propriedade da comutatividade:

a, b ∈ G ⇒ a ∗ b = b ∗ a então o grupo é dito abeliano.

Capítulo 3. Fundamentos matemáticos das transações

28

Dessa deﬁnição pode-se concluir que o conjunto dos números reais R é
um grupo abeliano em relação à soma de números reais, de elemento neutro
e = 0 e dado a ∈ R então a−1 = −a é o seu inverso. Esse grupo é denotado
por (R, +)

Um grupo (G, ∗) é dito ﬁnito se o conjunto G for ﬁnito e, a quantidade
de elementos de G é chamada de ordem do grupo G, assim usaremos a seguinte
notação: ordem(G, ∗) = |G|. Caso G seja inﬁnito, sua ordem é inﬁnta.

3.1.2
Subgrupos

Seja G um grupo em relação à operação ∗ e com elemento neutro e. Um

subconjunto H ⊂ G é dito Subgrupo de G se (H, ∗) é grupo, ou seja:

1. e ∈ H;

2. h1 ∗ h2 ∈ H para todos h1 ∈ H e h2 ∈ H;

3. h−1 ∈ H para todo h ∈ H

A partir dessa deﬁnição pode-se veriﬁcar que (Z, +) e (Q, +) são subgru-

pos de (R, +)

Um subgrupo interessante, considerando a operação de produto, é o
subgrupo gerado pelas potências de um determinado elemento de um dado
grupo, por exemplo:

Seja (G, ∗) um grupo e a ∈ G. Considere o conjunto < a >= {an; n ∈ Z}

de todas as potências de a deﬁndo da seguinte maneira para cada n ∈ Z:

an =






a ∗ a ∗ . . . ∗ a
, se n > 0
|
}
{z
n vezes
e, se n = 0

a−1 ∗ a−1 ∗ . . . ∗ a−1
, se n < 0
}
{z
|
−n vezes

Pode-se provar que (< a >, ∗) é um subgrupo de (G, ∗), chamado de
subgrupo gerado por a. Em particular, se a operação (∗) fôr a de soma usual,
o leitor pode veriﬁcar que a notação se torna < a >= {na; n ∈ Z};

Por exemplo, considerando Q∗ o conjunto dos Racionais não nulos, temos

que o subgrupo de (Q∗, ×) gerado por 2 é

< 2 >= {2n; n ∈ Z} =

n
. . . , 1

8, 1

4, 1

2, 1, 2, 4, 8, . . .

o

Já o subgrupo de (Z, ×) gerado por 2 é

< 2 >= {2n; n ∈ Z} = {. . . , −6, −4, −2, 0, 2, 4, 6, . . .}

Capítulo 3. Fundamentos matemáticos das transações

29

Dizemos que um grupo é cíclico se , e somente se, ele pode ser gerado por
um de seus elementos, que seria o elemento gerador do grupo. A partir dessa
deﬁnição pode-se veriﬁcar que (Z, +) é um grupo cíclico inﬁnito, gerado por 1
ou por −1.

No campo dos grupos ﬁnitos, Lagrange conseguiu relacionar as ordens de
um subgrupo e de um grupo da seguinte maneira: Se G é um grupo ﬁnito e H
é subgrupo de G, então |H| divide |G|, ou seja, a ordem de H divide a ordem
de G.

3.1.3
Classes Residuais

Seja m ∈ Z tal que m > 1. Podemos repartir o conjunto dos números
inteiros Z em subconjuntos, onde cada um deles é formado por todos os
números inteiros que possuem o mesmo resto quando divididos por m.

Se a, b e m são inteiros (m > 1), dizemos que a é congruente a b módulo
m se a e b deixam o mesmo resto quando divididos por m. Denotamos como
a ≡ b mod m

Dessa maneira, teremos as seguinte partição de Z:

[0] = {x ∈ Z; x ≡ 0 mod m},
[1] = {x ∈ Z; x ≡ 1 mod m},
...
[m − 1] = {x ∈ Z; x ≡ m − 1 mod m}.

O último termo escrito foi [m−1] uma vez que [m] = [0], [m+1] = [1], . . .
Assim, o conjunto

[a] = {x ∈ Z; x ≡ a mod m}

é chamado de classe residual módulo m do elemento a de Z.
O conjunto de todas as classes residuais módulo m é representado por

Zm. Assim

Zm = {[0], [1], . . . , [m − 1]}

Como resultado direto, no caso de m = 2, qualquer inteiro par é um
representante da classe residual [0] e qualquer inteiro ímpar é representante da
classe residual [1].

As classes residuais gozam das seguintes propriedades:

1. [a] = [b] se e somente se a ≡ b mod m;

Capítulo 3. Fundamentos matemáticos das transações

30

2. Se [a] ∩ [b] 6= ∅ então [a] = [b];

3. S

a∈N[a] = Z.

Uma característica relevante das classes residuais resulta da propriedade
1 acima, a partir dela se transforma a congruência a ≡ b mod m na igualdade
[a] = [b]

Em Zm podemos deﬁnir as seguintes operações:

Adição em Zm: [a] ⊕m [b] = [a + b]
Multiplicação em Zm: [a] ⊗m [b] = [a.b]

Essas operações trazem consigo as seguintes propriedades:
Propriedades da Adição em Zm: para todos [a], [b], [c] ∈ Zm, temos:

– Associatividade: ([a] ⊕m [b]) ⊕m [c] = [a] ⊕m ([b] ⊕m [c]);

– Comutatividade: [a] ⊕m [b] = [b] ⊕m [a];

– Existência de elemento neutro da adição (zero): [a] ⊕m [0] = [a], ∀[a] ∈

Zm;

– Existência de inverso (simétrico): [a] ⊕m [−a] = 0.

Propriedades da Multiplicação em Zm: para todos [a], [b], [c] ∈ Zm, temos:

– Associatividade: ([a] ⊗m [b]) ⊗m [c] = [a] ⊗m ([b] ⊗m [c]);

– Comutatividade: [a] ⊗m [b] = [b] ⊗m [a];
– Existência de elemento neutro do produto (1): [a] ⊗m [1] = [a], ∀[a] ∈ Zm;

– Distributividade: [a] ⊗m ([b] ⊕m [c]) = [a] ⊗m [b] ⊕m [a] ⊗m [c].

Todo conjunto munido de uma operação de soma e de uma operação
de multiplicação que satisfaz a essas propriedades é chamado de anel. Em
particular, o fato de existir elemento neutro para multiplicação e de satisfazer
a propriedade de comutatividade qualiﬁca esse anel como anel comutativo
com unidade Assim, (Zm, ⊕m, ⊗m) é o anel das classes residuais módulo m
ou anel dos inteiros módulo m.

Um elemento [a] ∈ Zm será dito invertível se existir um único [b] ∈ Zm

tal que [a] ⊗m [b] = [1], assim [a]−1 = [b] e [b] é dito inverso de [a].

Como exemplo dessas operações, vamos calcular as tabelas da adição

(3.1) e da multiplicação (3.2) em Z3 = {[0], [1], [2]}

Utilizando a deﬁnição de elementos invertíveis, na Tabela 3.2 podemos
constatar que apenas o elemento nulo [0] não admite inverso, os demais [1] e
[2] são inversíveis.

Agora vamos estender nossa procura de elementos invertíveis às tabelas

de multiplicação em Z4 = {[0], [1], [2], [3]}

Capítulo 3. Fundamentos matemáticos das transações

31

⊕3
[0]
[1]
[2]

[0]
[0]
[1]
[2]

[1]
[1]
[2]
[0]

[2]
[2]
[0]
[1]

⊗3
[0]
[1]
[2]

[0]
[0]
[0]
[0]

[1]
[0]
[1]
[2]

[2]
[0]
[2]
[1]

Tabela 3.1: Adição em Z3

Tabela 3.2: Multiplicação em Z3

⊕4
[0]
[1]
[2]
[3]

[0]
[0]
[1]
[2]
[3]

[1]
[1]
[2]
[3]
[0]

[2]
[2]
[3]
[0]
[1]

[3]
[3]
[0]
[1]
[2]

⊗4
[0]
[1]
[2]
[3]

[0]
[0]
[0]
[0]
[0]

[1]
[0]
[1]
[2]
[3]

[2]
[0]
[2]
[0]
[2]

[3]
[0]
[3]
[2]
[1]

Tabela 3.3: Adição em Z4

Tabela 3.4: Multiplicação em Z4

Analisando a Tabela 3.4 conclui-se que apenas [1] e [3] são invertíveis.
Nota-se também que a multiplicação de elementos diferentes do elemento nulo
podem resultar em [0], como é o caso de [2] ⊗4 [2] = [0]. Esse fato implica na
seguinte deﬁnição[19]:

Um elemento a 6= 0 de um anel A é chamado de divisor de zero se
existir b 6= 0 em A tal que ab = 0. Pela deﬁnição, esses elementos jamais serão
invertíveis, pois, como exemplo, se a fosse invertível existiria a0 tal que aa0 = 1
o que conduz ao seguinte absurdo:

0 = a00 = a0(ab) = (a0a)b = 1b = b

Vamos construir também as tabelas de adição e multiplicação em Z5 =

{[0], [1], [2], [3], [4]} e tirar algumas conclusões.

⊕5
[0]
[1]
[2]
[3]
[4]

[0]
[0]
[1]
[2]
[3]
[4]

[1]
[1]
[2]
[3]
[4]
[0]

[2]
[2]
[3]
[4]
[0]
[1]

[3]
[3]
[4]
[0]
[1]
[2]

[4]
[4]
[0]
[1]
[2]
[3]

⊗5
[0]
[1]
[2]
[3]
[4]

[0]
[0]
[0]
[0]
[0]
[0]

[1]
[0]
[1]
[2]
[3]
[4]

[2]
[0]
[2]
[4]
[1]
[3]

[3]
[0]
[3]
[1]
[4]
[2]

[4]
[0]
[4]
[3]
[2]
[1]

Tabela 3.5: Adição em Z5

Tabela 3.6: Multiplicação em Z5

Observando as Tabelas 3.2 e 3.6 de Z3 e Z5, respectivamente se nota que
todo elemento distinto de [0] é invertível, entretanto isso não é regra para todos
Zm, vimos que em Z4 [2] é divisor de zero, logo não é invertível.

Um anel comutativo com unidade em que todo elemento não nulo possui
um inverso multiplicativo é chamado de corpo, assim Z3 e Z5 com as opera-
ções de adição e multiplicação deﬁnidas nesse texto são corpos, porém Z4 não é.

Capítulo 3. Fundamentos matemáticos das transações

32

Proposição 1: Um elemento [a] ∈ Zm é invertível se, e somente se,
mdc(a, m) = 1.

Demonstração: Se [a] é invertível, então existe [b] ∈ Zm tal que [1] =
[a] ⊗m [b] = [a.b]. Logo a.b ≡ 1 mod m , ou seja , existe um inteiro t tal que
a.b + t.m = 1 e, consequentemente mcd(a, m) = 1.

Reciprocamente, se mdc(a, m) = 1, existem inteiros b e t tais que
a.b + m.t = 1 e, consequentemente [1] = [a.b + m.t] = [a.b] ⊕m [m.t] =
[a] ⊗m [b] ⊕m [0] = [a] ⊗m [b]. Assim [a] é invertível.

Corolário: Zm é um corpo se, e somente se, m é primo.

Demonstração: Suponha por absurdo que Zm é um corpo e m não é primo,
então m = m1.m2 com 1 < m1 < m e 1 < m2 < m. Logo, [0] = [m] = [m1].[m2]
com [m1] 6= 0 e [m2] 6= 0 o que é absurdo, pois um dos fatores seria um divisor
de zero e portanto não invertível.

Reciprocamente, supondo m primo. Como mdc(i, m) = 1 para
i = 1, . . . , m − 1 pela proposição anterior, tem-se que [1], [2], . . . , [m − 1]
são invertíveis. Logo Zm é um corpo.

Analogamente ao que vimos nos grupos, a ordem de um corpo ﬁnito é
deﬁnida como sendo a quantidade de elementos do corpo, assim o corpo Zp
com p primo é dado por Zp = {[0], [1], . . . , [p − 1]} e tem ordem p.

A característica de um corpo K, denotada por car(K) consiste no menor
(aqui as notações de

inteiro positivo m tal que, m.1 = 1 + 1 + . . . + 1
}

= 0

|

soma e produto seriam aquelas deﬁnidas junto à deﬁnição do corpo K), caso
esse inteiro exista. Se tal m não existir, a característica do corpo é deﬁnida
como zero.

{z
mvezes

Como exemplo, em Z5:

[1] ⊕5 [1] ⊕5 [1] ⊕5 [1] ⊕5 [1] = [0]

Assim a característica de Z5 é 5, generalizando pode-se demonstrar que

a característica de Zp é p com p primo.

3.2
Problema do Logaritmo Discreto

Nessa seção vamos apresentar um problema que está associado direta-
mente à criptograﬁa, a diﬁculdade de resolvê-lo garante a segurança da troca
de chaves, mesmo se a mensagem for interceptada por um agente externo du-
rante a transmissão.

Capítulo 3. Fundamentos matemáticos das transações

33

O Problema do Logaritmo Discreto é deﬁndo por STINSON[21] da
seguinte maneira: Sejam (G; ×) um grupo multiplicativo, cíclico e ﬁnito e
α, β ∈ G. Pretendemos encontrar um inteiro x tal que

αx = β

O inteiro x denotado por logα β é chamado de logaritmo discreto de β.
Seja p primo e seja a ∈ Z com a 6≡ 0 mod p. Suponhamos que para cada inteiro
b, com b 6≡ 0 mod p, exista um inteiro x tal que

ax ≡ b mod p

O Problema do Logaritmo Discreto consiste em encontrar o inteiro x para
cada b. Como exemplo podemos fazer p = 11, a = 3 e variar b para encontrar
o inteiro x correspondente

31 ≡ 3 ≡ 3 mod 11 ⇒ b = 3 e x = 1
32 ≡ 9 ≡ 9 mod 11 ⇒ b = 9 e x = 2
33 ≡ 27 ≡ 5 mod 11 ⇒ b = 5 e x = 3
34 ≡ 81 ≡ 4 mod 11 ⇒ b = 4 e x = 4
35 ≡ 243 ≡ 1 mod 11 ⇒ b = 1 e x = 5
36 ≡ 729 ≡ 3 mod 11 ⇒ b = 3 e x = 6
37 ≡ 2187 ≡ 9 mod 11 ⇒ b = 9 e x = 7

Analisando os resultados, vê-se um comportamento cíclico, assim b ∈
{3, 9, 5, 4, 1}, escolhendo b = 9 a solução é da forma x = 2 + 5k com k ∈ Z,
entretanto se fazemos b = 7, por exemplo, consequentemente 3x ≡ 7 mod 11
não tem solução.

Para garantir que o problema do logaritmo discreto tem solução temos
que garantir que existe um inteiro x para cada valor de b. Para evitarmos
inﬁnitas soluções como no caso acima, vamos restringir x ao corpo Z∗
p, pois
b 6≡ 0 mod p. Em [3] é apresentada a seguinte proposição:

Proposição 2: Dado um inteiro ﬁxo a 6= 0, o Problema do Logaritmo Discreto
ax ≡ b mod p possui solução em Zp para qualquer b ∈ Zp, com b 6≡ 0 mod p,
se, e somente se, a é um gerador do grupo multiplicativo Z∗
p.

Demonstração: Considerando que ax ≡ b mod p possui solução em Zp
para todo b ∈Zp. Isto signiﬁca que a é um gerador de Z∗
p pois qualquer que seja
b ∈ Zp, existe um x ∈ Zp tal que ax ≡ b mod p. Reciprocamente, considerando
p, vemos que cada um dos elementos de Zp é congruente
que a é um gerador de Z∗
a alguma potência de a, assim, para todo b ∈ Zp existe x ∈ Zp tal que
ax ≡ b mod p, logo o problema do logaritmos discreto possui solução.

Capítulo 3. Fundamentos matemáticos das transações

34

Exemplo 1: Resolver o seguinte problema do logaritmo discreto 3x ≡ 5 mod 7

Vamos veriﬁcar se 3 é um gerador de Z7:

31 ≡ 3 ≡ 3 mod 7
32 ≡ 9 ≡ 2 mod 7
33 ≡ 27 ≡ 6 mod 7
34 ≡ 81 ≡ 4 mod 7
35 ≡ 243 ≡ 5 mod 7
36 ≡ 729 ≡ 1 mod 7
37 ≡ 2187 ≡ 3 mod 7

De fato, 3 é um gerador de Z7, logo pela proposição 2, o problema possui
solução e como 35 ≡ 5 mod 7, conclui-se que x = 5.

Analisando o problema do logaritmo discreto podemos ver que é relati-
vamente fácil , dado x ∈ N calcular o resto da divisão de ax por p, entretanto o
caminho inverso não é trivial, conhecendo esse resto, é difícil determinar qual
é o expoente x. Nesse exemplo foi possível construir uma tabela para veriﬁcar
os restos, mas nem sempre isso é possível. Em [21] é aﬁrmado que escolhendo
p com 150 algarismos ou mais, o problema passa a ser intratável até mesmo
por computador, pois requer um tempo de processamento muito extenso para
ser utilizado na prática.

3.3
Troca de Chaves - Sistema DHM

A essência de um método criptográﬁco reside em seu protocolo de comu-
nicação cifrada, como serão trocadas as informações entre dois correspondentes
de forma que um agente externo que intercepte a mensagem não a compreenda?
Esse problema foi solucionado pelo trio de americanos Withﬁeld Driﬃe, Martin
Hellman e Ralph Merkle da seguinte maneira [19]:

João e Maria querem trocar entre si uma chave secreta em um meio de

comunicação inseguro,

1. Inicialmente, Maria e João escolhem um primo p suﬁcientemente grande
e um inteiro a tal que 0 < a < p e a seja um gerador de Zp. Estes valores
p e a são divulgados ao público.

2. Maria escolhe um inteiro m, 1 (cid:54) m (cid:54) p − 2, que não será divulgado.

3. João escolhe um inteiro j, 1 (cid:54) j (cid:54) p − 2 que também não será divulgado.

4. Maria calcula um inteiro M ≡ am mod p e o envia para João.

5. João calcula um inteiro J ≡ aj mod p e o envia para Maria.

Capítulo 3. Fundamentos matemáticos das transações

35

6. Maria calcula uma chave Km ≡ J m mod p

Km ≡ (aj)m ≡ ajm mod p

7. João, procede de maneira análoga e calcula uma chave Kj ≡ M j mod p

Kj ≡ (am)j ≡ ajm mod p

8. Dessa maneira João e Maria compartilham secretamente a chave Km ≡

Kj ≡ K mod p

Diante desse protocolo de troca de chaves, caso ocorra uma interceptação
por um agente externo, entre os passos 4 e 5 o espião que já conhece a e p
saberá também qual é o valor de M , assim o problema recai em calcular m,
que nada mais é do que o logaritmo discreto de M ≡ am mod p. Por outro
lado, se a interceptação ocorre entre os passos 6 e 7, por exemplo, o intruso
conhecerá Km, J e p, caindo no problema do logaritmo discreto novamente
para calcular m. Assim a segurança do método de troca de chaves é garantida
pela diﬁculdade de resolver esse problema.

3.4
Curvas Elípticas e suas operações

Vamos deﬁnir curvas elípticas como um conjunto de pontos que satisfa-

zem a equação geral de Weierstrass[6]:

E : y2 + a1xy + a3y = x3 + a2x2 + a4x + a6

Os coeﬁcientes a1, a2, a3, a4 e a6 são escolhidos em um corpo K e assim
dizemos que a curva elíptica está deﬁnda sobre um corpo K. Esse corpo pode
ser qualquer corpo ﬁnito ou não como exempliﬁca SILVERMAN[20] Q, R, C ou
Zp. Nesse texto vamos trabalhar com essas curvas deﬁndas sobre R e sobre Zp
mas antes vamos simpliﬁcar um pouco a equação de Weierstrass. Observando
o lado esquerdo podemos tentar completar quadrados da seguinte maneira:

y2 + a1xy + a3y = (y + λ)2 − λ2

Dessa maneira anulamos o termo em y2 e λ2 e obtemos a igualdade:

2λy = a1xy + a3y

Capítulo 3. Fundamentos matemáticos das transações

36

Resolvendo essa equação para λ temos que λ = a1x+a3

, entretanto esta-
mos tratando de uma curva elíptica sobre um corpo arbitrário K que não pode
ter car(K) = 2, caso contrário o corpo não admitiria um inverso multiplica-
tivo para 2. Assim, considerando car(K) 6= 2 e fazendo uma substituição de
variáveis tal que u = (y + λ) temos a seguinte formulação para a equação de
Weierstrass:

2

u2 = ( a1x+a3

2

) = x3 + a2x2 + a4x + a6

u2 =

(cid:17)2

(cid:16) a1x
2

+

(cid:16) a3
2

(cid:17)2

+

(cid:17)2

(cid:16) a1a3x
2

+ x3 + a2x2 + a4x + a6

u2 = x3 +

(cid:16)
a2 + a2

1
4

(cid:17)

(cid:16)

x2 +

a4 + a1a3
2

(cid:17)

x + (a6 + a2
4 )

3

Fazendo a0
curva elíptica se torna:

2 =

(cid:16)

a2 + a2

1
4

(cid:17)

, a0

4 =

(cid:16)

a4 + a1a3
2

(cid:17)

e a0

6 = (a6 + a2

3

4 ) a equação da

u2 = x3 + a0

2x2 + a0

4x + a0
6

Observando dessa vez o lado direito da equação temos uma equação
cúbica, na qual podemos aplicar uma substituição de variáveis para obtermos a
sua forma reduzida, sem o termo quadrático, basta fazer v = x + t e substituir
na equação acima, vamos descobrir o valor desse t após igualarmos o coeﬁciente
do termo quadrático a zero:

u2 = (v − t)3 + a0

2(v − t)2 + a0

4(v − t) + a0
6

u2 = v3 − 3v2t + 3vt2 − t3 + a0

2v2 − 2a0

2vt + a0

2t2 + a0

4v − a0

4t + a0
6

u2 = v3 + (a0

2 − 3t)v2 + (3t2 − 2a0

2t + a0

4)v − t3 + a0

2t2 − a0

4t + a6

Igualando o coeﬁciente do termo quadrático a zero, obtemos:

−3t + a0

2 = 0

Se car(K) 6= 3 então existe inverso multiplicativo de 3, assim podemos

isolar t e obter t = a0

2

3 substituindo temos:

u2 = v3 +

(cid:18)

(cid:17)2

3

(cid:16) a0
2
3

− 2a0
2

(cid:17)

(cid:16) a0
2
3

+ a0
4

(cid:19)

v −

(cid:17)3

(cid:16) a0
2
3

+ a0
2

(cid:17)2

(cid:16) a0
2
3

− a0
4

(cid:17)

(cid:16) a0
2
3

+ a6

u2 = v3 +

(cid:16)

− (a0

2)2
3 + a0

4

(cid:17)

v +

(cid:16)

2a0
27 − a0
2)3
6 + 2(a0
a0
4
3

(cid:17)

Sem perda de generalidade, podemos substiuir as variáveis (v, u) por
para obtermos
(x, y) e chamar de A =
(ﬁnalmente!) a Equação de Weierstrass simpliﬁcada de uma curva elíptica sobre
um corpo K, tal que car(K) /∈ {2, 3}:

2a0
27 − a0
2)3
6 + 2(a0
a0
4
3

2)2
3 + a0

e B =

− (a0

(cid:17)

(cid:16)

(cid:16)

(cid:17)

4

Capítulo 3. Fundamentos matemáticos das transações

37

E : f (x, y) = y2 − x3 − Ax − B = 0

Um dos principais motivos para o emprego de curvas elípticas em cripto-
graﬁa é a estrutura de grupo da qual gozam, para mostrar isso vamos apresen-
tar argumentos geométricos e algébricos. A reta tangente à curva em um dado
ponto tem um papel fundamental na construção desse raciocínio, assim, não
nos interessam aqui os casos de curvas elípticas que apresentam singularida-
des (pontos da curva não-diferenciáveis). Exemplos de curvas singulares serão
apresentados mais adiante no texto.

Analiticamente, vamos investigar as condições necessárias para que a
curva não tenha singularidades. Assim, vamos calcular as condições para que
as derivadas parciais da Equação simpliﬁcada de Weierstrass sejam nulas no
ponto P = (xp, yp):

– fx(xp, yp) = 0 ⇒ −3x2

p − A = 0

– fy(xp, yp) = 0 ⇒ 2yp = 0

Aqui vemos que a condição de singularidade no ponto P nos conduz a

yp = 0 e xp = ±

q

− A

3 . Substituindo na equação de Weierstrass temos:

p − x3
y2

p − Axp − B = 0

xp(x2

p + A) + B = 0

(cid:16)

q

±

− A
3

(cid:17)

(cid:17) (cid:16) 2A
3

= −B

(cid:16)

− A
3

(cid:17) (cid:16) 4A2
9

(cid:17)

= B2

4A3 + 27B2 = 0

O termo ∆ = 4A3 + 27B2 é chamado de discriminante, dessa maneira,
se ∆ = 0 então a curva elíptica é singular e no escopo desse trabalho iremos
tratar apenas de curvas elípticas não singulares sobre corpos de características
diferentes de 2 e 3. Em resumo:

E = {(x, y) ∈ K|(y2 = x3 + Ax + B)} onde (car(K) /∈ {2, 3}) e (∆ 6= 0)

Capítulo 3. Fundamentos matemáticos das transações

38

3.4.1
Caracteríticas Geométricas

Vamos trabalhar com as curvas elípticas sobre R para visualizarmos
algumas caracterísitcas geométricas e depois estenderemos a análise para Zp.
Em R não é desaﬁador traçar o gráﬁco de uma curva elíptica. Uma propriedade
que salta aos olhos na equação da curva elíptica é a existência de um termo
quadrático na variável y , o que nos remete a uma simetria em relação
ao eixo das abscissas, de fato vamos investigar da seguinte maneira: Seja
P = (xp, yp) ∈ E(R) : y2 = x3 + Ax + B desejamos saber se P 0 = (xp, −yp)
também pertence à curva.

– P = (xp, yp) ∈ E ⇒ y2

p − Axp − B = 0
– Substituindo as coordenadas de P 0 em E: (−yp)2 − (xp)3 − A(xp) + B =
p − Axp − B = 0

p − Axp − B entretanto, pelo item anterior: y2

p − x3

p − x3

y2
p − x3
e, consequentemente, P 0 ∈ E.

– Como P 0 tem a mesma abscissa de P , mas ordenada simétrica, então

deﬁnimos que P 0 = −P

Para construir os gráﬁcos das curvas elípticas em R nesse trabalho foram
utilizados as ferramentas da calculadora gráﬁca on-line desmos, uma guia de
uso desse aplicativo para construir curvas elípticas pode ser encontrado em
[22]. Nos gráﬁcos das ﬁguras abaixo, podemos ver essa simetria em relação ao
eixo-x nos diferentes exemplos de curvas singulares e não-singulares:

3.1(a): y2 = x3

3.1(b): y2 = x3 − 3x + 2

Figura 3.1: Exemplo de Curvas Elípticas Singulares

Capítulo 3. Fundamentos matemáticos das transações

39

3.2(a): y2 = x3 − 4x + 5

3.2(b): y2 = x3 − 5x + 3

Figura 3.2: Exemplo de Curvas Elípticas Não Singulares

3.4.2
"Somando" Pontos geometricamente em uma curva elíptica

Dada uma curva elíptica E(R), é possível deﬁnir uma operação de "soma"
entre dois de seus pontos quaisquer. O interessante dessa operação de soma é
que obtemos um terceiro ponto que também pertence à curva e goza de várias
propriedades. Mais adiante vamos mostrar que a estrutura algébrica deﬁnida
por E(R) e essa operação de "soma" formam um Grupo Abeliano.

Essa maneira de operar os pontos na curva elíptica é chamada de Lei da
Corda-Tangente [23] e pode ser exempliﬁcada da seguinte maneira: Sejam P e
Q pontos distintos de uma curva elíptica E(R), traça-se a reta que passa por
P e Q (Figura 3.3), essa reta intersecta a curva novamente em outro ponto.

Vamos chamar esse outro ponto de R, como pode ser visto na Figura
3.4, se rebatermos R em relação ao eixo x, obtemos R0 = −R , aqui deﬁnimos
R0 = P ⊕ Q.

Agora suponha que os pontos P e Q sejam simétricos em relação ao
eixo x, tais que Q = −P , nesse caso a reta que passa por P e Q é vertical
e não encontraria outro ponto da curva, entretanto, analisando essa situação,
teríamos que P ⊕Q = P ⊕−P que nos induz a pensar em elemento neutro para
a soma de um ponto com o seu simétrico. Pois bem, vamos deﬁnir esse elemento
neutro como um ponto extra no inﬁnito O [20] que, portanto, fará parte de
toda curva elíptica e estará em toda linha vertical, no inﬁnito (Figura 3.5),
para entender completamente a origem desse raciocínio teríamos que recorrer
ao espaço projetivo, que foge ao escopo desse trabalho, o leitor pode buscar
mais detalhes em [23].

Com o advento do ponto no inﬁnito, deﬁnido como o elemento neutro,

Capítulo 3. Fundamentos matemáticos das transações

40

Figura 3.3: Reta que passa por P e Q em E(R)

Figura 3.4: Rebatimento de R em relação ao eixo x, obtendo R0 = P ⊕ Q

ou zero, podemos enunciar a lei da corda-tangente da seguinte maneira: três
pontos têm soma zero se, e somente se, eles estão alinhados. Da maneira como
deﬁnimos essa soma, observando a Figura 3.4, podemos ver que P ⊕ Q ⊕ R =
P ⊕ Q − (P ⊕ Q) = 0.

Uma situação da qual ainda não discorremos é quando se deseja adicionar
um ponto a ele mesmo, observe que nesse caso, dado um ponto P ﬁxo na
curva, à medida que um outro ponto Q da curva se aproxima de P até
serem coincidentes, podemos concluir que a reta que passa por P e Q vai

Capítulo 3. Fundamentos matemáticos das transações

41

Figura 3.5: Reta vertical e o ponto no inﬁnito O = P ⊕ −P

se aproximando da tangente ao gráﬁco no ponto P = Q a como mostra a
Figura 3.6:

Figura 3.6: Adicionando um ponto a ele mesmo, R0 = P ⊕ P = 2 ⊗ P

Assim, Podemos resumir as situações anteriores da seguinte maneira:

– Dados dois pontos distantes da curva, a reta que os une sempre intersecta

a curva em um terceiro ponto;

Capítulo 3. Fundamentos matemáticos das transações

42

– Se os dois pontos são coincidentes, então existe uma tangente à curva

nesse ponto que sempre intersecta a curva em um segundo ponto;

– Se os dois pontos são simétricos em relação ao eixo x, então é deﬁnido o
ponto no inﬁnito, fora do plano xy O ∈ E(R) tal que para todo P ∈ E(R)
temos que P ⊕ O = P

3.4.3
Álgebra da operação de soma de pontos em uma curva elíptica

Vamos trabalhar com um pouco de geometria analítica e álgebra para
concluir fórmulas gerais para operação de adição de pontos em uma curva
elíptica [20]. Podemos seguir um raciocínio semelhante ao de um algoritmo
para determinar essas coordenadas da seguinte maneira : sejam P1 e P2 pontos
da seguinte curva elíptica: E = {(x, y) ∈ R| : y2 = x3 + Ax + B} ∪ {O} com
4A3 + 27B2 = 0, então:

1. Se P1 = O, então P1 ⊕ P2 = P2

2. Se P2 = O, então P2 ⊕ P1 = P1

3. Se nenhum desses casos ocorrem, então podemos deﬁnir P1 = (x1, y1) e

P2 = (x2, y2)

4. Se x1 = x2 e y1 = −y2 então P1 ⊕ P2 = O

5. Caso contrário, seja y = λx + µ a reta que passa por P1 e P2 (P1 = P2
3) como P 0
3

ou P1 6= P2) e intersecta a curva em outro ponto P 0
está na reta e na curva elíptica, temos a igualdade:

3 = (x0

3, y0

(λx + µ)2 = x3 + Ax + B ⇒ x3 − λ2x2 + (A − 2λµ)x + B − µ2 = 0

Como x1, x2 e x0
temos:

3 são raízes dessa equação, pelas relações de Girard,

x1 + x2 + x0

3 = λ2 ⇒ x0

3 = λ2 − x2 − x1

Usando o fato de que P1 pertence à reta, temos que µ = y1 − λx1 e para
obter-se y0
3 também pertencer à reta e a expressão
obtida para µ anteriormente:

3 usamos o fato de P 0

3 = λx0
y0

3 + µ = λx0

3 + (y1 − λx1) = λ(x3 − x1) + y1

Capítulo 3. Fundamentos matemáticos das transações

43

Pela deﬁnição da operação de soma, sabemos que P1 ⊕ P2 = −P 0
3 = P3,
logo a expressão geral para as coordenadas da soma desses dois pontos
dados sobre a curva é dada por P3 = (x3, y3):

x3 = x0

3 = λ2 − x2 − x1

y3 = −y0

3 = −(λ(x3 − x1) + y1) = λ(x1 − x3) − y1

Se P1 6= P2 então λ é o coeﬁciente angular da reta que passa por P1 e P2
e pode ser calculado como λ = y2−y1
.
x2−x1

No caso de termos P1 = P2, λ representa o coeﬁciente angular da reta
tangente à curva no ponto P1 = P2, assim será obtido derivando a
equação da curva elíptica de maneira implícita y2 = x3 + Ax + B →
2yy0 = 3x2 + A, logo λ = 3x2
1+A
2y1

.

Vamos ver que, o conjunto de pontos da curva elíptica e a operação de
adição de pontos em uma curva elíptica forma um grupo abeliano (E(R), ⊕).
Pode-se mostrar, sem muita diﬁculdade, a menos da propriedade da associati-
vidade por requerer o uso das fórmulas explícitas, que as seguintes propriedades
são satisfeitas:

1. Associatividade: sejam P , Q e R ∈ E(R) ⇒ P ⊕ (Q ⊕ R) = (P ⊕ Q) ⊕ R;

2. Existência de elemento neutro: ∃O ∈ E(R) tal que ∀P ∈ E(R), tem-se

P ⊕ O = O ⊕ P ;

3. Existência de elemento inverso: ∀P ∈ E(R), ∃ um elemento P 0 ∈ E(R)
tal que P ⊕ P 0 = P 0 ⊕ P = O. Dizemos que P 0 é o inverso de P em
(E(R), ⊕)

4. comutatividade: P , Q ∈ E(R) ⇒ P ⊕ Q = Q ⊕ P

3.4.4
Curvas Elípticas sobre o Corpo dos Inteiros Módulo p (Zp)

Em termos de processamento computacional, trabalhar com pontos da
curva sobre o corpo dos Reais pode não ser tão rápido pela necessidade de
truncamanto da parte decimal dos números operados. Uma solução para se
trabalhar apenas com números inteiros é utilizar a aritmética dos inteiros
múdulo p, com p primo e p 6= {2, 3}, pois como vimos nas seções anteriores,
vamos trabalhar com característica diferente de 2 e 3.

Assim, as curvas elípticas sobre o corpo dos inteiros módulo p, podem
ser deﬁnidas de maneira análoga à que ﬁzemos para os Reais, com algumas
particularidades:

Capítulo 3. Fundamentos matemáticos das transações

44

1. A equação da curva se torna E(Zp) : y2 ≡ x3 + Ax + B mod p;

2. Os parâmetros A e B são escolhidos em Zp, entretanto vamos suprimir a
notação de classes por simpliﬁcação , mas sem perda de generalidade;

3. 4A3 + 27B2 6≡ 0 mod p

4. O eixo de simetria deixa de ser y = 0, como era em R e passa a ser
y = p/2, de fato se (x, y) é um ponto da curva em E(Zp), então (x, −y+p)
também pertence a curva, pois (−y + p)2 ≡ y2 − 2py + p2 ≡ y2 mod p

Exemplo 2: Determinar os pontos da curva E : y2 = x3 + 7 sobre Z11.
Para determinar esses pontos, devemos resolver a seguinte equação:
y2 ≡ x3 + 7 mod 11, podemos ir atribuindo valores às variáveis x e y e tabelar
os resultados do lado esquerdo e do lado direito da equação para comparar as
soluções por inspeção:

x
x3 + 7 mod 11

0
7

1
8

2
4

3
1

4
5

5
0

6
3

7
9

8
2

9
10

10
6

Tabela 3.7: Lado Direito da equação: atribuindo valores à variável x

y
y2 mod 11

0
0

1
1

2
4

3
9

4
5

5
3

6
3

7
5

8
9

9
4

10
1

Tabela 3.8: Lado Esquerdo da equação: atribuindo valores à variável y

Analisando os resultados vemos que quando x é nulo, o lado direito da
equação deixa resíduo 7 mod 11, entretanto, para nenhum valor de y, o lado
esquerdo deixa esse mesmo resíduo. Agora, veja que, por exemplo, quando
x = 2 e y = 2 os resíduos são iguais.

Assim (2, 2) pertence ao conjunto de pontos de nossa curva sobre Z11 e
lembrando que o ponto O está em todas as curvas elípticas que estudamos,
podemos concluir que o conjunto dos pontos da curva E : y2 = x3 + 7 sobre
Z11 são os 12 pontos dados abaixo:
E(Z11) : {O, (2, 2), (2, 9), (3, 1), (3, 10), (4, 4), (4, 7), (5, 0), (6, 5), (6, 6), (7, 3), (7, 8)}

Conhecendo os pontos da curva, podemos explorar as mesmas operações

deﬁnidas para as curvas elípticas em R, como a soma de pontos. Utilizaremos o

algoritmo da soma de pontos na curva elíptica já apresentado anteriormente para

gerar uma tábua de soma desses pontos.

– Se P1 = (2, 2) e P2 = O, então P1 ⊕ P2 = (2, 2).

– Se P1 = (2, 2) e P2 = (2, 9), então P1 ⊕ P2 = O. Nesse caso P1 e P2 são
simétricos em relação a um eixo horizontal pois a abscissa é a mesma e as

ordenadas são tais que 9 ≡ −2 mod 11.

Capítulo 3. Fundamentos matemáticos das transações

45

Figura 3.7: Pontos da curva elíptica E : y2 = x3 + 7 sobre Z11

– Se P1 = (2, 2) e P2 = (4, 7), então P1 6= P2 e para obter-se P1 ⊕ P2 = P3 se

faz:

λ ≡ y2−y1
x2−x1

mod p ⇔ λ ≡ (y2 − y1) (x2 − x1)−1 mod p

Substituindo as coordenadas de P1 e P2 temos:

λ ≡ (7 − 2) (4 − 2)−1 mod 11

Mas pela Tábua do produto em Z11, temos que 2−1 ≡ 6 mod 11, assim
λ ≡ 30 ≡ 8 mod 11

De posse de λ, P1 e P2, obtemos as coordenadas de P3 da seguinte maneira:

• x3 = λ2 − x2 − x1 ≡ 82 − 4 − 2 ≡ 3 mod 11
• y3 = λ(x1 − x3) − y1 ≡ 8(2 − 3) − 2 ≡ −10 ≡ 1 mod 11

Assim, temos que :

(2, 2) ⊕ (4, 7) = (3, 1)

– Se P1 = (2, 2) e P2 = (2, 2), então P1 = P2 e para obter-se P1 ⊕ P1 = 2P1 se

faz:

λ ≡ (3x2

1 + a)(2y1)−1 mod p

Substituindo as coordenadas de P1 e P2 temos:

λ ≡ (cid:0)3.22 + 0(cid:1) (2.2)−1 mod 11

Capítulo 3. Fundamentos matemáticos das transações

46

Mas pela Tábua do produto em Z11, temos que 4−1 ≡ 3 mod 11, assim
λ ≡ 36 ≡ 3 mod 11

Assim como ﬁzemos no caso anterior, obtemos as coordenadas de P3 da
seguinte maneira:

• x3 = λ2 − x2 − x1 ≡ 32 − 2 − 2 ≡ 5 mod 11
• y3 = λ(x1 − x3) − y1 ≡ 3(2 − 5) − 2 ≡ −11 ≡ 0 mod 11

Assim, temos que :

(2, 2) ⊕ (2, 2) = (5, 0)

Repetindo essas operações para a soma de todos os pontos , podemos obter a

tábua da soma dos pontos de E : y2 = x3 + 7 sobre Z11

Figura 3.8: Tábua das somas dos pontos de E : y2 = x3 + 7 sobre Z11

Observe que a diagonal da tábua foi destacada para representar as operações

que dobram os pontos, por exemplo (4, 7) ⊕ (4, 7) = (6, 5), isso facilita quando

calculamos multiplos de pontos, como o exemplo abaixo:

Exemplo 3: Seja P = (7, 3) pertencente à curva E : y2 = x3 + 7 sobre Z11 .

Calcule 9 ⊗ P .

Vemos que 9 ⊗ P pode ser escrito como 2 ⊗ (2 ⊗ (2 ⊗ (P ))) ⊕ P , essa maneira

de decomposição é conveniente, pois agiliza o processamento e diminui o custo

computacional. Em vez de realizarmos 8 operações de soma com P, fazemos 3

operações de dobra de P e uma operação de soma com P.

Assim, pela tábua acima, temos que:

2 ⊗ P = (7, 3) ⊕ (7, 3) = (6, 5)

4 ⊗ P = 2 ⊗ (2 ⊗ P ) = (6, 5) ⊕ (6, 5) = (3, 1)

8 ⊗ P = 2 ⊗ (2 ⊗ (2 ⊗ P ) = (3, 1) ⊕ (3, 1) = (3, 10)

9 ⊗ P = 8 ⊗ P ⊕ P = (3, 10) ⊕ (7, 3) = (2, 2)

Capítulo 3. Fundamentos matemáticos das transações

47

3.5
Parâmetros das Curvas Elípticas

3.5.1
Ordem de uma Curva elíptica

A ordem de uma curva elíptica sobre um corpo ﬁnito de p elementos é a

quantidade de pontos que essa curva possui (N ). O Teorema de Hasse [20] estabelece

o seguinte:

p + 1 − 2p (cid:54) N (cid:54) p + 1 − 2p

Tomando o exemplo de E : y2 = x3 + 7 sobre Z11 temos que p = 11, portanto
6 (cid:54) N (cid:54) 18. Como já sabemos todos os pontos de E, determinamos N = 12. Existe
um algoritmo (algoritmos de schoof) de ordem polinomial [6] para determinar a

ordem de uma curva elíptica, o leitor pode obter mais detalhes em [24].

3.5.2
Subgrupos cíclicos

Seja P = (2, 9) pertencente à curva E : y2 = x3 + 7 sobre Z11, podemos
utilizar a tábua construida anteriormente (Figura 3.8) para observar os múltiplos

de P:

0 ⊗ P = O

1 ⊗ P = (2, 9)

2 ⊗ P = (2, 9) ⊕ (2, 9) = (5, 0)

3 ⊗ P = (2, 9) ⊕ (5, 0) = (2, 2)

4 ⊗ P = (2, 9) ⊕ (2, 2) = O

5 ⊗ P = (2, 9) ⊕ O = (2, 9)

6 ⊗ P = (2, 9) ⊕ (2, 9) = (5, 0)

...

Podemos veriﬁcar que os múltiplos de P são apenas 4 (O, (2, 9), (5, 0), (2, 2)) e eles

se repetem ciclicamente, assim podemos dizer que esse conjunto dos múltiplos de P
é um subgrupo cíclico de E : y2 = x3 + 7 sobre Z11 e o Ponto P é chamado Ponto
Gerador desse subgrupo. Os subgrupos cíclicos são a base da aplicação das curvas

elípticas na criptograﬁa [11].

Capítulo 3. Fundamentos matemáticos das transações

48

3.5.3
Ordem e Cofator de um Subgrupo

Deﬁnimos a ordem como a quantidade de pontos de um grupo, mas para um

subgrupo cíclico a ordem se torna o menor inteiro positivo (n) tal que n ⊗ P = O.

No exemplo anterior, de fato, o subgrupo contém 4 pontos (n = 4) e 4 ⊗ P = O.

O cofator de um subgrupo (h), pode ser deﬁnido como a razão entre a ordem

da curva elíptica sobre o corpo ﬁnito e a ordem do subgrupo: h = N/n. No nosso

exemplo, N = 12 e n = 4, logo h = 3;

3.6
Problema do logaritmo discreto elíptico

Baseado no problema do logaritmo discreto é possível construir analogias
aplicáveis à operação de soma de dois pontos de uma curva elíptica sobre Zp, pois
essa operação forma um grupo abeliano e os resultados estudados anteriormente são
válidos. Nesse caso, o grupo multiplicativo é substituído por E(Zp) e analogamente
ao que vimos na proposição 2, estamos considerando um grupo ﬁnito e cíclico e

precisamos de um elemento que seja gerador do grupo. Assim, seja P um ponto de
E(Zp) tal que P seja um gerador de E(Zp). Deste modo, para cada Q ∈ E(Zp) existe
um inteiro n ∈ Zp tal que:

Q = n ⊗ P

Podemos dizer que n é o Logaritmo Discreto Elíptico de Q em relação a P . O

Problema do Logaritmo Discreto Elíptico consiste em determinar n para cada ponto

Q. Entretanto, vimos anteriormente que a operação de soma entre pontos de uma

curva elíptica é mais complexa que a operação de multiplicação, o que torna esse

problema mais difícil de ser resolvido do que o problema do logaritmo discreto em
Zp.

3.7
Troca de Chaves - sistema DHM aplicado às curvas elípticas sobre Zp

Vários métodos criptográﬁcos se baseiam na aritmética das curvas elípticas

para serem implementados. Todos eles são regidos por um protocolo de troca

de chaves, no qual cada agente da comunicação possui uma chave secreta e são

conhecidas a curva elíptica sobre a qual serão feitas as operações e um ponto público

dessa curva. Voltemos à situação hipotética de que João e Maria desejarem trocar

entre si uma chave secreta em um meio de comunicação inseguro:

1. João e Maria escolhem um primo p, uma curva E(Zp) : y2 = x3 + Ax + B,
com 4A3 + 27B2 6= 0, e um ponto P ∈ E(Zp) gerador do grupo. Esses dados
serão públicos

2. Maria escolhe uma chave secreta nm ∈ Zp, calcula uma chave pública

Qm = nm ⊗ P e envia Qm para João.

Capítulo 3. Fundamentos matemáticos das transações

49

3. João escolhe uma chave secreta nj ∈ Zp, calcula uma chave pública Qj =

nj ⊗ P e envia Qj para Maria.

4. Maria calcula Rm = nm ⊗ Qj:

Rm = nm ⊗ Qj = nm ⊗ (nj ⊗ P ) = (nm ⊗ nj) ⊗ P

5. João calcula Rj = nj ⊗ Qm:

Rj = nj ⊗ Qm = nj ⊗ (nm ⊗ P ) = (nm ⊗ nj) ⊗ P

6. Dessa maneira João e Maria compartilham a chave Rm = Rj = R

Caso um agente externo intercepte a comunicação terá descoberto as chaves
públicas Qm, Qj mas teria que resolver o problema do logaritmo discreto elíptico
para descobrir as chaves secretas de João e Maria. Com essa chave secreta trocada

João e Maria podem se comunicar utlizando um criptosistema qualquer, como o

ElGamal, por exemplo.

Vale ressaltar que estamos falando aqui de primos muito grandes, a título
de comparação, se p é da ordem ≈2160, em termos computacionais o problema do
logaritmo discreto elíptico, apresenta uma diﬁculdade equivalente ao problema do
logaritmo discreto em um grupo multiplicativo de ordem ≈21000 [6]. Uma implicação
disso é que a criptograﬁa baseada em curvas elípticas requer chaves menores, isso

explica o motivo dos esquemas de assinatura digital empregados no Bitcoin e em

outras criptomoedas utilizarem essa criptograﬁa.

4
Criptograﬁa aplicada no protocolo Bitcoin

Nesse capítulo vamos apresentar a curva elíptica utilizada para geração de

chaves no protocolo Bitcoin, explorar o conceito de assinatura digital com o algoritmo

ECDSA e as etapas que compõem uma transação.

4.1
Parâmetros das Curvas Elípticas sobre um corpo ﬁnito (Zp)

Para padronizar a aplicação das curvas elípticas em criptograﬁa se convencio-

nou, por meio de normas especíﬁcas desenvolvidas por associações de empresas da

área [25], parametriza-las pela seguinte sêxtupla:

T = (p, a, b, G, n, h)

onde :

p = Dimensão do corpo ﬁnito;
a e b ∈ Zp são os coeﬁcientes de E(Zp) : y2 ≡ x3 + ax + b mod p;
G = Ponto gerador ∈ Zp de coordenadas (xG, yG);
n = ordem do subgrupo gerado por G (nessa convenção n deve ser primo)

h = cofator do subgrupo gerado por G

4.1.1
A Curva elíptica do Protocolo Bitcoin

O SCGE (Standards for Eﬃcient Cryptography Group) é um consórcio inter-

nacional de empresas que concentra essa padronização das curvas elípticas para ﬁns

de criptograﬁa e emite documentos com diretrizes e parâmetros recomendados para

cada curva a ﬁm de aumentar a eﬁciência e interoperabilidade das aplicações [26].

No documento [27] é deﬁnida a curva secp256k1 , que é a curva sobre a qual ocorre a

criptograﬁa do protocolo Bitcoin, nessa nomenclatura há informações importantes,

como sinaliza SEGUIAS, 2020 [6]:

• "sec": abreviação de "Standards for Eﬃcient Cryptography" indica que a curva

pertence ao rol de curvas estudadas e padronizadas pelo SECG;

• "p": referência ao fato de a curva ter sido deﬁnida sobre um corpo ﬁnito de ordem

p, com p primo;

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

51

• "256": indica que os pontos da curva têm abscissas e ordenadas de 256 bits;

• "k": Estabelece que essa curva é da família das curvas de Koblitz, que admitem

implementações mais eﬁcientes no cálculo da soma dos pontos, maiores detalhes po-

dem ser encontrados em GALLANT et al, 2001 [28].

• "1": Indica que é a primeira curva do seu tipo que satisfaz os atributos acima;

Para essa curva, a sêxtupla de parâmetros associados em base hexadecimal

são os seguintes [27]:

• Parâmetro p:

p = FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF
FFFFFFFE FFFFFC2F(16)
Cada dígito representa um número de 4 bits, como são 64 dígitos o parâmetro p

é representado por um número de 256 bits, que convertido para a base decimal
= 2256 − 232 − 29 − 28 − 27 − 26 − 24 − 1 =
= 1157920892373161954235709850086879078532699846656405640394575840079088

34671663;

• Parâmetro a:

a = 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000(16) = 0;

• Parâmetro b:

b = 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000007(16)= 7;

Como p /∈ {2, 3} e 4a3 + 27b2 6= 0 mod p; essa curva é não-singular e pode ser

escrita na forma de Weierstrass:

E(Zp) =

n

(x, y) ∈ Z2

p | y2 ≡ x3 + 7 mod p

o

∪ {O}

Em particular, quando p = 11 encontra-se exatamente a curva que foi traba-

lhada em exemplos no capítulo 3, para a qual foram calculados todos os pontos como

mostramos na (Figura 3.7). Entrentanto, quando se trabalha com implementações

comerciais, como as propostas pelo SECG, os valores de p tornam impossível se

conhecer a tábua de soma dos pontos, da mesma maneira que foi feito na (Figura 3.8).

• Parâmetro G:

G = 04 79BE667E F9DCBBAC 55A06295 CE870B07 029BFCDB 2DCE28D9

59F2815B 16F81798 483ADA77 26A3C465 5DA4FBFC 0E1108A8 FD17B448

A6855419 9C47D08F FB10D4B8.

Como vimos, G é um ponto da curva, o ponto gerador, a partir do qual serão

obtidas as chaves públicas e suas coordenadas são obtidas da seguinte maneira

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

52

convencionada em [27]: G = 04(16) || (xG)(16) || (yG)(16).
Assim, G = (xG, yG), com
xG = 5066263022277343669578718895168534326250603453777594175500187360
389116729240;
yG = 3267051002075881697808308513050704318447127338065924327593890433
5757337482424;

• Parâmetro n:

n = FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE BAAEDCE6 AF48A03B
BFD25E8C D0364141(16)
=

1157920892373161954235709850086879078528375642790749043826051631415

18161494337;

• Parâmetro h:

Sendo n a ordem do subgrupo gerado por G, sabe-se que n deve ser divisor da ordem

da curva elíptica (N) por conta do Teorema de Lagrange que vimos no Capítulo 3,

o que de fato acontece quando se deﬁne o cofator h = N/n como a unidade: h =
01(16) = 1;

Isso signiﬁca que a ordem do subgrupo gerado por G é igual a ordem da

curva, isto é, n = N , como n é primo, N também é primo, assim os pontos da

curva secp256k1 formam um grupo cíclico e qualquer um dos seus elementos é um

potencial ponto gerador.

4.2
Mecanismo de geração de chaves públicas na Curva Elíptica

A curva secp256k1 tem um papel muito importante no protocolo Bitcoin: é

a partir dela que obtemos uma chave pública a partir de uma chave privada, a

chave privada, por sua vez, é dada por um inteiro qualquer escolhido no intervalo

[1, (n − 1)].

Como curiosidade, vale notar que n, na base decimal, é um número da ordem de
grandeza de 1077, o que comparando com um universo "imaginável" de quantidades,
teria a mesma ordem de grandeza que o produto da quantidade aproximada de

átomos em um corpo humano [29] pela quantidade de átomos aproximada do planeta

terra [30], como d é um inteiro no intervalo [1, n − 1] pode-se concluir que tentar

determinar a chave privada por tentativa e erro seria inviável computacionalmente.

Utilizando um supercomputador para tentar checar todas as possibilidades desse

valor, se estima que seriam necessários centenas de anos para processar todas as

possibilidades [31].

De posse de uma chave privada d do ponto gerador G, deﬁnido anteriormente
como parâmetro, podemos obter um chave pública H = (xH , yH ) fazendo a seguinte

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

53

operação sobre a curva secp256k1 :

H = d ⊗ G = G ⊕ G ⊕ G... ⊕ G
}

|

{z
d parcelas

Como vimos no ﬁnal do Capitulo 3, fazer a operação no sentido de gerar a

chave pública é relativamente simples utlizando as operações de adição e "dobra" dos

pontos já deﬁnidas, entretanto, no sentido inverso, há que se resolver o problema do

logaritmo discreto elíptico que, até o momento se mostra um problema intratável

computacionalmente, pois requer um tempo de processamento muito extenso para

ser utilizado na prática.

Assim, toda a segurança do protocolo Bitcoin reside na diﬁculdade de se obter

a chave secreta dada a chave pública e a curva sobre a qual a operação é feita.

4.3
Assinando uma mensagem com ECDSA

Para que uma transação seja realizada na blockchain do protocolo Bitcoin é

necessário garantir que o usuário que detém a chave secreta, de fato deu origem

à transação. Imagine que Maria escolheu sua chave privada d e obteve sua chave

pública H = d ⊗ G, agora Maria gostaria de realizar uma transação de compra ou

venda que pode ser interpretada como uma mensagem m. Essa mensagem precisa

ser assinada por Maria para ser validada. A rede Bitcoin utiliza o algoritmo ECDSA

(Elliptic Curve Digital Signature Algorithm) como meio dos usuários assinarem suas

mensagens.

Primeiramente Maria, para aumentar a segurança, decide criptografar sua

mensagem e aplica uma função Hash criptográﬁca à mensagem que escreveu (no

caso do protocolo bitcoin utiliza-se a função SHA-256), obtendo um número na base
hexadecimal Hash(m)(16) e convertendo para a base decimal obtemos o inteiro z,
a partir de então serão seguidos os passos a seguir [10] para se obter a assinatura

digital da mensagem, que denotaremos como σ(m):

1. Escolhe-se aleatoriamente um parâmetro k ∈ Z∗

n, com n primo. É importante
que esse parâmetro seja diferente para cada assinatura realizada, pois repeti-lo

gera vulnerabilidades na criptograﬁa [7].

2. Calcula-se o ponto P ∈ secp256k1:

P = (xP , yP ) = k ⊗ G = G ⊕ G ⊕ . . . ⊕ G (k vezes)

3. Deﬁne-se r ≡ xP mod n. Se r = 0, então deve-se retornar ao passo 1 e escolher

outro valor de k.

4. Deﬁne-se s ≡ k−1(z + rd) mod n. onde k−1 é o inverso multiplicativo de
k mod n. Se s = 0 então deve-se retornar ao passo 1 e escolher outro valor

de k. Note que para garantir que qualquer k escolhido admita um inverso

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

54

multiplicativo, temos que ter n primo, caso contrário o algoritmo ECDSA não

poderá ser implementado.

Assim, através da aplicação do algoritmo ECDSA obtem-se o par ordenado

σ(m) = (r, s) que representa a assinatura digital, esse par ordenado é intrínseco

à mensagem que foi transmitida, quer dizer que se algum agente tentar mudar o

conteúdo da mensagem, desviando a transação por exemplo, a assinatura não é mais

validada, pois alteraria o seu hash e o valor de s seria alterado.

4.4
Veriﬁcando uma Assinatura Digital

Como garantir que uma determinada pessoa, de fato executou uma dada

transação? Faz-se necessária a existência de uma função de veriﬁcação, mas como

veriﬁcar a veracidade sem conhecer a chave secreta dessa pessoa? A resposta está

na chave pública, se a conhecermos, e tivermos acesso à mensagem assinada seremos

capazes de veriﬁcar se, de fato, a pessoa executou a operação ou se trata-se de uma

fraude. Suponha que João quer veriﬁcar se a assinatura digital pertence à Maria,

para tanto, ele vai precisar da mensagem m, da assintura digital σ(m) = (r, s) e da

chave pública de Maria H.

A primeira ação de João é realizar algumas checagens básicas, como conferir
n se qualquer uma dessas

se H é um ponto de secp256k1, se H 6= O e se r, s ∈ Z∗
condições não for satisfeita a assinatura não é válida. Caso contrário:

1. Deﬁnem-se u ≡ z.s−1 mod n e v ≡ r.s−1 mod n, nos quais s−1 denota o inverso

multiplicativo de s mod n

2. Deﬁne-se W = (xw, yw) = (u ⊗ G) ⊕ (v ⊗ H)

3. Se r ≡ xw mod n então a assinatura é verdadeira, caso contrário, a assinatura

é falsa.

Agora vamos mostrar porque essa veriﬁcação funciona, ou seja, toda assinatura

gerada como mostrado apresenta uma saída verdadeira quando veriﬁcada pelo

procedimento acima. Note que deﬁnimos s:

s ≡ k−1.(z + r.d) mod n
k.s ≡ (z + r.d) mod n
k ≡ s−1.(z + r.d) mod n

Utilizando o algoritmo de veriﬁcação:

W = (u ⊗ G) ⊕ (v ⊗ H)

W = (u ⊗ G) ⊕ (v.d ⊗ G)
W = (z.s−1 ⊗ G) ⊕ (r.s−1.d ⊗ G)
W = s−1.(z + r.d) ⊗ G

Mas H = d ⊗ G

Substituindo u e v

fatorando

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

55

W = k ⊗ G = P
Da igualdade acima pode-se concluir que r ≡ xp ≡ xw mod n

Pudemos realizar tais operações por conta das propriedades que discutimos

no Capítulo 3. Esse algoritmo de assinatura digital é o "coração" da segurança

das transações de Bitcoin. A partir dele se confere autenticidade às operações e

se constrói a conﬁança dos usuários na rede Bitcoin.

4.5
Transações de Bitcoin

Uma transação de Bitcoin consiste basicamente na transferência do controle

de gastos de um detentor de BTC para outro, esse controle refere-se ao desbloqueio

de um determinado valor em BTC. A menor unidade transacionável do BTC é
denominada Satoshi e representa 10−8 de uma unidade de BTC. Assim, uma
transação de 100 Satoshis de Maria para João, transfere o controle de gastos de
10−6 BTC de Maria para João, que agora pode gastá-los como bem entender.

Para o propósito desse trabalho, é suﬁciente destacar que uma transação

de Bitcoin é uma estrutura de dados que abrange quatro categorias principais de

informações [7]:

1. Fonte(s) dos fundos a serem transferidos, também conhecida como saída(s) de

transação não gasta ou UTXO (Unspent Transaction Outputs). Cada UTXO

contém uma quantidade especíﬁca de Satoshis, cujo controle foi transferido

de um detentor anterior para aquele que iniciou a transação Bitcoin atual.

UTXOs tornam-se entradas para a transação Bitcoin atual.

2. Destino(s) dos fundos, ou seja, o(s) destinatário(s) pretendido(s), que terão

controle sobre gastos dessas UTXOs.

3. Quantia exata a ser enviada para cada endereço de destino.

4. Informações contendo a(s) assinatura(s) ECDSA dos UTXO(s) corresponden-

tes(s) para veriﬁcar a autenticidade do(s) remetente(s) de cada UTXO.

Cada transação de Bitcoin que ocorre na blockchain pode ser vista por todos

os nós da rede, há vários sites que se dedicam a publicação desses dados como o

blockchain.info que exibe, dentre várias informações especíﬁcas para cada transação

dados sobre o emissor e receptor, quantidade de bitcoins, horário e parâmetros que

permitem a qualquer nó da rede veriﬁcar se a transação é verdadeira.

De posse da chave privada e das informações contidas na transação é gerada

uma assinatura digital que garante que o detentor dos Bitcoins unicidade e garantia

de autencidade, pois só com sua chave privada e seus dados de transação se obtem

essa assinatura, como vimos na seção anterior. Primeiro é aplicada a função Hash

criptográﬁca SHA-256 à mensagem e depois são feitas as operações para se obter

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

56

o par ordenado que representa a assinatura digital σ(r, s). Ilustramos no esquema

abaixo da Fig 4.1 adaptada de [32] :

Figura 4.1: Esquema das etapas do processo de assinatura digital

Em caso de qualquer pessoa tentar alterar a mensagem, mudando, por exemplo

o destinatário dos fundos, a assinatura se alteraria e a função de veriﬁcação não

vai reconhecer essa assinatura como verdadeira. O que chamamos aqui de função

de veriﬁcação nada mais é do que uma implementação do ECDSA, que utiliza a

chave pública do emissor para, a partir da assinatura, obter o hash criprográﬁco da

mensagem e comparar com o Hash criptográﬁco dos dados da mensagem, se os hash

forem iguais então a assinatura é verdadeira, caso contrário é falsa. como ilustrado

na Fig 4.2 adatpada de [32].

Figura 4.2: Etapas do processo de autenticação da assinatura digital

Utilizaremos o esquema da Fig 4.3 adaptada de [18] para discutirmos os

elementos de segurança nas transações. Basicamente, como já vimos, tudo se inicia

com a escolha de uma chave privada, que pode ser comparada à sua senha do

banco. A partir desssa, obtemos a chave pública (através de operações na curva

elíptica secp256k1), que pode ser comparado ao seu CPF, por exemplo, pois é uma

informação que te identiﬁca, mas não permite acesso aos seus fundos. Entretanto,

na rede Bitcoin as transações não se dão entre chaves públicas, mas sim entre

endereços (address), que podem ser comparados à um endereço de email, pois ainda

te identiﬁca, mas não permite uma consulta a nenhum dado sobre as suas dívidas,

como o CPF possibilita. Vamos ver adiante como um endereço é formado a partir

de uma chave pública.

Em resumo, um endereço Bitcoin é uma sequência de caracteres alfanuméricos

usada para representar um destino de fundos. É importante destacar que um

endereço não é uma carteira e não contém saldos de fundos, sempre que um

determinado endereço é usado para gastar alguns de seus Bitcoins, todo o seu

conteúdo é debitado: parte vai para o destinatário, parte é paga como uma taxa

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

57

Figura 4.3: Esquema das operações que garantem segurança às Transações

ao minerador, e o saldo restante (se houver) é armazenado em um novo endereço

conhecido como endereço de alteração. Qualquer pessoa ou entidade pode ter quantos

endereços Bitcoin desejar. Na verdade, é recomendável criar um novo endereço

a cada nova transação (uma prática que as carteiras modernas implementam

automaticamente).

Os endereços Bitcoin são de dois tipos: os que iniciam com o dígito "1" e os

que se iniciam com o dígito "3", correspondentes aos dois casos a seguir[9]:

1. O destino dos fundos é um único destinatário que tem controle total sobre

os fundos e, por isso, pode gastá-los como quiser.

2. O destino dos fundos é uma estrutura mais complexa que especiﬁca certas

regras que precisam ser cumpridas para que os fundos sejam gastos ou desbloqueados.

Nesse texto vamos nos ater aos endereços do primeiro tipo, conhecidos como

P2PKH (Pay to Public Key Hash) . A justiﬁcativa para o nome vem do fato de que

tudo o que é necessário para criar esse endereço é um hash da chave pública para

gerarmos o endereço Bitcoin associado. Utilizamos duas funções hash unilaterais

(não admitem inversa), a saber, SHA-256 e RIPEMD-160 (Função hash criptográﬁca

RIPE Message Digest). Enquanto a saída da função SHA-256 é um número de 256

bits (ou seja, 32 bytes), a RIPEMD-160 produz números de 160 bits (ou seja, 20

bytes). Em resumo, o procedimento é o seguinte:

1. Dada uma chave pública, aplica-se SHA-256;

2. Aplica-se RIPEMD-160 na saida da função SHA-256 do item anterior;

3. Após algumas operações aritméticas e aplicações sucessivas de SHA-256 (de-

talhadas no site abaixo) codiﬁca-se o resultado para a base 58, obtendo-se o

endereço Bitcoin. Essa base é composta pelos 58 elementos: 123456789ABC-

DEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz, note que são

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

58

exluídos o algarismo zero, as letras "O"e "I" maiúsculas e letra "i" minúscula

para evitar confusões e erros de digitações.

Em http://gobittest.appspot.com/Address, podem ser veriﬁcados os passos

detalhados para geração de um endereço. Um exemplo de endereço segue abaixo:

16UwLL9Risc3QfPqBUvKofHmBQ7wMtjvM

Podemos entender o uso de endereços nas transações como uma camada

adicional de segurança, que diﬁculta ainda mais o acesso à chave pública e, como a

função hash criptográﬁca RIPEMD-160 retorna números de 20 bytes, os endereços

são computados mais rapidamente na rede.

Agora suponha que João gostaria de pagar 100 satoshis para Maria, primeiro

Maria deve fornecer o seu endereço Bitcoin. Então João precisa criar uma transação

com destino a esse endereço e que deve utilizar como entrada os recursos de João

obtidos em uma transação anterior na qual recebeu Bitcoins, ele pode ter comprado

numa exchange, minerado ou recebido de um amigo, por exemplo.

Figura 4.4: Esquema transação de João para Maria

Nesse esquema adaptado de [32] vemos que a saída da transação de João é

composta por:

– Quantidade de BTC em satoshis a serem enviados;

– PubKey Script: é uma rotina que ao ser implementada vai bloquear a quanti-

dade de satoshis (100 nesse caso) no endereço de Maria;

– Identiﬁcador de saída que ajuda a rede a rastrear rapidamente o registro dessa

transação quando Maria precisar gastar esses fundos.

Com isso, Maria agora é a única pessoa que detem a chave secreta capaz de resgatar

os satoshis recebidos nessa transação.

Assim que esta transação for validada e minerada pelos mineradores. A carteira

de Maria irá computar que ela possui 100 Satoshis. Na realidade, a carteira tem

um algoritmo que percorre as transações da blockchain e apenas rastreia as saídas

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

59

que correspondem ao endereço de Maria. Essas saídas são chamadas de Unspent

Transaction Outputs (UTXOs) e ﬁcam ociosas até que o detentor da chave privada

forneça as informações necessárias para desbloquear a saída e enviar os Bitcoins para

outro endereço criando outro UTXO.

A rede Bitcoin é apenas uma teia de UTXOs que esperam para ser desblo-

queadas e enviadas para outros endereços como novos UTXOs. O protocolo Bitcoin

não é um sistema baseado em contas, o que signiﬁca que os usuários não têm uma

conta que acumula Bitcoin como em uma conta bancária. Em vez disso, os usuários

possuem chaves privadas que desbloqueiam UTXOs na rede. Isso também signiﬁca

que você não pode enviar uma quantidade parcial de satoshis de um UTXO. Cada

vez que uma nova transação é criada todos os satoshis bloqueados nesse UTXO são

enviados ao endereço de destino.

Se o usuário não quiser enviar todos os satoshis para outro usuário, ele também

deve incluir um endereço para os satoshis restantes que deseja manter e esses satoshis

são enviados de volta. Embora não seja a melhor opção, o mesmo endereço pode ser

reutilizado para enviar de volta os satoshis restantes. Entretanto, para aumentar a

privacidade, é mais seguro criar um novo endereço para enviar os satoshis restantes.

Agora que Maria tem acesso ao UTXO que recebeu de João com 100 satoshis

bloqueados nele, sua amiga Ana também quer entrar na rede e usar bitcoin. Para

enviar seus 100 satoshis, Maria deve criar uma nova transação que consiste em uma

entrada e uma saída.

Figura 4.5: Esquema de Transação de Maria para Ana

Primeiramente, será utilizado o identiﬁcador da transação de saída de João

para encontrar corretamente o UTXO e o PubKey Script correspondente que alguém

deve satisfazer para poder gastar os bitcoins bloqueados.

Em seguida, Maria cria um Script de assinatura, que será usado para satisfazer

o PubKey Script criado por João e desbloquear os 100 satoshis. Esse script de

assinatura digital é responsável pela autenticidade de toda a transação que Maria

está criando para Ana. Pois nele há a informação que desbloqueia os satohis do

PubKey script criado por João, do novo PubKey Script para Ana e a quantidade de

satoshis que será destinada ao endereço de Ana. Todos esses dados são criptografados

Capítulo 4. Criptograﬁa aplicada no protocolo Bitcoin

60

duas vezes usando a função hash criptográﬁca SHA-256. Em seguida, Maria assina

esse conteúdo com sua chave privada para criar a assinatura digital, que combinado

com sua chave pública, forma o script de assinatura para essa transação

Assim como a saída da transação anterior, a saída consiste em: um novo

indicador de saída para localizar essa transação, a quantidade de satoshis e um

novo PubKey Script usando o endereço que Ana forneceu para Maria, que bloqueia

os Bitcoins no endereço de Ana. Agora, apenas Ana, que possui a chave privada que

corresponde ao endereço, pode enviar esses Bitcoins para outra pessoa.

Uma vez que a transação de Maria para Ana for criada, será transmitida para

a rede de mineradores, que por sua vez irão comparar o script de assinatura por

meio do PubKey Script, como representado na Fig 4.2. Se o resultado do PubKey

Script for verdadeiro, essa transação será adicionada a um bloco e validada na rede.

5
Considerações ﬁnais

O presente trabalho tratou de apresentar suscintamente o universo da crip-

tomoeda mais conhecida, o Bitcoin. Discorreu-se sobre a matemática implícita ao

processo de assinaturas digitais com o emprego de criptograﬁa sobre as curvas elípti-
cas em Zp, em particular sobre a curva secp256k1 e como se dão de fato as transações
entre os endereços da rede.

O contexto das criptomoedas é diverso e apresenta várias aplicações diferen-

tes, como o Bitcoin foi a pioneira, hoje carrega o status de "ouro digital" de maneira

que sua escassez é garantida pela política monetária de emissões de novas moedas

como vimos no Capítulo 2. Também com grande destaque, tem-se a Criptomoeda

Ethereum, muito utilizada em aplicações comerciais com o conceito de "smart con-

tracts"(contratos inteligentes) que se executam automaticamente a partir da leitura

de um determinado parâmetro. Mais recentemente houve também o desenvolvimento

da Criptomoeda Cardano, cuja proposta é mais inovadora possibilitando que a sua

blockchain se comunique com as blockchains de outras criptomoedas. Enﬁm, hoje o

mundo conta com centenas de criptomoedas, cada uma com sua aplicação especíﬁca.

Como se vê, esse campo do conhecimento evoluiu muito desde a criação do

Bitcoin em 2008[14], tornando a nossa realidade mais complexa e, esse trabalho é

uma tentativa de apresentar de forma simples as aplicações matemáticas inerentes

à segurança dessas transações.

Dos números primos ao Bitcoin, pudemos percorrer esse caminho fazendo

pontes capazes motivar vários estudantes e educadores. Sabemos que nem todo

programa de ensino de matemática abrange o ensino de congruências (infelizmente),

entretanto há círculos nos quais existe esse espaço e o paralelo com a matemática que

subsisida a segurança de uma criptomoeda famosa é de grande valia como atrativo

para despertar o interesse por esse tema.

A fenômeno da "transformação digital" vem crescendo ao longo das últimas

décadas e faz bastante sentido lançarmos o olhar da educação matemática sobre

esse movimento em suas diversas manifestações, desde a aplicação de softwares

em aula, bem como na abordagem que é escolhida para o estudo de determinados

conteúdos. Assim, nesse texto procurou-se trazer o tema da virtualização da moeda

para apresentar as aplicações muinto interessantes da matemática que permitem a

um sistema dessa complexidade ser implementado.

Referências bibliográﬁcas

[1] CHERVINSKI J., K. D.. Introdução às tecnologias dos blockchains e das
criptomoedas. Revista Brasileira de Computação Aplicada, 11(3):12–27, set.
2019.

[2] ANTONOPOULOS, A. M.. Mastering Bitcoin: Unlocking Digital Crypto-

Currencies. O’Reilly Media, Inc., 1st edition, 2014.

[3] DE ANDRADE, E. G.. Criptograﬁa com curvas elípticas. Mestrado
proﬁssional em matemática- PROFMAT, Universidade Federal do Pará, Belém,

2016.

[4] LANA, M. C. A.. Curvas elípticas e criptograﬁa. Mestrado proﬁssional em
matemática- PROFMAT, Universidade Federal de Juiz de Fora, Juiz de Fora, 2016.

[5] DA SILVA LEÃO, L. C.. Uma introdução ao estudo de bitcoins e
blockchains. Mestrado proﬁssional em matemática- PROFMAT, Universidade
Federal do Estado do Rio de Janeiro, Rio de Janeiro, 2019.

[6] SEGUIAS, B.. Crypto theoretical minimum - elliptic curve groups. Dis-
ponível em: https://delfr.com/wp-content/uploads/2018/06/Elliptic_
Curve_Group.pdf, Acesso em: 04 Nov de 2020, 2018.

[7] SEGUIAS, B.. Bitcoin elliptic curve digital signature algorithm (ecdsa).
Disponível em: https://delfr.com/wp-content/uploads/2018/12/Bitcoin_
ECDSA.pdf, Acesso em: 04 Nov de 2020, 2018.

[8] SEGUIAS, B.. Crypto theoretical minimum - groups and ﬁnite ﬁelds.
Disponível em: https://delfr.com/wp-content/uploads/2018/05/Groups_
Fields.pdf, Acesso em: 04 Nov de 2020, 2018.

[9] SEGUIAS, B..

Bitcoin

transactions

(pre-segwit).

Disponí-

vel

em:

https://delfr.com/wp-content/uploads/2020/02/Bitcoin_

Transactions_Legacy.pdf, Acesso em: 04 Nov de 2020, 2020.

[10] CORBELLINI, A..

Elliptic

curve

cryptography: Ecdh

and

ecdsa.
Disponível em: https://andrea.corbellini.name/2015/05/30/
elliptic-curve-cryptography-ecdh-and-ecdsa/, Acesso em: 18 Out de
2020.

Referências bibliográﬁcas

63

[11] CORBELLINI, A.. Elliptic curve cryptography: ﬁnite ﬁelds and discrete
logarithms. Disponível em: https://andrea.corbellini.name/2015/05/23/
elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/,
Acesso em: 12 Out de 2020, 2015.

[12] DEVELOPERS, W.. Whatsapp encryption overview - technical white pa-
per. version 3 updated october 22, 2020. https://www.whatsapp.com/ Dis-
em:https://scontent.whatsapp.net/v/t39.8562-34/122249142_
ponível

469857720642275_2152527586907531259_n.pdf/WA_Security_WhitePaper.

pdf?ccb=1-3&_nc_sid=2fbf2a&_nc_ohc=o2E6IrSusDAAX-W5v7u&_nc_ht=

scontent.whatsapp.net&oh=cc790aed9da886ee25beb5cb00d1b5db&oe=
60E0CD99, Acesso em: 10 Mai de 2021.

[13] LISA,

you

A..
need

Here’s

a

bitcoin

to

know about

the

timeline
cryptocurrency.

for

everything

Yahoo

Finance

Disponível

em:https://finance.yahoo.com/news/

bitcoin-timeline-everything-know-cryptocurrency-120003591.html,
Acesso em: 02 Jun de 2021.

[14] NAKAMOTO, S.. Bitcoin: A peer-to-peer electronic cash system.
www.bitcoin.org. Disponível em:www.bitcoin.org, Acesso em: 10 Ago de 2020.

[15] WIKIPEDIA CONTRIBUTORS.

Cryptocurrency — Wikipedia, the

free encyclopedia.
Cryptocurrency&oldid=1024368321, 2021. [Acesso em 22-Ago-2020].

https://en.wikipedia.org/w/index.php?title=

[16] NARAYANAN A., BONNEAU J., F. E. M. A. G. S.. Bitcoin and Cryptocur-
rency Technologies: A Comprehensive Introduction. Princeton University
Press, USA, 2016.

[17] MISTRY, N..

and

the mathematics

An introduction to bitcoin,
ecdsa.

of

www.bitcoin.org. Disponível

elliptic

curves

em:https://raw.githubusercontent.com/bellaj/Bitcoin_Ethereum_
docs/6bffb47afae6a2a70903a26d215484cf8ff03859/ecdsa_bitcoin.pdf,
Acesso em: 30 Ago de 2020.

[18] EREMENKO K., P. H. L. T.. Blockchain a-z™: Learn how to build your
ﬁrst blockchain. Udemy. Disponível em:https://www.udemy.com/course/build-
your-blockchain-az/.

[19] HEFEZ, A.. Aritmética - Coleção PROFMAT. Sociedade Brasileira de

Matemática, Rio de janeiro, 2016.

[20] SILVERMAN, JOSEPH H. The arithmetic of elliptic curves. Graduate

Texts in Mathematics, 106. Springer-Verlag, New York, 1992.

Referências bibliográﬁcas

64

[21] STINSON, D. R.. Criptography: theory and practice. 4rd edition.

Chapman Hall, Boca Raton-Florida, 1992.

[22] DEVELOPERS, D.. Elliptic curve points. Disponível em: https://www.
desmos.com/calculator/ialhd71we3?lang=pt-BR, Acesso em: 07 Mar de
2021.

[23] MARTINEZ, F. B.; MOREIRA, C. G.; SALDANHA, N. ; TENGAN, E.. Teoria
dos números: um passeio com primos e outros números familiares
pelo mundo inteiro. IMPA, 2010.

[24] SCHOOF, R.. Elliptic curves over ﬁnite ﬁelds and the computation of
square roots mod p. Mathematics of computation, vol 44 (170), p. 483-494,
1985.

[25] RESEARCH, C.. Standards for eﬃcient cryptography, SEC 1: Elliptic

curve cryptography, May 2009. Version 2.0.

[26] WIKIPEDIA CONTRIBUTORS.

Secg — Wikipedia, the free ency-

clopedia.
889332866, 2019. [Acesso em: 6 Mar 2021].

https://en.wikipedia.org/w/index.php?title=SECG&oldid=

[27] RESEARCH, C.. Standards for eﬃcient cryptography, SEC 2: Recom-
mended elliptic curve domain parameters, January 2010. Version 2.0.

[28] R. P. GALLANT, R. J. L.; VANSTONE, S. A.. Faster point multiplication
on elliptic curves with eﬃcient endomorphisms. Advances in Crypto-
logy — CRYPTO 2001.Lecture Notes in Computer Science 2139, pp. 190–200.

International Association for Cryptologic Research, Springer, 2001.

[29] KROSS, B.. How many atoms are in the human body? Thomas
Jeﬀerson National Accelerator Facility - Oﬃce of Science Education. Disponível

em: https://education.jlab.org/qa/mathatom_04.html, Acesso em: 07 Mar
de 2021.

[30] WEISENBERGER, D.. How many atoms are there in the world? Thomas
Jeﬀerson National Accelerator Facility - Oﬃce of Science Education. Disponível

em:https://education.jlab.org/qa/mathatom_05.html, Acesso em: 07 Mar
de 2021.

[31] GEIGER, F.. The bitcoin math 5: Transaction 1 – private key (2).
Youtube. Disponível em:https://www.youtube.com/watch?v=D9o1MjvAzA0&t=
96s, Acesso em: 10 Mar de 2021.

[32] MARSHAL, B..

How does

a bitcoin transaction actually

work?

Disponível

em:

https://medium.com/@blairlmarshall/

Referências bibliográﬁcas

65

how-does-a-bitcoin-transaction-actually-work-1c44818c3996, Acesso
em: 20 Nov de 2020.

