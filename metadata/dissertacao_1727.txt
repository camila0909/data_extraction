UNIVERSIDADE FEDERAL DO VALE DO S√ÉO FRANCISCO 

MESTRADO PROFISSIONAL EM MATEM√ÅTICA EM REDE     

NACIONAL ‚Äì PROFMAT 

FRANCISCO ALVES DOS SANTOS 

APLICA√á√ÉO DE VETORES √Ä COMPUTA√á√ÉO GR√ÅFICA: Um estudo de caso 

JUAZEIRO-BA  

2018 

 
 
 
 
 
  
  
 
 
 
 
 
 
 
 
 
 
 
FRANCISCO ALVES DOS SANTOS 

APLICA√á√ÉO DE VETORES √Ä COMPUTA√á√ÉO GR√ÅFICA: Um estudo de caso 

Trabalho  apresentado  a  Universidade  Federal 

do  Vale  do  S√£o  Francisco-UNIVASF,  Campus 

Juazeiro,  como  requisito  para  a  obten√ß√£o  do 

t√≠tulo de Mestre em matem√°tica.  

Orientador: Prof. Dr. Alexandre Ramalho Silva 

JUAZEIRO-BA  

         2018 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Santos, Francisco Alves 

S237a 

      APLICA√á√ÉO DE VETORES √Ä COMPUTA√á√ÉO GR√ÅFICA: Um estudo 
de caso / Francisco Alves dos Santos. ‚Äì Juazeiro - BA, 2018. 

xii, 84f.: il. ;29 cm. 

Disserta√ß√£o (Mestrado Profissional em Matem√°tica em Rede Nacional 

- Profmat) - Universidade Federal do Vale do S√£o Francisco, Campus, 
Juazeiro - BA, 2018. 

       Orientador: Prof. Dr. Alexandre Ramalho Silva  

1. Vetores. 2. Programa√ß√£o. I. T√≠tulo. II Silva, Alexandre Ramalho. III 

Universidade Federal do Vale do S√£o Francisco 

                                 CDD: 515.63  

Ficha catalogr√°fica elaborada pelo Sistema Integrado de Biblioteca SIBI/UNIVASF 
Bibliotec√°ria: Ana Paula Lopes da Silva CRB/3: 1269 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
  
  
  
  
  
     
  
  
 
 
 
 
AGRADECIMENTOS 

Agrade√ßo primeiramente ao meu Deus, sem o qual nenhuma conquista seria poss√≠vel. 

Aos meus familiares, especialmente aos meus pais Ant√¥nio Francisco e Joana Maria, 

e  √†  minha  querida  esposa  Mara  Dalila  Moura,  que  sempre  me  apoiaram  e  me 

incentivaram a dar prosseguimento nos meus projetos de vida, em especial, esse. 

Aos  professores  que  comp√µem  o  quadro  do  profmat,  na  Univasf  campus  Juazeiro, 

pelos conhecimentos transmitidos. 

Ao  professor  Alexandre  Ramalho  Silva  por  ter  orientado  e  ajudado  na  constru√ß√£o 

desse trabalho. 

De maneira n√£o menos especial, ao um grande amigo, matem√°tico e programador, 

professor Ol√°vio Arruda, por ter me ajudado a compreender o uso dos vetores para 

dar movimentos a seres em ambientes virtuais, e que me auxiliou na realiza√ß√£o desse 

projeto. 

E por √∫ltimo, agrade√ßo de maneira grandemente especial, aos meus amados irm√£os 

em Cristo Jesus, que oraram a Deus por mim, pela concretiza√ß√£o desse sonho. 

O presente trabalho foi realizado com apoio da Coordena√ß√£o de Aperfei√ßoamento de 

Pessoal de N√≠vel Superior - Brasil (CAPES) - C√≥digo de Financiamento 001 

 
 
 
 
 
 
 
 
 
 
 
 
RESUMO 

O presente trabalho descreve a aplica√ß√£o e as conclus√µes obtidas da aplica√ß√£o de 
uma oficina sobre vetores aplicados √† computa√ß√£o gr√°fica. A mesma foi desenvolvida 
em uma turma do curso de licenciatura em matem√°tica de uma institui√ß√£o de ensino 
da  rede  federal  da  cidade  de  S√£o  Raimundo  Nonato-PI,  que  j√°  havia  cursado  a 
disciplina de geometria anal√≠tica. Na oficina, foi mostrada a aplica√ß√£o de vetores para 
simular  movimentos  de  objetos  em  um  ambiente  virtual  programa  processing  3.3.5 
(gratuito para download). Os objetivos dessa pesquisa s√£o investigar a satisfa√ß√£o e o 
desempenho dos discentes durante a aplica√ß√£o da oficina, e verificar qual melhoria 
no aprendizado dos mesmos, no estudo da geometria anal√≠tica. A metodologia usada 
traz em sua composi√ß√£o, uma avalia√ß√£o diagn√≥stica, uma avalia√ß√£o intermedi√°ria, e 
um question√°rio final, com perguntas abertas com intuito de verificar a compreens√£o 
da aplica√ß√£o de vetores em computa√ß√£o gr√°fica por parte dos alunos, bem como se 
concordam  que  a  contextualiza√ß√£o  √© 
importante  no  processo  de  ensino-
aprendizagem.  Pode-se afirmar que os alunos compreenderam como as opera√ß√µes 
com vetores s√£o aplicadas na programa√ß√£o, em especial em movimentos de objetos 
em ambientes virtuais e demonstraram interesse em aprofundar seus conhecimentos 
em  geometria  anal√≠tica.  Concluindo,  podemos  afirmar  que  a  contextualiza√ß√£o  dos 
conte√∫dos  matem√°ticos  e  sua  aplica√ß√£o,  por  parte  do  docente,  favorecem, 
consider√°vel e positivamente, o processo ensino-aprendizagem. 

Palavras  chave:  vetor,  movimentos,  ambiente  virtual,  programa√ß√£o,  ensino  da 

matem√°tica. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
ABSTRACT 

This work describes the application and conclusions obtained from the application of a 
workshop on vectors applied to computer graphics. The workshop was developed for 
a  group  of  mathematics  undergraduate  students  of  a  federal  educational  in  S√£o 
Raimundo Nonato city (PI). These students had already studied analytic geometry. In 
the workshop, it was shown the application of vectors to simulate object movements in 
a virtual environment program processing 3.3.5 (free to download). The objectives of 
this research are investigate students' satisfaction, analyse their performance during 
the application of the workshop and verify the improvement in their learning in the study 
of  analytical  geometry.  The  methodology  is  based  on  a  diagnostic  evaluation,  an 
intermediate evaluation, and a final questionnaire, with objetive questions in order to 
verify the students' understanding of vectors application in computer graphics, as well 
as if they agree that contextualization is important in the teaching-learning process. It 
can be said that the students obtained a satisfactory understanding of the role that the 
operations with vectors perform in the programming, in what refers to movements to 
objects in virtual environments and showed interest in deepening their knowledge in 
analytical  geometry.  In  conclusion,  we  can  affirm  that  the  contextualization  of  the 
mathematical contents and their application, by the teacher, favor, considerably and 
positively, the teaching-learning process. 

Keywords:  Vector,  movements,  virtual  environment,  programming,  Mathematics 
Teaching. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
LISTA DE FIGURAS 

Figura 1. Segmento orientado.............................................................................p√°g. 22 

Figura 2. Segmento orientados AB e ED opostos................................................p√°g. 22 

Figura 3. Vetores representantes de ùê¥ùêµ‚Éó‚Éó‚Éó‚Éó‚Éó ..............................................................p√°g. 23 

Figura 4. EF ‚â° OP, Exemplo 2.............................................................................p√°g. 24 

Figura 5. Representa√ß√£o gr√°fica de um vetor no plano.......................................p√°g. 24 

Figura 6. Soma de vetores..................................................................................p√°g. 25 

Figura 7. Soma de vetores no plano....................................................................p√°g. 26 

Figura 8. Soma de vetores: regra do pol√≠gono.....................................................p√°g. 26 

Figura 9. Soma de vetores: regra do paralelogramo............................................p√°g. 26 

Figura 10. Diferen√ßa de vetores..........................................................................p√°g. 28 

Figura 11. Multiplica√ß√£o de um vetor por um escalar...........................................p√°g. 29 

Figura 12. M√≥dulo ou comprimento de um vetor..................................................p√°g. 31 

Figura 13. Representa√ß√£o de um vetor no espa√ßo..............................................p√°g. 31 

Figura  14.  Objeto  se  movimentando  na  tela  segundo  uma  velocidade  atribu√≠da  a 

ele.......................................................................................................................p√°g. 35 

Figura 15. Bola de salto com vetores...................................................................p√°g. 39 

Figura 16. C√°lculo da magnitude de um vetor.....................................................p√°g. 41 

Figura 17. C√°lculo da magnitude de um vetor 2..................................................p√°g. 41 

Figura 18. Magnitude de um vetor.......................................................................p√°g. 42 

Figura 19. Magnitude de um vetor representado por ret√¢ngulo de altura fixa.....p√°g. 44 

Figura 20. Vetor normalizado..............................................................................p√°g. 45 

Figura 21. Bola em movimento segundo uma velocidade atribu√≠da a ela...........p√°g. 48 

Figura 22. Bola se movimentando sob efeito de uma acelera√ß√£o.......................p√°g. 50 

Figura 23. Seguindo o mouse..............................................................................p√°g. 52 

Figura 24. Objeto em movimento sob efeitos do vento e da gravidade...............p√°g. 56 

Figura 25. Gravidades iguais aplicadas a v√°rios objetos.....................................p√°g. 59 

Figura 26. Gravidades diferentes aplicadas a v√°rios objetos...............................p√°g. 60 

Figura 27. Atrito entre um corpo em movimento e sua superf√≠cie de apoio.........p√°g. 61 

Figura 28. Atrito aplicado a objetos em movimento.............................................p√°g. 63 

 
 
 
 
LISTA DE C√ìDIGOS 

C√≥digo 1. Bola se movimentando sem o uso de vetores...................................p√°g. 35 

C√≥digo 2. Bola se movimentando com o uso de vetores...................................p√°g. 39 

C√≥digo 3. Comprimento de um vetor..................................................................p√°g. 40 

C√≥digo 4. Comprimento fixo de um veto............................................................p√°g. 42 

C√≥digo 5. Comprimento de um vetor representado por um ret√¢ngulo...............p√°g. 43 

C√≥digo 6. Normaliza√ß√£o de um vetor.................................................................p√°g. 45 

C√≥digo 7. Movimento com velocidade................................................................p√°g. 47 

C√≥digo 8. Movimento com acelera√ß√£o...............................................................p√°g. 49 

C√≥digo 9. Objeto seguindo o mouse..................................................................p√°g. 52 

C√≥digo 10. Vento e gravidade aplicados ao objeto............................................p√°g. 55 

C√≥digo 11. Gravidades iguais aplicadas a objetos diferentes............................p√°g. 58 

C√≥digo 12. Gravidades aplicadas a v√°rios objetos variando de acordo com sua 

massa.................................................................................................................p√°g. 60 

C√≥digo 13. Atrito.................................................................................................p√°g. 62 

 
 
 
 
 
LISTA DE GR√ÅFICOS 

Gr√°fico 1. Resposta dos discentes ao question√°rio sobre aplica√ß√£o de 
vetores................................................................................................................p√°g. 69 

Gr√°fico 2. Reposta dos discentes ao question√°rio sobre a relev√¢ncia do estudo dos 
vetores no curso de licenciatura em matem√°tica...............................................p√°g. 70 

Gr√°fico 3. Resposta dos discentes quando questionados se o professor da disciplina 
geometria anal√≠tica mostrou onde eles aplicariam vetores................................p√°g. 71 

Gr√°fico 4. Reposta dos discentes √† pergunta voltada √† manipula√ß√£o dos comandos 
que fazem o objeto se mover pela tela...............................................................p√°g. 73 

 
 
 
 
 
SUM√ÅRIO 

1  INTRODU√á√ÉO................................................................................................p√°g. 13 

2  FUNDAMENTA√á√ÉO TE√ìRICA.......................................................................p√°g. 16 

2.1  DIFICULDADES  NO  PROCESSO  ENSINO-APRENDIZAGEM,  COMO  SAN√Å-

LAS? ..................................................................................................................p√°g. 16 

2.2  VETORES....................................................................................................p√°g. 21 

2.2.1  Breve contexto hist√≥rico...........................................................................p√°g. 21 

2.2.2  Segmentos Orientados............................................................................p√°g. 21 

2.2.3  Vetores no plano......................................................................................p√°g. 23 

2.3  OPERA√á√ïES COM VETORES...................................................................p√°g. 25 

2.3.1  Soma de vetores......................................................................................p√°g. 25 

2.3.2  Diferen√ßa de vetores................................................................................p√°g. 28 

2.3.3  Multiplica√ß√£o de um vetor por um escalar.................................................p√°g. 29 

2.3.4  M√≥dulo de um vetor..................................................................................p√°g. 30 

2.4  VETORES NO ESPA√áO..............................................................................p√°g. 31 

2.4.1  Soma de vetores e multiplica√ß√£o de vetores por um escalar....................p√°g. 32 

2.5  COMO A APLICA√á√ÉO DOS VETORES PODE DAR MOVIMENTOS AOS SERES 

EM AMBIENTE VIRTUAL..............................................................................p√°g. 33 

2.5.1  Bola de salto quicando sem vetores.........................................................p√°g. 34 

2.5.2  Bola de saltar com vetores (Pvectors)......................................................p√°g. 38 

2.5.3  Magnitude de um vetor.............................................................................p√°g. 40 

2.6  VETORES NORMALIZADOS.......................................................................p√°g. 44  

2.6.1  Aplica√ß√£o da velocidade ao objeto............................................................p√°g. 45 

2.6.2  Aplica√ß√£o da acelera√ß√£o ao objeto...........................................................p√°g. 48 

2.6.3  Objeto seguindo o mouse.........................................................................p√°g. 50 

2.7  FOR√áAS E LEIS DE NEWTON....................................................................p√°g. 53 

2.7.1  Gravidade aplicada a um objeto...............................................................p√°g. 54 

2.7.2  Gravidade aplicada a mais de um objeto..................................................p√°g. 57 

2.7.3  Gravidade modelando uma for√ßa.............................................................p√°g. 59 

2.7.4  Atrito.........................................................................................................p√°g. 61 

3  METODOLOGIA..............................................................................................p√°g. 64 

 
 
 
4  RESULTADOS E DISCUSS√ïES.....................................................................p√°g. 68 

5  CONSIDERA√á√ïES FINAIS.............................................................................p√°g. 75 

6  REFER√äNCIAS BIBLIOGR√ÅFICAS................................................................p√°g. 77 

7  AP√äNDICES....................................................................................................p√°g. 80 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
13 

1.  INTRODU√á√ÉO 

O  estudo  sobre  vetores  ou  grandezas  vetoriais,  √©  introduzido  no  ensino  por 

meio das disciplinas de exatas desde o in√≠cio do ensino m√©dio, quando se estuda, na 

f√≠sica, sobre velocidade, acelera√ß√£o e for√ßas, por exemplo. Para aqueles que optam 

por  um  curso  superior  na  √°rea  de  exatas,  tais  como  engenharias,  licenciaturas  ou 

bacharelados  em  matem√°tica,  esse  estudo  √©  mais  aprofundado  nas  disciplinas  de 

√°lgebra linear e geometria anal√≠tica, importantes componentes curriculares do referido 

curso.  A  geometria  anal√≠tica,  por  sua  vez,  traz  estudos  mais  aprofundados  sobre  o 

conte√∫do em quest√£o.  

Esse trabalho relata os resultados de uma pesquisa sobre aplica√ß√£o de vetores 

geom√©tricos  no  campo  da  computa√ß√£o  gr√°fica.  √â  uma  introdu√ß√£o  √†  l√≥gica  de 

programa√ß√£o usada nos jogos de computadores para dar movimentos a objetos em 

um ambiente virtual, por meio de comandos que envolvem opera√ß√µes com vetores, 

entre outras. 

Foi, ao participar de um minicurso sobre a aplica√ß√£o de vetores geom√©tricos 

em jogos de computadores em um evento de matem√°tica (III Encomat), na institui√ß√£o 

da qual sou docente, que surgiu a ideia de trabalhar, em forma de minicurso, com os 

alunos da mesma institui√ß√£o de ensino, que j√° haviam cursado a disciplina geometria 

anal√≠tica, a aplica√ß√£o de tal componente matem√°tico, na computa√ß√£o gr√°fica. Isso se 

deve √† busca por m√©todos de ensino que sejam capazes de despertar no discente, o 

interesse  pelo  aprender  matem√°tica,  e  tornam  a  aprendizagem  mais  din√¢mica  e 

prazerosa. 

As  experi√™ncias  adquiridas  como  professor  de  matem√°tica  nos  ensinos 

fundamental,  m√©dio  e  superior,  desde  2002  at√©  a  presente  data,  me  permitiram 

observar que muitas metodologias utilizadas no ensino da matem√°tica s√£o ineficazes 

e levam a um distanciamento, por parte do aluno, da disciplina em quest√£o. Para dar 

fim, ou diminuir √†s consequ√™ncias desse ‚Äúmito‚Äù de que aprender matem√°tica √© para 

poucos,  vem  se  pensando,  ao  longo  dos anos,  em m√©todos  que  fa√ßam  com  que  o 

aluno passe de sujeito passivo a sujeito ativo no processo ensino-aprendizagem. 

O  aluno  ser√°  capaz  de  aprender,  quando  for  capaz  de  construir  seu 

conhecimento,  assimilando  e  associando  aquilo  que  aprende  com  o  mundo  a  sua 

 
 
 
14 

volta,  com  seu  cotidiano.  N√£o  obstante,  trabalhar  a  aplica√ß√£o  da  matem√°tica  em 

outros  componentes  curriculares  de  maneira  interdisciplinar,  mostra  ao  aluno  que 

essa disciplina tem um vasto campo de aplica√ß√µes pr√°ticas. Mostra-se ainda que a 

matem√°tica enquanto conhecimento, ultrapassa o campo da abstra√ß√£o, contrariando 

o que muitos discentes julgam acerca disso, por n√£o conhecerem a rela√ß√£o entre a 

matem√°tica e as outras √°reas do conhecimento. Em s√≠ntese, mostrar essa rela√ß√£o √© 

uma maneira de dinamizar o ensino, e isso colabora com o aprendizado do aluno. Os 

PCNs acrescentam que 

O  professor,  considerando  a  multiplicidade  de  conhecimentos  em  jogo  nas 
diferentes situa√ß√µes, pode tomar decis√µes a respeito de suas interven√ß√µes e 
da  maneira  como  tratar√°  os  temas,  de  forma  a  propiciar  aos  alunos  uma 
abordagem mais significativa e contextualizada. (BRASIL 1997, p√°g. 44) 

O  presente  trabalho  traz  como  proposta,  mostrar  a  aplica√ß√£o  de  vetores 

geom√©tricos  na  computa√ß√£o  gr√°fica.  Em  suma,  de  forma  n√£o  aprofundada,  √© 

trabalhada  a  aplica√ß√£o  de  vetores  para  dar  movimento  a  objetos  em  um  ambiente 

virtual.  Para  isso,  se  faz  necess√°rio  conhecer  algumas  propriedades  dos  vetores  e 

trabalhar algumas opera√ß√µes que envolvem os mesmos.   

Quando comecei a ministrar aulas de matem√°tica na institui√ß√£o de ensino da 

qual hoje sou professor, no ensino superior, pude ver o qu√£o grande √© a defici√™ncia 

dos  discentes  em  conte√∫dos  matem√°ticos  b√°sicos.  Pude  tamb√©m  presenciar  o 

desest√≠mulo, por parte de alguns discentes, em estudar algumas disciplinas da grade 

curricular,  por  n√£o  conhecerem  sua  aplica√ß√£o  pr√°tica,  ou  que  rela√ß√£o  h√°  entre  os 

conte√∫dos estudados e seu dia a dia.  

Uma das disciplinas que mostra-se bastante distante de sua aplica√ß√£o pr√°tica 

quando √© lecionada, √© a geometria anal√≠tica. Os vetores, por sua vez, apesar de terem 

aplica√ß√µes em uma infinidade de campos, na maior parte das vezes √© trabalhado fora 

do contexto.  

Considerando  essas  premissas,  elaboramos  uma  oficina  que  mostra  a 

aplica√ß√£o de opera√ß√µes entre vetores √† computa√ß√£o gr√°fica. 

 
 
 
 
15 

Durante a aplica√ß√£o desse projeto, os estudantes envolvidos foram submetidos 

a avali√ß√µes e question√°rios, que foram usadas para coleta dos dados, e que auxiliaram 

no resultado pesquisa.  

O objetivo geral deste trabalho √© analisar o desempenho e satisfa√ß√£o do aluno 

em  uma  oficina  em  que  conceitos  b√°sicos  sobre  vetores  e  geometria  anal√≠tica  s√£o 

trabalhados usando um software de computador, onde s√£o simulados movimentos de 

objetos em ambientes virtuais por meio de opera√ß√µes com vetores. 

S√£o  objetivos  espec√≠ficos:  investigar  o  desempenho  dos  alunos  durante  a 

realiza√ß√£o  da  oficina  supra  citada,  acerca  da  aplica√ß√£o  de  vetores,  quando  usados 

para introduzir movimentos a objetos dentro de um ambiente virtual e; verificar qual a 

melhoria  no  aprendizado  do  aluno,  dos  conceitos  de  geometria  anal√≠tica  ap√≥s  a 

realiza√ß√£o da oficina. 

A  presente  pesquisa  traz  em  sua  composi√ß√£o,  al√©m  dessa  introdu√ß√£o,  um 

referencial te√≥rico que a embasa, por meio da vis√£o de alguns autores, e traz v√°rios 

exemplos sobre o uso dos vetores geom√©tricos por meio das opera√ß√µes b√°sicas de 

adi√ß√£o, subtra√ß√£o, normaliza√ß√£o e multiplica√ß√£o de um vetor por escalar, seguidos de 

explica√ß√µes que visam simplificar a compreens√£o do leitor quanto ao uso dos vetores 

para tal fim.  

Na  sequ√™ncia,  trazemos  a  metodologia  da  pesquisa  de  forma  detalhada, 

mostrando os passos de desenvolvimento desse trabalho. 

Em  seguida  os  resultados  e  as  discuss√µes  baseados  na  coleta  dos  dados 

obtidos durante o desenvolvimento do projeto; e 

Por  fim,  s√£o  apresentadas  algumas  considera√ß√µes  finais,  que  buscam 

comparar  a  quest√£o  norteadora,  com  os  resultados  obtidos  e  analisados  na 

disquisi√ß√£o. 

 
 
 
 
 
 
16 

2  FUNDAMENTA√á√ÉO TE√ìRICA 

Neste t√≥pico do trabalho, ser√° apresentado o referencial te√≥rico desta pesquisa, 

trazendo a vis√£o de alguns autores que embasaram o desenvolvimento da mesma, e 

exemplos que tratam do uso de vetores para dar movimentos a objetos dentro de um 

ambiente virtual.  

2.1  DIFICULDADES  NO  PROCESSO  ENSINO-APRENDIZAGEM,  COMO  SAN√Å-

LAS? 

Levando em considera√ß√£o o crescente desinteresse dos alunos das escolas do 

tempo  presente,  e  os  fatores  que  levam  a  isso,  vem  se  pensando  em  m√©todos  e 

t√©cnicas que despertem neles o prazer pela aprendizagem da matem√°tica. Essa falta 

de interesse, por parte dos alunos, associada √† falta de m√©todos din√¢micos no ensino 

da disciplina em quest√£o, tem levado √† defici√™ncia no ensino dessa disciplina e tem 

criado  cada  vez  mais,  lacunas  nesse  processo  t√£o  importante  na  rela√ß√£o  aluno-

escola-professor.   

De acordo com os Par√¢metros Curriculares Nacionais - PCNs (BRASIL, 1997, 

P.  21)  ‚Äúmesmo  os  alunos  que  conseguem  completar  os  nove  anos  do  ensino 

fundamental acabam dispondo de menos conhecimento do que se espera de quem 

concluiu  a  escolaridade  obrigat√≥ria  ‚Äú.  Os  PCNs  (p√°g.  10)  definem  escolaridade 

obrigat√≥ria como sendo os nove anos do ensino fundamental. 

        Ao  final  da  escolaridade  obrigat√≥ria,  os  alunos  aprenderam  pouco,  e  muitas 

vezes  o  que  aprenderam  n√£o  facilita  sua  inser√ß√£o  e  atua√ß√£o  na  sociedade.  Dentre 

outras  defici√™ncias  do  processo  de  ensino  e  aprendizagem,  s√£o  relevantes  o 

desinteresse geral pelo trabalho escolar, a motiva√ß√£o dos alunos centrada apenas na 

obten√ß√£o de notas e na promo√ß√£o, o esquecimento precoce dos conte√∫dos estudados 

e  os  problemas  de  indisciplina.  Pensando  em  mudar  essa  vis√£o,  s√£o  muitas  as 

maneiras de se dinamizar o ensino da Matem√°tica, como por exemplo, a utiliza√ß√£o de 

jogos como ferramenta de aux√≠lio ao ensino da disciplina em quest√£o, e sua rela√ß√£o 

com o dia a dia do aluno. 

 
 
 
 
17 

          O panorama atual requer propostas desafiadoras e um tanto atrativas para os 

alunos do Ensinos Fundamental e M√©dio, e mesmo, para os alunos do ensino superior. 

O trabalho escolar deve ser pensado e elaborado de acordo com a necessidade do 

corpo  discente,  tendo  em  vista  alargar  o  seu  leque  de  conhecimento  da  disciplina 

matem√°tica por meio da sua aplica√ß√£o pr√°tica, pois n√£o √© prazeroso aprender aquilo 

que n√£o tem ‚Äúutilidade‚Äù. O aluno necessita conhecer a profundidade daquilo que est√° 

aprendendo, e saber em que momento da vida esse conhecimento lhe ser√° √∫til. Ele 

precisa saber que o aprender matem√°tica n√£o consiste em memoriza√ß√£o de regras e 

f√≥rmulas que ser√£o usados em determinados momentos e depois ser√£o esquecidos.  

A esse respeito os PCNs acrescentam que: 

Os Conte√∫dos do ensino correspondem aos conhecimentos e valores 
sociais  acumulados  pelas  gera√ß√µes  passadas  como  verdades 
acabadas,  e,  embora  a  escola  vise  √†  prepara√ß√£o  para  a  vida,  n√£o 
busca estabelecer  rela√ß√£o  entre  os conte√∫dos que se  ensinam  e  os 
interesses dos alunos, tampouco entre esses e os problemas reais que 
afetam a sociedade.   (BRASIL, 1997, P. 27) 

√â vasto o campo de aplica√ß√£o dos conhecimentos matem√°ticos adquiridos em 

sala de aula, mas o aluno ‚Äún√£o‚Äù sabe disso, pois na sala de aula, seu aprendizado √© 

limitado, priorizando algebrismos, memoriza√ß√£o e o trabalho descontextualizado. 

Para despertar o interesse no aluno pelo aprender matem√°tico, √© necess√°rio 

mostrar  ao  mesmo  que  a  referida  disciplina  tem  aplica√ß√£o  pr√°tica,  e  n√£o  subsiste 

apenas de teoria, problematizando os conte√∫dos adequadamente e mostrando suas 

√°reas de aplica√ß√£o. Torres acrescenta: 

Assim,  surge  √†  necessidade  de  favorecer  um  ensino  que  leve  o 
educando a problematizar os mais variados conceitos abordados na 
referida disciplina escolar. O homem como ser social e integrante de 
uma  cultura  necessita  do  conhecimento  matem√°tico  na  sua  rela√ß√£o 
interpessoal, muitas vezes n√£o sendo percept√≠vel a sua utiliza√ß√£o. No 
entanto,  ele  o  utiliza  assim  como  utiliza  a  sua  l√≠ngua  materna. 
(TORRES 2016, p. 2) 

 
 
 
 
 
18 

Assim, faz-se necess√°rio avan√ßar do campo te√≥rico para o pr√°tico, para mostrar 

aos discentes alguns ramos da aplica√ß√£o dos conte√∫dos ministrados em sala de aula. 

Diante  de  tais  discuss√µes  surge  a  necessidade  de  se  buscar  ensinar  a 

matem√°tica de modo que mesma venha a favorecer ao aluno a aplicar seus conceitos, 

seja em conex√£o com outras √°reas como a f√≠sica, a geografia, a computa√ß√£o gr√°fica; 

seja no cotidiano. Segundo Menezes 

√Ä medida que se defende a necessidade da utiliza√ß√£o da matem√°tica 
no cotidiano, inevitavelmente deve-se perceber que existem sujeitos 
envolvidos no processo de ensino e aprendizagem, de um lado temos 
o  sujeito  que  ensina  ou  media  e  do  outro  o  que  aprende  ou  que 
constr√≥i  o  conhecimento 
(MENEZES, 2016 apud CONCEI√á√ÉO, 2015, p. 2) 

junto  com  o  sujeito  mediador.   

Alguns professores de matem√°tica ainda est√£o presos a um modelo de ensino 

que n√£o promove no aluno a mobiliza√ß√£o da aprendizagem e nem a motiva√ß√£o para 

perceber  que  essa  disciplina  est√°  presente  em  suas  rela√ß√µes  sociais. Assim,  esse 

componente  curricular  torna-se,  muitas  vezes,  distante  da  realidade  do  aluno.  Isso 

est√°  relacionado  √†  maneira  como  ela  √©  trabalhada  em  sala  de  aula. Al√©m  disso,  a 

aus√™ncia  de  relacionamento  da  teoria  com  a  pr√°tica  no  ensino  da  disciplina  em 

quest√£o, associada √† sua n√£o aplica√ß√£o no cotidiano do discente, leva o aluno a n√£o 

despertar em si o interesse pela disciplina.  

Alguns  profissionais  da  educa√ß√£o  ainda  fazem  uso  do  tradicionalismo  no 

processo ensino-aprendizagem, que coloca o professor como centro desse processo 

e  detentor do  conhecimento, e  n√£o  como mediador,  e  tinha  como  objetivo  principal 

preparar  os  alunos  para  que  esses  assumissem  pap√©is  na  sociedade.  Segundo 

Queiroz e Moita 

No  ensino  tradicional  o  principal  objetivo  da  escola  era  preparar  os 
alunos  para  assumirem  pap√©is  na  sociedade,  j√°  que  quem  tinha 
acesso √†s escolas eram os filhos dos burgueses e a escola tomava 
como seu papel principal, fazer o repasse do conhecimento moral e 
intelectual  porque  atrav√©s  deste  estaria  garantida  a  ascens√£o  dos 
burgueses  e,  consequentemente,  a  manuten√ß√£o  do  modelo  social  e 
pol√≠tico vigente. (QUEIROZ e MOITA  2007, p.5) 

 
 
 
 
 
19 

No ensino tradicional, a proposta de educa√ß√£o era absolutamente centrada no 

professor,  figura  incontest√°vel,  √∫nico  detentor  do  saber  que  deveria  ser  repassado 

para os alunos. Para os PCNs (BRASIL, 1997, p.27): A ‚Äúpedagogia tradicional‚Äù √© uma 

proposta de educa√ß√£o centrada no professor, cuja fun√ß√£o se define como a de vigiar 

e aconselhar os alunos, corrigir e ensinar a mat√©ria. 

Metodologias tradicionais de ensino tem se mostrado ineficazes na aquisi√ß√£o 

de  conhecimento  por  parte  dos  discentes. Assim,  √©  necess√°rio  utilizar  m√©todos  e 

t√©cnicas que possibilitem ao aluno exercer seu papel de sujeito ativo e construtor do 

conhecimento no processo ensino-aprendizagem. 

       √â necess√°rio despertar no aluno o interesse e a curiosidade pela disciplina, por 

meios  que  o  levem  a  conhecer  a  matem√°tica  como  algo  din√¢mico  e  aplic√°vel.  O 

educando deve ser levado a conhecer a rela√ß√£o entre a matem√°tica e as outras √°reas 

do  conhecimento,  saber  que  ela  est√°  em  tudo  a  sua  volta.  Deve-se  levar  em 

considera√ß√£o que para tal, √© necess√°rio que o educando assuma o papel de sujeito 

ativo nesse processo. Queiroz e Moita acrescentam que 

O  professor  e  os  conte√∫dos  disciplinares  devem  sair  do  centro  do 
processo pedag√≥gico e o aluno deve ser colocado como fundamental, 
que deve ter sua curiosidade, criatividade, inventividade, estimulados 
pelo professor, que deve ter o papel de facilitador do ensino. A escola 
deve possibilitar a aprendizagem pela descoberta, focada no interesse 
do aluno, garantindo momentos para a experimenta√ß√£o e a constru√ß√£o 
do  conhecimento,  que  devem  partir  do 
(QUEIROZ e MOITA 2007, p.8) 

interesse  do  aluno.  

Assim, a forte rela√ß√£o entre a matem√°tica e todas as √°reas de conhecimento, 

facilita  mostrar  ao  aluno  essa  rela√ß√£o  da  disciplina  com  o  mundo  em  sua  volta, 

elevando  seu  n√≠vel  de  conhecimento  e  despertando  nele  maior  curiosidade  pela 

aplica√ß√£o da mesma. 

         A  matem√°tica  mant√©m  grande  rela√ß√£o  com  a  √°rea  da  computa√ß√£o. A  pr√≥pria 

linguagem  de  computadores  (bin√°ria)  √©  um  exemplo  disso.  Por  tr√°s  daquilo  que 

aparece na tela do computador temos pura aplica√ß√£o matem√°tica. Ressaltamos que 

 
 
 
 
o  ensino  de  linguagem  de  programa√ß√£o  √©  importante,  e  auxilia  no  aprendizado  do 

aluno. Segundo Reif  

20 

Nos dias de hoje, aprender a programar √© um diferencial comparado 
ao que foi aprender ingl√™s h√° alguns anos, e deveria ser t√£o importante 
quanto  ler  ou  escrever.  Essa  import√¢ncia  n√£o  se  limita  apenas  √†s 
oportunidades  de  trabalho,  ela  possibilita  ver  o  mundo  de  novas 
maneiras. (REIF, 2017, p. 13) 

Devido a sua imensa import√¢ncia e √† falta de profissionais com habilidades em 

programa√ß√£o, muitos pa√≠ses perceberam que este aprendizado deve ser incorporado 

ao curr√≠culo das crian√ßas ainda na fase escolar. Dessa maneira, desde cedo elas t√™m 

acesso a linguagem de programa√ß√£o, que auxilia no aprendizado de outras disciplinas 

assim  como  o  desenvolve  diversas  habilidades  pessoais  como  racioc√≠nio  l√≥gico, 

trabalho em equipe, tomada de decis√µes e criatividade.  

Para Reif (2017), inser√ß√£o da linguagem de programa√ß√£o por meio da aplica√ß√£o 

na matem√°tica, refor√ßa os ideais da preval√™ncia de uma nova postura metodol√≥gica 

em detrimento da postura tradicional de ensino, ainda dominante no ambiente escolar. 

√â importante introduzir nas escolas metodologias que possibilitem o aprendizado do 

aluno. T√©cnicas voltadas para a aplica√ß√£o matem√°tica contribuem para o aprendizado 

da mesma.  

Na  se√ß√£o  seguinte,  veja  a  grande  import√¢ncia  de  se  mostrar  como  se  d√° 

aplica√ß√£o  dos  vetores  de  forma  a  dar  movimentos  a  seres  no  ambiente  virtual. 

Comandos gerados por meio de linguagens de programa√ß√£o Java permitem aplicar 

esse t√£o importante componente matem√°tico na √°rea da computa√ß√£o de modo a dar 

movimento a objetos na tela do computador. 

 
 
 
 
 
 
 
21 

2.2   VETORES  

2.2.1  Breve contexto hist√≥rico 

O  estudo  sobre  vetores  iniciou-se  no  s√©culo  XIX  com  a  necessidade  de  se 

representar  geometricamente  um  n√∫mero  complexo.  Alguns  matem√°ticos  como 

Caspar  Wessel  (matem√°tico  dinamarqu√™s-noruegu√™s,  1745-1818),  Jean  Robert 

Argand ( um livreiro e matem√°tico amador franc√™s, nascido na su√≠√ßa, 1768 ‚Äì 1822), 

Carl Friedrich Gauss (matem√°tico, astr√¥nomo e f√≠sico alem√£o que contribuiu muito em 

diversas  √°reas  da  ci√™ncia,  dentre  elas  a  teoria  dos  n√∫meros,  estat√≠stica,  an√°lise 

matem√°tica,  geometria  diferencial,  goed√©sia,  geof√≠sica,  eletrost√°tica,  astronomia  e 

√≥ptica, 1777 - 1855), entre outros, conceberam n√∫meros complexos como pontos no 

plano bidimensional, isto √©, como vetores bidimensionais.  

August Ferdinand M√∂bius publicou, em 1827, o livro The Barycentric Calculus, 

no qual introduziu diretamente segmentos de reta que eram representados por letras 

do alfabeto; representa√ß√£o de vetores, mas n√£o no nome.    

Um trabalho foi publicado por Giusto Bellavits (matem√°tico italiano, 1803-1880) 

sobre Geometria, em 1832, onde ele abordou a no√ß√£o de vetor de maneira expl√≠cita. 

Os elementos b√°sicos da sua obra s√£o os segmentos de reta. Dados dois pontos A e 

B do plano, os segmentos AB e BA, de extremidades A e B, foram considerados por 

Bellavits elementos distintos. Essa conven√ß√£o foi admitida por ele devido ao fato de 

que o segmento de reta delimitado pelos pontos A e B pode ser encontrado de duas 

maneiras diferentes: partindo de A para B, ou partindo de B para A. A classifica√ß√£o 

dos segmentos feita por Giusto, deu-se atrav√©s da rela√ß√£o de equipol√™ncia que, por 

sua vez, originou a no√ß√£o de vetor. 

2.2.2 Segmentos orientados 

Um segmento orientado √© determinado por um par de pontos ordenados, em 

que  o  primeiro  representa  a  origem  do  segmento,  e  o  segundo  representa  a 

 
 
 
 
 
22 

extremidade. O segmento orientado de origem no ponto A e extremidade no ponto B 

ser√° representado por AB. 

Geometricamente, um segmento orientado AB √© representado por uma flecha 

de A a B. 

Figura 1. Segmento orientado. Fonte: autor da pesquisa. 

Um segmento orientado √© dito nulo quando sua origem coincide com sua 

extremidade, ou seja, quando esse segmento √© determinado por um par de pontos 

coincidentes. 

Se dois segmentos orientados n√£o nulos AB e CD tem mesma dire√ß√£o, ent√£o 

as  retas  AB  e  CD  s√£o  paralelas  ou  coincidentes.  Os  sentidos  de  dois  segmentos 

orientados  s√≥  podem  ser  comparados  se  eles  tem  a  mesma  dire√ß√£o.  A  figura  2 

representa  dois  segmentos  com  mesma  dire√ß√£o  e  sentidos  contr√°rios;  portanto, 

opostos. 

Figura 2. Segmentos orientados AB e ED opostos. Fonte: autor da pesquisa 

Dois segmentos orientados AB e CD s√£o equipolentes quando tem mesmo 

comprimento, dire√ß√£o e sentido. Indica-se por AB ‚â° CD. 

 
 
 
 
 
 
 
23 

2.2.3  Vetores no plano 

Sejam A e B pontos no plano. O vetor  ùë¢‚Éó  =  ùê¥ùêµ‚Éó‚Éó‚Éó‚Éó‚Éó  ou  ùë¢‚Éó  = B ‚Äì A √© o conjunto de 

todos os segmentos orientados que tem mesmo comprimento, dire√ß√£o, sentido de ùë¢‚Éó , 

ou seja, o conjunto de todos os vetores que s√£o equipolentes a  ùë¢‚Éó . Cada segmento 

equipolente a AB representa o vetor ùê¥ùêµ‚Éó‚Éó‚Éó‚Éó‚Éó . (Veja a figura 3). 

Figura 3. Vetores representantes de ùê¥ùêµ‚Éó‚Éó‚Éó‚Éó‚Éó . Fonte: autor da pesquisa. 

Os vetores s√£o manipulados atrav√©s de suas representa√ß√µes em rela√ß√£o a 

um sistema de eixos ortogonais dado.  

Dados um ponto A = (a1, a2) e B = (b1, b2), os n√∫meros b1 ‚Äì a1 e b2 ‚Äì a2 s√£o as 

coordenadas do vetor  ùë¢‚Éó  =  ùê¥ùêµ‚Éó‚Éó‚Éó‚Éó‚Éó  e escreve-se  ùë¢‚Éó  = (b1 ‚Äì a1, b2 ‚Äì a2). 

Exemplo 1: sejam A = (1,3) e B = (3,1). As coordenadas do vetor  

 ùë¢‚Éó  =  ùê¥ùêµ‚Éó‚Éó‚Éó‚Éó‚Éó  s√£o dadas por  ùë¢‚Éó  = (3 ‚Äì 1,1 ‚Äì 3) = (2,-2). 

Seja OXY um sistema de eixos ortogonais no plano. Para todo vetor  ùë¢‚Éó  existe 

um √∫nico ponto P tal que  ùë¢‚Éó  = ùëÇùëÉ‚Éó‚Éó‚Éó‚Éó‚Éó . Al√©m disso, as coordenadas do ponto P coincidem 

com as coordenadas do vetor ùë¢‚Éó . 

Exemplo 2: dados os pontos E = (-1,3) e F = (3,2), o ponto P tal que  ùëÇùëÉ‚Éó‚Éó‚Éó‚Éó‚Éó  = ùê∏ùêπ‚Éó‚Éó‚Éó‚Éó‚Éó   

√© dado por P = (3-(-1),2-3) = (4,-1). Os vetores ùëÇùëÉ‚Éó‚Éó‚Éó‚Éó‚Éó  e ùê∏ùêπ‚Éó‚Éó‚Éó‚Éó‚Éó  est√£o ilustrados na figura 4. 

 
 
 
 
24 

Figura 4. EF ‚â° OP, Exemplo 2. Fonte: autor da pesquisa. 

Geometricamente,  os  vetores  s√£o  representados  por  segmentos  de  retas 

orientados no plano ou espa√ßo. Com isto podemos associar a um par (a,b) m√≥dulo, 

dire√ß√£o e sentido. A dire√ß√£o e o sentido do segmento identificam a dire√ß√£o e o sentido 

do vetor. E o m√≥dulo √© o comprimento do vetor, representado por: 

‚àöùëé2 + ùëè2 

Que tamb√©m √© chamado de norma do vetor, representado por 

|| ùë¢‚Éó  || = ‚àöùëé2 + ùëè2. 

O m√≥dulo do vetor u est√° representado na figura 5. 

Figura 5. Representa√ß√£o gr√°fica de um vetor no plano. Fonte: autor da pesquisa 

 
 
 
 
 
 
 
 
25 

2.3  OPERA√á√ïES COM VETORES 

Neste t√≥pico, ser√£o estudadas as opera√ß√µes com vetores que ser√£o usadas 

para dar ou manipular o movimento de objetos em um ambiente virtual. A saber: 

2.3.1  Soma de vetores 

A opera√ß√£o de adi√ß√£o de vetores que a cada par de vetores  ùë¢‚Éó  e ùë§‚Éó‚Éó  associa um 
novo vetor, √© o vetor soma de ùë¢ ‚Éó‚Éó‚Éó  e ùë§‚Éó‚Éó , designado por ùë¢‚Éó  + ùë§‚Éó‚Éó ,  e √© definido da seguinte 
maneira:  

Sejam os vetores ùë¢‚Éó  e ùë§‚Éó‚Éó . Se os vetores  ùë¢‚Éó  e ùë§‚Éó‚Éó  s√£o tais que a extremidade do 

vetor  ùë¢‚Éó   coincide com a origem do vetor  ùë§‚Éó‚Éó , ent√£o o vetor soma de ùë¢‚Éó  com ùë§‚Éó‚Éó  √© o vetor 

ùë£ = ùë¢‚Éó  + ùë§‚Éó‚Éó  que origem na origem de ùë¢‚Éó  e extremidade na extremidade de ùë§‚Éó‚Éó . (ver figura 

6). 

Figura 6: Soma de vetores. Fonte: autor da pesquisa 

Este modo de somar dois vetores √© conhecido como regra do tri√¢ngulo. Outra 

maneira de se representar geometricamente a soma de vetores √© a regra do pol√≠gono, 

nesse caso, teremos a soma entre mais de dois vetores. Usando esta regra podemos 

somar qualquer quantidade de vetores, desde que a origem de um vetor coincida com 

a extremidade do anterior. O vetor soma (ou vetor resultante) ser√° o vetor que tem a 

origem  na  origem  do  primeiro  vetor  e  a  extremidade  na  extremidade  do  √∫ltimo, 

formando assim um pol√≠gono. (Veja as figuras 6 e 7). 

 
 
 
 
 
 
 
 
 
 
26 

Figura 7. Soma de vetores no plano. Fonte: autor da pesquisa 

Figura 8. Soma de vetores no plano: regra do pol√≠gono. Fonte: autor da pesquisa 

Na figura 8, o vetor  ùëè‚Éó  √© o vetor soma dos vetores ùë¢‚Éó , ùë£ , ùë§‚Éó‚Éó  e  ùëé  representados 

na figura 7. 

Outra forma geom√©trica de visualizar a soma de dois vetores no plano √© feita 

pela regra do paralelogramo. Conforme representado na figura 9. 

Figura 9. Soma de vetores: regra do paralelogramo. Fonte: autor da pesquisa 

 
 
 
 
 
 
27 

Na  regra  do  paralelogramo  os  vetores  ùë¢‚Éó   e  ùë£   tem  a  mesma  origem.  Na 

extremidade do vetor ùë¢‚Éó  tra√ßamos o vetor ùë£‚Ä≤‚Éó‚Éó‚Éó  e paralelo ao vetor ùë£  e na extremidade do 

vetor  ùë£   tra√ßamos  o  vetor  vetores  ùë¢‚Ä≤‚Éó‚Éó‚Éó   ,  paralelo  ao  vetor  ùë¢‚Éó   ,  formando  assim  um 

paralelogramo. O vetor soma, representado por ùë§‚Éó‚Éó , √© a diagonal do paralelogramo com 

origem  no  encontro  das  origens  dos  vetores  ùë¢‚Éó   e  ùë£   e  extremidade  no  encontro  das 

extremidades dos vetores ùë¢‚Ä≤‚Éó‚Éó‚Éó  e ùë£‚Ä≤‚Éó‚Éó‚Éó . 

Quando se somam dois vetores  ùë¢‚Éó  = (a1, a2) e  ùë£  = (b1, b2), somam-se as 

coordenadas desses vetores. A soma de dois vetores u e v  √© definida da seguinte 

maneira: 

ùë¢‚Éó  +  ùë£  = (a1+b1, a2+b2). 

Por exemplo, se forem somados os vetores ùë¢‚Éó  = (2,-3) e ùë£  = (1,4), tem-se: 

ùë¢‚Éó  + ùë£  = (2+1,-3+4) 

       ùë¢‚Éó  + ùë£  = (3,1) 

A adi√ß√£o de vetores satisfaz √†s seguintes propriedades: 

Sejam ùë¢‚Éó ,  ùë£  e  ùë§‚Éó‚Éó  vetores quaisquer, ent√£o: 

(A1) comutativa:  ùë¢‚Éó  +  ùë£  =  ùë£  +  ùë¢‚Éó  

(A2) associativa: ùë¢‚Éó  + (ùë£  +  ùë§‚Éó‚Éó ) =  (ùë¢‚Éó  + ùë£ ) + ùë§‚Éó‚Éó  

(A3) exist√™ncia de elemento neutro aditivo:  ùë¢‚Éó  +  0‚Éó  =  ùë¢‚Éó  

(A4) exist√™ncia do inverso aditivo:  ùë¢‚Éó  + (-ùë¢‚Éó ) =  0‚Éó . 

Demonstra√ß√µes:  

Propriedade A1: 

Sejam os vetores  ùë¢‚Éó  = (xu, yu) e  ùë£  = (xv, yv), temos que: 

ùë¢‚Éó  + ùë£  = (xu+xv, yu+yv) = (xv+xu, yv+yu) =  ùë£  +  ùë¢‚Éó  

De onde conclu√≠mos que 

ùë¢‚Éó  + ùë£  = ùë£  +  ùë¢‚Éó  

Propriedade A2: 

Sejam os vetores  ùë¢‚Éó  = (xu,yu), ùë£  = (xv,yv) e  ùë§‚Éó‚Éó  = (xw,yw)temos que: 

 
 
 
 
28 

(ùë¢‚Éó  + ùë£ ) + ùë§‚Éó‚Éó  = (xu+xv,yu+yv) + (xw,yw) = (xu+xv+xw, yu+yv+yw) = (xu,yu) + (xv+xw,yv+yw) = 
ùë¢‚Éó  + (ùë£  + ùë§‚Éó‚Éó ) 

De onde conclu√≠mos que (ùë¢‚Éó  + ùë£ ) + ùë§‚Éó‚Éó  = ùë¢‚Éó  + (ùë£  + ùë§‚Éó‚Éó ). 

As demonstra√ß√µes das propriedades A3 e A4 ficam a cargo do leitor. 

2.3.2  Diferen√ßa de vetores 

A subtra√ß√£o de dois vetores ùëé  e ùëè‚Éó , √© definida como sendo a soma do vetor ùëé  

como o oposto de ùëè‚Éó . Assim: 

ùëé  - ùëè‚Éó  = ùëé  + (-ùëè‚Éó ) = ùëê  

A representa√ß√£o gr√°fica de ùëé  - ùëè‚Éó  √© dada por: 

Figura 10: Diferen√ßa de vetores. Fonte: autor da pesquisa. 

Quando se efetua a subtra√ß√£o entre dois vetores, subtraem-se as coordenadas 

desses vetores. Por exemplo, dados os vetores ùë¢‚Éó  = (5,6) e ùë£  = (-2,4), se quisermos 

encontrar ùë¢‚Éó  - ùë£ , teremos: 

ùë¢‚Éó  - ùë£  = (5,6) +( ‚Äì (-2,4)) 

      ùë¢‚Éó  - ùë£  = (5,6) + (2,-4) 

   ùë¢‚Éó  - ùë£  = (5+2,6-4) 

ùë¢‚Éó  - ùë£  = (7,2) 

 
 
 
 
 
 
29 

2.3.3  Multiplica√ß√£o de um vetor por um escalar 

Na multiplica√ß√£o de vetores por um escalar, √© necess√°rio se pensar um pouco 

diferente. Quando se fala em multiplicar um vetor por um escalar, estar√° se falando 

em  redimensionando  esse  vetor,  ou  seja,  aumentando  ou  diminuindo  seu 

comprimento  de  acordo  o  com  o  valor  escalar  pelo  qual  o  vetor  est√°  sendo 

multiplicado. 

Sejam um vetor ùë¢‚Éó  e um n√∫mero real k, o produto de k por ùë¢‚Éó  √© um vetor ùë£  que √© 

representado por: 

ùë£  = k . ùë¢‚Éó  

O vetor ùë£  ter√° a mesma dire√ß√£o do vetor ùë¢‚Éó  e seu sentido ser√° definido pelo 

sinal de k ( se k > 0, os dois vetores ter√£o o mesmo sentido; se k < 0, os dois vetores 

ter√£o sentidos contr√°rios). Se k = 0 ou ùë¢‚Éó  = 0, ent√£o ùë£  = 0. 

Na figura abaixo temos ùë£  = 3 . ùë¢‚Éó  

Figura 11. Multiplica√ß√£o de um vetor por um escalar. Fonte: autor da pesquisa. 

Quando se multiplica um vetor por um escalar, estar√° se multiplicando suas 

coordenadas por esse escalar. Por exemplo, multiplicando o vetor ùë¢‚Éó  = (4,7) por k = 

2, teremos: 

ùë£  = k . ùë¢‚Éó  

ùë£  = 2 . (4 , 7) 

v‚Éó  = (2.4 , 2.7) 

v‚Éó  = (8 , 14) 

A multiplica√ß√£o por escalar satisfaz as seguintes propriedades: 

Sejam ùë¢‚Éó  e ùë£  vetores quaisquer n√£o nulos e k1, k2 n√∫meros reais, ent√£o: 

(M1) k1 . ( ùë¢‚Éó  +  ùë£ ) = k1 . ùë¢‚Éó  + k1 . ùë£  

 
 
 
 
 
 
 
30 

(M2) (k1 + k2) . ùë¢‚Éó  = k1 . ùë¢‚Éó  + k2 . ùë¢‚Éó    

(M3) k1 . (k2 . ùë¢‚Éó ) = (k1 . k2) . ùë¢‚Éó  

(M4) 1 . ùë¢‚Éó  =  ùë¢‚Éó  e 0 . ùë¢‚Éó  = 0. 

Demonstra√ß√µes: 

Propriedade M1: 

Sejam os vetores  ùë¢‚Éó  = (u1, u2) e ùë£  = (v1, v2) e k1 um n√∫mero real. Temos que: 

K1 . (ùë¢‚Éó  + ùë£ ) = k1 . [(u1, u2) + (v1, v2)] = k1 . (u1 + v1, u2 + v2)  

= (k1 . u1 + k1 . v1, k1 . u2 + k1 . v2)  

= (k1 . u1, k1 . u2 ) + (k1 . v1, k1 . v2 ) 

= k1 . (u1, u2) + k1 . (v1, v2) 

= k1 . ùë¢‚Éó  + k1 . ùë£  

As demais propriedades se demonstram de maneira an√°loga. 

2.3.4  M√≥dulo de um vetor 

Matematicamente, m√≥dulo √© um grandeza que representa o comprimento de 

um vetor. O m√≥dulo (tamb√©m chamado de norma) do vetor  ùë£  = (a, b) √© encontrado 

pela equa√ß√£o matem√°tica:  

||ùë¢‚Éó || = ‚àöùëé2 + ùëè2           (1.3.4.1) 

A figura 12, mostra o m√≥dulo do vetor ùë¢‚Éó  = (a,b) = (6,8). 

||ùë¢‚Éó || = ‚àö62 + 82 = ‚àö36 + 64 = ‚àö100 = 10                                 

 
 
 
 
 
 
31 

Figura 12: M√≥dulo ou comprimento de um vetor. Fonte: autor da pesquisa. 

As opera√ß√µes descritas anteriormente ser√£o necess√°rias ao uso de alguns 

comandos que ser√£o usados para dar movimentos ordenados a objetos na tela do 

computador e, em alguns casos, para calcular a magnitude de um vetor. 

2.4  VETORES NO ESPA√áO 

Definiremos  vetores  no  espa√ßo  de  maneira  semelhante  ao  que  foi  definido  em 

vetores no plano, tomaremos apenas alguns cuidados nos casos em que for discutido 

sobre retas paralelas, pois no espa√ßo nem sempre retas que n√£o se intersectam, s√£o 

paralelas,  visto  que  elas  podem  n√£o  estar  no  mesmo  plano,  por  exemplo.  A 

representa√ß√£o de um vetor no espa√ßo tridimensional tem suas coordenadas nos eixos 

ortogonais XYZ. (Ver figura 13). 

 
 
 
 
 
32 

Figura 13. Representa√ß√£o de um vetor no espa√ßo. Fonte: autor da pesquisa. 

Sejam A = (a,b,c) e B = (a‚Äô,b‚Äô,c‚Äô) pontos no espa√ßo. Os n√∫meros reais a‚Äô ‚Äì a, b‚Äô ‚Äì b 

e  c‚Äô  ‚Äì  c  representam as  coordenadas do  vetor   ùê¥ùêµ‚Éó‚Éó‚Éó‚Éó‚Éó   no  sistema  de  eixos  ortogonais 

XYZ. Indica-se por: 

ùê¥ùêµ‚Éó‚Éó‚Éó‚Éó‚Éó  = (a‚Äô- a, b‚Äô- b, c‚Äô- c) 

Pelo exposto acima, as coordenadas de um vetor podem ser calculadas usando 

qualquer  segmento  orientado  que  o  represente.  De  maneira  particular,  dado  um 

vetor    ùë£   =  (a,  b,  c),  o  ponto  P  =  (a,  b,  c)  satisfaz  ùë£   =  ùëÇùëÉ‚Éó‚Éó‚Éó‚Éó‚Éó ,  em  que  o  vetor  ùëÇùëÉ‚Éó‚Éó‚Éó‚Éó‚Éó   √©  o 

representante na origem do vetor ùë£ , que tem origem na origem do sistema XYZ. 

2.4.1  Soma de vetores e multiplica√ß√£o de vetores por um escalar  

Sejam  os  vetores  ùë¢‚Éó   =  (u1,  u2,  u3)  e  ùë£   =  (v1,  v2,  v3).  Definimos  a  soma  dos 

vetores   ùë¢‚Éó  e  ùë£  como  ùë¢‚Éó  +  ùë£  = (u1 + v1, u2 + v2, u3 + v3), e a multiplica√ß√£o de  ùë¢‚Éó  por um 

escalar k ‚àà R √© dada por k.ùë¢‚Éó  = (ku1, ku2, ku3).  

A  adi√ß√£o  de  vetores  e  multiplica√ß√£o  de  um  escalar  por  um  vetor  no  espa√ßo 

tridimensional,  satisfazem  as  mesmas  propriedades  que  a  adi√ß√£o  de  vetores  e 

multiplica√ß√£o de um vetor por um escalar no plano. 

 
 
 
 
 
 
2.5   COMO A APLICA√á√ÉO DOS VETORES PODE DAR MOVIMENTOS AOS SERES 

EM AMBIENTE VIRTUAL. 

33 

Nessa se√ß√£o, ser√° tratada a aplica√ß√£o dos vetores geom√©tricos na computa√ß√£o 

gr√°fica,  usados  para  darem  movimentos  aos  seres  em  um  ambiente  virtual  e  fazer 

algumas  simula√ß√µes.  A  computa√ß√£o  gr√°fica  √©  a  √°rea  da  computa√ß√£o  destinada  √† 

gera√ß√£o de imagens em geral, em forma de representa√ß√£o de dados e informa√ß√µes, 

ou de fen√¥menos do mundo real. 

A  aplica√ß√£o  dos  vetores  para  tal  finalidade,  se  d√°  por  meio  de  comandos 

espec√≠ficos em linguagens de programa√ß√£o Java, utilizada na ferramenta processing 

3.3.5  (gratuito).  O  processing  pode  ser  utilizado  na  computa√ß√£o  gr√°fica,  na 

programa√ß√£o  usada  para  dar  movimentos  a  objetos  no  ambiente  virtual  e  tamb√©m 

pode ser utilizada para o ensino de algoritmos. 

Inicialmente, √© necess√°rio entender o que significam alguns comandos b√°sicos 

que ser√£o usados para nosso prop√≥sito.  

Quando  se  trabalha  com  comandos  em  linguagem  de  programa√ß√£o  usa-se, 

inicialmente, vari√°veis que s√£o declaradas por meio de comandos espec√≠ficos. Esses 

comandos  significam  que  √©  reservada  parte  da  mem√≥ria  do  computador  para 

armazenar informa√ß√µes que s√£o representados por um conjunto de dados espec√≠ficos, 

os quais s√£o chamados por Tipos de Dados. Os Tipos de Dados definem os valores 

que  uma  vari√°vel  pode  assumir,  bem  como  quais  opera√ß√µes  podem  ser  efetuadas 

sobre esse dado. A seguir s√£o apresentados os principais tipos de dados utilizados 

na programa√ß√£o da qual faremos uso nesse trabalho.  

‚û¢  Float  (ponto  flutuante):  Significa  a  inser√ß√£o  de  valores  reais.  Com  essa 

vari√°vel reservamos parte da mem√≥ria do computador para armazenar valores 

reais, que mais tarde podem ser usadas em opera√ß√µes matem√°ticas que ser√£o 

chamadas por meio de fun√ß√µes que definem essas opera√ß√µes. 

ÔÉò  Int (n√∫meros inteiros): Significa a inser√ß√£o de valores inteiros. Nesse caso, 

separamos uma parte da mem√≥ria do computador para armazenar os valores 

inteiros.  

 
 
34 

A  sintaxe  para  a  defini√ß√£o  de  uma  vari√°vel  na  ferramenta  Processing  3.3.5 

come√ßa com a defini√ß√£o do Tipo de dado, em seguida o identificador da vari√°vel, e 

por fim, a atribui√ß√£o de um valor inicial √† vari√°vel.  

A estrutura do c√≥digo de processamento √© dividida em duas se√ß√µes ou fun√ß√µes 

principais: setup e Draw. A se√ß√£o Setup √© usada para definir propriedades iniciais de 

ambiente (por exemplo, tamanho da tela, cor de fundo, carregamento de imagens ou 

fontes, etc.) e a se√ß√£o Draw para executar os comandos de desenho (por exemplo, 

ponto, linha, elipse, imagem, etc.) em um ciclo que pode ser usado para Anima√ß√£o. 

O estudo sobre aplica√ß√£o dos vetores nesse ramo da computa√ß√£o gr√°fica, ser√° 

introduzido por meio de alguns exemplos, a saber: 

2.5.1  Bola de salto quicando sem vetores. 

Nesse  exemplo  tem-se,  no  ambiente  virtual,  o  movimento  de  uma  bola 

programada usando apenas as vari√°veis x e y (que nos d√£o a localiza√ß√£o do objeto 

na tela projetada num plano cartesiano) sem o uso de vetores, e as velocidades do 

objeto em rela√ß√£o aos eixos x e y. Abaixo, o c√≥digo que gera esse movimento na bola. 

Esse  √©  apenas  um  exemplo.  Necess√°rio  √©  lembrar  que  a  posi√ß√£o  da  bola  varia  de 

acordo com os valores que s√£o acrescidos √† posi√ß√£o em rela√ß√£o a esses eixos. (Ver 

figura 14). 

// inicialmente cria-se as vari√°veis que ser√£o usadas nas opera√ß√µes 
float x = 10; 
float y = 10; 
float velocidadex = 2; 
float velocidadey = 2; 
// setup () √© executado uma vez quando o sketch come√ßa e draw () faz 
um loop para todo o sempre (at√© voc√™ sair). 
void setup() { 
  size(800, 600); 
  smooth(); 
} 
void draw() { 
  background(255); 
  //Mova a bola de acordo com sua velocidade. 
x = x + velocidadex; 
  y = y + velocidadey; 

 
 
 
 
35 

// cria-se a fun√ß√£o que far√° o objeto se manter na tela de execu√ß√£o 
  if ((x >=width) || (x <= 0)) { 
    velocidadex = velocidadex * -1; 
  } 
  if ((y >= height) || (y <= 0)) { 
    velocidadey = velocidadey * -1; 
  } 
// dever ser definidas as cores da borda externa da bola, a espessura 
dessa  borda,  a  cor  do  preenchimento  interno  da  bola  e  suas 
caracter√≠sticas. 
  stroke(0); 
  strokeWeight(2); 
  fill(127); 
  ellipse(x, y, 48, 48); 
} 

C√≥digo 1: bola se movimentando sem o uso de vetores 

Figura 14. Objeto se movimentando na tela segundo uma velocidade atribu√≠da a ele. Fonte: autor da 

pesquisa. 

A Figura 14 mostra o ambiente do processign que cont√©m os comandos, e a 

tela de execu√ß√£o dos mesmos (a tela branca onde o objeto executa seu movimento) 

Seguem as descri√ß√µes de alguns comandos: 

float: como citado anteriormente, cria as vari√°veis que ser√£o usadas nas opera√ß√µes 

chamadas pelas fun√ß√µes que se seguem; 

 
 
 
 
 
36 

velocidadex e velocidadey: s√£o as velocidades do objeto em rela√ß√£o aos eixos x e 

y (plano cartesiano); 

ellipse(x, y, 48, 48): Nesse exe  ]]mplo, o objeto apresentado na tela √© uma elipse. 

As coordenadas (x, y) representam a localiza√ß√£o do objeto na tela e as coordenadas 

(48, 48) s√£o os comprimentos (em pixels) dos eixos da elipse.  

As equa√ß√µes abaixo descritas, nos remetem √† equa√ß√£o matem√°tica S=s0 + v.t 

(equa√ß√£o do movimento retil√≠neo uniforme). Isso quer dizer que o objeto virtual iniciar√° 

seu movimento, a partir de uma posi√ß√£o inicial  (x,y) e continuar√° se movimentando 

em rela√ß√£o aos eixos x e y, segundo os valores acrescidos √†s vari√°veis x e y (posi√ß√£o 

do objeto). 

x = x + velocidadex; 

y = y + velocidadey; 

O comando ‚Äúif‚Äù significa ‚Äúse‚Äù. Esse comando introduz uma condi√ß√£o l√≥gica para 

realiza√ß√£o de uma atividade. No exemplo sobre a bola de salto, o comando if ((x >= 

width) || (x <=0)) significa que o a bola deve se movimentar dentro do intervalo em que 

x >=width (width=800, valor atribu√≠do em size(800,600)), ou x <=0.  

Para que o objeto permane√ßa dentro desse intervalo, ou seja, para que essa 

condi√ß√£o  seja  verdadeira,  √©  multiplicada  a  velocidade  em  rela√ß√£o  a  x  por  -1 

(velocidadex = velocidadex * -1;); assim, sempre que o objeto que se movimenta no 

ambiente  virtual  quiser  ultrapassar  esses  limites,  ele  refletir√°  o  sentido  do  seu 

movimento quando colidir com as bordas horizontais da tela,  permanecendo assim, 

dentro do limite lhe imposto, em rela√ß√£o ao eixo x. De maneira semelhante, o comando 

if  ((y  >=height)  ||  (y  <=0))  imp√µe  condi√ß√µes  para  que  o  objeto  em  movimento  n√£o 

ultrapasse os limites em rela√ß√£o ao eixo y (y >=600 = heigth ou y <=0) para isso a 

velocidade em rela√ß√£o a vertical √© multiplicada por -1 (velocidadey = velocidadey * -

1;) para que o objeto reflita o sentido do seu movimento, sempre que colidir com as 

bordas verticais. 

O comando stroke(0) se refere √†s cores da borda do objeto. A cor zero deixa a 

borda preta, e a cor 255 deixa a borda branca. O comando strokeWeight(2) determina 

a  largura  da  borda  externa  do  objeto.    O  comando  fill(127)  trata  do  preenchimento 

interno da bola que se movimenta (variando de 0 a 255). Uma observa√ß√£o interessante 

 
37 

quanto a isso √© que quando atribu√≠mos, por exemplo, tr√™s valores ao fill(), ao strok() 

ou ao strokeWeight(), fazendo-os variar de 0 a 255, estamos fazendo a combina√ß√£o 

das  tr√™s  cores  prim√°rias  (vermelho,  verde  e  azul)  gerando  uma  nova  cor  para 

preenchimento  interno  e  para  as  bordas  do  objeto.  Se  atribuirmos  dois  valores, 

estaremos combinando duas dessas cores. Se atribuirmos apenas um valor, estamos 

fazendo a cor variar entre preto e branco. 

Na Figura 14 temos algo muito simples - uma tela em branco com uma forma 

circular (uma "Bola") viajando por a√≠. Esta bola tem algumas propriedades, que s√£o 

representadas no c√≥digo como vari√°veis.   

Localiza√ß√£o                      x e y 

Rapidez                            velocidadex e velocidadey 

O  uso  de  vetores  n√£o  nos  permitir√°  fazer  nada  de  novo.  Apenas  adicionar 

vetores n√£o far√° seus esbo√ßos de processamento simularem a f√≠sica. No entanto, eles 

simplificar√£o  seu  c√≥digo  e  fornecer√£o  um  conjunto  de  fun√ß√µes  para  opera√ß√µes 

matem√°ticas  comuns  que  acontecem  repetidamente  ao  programar  o  movimento. 

Como uma introdu√ß√£o aos vetores, ser√£o trabalhadas opera√ß√µes em duas dimens√µes, 

pois em tr√™s dimens√µes, seria necess√°rio usar opera√ß√µes mais complexas. 

Uma  maneira  de  descrever  um  local  √©  o  caminho  retirado  da  origem  para 

alcan√ßar essa localiza√ß√£o, ou seja, √© o caminho tra√ßado desde a origem do movimento 

at√© o ponto de chegada. Portanto, uma localiza√ß√£o pode ser o vetor que representa a 

diferen√ßa  entre  localiza√ß√£o  e  origem.  Estamos  armazenando  os  dados  para  dois 

n√∫meros de ponto flutuante, um x e um y. 

   Existem  muitas  opera√ß√µes  matem√°ticas  que  s√£o  comumente  usadas  com 

vetores.  Abaixo  est√°  uma  lista  abrangente  das  opera√ß√µes  dispon√≠veis  e  como 

funcionam na classe PVector (um vetor no ambiente virtual na ferramenta processing 

3.3.5). Passaremos por alguns dos principais agora. 

Quadro 1 

ÔÉò  Add ( ) - adicionar vetores 

ÔÉò  sub ( ) - subtrair vetores 

 
 
 
 
38 

ÔÉò   mult ( ) multiplica√ß√£o de um vetor por um n√∫merop real 

ÔÉò  normalize ( ) - normalize o vetor para um comprimento unit√°rio de 1 

ÔÉò  limit ( ) - limite a magnitude de um vetor 

ÔÉò  rand( ) - dimensiona o vetor com a multiplica√ß√£o 

ÔÉò  div ( ) - escala o vetor com divis√£o 

ÔÉò  mag ( ) - calcula a magnitude  

No quadro 1 s√£o citadas algumas opera√ß√µes, entre as tais, adi√ß√£o de vetores. 

Elas nos dar√£o suporte para introduzirmos nosso pr√≥ximo exemplo, que se sergue. 

veja: 

2.5.2  Bola de saltar com vetores (Pvectors)  

Esse exemplo mostra agora como um objeto se move no ambiente virtual com 

o uso de vetores, que definir√£o, por exemplo, localiza√ß√£o, velocidade e acelera√ß√£o. 

Observe os comandos abaixo. (Ver figura 15). 

//inicialmente  s√£o  criadas  as  vari√°veis  que  ser√£o  usadas  nas 

opera√ß√µes 

PVector posicao; 
PVector velocidade; 
// a fun√ß√£o setup guarda as configura√ß√µes iniciais 
void setup() { 
  size(800,600); 
  smooth(); 
  background(255); 
  posicao = new PVector(10,100); 
  velocidade = new PVector(2.3,5); 
} 
// a fun√ß√£o Draw guarda os comandos que permanecer√£o em constante 

execu√ß√£o  

void draw() { 
    fill(255,10); 
  rect(0,0,width,height);   
  posicao.add(velocidade); 
// a fun√ß√£o if introduz a condi√ß√£o para que o objeto permane√ßa na 

tela de execu√ß√£o. 

  if ((posicao.x >= width) || (posicao.x <= 0)) { 
    velocidade.x = velocidade.x * -1; 
  } 

 
 
 
 
 
 
39 

if ((posicao.y >=height) || (posicao.y <= 0)) { 
    velocidade.y = velocidade.y * -1; 
  } 
  stroke(0); 
  fill(175); 
ellipse(posicao.x,posicao.y,16,16); 
} 

C√≥digo 2: bola se movimentando com o uso de vetores 

Figura 15: bola de salto com vetores. Fonte: autor da pesquisa. 

Entenda os comandos acima: Inicialmente s√£o criadas as vari√°veis que, nesse 

caso, tem caracter√≠sticas de vetores (Pvector posicao e Pvector velocidade). Criadas 

as  vari√°veis,  as  opera√ß√µes  s√£o  iniciadas  por  meio  da  fun√ß√£o  setup  (void  setup()). 

Define-se que a vari√°vel posicao √© um vetor de coordenadas (10,100) (posicao = new 

PVector(10,100);),  e  que  a  vari√°vel  velocidade  √©  um  vetor  de  coordenadas  (2.3,5) 

(velocidade  =  new  PVector(2.3,5);).  Em  seguida,  na  fun√ß√£o  void  draw  (para  que  o 

comando permane√ßa em execu√ß√£o at√© voc√™ fechar o programa) dar-se ordem √† bola 

em movimento que ela n√£o pode ultrapassar os limites x >= 800 ou x <= 0 e y >= 600 

ou y <= 0, refletindo o sentido de seu movimento sempre que colidir com as bordas 

 
 
 
   
 
 
 
40 

da  tela,  permanecendo  assim,  sempre  dentro  da  tela  de  execu√ß√£o  do  comando  (if 

((posicao.x  >=  width)  ||  (location.x  <=  0))  {  velocidade.x  =  velocidade.x  *-1;  }  if 

((posicao.y >= height) || (posicao.y <= 0)) { velocidade.y = velocidade.y *-1; }.  

Define-se  a  cor  das  bordas  do  objeto  e  a  cor  de  preenchimento  interno  do 

mesmo (stroke(0)) e fill(175)). Por fim, declara-se que o objeto √© um c√≠rculo (elipse 

com eixos focal e n√£o focal com comprimentos iguais) e sua localiza√ß√£o ao longo do 

movimento (ellipse(posicao.x, posicao.y,16,16);).  

O movimento na tela √© gerada por que os vetores s√£o adicionados v√°rias vezes 

(quando na fun√ß√£o void draw), gerando assim sempre um novo vetor de comprimento 

maior por meio do comando posicao.add(velocidade); e dando ao objeto uma nova 

posi√ß√£o a cada execu√ß√£o desse comando. Isso faz com que ele permane√ßa sempre 

em movimento.  

2.5.3  Magnitude de um vetor 

De maneira n√£o menos importante √† introdu√ß√£o ao estudo dos vetores para dar 

movimento a objetos em ambientes virtuais, ser√° visto agora, um exemplo que envolva 

a subtra√ß√£o de vetores, programando os mesmos para encontrar a magnitude de um 

outro vetor. Segue:  

void setup() { 
  size(400,320); 
} 
void draw() { 
  background(255); 
//Dois PVectors, um para a localiza√ß√£o do mouse e outro para o centro 

da janela 

  PVector mouse  = new PVector(mouseX,mouseY); 
  PVector center = new PVector(width/2,height/2); 
//Subtra√ß√£o de PVector! 
  mouse.sub(center); 
//Desenhe uma linha para representar o vetor. 
  translate(width/2,height/2); 
  line(0,0,mouse.x,mouse.y); 
} 

 (SHIFFMAN 2012, p. 56) 

C√≥digo 3: comprimento de um vetor 

 
 
 
 
41 

O exemplo acima descreve, na tela de execu√ß√£o, uma linha que, partindo do 

centro  (PVector(width/2,heigth/2))  segue  o  mouse  (PVector(mouseX,mouseY))  por 

meio da subtra√ß√£o de vetores. O vetor que vai da origem at√© o mouse √© chamado de 

vetor mouse. Veja o que acontece por tr√°s do que est√° sendo executado na tela do 

programa nas figuras 16 e 17. 

Figura 16. C√°lculo da magnitude de um vetor. Fonte: autor da pesquisa. 

A refer√™ncia (ou origem) do plano cartesiano XY sempre fica na posi√ß√£o top e 

left da Tela de execu√ß√£o do aplicativo, Na figura 16, fazendo a = v ‚Äì u, tem-se que a 

origem do vetor (a) sempre estar√° na origem (0,0) do plano cartesiano XY.  

Figura 17. C√°lculo da magnitude de um vetor 2. Fonte: autor da pesquisa. 

 
 
 
 
 
 
 
 
 
 
 
 
 
   
 
 
 
42 

Ao  ser aplicado  o  m√©todo  translate(x1,y1)  faz-se  com  que  a  origem  do  plano 

cartesiano mude para a posi√ß√£o (x1,y1). Na Figura 17, temos que a origem do plano 

XY  foi  transladado  para  a  posi√ß√£o  (200,160)  ou  seja,  fazendo  translate(200,160)  o 

vetor a, ou qualquer outro vetor que for criado abaixo da linha que cont√©m o m√©todo 

translate, ter√° origem no centro da tela do aplicativo. (Ver figura 18). 

Figura 18: Magnitude de um vetor. Fonte: autor da pesquisa. 

Observe agora o exemplo abaixo: 

void setup() { 

  size(800,600); 

} 

void draw() { 

  background(255); 

  PVector mouse = new PVector(mouseX,mouseY); 

  PVector center = new PVector(width/2,height/2); 

  mouse.sub(center); 

  mouse.mult(0.5); 

  translate(width/2,height/2); 

  line(0,0,mouse.x,mouse.y); 

} 

(SHIFFMAN 2012, p. 57) 

C√≥digo 4: comprimento fixo de um vetor 

 
 
43 

Observe que o exemplo dado √© o mesmo exemplo citado anteriormente, mas 

acrescido  do  comando  (mouse.mult(0.5);),  isso  significa  que  o  vetor  que  ser√° 

visualizado na tela tem a metade do vetor mouse. 

Veja agora como calcular a magnitude (m√≥dulo, comprimento) de um vetor, e a 

represent√°-lo por meio de um ret√¢ngulo de comprimento m igual ao m√≥dulo do dado 

vetor, e largura 10 (essa largura varia de acordo com o valor atribu√≠do a ela). Observe 

o exemplo a seguir: 

void setup() { 
  size(800,600); 
  }  
void draw() { 
  background(255); 
  PVector mouse = new PVector(mouseX,mouseY); 
  PVector center = new PVector(width/2,height/2); 
  mouse.sub(center); 
//A magnitude (comprimento) de um vetor pode ser acessada atrav√©s da 
fun√ß√£o mag (). Aqui √© usado como a largura de um ret√¢ngulo desenhado 
no topo da janela. 
  float m = mouse.mag(); 
  fill(0); 
  rect(0,0,m,10); 
  translate(width/2,height/2); 
// o vetor √© representado por uma linha que parte do centro da tela 
para a localiza√ß√£o atual do mouse 
  line(0,0,mouse.x,mouse.y); 
      } 

    SHIFFMAN (2012, p√°g. 41) 

C√≥digo 5: comprimento de um ret√¢ngulo representado por um ret√¢ngulo 

Esse exemplo d√°, por meio de comandos, a magnitude (ou comprimento) de 

um vetor. Cabe aqui observar que o comando rect(0, 0, m, 10) se refere √† localiza√ß√£o 

inicial do ret√¢ngulo que descreve o comprimento do vetor mouse, na barra superior da 

tela. O ret√¢ngulo de base m e altura 10 que aparece na parte superior esquerda da 

tela de execu√ß√£o, representa o comprimento do vetor mouse em quest√£o. (Ver figura 

19). 

 
 
44 

Figura 19. Magnitude de um vetor representado por ret√¢ngulo de altura fixa. Fonte: autor da pesquisa. 

2.6  VETORES NORMALIZADOS 

Normalizar um vetor, √© encontrar um vetor de magnitude 1 que tenha a mesma 

dire√ß√£o  e  sentido  desse  vetor.  Em  matem√°tica  esse  processo  √©  feito  dividindo  as 

coordenadas  do  vetor  por  seu  m√≥dulo,  dado  na  equa√ß√£o  (1.3.4.1).  De  maneira 

semelhante,  faremos  isso  programando  por  meio  de  comandos  b√°sicos.  Veja  o 

exemplo a seguir:  

void setup(){ 

size (800,600); 

smooth(); 

} 

void draw() { 
  background(255); 
  PVector mouse = new PVector(mouseX,mouseY); 
  PVector center = new PVector(width/2,height/2); 
  mouse.sub(center); 

//Neste  exemplo,  depois  que  o  vetor  √©  normalizado,  ele  √© 
multiplicado por 50 para que seu comprimento na tela n√£o varie. Note 
que n√£o importa onde o mouse esteja, o vetor ter√° o mesmo comprimento 
(50) devido ao processo de normaliza√ß√£o. 

 
  
 
 
 
45 

mouse.normalize(); 
  mouse.mult(50); 
  translate(width/2,height/2); 
  line(0,0,mouse.x,mouse.y);   } 

C√≥digo 6: normaliza√ß√£o de um vetor 

Figura 20. Vetor normalizado. Fonte: autor da pesquisa. 

Nesse  exemplo,  os  comandos  usados  s√£o  os  mesmos  usados  nos  dois 

exemplos anteriores, mas com uma pequena diferen√ßa, acrescentados dos comando 

normalizar  e  smooth()  (esse  comando  suaviza  o  movimento  do  objeto).  Quando  se 

normaliza um vetor o deixa-se esse vetor com comprimento 1; assim, pode-se fazer 

com  que  esse  vetor  passe  a  assumir  qualquer  comprimento,  bastando  para  isso 

acrescentar  o  comando  mouse.mult(valor  pelo  qual  ser√°  multiplicado  o  vetor 

normalizado).  Nesse  comando,  o  vetor  assumir√°  comprimento  igual  ao  valor  que 

estiver entre os par√™nteses. 

2.6.1  Aplica√ß√£o da velocidade ao objeto 

 
 
 
 
 
 
 
 
46 

A  partir  de  agora,  ser√£o  tratados  os  comandos  que  introduzam  na  bola 

velocidade e acelera√ß√£o. O que queremos fazer agora √© avan√ßar para encapsular toda 

a 

l√≥gica  do  movimento  dentro  de  uma  classe.  Nesse  caso,  cria-se 

uma classe gen√©rica que descrever√° um objeto se movimentando pela tela. 

Um  objeto  possui  dois  dados:  posi√ß√£o 

(posicao)  e  velocidade, 

ambos  objetos  PVectors.  O  objeto  precisa  se  mover  e  precisa  ser  visto.  Vamos 

implementar  essas  necessidades  com  as 

fun√ß√µes  denominadas  atualizar 

() e desenhar (). A fun√ß√£o atualizar() atualiza instantaneamente a posi√ß√£o da bola por 

meio dos comando que introduzem os c√°lculos da adi√ß√£o de vetores,  fazendo com 

que ela (a bola) permane√ßa em movimento, e a fun√ß√£o desenhar() faz com que voc√™ 

visualize a bola em movimento na tela.  

Todo  o  c√≥digo  de  l√≥gica  de  movimento  ser√°  colocado  em  atualizar  ()  e 

desenharemos  o  objeto  em  desenhar  ().  Vamos,  arbitrariamente,  decidir  inicializar 

nosso  objeto,  dando-lhe  uma  localiza√ß√£o  aleat√≥ria  e  uma  velocidade  aleat√≥ria  por 

meio do comando random. Concluindo, deve-se terminar a classe gen√©rica, que ser√° 

chamada  de  classe  Movimento,  incorporando  uma  fun√ß√£o  para  determinar  o  que  o 

objeto deve fazer quando atingir a borda da janela. Por enquanto, ser√° feito algo bem 

simples, apenas envolv√™-lo nas bordas. Observe o exemplo a seguir: 

// cria-se inicialmente a vari√°vel do tipo movimento  

Movimento variavel; 
void setup() { 
  size(800,600); 
  smooth(); 
// usando a vari√°vel, cria-se o objeto da classe movimento 
  variavel = new Movimento();  
} 
void draw() { 
  background(255); 
// aplica-se ao objeto as fun√ß√µes constantes nas fun√ß√µes 

atualizar, condi√ß√£o e desenhar 
  variavel.atualizar(); 
  variavel.condicao(); 
  variavel.desenhar();  
} 
// a classe movimento encapsula toda a l√≥gica da programa√ß√£o usada 
para dar movimento ao objeto 
class Movimento { 
  PVector posicao; 
  PVector velocidade; 

 
 
 
47 

// a fun√ß√£o movimento √© a fun√ß√£o construtora do objeto e guarda 

seus estados  iniciais 
  Movimento() { 
    posicao = new PVector(random(width), random(height)); 
    velocidade = new PVector(random(-2, 3), random(-3, 2)); 
  } 
// a fun√ß√£o atualizar guarda os comandos que permanecer√£o em 

constante execu√ß√£o 

  void atualizar() { 
    posicao.add(velocidade); 
  } 
// a fun√ß√£o desenhar guarda os comandos que fazem com o objeto 

seja desenhado na tela 

  void desenhar() { 
    stroke(0); 
    strokeWeight(2); 
    fill(127); 
    ellipse(posicao.x, posicao.y, 48, 48); 
  } 
// a fun√ß√£o condicao guarda os comandos que fazem o objeto 
permanecer dentro da tela de execu√ß√£o 
  void condicao() { 
    if (posicao.x >= width) { 
      posicao.x = 0; 
    }  
    else if (posicao.x <= 0) { 
      posicao.x = width; 
    } 
    if (posicao.y >= height) { 
      posicao.y = 0; 
    }  
    else if (posicao.y <= 0) { 
      posicao.y = height; 
    } 
  } 
} 

C√≥digo 7: movimento com velocidade 

Alguns  dos  comandos  acima  j√°  foram  explicados  em  exemplos  anteriores, 

dispensando  coment√°-los  novamente.  Nos  limitaremos  a  comentar  os  comandos 

novos, ainda n√£o vistos anteriormente. 

O comando variavel = new Movimento() cria um objeto da classe Movimento. 

Uma  classe  descreve  o  comportamento,  as  a√ß√µes  e  o  estado  (valores  guardados) 

desse objeto. A vari√°vel criada nos dar√° acesso a todos os comportamentos inerentes 

ao  objeto  pertence  √†  classe  Movimento,  nesse  caso,  temos  uma  programa√ß√£o 

orientada  a  objeto.  Os  comandos  variavel.atualizar(),  variavel.desenhar()  e 

variavel.condicao(); significam que os comandos pertencentes a essas  tr√™s fun√ß√µes 
ser√£o aplicados ao objeto. 

 
 
 
 
 
48 

O  comando  posicao  =  newPVector(random(width),random(heigth)  );  significa 

que  o  vetor  localiza√ß√£o  √©  um  vetor  que,  por  meio  do  comando  random,  assume 

posi√ß√µes  aleat√≥rias  (n√£o  definidas)  instant√¢neas  dentro  da  tela  de  execu√ß√£o,  e  o 

comando  velocidade  =  newPVector(random(-2,3),random(-3,2))  significa  que  a 

velocidade com que a bola se movimenta na tela se alterna entre valores aleat√≥rias 

que variam entre -2 e 3 em rela√ß√£o √† horizontal e entre -3 e 2 em rela√ß√£o √† vertical.  

Cabe  ressaltar,  que  todos os  comandos  podem  estar dentro de  uma  mesma 

pasta, ou pode ser criada uma pasta adicional que conter√£o a classe movimento com 

seus respectivos comando. (ver figura 21). 

Figura 21. Bola em movimento segundo uma velocidade atribu√≠da a ela. Fonte: autor da pesquisa. 

2.6.2  Aplica√ß√£o da acelera√ß√£o ao objeto 

O exemplo anterior ser√°, agora, tratado de maneira a ser introduzida no objeto 

(bola) uma acelera√ß√£o fazendo com que seu movimento se aproxime do mundo real 

ao nosso redor. A defini√ß√£o de acelera√ß√£o que ser√° usada aqui √© a taxa de varia√ß√£o 

da velocidade, que por sua vez √© a taxa de mudan√ßa de localiza√ß√£o da bola. Faremos 

 
 
 
 
 
 
49 

com que a acelera√ß√£o afete a velocidade e essa por sua vez, afete a localiza√ß√£o da 

bola. Observe: 

Movimento o;  
void setup() { 
  size(800,600); 
  smooth(); 
  o = new Movimento();  
} 
void draw() { 
  background(255); 
  o.atualizar(); 
  o.condicao(); 
  o.desenhar();  
}   
// na classe movimento ser√° encapsulada toda a l√≥gica da 
programa√ß√£o usada para dar movimento ao objeto 
class Movimento { 
  PVector posicao; 
  PVector velocidade; 
// cria-se um novo vetor que determinar√° a taxa de varia√ß√£o da 

velocidade, a acelera√ß√£o 

  PVector aceleracao; 
  float limitevelocidade; 
  Movimento() { 
    posicao = new PVector(width/2, height/2); 
    velocidade = new PVector(0, 0); 
    aceleracao = new PVector(0.1, -0.01); 
    limitevelocidade = 10; 
  } 
  void atualizar() { 
    velocidade.add(aceleracao); 
    velocidade.limit(limitevelocidade); 
    posicao.add(velocidade); 
  } 
  void desenhar() { 
    stroke(0); 
    strokeWeight(2); 
    fill(127); 
    ellipse(posicao.x, posicao.y, 48, 48); 
  } 
  void condicao() { 
    if (posicao.x > width) { 
      posicao.x = 0; 
    }  
    else if (posicao.x < 0) { 
      posicao.x = width; 
    } 
    if (posicao.y > height) { 
      posicao.y = 0; 
    }  
    else if (posicao.y < 0) { 
      posicao.y = height; 
    } 
  } 
} 

C√≥digo 8: movimento com acelera√ß√£o 

 
50 

Figura 22. Bola se movimentando sob efeito de uma acelera√ß√£o. Fonte: autor da pesquisa. 

Veja √†s descri√ß√µes dos comandos (novos). Inicialmente s√£o acrescentadas as 

vari√°veis acelera√ß√£o (Pvector  aceleracao;) e limite do aumento da velocidade (float 

limitevelocidade;),  al√©m  das  j√°  existentes.  Quando  se  adiciona  a  velocidade  √† 

acelera√ß√£o  por  meio  do  comando  (velocidade.add(aceleracao))  colocando-o  na 

fun√ß√£o  atualizar(),  faz-se  com  que  a  velocidade  da  bola  fique  variando.  Para  cada 

nova atualiza√ß√£o da soma do vetor velocidade com o vetor acelera√ß√£o, temos uma 

nova  velocidade  para  a  bola  em  movimento,  que  por  sua  vez  ser√°  adicionada 

novamente √† acelera√ß√£o, e obtida uma nova velocidade, e assim por diante; assim, a 

velocidade tende a aumentar a cada vez que esse comando √© executado, e como a 

soma tende a aumentar, o movimento da bola tamb√©m aumentar√° at√© atingir o limite 

imposto pelo comando limilevelocidade;.  

De  maneira  an√°loga  aos  exemplos  anteriores,  os  comandos  constantes  na 

fun√ß√£o  void  condicao()  fazem  com  que  o  movimento  da  bola  se  limite  √†  tela,  n√£o 

ultrapassando as bordas da mesma.  

2.6.3  Objeto seguindo o mouse 

 
 
 
 
51 

Por  √∫ltimo,  ser√°  trabalhada  a  interatividade  com  acelera√ß√£o.  Tentaremos 

mostrar algo mais complexo, calculando dinamicamente a acelera√ß√£o de um objeto 

por meio de regras declaradas por meio do algoritmo acelere para o mouse. Quando 

se quer calcular um vetor com base em regras ou f√≥rmulas, deve-se conhecer duas 

grandezas: magnitude e dire√ß√£o. Em se tratando de dire√ß√£o, o vetor acelera√ß√£o deve 

apontar  da  localiza√ß√£o  do  objeto  em  dire√ß√£o  ao  local  do  mouse.  Veja  a  ilustra√ß√£o 

abaixo: 

A ilustra√ß√£o mostra um PVector apontando da localiza√ß√£o do movimentador at√© 

mouse. O comando que devemos usar dever√° decidir com que rapidez o objeto deve 

acelerar  em  dire√ß√£o  ao  mouse.  Se  no  exemplo  anterior  tomarmos  a  fun√ß√£o  void 

atualizar() como se segue abaixo, tem-se a bola seguindo o mouse. Lembrando que 

comando ‚Äúlimitevelocidade‚Äù diz com que velocidade a bola deve seguir o mouse. Veja: 

Movimento o; 
void setup() { 
  size(800,600); 
  smooth(); 
  o = new Movimento();  
} 
void draw() { 
  background(255); 
   o.atualizar(); 
   o.desenhar();  
} 
// Na classe movimento, teremos os comandos abaixo: 
class Movimento { 
  PVector posicao; 
  PVector velocidade; 
  PVector aceleracao; 
   float limitevelocidade; 
  Movimento() { 
   posicao = new PVector(width/2,height/2); 
    velocidade = new PVector(0,0); 
// limita-se a velocidade com o objeto deve seguir o mouse por meio 
de uma vari√°vel criada para esse fim 
    limitevelocidade = 5; 
  } 
  void atualizar() { 
    PVector mouse = new PVector(mouseX,mouseY); 
    PVector aceleracao = PVector.sub(mouse,posicao); 

 
 
    
52 

 velocidade.add(aceleracao); 
 velocidade.limit(limitevelocidade); 
    posicao.add(velocidade); 
  } 
  void desenhar() { 
    stroke(0); 
    strokeWeight(2); 
    fill(127); 
    ellipse(posicao.x,posicao.y,48,48); 
  } 
} 

C√≥digo 9: objeto seguindo o mose 

Figura 23. Seguindo o mouse. Fonte: autor da pesquisa. 

 No exemplo anterior, foi visto como calcular uma acelera√ß√£o din√¢mica por meio 

de um vetor apontando de um ponto na tela para o local do mouse. A partir de agora 

ser√° formalizado o conceito de uma for√ßa e sua rela√ß√£o com acelera√ß√£o.  

2.7  FOR√áAS E LEIS DE NEWTON 

 
 
 
 
 
 
53 

A defini√ß√£o de for√ßa que usaremos √© mais formal que a usualmente usada no 

mundo real, e vem das leis do movimento de Isaac Newton. Uma for√ßa √© um vetor que 

faz com que um objeto provido de massa se movimente.  

A primeira lei de Newton, ou princ√≠pio da in√©rcia, diz que um objeto em repouso 

permanece  em  repouso,  e  um  objeto  em  movimento  permanece  em  movimento 

uniforme se nenhuma for√ßa o afetar. No mundo de processamentos pode-se afirmar 

a primeira lei de Newton  da seguinte forma: a velocidade de PVector de um objeto 

permanecer√°  constante  se  estiver  em  um  estado  de  equil√≠brio.  A  terceira  lei  de 

Newton, ou princ√≠pio da a√ß√£o e rea√ß√£o, diz que para cada a√ß√£o existe uma rea√ß√£o, ou 

seja, for√ßas sempre ocorrem em pares, as duas for√ßas s√£o de igual intensidade, mas 

em sentidos opostos. 

Em processamento, na terceira lei de Newton, se for calculado um PVector f 

que √© uma for√ßa de um objeto A em um objeto B, deve ser tamb√©m aplicada a for√ßa ‚Äì 

Pvector.mult(f,-1) - que B exerce no objeto A. Nesse caso, est√° sendo feito com que 

a  mesma  for√ßa  que  o  corpo  A  aplica  em  B,  seja  aplicada  por  B  em  A,  na  mesma 

dire√ß√£o, mas em sentidos opostos, causando assim, uma rea√ß√£o. 

A segunda lei de Newton declara que for√ßa √© igual ao produto da massa pela 

acelera√ß√£o.  Essa  √©  a  lei  mais  importante  para  essa  nossa  etapa  da  aplica√ß√£o  dos 

vetores. A acelera√ß√£o √© diretamente proporcional √† for√ßa e inversamente proporcional 

√†  massa.  Isso  significa  que  se  voc√™  empurrar  um  objeto,  quanto  mais  forte  voc√™ 

empurrar,  mais  r√°pido  ele  se  mover√°  (acelerar√°).  Quanto  maior  for  o  objeto,  mais 

devagar  ele  se  mover√°.  Vale  lembrar  que,  como  visto  anteriormente,  a  posi√ß√£o  √© 

ajustada por velocidade e a velocidade por acelera√ß√£o.  

Peso vs. Massa 

ÔÉò  A massa de um objeto √© uma medida da quantidade de mat√©ria no 

objeto  (medida  em  quilogramas).  Quanto  maior  a  massa  de  um 

objeto, maior ser√° a dificuldade de faz√™-lo permanecer em repouso 

ou em movimento. 

 
 
 
54 

ÔÉò  O  peso,  embora  muitas  vezes  confundido  com  massa,  √© 

tecnicamente  a  for√ßa  de  atra√ß√£o  entre  esse  objeto  e  o  planeta.  O 

peso varia de acorda com a massa do corpo e da gravidade local. Da 

segunda lei de Newton, podemos calcul√°-lo como tempos de massa 

da  acelera√ß√£o  da  gravidade  (p  =  m  *  g).  O  peso  √©  medido  em 

newtons. 

2.7.1  Gravidade aplicada a um objeto 

O  exposto  acima  ser√°  tratado  por  meio  de  exemplos  que  nos  permitam 

compreender melhor: 

//  como  visto  anteriormente  cria-se  vari√°vel  que  ser√°  usada  para  cria  o 
objeto 

Movimento o; 
void setup() { 
  size(800,600); 
  smooth(); 
// use a vari√°vel para criar o objeto 
  o = new Movimento();  
} 
void draw() { 
  background(255); 
//Fa√ßa duas for√ßas. 
   PVector vento = new PVector(0.01,0); 
  PVector gravidade = new PVector(0,0.1); 
// aplique as for√ßas ao objeto 
  o.applyForce(vento); 
  o.applyForce(gravidade); 
// aplique os commandos  das fun√ß√µes atualizar, desenhar e condicao 

ao objeto 

  o.atualizar(); 
  o.desenhar(); 
  o.condicao(); 
} 
//Nessa exemplo temos dois objetos novos (at√© aqui ainda n√£o vistos), 
um  vetor  vento  (vento)  que  est√°  atuando  na  horizontal,  e  um  vetor 
gravidade  (gravidade)  que  nesse  caso,  atua  na  vertical.  Na  classe 
movimento seguem os comandos: 
class Movimento { 
  PVector posicao; 
  PVector velocidade; 
  PVector aceleracao; 
//O objeto agora tem massa! 
  float massa; 
  Movimento() { 

 
 
 
 
 
 
 
55 

//A massa dos objetos pode assumir qualquer valor, voc√™ √© quem decide 
isso.  Se  chamarmos  a  massa  apenas  de  m,  as  massas  dos  objetos 
assumir√£o 
//dimens√µes 
diferentes. 
    massa = 1; 
//  defina-se  as  coordenadas  dos  vetores  posi√ß√£o,  velocidade  e 

diferentes, 

portanto, 

valores 

ter√£o 

aceleracao 

    posicao = new PVector(30,30); 
    velocidade = new PVector(0,0); 
    aceleracao = new PVector(0,0); 
  } 
//Segunda lei de Newton. 
  void applyForce(PVector forca) { 
//Receba uma for√ßa, divida em massa e adicione a acelera√ß√£o. 
    PVector f = PVector.div(forca,massa); 
    aceleracao.add(f);     
  } 
  void atualizar() { 
//Movimentos que ser√£o atualizados instantaneamente. 
    velocidade.add(aceleracao); 
    posicao.add(velocidade); 
//Agora adicione limpando a acelera√ß√£o de cada vez! Esse comando faz-
se necess√°rio para que o vento e a gravidade n√£o se alterem no decorre 
do movimento em execu√ß√£o. 
    aceleracao.mult(0); 
  } 
  void desenhar() { 
    stroke(0); 
    fill(175); 
//Escalando o tamanho de acordo com a massa. 
    ellipse(posicao.x,posicao.y,massa*16,massa*16); 
  } 
//Um  pouco  arbitrariamente,  estamos  decidindo  que  um  objeto  √© 
refletido quando atinge as bordas de uma janela. 
  void condicao() { 
    if (posicao.x > width) { 
      posicao.x = width; 
      velocidade.x *= -1; 
    }  
else if (posicao.x < 0) { 
      velocidade.x *= -1; 
      posicao.x = 0; 
    } 
    if (posicao.y > height) { 
//Mesmo que voc√™ diga que n√£o deve tocar diretamente na localiza√ß√£o 
e  velocidade,  h√°  algumas  exce√ß√µes.  Aqui  est√°  sendo  feito  isso  como  uma 
maneira  r√°pida  e  f√°cil  de  reverter  a  dire√ß√£o  do  nosso  objeto  quando  ele 
atinge a borda. 

      velocidade.y *= -1; 
      posicao.y = height; 
    } 
} 

C√≥digo 10: vento e gravidade aplicados ao objeto 

 
56 

Figura 24. Objeto em movimento sob efeitos do vento e da gravidade. Fonte: autor da pesquisa. 

Para  dar  continuidade  √†  execu√ß√£o  dos  comandos,  cria-se  outra  pasta  (mas 

pode-se trabalhar com os comandos numa s√≥ pasta) clicando na seta que aponta para 

baixo, em seguida em nova aba, e nomeia-se a pasta que, nesse caso, ser√° chamada 

de movimento. Nessa pasta deve ser acrescentada toda a classe movimento (acima). 

Ser√£o  descritos  agora  algumas  fun√ß√µes  e  comandos  novos.  Dentro  da  classe 

Movimento acrescentou-se a vari√°vel massa (float massa). O valor dessa vari√°vel ir√° 

interferir  no  movimento  da  bola,  pois  quanto  maior  for  a  massa,  mais  lento  ser√°  o 

movimento da bola. Isso decorre do fato de se estar trabalhando, agora, com for√ßas, 

e para isso est√° sendo usado a segunda lei de Newton que diz que for√ßa √© o produto 

da massa pela acelera√ß√£o, no que resulta que a acelera√ß√£o √© o resultado da divis√£o 

da  for√ßa  pela  massa.  Por  esse  motivo,  quando  se  aumenta  o  valora  da  massa,  se 

diminui o valor da acelera√ß√£o (movimento).  

Em movimento(), deve ser definido o valor dessa massa. Uma fun√ß√£o de papel 

importante √© void applyForce(PVector forca). Essa fun√ß√£o recebe e aplica ao objeto 

as for√ßas vento e gravidade (PVector forca). Em seguida criamos o vetor f que √© o 

resultado da divis√£o da for√ßa pela massa (f/m), isso tamb√©m decorre da segunda lei 

de Newton (a=f/m).  

 
 
 
 
57 

Para  perfeita  execu√ß√£o  do  comando,  essa  for√ßa  f  deve  ser  adicionada  √† 

acelera√ß√£o,  quando  feito  isso,  estar√°  se  adicionando  √†  acelera√ß√£o  uma  for√ßa  na 

horizontal (vento) e uma for√ßa na vertical (gravidade). Esse comando faz com que a 

bola execute movimentos na horizontal e na vertical (movimento sinuoso, parab√≥lico). 

A acelera√ß√£o deve ser multiplicada por zero para que tanto a gravidade como o vento 

permane√ßam  constantes,  pois  como  a  velocidade  √©  adicionada  √†  acelera√ß√£o  e  a 

posi√ß√£o √† velocidade, a cada instante a acelera√ß√£o deve ser zerada para n√£o implicar 

na varia√ß√£o do vento e da gravidade, para que a velocidade permane√ßa constante. 

2.7.2  Gravidade aplicada a mais de um objeto 

No  exemplo  anterior,  foram  vistas  for√ßas  atuando  em  um  √∫nico  objeto,  mas 

pode-se  expandi-lo  adicionando  mais  objetos  (quantos  voc√™  quiser),  por  meio  do 

comando arrays, que estar√£o sob a a√ß√£o dessas for√ßas. Veja: 

// usa-se o comando array, abaixo, para adicionar quantos objetos se 

deseja 

Movimento[] variavel = new Movimento[20]; 
void setup() { 
  size(800,600); 
  smooth(); 
// os objetos s√£o inseridos no ambiente virtual por √≠ndices i, que 
variam de 0 ao n√∫mero m√°ximo de objetos criados 
  for (int i = 0; i < variavel.length; i++) { 
// os objetos s√£o criados contend massa e localiza√ß√£o inicial 
    variavel[i] = new Movimento(random(0.1,4),0,0);  
  } 
} 

void draw() { 
  background(255); 
  for (int i = 0; i < variavel.length; i++) { 
//  √©  necess√°rio  definir  vento  e  gravidade  como  vetores  e  criar  as 
coordenadas dos vetores vento e gravidade 
    PVector vento = new PVector(0.01,0); 
    PVector gravidade = new PVector(0,0.1); 

 
 
 
 
 
 
 
 
 
 
58 

// aplica-se as for√ßas vento e gravidade aos objetos e os comandos 
que far√£o com que os objetos se movimentem, sejam desenhados na tela 
de execu√ß√£o e permane√ßam dentro da mesma 
    variavel[i].applyForce(vento); 
    variavel[i].applyForce(gravidade); 
    variavel[i].atualizar(); 
    variavel[i].desenhar(); 
    variavel[i].condicao(); 
  } 
} 

C√≥digo 11: gravidades iguais aplicadas a v√°rios objetos 

Para trabalhar com dois ou mais objetos, devem-se iniciar os comandos com 

Movimento variaveis = new Movimento[quantidade de objetos], isso significa que est√° 

sendo criada uma vari√°vel, e essa vari√°vel representa os objetos da classe Movimento 

. A fun√ß√£o for (int i = 0; i < variaveis.length; i++) que est√° dentro da fun√ß√£o void setup 

diz que os objetos s√£o inseridos por √≠ndices i, que variam de 0 √† quantidade m√°xima 

de  objetos  inseridos  na  classe  Movimento.  No  comando  variaveis[i]  =  new 

Movimento(random(0.1,4),0,0); limita-se a massa do objeto aleatoriamente entre 0,1 

e 4 (qualquer valor nesse intervalo), e sua localiza√ß√£o inicial √© a posi√ß√£o (0,0). Vale 

observar  que  em  variaveis[i]  =  new  Movimento(random(0.1,4),0,0)  as  coordenadas 

s√£o (massa=random(0.1,4), posi√ß√£o.x = 0, posi√ß√£o.y = 0) 

A classe Movimento do exemplo de aplica√ß√£o de for√ßas com mais de um objeto, 

tem  apenas  um  item  a  mais  que  o  de  com  apenas  um  objeto,  √©  o  comando 

Movimento(float  m,  float  x  ,  float  y).  Nele  temos  as  vari√°veis  massa  (float  m)  e 

localiza√ß√£o em rela√ß√£o aos eixos x e y (float x, float y). 

 Depois que a matriz dos objetos √© declarada, criada e inicializada, os demais 

c√≥digos s√£o mais simples. S√£o dadas ao objetos as for√ßas do ambiente e, a partir da√≠, 

pode-se aproveitar o espet√°culo dos movimentos. 

 
59 

Figura 25. Gravidades iguais aplicadas a v√°rios objetos. Fonte: autor da pesquisa. 

2.7.3  Gravidade modelando uma for√ßa 

Anteriormente, foi visto algo totalmente impreciso. Quanto menor a massa do 

objeto, mais r√°pido ele cai, isso de acordo com a segunda lei de Newton, pois quanto 

menor  a  massa,  maior  a  acelera√ß√£o.  Mas  isso  n√£o  acontece  no  mundo  real.  Diz  a 

lenda que em 1589, Galileu subiu a torre de Pisa e de l√° soltou duas bolas de massas 

diferentes,  ambas  ca√≠ram  com  a  mesma  acelera√ß√£o  e  atingiram  o  solo  ao  mesmo 

tempo.  Por  que  isso?.  Adiante  ser√°  visto  que  a  for√ßa  da  gravidade  √©  calculada  em 

rela√ß√£o √† massa de um objeto. O exemplo abaixo, apresenta a gravidade escalonada 

por massa: 

Movimento[] variaveis = new Movimento[20]; 
void setup() { 
  size(800, 600); 
  smooth(); 
  for (int i = 0; i < variaveis.length; i++) { 
    variaveis[i] = new Movimento(random(1, 4), 0, 0); 
  } 
} 

 
 
 
 
 
60 

void draw() { 
  background(255); 
// S√£o criados os vetores que representam as for√ßas vento e gravidade, 
e a cada objeto s√£o aplicadas essas for√ßas vento e gravidade, 
  for (int i = 0; i < variaveis.length; i++) { 
    PVector vento = new PVector(0.01, 0); 
    PVector gravidade = new PVector(0, 0.1*variaveis[i].massa); 
    variaveis[i].applyForce(vento); 
    variaveis[i].applyForce(gravidade); 
// A todos os objetos s√£o aplicados os comandos constantes nas fun√ß√µes 
atualizar(), desenhar() e condicao(). 
variaveis[i].atualizar(); 
    variaveis[i].desenhar(); 
    variaveis[i].condicao(); 
  } 
} 

      C√≥digo 12: Gravidades aplicadas a v√°rios objetos variando de acordo com sua massa 

A classe acima √© id√™ntica √† classe do exemplo anterior, exceto pelo fato de que 

por meio da fun√ß√£o PVector gravidade = new PVector(0, 0.1*variaveis[i].massa); est√° 

atribu√≠do  gravidades  diferentes  a  cada  objeto.  Observe  que  a  gravidade  que  atua 

sobre cada objeto √© 0,1 vezes a massa desse objeto, e como as massas assumem 

valores aleat√≥rios (variaveis[i] = new Movimento(random(1, 4), 0, 0);) a gravidade, da 

mesma forma, assumir√° valores aleat√≥rios, com varia√ß√µes proporcionais √† varia√ß√£o 

da massa. 

Figura 26. Gravidades diferentes aplicadas a v√°rios objetos. Fonte: autor da pesquisa. 

 
 
 
 
 
61 

2.7.4  Atrito 

Em  f√≠sica,  atrito  pode  ser  definido  como  sendo  a  resist√™ncia  que  os  corpos 

op√µem quando se movem uns sobre outros. O atrito √© causado pelas irregularidades 

entre as superf√≠cies em contato. 

O atrito √© uma for√ßa que faz com que a energia total de um sistema diminua 

quando  um  objeto  est√°  em  movimento.  Suponha  que  voc√™  est√°  pilotando  uma 

motocicleta, para par√°-la voc√™ precisar√° acionar os freios. Os freios da moto usam o 

atrito  para  descarregar  o  movimento  dos  pneus.  Em  suma,  sempre  que  duas 

superf√≠cies entram em contato, h√° entre elas um atrito. (Ver figura 28). 

Figura 27. Atrito entre um corpo em movimento e sua superf√≠cie de apoio. Fonte: SHIFFMAN 2012. 

Observe,  na  figura  27,  que  o  vetor  velocidade  e  o  vetor  atrito  tem  mesma 

dire√ß√£o e sentidos opostos. Esse fato √© importante, pois ser√° usado nos comandos 

para aplica√ß√£o da for√ßa atrito no movimento de um objeto.  

Para que se possa aplicar o atrito a um movimento, deve-se criar uma c√≥pia do 

vetor velocidade por meio do comando PVector atrito = velocidade.get(); e multiplic√°-

lo por -1, isso far√° com que esse vetor tenha sentido oposto ao do vetor velocidade, 

dificultando assim, o movimento do objeto. Para que o sentido do movimento n√£o seja 

invertido,  √©  necess√°rio  normalizar  esse  vetor  e  em  seguida,  aplicar  o  comprimento 

desejado  a  ele.  Deve-se  tamb√©m,  criar  uma  vari√°vel  que  atribua  ao  vetor  um 

coeficiente de atrito, quanto maior for esse valor, maior ser√° o atrito entre o objeto e a 

superf√≠cie sobre a qual est√° deslizando. Por ser trabalhado no mundo virtual, pode-se 

atribuir valores arbitr√°rios a esse coeficiente, com base na quantidade de atrito que se 

quer simular. Observe o exemplo introduzido por meio dos comandos abaixo: 

 
 
 
 
 
62 

Movimento[] variaveis = new Movimento[5]; 
void setup() { 
  size(800, 600); 
  randomSeed(1); 
  smooth(); 
  for (int i = 0; i < variaveis.length; i++) { 
    variaveis[i] = new Movimento(random(1, 4), random(width), 0); 
  } 
} 
void draw() { 
  background(255); 
  for (int i = 0; i < variaveis.length; i++) { 
    PVector vento = new PVector(0.01, 0); 
//  aqui  est√£o  sendo  atribu√≠dos  valores  aleat√≥rios  √†s  massas  dos 

objetos 

    PVector gravidade = new PVector(0, 0.1*variaveis[i].massa); 
// cria-se o coeficiente de atrito, valor que representar√° o atrito 
entre cada objeto e a superf√≠cie com a qual mant√©m contato 
    float c = 0.05; 
// O vetor atrito √© uma c√≥pia do vetor velocidade, com mesma dire√ß√£o, 

mas sentido contr√°rio 

    PVector atrito = variaveis[i].velocidade.get(); 
// inverte-se o sentido do vetor atrito 
    atrito.mult(-1);  
// torne a dimens√£o do vetor atrito igual a 1 
    atrito.normalize(); 
// aplique o coeficiente de atrito ao vetor atrito 
    atrito.mult(c); 
// aplique as for√ßas de atrito, vento e gravidade aos objetos, e os 
comandos contantes nas fun√ß√µes atualizar, desenhar e condi√ß√£o. 
    variaveis[i].applyForce(atrito); 
    variaveis[i].applyForce(vento); 
    variaveis[i].applyForce(gravidade); 
    variaveis[i].atualizar(); 
    variaveis[i].desenhar(); 
    variaveis[i].condicao(); 
  } 
} 

C√≥digo 13: atrito 

Observe que foram aplicadas, assim como no exemplo anterior, as for√ßas vento 

e gravidade acrescidos da for√ßa atrito. O comando atrito.mult(-1); significa que o vetor 

atrito  dificulta  o  movimento  do  objeto,  imprimindo  uma  for√ßa  contr√°ria  a  esse 

movimento, pois ele √© uma c√≥pia do vetor velocidade, mas com o sentido contr√°rio. 

 
63 

Figura 28. Atrito aplicado a objetos em movimento. Fonte: autor da pesquisa. 

Com  esse  exemplo,  ser√°  encerrada  essa  se√ß√£o  sobre  aplica√ß√£o  de  for√ßas. 

Cabe  aqui  ressaltar  que  a  aplica√ß√£o  de  vetores,  como  for√ßas  que  atuam  sobre  um 

corpo (objeto) vai al√©m do exposto aqui. Essa aplica√ß√£o foi exposta de forma sucinta 

por  meio  da  ferramenta  processing  vers√£o  3.3.5.  Alguns  comandos  usados  nesse 

programa podem ser escritos em portugu√™s, outros, que fazem parte do pacote padr√£o 

do processing 3.3.5, n√£o podem ser modificados.  

A pr√≥xima etapa desse trabalho tratar√° da metodologia da aplica√ß√£o, seguida 

dos resultados e discuss√µes, e considera√ß√µes finais. 

 
 
 
 
 
 
 
 
 
64 

3  METODOLOGIA 

Os  m√©todos  de  investiga√ß√£o  utilizados  na  presente  pesquisa  foram  o 

quantitativo e qualitativo, para Prodanov e Freitas (2013), este √∫ltimo tem como ra√≠zes 

filos√≥ficas  a  fenomenologia  e  a  intera√ß√£o  simb√≥lica,  e  o  m√©todo  qualitativo  tem  o 

m√©todo indutivo como m√©todo de an√°lise, dos quais as caracter√≠sticas s√£o descritas 

ou explicadas, ou seja, se foca no car√°ter subjetivo do objeto analisado em quest√£o, 

estudando as suas particularidades e experi√™ncias individuais.  

Na pesquisa qualitativa o conjunto inicial de categorias pode ser reexaminado 

e  modificado  sucessivas  vezes,  com  vistas  a  obter  ideias  e  resultados  mais 

abrangentes e significativos. Demo acrescenta que 

Os movimentos em torno da pesquisa qualitativa buscam confrontar-se com 

os  excessos  da  formaliza√ß√£o,  mostrando-nos  que  a  qualidade  √©  menos 

quest√£o de extens√£o do que de intensidade. Deix√°-la de fora seria deturpa√ß√£o 

da realidade.‚Äù (DEMO, 2000, p. 29). 

A  pesquisa  quantitativa  considera  que  tudo  pode  ser  quantific√°vel,  o  que 

significa traduzir em n√∫meros opini√µes e informa√ß√µes para classific√°-las e analis√°-las. 

Tem como ra√≠zes filos√≥ficas o positivismo, o empiricismo e o l√≥gico; e como coleta de 

dados,  instrumentos  manipulados  como  escala,  testes,  question√°rios  e  etc.  Seu 

m√©todo de an√°lise √© o dedutivo, por meio do m√©todo estat√≠stico.   Marconi e Lakato 

acrescentam que 

As  t√©cnicas  rigorosas  de  amostragem  t√™m  o  objetivo  de  possibilitar  a 

generaliza√ß√£o das descobertas a que se chega pela experi√™ncia. Por sua vez, 

para que possam ser descritas quantitativamente, as vari√°veis relevantes s√£o 

especificadas.  Os  diversos  tipos  de  estudos  experimentais  podem  ser 

desenvolvidos  tanto  "em  campo",  ou  seja,  no  ambiente  natural,  quanto  em 

laborat√≥rio,  onde  o  ambiente  √©  rigorosamente  controlado.  (MARCONI  e 

LAKATO, 2003, p. 188) 

A escolha dos m√©todos quantitativos e qualitativos aplicados a este trabalho, 

se  devem;  primeiro,  ao  fato  de  se  necessitar  quantificar  (por meio  dos  gr√°ficos)  os 

 
 
 
 
 
 
 
 
65 

dados  coletados  pelos  question√°rios  fechados  que  tem  como  objetivo  trabalhar  as 

opera√ß√µes com vetores (muito citadas anteriormente) e; julgar a efic√°cia de m√©todos 

de  ensino  voltados  a  trabalhar  a  aplica√ß√£o  de  conte√∫dos  matem√°ticos  por meio  da 

contextualiza√ß√£o dos mesmos, e sua rela√ß√£o com outras √°reas.  

A  ordem  de  execu√ß√£o  do  presente 

trabalho  seguiu  uma  sequ√™ncia 

desenvolvida em quatro etapas, a saber: 

1.  Avalia√ß√£o  diagn√≥stica  que  permitiu  fazer  uma  an√°lise  pr√©via  sobre  o 

conhecimento dos alunos acerca do conte√∫do vetores; 

2.  Constru√ß√£o de exemplos que envolveram a aplica√ß√£o de vetores para simular 

movimentos de objetos em ambientes virtuais; 

3.  Avalia√ß√£o  intermedi√°ria  simulando  movimentos  de  objetos  por  meio  da 

manipula√ß√£o dos comandos; 

4.  Avalia√ß√£o  final,  baseada  em  um  question√°rio  para  julgar  a  efic√°cia  do 

desenvolvimento  desse  trabalho  e  sua  import√¢ncia  para  o  aprendizado  do 

aluno, e sua contribui√ß√£o para o ensino do estudo dos vetores. 

O presente trabalho teve como p√∫blico 10 discentes do curso de licenciatura 

em matem√°tica de  uma  institui√ß√£o  de  ensino  superior da  cidade  de  S√£o  Raimundo 

Nonato-PI (os que j√° haviam cursado a disciplina geometria anal√≠tica) e foi realizado 

em dois encontros de 4h, cada. 

O desenvolvimento da primeira etapa, deu √™nfase √†s opera√ß√µes com vetores, 

em  especial  √†quelas  que  s√£o  usadas  para  dar movimento  a  objetos  em  ambientes 

virtuais e √†s for√ßas, que s√£o grandezas vetoriais (velocidade, acelera√ß√£o e gravidade). 

O estudo foi introduzido por meio de uma avalia√ß√£o diagn√≥stica (Ap√™ndice A) com os 

discentes  que  participaram  do  desenvolvimento  desse  trabalho.  Os  participantes 

foram avaliados por meio de sete quest√µes objetivas quantitativas que versaram sobre 

opera√ß√µes de adi√ß√£o e subtra√ß√£o de vetores, m√≥dulo de um vetor, norma de um vetor, 

vetor unit√°rio e multiplica√ß√£o de um vetor por um escalar, e tr√™s quest√µes subjetivas 

qualitativas abertas de cunho investigativo quanto ao julgamento de cada um sobre a 

import√¢ncia do estudo e aplica√ß√£o de vetores geom√©tricos.  

Essa  avalia√ß√£o  investigativa  permitiu,  primeiramente,  avaliar  o  n√≠vel  de 

conhecimento  de  cada  um  sobre  o  conte√∫do  em  quest√£o,  facilitando  assim  o 

desenvolvimento do trabalho, tendo em vista o direcionamento das d√∫vidas a serem 

 
66 

sanadas  por  meio  de  explica√ß√µes  b√°sicas,  mostrar  aos  alunos  algumas  √°reas  nas 

quais se podem aplicar vetores, e lev√°-los associar vetores com algo √† sua volta. Para 

Yin (2005), ‚Äúa investiga√ß√£o √© um m√©todo que abrange tudo, desde o planejamento at√© 

os registros desenvolvidos pelos alunos durante a pr√°tica pedag√≥gica fundamentada‚Äù.  

Colhidos os dados, por meio da avalia√ß√£o diagn√≥stica e investigativa, foi dado 

in√≠cio  √†  segunda  etapa  desse  trabalho  por meio  da  exposi√ß√£o  do  conte√∫do  aos  10 

alunos que participaram do presente trabalho. Foram recapitulados o que √© vetor e 

suas caracter√≠sticas, e as opera√ß√µes com vetores por meios de exemplos simples e 

detalhados. Feito isso, foram mostradas aos alunos algumas √°reas de aplica√ß√£o de 

vetores  ou de  grandezas  vetoriais.  Concluiu-se  a  segunda  etapa quando  os  alunos 

passaram a trabalhar a aplica√ß√£o dos vetores geom√©tricos para simular movimentos 

de objetos em ambiente virtual por meio de comandos espec√≠ficos usados para tal fim. 

Para exposi√ß√£o e constru√ß√£o dos exemplos foi usado o programa processing 

3.3.5. Esse programa usa a linguagem de programa√ß√£o Java. Quando da constru√ß√£o 

dos  exemplos  os  alunos  estudaram,  de  forma  n√£o  aprofundada,  o  significado  dos 

comandos:  a  cria√ß√£o  dos  objetos  e  das  vari√°veis,  a  cria√ß√£o  das  fun√ß√µes  e  os 

comandos pertencentes a elas.  

Como  o  objetivo  do  trabalho  √©  mostrar  a  aplica√ß√£o  dos  vetores  para  simular 

movimentos  de  objetos  em  um  ambiente  virtual,  essa  parte  foi  melhor  exposta  e 

detalhada por meio das descri√ß√µes dos comandos que envolvem as opera√ß√µes com 

vetores, e como essas opera√ß√µes fazem com que o objeto se movimente.  

Os  discentes  puderam  compreender  como  a  posi√ß√£o  do  objeto  na  tela  do 

computador pode mudar v√°rias vezes, fazendo-o se movimentar pela tela, por meio 

da soma de vetores (posi√ß√£o mais velocidade) e como sua velocidade pode aumentar 

ou diminuir por meio da mesma opera√ß√£o entre os vetores velocidade e acelera√ß√£o. 

Foram tamb√©m simulados os movimentos dos objetos sob a√ß√£o de for√ßas como vento 

(que atua na horizontal) e gravidade (que atua na vertical), tudo por meio de opera√ß√µes 

com vetores. Os discentes tamb√©m estudaram como calcular a magnitude de um vetor 

por meio das opera√ß√µes de adi√ß√£o e subtra√ß√£o (realizados no ambiente virtual).  

A terceira etapa da execu√ß√£o deu-se por meio de uma avalia√ß√£o intermedi√°ria 

com cinco quest√µes que permitiram aos alunos manipular o movimento do objeto na 

 
67 

tela.  Os  discentes  substitu√≠ram  comando  de  adi√ß√£o  por  subtra√ß√£o  de  vetores  (em 

algumas  opera√ß√µes),  mudaram  o  valor  de  alguns  comandos,  como  por  exemplo,  a 

velocidade do objeto quando esse colide com a borda da janela da tela de execu√ß√£o, 

e  detalharam  a  fun√ß√£o  de  alguns  comandos  como  velocidade.add(aceleracao), 

velocidade.limit(limitevelocidade) e posicao.add(velocidade).  

Por fim, os alunos foram submetidos a um question√°rio com perguntas abertas 

que  lhes  permitiram  mostrar  seu  grau  de  compreens√£o  sobre  a  fun√ß√£o  dos  vetores 

dentro  da  l√≥gica  de  programa√ß√£o  usada  para  dar  movimentos  a  objetos  em  um 

ambiente  virtual;  e,  se  o  ensino  da  matem√°tica,  quando  trabalhado  de  forma 

contextualizada, torna-se mais eficaz (Ap√™ndice B). 

A  realiza√ß√£o  deste  trabalho  com  alguns  alunos  do  curso  de  licenciatura  em 

matem√°tica, permitiu observar que os discentes se envolveram mais efetivamente por 

aprender  matem√°tica,  por  conhecerem  sua  aplica√ß√£o  pr√°tica,  e  isso  favoreceu,  por 

contribuir  positivamente,  no  ensino  do  conte√∫do  vetores. Alguns  discentes  puderam 

melhorar seus conhecimentos por meio de observa√ß√µes simples, como por exemplo, 

quando se somam sucessivas vezes dois vetores encontrando sempre um novo vetor, 

puderam notar que o conjunto de vetores resultantes dessa soma, forma o conjunto de 

vetores  linearmente  dependente,  al√©m  de  promover  no  objeto,  dentro  do  ambiente 

virtual, um movimento retil√≠neo uniforme. 

 
 
 
 
 
 
 
 
 
 
 
4  RESULTADOS E DISCUSS√ïES 

68 

Durante  o  primeiro  encontro  foi,  inicialmente,  realizada  uma  avalia√ß√£o 

diagn√≥stica com quest√µes voltadas a opera√ß√µes com vetores (essas opera√ß√µes se 

fazem necess√°rias para que o aluno entenda como programar os vetores de modo 

a alcan√ßar os objetivos deste trabalho). Essa avalia√ß√£o tamb√©m buscou  identificar 

se  aluno  conhece  alguma  aplica√ß√£o  pr√°tica  de  vetores,  se  considera  relevante  o 

estudo dos vetores no curso de licenciatura em matem√°tica e se durante o curso, na 

disciplina  geometria  anal√≠tica,  foi  exposto  a  ele  onde  seriam  aplicados  os 

conhecimentos adquiridos, assim como a rela√ß√£o do conte√∫do vetores com outras 

√°reas do conhecimento.  

As respostas dadas pelos alunos permitiram direcionar o estudo dos vetores 

por meio de exemplos voltados a sanar as d√∫vidas iniciais que os mesmos tinham 

acerca de algumas opera√ß√µes e suas representa√ß√µes geom√©tricas. Permitiu tamb√©m 

mostrar algumas rela√ß√µes que esse ramo da matem√°tica mant√©m com outras √°reas 

e algumas de suas aplica√ß√µes como c√°lculo da √°rea de um paralelogramo e o volume 

de  um  paralelep√≠pedo  por  meio  do  produto  vetorial  e  do  produto  misto, 

respectivamente.  

A  pesquisa  mostrou,  inicialmente,  que  maioria  dos  discentes  n√£o  conhecia 

nenhuma aplica√ß√£o pr√°tica dos vetores, consideram relevante o estudo do conte√∫do 

em quest√£o, mas n√£o souberam justificar o porqu√™. A maioria tamb√©m relatou que 

durante o per√≠odo em que cursaram a disciplina geometria anal√≠tica n√£o foi mostrada 

nenhuma aplica√ß√£o pr√°tica dos vetores ou sua rela√ß√£o com outras √°reas. Os dados 

est√£o registrados nos gr√°ficos a seguir: 

 
 
 
 
 
 
 
 
69 

Gr√°fico 1. Resposta dos discentes ao question√°rio sobre aplica√ß√£o de vetores 

Voc√™s conhecem alguma aplica√ß√£o pr√°tica de vetores 
geom√©tricos?

10%

10%

80%

sim

n√£o respondeu

n√£o

O Gr√°fico 1 tabula os dados da pesquisa referentes ao question√°rio aberto feito 

com  os  discentes.  Dos  dados  obtidos,  podemos  constatar  que  a  maioria  n√£o 

conhecia nenhum ramo da aplica√ß√£o dos vetores geom√©tricos, isso se deve ao fato 

dos  mesmos  terem  sido  submetidos  a  metodologias  de  ensino  que  n√£o  lhes 

permitiram associar a teoria com a pr√°tica. Um aluno relatou conhecer a aplica√ß√£o 

dos vetores no campo da computa√ß√£o gr√°fica, por ter participado de um minicurso 

onde foi abordada tal aplica√ß√£o, mas durante o curso de licenciatura em matem√°tica, 

quando cursou a disciplina geometria anal√≠tica, n√£o viu nenhuma aplica√ß√£o pr√°tica 

do conte√∫do vetores. 

 
 
 
 
 
 
 
 
70 

Gr√°fico 2.  Reposta dos discentes ao question√°rio sobre a relev√¢ncia do estudo 

dos vetores no curso de licenciatura em matem√°tica. 

Voc√™s consideram relevante o estudo dos vetores no 
curso de licenciatura? justifique sua resposta.

10%

90%

sim sem justificativa

sim com justificativa

Conforme  o  resultado  apresentado  no  Gr√°fico  2,  a  maioria  dos  discentes  do 

curso de licenciatura julgam importante o estudo dos vetores no curso de licenciatura, 

mesmo  sem  saberem  justificar  o  porqu√™.  Isso,  certamente  se  deve  ao  fato  de  n√£o 

conhecerem a aplica√ß√£o pr√°tica dos mesmos, evidenciando que, por n√£o conhecerem 

nenhuma  aplica√ß√£o  dos  vetores  geom√©tricos,  n√£o  sabem  relatar  a  import√¢ncia  de 

estuda-los, mas apenas que √© importante faz√™-lo. 

 
 
 
 
 
 
 
 
 
 
 
Gr√°fico 3. Resposta dos discentes quando questionados se o professor da disciplina 

geometria anal√≠tica mostrou onde eles aplicariam vetores. 

71 

Durante o curso de geometria anal√≠tica, foi 
mostrado a voc√™ onde aplicaria vetores, ou sua 
rela√ß√£o com outras √°reas?

10%

30%

60%

sim

n√£o

n√£o respondeu

O Gr√°fico 3 mostra, por meio da tabula√ß√£o dos dados, um dos motivos pelos 

quais muitos dos discentes do curso de licenciatura em matem√°tica n√£o conseguem 

associar a teoria com a pr√°tica no ensino da dessa disciplina e, consequentemente 

n√£o levam essa pr√°tica para suas salas de aulas quando passam a exercer a fun√ß√£o 

de docente.   

As  respostas  ao  question√°rio  representado  no  gr√°fico  3,  dadas  por  alguns 

discentes, divergem. O aluno X relatou que, durante as aulas de geometria anal√≠tica, 

n√£o  foi  mostrada  a  aplica√ß√£o  pr√°tica  de  vetores,  apenas  a  teoria.  O  aluno  Y 

acrescentou  que  o  professor  da  disciplina  fez  coment√°rios  sobre  a  aplica√ß√£o  de 

vetores na computa√ß√£o gr√°fica, mas n√£o citou exemplos para mostrar tal aplica√ß√£o. O 

aluno Z relatou em sua resposta que foi mostrada a aplica√ß√£o de vetores, mas n√£o 

descreveu essa aplica√ß√£o. 

As afirma√ß√µes dos alunos diferem, pelo fato de alguns deles terem cursado a 

disciplina em quest√£o, em turmas diferentes (alguns perderam a disciplina e tiveram 

que  cursar  novamente);  assim,  foram  submetidos  a  metodologias  de  ensino  que 

diferem uma da outra. 

 
 
 
72 

A  presente  pesquisa  mostra  uma  das  in√∫meras  formas  de  atividades 

alternativas para melhorar o ensino da matem√°tica por meio da sua aplica√ß√£o pr√°tica. 

Durante  o  desenvolvimento  desse  trabalho,  ainda  na  primeira  etapa  descrita  na 

metodologia,  as  quest√µes  voltadas  a  c√°lculos  com  vetores  ajudaram  o  aluno  a 

compreender o que acontece nos ‚Äúbastidores‚Äù quando a bola est√° se movimentando 

pela tela. 

O exemplos sobre o uso de vetores na programa√ß√£o para dar movimentos a 

objetos em ambientes virtuais, expostos aos discentes, levaram-nos a compreender 

qual o papel dos vetores dentro da programa√ß√£o Java, usados para dar movimentos 

aos objetos. O alunos puderam observar que atrav√©s da adi√ß√£o dos vetores posi√ß√£o 

e  velocidade  (posicao.add(velocidade)),  a  bola  ocupar√°  uma  nova  posi√ß√£o  sempre 

que esse comando for executado (v√°rias vezes seguidas), e que ao objeto podem-se 

imprimir 

for√ßas 

como 

a 

acelera√ß√£o 

(por  meio 

do 

comando 

velocidade.add(aceleracao)). 

Por  exemplo,  quando  se  adicionam,  na  programa√ß√£o,  o  comando 

(posicao.add(velocdade)),  e  √©  dada  ordem  para  que  o  programa  execute  esse 

comando  v√°rias  vezes  seguidas  (dentro  da  fun√ß√£o  draw),  at√©  que  seja  fechado  o 

programa, o que  est√° sendo feito, √© que est√° sendo criada uma nova posi√ß√£o para a 

bola sempre que esse comando √© executado; ou seja, o vetor posi√ß√£o √© somado ao 

vetor  velocidade  determinando  assim,  um  novo  vetor  posi√ß√£o  (onde  bola  estar√° 

localizada na tela); em seguida, essa nova posi√ß√£o √© novamente adicionada √† mesma 

velocidade gerando assim um novo vetor posi√ß√£o (e o objeto, no caso a bola, muda 

para essa nova localiza√ß√£o); e assim por diante. Assim, o objeto se movimentar√° pela 

tela assumindo novas posi√ß√µes sempre que o comando acima for executado.  

Por  outro  lado,  quando  se  insere  o  comando  velocidade.add(aceleracao)) 

(tamb√©m dentro da fun√ß√£o draw) o que est√° sendo feito, de fato, √© dando ordem ao 

programa para que fa√ßa a velocidade sofrer varia√ß√µes constantes seguidas, sempre 

que o comando for executado. Funciona da seguinte maneira: quando se soma o vetor 

velocidade  ao  vetor  acelera√ß√£o,  obt√©m-se  um  novo  vetor  velocidade,  quando  o 

comando √© novamente executado, obt√©m-se um novo vetor velocidade, e assim por 

diante.  Dessa  maneira  a  velocidade  tende  a  variar  (aumentar  ou  diminuir) 

infinitamente,  e  se  essa  varia√ß√£o  pode  ser  limitada  por  meio  de  outro  comando 

chamado, o velocidade.limit(limitevelocidade). 

 
73 

Os  exemplos  tamb√©m  trabalharam  a  cria√ß√£o  de  objetos,  classes,  vari√°veis  e 

fun√ß√µes, todos os comandos necess√°rios √† perfeita execu√ß√£o dos movimentos. 

A avalia√ß√£o intermedi√°ria (Ap√™ndice C) composta de tr√™s quest√µes (a terceira 

com  tr√™s  itens)  permitiu  verificar  a  aprendizagem  dos  alunos  acerca  do  conte√∫do 

trabalhado. A primeira quest√£o trata sobre o comando que determina qual a a√ß√£o do 

objeto quando esse colidir com as bordas da tela de execu√ß√£o. A segunda quest√£o, 

procura  saber  que  mudan√ßa  haver√°  com  o  movimento  do  objeto  se,  no  comando 

posicao.add(velocidade), o add for substitu√≠do por sub.  

E 

a 

terceira, 

pede 

a 

descri√ß√£o 

detalhada 

dos 

comandos 

velocidade.add(aceleracao), 

velocidade.limit(limitevelocidade) 

e 

posicao.add(velocidade). Os resultados est√£o descritos no gr√°fico 4. 

Gr√°fico  4.  Reposta  dos  discentes  √†  pergunta  voltada  √†  manipula√ß√£o  dos 

comandos que fazem o objeto se mover pela tela. 

100%

90%

80%

70%

60%

50%

40%

30%

20%

10%

0%

quest√£o 1

quest√£o 2

quest√£o 3

respondeu corretamente

n√£o respondeu corretamente

O Gr√°fico 4 mostra que 100% dos alunos responderam corretamente √† quest√£o 

2, e 90% responderam corretamente √†s quest√µes 1 e 3. Vale salientar que os alunos 

que n√£o responderam corretamente √†s quest√µes 1 e 3, n√£o o fizeram totalmente, ou 

seja, acertaram em parte as fun√ß√µes dos comandos. O aluno A relatou que, na quest√£o 

1,  ao  colidir  com  as  bordas  da  tela  de  execu√ß√£o,  o  objeto  reflete  o  sentido  do  seu 

movimento, n√£o relatando que a velocidade ir√° dobrar a cada vez que acontecer essa 

colis√£o. O aluno B n√£o descreveu corretamente, na quest√£o 3, a fun√ß√£o do comando 

velocidade. limit(limitevelocidade). 

 
74 

A execu√ß√£o do presente trabalho foi conclu√≠da com um question√°rio com duas 

perguntas  abertas  (Ap√™ndice  D). A  primeira,  questiona  os  alunos  sobre  a  efic√°cia 

deste trabalho para compreens√£o da aplica√ß√£o dos vetores abordada nesse projeto; 

e a segunda, se os mesmos julgam mais prazeroso, satisfat√≥rio e eficaz o ensino da 

matem√°tica quando seguido de aplica√ß√µes, aquilo que se est√° aprendendo em sala 

de aula, passando do campo te√≥rico para o pr√°tico, n√£o tratando a matem√°tica como 

uma  ci√™ncia  isolada.  Todos  os  discentes  responderam  √°s  quest√µes  contidas  no 

referido question√°rio. 

Levando  em  considera√ß√£o  os  dados  levantados  durante  a  realiza√ß√£o  da 

presente pesquisa, pode-se observar que o ensino da disciplina matem√°tica tem maior 

aproveitamento  quando  associadas  a  teoria  com  a  pr√°tica,  e  os  conte√∫dos  s√£o 

trabalhados de forma contextualizada, mostrando assim a rela√ß√£o entre a matem√°tica 

e outros campos do conhecimento.  

A contextualiza√ß√£o e a interdisciplinaridade devem estar presentes em novas 

discuss√µes  e  abordagens  metodol√≥gicas,  inseridas  em  novas  propostas  de  ensino 

levadas para a sala de aula, que tendem a proporcionar ao aluno a oportunidade de 

organizar  seu  conhecimento,  estruturar  dados  e  informa√ß√µes  e  desenvolver  seu 

pensamento cr√≠tico. Os PCNs, refor√ßam que 

Por outro lado, um conhecimento s√≥ √© pleno se for mobilizado em situa√ß√µes 

diferentes  daquelas  que  serviram  para  lhe  dar  origem.  Para  que  sejam 

transfer√≠veis  a  novas  situa√ß√µes  e  generalizados,  os  conhecimentos  devem 

ser descontextualizados, para serem contextualizados novamente em outras 

situa√ß√µes.  

(BRASIL, 1997, p. 26) 

Verifica-se,  pois,  que  o  ensino  da  matem√°tica,  quando  munido  de  pr√°ticas  e 

m√©todos  que  permitam  o  aluno  relacion√°-la  com  outras  √°reas,  conhecer  sua 

aplica√ß√£o,  e,  por  meio  disso,  atuar  como  sujeito  ativo  nesse  processo,  produzem 

resultados significativamente positivos.   

 
 
 
 
 
75 

5  CONSIDERA√á√ïES FINAIS 

Este trabalho relata o resultado de uma pesquisa desenvolvida com alunos do 

curso de Licenciatura em Matem√°tica de uma institui√ß√£o da Rede Federal de ensino, 

da cidade de S√£o Raimundo Nonato-PI. A pesquisa em quest√£o, abordou o conte√∫do 

vetores  de  maneira  a  trabalhar  um  dos  ramos  da  aplica√ß√£o  de  tal  componente 

matem√°tico, de forma a dinamizar o ensino. Esse tipo de abordagem √© uma alternativa 

interessante, baseada na interdisciplinaridade para o ensino da matem√°tica.  

√â relevante inovar a maneira de ensinar para que o aluno sinta-se motivado a 

aprender e busque construir seu conhecimento por meio de novas metodologias que 

conduzam a esse fim. 

As  etapas  de  desenvolvimento  desse  projeto,  permitiram  direcionar 

corretamente  a  realiza√ß√£o  das  atividades  propostas,  e  ajudaram  a  otimizar  sua 

realiza√ß√£o por meio das atividades que julgaram o conhecimento dos alunos sobre o 

conte√∫do  abordado,  e  aquelas  que  levaram  os  discentes  a  compreenderem  qual  a 

fun√ß√£o das opera√ß√µes com vetores na programa√ß√£o usada para dar movimentos aos 

objetos dentro de um ambiente virtual. 

Durante  a  execu√ß√£o  das  atividades,  foi  poss√≠vel  observar  que  os  alunos 

apresentaram  grande  entusiasmo  durante  todo  o  desenvolvimento  do  projeto,  visto 

que  os  mesmos  sentiram-se  envolvidos  num  processo  emp√≠rico  concreto,  podendo 

assimilar  melhor  o  conte√∫do  abordado  no  projeto  em  quest√£o,  associando  a  teoria 

com a pr√°tica.  

Os  resultados  colhidos  com  a  aplica√ß√£o  desse  projeto  nos  permitem  afirmar 

que m√©todos de ensinos em que o aluno atua como sujeito ativo, no processo ensino-

aprendizagem, colaboram positivamente com o aprendizado do mesmo (o aluno). 

Diante do exposto, levando em considera√ß√£o a necessidade de se dinamizar o 

ensino da matem√°tica, torna-se necess√°ria a procura por m√©todos de ensino voltados 

ao  enriquecimento  das  aulas  por  meios  da  aplica√ß√µes  pr√°ticas,  para  que  o  corpo 

discente entenda que a matem√°tica est√° presente em tudo √† sua volta, e para que 

possa  perceb√™-la  no  seu  dia-a-dia.  Cabe  aqui  lembrar,  que  esse  trabalho  trata  da 

 
 
76 

aplica√ß√£o dos vetores de modo n√£o aprofundado e traz uma introdu√ß√£o √† l√≥gica de 

programa√ß√£o usada em jogos de computadores. 

Essa disquisi√ß√£o serve como base para pesquisas futuras sobre componentes 

matem√°ticos usados em programa√ß√µes usadas para dar ou auxiliar movimentos de 

seres em ambientes virtuais.  

Para  trabalhos  futuros,  a  quem  desejar  pesquisar  sobre  tal  tema,  pode-se 

trabalhar o uso dos vetores em jogos de computadores com c√°lculos que produzam 

a√ß√µes  mais  complexas,  como  por  exemplo,  a  proje√ß√£o  ortogonal,  ainda  em  duas 

dimens√µes, que pode ser usada em jogos de carrinhos de corrida para que, aqueles 

carros que n√£o s√£o controlados pelo jogador, n√£o saiam da pista. Ou pode-se expandir 

a  tr√™s  dimens√µes  com  opera√ß√µes mais complexas,  por√©m,  com  um  leque maior de 

aplica√ß√µes. 

Outros  componentes  matem√°ticos,  como  a  trigonometria,  por  exemplo, 

tamb√©m tem uma vasta aplica√ß√£o na computa√ß√£o gr√°fica, e s√£o uma rica fonte nesta 

linha de pesquisa. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
77 

6  REFER√äNCIAS BIBLIOGR√ÅFICAS 

ALMEIDA,  Marcel  Augusto  Rosa  de.  O  Tratado  de  √Ålgebra  de  John  Wallis  e  suas 
rela√ß√µes com a √°lgebra brit√¢nica. Rio de Janeiro: UFRJ/IM, 2010. 

BRASIL. 

Par√¢metros 

Curriculares 

Nacionais. 

Dispon√≠vel 

em 

<http://portal.mec.gov.br/seb/arquivos/pdf/ciencian.pdf>. Acesso em 03 jan. 2018. 

CONCEI√á√ÉO,  F.H.G.  SANTOS,  A.B.  MENEZES,  B.V.  TORRES,  N.L.  A 

IMPORT√ÇNCIA DA APLICABILIDADE DA MATEM√ÅTICA NO COTIDIANO: Perspetiva 

do aluno Jovem e Adulto. Aracaj√∫: FAMA, 2016. 

DELGADO,  Jorge.  FRENSEL,  K√°tia;  CRISSAFF,  Lhaylla.  Geometria  Anal√≠tica. 
Cole√ß√£o Profmat. 1.ed. Rio de Janeiro: Editora SBM, 2013. 

FERRARO, G.N.; SOARES, P. A. T.; FOGO, R. F√≠sica b√°sica: volume √∫nico. 4. ed. 

S√£o Paulo: Atual, 2013. 

GUIMAR√ÉES, Osvaldo. PIQUEIRA, Jos√© Roberto. CARRON, Wilson. F√≠sica Mec√¢nica 
2¬™ ed. S√£o Paulo: Editora √°tica, 2016. 

HOWARD,  A.,  RORRES  C.  √Ålgebra  Linear  com  Aplica√ß√µes.  8¬™  Ed.  Porto  Alegre: 

Bookman, 2001. 

LAKATOS, E. M; MARCONI, M. A. Fundamentos de metodologia cient√≠fica - 5. ed. - 

S√£o Paulo. Atlas 2003. 

LIMA, E. L.; CARVALHO, P. C. P.; WAGNER, E.; MORGADO A. C. A matem√°tica do 

ensino  m√©dio.  Volume  3. 6. ed.  Rio  de  Janeiro:  SBM, 2006.  (Cole√ß√£o  Professor  de 

Matem√°tica) 

 
 
 
 
 
 
 
 
 
 
78 

LU√çS, Ant√¥nio M√°ximo Ribeiro da. √ÅLVARES, Beatriz Alvarenga. GUIMAR√ÉES, Carla 
da  Costa.  F√≠sica:  contextos  e  aplica√ß√µes,  Ensino  M√©dio.  2¬™  ed.  S√£o  Paulo:  editora 
Scipione. 2016. 

MONTENEGRO,  Fernando;  PACHECO,  Roberto.  Orienta√ß√£o  a  Objetos.  Editora 

Ci√™ncia Moderna, 1994. 

Processing. 
[Software]. 
<https://www.filehorse.com/download-processing-64/31136/> 

(Vers√£o 

(2013). 

3.3.5) 

Dispon√≠vel 

em: 

PRODANOV, C. C; FREITAS, E. C. METODOLOGIA DO TRABALHO CIENT√çFICO: 

M√©todos e T√©cnicas da pesquisa e do trabalho acad√™mico. 2. Ed ‚Äì Novo Hamburgo: 

Feevale, 2013. 

QUEIROZ,  Cec√≠lia;  MOITA  Filomena.  As 
pressupostos. Campina Grande; Natal: UEPB/UFRN, 2007.  

tend√™ncias  pedag√≥gicas  e  seus 

REIF, T.B.  Programa√ß√£o  de  computadores:  Uma  proposta  para  o  9¬∫  ano  do  Ensino 

Fundamental, 

2017. 

Dispon√≠vel 

em: 

<https://sca.profmat-

sbm.org.br/sca_v2/get_tcc3.php?id=150390755>. Acesso em 26/01/2018>. 

RUMBAUGH,  James;  BLAHA,  Michel;  PREMERLANI,  William;  EDDY,  Frederick. 

Modelagem e design orientados a objetos. Prentice-Hall, Inc., 1991. 

SHIFFMAN, Daniel. The nature of code. Edi√ß√£o ilustrada. Editora D. Shiffman. 2012 

STROUSTRUP,  Bjarne.  A  linguagem  de  programa√ß√£o  -  Segunda  edi√ß√£o.  Addison-

Wesley, 1993. 

 
 
 
 
 
 
 
 
 
 
 
79 

TERZIDIS,  Kostas.  Algorithms  for  Visual  Design  Using  the  Processing  Language. 

Wiley Publishing, Inc, 2009 

WIENER,  Richard  S.;  PINSON,  Lewis  J.  C.  Programa√ß√£o  Orientada  para  Objeto  - 
Manual Pr√°tico e Profissional. Makron Books, 1991. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
7   AP√äNDICES 

AP√äNDICE A: Avalia√ß√£o diagn√≥stica. 

80 

UNIVERSIDADE FEDERAL DO VALE DO S√ÉO FRANCISCO 
MESTRADO PROFISSIONAL EM MATEM√ÅTICA EM REDE     

   NACIONAL ‚Äì PROFMAT 
Mestrando: Francisco Alves dos Santos 
Orientador: Dr. Alexandre Ramalho Silva 
data: _____/______/2018 

AVALIA√á√ÉO DIAGN√ìSTICA  

1)  1. Observe a figura abaixo e determine quais os vetores que: 

a) tem a mesma dire√ß√£o. 
b) tem o mesmo sentido. 
c) tem a mesma intensidade (m√≥dulo) 
d) s√£o iguais. 

2)  Quando dizemos que a velocidade de uma bola √© de 30m/s, horizontal  

e para a esquerda, 

 
                                                  
                                                        
 
 
 
 
 
 
 
 
 
Estamos definindo a velocidade como uma grandeza: 

a)  Escalar 

b) alg√©brica        c) Linear  

d) vetorial 

81 

3)  Analisando a disposi√ß√£o dos vetores BA, EA, CB, CD e DE, conforme figura a 

seguir, assinale a alternativa que cont√©m a rela√ß√£o vetorial correta. 

a) CB + CD + DE = BA + EA 
b) BA + EA + CB = DE + CD 
c) EA ‚Äì DE + CB = BA + CD 
d) EA ‚Äì CB + DE = BA ‚Äì CD 
e) BA ‚Äì DE ‚Äì CB = EA + CD 

4) Dados os vetores ‚Äúa‚Äù, ‚Äúb‚Äù, ‚Äúc‚Äù, ‚Äúd‚Äù e ‚Äúe‚Äù a seguir representados, obtenha o 
m√≥dulo do vetor soma: 

            ùëÖ‚Éó  = ùëé +ùëè‚Éó +ùëê +ùëë +ùëí  
a) zero            b) ‚àö20              c) 1                d) 2              e) ‚àö52 

 
 
 
 
 
  
  
 
 
 
 
 
 
 
 
82 

5) Na figura a seguir est√£o desenhados dois vetores (ùë•  e ùë¶ ). Esses vetores 
representam deslocamentos sucessivos de um corpo. Qual √© o m√≥dulo do vetor 
igual a ùë•  + ùë¶ ? 

    a) 4cm 

b) 5cm 

c) 8cm 

d) 13cm 

e) 25cm 

6) Para o diagrama vetorial abaixo, a √∫nica igualdade correta √©: 

a) u+v=w 
b)  v-u=w 
c)  u-v=w 
d)  v+w=u 
e)  w-v=u 

7) Dados os vetores a = (2,-9) e b = (-1,7). Calcular: 
a) a + b 
b) a ‚Äì b 
c) 15a 
d) -1a (represente geometricamente esse vetor) 

8)  Voc√™ conhece alguma aplica√ß√£o de vetores geom√©tricos? Em caso 

afirmativo, descreva-a. 

9)  Voc√™ considera relevante o estudo dos vetores no curso de licenciatura em 

matem√°tica? Justifique sua resposta. 

 
 
 
 
 
 
 
 
 
 
 
 
 
10)  Durante o curso da disciplina geometria anal√≠tica, foi exposto a voc√™ onde 
aplicaria vetores, ou sua rela√ß√£o com outras √°reas do conhecimento? Em 
caso afirmativo, cite-as. 

83 

AP√äNDICE B: Avalia√ß√£o intermedi√°ria 

UNIVERSIDADE FEDERAL DO VALE DO S√ÉO FRANCISCO 
MESTRADO PROFISSIONAL EM MATEM√ÅTICA EM REDE 
NACIONAL ‚Äì PROFMAT 
Mestrando: Francisco Alves dos Santos 
Orientador: Dr. Alexandre Ramalho Silva 
data: _____/______/2018 

Question√°rio intermedi√°rio 

1)  Nos exemplo 1.2 se multiplicarmos a velocidade por -2 quando a bola colide 

com a borda da tela, o que acontecer√°? 

2)  Se no exemplo 1.7, no comando posicao.add(velocidade) substituirmos add 
por sub, o que acontecer√°, e que isso far√° acontecer com o movimento da 
bola na tela? 

3)  No exemplo 1.8 descreva a fun√ß√£o de cada comando a seguir:  

a)  velocidade.add(aceleracao); 
b)  velocidade.limit(limitevelocidade); 
c)  posicao.add(velocidade); 

 
 
 
 
                                                     
 
 
 
 
 
 
 
 
 
 
 
 
 
 
AP√äNDICE C: Question√°rio final. 

84 

UNIVERSIDADE FEDERAL DO VALE DO S√ÉO FRANCISCO 
MESTRADO PROFISSIONAL EM MATEM√ÅTICA EM REDE 
NACIONAL ‚Äì PROFMAT 
Mestrando: Francisco Alves dos Santos 
Orientador: Dr. Alexandre Ramalho Silva 
data: _____/______/2018 

Question√°rio final 

1)  O desenvolvimento do presente trabalho levou voc√™ a compreender qual a 
fun√ß√£o dos vetores na programa√ß√£o usada para dar movimentos a objetos 
em um ambiente virtual?  

2)  Para voc√™, o ensino da matem√°tica torna-se mais prazeroso e satisfat√≥rio 
quando  consegue  relacionar  o  conte√∫do  estudado  com  outras  √°reas  do 
conhecimento e consegue aplicar os conhecimentos adquiridos, passando 
do campo te√≥rico para o pr√°tico? 

 
                                                    
 
 
 
 
 
 
