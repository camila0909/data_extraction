Universidade Federal do Estado do Rio de Janeiro

Centro de Ciˆencias Exatas e Tecnologia

Curso de P´os-graduac¸˜ao em Matem´atica

Luiz Carlos da Silva Le˜ao

Uma introdu¸c˜ao ao estudo de bitcoins e blockchains

Rio de Janeiro

2019

Luiz Carlos da Silva Le˜ao

Uma introdu¸c˜ao ao estudo de bitcoins e blockchains

Trabalho de Conclus˜ao de Curso apresentado ao
Programa de P´os-gradua¸c˜ao em Matem´atica PROF-
MAT da UNIRIO, como requisito para a obten¸c˜ao
do grau de MESTRE em Matem´atica.

Orientador: Silas Fantin

Doutor em Matem´atica - USP

Rio de Janeiro

2019

Catalogação informatizada pelo(a) autor(a)

L953

Leão, Luiz Carlos da Silva
   Uma introdução ao estudo de bitcoins e
blockchains / Luiz Carlos da Silva Leão. -- Rio de
Janeiro, 2019.
   118 

   Orientador: Silas Fantin.
   Dissertação (Mestrado) - Universidade Federal do
Estado do Rio de Janeiro, Programa de Pós-Graduação
em Matemática, 2019.

   1. Bitcoin. 2. Blockchain. 3. Hash. I. Fantin,
Silas, orient. II. Título. 

Dedico este trabalho `a minha m˜ae, que n˜ao

est´a mais entre n´os, mas continua sendo mi-

nha maior for¸ca na vida. Sua lembran¸ca me

inspira e me faz persistir.

Resumo

Esta disserta¸c˜ao de mestrado apresenta uma introdu¸c˜ao aos elementos de Bitcoins e de

Blockchains. Primeiramente introduz-se como se d´a o funcionamento do Blockchain e os

seus fundamentos b´asicos. Depois se revisa a criptograﬁa at´e chegar `as fun¸c˜oes de hash

criptogr´aﬁcas. Destaca-se a criptograﬁa por chaves p´ublicas e os elementos de simetria

criptogr´aﬁca. A seguir, estuda-se transa¸c˜oes, forma¸c˜ao de blocos e de endere¸cos Bitcoin.
´E feita uma sugest˜ao de did´atica sobre blockchain para educa¸c˜ao. S˜ao apresentadas as

fun¸c˜oes hash RIPEMD-160 e SHA-256, esta ´ultima com um procedimento de c´alculo. Por

ﬁm, contextualiza-se Blockchain e educa¸c˜ao superior e ´e feita uma sugest˜ao para estudos

posteriores.

Palavras-chaves: Bitcoin, Blockchain, Hash.

Abstract

This master thesis presents an introduction to Bitcoin and Blockchain elements. Firstly,

we introduce how Blockchain works and its fundamentals. Then the cryptography is

reviewed until it reaches the cryptographic hash functions. Public keys cryptography

and the elements of symmetric cryptography are highlighted. Bitcoin transactions, block

formation, and addressing system are studied. A suggestion of blockchain didatics for

education is made. Are presented the Bitcoin Address composing and the cryptographic

hash functions used in the Bitcoin RIPEMD-160 and SHA-256, this one with a calculation

procedure. Finally, Blockchain is contextualized with college education and it is made a

suggestion for further study.

Keywords: Bitcoin, Blockchain, Hash

Agradecimentos

Agrade¸co primeiramente a Deus.

`A minha esposa amada, que precisou suportar tantos momentos de ausˆencia

para que esse trabalho fosse realizado.

`A minha fam´ılia, pois sem eles eu nada seria.

Ao professor Silas Fantin, pela orienta¸c˜ao zelosa e por n˜ao deixar acreditar que

seria poss´ıvel.

Aos demais professores do programa PROFMAT na UNIRIO, pela forma¸c˜ao.

Aos meus colegas de turma, por todo apoio quando precisei.

Aos meus gestores do emprego atual, por autorizar conciliar os hor´arios para

cursar as disciplinas.

`A Sociedade Brasileira de Matem´atica por manter o programa.

A todos que, de alguma forma, contribu´ıram para a realiza¸c˜ao deste trabalho.

“Eu n˜ao acredito que teremos um bom

dinheiro de novo antes de tir´a-lo das m˜aos

do governo, isto ´e, n˜ao podemos tir´a-

los violentamente das m˜aos do governo,

tudo o que podemos fazer ´e por algum

caminho indireto introduzir algo que eles

n˜ao podem parar.”

F.A. Hayek, 1984

Sum´ario

Lista de Figuras

Lista de Tabelas

Introdu¸c˜ao

Terminologia

8

15

16

19

Funcionamento do Blockchain . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22

Criptograﬁa

26

Criptograﬁa de chave p´ublica . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32

Criptograﬁa assim´etrica no blockchain . . . . . . . . . . . . . . . . . . . . . . . 35

Fun¸c˜oes Hash

36

Fun¸c˜oes Hash . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36

Usando aritm´etica modular em fun¸c˜ao hash . . . . . . . . . . . . . . . . . . . . 39

As fun¸c˜oes JHA e JHA-1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43

A fun¸c˜ao hash criptogr´aﬁca RIPEMD-160 . . . . . . . . . . . . . . . . . . . . . 45

A fun¸c˜ao hash criptogr´aﬁca SHA-256 . . . . . . . . . . . . . . . . . . . . . . . . 46

Blockchains

48

Transa¸c˜oes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48

Pool de transa¸c˜oes

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50

Assinaturas digitais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51

Transa¸c˜ao de Bitcoin na vida real . . . . . . . . . . . . . . . . . . . . . . . . . . 53

Blocos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62

Ponto de partida: um livro . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64

Proof-of-work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66

Endere¸co Bitcoin . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70

Blockchain . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72

Proposta Did´atica

75

Administrando uma escola secund´aria de maneira distribu´ıda . . . . . . . . . . . 76

Blockchain para o ensino m´edio distribu´ıdo . . . . . . . . . . . . . . . . . . . . . 78

Uma introdu¸c˜ao ao sistema distribu´ıdo . . . . . . . . . . . . . . . . . . . . . . . 80

A corrida pela prova de trabalho . . . . . . . . . . . . . . . . . . . . . . . . . . 82

Construindo um blockchain . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85

Apresentando Chaves P´ublicas e Privadas

. . . . . . . . . . . . . . . . . . . . . 89

Considera¸c˜oes ﬁnais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92

Conclus˜ao

Apˆendice

Referˆencias Bibliogr´aﬁcas

93

94

114

Lista de Figuras

1

2

3

4

5

6

7

Caixa eletrˆonico de Bitcoin em Milwaukee, Wisconsin . . . . . . . . . . . . 17

Rede Peer-to-peer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20

Cadeia de blocos de hash . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22

Semelhan¸ca entre a p´agina de um livro caixa do in´ıcio do S´eculo XX e um

bloco na blockchain . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23

Grafo de um Esquema Ponzi . . . . . . . . . . . . . . . . . . . . . . . . . . 25

Claude Elwood Shannon . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26

Horst Feistel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27

8 Martin Hellman . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28

9 Whitﬁeld Diﬃe . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29

10 Alan Konheim . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29

11 Neal Koblitz . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30

12 Victor Miller

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30

13

14

15

Ilustra¸c˜ao esquem´atica da criptograﬁa sim´etrica . . . . . . . . . . . . . . . 32

Ilustra¸c˜ao esquem´atica da criptograﬁa assim´etrica . . . . . . . . . . . . . . 33

Ilustra¸c˜ao da fun¸c˜ao hash . . . . . . . . . . . . . . . . . . . . . . . . . . . 36

16 Exemplo c´alculo de hash . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37

17 C´alculo de hash abreviado . . . . . . . . . . . . . . . . . . . . . . . . . . . 38

18 Problema do Estacionamento e fun¸c˜ao hash . . . . . . . . . . . . . . . . . 42

19 Planilha de c´alculo de uma rodada da fun¸c˜ao SHA-256 . . . . . . . . . . . 47

20 Diagrama de Transa¸c˜oes . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49

21 Cria¸c˜ao de uma assinatura digital

. . . . . . . . . . . . . . . . . . . . . . . 51

22 Usando uma assinatura digital . . . . . . . . . . . . . . . . . . . . . . . . . 52

23

Identiﬁcando uma fraude . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53

24 O novo endere¸co bitcoin da Alice . . . . . . . . . . . . . . . . . . . . . . . 54

25 A tela de envio de bitcoin . . . . . . . . . . . . . . . . . . . . . . . . . . . 56

26 Cadeia de Transa¸c˜oes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58

27 Transa¸c˜ao de Alice para o Bob . . . . . . . . . . . . . . . . . . . . . . . . . 60

28 Blocos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63

29 P´aginas do livro . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65

30 Diﬁculdade Minera¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69

31 Convers˜ao para Endere¸co Bitcoin . . . . . . . . . . . . . . . . . . . . . . . 70

32 Blockchain . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72

33 Professor como autoridade central . . . . . . . . . . . . . . . . . . . . . . . 76

34 Banco como autoridade central

. . . . . . . . . . . . . . . . . . . . . . . . 77

35 Transa¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78

36 Transa¸c˜ao de bitcoin . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78

37 Veterano . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79

38 Um bloco . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79

39 Conjunto de mem´oria . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81

40 Bob classiﬁca Alice . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81

41 Minera¸c˜ao . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82

42 Ca¸ca ao Tesouro

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83

43 Tesouro descoberto . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84

44 Hist´orico do jardim de infˆancia ao 1º Ano . . . . . . . . . . . . . . . . . . 85

45 Hist´orico do jardim de infˆancia ao 1º Ano com fun¸c˜oes hash . . . . . . . . 86

46 Nova tentativa . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87

47 Tentativa de Alice de substituir sua nota anterior

. . . . . . . . . . . . . . 87

48 Chance de uma transa¸c˜ao voltar no dia seguinte . . . . . . . . . . . . . . . 88

9

49 Arm´arios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89

50 Transa¸c˜ao com hashing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90

51 Arm´arios com chaves . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91

52 Opera¸c˜ao de soma em uma curva el´ıptica . . . . . . . . . . . . . . . . . . . 94

53 M´etodo ElGamal para Criptograﬁa de Curvas El´ıpticas . . . . . . . . . . . 98

54 A Curva Koblitz

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101

55 Tabela-verdade da nega¸c˜ao (∼)

. . . . . . . . . . . . . . . . . . . . . . . . 103

56 Tabela-verdade do E (∧) . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103

57 Tabela-verdade do OU (∨) . . . . . . . . . . . . . . . . . . . . . . . . . . . 103

58 Tabela-verdade do OU-Exclusivo (⊕) . . . . . . . . . . . . . . . . . . . . . 103

59 O c´alculo da fun¸c˜ao Maj

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 104

60 O c´alculo da primeira fun¸c˜ao Rotate

. . . . . . . . . . . . . . . . . . . . . 104

61 O c´alculo da fun¸c˜ao Ch . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105

62 O c´alculo da segunda fun¸c˜ao Rotate . . . . . . . . . . . . . . . . . . . . . . 106

63 O c´alculo de T 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108

64 O ´ultimo passo do c´alculo da fun¸c˜ao hash SHA-256 . . . . . . . . . . . . . 108

65 A fun¸c˜ao de hash RIPEMD-160 . . . . . . . . . . . . . . . . . . . . . . . . 109

66 Metades esquerda e direita do RIPEMD-160 . . . . . . . . . . . . . . . . . 111

Lista de Tabelas

1

2

3

4

5

6

7

8

Nonces para resolver um quebra-cabe¸ca de hash . . . . . . . . . . . . . . . 68

Conceitos t´ecnicos do blockchain e seus prop´ositos . . . . . . . . . . . . . . 74

Hexadecimal da raiz quadrada da parte fracion´aria dos primeiros 8 primos 102

Tabela-verdade da fun¸c˜ao M aj

. . . . . . . . . . . . . . . . . . . . . . . . 104

Tabela-verdade da fun¸c˜ao XOR . . . . . . . . . . . . . . . . . . . . . . . . 105

Tabela-verdade da fun¸c˜ao Ch . . . . . . . . . . . . . . . . . . . . . . . . . 106

Deslocamento s para o lado direito . . . . . . . . . . . . . . . . . . . . . . 112

Deslocamento s para o lado esquerdo . . . . . . . . . . . . . . . . . . . . . 113

16

Introdu¸c˜ao

Atualmente o uso da moeda est´a se tornando cada vez menos comum. As des-

pesas est˜ao sendo pagas com cart˜ao de cr´edito emitido por um banco, mas ao voltarmos

um pouco no tempo, veriﬁcaremos que o cart˜ao de cr´edito marcou uma revolu¸c˜ao ﬁnan-

ceira em termos de seguran¸ca das transa¸c˜oes e de liquidez. Agora assistimos `a uma nova

revolu¸c˜ao ﬁnanceira causada pela chegada de um novo tipo de dinheiro, a criptomoeda,

que ´e uma nova gera¸c˜ao de recurso ﬁnanceiro criado atrav´es de tecnologia que utiliza

algoritmos criptografados.

Nos ´ultimos anos, v´arias novas criptomoedas foram criadas. Neste trabalho

pretendemos apresentar uma introdu¸c˜ao sobre essa nova tecnologia, abordando funda-

mentalmente seus aspectos criptogr´aﬁcos.

Para apresentar como a funciona a criptograﬁa da tecnologia Bitcoin devemos

esclarecer alguns dos seguintes questionamentos (que ser˜ao abordados ao longo deste

trabalho):

• O que ´e o Bitcoin?

• Como armazenar os bitcoins 1?

• Como funcionam as transa¸c˜oes de bitcoin?

• Como funciona a minera¸c˜ao de bitcoins?

• O que ´e e como funciona a tecnologia Blockchain?

• O que ´e um ledger (livro raz˜ao) distribu´ıdo?

O Bitcoin ´e uma das criptomoedas mais conhecidas. Blockchain (ou cadeia de

blocos) ´e a nova tecnologia na qual o Bitcoin ´e baseado. Schwab, 2016 [46] aﬁrma que a

tecnologia Bitcoin logo dar´a origem a in´umeros outros blockchains.

1Segundo Ulrich, 2014 [57] quando se refere ao sistema, `a rede ou o ao projeto Bitcoin, usa-se sempre

inicial mai´uscula. No entanto, quando se ﬁzer referˆencia `as unidades monet´arias bitcoins, utiliza-se a

palavra em caixa baixa.

17

As moedas digitais que recebem o nome de criptomoedas s˜ao aquelas que s˜ao

consideradas seguras por causa da criptograﬁa. As criptomoedas n˜ao s˜ao controladas por

autoridades centralizadas. Contudo, as implica¸c˜oes desta tecnologia s˜ao t˜ao vastas, que

alguns Bancos Centrais tentam criar suas pr´oprias criptomoedas [11], [24], [28], mas as

produzidas segundo Hollins, 2018 [26] n˜ao s˜ao consideradas criptomoedas oﬁcialmente,

tendo em vista que o dinheiro ainda ´e centralizado.

A descentraliza¸c˜ao tem o intuito de permitir que todos tenham o controle,

enquanto, com a centraliza¸c˜ao, todo o controle est´a com os bancos centrais e isso implica

que em termos da quantidade de dinheiro criado ou seu valor, nenhuma pessoa possui

controle. Assim, os bancos centrais podem estipular o valor de moedas tradicionais,

mediante a impress˜ao de mais moeda.

O Bitcoin tem tido bastante publicidade. Grande exposi¸c˜ao de informa¸c˜oes nos

notici´arios, redes sociais e institui¸c˜oes ﬁnanceiras podem ser a causa. Como aumentaram

os n´ıveis de alfabetiza¸c˜ao, tanto ﬁnanceira como digital da popula¸c˜ao, a aceita¸c˜ao das

criptomoedas tamb´em cresceu.

H´a agora um envolvimento crescente de empresas e institui¸c˜oes com as cripto-

moedas. Novas aplica¸c˜oes s˜ao incorporadas e j´a existem caixas eletrˆonicos para permitir

que transa¸c˜oes de criptomoedas sejam realizadas. Vide Figura 1:

Figura 1: Caixa eletrˆonico de Bitcoin em Milwaukee, Wisconsin Dispon´ıvel em [60]

18

Em seguida h´a uma descri¸c˜ao sucinta do que ser´a apresentado em cada cap´ıtulo:

No Cap´ıtulo Terminologia ser´a abordada a terminologia dos principais concei-

tos que permeiam o funcionamento de blockchains. Introduziremos os conceitos de rede

Peer-to-peer, blocos, cadeias, transa¸c˜oes e minera¸c˜ao de bitcoins.

No Cap´ıtulo Criptograﬁa ´e feita uma contextualiza¸c˜ao da criptograﬁa, pas-

sando pelos pesquisadores precursores como Claude Shannon e Horst Feistel at´e Martin

Hellman e Alan Konheim. Falaremos de Neal Koblitz e Victor Miller, ambos pesquisa-

dores da criptograﬁa por curvas el´ıpticas. At´e chegarmos ao Satoshi Nakamoto, autor

do artigo fundamental do Bitcoin. S˜ao introduzidos os conceitos de criptograﬁa de chave

p´ublica e criptograﬁa assim´etrica em blockchains.

No Cap´ıtulo Fun¸c˜oes Hash ´e apresentada uma introdu¸c˜ao `as fun¸c˜oes de hash,
seus princ´ıpios, hashing com aritm´etica modular e fun¸c˜oes hash criptogr´aﬁcas. ´E apre-

sentado um exemplo de c´alculo de hash. Devido a sua facilidade de entendimento e

aprendizagem, falaremos das fun¸c˜oes hash JHA e JHA-1. Tamb´em ser´a falado sobre

duplo hashing. Ser˜ao introduzidas as fun¸c˜oes hash SHA-256 e RIPEMD-160.

J´a no Cap´ıtulo Blockchains os conceitos de transa¸c˜oes, pool de transa¸c˜oes,

blocos, cria¸c˜ao de assinaturas ser˜ao aprofundados. Ser´a apresentada uma analogia de um

livro com um blockchain. Tamb´em ser´a visto como se d´a uma transa¸c˜ao real de bitcoins.

Ser´a apresentada uma breve introdu¸c˜ao t´ecnica da cria¸c˜ao de Endere¸cos Bitcoin. Ao ﬁnal,

ser´a apresentada uma tabela contendo um resumo dos conceitos abordados.

No Cap´ıtulo Proposta Did´atica ´e feita uma sugest˜ao de did´atica sobre bitcoins

e blockchains para estudantes do ensino m´edio com analogias dos termos e conceitos que

est˜ao presentes nas escolas: alunos, professores, boletins, diretores, testes, turmas.

Por ﬁm, no Apˆendice ser˜ao introduzidos os aspectos matem´aticos da crip-

tograﬁa de Curvas El´ıpticas e das fun¸c˜oes hash criptogr´aﬁcas SHA-256 e RIPEMD-160,

ambas componentes criptogr´aﬁcas do blockchain do Bitcoin. Na fun¸c˜ao hash SHA-256,

ser´a mostrado em detalhes um algoritmo de c´alculo assim como as tabelas-verdade dos

passos sugeridos.

19

Terminologia

Neste cap´ıtulo introduzimos a terminologia que ser´a utilizada no decorrer

deste trabalho, ou seja, ser˜ao analisados alguns dos fundamentos tecnol´ogicos que tornam

poss´ıvel o funcionamento das criptomoedas, em especial do Bitcoin. No Cap´ıtulo Blockchains

haver´a um maior aprofundamento te´orico dessas deﬁni¸c˜oes.

Deﬁni¸c˜ao 1.1 (Blockchain): Blockchain, ou cadeia de blocos, ´e um registro p´ublico,

que existe apenas em meio digital e que armazena todas as transa¸c˜oes das criptomoedas.

Estas informa¸c˜oes n˜ao est˜ao armazenadas em um ´unico computador central.

A ideia por tr´as do blockchain ´e substituir institui¸c˜oes centralizadas. Seu

objetivo foi que se pudesse criar um caminho para que estranhos tivessem conﬁan¸ca entre

si nas transa¸c˜oes, sem a necessidade de um banco ou de um governo como mediador.

Basicamente, todos as aplica¸c˜oes de blockchains baseiam-se no conceito de

descentraliza¸c˜ao. Por isso que, em vez da rigidez na tomada de decis˜oes de uma autoridade

central, o blockchain pretende devolver o poder regulat´orio para os indiv´ıduos, isto ´e, em

vez de conﬁar em uma institui¸c˜ao importante, o blockchain gera conﬁan¸ca atrav´es do

consenso.

Em termos simples, o blockchain ´e o livro raz˜ao ou livro di´ario que cont´em

todas as opera¸c˜oes que se realizaram na hist´oria do Bitcoin. Como n˜ao existe um go-

verno central ou banco de dados ´unico, o livro se situa em uma rede composta por cada

computador que executa o software de Bitcoin e todos trabalham juntos para construir

a rede. Tudo isso acontece ao vivo, de forma transparente, e qualquer um pode ver o

tr´afego enquanto est´a acontecendo utilizando o m´etodo Peer-to-peer para distribuir as

informa¸c˜oes entre todos os usu´arios. Segundo Hollins, 2018 [26] este n´ıvel de transparˆencia

´e quase in´edito no sistema ﬁnanceiro.

Deﬁni¸c˜ao 1.2 (Peer-to-peer): Peer-to-peer ou P2P (tradu¸c˜ao livre: ponto-a-ponto)

´e um m´etodo de troca de dados (informa¸c˜oes, arquivos, documentos, ﬁlmes, jogos, etc.)

entre dois ou mais usu´arios.

A principal caracter´ıstica ´e que o P2P estabelece uma conex˜ao direta entre

computadores conectados `a internet, sem a necessidade de um servi¸co intermedi´ario ou

de um servidor central. Portanto, a base do blockchain ´e a rede Peer-to-peer. Tradici-

onalmente, quando se pensa em conﬁan¸ca, se pensa em institui¸c˜oes como intermedi´arias.

20

Figura 2: Rede Peer-to-peer. Dispon´ıvel em:

[55]

Exemplo 1.1 Uma transferˆencia bancaria de R$ 100,00 reais de Jo˜ao no banco A para

Maria no banco B, funciona da seguinte forma:

1. Jo˜ao, faz a transferˆencia no banco A;

2. O banco A cobraria um percentual como comiss˜ao para processar a transa¸c˜ao;

3. O banco A veriﬁcaria se tem R$100 na conta do Jo˜ao;

4. O banco A perguntaria ao banco B se a conta de Maria ´e v´alida e se est´a aberta

para dep´ositos;

5. O banco A atualizaria seu livro de contabilidade para subtrair R$100 da conta de

Jo˜ao;

6. O banco B atualizaria o seu livro de contabilidade para adicionar R$100 na conta

de Maria.

Por outro lado, uma rede Peer-to-peer n˜ao necessita de um intermedi´ario,

mas usa o ledger distribu´ıdo ou livro de contabilidade distribu´ıdo para processar as

transa¸c˜oes. Todos os computadores que fazem parte da rede mantˆem uma c´opia do livro,
e as transa¸c˜oes s˜ao adicionadas sistematicamente no livro cont´abil. ´E bastante dif´ıcil

alterar o livro de contabilidade porque isso exigiria alterar a c´opia do livro em milhares

de computadores na rede Peer-to-peer. A mesma transferˆencia do Exemplo 1.1 em

uma rede Peer-to-peer com um ledger distribu´ıdo funcionaria conforme Exemplo 1.2 a

seguir:

Exemplo 1.2 Uma transferˆencia de R$ 100 reais em rede Peer-to-peer com um ledger

distribu´ıdo de Jo˜ao para Maria, funciona da seguinte forma:

21

1. Jo˜ao envia a solicita¸c˜ao de transferˆencia para a rede;

2. Em seguida, os computadores mais pr´oximos a Jo˜ao na rede comprovam que Jo˜ao

tem criptomoeda suﬁciente em sua conta e que a conta receptora de Maria ´e valida;

3. Uma vez que veriﬁcam a transa¸c˜ao, transmitem a transa¸c˜ao para todos os compu-

tadores pr´oximos a Jo˜ao e Maria na rede;

4. Por sua vez, esses computadores voltam a conﬁrmar a transa¸c˜ao e a transmitem, o

que gera um efeito cascata ate que a transa¸c˜ao seja adicionada a todos os livros da

rede Peer-to-peer.

Os computadores na rede Peer-to-peer s˜ao tanto usu´arios como veriﬁcadores.

As transa¸c˜oes do Blockchain podem n˜ao ter custo, e o efeito cascata de veriﬁcar transa¸c˜oes

signiﬁca que uma transa¸c˜ao pode ser processada em minutos ou horas, em vez de dias.

Com base nestes benef´ıcios, muitas vezes, o Blockchain ´e apresentado como o in´ıcio do

ﬁm das institui¸c˜oes ﬁnanceiras tradicionais (Hollins, 2018) [26].

Bitcoin foi criado como um meio de proporcionar uma nova forma de realizar

pagamentos e transa¸c˜oes online, de forma descentralizada e n˜ao operada pelo governo.

Apesar de n˜ao ser a ´unica criptomoeda existente 2, durante os ´ultimos anos tem mantido

sistematicamente o seu dom´ınio como a criptomoeda mais popular.

Uma das raz˜oes pela qual o Bitcoin tem mantido sua lideran¸ca ´e porque imple-

mentou o primeiro blockchain da hist´oria e o interesse inicial nesta tecnologia fez com que

esta criptomoeda tivesse a maior base de usu´arios al´em de uma sele¸c˜ao de desenvolvedores

experientes para construir o sistema.

2Apodaca, 2017 [4] referencia as demais criptomoedas como Altcoins. Ele diz que elas tentam preencher

algumas lacunas do Bitcoin. Ele cita as seguintes Altcoins: Ethereum, Litecoin, Dash, Monero e Zcash,

Peercoin e Namecoin

A longa hist´oria do Bitcoin tamb´em lhe d´a alguma legitimidade. No decorrer

de uma d´ecada, o Bitcoin tem enfrentado e superado muitos obst´aculos e desaﬁos t´ecnicos

e ´e seu comprovado hist´orico de seguran¸ca que o torna a criptomoeda mais segura para

os iniciantes de acordo com Hollins, 2018 [26].

22

Funcionamento do Blockchain

Em termos simples, o blockchain utiliza uma combina¸c˜ao de criptograﬁa e um

livro de contabilidade p´ublica (ledger) para criar conﬁan¸ca entre as partes, mantendo a

privacidade. A compreens˜ao da mecˆanica de como isso funciona ´e um pouco mais dif´ıcil,

mas, a ﬁm de entender a tecnologia blockchain, ´e preciso aprofundar alguns detalhes

t´ecnicos. Os fundamentos do blockchain s˜ao sugeridos por seu pr´oprio nome: ”block

chain”ou cadeia de blocos.

Deﬁni¸c˜ao 1.3 (Bloco): o bloco ´e uma lista de todas as transa¸c˜oes de um determinado

per´ıodo que cont´em toda a informa¸c˜ao processada na rede nos ´ultimos minutos.

Deﬁni¸c˜ao 1.4 (Cadeia): ´E uma uni˜ao de blocos onde cada bloco est´a associado ao bloco

anterior mediante o uso de algoritmos criptogr´aﬁcos (fun¸c˜oes hash).

A rede cria um bloco de cada vez e os algoritmos criptogr´aﬁcos s˜ao quebra-

cabe¸cas complexos que os computadores devem calcular e, v´arias vezes, computadores

velozes demoram algum tempo para resolver. Uma vez resolvido, ´e criado o bloco usando

mais algoritmos de criptograﬁa, o que ´e praticamente imposs´ıvel de modiﬁcar segundo

Hollins, 2018 [26]. A cadeia se torna cada vez mais longa com o tempo. A Figura 3

ilustra uma cadeia de blocos de hash:

Figura 3: Cadeia de blocos de hash. Dispon´ıvel em [37]

23

A parte fundamental da Blockchain ´e o ledger, lugar onde se armazena as

informa¸c˜oes sobre as contas da rede. O livro dentro do Blockchain ´e o que substitui o

livro de contabilidade em um banco ou outra institui¸c˜ao e, para uma criptomoeda, este

livro de contabilidade consiste em n´umeros de conta, transa¸c˜oes e saldos.

O ledger do blockchain ´e distribu´ıdo em toda a rede Peer-to-peer, por isso

que cada n´o (computador) da rede mant´em sua pr´opria c´opia do livro e atualiza quando

algu´em apresenta uma nova transa¸c˜ao. Este ”livro de contabilidade compartilhado”´e o

que permite a descentraliza¸c˜ao.

Figura 4: Semelhan¸ca entre a p´agina de um livro caixa do in´ıcio do S´eculo XX e um bloco

na blockchain. Dispon´ıvel em [12]

Em vez do banco manter uma c´opia oﬁcial das transa¸c˜oes, todo mundo pode

manter a sua pr´opria c´opia do livro de contabilidade, as transa¸c˜oes s˜ao veriﬁcadas por

consenso. Ou seja, se algu´em tentasse enganar o sistema e, de alguma forma conseguisse

modiﬁcar o livro de contabilidade que est´a no computador, aumentando o saldo de bitcoins

para, em seguida, fazer uma transa¸c˜ao, tamb´em deveria ”hackear”51% dos computadores

da rede Bitcoin para modiﬁcar os livros de contabilidade e, desta forma, a maioria dos

usu´arios da rede estaria de acordo validando a transa¸c˜ao.

Isto seria uma miss˜ao complexa, mas se imaginar que, a cada 10 minutos o

livro de contabilidade de todo mundo sofre altera¸c˜ao com novos c´odigos de criptograﬁa,

na pr´atica, teria menos de 10 minutos para hackear o livro de contabilidade e 51% da

rede, o que ´e imposs´ıvel segundo Hollins, 2018 [26].

Cabe destacar que qualquer um pode ser parte da rede Bitcoin e ter uma c´opia

do blockchain t˜ao somente baixando-o para um computador.

Deﬁni¸c˜ao 1.5 (Transa¸c˜ao com bitcoins): Para uma transa¸c˜ao com bitcoins s˜ao re-

queridas trˆes partes de uma informa¸c˜ao:

24

• Entrada: O remetente indica a rede onde conseguiu seu bitcoin;

• Quantidade: Informar a quantidade de bitcoins a ser enviado;

• Endere¸co de Sa´ıda: Endere¸co de bitcoin do destinat´ario em que se deve depositar

o bitcoin.

No Cap´ıtulo Blockchains ser´a aprofundado como se d˜ao as transa¸c˜oes de bit-

coins.

Deﬁni¸c˜ao 1.6 (Minera¸c˜ao de bitcoins): A minera¸c˜ao de bitcoins ´e o processo de

investir na capacidade computacional para processar transa¸c˜oes, garantir a seguran¸ca da

rede e fazer com que todos os participantes da rede Peer-to-peer estejam sincronizados.

Pode-se dizer que o blockchain ´e centro de dados do Bitcoin, embora este centro de dados

tenha sido projetado para ser totalmente descentralizado, com mineradores operando em

todos os pa´ıses e sem que ningu´em tenha o controle absoluto sobre a rede.

A minera¸c˜ao de bitcoins oferece uma recompensa para os mineradores em

troca de seus servi¸cos, que s˜ao necess´arios para que a rede funcione de forma segura. O

processo ´e chamado de ”minera¸c˜ao”como analogia a minera¸c˜ao do ouro, j´a que tamb´em ´e

o mecanismo tempor´ario utilizado para emitir novos bitcoins, at´e chegar ao limite de 21

milh˜oes de bitcoins em circula¸c˜ao (Nakamoto, 2009) [36].

Cabe destacar que a emiss˜ao ﬁnita de moedas ´e uma estrat´egia para evitar a

inﬂa¸c˜ao e, desta maneira, evitar a perda de valor com o passar do tempo. O bitcoin n˜ao ´e

real. N˜ao h´a bitcoins f´ısicos e n˜ao h´a bitcoins em um disco r´ıgido em parte alguma. N˜ao se

pode apontar para um objeto f´ısico, um arquivo digital, ou um peda¸co de c´odigo e dizer:

”Isso ´e um bitcoin.”Em vez disso, toda a rede Bitcoin ´e apenas uma s´erie de registros

de transa¸c˜oes e cada transa¸c˜ao da hist´oria do Bitcoin est´a no ledger (livro-raz˜ao) do

blockchain, por isso que se algu´em quiser provar que tem 20 bitcoins, a ´unica maneira de

fazer isso ´e apontando as transa¸c˜oes em que recebeu esses 20 bitcoins.

Neste ponto, algu´em pode pensar: ”mas os Bitcoins tˆem que sair originalmente
de algum lugar.”´E importante lembrar que os mineradores criam os bitcoins em troca de

recompensas, o que continuam fazendo at´e atingir o limite de 21 milh˜oes de bitcoins.

Portanto, o conceito fundamental a ser compreendido aqui ´e o seguinte: O hist´orico de

transa¸c˜oes ´e a moeda.

Alguns cr´ıticos argumentam que o Bitcoin ´e um esquema Ponzi 3. Franco,

2014 [23] aﬁrma que n˜ao ´e. Em um esquema Ponzi existe um operador central que paga

retornos aos investidores atuais com novas entradas de capital.

25

Figura 5: Grafo de um Esquema Ponzi, Dispon´ıvel em [32]

Em primeiro lugar, no Bitcoin n˜ao existe um operador central que possa lucrar

com a desaloca¸c˜ao de fundos. Em segundo lugar, n˜ao h´a mecanismo para desviar fundos

de novos investimentos para pagar retorno. Os ´unicos fundos reconhecidos no protocolo

Bitcoin s˜ao bitcoins, a moeda. Transferˆencias de bitcoins s˜ao iniciadas pelos usu´arios `a

sua vontade: o protocolo n˜ao pode desviar fundos de um usu´ario para outro. Em terceiro

lugar, um novo investimento em Bitcoin ´e sempre correspondido com um desinvestimento.

Os investidores que investem dinheiro em bitcoins geralmente operam atrav´es de troca

onde eles compram os bitcoins de outro investidor que est´a vendendo seus investimentos.

Simplesmente n˜ao h´a novos investimentos para bitcoins: a quantidade de moeda que

entrou em bitcoins corresponde exatamente a quantidade que saiu de bitcoins.

3A pirˆamide ﬁnanceira se assemelha a um esquema Ponzi: ela tamb´em se mant´em enquanto novos

usu´arios entrarem no esquema

26

Criptograﬁa

Neste cap´ıtulo ser´a feita uma contextualiza¸c˜ao da criptograﬁa, passando pe-

los seus precursores. Falaremos dos pesquisadores da criptograﬁa por curvas el´ıpticas.

At´e chegarmos ao autor do artigo fundamental do Bitcoin. Ser´a introduzido o conceito

de criptograﬁa de chave p´ublica da qual os modelos mais utilizados s˜ao a criptograﬁa

sim´etrica e assim´etrica. Falaremos tamb´em da criptograﬁa assim´etrica no blockchain.

Em 1941, Claude Elwood Shannon (Figura 6) que viveu entre 1916 a 2001,

entrou para a equipe da AT&T Bell Telephones no estado de Nova J´ersei, EUA. Ele fora

contratado como pesquisador matem´atico, tendo permanecido naquela institui¸c˜ao at´e o

ano de 1972. Em 1948, Shannon publicou artigo intitulado “A Mathematical Theory of

Communication”, Shannon, 1948 [49] que ´e considerado como artigo fundador da teoria

da troca de informa¸c˜oes.

Figura 6: Claude Elwood Shannon. Dispon´ıvel em [27]

Em outubro de 1949, Shannon publicou outro artigo intitulado “Communica-

tion Theory of Secrecy Systems” [48] o qual ´e geralmente designado como transformador

da criptograﬁa de arte para ciˆencia. As contribui¸c˜oes de Shannon s˜ao consideradas como

as precursoras da moderna criptograﬁa. Horst Feistel (1915 – 1990) (Figura 7) foi um

cript´ografo nascido na Alemanha que imigrou para os Estados Unidos e em 1968 juntou-se

ao centro de pesquisa IBM T.J. Watson em Yorktown Heights, Nova Iorque.

De l´a, ele liderou o laborat´orio o qual foi considerado o ´unico grupo de pes-

quisa n˜ao-governamental de criptograﬁa nos Estados Unidos e provavelmente no mundo

`a ´epoca. Feistel juntou-se `a IBM num momento prop´ıcio a tempo de resolver o problema

de seguran¸ca de transa¸c˜oes eletrˆonicas em caixas eletrˆonicos para o sistema de caixas

eletrˆonicos do banco Lloyd’s.

27

Figura 7: Horst Feistel. Dispon´ıvel em [6]

Feistel desenvolveu um sistema criptogr´aﬁco de cifras em blocos para proteger

os dados de um sistema de caixa eletrˆonico remoto. Isto n˜ao apenas representou um para-

digma para os sistemas de encripta¸c˜ao mas tamb´em principalmente trouxe a encripta¸c˜ao

de uma ciˆencia militar pouco conhecida para o cotidiano `a ´epoca estimulando assim a

pesquisa em criptograﬁa e a competi¸c˜ao por criar sistemas criptogr´aﬁcos.

Feistel tornou conhecido o Data Encryption Standard (DES) o qual foi larga-

mente utilizada por mais de 30 anos. O padr˜ao de encripta¸c˜ao de dados (DES) utiliza

uma t´ecnica de encripta¸c˜ao sim´etrica pela qual a mesma chave ´e aplicada nos dois la-

dos (por quem envia e por quem recebe), conhecida como a chave secreta. Em 2001,

o DES fora substitu´ıdo pelo AES (Advanced Encryption Standard) ou padr˜ao de en-

cripta¸c˜ao avan¸cado. Outros famosos algoritmos de encripta¸c˜ao s˜ao: Triple-DES, CDMF

(Commercial Data Masking Facility), IDEA (International Data Encryption Algorithm),

RC2, RC4, RC5, RC6, MARS, Blowﬁsh e Rijndael. Em 1973, Feistel tamb´em publicou

um artigo pioneiro na revista Scientﬁc American intitulado “Criptography and Computer

Privacy” [19] ou Criptograﬁa e privacidade computacional (tradu¸c˜ao do autor) que ´e con-

siderado a primeira informa¸c˜ao para o p´ublico em geral sobre criptograﬁa e privacidade.

“. . . seria surpreendente se a criptograﬁa, o meio tradicional de assegurar

conﬁdencialidade na comunica¸c˜ao, pudesse n˜ao fornecer a privacidade para a

comunidade de usu´arios de dados banc´arios.” - Feistel, 1973 (tradu¸c˜ao livre)

28

Depois do trabalho de Feistel seu artigo na revista Scentiﬁc American, muitos

pesquisadores se tornaram interessados no campo de pesquisa da criptograﬁa e alguns

deles decidiram investigar em como resolver o problema fundamental: “como mandar

uma chave sim´etrica para o outro lado atrav´es de um canal n˜ao conﬁ´avel?

No ﬁm de 1968 iniciou-se um trabalho onde Martin Hellman (Figura 8) encon-

trou membros do programa de pesquisas criptogr´aﬁcas, incluindo Horst Feistel e Alan G.

Konhein (Figura 10), outro cript´ografo.

“Eu me lembro de v´arias conversas com Feistel. Naquele ano as minhas

intera¸c˜oes com o Horst foram de grande representatividade em minha mudan¸ca

posterior para a criptograﬁa” - Hellman, 1968

Figura 8: Martin Hellman. Dispon´ıvel em [39]

Uma vez tendo almo¸cado com Feistel, que n˜ao apenas conversou sobre sistemas

cl´assicos criptogr´aﬁcos como tamb´em sobre problemas que pareciam sem solu¸c˜ao mas que

na verdade podiam ser resolvidos. Ent˜ao Hellman decidiu resolver o problema da troca de

chaves. Na sequˆencia ele foi para o MIT e ent˜ao para a faculdade de engenharia el´etrica

de Stanford.

Whitﬁeld Diﬃe (Figura 9) era um matem´atico da universidade de Stanford

que come¸cou a estudar criptograﬁa. No ver˜ao de 1974, Diﬃe foi para a IBM e conversou

com Alan Konheim sobre os desaﬁos no campo da criptograﬁa. Konheim disse algo muito

importante para Diﬃe:

29

Figura 9: Whitﬁeld Diﬃe. Dispon´ıvel em [22]

“Um velho amigo meu, chamado Martin Hellman, trabalhou aqui at´e um

tempo atr´as, e agora ele se encontra em Stanford. E duas pessoas podem

trabalhar num problema muito melhor que uma e ent˜ao quando vocˆe voltar

para Stanford, vocˆe deve procurar por ele.” - Alan Konheim

Figura 10: Alan Konheim. Dispon´ıvel em [58]

No ﬁnal de 74, dada a sugest˜ao de Konheim, Diﬃe visitou Hellman em Stan-

ford. De uma reuni˜ao de meia hora planejada para o in´ıcio da tarde entre Diﬃe e Hellman

acabou se tornando uma longa sess˜ao de discuss˜ao seguida do jantar at´e a noite, sendo

apenas o come¸co das discuss˜oes conjuntas. Nas palavras de Hellman:

“Foi uma epifania leve, encontrar uma alma gˆemea intelectual.” Martin

Hellman

30

A utiliza¸c˜ao de curvas el´ıpticas em criptograﬁa foi proposta de modo indepen-

dente [30] [35] por Neal Koblitz (Figura 11) e Victor Miller (Figura 12) em 1985, servindo

como uma eﬁciente forma de implementa¸c˜ao de um sistema de chave p´ublica. De acordo

com seus desenvolvedores, a criptograﬁa de curvas el´ıpticas pode ser mais r´apida e utilizar

chaves mais curtas para proporcionar o mesmo n´ıvel de seguran¸ca de m´etodos mais tradici-

onais, como o RSA. O protocolo RSA4 foi criado na d´ecada de setenta pelos pesquisadores

Ronald Rivest, Adi Shamir e Leonard Adleman (as iniciais d˜ao nome ao algoritmo).

Figura 11: Neal Koblitz. Dispon´ıvel em [40]

Figura 12: Victor Miller. Dispon´ıvel em [21]

Torres, 2007 [56] aﬁrma que Koblitz e Miller utilizaram as curvas el´ıpticas na

criptograﬁa como uma forma implementa¸c˜ao de um sistema de chave p´ublica em algumas

aplica¸c˜oes j´a existentes.

4para mais detalhes sobre o protocolo RSA veriﬁcar a disserta¸c˜ao do PROFMAT Sistema de Cripto-

graﬁa RSA de Corrˆea, 2013 [38]

31

O surgimento do Bitcoin ´e acreditado `a publica¸c˜ao de um artigo em 2008 inti-

tulado ”Bitcoin: A Peer-to-Peer Electronic Cash System” [36] (”Bitcoin: Um Sistema de

Dinheiro Eletrˆonico Ponto-a-Ponto”em tradu¸c˜ao livre), escrito por um autor desconhecido

(ou um grupo de pesquisadores) sob o pseudˆonimo de Satoshi Nakamoto. Nakamoto com-

binou v´arias das inven¸c˜oes anteriores tais como b-money [13] e HashCash [5] para criar

um sistema de dinheiro eletrˆonico completamente descentralizado que n˜ao dependesse de

uma autoridade central para a emiss˜ao de moeda ou para a liquida¸c˜ao e valida¸c˜ao de

transa¸c˜oes.

A principal inova¸c˜ao foi usar um sistema de computa¸c˜ao distribu´ıdo (chamado

algoritmo de ”proof-of-work”5 ou ”prova de trabalho”) para conduzir uma ”elei¸c˜ao”global

a cada 10 minutos, permitindo `a rede descentralizada chegar em um consenso sobre o

estado das transa¸c˜oes. Isto resolve de forma elegante o problema de gasto duplo, onde

uma ´unica unidade de moeda poderia ser gasta duas vezes.

Antes do Bitcoin, o problema de gasto duplo era uma fraqueza do dinheiro di-

gital, e sua solu¸c˜ao envolvia a transmiss˜ao e veriﬁca¸c˜ao de todas as transa¸c˜oes atrav´es de

uma entidade central. A rede Bitcoin surgiu em 2009, baseada em uma implementa¸c˜ao de

referˆencia publicada por Nakamoto [36] e desde ent˜ao revisada por outros programadores.

A computa¸c˜ao distribu´ıda que proporciona seguran¸ca e robustez ao Bitcoin cresceu ex-

ponencialmente e agora excede a capacidade combinada de processamento dos principais

supercomputadores do mundo. Em 2014, o valor de mercado de bitcoins era estimado

entre 5 e 10 bilh˜oes de d´olares americanos, dependendo da taxa de cˆambio entre o bit-

coin e o d´olar. A maior transa¸c˜ao processada at´e 2014 pela rede foi de US$ 150 milh˜oes,

transmitida instantaneamente e processada sem nenhuma taxa.

Satoshi Nakamoto afastou-se do p´ublico em abril de 2011, deixando a respon-

sabilidade pelo desenvolvimento do c´odigo e da rede nas m˜ao de um grupo de volunt´arios.

A identidade da pessoa ou pessoas por tr´as do Bitcoin ainda ´e desconhecida. No entanto,

nem Satoshi Nakamoto nem qualquer outra pessoa exerce controle sobre o sistema Bit-

coin, que opera baseado em princ´ıpios matem´aticos totalmente transparentes. A inven¸c˜ao

em si ´e revolucion´aria e j´a criou um novo campo de estudos nas ´areas da computa¸c˜ao

distribu´ıda, economia e econometria.

5O algoritmo proof-of-work ´e apresentado matematicamente no Cap´ıtulo Blockchains

32

A criptograﬁa ´e frequentemente considerada complicada e de dif´ıcil entendi-

mento. Por isso, aqui focamos em fazer uma introdu¸c˜ao a esse assunto, discutindo o

suﬁciente para entender o conceito de seguran¸ca do blockchain.

Segundo Correia, 2013 [15] atualmente a criptograﬁa consiste em uma s´erie

de f´ormulas matem´aticas, em que se utiliza um segredo (chamado de chave) para cifrar e

decifrar as mensagens. Este segredo pode ser o mesmo para as duas opera¸c˜oes (criptograﬁa

sim´etrica) ou pode haver segredos diferentes, um para cifr´a-la e outro para decifr´a-la

(criptograﬁa assim´etrica).

Criptograﬁa de chave p´ublica

Criptograﬁa ´e ´area de estudo que engloba as diversas estrat´egias de encripta¸c˜ao

e decripta¸c˜ao de informa¸c˜oes, sendo encripta¸c˜ao a transforma¸c˜ao de um texto claro (texto

original) em texto cifrado (encriptado), e decripta¸c˜ao a recupera¸c˜ao do texto claro (texto

original) a partir do texto cifrado.

No modelo de criptograﬁa dita sim´etrica, utiliza-se apenas uma chave, cha-

mada de chave secreta. A chave secreta ´e fornecida, juntamente com o texto claro (texto

original), a um algoritmo de encripta¸c˜ao, que gerar´a como sa´ıda um arquivo encriptado

(que ser´a diferente conforme a utiliza¸c˜ao de chaves secretas tamb´em diferentes). Chama-se

algoritmo de decripta¸c˜ao o c´odigo computacional a ser utilizado para reverter o processo

de encripta¸c˜ao, ou seja, a obten¸c˜ao do texto claro (texto original) a partir do texto en-

criptado, desde que fornecida a chave secreta utilizada no processo de encripta¸c˜ao.

A criptograﬁa sim´etrica ´e um m´etodo em que uma chave idˆentica ´e usada tanto

para codiﬁcar quanto para decodiﬁcar os dados. A seguran¸ca na utiliza¸c˜ao da criptograﬁa

sim´etrica depende de algoritmos fortes (que n˜ao sejam vulner´aveis a criptoan´alise) e que as

chaves secretas envolvidas nos processos de encripta¸c˜ao e decripta¸c˜ao sejam armazenadas

e compartilhadas pelos usu´arios autorizados de maneira conﬁdencial. Vide Figura 13 a

seguir:

Figura 13: Ilustra¸c˜ao esquem´atica da criptograﬁa sim´etrica. Adaptado de [16]

33

Por outro lado, a criptograﬁa de chave p´ublica, foco desse t´opico, ´e assim´etrica,

pois utiliza duas chaves distintas, por´em relacionadas (chave p´ublica e chave privada), o

que a distingue da criptograﬁa sim´etrica, que usa apenas uma mesma chave, chamada de

chave secreta, para suas opera¸c˜oes de encriptar e decriptar. A utiliza¸c˜ao de chaves separa-

das tem vantagens em rela¸c˜ao `a utiliza¸c˜ao de uma ´unica chave, principalmente no tocante

aos princ´ıpios da conﬁdencialidade, da autenticidade e de estrat´egias de armazenamento

e compartilhamento de chaves.

A criptograﬁa assim´etrica sempre utiliza duas chaves complementares. Todavia

o texto cifrado criado com uma dessas chaves s´o pode ser descriptografado com a outra

chave, e vice-versa.

Figura 14: Ilustra¸c˜ao esquem´atica da criptograﬁa assim´etrica. Adaptado de [16]

Os primeiros passos a serem executados em qualquer aplica¸c˜ao de criptograﬁa

assim´etrica s˜ao: criar um par de chaves complementares usando um software de cripto-

graﬁa; dar o nome de chave p´ublica a uma delas; dar o nome de chave privada `a outra;

manter a chave privada consigo e dar a sua chave p´ublica a todos os demais. Dois pas-

sos principais s˜ao necess´arios para usar a criptograﬁa assim´etrica na vida real: cria¸c˜ao e

distribui¸c˜ao das chaves e uso das chaves. A seguir est˜ao listadas algumas terminologias

relacionadas `a criptograﬁa de chave p´ublica:

• Chaves assim´etricas: s˜ao chaves que se complementam em opera¸c˜oes relativas `a

codiﬁca¸c˜ao (encripta¸c˜ao) e decodiﬁca¸c˜ao (decripta¸c˜ao) de informa¸c˜oes, e tamb´em `a

cria¸c˜ao e valida¸c˜ao de assinaturas digitais;

34

• Certiﬁcado de chave p´ublica: ´e um documento digital, assinado pela chave

privada de uma Autoridade de Certiﬁca¸c˜ao, que associa o nome de um usu´ario a

uma chave p´ublica. O certiﬁcado sinaliza que o usu´ario possui dom´ınio sobre a chave

privada relacionada;

• Algoritmo criptogr´aﬁco de chave p´ublica (assim´etrica): ´e o c´odigo compu-

tacional que utiliza as chaves p´ublica e privada em opera¸c˜oes relacionadas `a crip-

tograﬁa, com a propriedade de ser inexequ´ıvel computacionalmente a obten¸c˜ao da

chave privada a partir da chave p´ublica;

• Infraestrutura de chave p´ublica (PKI): ´e uma infraestrutura composta por pro-

cessos, pol´ıticas, servi¸cos de rede, entre outros itens, utilizada para a administra¸c˜ao

de certiﬁcados digitais e chaves p´ublicas e privadas relacionadas.

Em se tratando de conﬁdencialidade, a criptograﬁa de chave p´ublica (as-

sim´etrica) funciona com a encripta¸c˜ao da informa¸c˜ao usando-se a chave p´ublica do usu´ario

que receber´a a informa¸c˜ao. Esse mesmo usu´ario, assim que recebˆe-la, far´a uso de sua

chave privada para decriptar a informa¸c˜ao para dela fazer uso. Por exemplo: se Ana

deseja enviar uma mensagem sigilosa (conﬁdencial) a Bruno, Ana codiﬁcar´a (encriptar´a)

a mensagem usando a chave p´ublica de Bruno, e Bruno, por sua vez, usar´a sua chave

privada para decriptar (decodiﬁcar) a mesma mensagem.

A autentica¸c˜ao ´e outro princ´ıpio da Seguran¸ca da Informa¸c˜ao que ´e garantido

pela criptograﬁa de chave p´ublica. Se um usu´ario deseja enviar conte´udo assinado digital-

mente a outrem, dever´a, para tanto, utilizar-se de sua chave privada aplicada `a informa¸c˜ao

original. O usu´ario de destino dever´a, por sua vez, utilizar a chave p´ublica do usu´ario

de origem para validar o arquivo. Ressalve-se que somente o usu´ario de origem poderia

ter gerado o arquivo assinado digitalmente, haja vista a utiliza¸c˜ao de sua chave privada.

Esse processo respeita o princ´ıpio da autenticidade e tamb´em o da irretratabilidade (o

usu´ario que gerou o arquivo assinado digitalmente n˜ao poder´a negar a autoria em rela¸c˜ao

ao mesmo).

Como j´a aludido, a criptograﬁa assim´etrica colabora com a seguran¸ca no que

diz respeito `a disponibilidade das chaves: a chave p´ublica ﬁca dispon´ıvel a qualquer inte-

ressado, e a chave privada ﬁca dispon´ıvel apenas ao seu propriet´ario. Em contrapartida,

a criptograﬁa sim´etrica usa apenas uma chave, sendo que esta tem que ser de conheci-

mento tanto do emissor como do receptor. E ainda, por conta disso, essa chave dever´a ser,

35

em algum momento, compartilhada entre esses usu´arios. Por´em, o compartilhamento da

chave sim´etrica entre usu´arios gera inseguran¸ca, uma vez que um terceiro n˜ao autorizado

pode intercept´a-la durante seu envio, trˆansito ou recebimento. Um dos maiores problemas

relacionados `a utiliza¸c˜ao de chaves criptogr´aﬁcas diz respeito ao tr´afego de informa¸c˜ao

em um canal de comunica¸c˜ao inseguro, como a Internet.

Por conta disso, algoritmos criptogr´aﬁcos foram criados para que uma sess˜ao

de comunica¸c˜ao segura possa ser gerada e utilizada. Um desses algoritmos ´e o Diﬃe-

Hellman, cujo t´ıtulo ´e oriundo dos nomes de seus criadores (Whitﬁeld Diﬃe [22] e Martin

Hellman [39]), com publica¸c˜ao original sobre sua utiliza¸c˜ao remontando ao ano de 1976.

O algoritmo (de troca de chaves) Diﬃe-Hellman permite que dois ou mais usu´arios es-

tabele¸cam uma sess˜ao de comunica¸c˜ao criptografada em um canal inseguro por meio da

cria¸c˜ao de uma chave secreta de sess˜ao (em uma esp´ecie de criptograﬁa sim´etrica aplicada

`a seguran¸ca do meio de comunica¸c˜ao). O algoritmo Diﬃe-Hellman ´e utilizado apenas

para troca de chave, ou seja, n˜ao permite a criptograﬁa de informa¸c˜oes e nem assinatura

digital.

A Criptograﬁa de Curvas El´ıpticas ´e um algoritmo que permite a troca de chave

e tamb´em as opera¸c˜oes de criptograﬁa de encripta¸c˜ao e decripta¸c˜ao de informa¸c˜oes, al´em

de permitir a utiliza¸c˜ao de assinatura digital. Baseia-se na estrutura alg´ebrica de curvas

el´ıpticas sobre corpos ﬁnitos por meio da equa¸c˜ao y2 = x3 + ax + b com 4a3 + 27b2 (cid:54)= 0.

Uma breve introdu¸c˜ao sobre curvas el´ıpticas ´e feita no Apˆendice .

Criptograﬁa assim´etrica no blockchain

A criptograﬁa assim´etrica, al´em das fun¸c˜oes de hash, ´e intensamente utilizada pelo block-

chain. No blockchain a criptograﬁa assim´etrica ´e fundamental para identiﬁcar usu´arios

e proteger suas propriedades. Criptograﬁa assim´etrica ´e utilizada no blockchain para

alcan¸car dois objetivos:

• identiﬁcar contas: as contas de usu´arios s˜ao chaves de criptograﬁa p´ublicas;

• autorizar transa¸c˜oes: o propriet´ario da conta que transfere a posse cria um texto

cifrado com a chave privada correspondente. Esse texto cifrado pode ser conferido

utilizando a chave p´ublica.

36

Fun¸c˜oes Hash

Neste cap´ıtulo iremos abordar o conceito de fun¸c˜oes hash. As fun¸c˜oes hash

s˜ao parte fundamental do arcabou¸co t´ecnico de forma¸c˜ao do blockchain. Iremos primei-

ramente efetuar uma introdu¸c˜ao das fun¸c˜oes hash elementares, em seguida fun¸c˜oes hash

de aritm´etica modular para ﬁnalmente apresentar as fun¸c˜oes hash utilizadas no protocolo

Bitcoin: RIPEMD-160 e SHA-256.

Fun¸c˜oes Hash

Assim como as impress˜oes digitais s˜ao capazes de identiﬁcar unicamente os

seres humanos e s˜ao utilizadas para investigar crimes, identiﬁcar infratores etc. seu equi-

valente digital ´e o que denominamos de fun¸c˜oes hash, que ´e um conceito para identiﬁcar

dados. No sistema ponto-a-ponto distribu´ıdo, lidaremos com um volume enorme de dados

de transa¸c˜ao - como resultado - ser´a necess´ario identiﬁc´a-los unicamente e compar´a-los

de maneira mais r´apida e f´acil poss´ıvel. O blockchain utiliza o conceito de hashing crip-

togr´aﬁco que serve para identiﬁcar os dados de transa¸c˜ao e possivelmente, qualquer tipo de

dados unicamente, por meio de suas impress˜oes digitais. As fun¸c˜oes hash s˜ao algoritmos

que transformam qualquer tipo de dado em um n´umero de tamanho ﬁxo, independente-

mente do tamanho dos dados de entrada.

Figura 15: Ilustra¸c˜ao da fun¸c˜ao hash - Adaptado de [53]

Um grupo importante de fun¸c˜oes hash se chama fun¸c˜oes de hash criptogr´aﬁcas,

que criam impress˜oes digitais para qualquer tipo de dado. As fun¸c˜oes de hash crip-

togr´aﬁcas tˆem as seguintes propriedades:

37

• fornecem valores de hash para qualquer tipo de dado rapidamente: essa

propriedade ´e uma combina¸c˜ao de duas propriedades - primeiro, a fun¸c˜ao de hash

´e capaz de calcular valores de hash para todos os tipos de dados, segundo, ela faz

seus c´alculos rapidamente;

• s˜ao determin´ısticas: a fun¸c˜ao de hash produz valores de hash idˆenticos para dados

de entrada idˆenticos;

• s˜ao pseudoaleat´orias: ser pseudoaleat´oria signiﬁca que o valor de hash devolvido

por uma fun¸c˜ao de hash muda de forma imprevis´ıvel quando os dados de entrada

s˜ao alterados;

• s˜ao fun¸c˜oes unidirecionais: uma fun¸c˜ao unidirecional n˜ao possibilita que seus

valores sejam rastreados com base na sa´ıda;

• s˜ao resistentes `a colis˜ao: dizemos que uma fun¸c˜ao de hash ´e resistente `a colis˜ao

se for muito dif´ıcil encontrar duas ou mais por¸c˜oes distintas de dados para as quais

ela gere valor idˆentico de hash. Uma colis˜ao de hash ´e o equivalente digital de ter

duas pessoas com impress˜oes digitais idˆenticas.

A seguir o leitor ´e convidado a experimentar seu pr´oprio c´alculo de hash a partir

do seguinte endere¸co eletrˆonico: http://www.blockchain-basics.com/HashFunctions.

html Ao abrir a p´agina web em seu navegador de internet, vocˆe ver´a uma caixa de entrada

e outra de sa´ıda, conforme mostra a Figura 16 a seguir:

Figura 16: Exemplo c´alculo de hash. Dispon´ıvel em [16]

38

Digite o texto Hello World! na caixa de entrada `a esquerda e clique no bot˜ao

cujo r´otulo ´e “Calculate Hash Value” (Calcular o valor de hash), localizado abaixo da caixa

de texto. Certiﬁque-se de ter digitado exatamente Hello World! na caixa de entrada; caso

contr´ario, um resultado diferente daquele mostrado na Figura 16 ser´a obtido.

Ao clicar no bot˜ao, como resultado, a caixa de sa´ıda `a direita apresentar´a o

valor de hash do texto de entrada, calculado com quatro fun¸c˜oes de hash distintas. Os

valores de hash, em geral, s˜ao considerados como n´umeros de hash, pois usam n˜ao s´o os

d´ıgitos de 0 a 9, mas tamb´em as letras de A a F, que representam os valores de 10 a 15,

para expressar valores num´ericos. Esses n´umeros s˜ao chamados de hexadecimais. Observe

que os valores de hash diferem por causa dos diferentes detalhes de implementa¸c˜ao das

fun¸c˜oes de hash que os geram.

Valores de hash criptogr´aﬁcos s˜ao bem longos e, desse modo, para o olho hu-

mano, s˜ao dif´ıceis de ler ou comparar. Entretanto, durante este passo, compararemos dife-

rentes maneiras de gerar dados de hashing, e essa tarefa envolver´a a leitura e a compara¸c˜ao

de seus valores. Ser´a usada uma vers˜ao abreviada do valor de hash criptogr´aﬁco SHA256
no restante deste passo. ´E poss´ıvel reproduzir todos os valores de hash usando a fer-

ramenta disponibilizada no seguinte endere¸co: www.blockchain-basics.com/Hashing.

html

Ao acessar esse site com o navegador de internet, ´e visto uma caixa de entrada

para textos simples e um bot˜ao com uma seta que aponta para uma caixa de sa´ıda,

conforme mostra a Figura 17 a seguir:

Figura 17: C´alculo de hash abreviado. Dispon´ıvel em [16]

Ao clicar no bot˜ao com a seta, a caixa de sa´ıda apresentar´a o valor de hash

abreviado para o texto fornecido na caixa de entrada.

Usando aritm´etica modular em fun¸c˜ao hash

39

A seguir faremos um exemplo em que usamos a aritm´etica modular para apre-

sentar uma fun¸c˜ao hash elementar em uma situa¸c˜ao do cotidiano que descreveremos

abaixo. Este exemplo foi extra´ıdo e adaptado de Rosen, 2011 [44].

O computador central de uma companhia mant´em registros para cada um de

seus clientes. Como os locais de mem´oria podem ser atribu´ıdos para que os registros dos

clientes possam ser recuperados rapidamente? A solu¸c˜ao para esse problema ´e usar uma

fun¸c˜ao de hash adequadamente escolhida.

Registros s˜ao identiﬁcados usando uma chave, que identiﬁca de forma exclu-

siva os registros de cada cliente. Por exemplo, registros de clientes s˜ao frequentemente

identiﬁcados usando o n´umero do Registro Geral (RG) do cliente como a chave. Uma

fun¸c˜ao de hash h atribui o local de mem´oria h(k) ao registro que tem k como sua chave.

Na pr´atica, muitas fun¸c˜oes de hash diferentes s˜ao usadas.

Uma das mais comuns ´e a fun¸c˜ao de hash modular: h(k) = k mod m onde m

´e o n´umero de locais de mem´oria dispon´ıveis.

Lembremos que as fun¸c˜oes de hash devem ser facilmente avaliadas para que os

arquivos possam ser localizados rapidamente. A fun¸c˜ao de hash h(k) = k mod m atende

a este requisito; para encontrar h(k), necessita-se computar o resto da divis˜ao quando k

´e dividido por m. Al´em disso, as fun¸c˜oes de hash devem ser tais que, todos os locais de

mem´oria s˜ao poss´ıveis. A fun¸c˜ao h(k) = k mod m tamb´em satisfaz esta propriedade.

A seguir, trˆes exemplos extra´ıdos de Rosen, 2011 [44]:

Exemplo 3.1: Encontre os locais de mem´oria atribu´ıdos pela fun¸c˜ao de hash h(k) ≡ k

mod 111 aos registros de clientes com os n´umeros de RG 064212848 e 037149212.

Solu¸c˜ao:

Entrada

Sa´ıda

h(k) ≡ k

mod 111

n´umero RG

40

O registro do cliente com o n´umero de RG 064212848 ´e atribu´ıdo a localiza¸c˜ao

de mem´oria 14, visto que h(064212848) ≡ 064212848 mod 111 =⇒ 14 ≡ h(k)

Entrada

Sa´ıda

064212848

14

Da mesma forma, uma vez que h(037149212) ≡ 037149212 mod 111 ≡ 65, o

registro do cliente com n´umero de RG 037149212 ´e atribu´ıdo `a mem´oria de localiza¸c˜ao

65.

Entrada

Sa´ıda

037149212

65

Como uma fun¸c˜ao de hash n˜ao ´e um-para-um, mais de um arquivo pode ser

atribu´ıdo a um local de mem´oria. Quando isto acontece, dizemos que ocorre uma colis˜ao.

Uma maneira de resolver a colis˜ao ´e atribuir o primeiro local livre seguindo a

localiza¸c˜ao da mem´oria ocupada atribu´ıda pela fun¸c˜ao de hash.

Exemplo 3.2: Depois de fazer as atribui¸c˜oes de registros para as posi¸c˜oes no Exemplo

4.1, atribui-se posi¸c˜ao para o registro do cliente com o n´umero de RG 107405723.

Solu¸c˜ao: Veriﬁca-se que a fun¸c˜ao de hash h(k) ≡ k mod 111 mapeia o RG n´umero

107405723 para a localiza¸c˜ao 14, tendo em vista que: h(107405723) ≡ 107405723 mod 111 ≡

14 Caso a posi¸c˜ao j´a esteja ocupada, localizar-se-´a `a primeira posi¸c˜ao livre. No entanto,

este local j´a est´a ocupado (pelo arquivo do cliente com o RG n´umero 064212848). Mas,

tendo em vista que a localiza¸c˜ao da posi¸c˜ao 15, o primeiro local ap´os a posi¸c˜ao 14, ´e livre,

atribuiu-se o registro do cliente com o n´umero de RG 107405723 para este local (15).

Exemplo 3.3: Quais posi¸c˜oes s˜ao atribu´ıdos pela fun¸c˜ao de hash h(k) ≡ k mod 97 aos

registros de clientes com os seguintes n´umeros de RG?

41

(a) 034567981

(b) 183211232

(c) 220195744

(d) 987255335

Solu¸c˜ao: Solicita-se simplesmente calcular k mod 97 para cada valor de k. Faz-se isso

dividindo os RGs dados por 97 e pegando os restos, que pode ser encontrado multiplicando

o resto decimal por 97, ou subtraindo 97 vezes o quociente de k.

(a) 034567981 mod 97 ≡ 91

(b) 183211232 mod 97 ≡ 57

(c) 220195744 mod 97 ≡ 21

(d) 987255335 mod 97 ≡ 5

Outra maneira de resolver colis˜oes em hash ´e usar duplo hashing. Utiliza-se

uma fun¸c˜ao de hash inicial

h(k) = k mod p

onde p ´e primo. Tamb´em se usa uma segunda fun¸c˜ao de hash

g(k) = (k + 1) mod (p − 2)

Quando ocorre uma colis˜ao, usa-se uma sequˆencia

h(k, i) = (h(k) + i × g(k)) mod p

Use o procedimento de duplo hashing que foi descrito acima com p = 4969

para atribuir locais de mem´oria a arquivos para funcion´arios com n´umeros de RG: k1 =

509496993, k2 = 546332190

42

Solu¸c˜ao: Seguindo a abordagem acima:

(a) h(509496993) = 509496993 mod 4969 = 578

g(509496993) = 509496994 mod 4967 = 2002

h(509496993, 1) = (578 + 1 × 2002) mod 4969 = 2580

(b) h(546332190) = 546332190 mod 4969 = 578

g(546332190) = 546332191 mod 4967 = 1927

h(546332190, 1) = (578 + 1 × 1927) mod 4969 = 2505

O protocolo Bitcoin tamb´em faz uso do duplo hashing conforme ser´a visto no

decorrer deste trabalho.

A seguir, outro problema extra´ıdo e adaptado de Rosen, 2011 [44] ´e apresen-

tado:

Figura 18: Problema do Estacionamento e fun¸c˜ao hash. Imagem dispon´ıvel em [51]

Um estacionamento possui 31 vagas para visitantes, numeradas de 0 a 30. Os

visitantes recebem vagas de estacionamento usando a fun¸c˜ao de hash h(k) = k mod 31,

em que k ´e o n´umero formado a partir dos quatro ´ultimos d´ıgitos da placa do carro do

visitante.

1. Quais espa¸cos s˜ao atribu´ıdos pela fun¸c˜ao hash para carros com esses quatro ´ultimos

d´ıgitos em sua licen¸ca placas: 3417, 4018, 6207, 9400, 4761, 0310;

2. Descreva um procedimento que os visitantes devem seguir para encontrar um espa¸co

de estacionamento gratuito, quando o espa¸co a que est˜ao atribu´ıdos estiver ocupado.

43

Solu¸c˜ao:

1. h(3417) ≡ 3417 mod 31 ≡ 7

h(4018) ≡ 4018 mod 31 ≡ 19

h(6207) ≡ 6207 mod 31 ≡ 7

h(9400) ≡ 9400 mod 31 ≡ 7

h(4761) ≡ 4761 mod 31 ≡ 18

h(0310) ≡ 0310 mod 31 ≡ 0

2. Usando duplo hashing:

h(9400) ≡ 9400 mod 31 ≡ 7

g(9400) ≡ (9401) mod (29) ≡ 5

h(9400, 1) ≡ (h(9400) + 1 × 5) mod 31

7 + 5 mod 31 ≡ 12

As fun¸c˜oes JHA e JHA-1

Para ilustrar as fun¸c˜oes de hashing criptogr´aﬁcas e aplica¸c˜oes, com fun¸c˜oes

de hash que fossem f´aceis para os estudantes, Holden, 2013 [25] ministrou um curso de

criptograﬁa durante o Outono de 2000. O curso foi projetado para alunos que n˜ao tinham

forma¸c˜ao em matem´atica ou ciˆencia da computa¸c˜ao. Como n˜ao havia muitos recursos

para esses cursos `a ´epoca, Holden [25] criou sua pr´opria fun¸c˜ao de hash, que mais tarde

a chamou de ”Josh’s Hash Algorithm”, ou JHA. Suas metas para essa fun¸c˜ao eram:

• Simplicidade: Alunos com experiˆencia limitada deviam poder fazer exerc´ıcios sem

um computador num ´unico per´ıodo de aula, e

• Seguran¸ca: Deve ser razoavelmente seguro (resistente `a pr´e-imagem, resistente `a

segunda pr´e-imagem, e resistente a colis˜oes) dado o objetivo anterior.

A fun¸c˜ao de hash JHA pega um conjunto de caracteres de letras e espa¸cos e

gera um inteiro entre 0 e 16 de acordo `a seguinte regra:

JHA(texto) ≡ (7 × #vogais − 3 × #consoantes + #espacos2) mod 17

Por exemplo, o conjunto de caracteres M =”Ol´a, meu nome ´e Alice” tem um valor

de hash de:

44

JHA(M ) ≡ (7 × 10 − 3 × 6 + 42) mod 17 ≡ 0

No entanto Holden, 2013 [25] aﬁrma que JHA n˜ao ´e t˜ao segura. ´E moderada-

mente segura em rela¸c˜ao a ataques de pr´e-imagem, todavia n˜ao ´e muito segura em rela¸c˜ao

a ataques de segunda pr´e-imagem e de colis˜ao. Em Janeiro de 2010, Holden, 2013 [25]

mais uma vez queria ter uma fun¸c˜ao de hashing com os dois objetivos acima, ent˜ao ele

chegou a uma vers˜ao ligeiramente modiﬁcada do JHA, que chamou de fun¸c˜ao de hash

JHA-1:

JHA − 1(M ) ≡ 57×#vogais−3×#consoantes+#espacos2 mod 17

Por exemplo, o conjunto de caracteres M =”Ol´a, meu nome ´e Alice” tem

um valor de hashing dado por:

JHA − 1(M ) ≡ 57×10−3×6+42 mod 17 ≡ 13

De acordo com Holden em [25] JHA-1 ´e ainda mais seguro em rela¸c˜ao aos

ataques de pr´e-imagem, uma vez que eles envolveriam resolver um (pequeno) problema

de logaritmo discreto, mas realmente n˜ao ´e melhor em rela¸c˜ao aos outros tipos de ataques.

No entanto, isso se encaixou bem em sua meta de simplicidade.

As fun¸c˜oes de hash s˜ao unidirecionais. Sendo assim o funcionamento dos
quebra-cabe¸cas de hash dependem essencialmente desse fato. ´E imposs´ıvel resolver um

quebra-cabe¸ca de hash checando o atendimento do valor de hash `as restri¸c˜oes e, na

sequˆencia, aplicando na dire¸c˜ao inversa a fun¸c˜ao de hash (o que signiﬁca, da sa´ıda desejada

para a entrada exigida). A resolu¸c˜ao dos quebra-cabe¸cas de hash s´o podem se dar por

tentativa e erro, portanto muita capacidade de processamento ´e exigida o que consome

muita energia. Em m´edia, para encontrar a solu¸c˜ao, h´a inﬂuˆencia do n´ıvel de diﬁculdade

diretamente na necessidade de tentativas, o que, por seu turno, acaba inﬂuenciando no

tempo necess´ario ou nos recursos computacionais. Mais especiﬁcamente, no blockchain,

o hashing ´e usado nos casos a seguir:

• impress˜ao digital para os dados de transa¸c˜ao

• armazenagem de dados de transa¸c˜ao de modo sens´ıvel a mudan¸cas

• forma de incorrer em custos computacionais para alterar a estrutura de dados block-

chain

As duas fun¸c˜oes hash utilizadas no protocolo Bitcoin s˜ao introduzidas a seguir.

A fun¸c˜ao hash criptogr´aﬁca RIPEMD-160

45

David Schwartz aﬁrma em [18] que a fun¸c˜ao hash RIPEMD-160 foi utilizada

no protocolo Bitcoin porque produz hashs mais curtos. Isso permite que os endere¸cos de

Bitcoin sejam mais curtos.

De acordo com McAndrew, 2016 [34] esta ´e uma das mais fortes fun¸c˜oes hash

modernas. Foi desenvolvida pela equipe belga-alem˜a de cript´ografos Hans Dobbertin,

Antoon Bosselaers e Bart Preneel [14]. ”RIPEMD”signiﬁca ”RIPE Message Digest”ou

”RIPE Resumo da Mensagem”(tradu¸c˜ao livre), onde ”RIPE”signiﬁca ”Research and De-

velopment in Advanced Communications Technologies in Europe”ou ”Pesquisa e Desen-

volvimento em Tecnologias Avan¸cadas de Comunica¸c˜oes na Europa”(tradu¸c˜ao livre) - um

bom exemplo de abrevia¸c˜ao recursiva. Como o pr´oprio nome sugere, o RIPEMD-160

produz hashs de 160 bits. Uma vers˜ao anterior, RIPEMD-128, foi considerada insegura;

esta nova vers˜ao n˜ao s´o produz hashings mais longos, como tamb´em ´e imune aos ataques

aos quais o RIPEMD-128 ´e vulner´avel [14].

Como muitas fun¸c˜oes hash modernas, ´e um descendente de MD4 (Message

Digest 4) que foi desenvolvido por Ronald Rivest em 1990 [43]. Embora a MD4 tenha se

mostrado muito insegura, ela gerou uma s´erie de descendentes, dos quais RIPEMD-160 ´e

uma.

O pseudo-c´odigo do c´alculo da fun¸c˜ao hash RIPEMD-160 pode ser veriﬁcado

em [10]. A continua¸c˜ao do processo de c´alculo da fun¸c˜ao hash RIPEMD-160 se encontra

no Apˆendice .

A fun¸c˜ao hash criptogr´aﬁca SHA-256

46

SHA-256 (secure hash algorithm, FIPS 182-2) ´e uma fun¸c˜ao de hash crip-

togr´aﬁca com comprimento de trabalho de 256 bits.

David Schwartz aﬁrma em [18] que a fun¸c˜ao de hash SHA-256 ´e usada no

protocolo Bitcoin porque o uso de um hashing de uma chave p´ublica pelo Bitcoin pode

criar fraquezas ´unicas devido a intera¸c˜oes inesperadas entre a fun¸c˜ao RIPEMD-160 e o

protocolo ECDSA (algoritmo de assinatura de chave p´ublica). Sendo assim, interpor uma

opera¸c˜ao de hashing adicional e muito diferente entre o RIPEMD-160 e o ECDSA tornaria

quase inconceb´ıvel que pudesse haver uma maneira de encontrar colis˜oes de endere¸cos que

fossem signiﬁcativamente mais f´aceis do que a for¸ca bruta testando um grande n´umero de

chaves secretas.

Ken Shirriﬀ em seu blog [9] resolveu fazer um algoritmo para c´alculo da fun¸c˜ao

SHA-256 passo-a-passo gravando um v´ıdeo 6 onde demonstra uma rodada de c´alculo da

fun¸c˜ao (s˜ao ao todo 64 rodadas). David Rabahy [42] inspirado por Shirriﬀ resolveu criar

uma planilha 7 com os demais passos do c´alculo da fun¸c˜ao SHA-256 baseado no algoritmo

de Shirriﬀ.

O processo consiste a grosso modo em 64 iteradas partindo de valores iniciais

bem deﬁnidos, onde a partir da primeira iterada conter´a a mensagem de entrada a ser

calculada pela fun¸c˜ao de hashing.

Para o exemplo, o input ´e a palavra ”Hello World!”conforme Figura 16 cuja

hashing SHA-256:

7f 83b1657f f 1f c53b92dc18148a1d65df c2d4b1f a3d677284addd200126d9069

Mais detalhes desse processo de c´alculo da fun¸c˜ao vocˆe pode veriﬁcar no

Apˆendice . A Figura 19 ´e a primeira iterada dos parˆametros.

6O v´ıdeo est´a dispon´ıvel em: https://www.youtube.com/watch?v=y3dqhixzGVo
7Uma c´opia da planinha de Rabahy pode ser acessada em:

https://docs.google.com/

spreadsheets/d/1yOenOINC8qoCMLkWYasUsNbkmGyyDC_u1bYIzM03wt0/

47

6
5
2
-
A
H
S

o
˜a
¸c
n
u
f

a
d

a
d
a
d
o
r

a
m
u

e
d

o
l
u
c
l
´a
c

e
d

a
h
l
i
n
a
l
P

:
9
1

a
r
u
g
i
F

48

Blockchains

Segundo Antonopoulos, 2017 [3] as transa¸c˜oes s˜ao a parte mais importante do

sistema Bitcoin. Todo o restante no Bitcoin ´e projetado para garantir que as transa¸c˜oes

possam ser criadas, propagadas na rede, validadas e adicionadas ao registro global do

blockchain. As transa¸c˜oes s˜ao estruturas de dados que codiﬁcam a transferˆencia de valor

entre os participantes no sistema Bitcoin. Cada transa¸c˜ao ´e uma entrada p´ublica no

blockchain do Bitcoin, o registro geral de dupla-entrada.

Transa¸c˜oes

Para as transa¸c˜oes serem autorizadas, o blockchain deve garantir que somente

o propriet´ario leg´ıtimo possa transferir sua propriedade para outras contas. O sistema

ponto a ponto em considera¸c˜ao est´a aberto a todos. Sendo assim, qualquer um pode criar

transa¸c˜oes e submetˆe-las ao sistema. Os dados de transa¸c˜ao s˜ao a base para descrever

e deixar claro de quem ´e a posse. Somente o propriet´ario leg´ıtimo de uma conta deve

ser capaz de transferir o direito de propriedade ou de posse associado `a sua conta para

outra conta. O desaﬁo do blockchain ´e manter o sistema aberto, ao mesmo tempo em que

restringe a transferˆencia de posse ao propriet´ario leg´ıtimo.

Garantir que somente o propriet´ario leg´ıtimo transﬁra a posse consiste em uti-

lizar uma medida de seguran¸ca digital equivalente `as assinaturas feitas `a m˜ao e que sirvam

ao mesmo prop´osito: identiﬁcar uma conta, declarar a concordˆancia de seu propriet´ario

com o conte´udo dos dados da transa¸c˜ao espec´ıﬁcos e aprovar a sua execu¸c˜ao, permitindo

que os dados sejam adicionados ao hist´orico de dados de transa¸c˜ao.

Em termos simples, uma transa¸c˜ao informa para a rede que o dono de uma

quantidade de bitcoins autorizou a transferˆencia de alguns destes bitcoins para outro

dono. O novo dono agora pode gastar esses bitcoins ao criar uma nova transa¸c˜ao que

autoriza a transferˆencia para um outro dono, e assim por diante, em uma cadeia de posse

de bitcoins.

49

As transa¸c˜oes s˜ao como linhas em um ”registro cont´abil”(ledger) de dupla

entrada. Em termos simples, cada transa¸c˜ao cont´em um ou mais ”inputs”(entradas), que

s˜ao d´ebitos em uma conta bitcoin. No outro lado da transa¸c˜ao, existem um ou mais

”outputs”(sa´ıdas) que s˜ao cr´editos adicionados em uma conta bitcoin. A soma dos inputs

e outputs (d´ebitos e cr´editos) n˜ao necessariamente resultam na mesma quantia. Ao inv´es

disso, os outputs s˜ao um pouco maiores do que os inputs, e essa diferen¸ca se d´a devido

`a ”taxa de transa¸c˜ao”, que ´e um pequeno pagamento coletado pelo minerador que inclui

a transa¸c˜ao no registro cont´abil do Bitcoin (o blockchain). Uma transa¸c˜ao Bitcoin ´e

mostrada como uma entrada no registro cont´abil em transa¸c˜ao como um registro cont´abil

de entrada-dupla.

A transa¸c˜ao tamb´em cont´em uma prova de posse para cada quantia de bitcoins

(inputs) que ´e transferida, na forma de uma assinatura digital assinada pelo dono, que

pode ser validada por qualquer pessoa, de maneira independente. Usando a terminologia

do Bitcoin, ”gastar”´e assinar uma transa¸c˜ao que transfere um valor (de uma transa¸c˜ao

pr´evia) para um novo dono, o qual ´e identiﬁcado atrav´es de um endere¸co Bitcoin 8.

Figura 20: Diagrama de Transa¸c˜oes. Dispon´ıvel em:

[36]

8A regra de forma¸c˜ao de endere¸cos Bitcoin s˜ao apresentados ao ﬁnal deste cap´ıtulo

Pool de transa¸c˜oes

50

Quase todo n´o na rede bitcoin mant´em uma lista tempor´aria de transa¸c˜oes

n˜ao-conﬁrmadas chamada de mempool, pool de mem´oria ou pool de transa¸c˜oes. Os n´os

usam esse pool para manter um acompanhamento das transa¸c˜oes que s˜ao conhecidas pela

rede mas que ainda n˜ao foram inclu´ıdas no blockchain. Por exemplo, um n´o contendo

uma carteira de usu´ario utilizar´a um pool de transa¸c˜ao para acompanhar os pagamentos

para essa carteira que foram recebidos na rede, mas que ainda n˜ao foram conﬁrmados. As

transa¸c˜oes s˜ao recebidas e veriﬁcadas, sendo adicionadas ao pool de transa¸c˜oes e trans-

mitidas aos n´os vizinhos para serem propagadas para a rede.

Algumas implementa¸c˜oes de n´os tamb´em mant´em um pool separado de transa¸c˜oes

´orf˜as. Caso um input de transa¸c˜ao referir-se a uma transa¸c˜ao que ainda n˜ao ´e conhecida,

como um pai desconhecido, a transa¸c˜ao ´orf˜a ser´a armazenada temporariamente no pool

´orf˜ao at´e que a transa¸c˜ao pai chegue. Quando uma transa¸c˜ao ´e adicionada ao pool de

transa¸c˜oes, veriﬁca-se o pool ´orf˜ao para quaisquer ´orf˜aos que sejam referenciados para

esses outputs de transa¸c˜ao (seus ﬁlhos).

Quaisquer ´orf˜aos correspondentes s˜ao ent˜ao validados. Se v´alidos, eles s˜ao

removidos do pool ´orf˜ao e adicionados ao pool de transa¸c˜ao, completando a cadeia que

iniciou com a transa¸c˜ao pai. Na presen¸ca de uma transa¸c˜ao rec´em-adicionada, que n˜ao

´e mais uma ´orf˜a, o processo ´e repetido recursivamente em busca de quaisquer outros

descendentes, at´e que n˜ao se encontre mais nenhum descendente.

Atrav´es desse processo, a chegada de uma transa¸c˜ao pai desencadeia uma

reconstru¸c˜ao em cascata de uma cadeia completa de transa¸c˜oes interdependentes ao reunir

os ´orf˜aos com seus pais ao longo de toda a cadeia. Tanto o pool de transa¸c˜oes quanto o

pool de ´orf˜as (quando implementado) s˜ao armazenados na mem´oria local e n˜ao s˜ao salvos

em um armazenamento persistente; ao inv´es disso, eles s˜ao populados dinamicamente a

partir das mensagens de rede que chegam. Quando um n´o ´e iniciado, ambas os pools s˜ao

esvaziados e s˜ao gradualmente populados com as novas transa¸c˜oes recebidas na rede.

Assinaturas digitais

51

Suponha que algu´em queira enviar uma sauda¸c˜ao Hello World! de modo auto-

rizado para o mundo. Com essa ﬁnalidade, ele cria uma mensagem contendo a sauda¸c˜ao

e uma assinatura digital correspondente. Todo o processo de assinar dados digitalmente

est´a representado na Figura 21:

Figura 21: Cria¸c˜ao de uma assinatura digital. Adaptado de [16]

Esse processo come¸ca com a caixa branca na parte superior `a esquerda da

Figura 21 contendo a sauda¸c˜ao. Devemos criar o valor de hash da sauda¸c˜ao, que ´e

7F 83B165 e criptografar essa informa¸c˜ao com a chave privada. O texto cifrado do valor

de hash da sauda¸c˜ao (a caixa preta com letras brancas) ´e a assinatura digital da sauda¸c˜ao.

Dois aspectos a tornam ela ´unica: em primeiro lugar, pode ser associada unicamente, pois

foi criada com uma chave privada ´unica. Em segundo, ela ´e ´unica no que concerne

ao texto da sauda¸c˜ao porque est´a baseada na impress˜ao digital dela. Tanto a sauda¸c˜ao

quanto a assinatura digital s˜ao reunidas em um arquivo (a caixa cinza), que ´e a mensagem

digitalmente assinada para o mundo.

A seguir, faremos a veriﬁca¸c˜ao dos dados usando a assinatura digital conforme

Figura 22:

52

Figura 22: Usando uma assinatura digital. Adaptado de [16]

A mensagem, isto ´e, a sauda¸c˜ao em conjunto com a assinatura digital, ´e enviada

ao mundo todo. Qualquer um pode comprovar a autoriza¸c˜ao dessa mensagem utilizando

a chave p´ublica. O processo de veriﬁcar a mensagem usando a assinatura digital est´a na

Figura 22.

O processo ´e iniciado pela sauda¸c˜ao. Inicialmente, o pr´oprio receptor da men-

sagem calcula o valor de hash da sauda¸c˜ao, produzindo o valor 7F 83B165. Ent˜ao ele

descriptografa o texto cifrado associado (a assinatura digital) com a chave p´ublica. Ao

proceder, gera o valor 7F 83B165, que ´e o valor de hash daquela vers˜ao da sauda¸c˜ao que

se gostaria de enviar ao mundo. A compara¸c˜ao entre os dois valores de hash encerra a ve-

riﬁca¸c˜ao. Como ambos s˜ao idˆenticos, o receptor conclui, corretamente, que, em primeiro

lugar, a mensagem foi assinada, pois ele foi capaz de descriptografar a assinatura com a

chave p´ublica, e, em segundo, que o texto da sauda¸c˜ao que se encontra na mensagem ´e

realmente aquela que queria enviar, pois o texto cifrado descriptografado ´e idˆentico ao

valor de hash da sauda¸c˜ao na mensagem.

A Figura 23 mostra como a assinatura digital identiﬁca uma sauda¸c˜ao forjada.

Esta mesma ﬁgura tamb´em mostra a mensagem que chegou na caixa de correspondˆencia de

um amigo. Observemos a mudan¸ca no texto da sauda¸c˜ao. Algu´em malicioso substituiu

o ponto de exclama¸c˜ao por um ponto de interroga¸c˜ao e, desse modo, alterou todo a

sauda¸c˜ao. Essa n˜ao ´e a forma como se queria fazer a sauda¸c˜ao. A assinatura digital

mostrar´a a todos que a mensagem foi alterada contra a vontade do emissor da mensagem.

53

Figura 23: Identiﬁcando uma fraude. Adaptado de [16]

Inicialmente, o receptor da mensagem criar´a o valor de hash da sauda¸c˜ao,

produzindo o valor 8F 0B7C66. Ent˜ao ele descriptografar´a a assinatura digital usando a

chave p´ublica. Fazer isso produz o valor 7F 83B165, que ´e o valor de hash da vers˜ao da

sauda¸c˜ao que realmente se gostaria de enviar ao mundo. Uma compara¸c˜ao entre os dois

valores de hash revela que eles n˜ao s˜ao idˆenticos. Claramente, isso mostra que a sauda¸c˜ao

na mensagem n˜ao ´e a mesma. Assim, todos concluir˜ao que a mensagem n˜ao foi autorizada

e, desse modo, ningu´em se responsabilizar´a pelo seu conte´udo. As assinaturas digitais de

dados de transa¸c˜ao s˜ao uma combina¸c˜ao das informa¸c˜oes a seguir:

• valores de hash criptogr´aﬁcos dos dados de transa¸c˜ao;

• texto cifrado que pode ser associado `a chave privada correspondente de uma conta.

Transa¸c˜ao de Bitcoins na vida real

Bitcoin ´e uma tecnologia usada para representar dinheiro, que ´e fundamen-

talmente uma linguagem para a troca de valor entre pessoas. Vamos conhecer hist´orias

adaptadas de Antonopoulos, 2017 [3] de pessoas que est˜ao usando bitcoins e alguns dos

usos mais comuns da moeda e do protocolo. Iremos utilizar essas hist´orias para ilustrar

os usos do dinheiro digital na vida real e como eles se tornaram poss´ıveis por meio das

v´arias tecnologias que s˜ao partes do Bitcoin.

Alice mora na ´area norte da ba´ıa da Calif´ornia. Ela ouviu falar sobre o Bitcoin

atrav´es dos seus amigos e quer come¸car a us´a-lo. Iremos acompanhar a hist´oria de como

54

ela aprende a respeito do Bitcoin, adquire algumas moedas e ent˜ao gasta alguns de seus

bitcoins para comprar uma x´ıcara de caf´e no Caf´e do Bob em Palo Alto, Calif´ornia. Esta

hist´oria ir´a nos apresentar ao software, `as casas de cˆambio e transa¸c˜oes b´asicas desde a

perspectiva de um consumidor do varejo.

Alice n˜ao ´e uma usu´aria t´ecnica e s´o recentemente ouviu falar do Bitcoin

atrav´es de um amigo. Ela come¸ca sua jornada visitando o website oﬁcial bitcoin.

org, onde encontra uma ampla sele¸c˜ao de clientes bitcoin. Seguindo o conselho do site

bitcoin.org, ela escolhe o cliente bitcoin compacto Multibit. Alice segue um link do site

bitcoin.org para baixar e instalar a Multibit no computador pessoal dela.

Assim que a Alice terminar de baixar e instalar o aplicativo Multibit, ela o

executa e o Multibit automaticamente cria uma carteira e um novo endere¸co bitcoin:

Figura 24: O novo endere¸co bitcoin da Alice. Dispon´ıvel em [3]

A parte mais importante da tela da Figura 24 ´e o endere¸co Bitcoin da Alice.

Assim como um endere¸co de email, Alice pode compartilhar este endere¸co e qualquer um

pode us´a-lo para mandar dinheiro diretamente `a carteira dela. Mais detalhes sobre como

se d´a tecnicamente a forma¸c˜ao de endere¸cos Bitcoin est´a presente ao ﬁnal deste cap´ıtulo.

Agora, Alice est´a pronta para com Alice pode compartilhar este endere¸co e qualquer um

pode us´a-lo para mandar dinheiro diretamente `a carteira dela. Mais detalhes socomocomo

se d´a tecnicamente a forma¸c˜ao de endere¸cos Bitcoin est´a presente ao ﬁnal deste cap´ıtulo.

Agora, Alice est´a pronta para come¸car a usar sua nova carteira Bitcoin.

Depois de criar a sua carteira Bitcoin, Alice agora est´a pronta para receber

fundos (recursos). A carteira gera aleatoriamente uma chave privada junto com o endere¸co

Bitcoin correspondente. Nesse ponto, o endere¸co Bitcoin dela ainda n˜ao ´e conhecido pela

rede Bitcoin, nem ”registrado”em qualquer parte do sistema Bitcoin. O endere¸co Bitcoin

dela ´e simplesmente um n´umero que corresponde a uma chave que ela pode usar para con-

trolar o acesso aos fundos. N˜ao h´a uma conta ou associa¸c˜ao entre aquele endere¸co e uma

55

conta. At´e o momento em que este endere¸co esteja referenciado como o destinat´ario de

um valor em uma transa¸c˜ao publicada no ledger ou registro cont´abil de bitcoin (o block-

chain), ele ´e simplesmente parte da vasta quantidade de poss´ıveis endere¸cos considerados

”v´alidos”em Bitcoin. A partir do momento em que esteja associado com uma transa¸c˜ao,

ele se torna parte dos endere¸cos conhecidos na rede e a Alice poder´a comprovar o saldo

dela no registro p´ublico.

Alice encontrou-se em um restaurante local com um amigo, o Joe, que a apre-

sentou ao Bitcoin, para que eles possam trocar alguns d´olares e colocar bitcoins na conta

dela. Ela trouxe um papel com o endere¸co dela e o QR code impressos conforme aparecem

na carteira Bitcoin. N˜ao h´a nenhuma informa¸c˜ao que deva ser protegida, desde um ponto

de vista de seguran¸ca, no endere¸co Bitcoin. Ele pode ser publicado em qualquer lugar

sem nenhum risco de seguran¸ca `a conta da Alice.

Alice quer trocar somente 10 d´olares por bitcoins, para que assim ela n˜ao

arrisque muito dinheiro nessa nova tecnologia. Ela d´a ao Joe uma nota de $10 e o papel

impresso com seu endere¸co para que o Joe possa lhe mandar o montante equivalente em

bitcoins.

Em seguida, Joe tem que descobrir a taxa de cˆambio para que ele possa dar a

quantidade certa de bitcoins `a Alice.

Usando um dos aplicativos que informa a a taxa de cˆambio entre bitcoins e

d´olares, Joe determina o pre¸co do bitcoin como aproximadamente 100 d´olares por bitcoin.

Nesse momento, ele deveria dar a Alice 0.10 bitcoin, tamb´em chamado de 100 millibits,

em troca dos 10 d´olares que ela lhe deu.

Uma vez que Joe determinou um pre¸co justo para a troca, ele abre um aplica-

tivo de carteira em seu celular e seleciona ”enviar”bitcoin.

No campo para inserir o endere¸co Bitcoin, h´a um pequeno ´ıcone de um QR

code. Isso permite que Joe escaneie o c´odigo de barras com a cˆamera de seu smartphone

para que ele n˜ao tenha que digitar o endere¸co bitcoin da Alice:

1Cdid9KF AaatwczBwBttQcwXY CpvK8h7F K

O que seria algo grande e dif´ıcil de se digitar. Joe toca no ´ıcone do QR code e ativa

a cˆamera para escanear o QR code da carteira impressa que a Alice trouxe consigo. O

aplicativo de carteira m´ovel preenche o endere¸co Bitcoin e Joe pode veriﬁcar que o c´odigo

foi escaneado corretamente ao comparar alguns d´ıgitos com o endere¸co impresso pela

Alice.

56

Figura 25: A tela de envio de bitcoin . Dispon´ıvel em [3]

Ent˜ao Joe digita o valor em bitcoins da transa¸c˜ao, 0,10 bitcoin. Ele confere

com cuidado para ter certeza de que digitou a quantia correta, pois ele est´a a ponto

de transmitir dinheiro e qualquer erro pode custar caro. Finalmente ele aperta Enviar

para transmitir a transa¸c˜ao. A carteira m´ovel do Joe constr´oi a transa¸c˜ao que assina

0,10 bitcoin ao endere¸co da Alice, gerando os fundos da carteira do Joe e assinando a

transa¸c˜ao com as chaves privadas dele. Isso informa a rede Bitcoin que o Joe autorizou
uma transferˆencia de valor de um de seus endere¸cos para o novo endere¸co da Alice. `A

medida que a transa¸c˜ao se transmite conforme o protocolo Peer-to-peer, ela rapidamente

se propaga pela rede bitcoin. Em menos de 1 segundo, a maioria dos n´os com melhor

conex˜ao na rede recebem a transa¸c˜ao e veem o endere¸co da Alice pela primeira vez.

Se Alice tiver um smartphone ou um laptop com ela, tamb´em ser´a capaz de

ver a transa¸c˜ao. O registro cont´abil do Bitcoin — um arquivo que n˜ao p´ara de crescer

e que guarda cada uma das transa¸c˜oes em bitcoin que j´a ocorreram desde o in´ıcio —

´e p´ublico, o que signiﬁca que tudo que ela tem de fazer ´e olhar seu pr´oprio endere¸co

e ver se quaisquer fundos foram mandados para ele. Ela pode fazer isso facilmente no

site blockchain.info, digitando o endere¸co dela no campo de busca. O website lhe vai

mostrar uma p´agina listando todas as transa¸c˜oes de e para aquele endere¸co. Se a Alice

estiver olhando essa p´agina, vai ver uma atualiza¸c˜ao que mostra uma nova transa¸c˜ao

transferindo 0,10 bitcoin para o saldo dela logo depois do Joe apertar Enviar.

Inicialmente, o endere¸co da Alice vai mostrar a transa¸c˜ao do Joe como ”Transa¸c˜ao

n˜ao Conﬁrmada.”Isto signiﬁca que a transa¸c˜ao j´a se propagou pela rede, mas ainda n˜ao foi

57

inclu´ıda no registro cont´abil de transa¸c˜oes do Bitcoin, conhecido como o blockchain (cadeia

de blocos). Para ser inclu´ıda, a transa¸c˜ao deve ser ”escolhida”por um minerador e in-

clu´ıda em um bloco de transa¸c˜oes. Quando um novo bloco ´e criado, em aproximadamente

10 minutos, as transa¸c˜oes dentro do bloco passam a ser aceitas como ”conﬁrmadas”pela

rede e ent˜ao podem ser gastas. A transa¸c˜ao ´e vista instantaneamente por todos, mas s´o

se torna ”conﬁada”por todos quando est´a inclu´ıda em um novo bloco minerado.

Alice ´e uma nova usu´aria que acabou de obter seu primeiro bitcoin. Ela encon-

trou com seu amigo, Joe, para trocar algum dinheiro por bitcoin. A transa¸c˜ao criada por

Joe alocou 0,10 BTC na carteira de Alice. Agora, ela ir´a fazer sua primeira compra, um

transa¸c˜ao de varejo, comprando uma x´ıcara de caf´e na cafeteria do Bob, em Palo Alto,

Calif´ornia. A cafeteria do Bob come¸cou a aceitar recentemente pagamentos em bitcoin,

ao adicionar a op¸c˜ao de pagamentos por bitcoin no sistema do seu ponto de vendas. Os

pre¸cos na cafeteria s˜ao listados na moeda local (d´olares americanos), mas no caixa, os

clientes agora contam com a op¸c˜ao de pagar tanto em d´olares quanto em bitcoin. Alice

faz seu pedido - uma x´ıcara de caf´e - e Bob entra a transa¸c˜ao em seu sistema de vendas.

O sistema do ponto de vendas far´a a convers˜ao do pre¸co total em d´olares para bitcoins,

tendo como referˆencia a cota¸c˜ao do momento, e apresenta o valor ﬁnal nas duas moedas,

bem como um QR code contendo uma requisi¸c˜ao de pagamento para essa transa¸c˜ao.

Total: $1.50 USD 0,015 BTC

Bob diz: ”A conta deu 1,50 d´olares, ou 15 millibits.”

Alice ent˜ao usa o smartphone dela para escanear o c´odigo de barras mostrado

na tela do Bob. O smartphone dela mostra um pagamento de 0,0150 BTC para o Bob’s

Cafe e ao clicar em Enviar ela autoriza o pagamento. Dentro de alguns segundos (apro-

ximadamente o mesmo tempo que leva uma autoriza¸c˜ao de cart˜ao de cr´edito), o Bob

visualiza a transa¸c˜ao em seu caixa, completando a transa¸c˜ao.

O pagamento da Alice para o Caf´e do Bob usa uma transa¸c˜ao pr´evia como sua

entrada. Alice recebeu bitcoins do amigo dela em troca de dinheiro. Aquela transa¸c˜ao

continha um n´umero de bitcoins ”trancados”(alienados) com a chave da Alice. Sua nova

transa¸c˜ao para o Caf´e do Bob utiliza a transa¸c˜ao pr´evia como uma entrada e cria novas

sa´ıdas para pagar pela x´ıcara de caf´e e receber o troco. As transa¸c˜oes formam uma cadeia,

onde os inputs da ´ultima transa¸c˜ao correspondem `as sa´ıdas das transa¸c˜oes anteriores. A

chave da Alice fornece a assinatura que desbloqueia estas sa´ıdas de transa¸c˜oes pr´evias,

desta maneira provando `a rede Bitcoin que ela ´e a dona dos fundos. Ela vincula seu

pagamento pelo caf´e ao endere¸co do Bob, desta maneira ”alienando”esta sa´ıda com o

requisito de que Bob produza uma assinatura, liberando essa quantidade de bitcoins para

ser gasta.

Isso representa a transferˆencia de valor entre Alice e Bob. Essa cadeia de

transa¸c˜oes, do Joe para a Alice, e dela para o Bob, ´e ilustrada na Figura 26:

58

Figura 26: Cadeia de Transa¸c˜oes. Dispon´ıvel em [3]

O aplicativo de carteira cont´em toda a l´ogica para selecionar as entradas e

sa´ıdas apropriadas para construir uma transa¸c˜ao com os dados especiﬁcados pela Alice.

Ela s´o precisa fornecer os dados de destino e uma quantia: o seu aplicativo de carteira

faz todo o resto, sem que ela sequer veja os detalhes. Outro aspecto importante, ´e que o

aplicativo de carteira tamb´em pode construir transa¸c˜oes mesmo estando completamente

oﬄine. Da mesma maneira que vocˆe pode preencher um cheque em casa para depois

deposit´a-lo em um envelope no banco, uma conex˜ao com a rede bitcoin n˜ao ´e necess´aria

para que uma transa¸c˜ao seja constru´ıda e assinada. A transa¸c˜ao s´o precisa ser enviada

para a rede quando a pessoa quiser efetu´a-la.

O aplicativo de carteira da Alice ter´a primeiro que achar os inputs que podem

pagar pela quantia que ela quer enviar para o Bob. A maioria dos aplicativos de carteira

mant´em um pequeno banco de dados de ”sa´ıdas de transa¸c˜oes n˜ao gastos”que s˜ao tran-

cados (alienados) com as pr´oprias chaves da carteira. Logo, a carteira de Alice iria conter

uma c´opia da sa´ıda da transa¸c˜ao do Joe, que foi criada na troca pelo dinheiro.

59

Um aplicativo de carteira de bitcoin que roda como um cliente de ´ındice com-

pleto na verdade cont´em uma c´opia de cada sa´ıda n˜ao gasta de todas as transa¸c˜oes

presentes na blockchain. Isso permite que a carteira construa inputs de transa¸c˜ao, al´em

de veriﬁcar rapidamente se as transa¸c˜oes que chegam tem inputs corretos. No entanto,

como um cliente de ´ındice completo ocupa muito espa¸co de armazenamento em disco, a

maioria das carteiras roda clientes ”leves”que mant´em somente o registro das sa´ıdas n˜ao

gastas do usu´ario.

A carteira de Alice cont´em bitcoins suﬁcientes em uma sa´ıda n˜ao-gasta isolado

para pagar pela x´ıcara de caf´e. Caso n˜ao contivesse, o aplicativo carteira de Alice teria

que ”vasculhar”uma pilha de pequenas sa´ıdas n˜ao-gastas, como se estivesse pegando as

moedas em uma bolsa, at´e encontrar o suﬁciente para poder pagar o caf´e. Em ambos os

casos, pode haver uma necessidade de receber algum troco de volta, quando o aplicativo

carteira cria as sa´ıdas da transa¸c˜ao (pagamentos).

Uma sa´ıda de transa¸c˜ao ´e criada na forma de um c´odigo que cria uma aliena¸c˜ao

no valor a ser transferido, de maneira que o valor s´o pode ser regastado se uma solu¸c˜ao for

apresentada ao c´odigo. De maneira simpliﬁcada, a sa´ıda da transa¸c˜ao de Alice ir´a conter

um c´odigo que diz algo como ”Essa sa´ıda ´e pag´avel para aquela pessoa que conseguir

apresentar uma assinatura para a chave correspondente ao endere¸co p´ublico de Bob”.

Como somente o Bob possui a carteira com as chaves correspondentes `aquele endere¸co,

somente a carteira do Bob pode apresentar a assinatura para resgatar essa sa´ıda. Alice

ao fazer uma exigˆencia de assinatura do Bob, ela est´a fazendo uma ”aliena¸c˜ao”ao valor

da sa´ıda.

Essa transa¸c˜ao tamb´em incluir´a uma segunda sa´ıda, porque os fundos de Alice

est˜ao na forma de uma sa´ıda de 0,10 BTC, que ´e dinheiro demais para a transa¸c˜ao de

0,015 BTC pela x´ıcara de caf´e. Alice precisar´a de 0,085 BTC de troco. O pagamento

do troco da Alice ´e criado pela carteira da Alice na mesma transa¸c˜ao que o pagamento

do Bob. Essencialmente, a carteira de Alice divide seus fundos em dois pagamentos: um

para o Bob, e outro de volta para si mesma. Ela pode ent˜ao usar a sa´ıda do troco em

uma transa¸c˜ao no futuro, gastando-o mais tarde.

Finalmente, para que a transa¸c˜ao seja processada pela rede em tempo h´abil,

o aplicativo de carteira da Alice ir´a adicionar uma pequena taxa. Isso n˜ao est´a expl´ıcito

na transa¸c˜ao: isso est´a impl´ıcito na diferen¸ca entre as entradas e as sa´ıdas. Se ao inv´es de

60

receber 0,085 de troco, Alice cria somente 0,0845 como uma segunda sa´ıda, haver´a 0,0005

(metade de um milibitcoin) restantes. A entrada de 0,10 BTC n˜ao ´e totalmente gasta

com as duas sa´ıdas, porque ele ir´a se somar at´e menos do que 0,10. A diferen¸ca resultante

´e a taxa de transa¸c˜ao que ´e coletada pelo minerador como um pagamento por ter inclu´ıdo

a transa¸c˜ao em um bloco e adicionar esse bloco no livro raz˜ao da blockchain.

A transa¸c˜ao resultante pode ser vista usando um aplicativo web explorador de

blockchain, como visto na Figura 27:

Figura 27: Transa¸c˜ao de Alice para o Bob. Dispon´ıvel em [3]

Agora a carteira da Alice pode enviar a nova transa¸c˜ao para qualquer um

dos outros clientes bitcoins se ela estiver conectada atrav´es de uma conex˜ao de Internet:

por cabo, WiFi ou m´ovel. A sua carteira n˜ao tem que obrigatoriamente estar conectada

diretamente `a carteira do Bob ou usar a conex˜ao de internet oferecida pela cafeteria,

embora essas op¸c˜oes tamb´em sejam poss´ıveis. Qualquer n´o (outro cliente) na rede bitcoin

que receber uma transa¸c˜ao v´alida que n˜ao tenha sido vista anteriormente, ir´a propag´a-la

imediatamente para outros n´os com os quais est´a ligado. Logo, a transa¸c˜ao rapidamente

´e propagada atrav´es da rede ponto-a-ponto (P2P), atingindo uma grande percentagem

dos n´os dentro de poucos segundos.

Se a carteira do Bob estiver diretamente conectada `a carteira da Alice, o

aplicativo pode ser o primeiro n´o a receber a transa¸c˜ao. Entretanto, mesmo que a carteira

de Alice envie a transa¸c˜ao atrav´es de outros n´os, a transa¸c˜ao chegar´a `a carteira do Bob

61

dentro de pouco segundos. A carteira de Bob ir´a identiﬁcar imediatamente a transa¸c˜ao de

Alice como um pagamento porque ela cont´em sa´ıdas que s˜ao resgat´aveis pelas chaves do

Bob. A carteira de Bob tamb´em pode veriﬁcar independentemente que a transa¸c˜ao ´e bem

formada, utiliza entradas previamente n˜ao-gastos e cont´em taxas de transa¸c˜ao suﬁcientes

para ser inclu´ıda no pr´oximo bloco. Neste momento Bob pode esperar, com um alto grau

de probabilidade, que a transa¸c˜ao ser´a em breve inclu´ıda em um bloco e ser´a conﬁrmada.

A transa¸c˜ao foi propagada na rede bitcoin. Ela s´o vai tornar-se parte do livro-

raz˜ao compartilhado (a blockchain) quando for veriﬁcada e inclu´ıda em um bloco, atrav´es

de um processo chamado minera¸c˜ao.

O sistema de conﬁan¸ca do bitcoin ´e baseado em computa¸c˜ao. As transa¸c˜oes

s˜ao agrupadas em blocos, o que requer uma enorme quantidade de processamento para

prov´a-las, mas apenas uma pequena quantidade de processamento para veriﬁc´a-las como

previamente provadas. O processo de minera¸c˜ao do bitcoin possui dois prop´ositos:

• A minera¸c˜ao cria novos bitcoins em cada bloco, quase como um banco central im-

primindo novas moedas e notas. A quantidade de bitcoin criada por bloco ´e ﬁxa e

diminui com o tempo.

• A minera¸c˜ao cria conﬁan¸ca ao garantir que as transa¸c˜oes sejam conﬁrmadas somente

se poder de processamento suﬁciente for dedicado ao bloco que as cont´em. Mais

blocos requerem mais processamento, o que signiﬁca maior conﬁan¸ca.

Uma boa maneira de descrever a minera¸c˜ao ´e a sugerida por Antonopoulos,

2017 [3]. Ele descreve minera¸c˜ao como um jogo de sudoku, gigantesco e competitivo, que

reinicia cada vez que algu´em encontra uma solu¸c˜ao e cuja diﬁculdade se ajusta automati-

camente, de maneira que leve cerca de 10 minutos para que uma solu¸c˜ao seja encontrada.

Imaginemos um sudoku gigantesco, com milhares de colunas e linhas de tamanho. Se

algu´em mostrar para outra pessoa um sudoku completo, essa pessoa pode veriﬁcar ra-

pidamente que ele est´a corretamente preenchido. No entando, se o sudoku tiver apenas

alguns quadrados preenchidos e o resto estiver vazio, levar´a muito trabalho para resolvˆe-

lo! A diﬁculdade do sudoku pode ser ajustada ao mudar o seu tamanho (mais ou menos

linhas ou colunas), mas o sudoku ainda pode ser veriﬁcado de maneira r´apida, mesmo que

ele seja muito grande. O ”quebra-cabe¸cas”usado no bitcoin ´e baseado em um hash crip-

togr´aﬁco, que exibe caracter´ısticas semelhantes: ele ´e assimetricamente dif´ıcil de resolver,

mas f´acil de veriﬁcar, e sua diﬁculdade pode ser ajustada.

Blocos

62

Acumular e somar todas as transa¸c˜oes atuais ´e o primeiro passo na constru¸c˜ao

de um bloco para o blockchain. Quando um usu´ario cria uma transa¸c˜ao, esta ´e transmitida

para toda a rede e, em seguida, o computador de um membro da rede captura essa

transa¸c˜ao e revisa, para se certiﬁcar de que ela ´e v´alida. O computador da rede que tem

essa fun¸c˜ao ´e conhecido como ”veriﬁcador”. Dado que as moedas no blockchain n˜ao s˜ao

mais do que uma s´erie de transa¸c˜oes, o primeiro passo para conﬁrmar uma transa¸c˜ao

consiste em olhar de onde o remetente diz que originalmente recebeu o dinheiro. O

veriﬁcador deve rever a hist´oria do blockchain para encontrar o bloco e a transa¸c˜ao em

que o emissor recebeu o dinheiro originalmente.

• Se a transa¸c˜ao for conﬁrmada, ent˜ao a transa¸c˜ao ´e v´alida, e ter´a que ser conﬁrmado

o endere¸co da parte receptora, para, em seguida, seja adicionada esta transa¸c˜ao ao

livro;

• Se a transa¸c˜ao de entrada n˜ao for v´alida, por exemplo, se algu´em est´a enviando 1

bitcoin a um usu´ario, mas no blockchain n˜ao h´a registro de que alguma vez que esse

algu´em tenha recebido bitcoins, esta transa¸c˜ao ´e considerada inv´alida, ser´a exclu´ıda

e n˜ao ser´a inclu´ıda no livro raz˜ao

Uma vez que todas as transa¸c˜oes nesse bloco forem veriﬁcadas, ´e o momento

de adicion´a-las `a cadeia. O exemplo a seguir ´e simples, e mostra onde as transa¸c˜oes s˜ao

listadas uma ap´os a outra:

[Entrada] [Quantidade] [Endere¸co de sa´ıda], [Entrada] [Quantidade] [Endere¸co

de sa´ıda], [Entrada] [Quantidade] [Endere¸co de sa´ıda], [Entrada] [Quantidade]...

Em seguida, o veriﬁcador aplica uma t´ecnica criptogr´aﬁca chamada de fun¸c˜ao

de hash ou fun¸c˜ao de hashing para cada uma das transa¸c˜oes. Em sua deﬁni¸c˜ao mais

b´asica, o hashing (impress˜ao digital do bloco) pega uma cadeia de caracteres e gera outra

cadeia de caracteres. Por isso, quando se alimenta um algoritmo de hash com a entrada,

a quantidade e o endere¸co de sa´ıda, o resultado ser´a uma cadeia de caracteres ´unicos para

essa transa¸c˜ao, como essa:

aba128d3931e54ce63a69d8c2c1c705ea9f 39ca950df 13655d92db662515eacf

(Esse ´e um hashing de uma transa¸c˜ao real do Blockchain)

63

Assim, o hash ´e utilizado para normalizar os dados, enquanto fornece uma

seguran¸ca que permite revisar que os dados n˜ao foram manipulados.

Por exemplo, se algu´em tentar mudar uma transa¸c˜ao no blockchain, teriam que

fazer novamente o hashing da transa¸c˜ao, e seria completamente diferente, o que ﬁcaria

em evidˆencia, que foi manipulado.

Para que o blockchain seja ainda mais dif´ıcil de manipular, s˜ao realizadas v´arias

etapas de hash. Isso signiﬁca que o hash de uma transa¸c˜ao ´e combinado com um hash

de outra transa¸c˜ao, e um novo hash ´e feito gerando um c´odigo menor. Essa combina¸c˜ao

das transa¸c˜oes ´e conhecida como ´arvore de Merkle 9 e assegura que todas as transa¸c˜oes

no bloco sejam v´alidas enquanto utiliza menos mem´oria a longo prazo.

Figura 28: Blocos. Dispon´ıvel em:

[2]

O ´ultimo elemento adicionado a um bloco ´e um selo de tempo e a vincula¸c˜ao

aos blocos anteriores da cadeia, utilizando novamente um hash que, de alguma maneira,

insere o conte´udo de blocos anteriores no conte´udo do novo bloco.

O hashing toma uma entrada, n˜ao importa qu˜ao grande ou pequena seja, e

a transforma em uma cadeia de caracteres. Se algu´em alterar a entrada, mesmo que

minimamente, a sa´ıda mudar´a completamente. Desta forma, se o conte´udo de um antigo

bloco j´a foi vinculado a um novo bloco e depois algu´em altera o bloco anterior, por menor

que seja a altera¸c˜ao, mudar´a todo o hashing do bloco.

Desta forma, uma vez que um bloco foi conclu´ıdo e, quanto mais tempo passa,

mais dif´ıcil se torna alterar, com sucesso, uma transa¸c˜ao sem que seja detectado. Esta ´e

a raz˜ao por que o hash ´e o n´ucleo de seguran¸ca do blockchain e permite que o livro raz˜ao

seja p´ublico e seguro ao mesmo tempo.

9Segundo Judmayer et al.

´Arvores de Merkle s˜ao ´arvores bin´arias em que os n´os das folhas s˜ao

marcados com os valores que precisam ser autenticados e cada um n´o folha ´e marcado com o hash das

marca¸c˜oes ou valores de seus n´os ﬁlhos

64

No entanto, ´e preciso dizer que o hashing, por si s´o, n˜ao ´e t˜ao dif´ıcil de resolver.

A maioria dos computadores podem criar um hash de um blockchain em poucos segundos,

de forma que, com o objetivo de garantir a seguran¸ca, ´e necess´ario introduzir um outro

n´ıvel de diﬁculdade para a cria¸c˜ao de um novo bloco. Este n´ıvel de diﬁculdade ´e chamado

de ”proof-of-work”.

O objetivo do blockchain ´e manter todo o hist´orico de dados de transa¸c˜ao

ordenado. O desaﬁo consiste em armazenar todos os dados das transa¸c˜oes realizadas,

preservando a ordem em que ocorreram, e que possibilite detectar, de modo r´apido e f´acil,

qualquer altera¸c˜ao feita nos dados. Detectar modiﬁca¸c˜oes rapidamente ´e importante, pois

constitui a base para evitar que o hist´orico de transa¸c˜oes seja manipulado ou forjado.

A ideia ´e criar uma biblioteca de dados de transa¸c˜ao para manter um cat´alogo

ordenado que preserve a ordem em que as transa¸c˜oes foram adicionadas `a biblioteca.

Para detectar qualquer mudan¸ca feita, seja no cat´alogo de ordena¸c˜ao ou nos dados de

transa¸c˜oes individuais, os dados devem ser armazenados de modo sens´ıvel a mudan¸cas,

usando referˆencias de hash.

Esta se¸c˜ao explica como transformar um livro em uma pequena biblioteca com

um cat´alogo de ordena¸c˜ao, que, na verdade, ser´a uma vers˜ao simpliﬁcada da estrutura de

dados blockchain.

Ponto de partida: um livro

Durante muitos s´eculos, as informa¸c˜oes escritas eram preservadas em rolos de

pergaminho de dif´ıcil manipula¸c˜ao. Atualmente, estamos acostumados a ter informa¸c˜oes

escritas preservadas em c´odices: conjuntos de p´aginas numeradas unidas por uma lom-

bada, que chamamos de livros. Pelo fato de serem t˜ao comuns, aceitamos a inova¸c˜ao

que os livros representam, sem question´a-la. Algumas de suas propriedades importantes

incluem:

• Armazenamento de conte´udo: os livros armazenam conte´udo em suas p´aginas.

• Ordena¸c˜ao: as frases nas p´aginas, assim como as p´aginas do livro, s˜ao ordenadas.

• Conex˜ao entre as p´aginas: as p´aginas est˜ao ﬁsicamente conectadas por meio

da lombada do livro, e logicamente conectadas pelo conte´udo e pelos n´umeros das

p´aginas.

65

Como consequˆencia dessas propriedades, podemos navegar pelos livros para

a frente e para tr´as, virando as p´aginas, ou podemos pular diretamente para p´aginas

espec´ıﬁcas utilizando seus n´umeros. Vamos ver o que poder´ıamos fazer se mud´assemos

algumas dessas propriedades. Vamos resumir o que conseguimos com esse exemplo (Figura

29).

Figura 29: P´aginas do livro. Adaptado de [16]

Transformamos um livro cl´assico em duas pilhas ﬁsicamente n˜ao ordenadas

de p´aginas soltas, ligadas por n´umeros de referˆencia ´unicos. Uma pilha de p´aginas tem

o conte´udo, enquanto a outra mant´em a ordena¸c˜ao. Por quest˜oes de simplicidade, cha-

maremos a ´ultima pilha de p´aginas de cat´alogo de ordena¸c˜ao. Cada p´agina do cat´alogo

de ordena¸c˜ao cont´em o n´umero de referˆencia para a sua p´agina anterior e o n´umero de

referˆencia para a p´agina de conte´udo correspondente. Como resultado, separamos as

informa¸c˜oes de ordena¸c˜ao das informa¸c˜oes de armazenamento, e a localiza¸c˜ao l´ogica (a

ordem) da localiza¸c˜ao f´ısica das p´aginas. Pelo fato de termos usado valores de hash como

n´umeros de referˆencia, qualquer um pode veriﬁcar se esses valores est˜ao corretos apenas

os recalculando. Como as p´aginas do cat´alogo de ordena¸c˜ao n˜ao est˜ao mais ﬁxas em

uma lombada, somente poderemos navegar por ele de tr´as para a frente, p´agina a p´agina,

seguindo os n´umeros de referˆencia de p´agina que apontam para a p´agina anterior.

Proof-of-work

66

No contexto do blockchain, os quebra-cabe¸cas de hash s˜ao chamados de prova

de trabalho (proof of work), tendo em vista que a solu¸c˜ao prova que algu´em (o minerador)

fez o trabalho necess´ario para resolvˆe-lo.

Proof-of-work (Prova de trabalho) ´e o que protege o Bitcoin e, em um n´ıvel

profundo, permite a descentraliza¸c˜ao do Bitcoin. Encontrar uma prova de trabalho d´a

ao minerador o direito de colocar o bloco anexado ao blockchain. A prova de trabalho

´e dif´ıcil mas ao mesmo tempo objetiva: qualquer um pode ser um minerador se assim o

desejar.

A prova de trabalho ´e chamada de ”minera¸c˜ao”pelo seguinte motivo (Song,

2019) [52]: como na minera¸c˜ao f´ısica, h´a algo que os mineiros est˜ao procurando. Uma

opera¸c˜ao t´ıpica de minera¸c˜ao de ouro processa 45 toneladas de sujeira e rocha antes de

acumular 1 on¸ca de ouro.

Isto ´e porque o ouro ´e muito raro. No entanto, uma vez

encontrado o ouro, ´e muito f´acil veriﬁcar se o ouro ´e real. Existem testes qu´ımicos, pedras

de toque e outras maneiras sendo relativamente barato de dizer se o material encontrado

´e ouro.

Segundo Dwork e Naor [17] a implementa¸c˜ao mais simples da ideia do proof-

of-work ´e basear a diﬁculdade em extrair ra´ızes quadradas m´odulo um primo p. N˜ao h´a

atalho conhecido para esta fun¸c˜ao.

• ´Indice Um primo p de comprimento dependendo do parˆametro de diferen¸ca;

• Deﬁni¸c˜ao de fp O dom´ınio de fp ´e Zp. fp(x) =

√

x mod p.

• Veriﬁca¸c˜ao Dados x,y veriﬁque que y2 ≡ x mod p

A etapa de veriﬁca¸c˜ao requer apenas uma multiplica¸c˜ao. Por outro lado, n˜ao

´e conhecido nenhum m´etodo de extrair ra´ızes quadradas m´odulo primo que exija menos

do que log p multiplica¸c˜oes. Assim, quanto maior o comprimento de p, maior a diferen¸ca

entre o tempo necess´ario para avaliar fp e o tempo necess´ario para a veriﬁca¸c˜ao.

De acordo com Judmayer et al [29] o requisito b´asico para uma prova de

trabalho deve ser que seja dif´ıcil para produzir, mas f´acil de veriﬁcar.

Recapitulando, para Campello, 2018 [12] transa¸c˜ao ´e a anota¸c˜ao de que uma

67

quantidade de recursos saiu de uma origem para um destino, ou na linguagem da block-

chain, saiu de uma carteira para outra carteira. Aﬁrma ainda que blocos nada mais s˜ao

do que um conjunto de transa¸c˜oes, al´em de um cabe¸calho contendo algumas informa¸c˜oes.

O bloco ´e a p´agina com anota¸c˜oes no topo (cabe¸calho) e as transa¸c˜oes s˜ao as linhas dessa

p´agina, com cada linha contendo, no m´ınimo, as seguintes informa¸c˜oes: um identiﬁcador

´unico (id); carteira de origem; carteira de destino; valor transferido.

As informa¸c˜oes que est˜ao no cabe¸calho do bloco geralmente s˜ao: o n´umero do

bloco (feito o n´umero da p´agina, por exemplo); a data e a hora que o bloco foi criado

(minerado); um hash gerado a partir das transa¸c˜oes daquele bloco; um hash gerado a

partir do cabe¸calho do bloco anterior e o nonce.

O nonce ´e um n´umero inteiro que prova que algu´em trabalhou muito para
poder encontr´a-lo. ´E a chave, o resultado ﬁnal, de um desaﬁo computacional promovido

pelo protocolo da blockchain. Segundo Song, 2019 [52] Nonce signiﬁca ”number used only

once”ou ”n´umero usado apenas uma vez”ou n-once (uma) vez. Esse n´umero ´e o que ´e

alterado pelos mineiros ao procurar prova de trabalho. O protocolo da blockchain entrega

aos membros da rede, os n´os, o seguinte desaﬁo: ”Concatenar um inteiro ao ﬁnal do hash

gerado a partir das transa¸c˜oes e gere um novo hash a partir dessa nova string. Caso o

hash gerado a partir da jun¸c˜ao do hash oriundo das transa¸c˜oes mais esse n´umero inteiro

n˜ao tenha 20 zeros a sua frente, v´a incrementando esse n´umero inteiro at´e achar um novo

hash com 20 zeros na frente.”

Existe um desaﬁo computacional envolvido na obten¸c˜ao do nonce, a chave para

o quebra-cabe¸cas do protocolo da blockchain.

Ser´a considerado agora um quebra-cabe¸ca de hash real para ilustrar o seu

funcionamento. Vimos que o valor de hash abreviado de Hello World! ´e 7F83B165.

Mas qual dado combinado com Hello World! produziria um valor de hash abreviado

com trˆes zeros na frente? Portanto, este ´e o quebra-cabe¸ca de hash: encontre o nonce

que, combinado com Hello World!, produza um valor de hash abreviado com trˆes zeros

na frente. Experimentaremos alguns nonces. A Tabela 1 mostra o nonce, o texto cujo

hash ser´a gerado e o valor de hash abreviado resultante. Como se pode ver, o nonce 614

resolve o quebra-cabe¸ca de hash, o que implica que, se come¸car com um nonce 0 e for

incrementado sequencialmente, seriam necess´arios 615 passos para encontrar a solu¸c˜ao.

Se a restri¸c˜ao fosse encontrar um valor de hash com 1 (hum) zero na frente, esse quebra-

cabe¸ca teria sido resolvido depois de quatro passos, pois Hello World!3 gera um valor de

hash com 1 (hum) zero na frente.

68

Nonce Texto cujo hash sera gerado

Saida

0

1

2

3

613

614

615

Hello World!0

Hello World!1

Hello World!2

Hello World!3

...

4EE4B774

3345B9A3

72040842

02307D5F

Hello World!613

E861901E

Hello World!614

00068A3C

Hello World!615

5EB7483F

Tabela 1: Nonces para resolver um quebra-cabe¸ca de hash

´E poss´ıvel fazer o teste em www.blockchain-basics.com/HashPuzzle.html

Parte essencial do quebra-cabe¸ca de hash ´e exigir que o valor de hash atenda a uma

determinada restri¸c˜ao. Assim sendo, a sua descri¸c˜ao e a restri¸c˜ao n˜ao s˜ao arbitr´arias.

Os quebra-cabe¸cas de hash utilizam restri¸c˜ao padronizada, de tal forma que outros s˜ao

desaﬁados por computadores com tais quebra-cabe¸cas. As restri¸c˜oes em geral s˜ao cha-

madas de diﬁculdade ou n´ıvel de diﬁculdade em se tratando de quebra-cabe¸cas de hash.

Um n´umero natural expressa a diﬁculdade e se refere ao total de zeros na frente que o

hash deve ter de valor. Portanto, diﬁculdade igual a 1 (hum) implica que o valor de hash

deve ter (pelo menos) um zero na frente, enquanto uma diﬁculdade igual a 10 (dez) quer

dizer que o valor de hash deve ter no m´ınimo 10 zeros na frente. Mais complicado ser´a

o quebra-cabe¸ca de hash e mais zeros na frente s˜ao necess´arios quanto maior o n´ıvel de

diﬁculdade. Mais tempo ou capacidade de processamento ser˜ao necess´arios para resolvˆe-lo

quanto mais complicado o quebra-cabe¸ca.

A m´etrica de diﬁculdade mostrada na Figura 30, ao longo de dois anos ´e medida

como a raz˜ao da diﬁculdade atual pela diﬁculdade m´ınima (a diﬁculdade do primeiro

bloco). Ap´os achar o fat´ıdico nonce, o n´o sortudo informa aos demais que conseguiu

resolver o desaﬁo primeiro que os demais e, para provar o seu trabalho, informa o n´umero

do nonce e o conjunto de transa¸c˜oes as quais ser˜ao inclusas nesse bloco. Os demais n´os

facilmente atestam o nonce e o bloco enﬁm ´e fechado (minerado), partindo para o pr´oximo

bloco. Antes disso s˜ao creditadas na carteira do n´o sortudo algumas criptomoedas, visto

69

que o vencedor minerou e atrav´es de seu esfor¸co computacional conseguiu achar o nonce

e fechar um bloco.

Lembrando que no cabe¸calho do pr´oximo bloco existe um hash gerado a partir

do cabe¸calho do anterior o que inclui tanto o nonce quanto o hash do cabe¸calho anterior

ao anterior. Das transa¸c˜oes ´e gerado um hash que ´e incluso no cabe¸calho do pr´oprio bloco

junto com o nonce. O hash do cabe¸calho, por sua vez, comp˜oe o cabe¸calho do bloco em

seguida, formando uma cadeia de blocos: a blockchain. Desta forma temos uma sequˆencia

de blocos encadeados (blockchain) garantido o estado de todos os blocos visto que caso

se altere qualquer m´ınima informa¸c˜ao numa transa¸c˜ao, ser´a necess´ario gerar outro hash

da transa¸c˜ao e ir atr´as de outro nonce. E se n˜ao for do bloco imediatamente anterior, o

pretenso hacker teria que fazer isso em todos os blocos posteriores. Mesmo se ele tivesse

poder computacional pra isso, o comportamento anˆomalo dele na rede j´a seria notado e

teria sido desconectado pelos n´os saud´aveis, tudo isso gra¸cas a outra grande premissa da

blockchain: o consenso.

Figura 30: M´etrica de diﬁculdade de minera¸c˜ao do Bitcoin, ao longo de dois anos. Dis-

pon´ıvel em [3]

Neste momento o leitor ´e encorajado a visitar no Apˆendice os detalhes ma-

tem´aticos sobre o aprofundamento dos c´alculos de fun¸c˜oes hash criptogr´aﬁcas do protocolo

bitcoin (SHA-256 e RIPEMD-160) bem como da soma de pontos das Curvas El´ıtpicas.

Endere¸co Bitcoin

70

A seguir est´a uma breve vis˜ao geral de como funciona a gera¸c˜ao de endere¸cos Bitcoin,

explica¸c˜ao dispon´ıvel no endere¸co eletrˆonico [59] resumido pelo diagrama a seguir (Figura

31):

Figura 31: Chave p´ublica para endere¸co bitcoin: convers˜ao de uma chave p´ublica em um

endere¸co bitcoin. Adaptado de [3]

Os pr´oximos passos da cria¸c˜ao de endere¸cos bitcois foram apresentados no

71

seguinte artigo [59]:

1. Ter uma chave privada do tipo ECDSA.

2. Pegar a chave p´ublica correspondente gerada a partir da chave privada gerada (33

bytes, 1 byte 0x02 (y-coord ´e par) e 32 bytes correspondentes `a coordenada X)

3. Executar a fun¸c˜ao SHA-256 na chave p´ublica do item 2

4. Executar a fun¸c˜ao hash RIPEMD-160 no resultado de SHA-256 do item 3

5. Adicionar byte de vers˜ao na frente do hash RIPEMD-160 (0x00 para rede principal)

6. Executar o hash SHA-256 no resultado estendido do RIPEMD-160

7. Executar o hash SHA-256 no resultado do hash SHA-256 anterior

8. Pegar os primeiros 4 bytes do segundo hash SHA-256. Este ´e o endere¸co checksum.

9. Adicionar os 4 bytes de soma de veriﬁca¸c˜ao do est´agio 7 no ﬁnal do hash RIPEMD-

160 estendido do est´agio 4. Esse ´e o Endere¸co Bitcoin bin´ario de 25 bytes.

10. Converter o resultado de uma cadeia de bytes em um caracter base58 usando a

codiﬁca¸c˜ao Base58Check.

No endere¸co eletrˆonico https://gobittest.appspot.com/Address ´e poss´ıvel

testar os passos acima da gera¸c˜ao de Endere¸cos Bitcoin.

Blockchain

72

O blockchain ´e um sistema ponto a ponto puramente distribu´ıdo para geren-
ciamento de posses. ´E constitu´ıdo de computadores individuais que mantˆem a pr´opria

vers˜ao de um livro-raz˜ao imut´avel no qual ´e armazenado o hist´orico completo dos dados

de transa¸c˜ao. Desse modo, os computadores individuais s˜ao equivalentes `as testemu-

nhas que podem aﬁrmar se determinada transa¸c˜ao ocorreu de acordo com suas pr´oprias

mem´orias. Um sistema ponto a ponto puramente distribu´ıdo n˜ao tem nenhum ponto

central de coordena¸c˜ao ou controle. Portanto, n˜ao h´a nenhum componente central que

dissemine informa¸c˜oes a todos os computadores que comp˜oem o sistema. A comunica¸c˜ao

entre os n´os que comp˜oem o sistema ponto a ponto distribu´ıdo tem os trˆes prop´ositos a

seguir:

• manter as conex˜oes existentes ativas;

• estabelecer novas conex˜oes;

• distribuir novas informa¸c˜oes.

Sua ﬁnalidade ´e fazer o gerenciamento de posses. Assim, o terceiro tipo de

comunica¸c˜ao tem como foco a adi¸c˜ao de novos dados de transa¸c˜ao e de novos blocos `a
estrutura de dados blockchain. ´E importante compreender que os conceitos principais

que constituem o blockchain dependem de outros conceitos e tecnologias. Compreender

o blockchain exige, no m´ınimo, uma aprecia¸c˜ao desses conceitos tamb´em.

Figura 32: Uma Blockchain ´e uma lista vinculada criada com ponteiros de hash. Adaptado

de [37]

73

O blockchain ´e um sistema Peer-to-peer aberto a qualquer um. Quem quiser

pode se conectar e submeter novos dados de transa¸c˜ao ao sistema ou contribuir com

recursos computacionais.

A exclusividade ´e uma caracter´ıstica constituinte da propriedade privada. O

direito de transferir a posse para outra conta deve estar restrito ao dono da conta que

cede a posse. Assim, Drescher, 2017 [16] aﬁrma que o desaﬁo do blockchain ´e proteger a

propriedade atribu´ıda `as contas sem restringir a arquitetura aberta do sistema distribu´ıdo.

Segundo Swan, 2015 [54] os diferentes tipos de atividades em potencial do

blockchain s˜ao divididas em trˆes categorias: Blockchain 1.0, 2.0 e 3.0.

• Blockchain 1.0 ´e moeda, a implanta¸c˜ao de criptomoedas em aplicativos relacionados

a dinheiro, como transferˆencia de moeda, remessa, e sistemas de pagamento digital;

• Blockchain 2.0 s˜ao contratos, toda a lista econˆomica, mercado e aplicativos ﬁnan-

ceiros usando o blockchain mais extensos do que transa¸c˜oes simples em dinheiro:

a¸c˜oes, t´ıtulos, futuros, empr´estimos, hipotecas, t´ıtulos, propriedades e contratos

inteligentes;

• Blockchain 3.0 s˜ao aplicativos blockchain al´em da moeda, ﬁnan¸cas e mercados -

particularmente nas ´areas de governo, sa´ude, ciˆencia, literatura, cultura, arte e

tamb´em de educa¸c˜ao.

A Tabela 2 resume as tecnologias que comp˜oem o blockchain em um n´ıvel mais

detalhado:

74

Conceito

Prop´osito

Dados de transa¸c˜ao

Descrever a transferˆencia da posse

Hist´orico de transa¸c˜oes

Apresentar o estado atual da posse

Valor de hash criptogr´aﬁco

Identiﬁcar qualquer tipo de dado unica-

mente

Criptograﬁa assim´etrica

Criptografar e descriptografar dados

Assinatura digital

Declarar concordˆancia com o conte´udo dos

dados de transa¸c˜ao

Referˆencia de hash

Uma referˆencia que se torna inv´alida assim

que os dados referenciados s˜ao alterados

Estruturas de dados sens´ıveis a mudan¸cas Armazenar dados de modo que qualquer

manipula¸c˜ao se torne evidente de imediato

Quebra-cabe¸ca de hash

Impor uma tarefa custosa do ponto de

vista de processamento

Estrutura de dados blockchain

Armazenar dados de transa¸c˜ao de modo

sens´ıvel a mudan¸cas e manter a sua ordem

Imutabilidade

Tornar imposs´ıvel a altera¸c˜ao do hist´orico

de dados de transa¸c˜ao

Rede ponto a ponto distribu´ıda

Compartilhar o hist´orico de transa¸c˜oes en-

tre todos os n´os de uma rede

Transmiss˜ao de mensagens

Garantir que todos os n´os do sistema rece-

bam todas as informa¸c˜oes em algum mo-

mento

Algoritmo de blockchain

Garantir que somente dados de transa¸c˜ao

v´alidos sejam adicionados `a estrutura de

dados blockchain

Consenso distribu´ıdo

Garantir que todos os n´os do sistema uti-

lizem um hist´orico de dados de transa¸c˜ao

idˆentico

Pagamento

Dar um incentivo aos n´os por manter a

integridade

Tabela 2: Conceitos t´ecnicos do blockchain e seus prop´ositos. Adaptado de [16]

75

Proposta Did´atica

Neste cap´ıtulo, apresentaremos uma proposta sugerida inicialmente por Ko-

nonenko, 2018 [31] e adaptada para o nosso contexto cuja did´atica visa a facilitar o

entendimento do blockchain a alunos da educa¸c˜ao de ensino m´edio. Ser˜ao apresentadas

analogias l´udicas utilizando conceitos do pr´oprio ambiente escolar dos alunos.

Quem j´a tentou aprender o b´asico do blockchain percebe que ﬁca t´ecnico ra-

pidamente sendo apresentado de cara a conceitos como:

• “Livro distribu´ıdo”

• ”Hash criptogr´aﬁco”

• ”Assinaturas digitais”

Embora o aluno certamente possa perseverar durante a pesquisa inicial, ele

precisa entender uma s´erie de novos conceitos t´ecnicos antes de entender todo o sistema.
´E t˜ao dif´ıcil porque Bitcoin (e blockchain) s˜ao baseados em um paradigma distribu´ıdo

e descentralizado. Estamos acostumados a autoridades centralizadas e conﬁ´aveis, como

bancos, prestadores de servi¸cos de sa´ude e corpora¸c˜oes.

Cada uma dessas institui¸c˜oes possui sistemas complicados para manter a alta

qualidade. A ﬁm de manter esses mesmos padr˜oes para produtos vitais sem a autoridade

centralizada os alunos precisam de novas regras complicadas para manter os sistemas

descentralizados tamb´em. Ent˜ao, a did´atica proposta ´e criar uma nova escola chamada

“Escola Secund´aria Distribu´ıda” que operar´a usando os princ´ıpios do blockchain. Vamos

criar uma nova maneira de classiﬁcar as tarefas de uma aula de matem´atica usando

um sistema distribu´ıdo. Os alunos poder˜ao manter o sistema de notas sem a ajuda de

professores.

76
Administrando uma escola secund´aria de maneira dis-

tribu´ıda

Primeiramente, a proposta ser´a direcionada para os alunos calouros no ensino

m´edio (os alunos do 1º ano) que est˜ao fazendo uma aula de matem´atica. Para passar

na aula, o aluno precisa obter uma pontua¸c˜ao suﬁciente nas tarefas de casa, testes e

provas. Existem 30 alunos no total da turma, mas o professore poder´a adaptar para o

total de alunos de sua classe. Tudo isso ´e gerenciado por uma autoridade centralizada

- o professor. Esta pessoa avalia todas as tarefas, entrega os boletins a cada trimestre

e garante que ningu´em esteja trapaceando nos testes, o que arruinaria a integridade da

turma.

Figura 33: Professor como autoridade central. Adaptado de [31]

Embora este seja o sistema que os alunos est˜ao acostumados, na verdade tem

algumas falhas importantes:

• Ineﬁciente os alunos demoram a se lembrar do que aconteceu quando recebem 30

testes de um professor. O professor levar´a bastante tempo para corrigi-los porque

leva algum tempo para corrigir 30 testes.

• Arriscado os alunos provavelmente j´a viram um professor que perde o teste de um

avaliado. Ou aquele que mant´em seus testes em um arquivo em um quarto, que

pega fogo um dia e, de repente, os testes est˜ao corrompidos. Ambos acontecem e os

professores lidam com tantas tarefas que pode haver algum erro.

• Corrupt´ıvel E se o aluno for o encrenqueiro da classe? Quando o professor se senta

77

para corrigir seu teste, ele pode dar uma olhada no nome na parte superior do teste

e tornar-se instantaneamente parcial ao classiﬁcar o teste. Isso pode ser intencional

ou n˜ao intencional.

• Custoso Todo o tempo gasto em provas pode n˜ao estar adicionando valor aos alunos

ou `a sociedade. Esta tamb´em ´e provavelmente a parte menos preferida do traba-

lho pelo professor. Eles provavelmente se tornaram professores para que pudessem

ajudar os alunos a aprender, n˜ao somente para aplicar testes.

Podemos ver problemas semelhantes com outros sistemas centralizados. Por

exemplo, o setor banc´ario por meio de pr´aticas arriscadas passou pela crise ﬁnanceira de

2008 que exigiram um resgate massivo de recursos.

Figura 34: Banco como autoridade central. Adaptado de [31]

A esta altura, os alunos podem estar se perguntando: como vamos resolver

todos esses problemas, removendo a inﬂuˆencia do professor, a ´unica pessoa com mais
experiˆencia neste sistema? Como impedir´ıamos que isso se tornasse uma anarquia? ´E a´ı

que entra o conceito do blockchain. Antes de entrar na maneira espec´ıﬁca, usaremos o

blockchain para criar uma nova maneira para a Escola Secund´aria Distribu´ıda funcionar,

onde os alunos devem saber que cada blockchain tem regras espec´ıﬁcas que s˜ao institu´ıdas

pelo seu criador. No exemplo do Bitcoin, seria “Satoshi Nakamoto” [36], que escreveu

o livro branco original e criou as regras (algoritmos) que lhe permitiram operar sem

interven¸c˜ao humana. No nosso exemplo did´atico, teremos um diretor que mudou as

regras.

Blockchain para o ensino m´edio distribu´ıdo

78

Enquanto um professor classiﬁca testes e gerencia notas em particular, um

blockchain torna todas as transa¸c˜oes p´ublicas. Portanto, blockchain n˜ao depender´a de

nenhuma autoridade central, al´em da pessoa que a criou. Isso signiﬁca que, na Escola

Secund´aria Distribu´ıda, os alunos do 1ª ano v˜ao classiﬁcar os testes uns dos outros.

Digamos que ´e o dia do teste e o per´ıodo da aula ´e de uma hora. Os alunos empilham

seus testes em cima da mesa do professor quando terminam. Mas, em vez de levar todos

os testes para casa, o professor mistura todos eles em uma grande pilha e pede a cada

aluno que fa¸ca um teste aleat´orio e o classiﬁque com uma chave de resposta.

Isso ´e conhecido como uma transa¸c˜ao. Esta ´e a unidade fundamental que

comp˜oe um blockchain. Digamos que um aluno, Bob, deu a outra aluna, Alice, uma nota

de 84. Nesse caso, Bob ´e o remetente e Alice ´e a destinat´aria.

Figura 35: Transa¸c˜ao. Adaptado de [31]

Em termos de Bitcoin, isso n˜ao seria aleat´orio - o aluno sabe para onde est´a

enviando dinheiro.

Figura 36: Transa¸c˜ao de bitcoin. Adaptado de [31]

At´e agora, resolvemos os problemas de velocidade e custo. Os professores

n˜ao precisam mais dedicar tempo `a avalia¸c˜ao e cada aluno pode avaliar um outro teste

79

rapidamente. Mas ainda h´a um enorme potencial para fraudes.
Isso ´e bem pr´oximo
da anarquia. ´E preciso haver uma rede de pessoas respons´aveis que mantenha todos os
participantes honestos. ´E aqui que entram as pol´ıticas do diretor. O diretor controla

a ´unica coisa com a qual todos se importam - o sistema de classiﬁca¸c˜ao. Na Escola

Secund´aria Distribu´ıda, o diretor decide permitir que os mais antigos (alunos do 3º ano)

administrem esse sistema blockchain em troca de uma recompensa. Se um veterano ﬁzer

uma revis˜ao de 20 desses testes em 1 dia, ele poder´a participar de uma competi¸c˜ao para

obter 10 pontos adicionados a um de seus pr´oprios testes.

Figura 37: Veterano. Adaptado de [31]

Esse conjunto de 20 transa¸c˜oes ´e conhecido como um bloco e, eventualmente,

mostraremos como todos os blocos funcionam juntos para formar um blockchain.

Figura 38: Um bloco. Adaptado de [31]

A esta altura, um aluno pode perguntar: ”Por que s´o os mais antigos podem

fazer isso?E por que deve ser uma competi¸c˜ao?”Deve ser mais antigo porque o diretor

precisa de participantes que possam lidar com a carga de trabalho dos testes de classi-

ﬁca¸c˜ao todos os dias, se assim o desejarem. Se o sistema ﬁcar lento, ningu´em teria seus

testes validados e registrados, o que seria uma falha completa. E deve ser uma competi¸c˜ao

80

para que o sistema de pontos n˜ao seja completamente desvalorizado. Imagine se todos

os alunos revisassem seus 20 testes e recebessem 10 pontos em seu pr´oprio teste? A in-

ﬂa¸c˜ao seria desenfreada, semelhante `a forma como a inﬂa¸c˜ao de moeda aumenta quando

o governo imprime mais dinheiro. Deve haver uma competi¸c˜ao por um n´umero escasso

de pontos. O diretor n˜ao est´a obrigando nenhum aluno mais antigo a participar, mas h´a

um forte incentivo para que eles o fa¸cam.

Uma introdu¸c˜ao ao sistema distribu´ıdo

Agora sabemos como um teste ´e classiﬁcado (uma transa¸c˜ao) e os incentivos

para que os mais antigos mantenham o sistema com integridade - eles obtˆem mais pontos

revendo e validando mais testes. Mas ainda estamos perdendo toda a infraestrutura

distribu´ıda de como esse trabalho realmente ´e feito. Digamos que 10 alunos mais antigos

levaram sua oferta ao diretor. Eles querem fazer parte desta competi¸c˜ao para ganhar mais

pontos em seu pr´oprio teste. Outro grupo de 10 mais antigos decide se voluntariar para

ajudar a manter o sistema, mas n˜ao participa da competi¸c˜ao. Isto est´a fora do suporte

para o sistema distribu´ıdo e parte do esp´ırito do movimento em dire¸c˜ao `a classiﬁca¸c˜ao de

c´odigo aberto.

Cada um desses alunos mais antigos ´e um n´o completo na rede - eles se comu-

nicam em tempo real sobre novas transa¸c˜oes e blocos. Os 10 mais antigos que decidiram

participar da competi¸c˜ao s˜ao chamados de mineradores. Eles constroem blocos com

transa¸c˜oes dispon´ıveis no banco de dados, o reservat´orio de transa¸c˜oes n˜ao conﬁrma-

das. Quando um aluno, como Bob, termina de classiﬁcar um teste, o aluno transmite uma

transa¸c˜ao n˜ao validada para a rede de mais antigos. Cada n´o completo compartilha com

todos os outros, como um boato. Torna-se parte do mempool (conjunto de mem´oria).

Todo n´o deve validar a transa¸c˜ao primeiro, em outras palavras, determinar

se foi poss´ıvel ou n˜ao. Neste exemplo, valida¸c˜ao pode signiﬁcar conﬁrmar que o avaliador

realmente classiﬁcou o teste corretamente, digitando todas as respostas ﬁnais na sua

calculadora. Ap´os a valida¸c˜ao, cada minerador tem a oportunidade de construir seu

pr´oprio bloco a partir de 20 testes ou transa¸c˜oes. Nos dias de teste, 30 novas transa¸c˜oes

devem ser adicionadas `a rede, pois s˜ao 30 alunos da turma. Um aluno pode perguntar:

”Como os mineradores escolhem as transa¸c˜oes para adicionar ao seu bloco?”

81

Figura 39: Conjunto de mem´oria. Dispon´ıvel em [31]

A resposta ´e uma taxa de transa¸c˜ao. Cada remetente deve anexar uma taxa

de transa¸c˜ao `a sua transa¸c˜ao para compensar os mineradores pelo seu trabalho. Assim,

os mineradores geralmente optam por colocar todas as transa¸c˜oes com as taxas mais altas

em seus blocos imediatamente. Como isso opera na oferta e na demanda, eles podem

incluir as transa¸c˜oes com taxas mais baixas nos dias em que h´a menos testes para validar.

No nosso exemplo de escola, esta taxa de transa¸c˜ao pode ser um ponto fora do teste do

remetente para doar ao minerador. N˜ao sairia do teste de Alice. Em Bitcoin, seria uma

pequena fra¸c˜ao de um Bitcoin, como 0,000003 BTC. O remetente paga a taxa, pois ´e a

maneira mais f´acil de lidar com a log´ıstica.

Figura 40: Bob classiﬁca Alice. Adaptado de [31]

Neste ponto, cada minerador tem seu bloco de 20 transa¸c˜oes validadas que

gostaria de adicionar ao blockchain. Agora, ´e hora de a competi¸c˜ao ver qual dos 10

mineradores ter´a seu bloco aceito e receber os pontos do diretor.

82

Figura 41: Minera¸c˜ao. Dispon´ıvel em [31]

Neste ponto os alunos est˜ao come¸cando a ver a quantidade de redundˆancia ou

trabalho repetido. Cada bloco proposto ter´a muitas transa¸c˜oes (testes) em comum. Essa

´e uma medida de seguran¸ca necess´aria para executar um sistema distribu´ıdo. Se todos

os n´os estiverem validando transa¸c˜oes separadamente, isso diﬁculta muito a trapa¸ca do

sistema.

A corrida pela prova de trabalho

Agora, vamos solicitar aos alunos que imaginem que depois de todo esse tra-

balho para criar um bloco de 20 transa¸c˜oes, o diretor ent˜ao compartilhou um problema

de matem´atica de n´ıvel 12 para cada minerador, e a pessoa que resolveu o problema pri-

meiro recebeu todos os pontos e teve seu bloqueio conﬁrmado. Isso signiﬁcaria que os

“ricos ﬁcam mais ricos” e distorceria os incentivos para todo o sistema. Todos os dias,

os melhores alunos de matem´atica teriam uma excelente chance de vencer a competi¸c˜ao,

e o resto dos mais antigos teria pouca ou nenhuma chance. Logo, os mineradores / mais

antigos deixariam de participar, j´a que nunca receberiam pontos.

Ent˜ao, em vez disso, nosso diretor vai organizar uma ca¸cada na escola todas as

noites. Importante, a ca¸ca ao tesouro n˜ao tem nada a ver com a capacidade matem´atica

de um minerador. Isso encoraja a todos a continuarem a minerar. O diretor esconder´a

um trof´eu em algum lugar da escola. Os alunos devem correr at´e encontrarem e gritarem

para que o resto dos alunos em toda a escola possa conﬁrmar que eles o encontraram e ir

para casa. Como esse diretor tem algumas habilidades m´agicas de previs˜ao, ele esconde o

trof´eu em um lugar perfeito, de modo que levar´a uma hora para encontrar todas as

noites.

83

Figura 42: Ca¸ca ao Tesouro. Dispon´ıvel em [31]

Esse processo n˜ao deve estar relacionado com a valida¸c˜ao de teste, para que

possa nivelar o campo de jogo. Isso ´e conhecido como “prova de trabalho” no Bitcoin.
´E um algoritmo dif´ıcil de resolver, mas f´acil para os outros n´os conﬁrmarem depois de

resolvido. Cada minerador de Bitcoin deve adivinhar n´umeros at´e escolher o correto que

resolve o quebra-cabe¸ca. Em Bitcoin, um novo bloco ´e conﬁrmado a cada 10 minutos, em

m´edia.

O algoritmo tamb´em ﬁca gradualmente mais dif´ıcil com o tempo, `a medida

que mais mineradores se juntam `a rede. Se houver mais mineradores, isso signiﬁca que

haver´a mais suposi¸c˜oes, ent˜ao o desaﬁo deve ﬁcar mais dif´ıcil se o Bitcoin quiser continuar

conﬁrmando um bloco a cada 10 minutos.

Este exemplo demonstra como o Bitcoin (e nossa aula did´atica com exemplo

escolar) for¸ca cada minerador a competir com o resto da rede. Uma vez que um minerador

resolve o quebra-cabe¸ca, eles compartilham sua resposta com o resto da rede, o que pode

ser rapidamente conﬁrmado. Depois que os n´os chegarem a um consenso , ou mais de

50% concordarem que o bloco est´a conﬁrmado, ele pode ser adicionado ao blockchain.

Isso motivou alguns mineradores a formarem grˆemios. Em nossa aula com

exemplo escolar, isso signiﬁca que alguns dos alunos concordariam em dividir os pontos

84

quando um deles encontrasse o trof´eu. Simplesmente aumenta a probabilidade de que o

primeiro a encontrar o trof´eu seja um membro de sua equipe.

Em Bitcoin, o poder de computa¸c˜ao total que est´a trabalhando na solu¸c˜ao

desse “quebra-cabe¸ca prova de trabalho” ´e chamado de taxa de hash. As maiores

agremia¸c˜oes de Bitcoin controlam cerca de 10% da taxa de hash, o que ainda d´a ao resto

dos mineradores uma boa chance de resolver o quebra-cabe¸ca. Se um grˆemio contivesse

50% da taxa de hash, haveria menos incentivo para os outros continuarem a minerar.

Quando um bloco ´e conﬁrmado, o minerador recebe o prˆemio (10 pontos em

um teste) e todas as taxas de transa¸c˜ao das transa¸c˜oes s˜ao conﬁrmadas. As transa¸c˜oes

que n˜ao faziam parte do bloco retornam ao conjunto de mem´oria para serem inclu´ıdas em

um bloco futuro.

Figura 43: Tesouro descoberto. Dispon´ıvel em [31]

Construindo um blockchain

85

At´e agora, os alunos conhe¸ceram a maioria das etapas que incluem adicionar

mais um bloco ao blockchain. Mas, os alunos n˜ao conhecem ainda como construir uma

blockchain em si. Um blockchain tem uma estrutura simples de trˆes n´ıveis. Uma s´erie de

transa¸c˜oes comp˜oem um bloco. E uma s´erie de blocos comp˜oem um blockchain. Embora

vocˆe possa dividir um blockchain em partes com base no tempo, normalmente, cada n´o

individual (mais antigo) manter´a o hist´orico completo do blockchain.

Em nosso exemplo do ensino m´edio, estamos estudando uma turma do 1º ano.

Assim, a hist´oria completa da turma pode ser de todas as notas de todos os alunos de

toda a turma, do jardim de infˆancia at´e hoje. Como estamos adicionando blocos em

um intervalo de 1 dia e h´a aproximadamente 180 dias no ano letivo, isso signiﬁca que o

blockchain cont´em cerca de 1700 blocos.

Figura 44: Hist´orico do jardim de infˆancia ao 1º Ano. Adaptado de [31]

Cada bloco possui uma identiﬁca¸c˜ao ´unica, que devido a uma “fun¸c˜ao hash”,

depende da identiﬁca¸c˜ao do bloco anterior. Isso ´e o que protege o blockchain - n˜ao existe

uma substitui¸c˜ao de bloco ou um hist´orico de reescrita, porque ele mudar´a a identiﬁca¸c˜ao

de cada bloco subseq¨uente. Como o nosso exemplo educacional para a aula usa intervalos

de um dia, um aluno pode pensar: “Ah, deve ser f´acil criar uma identiﬁca¸c˜ao ´unica para

cada bloco, j´a que cada data ocorre apenas uma vez!”. Mas, isso introduziria uma vul-

nerabilidade de seguran¸ca. Se um minerador fosse capaz de introduzir um novo bloco em

algum lugar no meio da corrente, ele n˜ao quebraria o padr˜ao! O minerador trapa¸ceiro po-

deria facilmente replicar a identiﬁca¸c˜ao do bloco, e nenhum dos seguintes blocos mudaria

seu valor, j´a que as datas seguem um padr˜ao conﬁ´avel que pode ser facilmente replicado.

A fun¸c˜ao hash torna muito dif´ıcil imitar e substituir os blocos.

86

Figura 45: Hist´orico do jardim de infˆancia ao 1º Ano com fun¸c˜oes hash. Adaptado de

[31]

At´e agora, parece que todo aluno do 3ª ano pode ver toda a hist´oria da s´erie

de cada aluno do 1ª ano e n˜ao ´e isso que queremos. Precisamos de algum princ´ıpio de

privacidade. Mas, no lado positivo, o sistema distribu´ıdo permite que cada indiv´ıduo mais

antigo garanta a validade dos testes classiﬁcados `a medida que eles circulam pela rede.

Este sistema de pedidos ´e relativo, e n˜ao absoluto. A ordem dos blocos ´e

muito mais importante do que os tempos em que foram adicionados `a cadeia. Os selos de

tempo, como discutimos acima, s˜ao f´aceis de copiar e imitar.

Vamos dar um exemplo do que ´e conhecido como um ataque de gasto duplo.

Digamos que uma de suas colegas fa¸ca um teste de matem´atica na segunda-

feira e saiba que ela foi mal. Um de seus colegas classiﬁca essa vers˜ao do teste e depois a

transmite para os n´os, como de costume. Seu colega de classe estuda como louco naquela

noite e depois aparece no dia seguinte para fazer o mesmo teste com outra turma. Como

a professora n˜ao estava prestando muita aten¸c˜ao, ela consegue convencer a professora de

que ela n˜ao estava presente no dia anterior. Lembre-se de que o professor n˜ao tem nenhum

papel nos testes de classiﬁca¸c˜ao, portanto, o professor n˜ao pode fazer referˆencia r´apida

aos exames do dia anterior. Ela tem permiss˜ao para fazer o teste novamente e o envia ao

resto da turma.

87

Figura 46: Nova tentativa. Adaptado de [31]

Aqui est˜ao as ´ultimas op¸c˜oes para blocos do blockchain, com a tentativa de

Alice de substituir sua nota anterior. Alice agora precisar´a se tornar um minerador na

rede e participar da ca¸cada. Ela ´e agora a 11ª mineradora dessa rede. A regra ´e que

a “cadeia mais longa ganha”.

Isso signiﬁca que no dia 11, o resto da rede pode estar

trabalhando na adi¸c˜ao de um novo bloco com o ´ultimo conjunto de transa¸c˜oes. Mas

Alice estar´a trabalhando em ”bifurca¸c˜ao”da cadeia, e adicionando um novo conjunto de

transa¸c˜oes para o dia 10 com 19 transa¸c˜oes em comum, e sua nova pontua¸c˜ao no teste

como uma substitui¸c˜ao para a pontua¸c˜ao do teste antigo.

Figura 47: Tentativa de Alice de substituir sua nota anterior. Adaptado de [31]

88

Bifurca¸c˜ao signiﬁca que ela est´a tentando construir uma nova cadeia mais

longa, ao contr´ario da cadeia que o resto da rede assume ser a mais longa. Se ela puder

vencer a ca¸cada naquele dia e depois voltar no dia seguinte e vencˆe-la novamente, ela ter´a

a maior corrente. Isso faz parte do valor do sistema de “prova de trabalho”. Como Alice

´e um dos 11 mineradores da rede, ela tem aproximadamente 1% de chance de resolver

dois blocos seguidos. H´a 99% de chance de ela colocar todo esse trabalho apenas para n˜ao
receber nada. o que n˜ao ´e um grande incentivo. ´E tamb´em por isso que as identiﬁca¸c˜oes

de bloco e as identiﬁca¸c˜oes de bloco anteriores s˜ao um esquema de rotulagem melhor que

uma data espec´ıﬁca. Se Alice ganhar a corrida no dia em que ela secretamente ﬁzer o

teste uma segunda vez, todos os novos testes daquele dia ainda ser˜ao armazenados no

blockchain. Eles s´o precisam esperar mais um dia.

Figura 48: Chance de uma transa¸c˜ao voltar no dia seguinte. Adaptado de [31]

Apresentando Chaves P´ublicas e Privadas

89

At´e agora, cobrimos todos os mecanismos que permitir˜ao aos alunos da escola

secund´aria Distribu´ıda gerenciar suas pr´oprias notas. Estamos perdendo apenas uma

coisa importante: privacidade. Neste momento, as notas de cada aluno s˜ao expostas para

sempre no blockchain. Se isso fosse uma moeda, seria f´acil descobrir quanto dinheiro cada

pessoa tinha. N˜ao ´e isso que queremos. Ao mesmo tempo, a transparˆencia ´e uma ´otima

maneira de manter as pessoas individualmente respons´aveis por classiﬁca¸c˜ao injusta e
outras pr´aticas fraudulentas. ´E por isso que o Bitcoin usa um sistema criptogr´aﬁco com

chaves p´ublicas e privadas. No ensino m´edio, os alunos provavelmente est˜ao acostumado

com os arm´arios que ocupam os corredores.

No Bitcoin h´a um n´umero (essencialmente) ilimitado de combina¸c˜oes de chaves

privadas-p´ublicas. Ent˜ao, em vez disso, imagine que as paredes desta escola secund´aria

est˜ao alinhadas como as pequenas caixas de correio que vocˆe vˆe em um pr´edio de aparta-

mentos.

Figura 49: Arm´arios. Dispon´ıvel em [31]

E eles cobrem todas as paredes desta escola. E, como h´a um n´umero total

ilimitado de arm´arios, cada aluno na escola pode possuir um n´umero ilimitado de arm´arios.

Em termos matem´aticos:

Ilimitado / 30 alunos = Ilimitado

Por uma quest˜ao de simplicidade, vamos supor que cada aluno receba uma

caixa de correio para cada s´erie que eles precisavam para fazer os testes. Se um aluno

est´a no 1º ano, isso signiﬁca que ele est´a usando o 1º vesti´ario. Vamos voltar para a

nossa transa¸c˜ao, onde Bob classiﬁca Alice. Os n´os completos, os mais antigos, devem

primeiro avaliar se Bob est´a qualiﬁcado para receber os testes de matem´atica do 1º ano.

Bob precisa provar a si mesmo. Aqui est´a uma quest˜ao - se Bob anunciar alegremente `a

90

rede que ele classiﬁcou a tarefa de Alice, ele corre o risco de expor Alice. E se ela tiver

uma nota negativa? Ela n˜ao quer que o mundo inteiro saiba disso para sempre! Ent˜ao,

ele deve transmitir enquanto mant´em os dois anˆonimos. Ele pode deslizar aleatoriamente

uma nota para um dos n´os ... assim como a maioria das fofocas come¸cam!

Ent˜ao o n´o completo compartilharia essa fofoca com o resto da rede. ´E aqui

que entram nossas chaves p´ublicas. Quando Bob envia uma nota sobre seu teste para

a rede, ele est´a realmente dizendo:

“Meu endere¸co de caixa de correio atual ´e 126900trl.

Para provar que eu estava l´a no dia do teste, aqui est´a a chave de resposta

que o professor me deu para classiﬁcar este teste espec´ıﬁco. (assinatura digital) A ﬁm

de provar que eu sou de fato um aluno do nono ano em aula de ´algebra, aqui est˜ao as

notas dos exames ﬁnais da aula de matem´atica a cada ano, do 1º ao 8º ano do ensino

fundamental, e a chave de resposta para cada um desses testes. (cadeia de transa¸c˜ao)

”Eu vou estar entregando o teste para a caixa de correio 856734pok”

Figura 50: Transa¸c˜ao com hashing. Adaptado de [31]

Isso est´a levantando duas quest˜oes principais:

1. O remetente ´e a pessoa que ele aﬁrma ser?

2. O remetente est´a qualiﬁcado para ser o remetente (classiﬁcar o teste)?

Para responder a primeira pergunta, o Bitcoin usa uma assinatura digital.

A assinatura digital ´e exclusiva para todas as transa¸c˜oes e ´e formada com um hash da

identiﬁca¸c˜ao da transa¸c˜ao e da chave privada. Neste caso, isso ´e como a chave de teste - o

aluno s´o pode possu´ı-la se estivesse l´a no dia de teste espec´ıﬁco e o professor a entregasse

a ele.

91

Para a segunda pergunta, lembre-se que no Bitcoin, n˜ao h´a conceito de “conta”

ou “saldo de conta”. Se houvesse, Bob poderia apenas compartilhar um n´umero de

identiﬁca¸c˜ao que provasse que ele estava qualiﬁcado.

Para provar que essa chave p´ublica espec´ıﬁca (a chave p´ublica de Bob) tem

aprova¸c˜ao suﬁciente, ele deve compartilhar um hist´orico de teste que todo n´o completo

possa validar. Dessa forma, todos podem validar o preenchimento do primeiro ao oitavo

ano do ensino fundamental. Bob tamb´em deve fornecer a chave de resposta para cada

um desses testes para provar que ele estava na sala naquele momento. Isso ´e chamado

de cadeia de transa¸c˜ao. Depois que a transa¸c˜ao de Bob for validada e inclu´ıda em

um bloco que foi conﬁrmado, ele poder´a fazer o teste na caixa de correio de Alice sem

conhecimento p´ublico.

Como vocˆe percebeu na transa¸c˜ao acima, Bob teve que acessar os testes dos

´ultimos 8 anos! Este sistema de arm´arios s´o permite que Bob acesse seus testes. Bob

tem um conjunto de 8 chaves privadas. Toda vez que ele come¸cou um novo ano, ele abriu

outro arm´ario e colocou suas notas daquele ano no arm´ario.

Figura 51: Arm´arios com chaves. Dispon´ıvel em [31]

Outros podem passar seus ´ultimos resultados de teste em seu arm´ario, mas

s´o ele pode recuperar os resultados. O protocolo Bitcoin permite que os alunos criem

muitas combina¸c˜oes de chaves p´ublicas / privadas dentro de sua carteira. Isso melhora

a seguran¸ca. O aluno nunca vai querer entregar suas chaves privadas, que s˜ao a ´unica

maneira de acessar os Bitcoins que foram transferidos para ele. Ao contr´ario de um banco

tradicional, n˜ao h´a ningu´em a quem recorrer se o aluno esquecer ou perder uma chave

privada. O Bitcoin ser´a bloqueado.

Considera¸c˜oes ﬁnais

92

Nesse ponto, encorajamos a fazer uma revis˜ao das analogias. Assim sendo,

temos:

• Testes (Transa¸c˜oes)

• Respostas (assinaturas digitais)

• Turma do 1ª ano (remetentes e destinat´arios)

• Alunos do 3º ano (n´os completos)

• Diretor (criador de blockchain)

• Arm´arios com chaves (chaves p´ublica / privada)

• Sem professores (autoridade centralizada)

• N˜ao h´a boletins (contas / saldos de contas)

Nessa proposta did´atica, os alunos puderam compreender que para administrar

um sistema (seja ele educacional ou mesmo banc´ario) a conﬁan¸ca em uma autoridade

central desempenha um papel muito importante.

Para devolver esse controle a pessoas individuais (alunos), deve haver uma

grande quantidade de redundˆancia dos n´os para evitar fraudes, bem como protocolos de

seguran¸ca cuidadosos (como as assinaturas digitais, as fun¸c˜oes hash e as chaves p´ublicas

e privadas) para evitar que hackers se inﬁltrem no sistema.

Constata-se que realmente ´e poss´ıvel criar uma proposta did´atica com exemplos

l´udicos de objetos do ambiente escolar e de sala de aula com a ﬁnalidade de gerar analogias

com os termos do Blockchain, visando facilitar o entendimento para os alunos e at´e mesmo

para os professores.

93

Conclus˜ao

Esse trabalho objetivou apresentar uma introdu¸c˜ao aos fundamentos de bit-

coins e blockchains. Para tanto, introduzimos o que ´e o Bitcoin e apresentamos as de-

ﬁni¸c˜oes dos principais elementos que comp˜oem o blockchain, bem como os princ´ıpios

b´asicos da criptograﬁa de hash, come¸cando por umas das mais elementares: a hash de

aritm´etica modular at´e chegar `as fun¸c˜oes hash do protocolo Bitcoin (Apˆendice ). Intro-

duzimos tamb´em a criptograﬁa por curvas el´ıpticas.

O potencial dos bitcoins e do blockchain s˜ao enormes. Seja como nova forma

de troca de mercadorias, seja como local de registro de contratos, ´e not´avel como ainda

h´a o que ser explorado na tecnologia. A educa¸c˜ao superior tamb´em pode fazer uso da tec-

nologia, uma vez que, assim como o protocolo da internet nasceu no ambiente acadˆemico,

uma criptomoeda para as universidades poderia contribuir para o desenvolvimento da

ciˆencia e da pesquisa, ou como forma de fomento, ou como forma de pagamento ´unico das

compras feitas pelas universidades.

No que tange ao ensino b´asico, com o crescimento cada vez maior de aceita¸c˜ao

de pagamentos por bitcoins e o surgimento das ”ﬁntechs”´e not´avel como ´e importante

que os alunos do ensino b´asico detenham conhecimento m´ınimo do tema para que possam

n˜ao s´o discorrer na sociedade que os cercam como tamb´em entender perfeitamente o

funcionamento desse novo meio de pagamento.

Santos, 2018 [45] informa que solu¸c˜oes de blockchain aplicadas `a educa¸c˜ao est˜ao

presentes em institui¸c˜oes renomadas, como no Massachusetts Institute of Technology e

na Holberton School, em San Francisco (EUA), onde o armazenamento e a entrega de

diplomas emitidos eletronicamente s˜ao feitos utilizando-se a blockchain p´ublica da Bitcoin,

por meio de pagamento de um pequeno valor a cada diploma gerado, como medida para

evitar falsiﬁca¸c˜ao desses documentos.

Por ﬁm, tendo em vista a computa¸c˜ao quˆantica ser uma amea¸ca real `as crip-

tomoedas, Aggarwal et al [1], sugerimos como proposta de pesquisas futuras, o estudo de

blockchains com fun¸c˜oes hash e proof-of-works alternativas `as do protocolo Bitcoin.

94

Apˆendice

Curvas El´ıpticas

Segundo Martins, 2018 [33] no campo da criptograﬁa, as curvas el´ıpticas utili-

zadas s˜ao deﬁnidas sobre corpos ﬁnitos. Um corpo ´e um conjunto com duas opera¸c˜oes, nor-

malmente soma e multiplica¸c˜ao, que satisfazem propriedades usuais das mesmas opera¸c˜oes

com n´umeros reais. A soma deve ser comutativa, associativa, possuir elemento neutro e

elemento sim´etrico. J´a a multiplica¸c˜ao deve ser comutativa, associativa, distributiva,

possuir elemento neutro, e todo elemento n˜ao-nulo deve possuir um inverso.

Segundo Correia, 2013 [15] o que torna curvas el´ıpticas particularmente in-

teressantes do ponto de vista alg´ebrico/aritm´etico ´e o fato de que toda curva el´ıptica ´e

um grupo abeliano. Isso quer dizer que podemos “SOMAR” dois pontos e de uma curva

el´ıptica E, obtendo um terceiro ponto R = P + Q de E, e esta opera¸c˜ao goza das propri-

edades: comutatividade, existˆencia de elemento neutro, existˆencia do elemento inverso e

associatividade.

Esta lei de grupo possui a seguinte descri¸c˜ao geom´etrica, conhecida popular-

mente como “lei da corda-tangente”:

Figura 52: Opera¸c˜ao de soma em uma curva el´ıptica. Dispon´ıvel em [15]

95

LEI DA CORDA-TANGENTE: A soma de dois pontos P e Q ´e a reﬂex˜ao R, pelo

eixo-x, do terceiro ponto R(cid:48) de interse¸c˜ao da curva el´ıptica E com a reta que liga P e Q.

Para somarmos os pontos P e Q da curva, tra¸camos a reta P Q e marcamos

o ponto R(cid:48), outra interse¸c˜ao dessa reta com a curva. Pelo ponto R(cid:48) tra¸camos uma reta

perpendicular ao eixo horizontal. A interse¸c˜ao dessa reta com a curva E ´e o ponto

R = P +Q. Observe que o ponto R ´e a reﬂex˜ao do ponto R(cid:48) em rela¸c˜ao ao eixo horizontal.

Teorema de Hasse-Weil Se E ´e uma curva el´ıptica sobre Zp ent˜ao:

√

p + 1 − 2

p ≤ #(Zp) ≤ p + 1 + 2

√

p

Algoritmo de Soma de Pontos na Curva El´ıptica: Sejam E : y2 = x3 + ax + b com

4A3 + 27B2 (cid:54)= 0 e P1 e P2 pontos da curva el´ıptica E.

1. P1 = 0 =⇒ P1 + P2 = P2

2. P2 = 0 =⇒ P1 + P2 = P1

3. Caso contr´ario, P1 = (x1, y1) e P2 = (x2, y2)

4. Se x1 = x2 e y1 = −y2 =⇒ P1 + P2 = 0

5. Caso contr´ario, deﬁna λ por λ = y2−y1
x2−x1

se P1 (cid:54)= P2 ou λ = 3x2
1+a
2y1

se P1 = P2

Ent˜ao P3 = P1 + P2 = (x3, y3) onde x3 = λ2 − x1 − x2 e y3 = λ(x1 − x3) − y1

Calculando Pontos em Curvas El´ıpticas

Exemplo: Considere a curva el´ıptica dada pela equa¸c˜ao E : y2 = x3 + 2x + 7 sobre Z13

Podemos encontrar os pontos de E(Z13) substituindo cada x ∈ Z13 no po-

linˆomio x3 + 2x + 7 e decidir se este valor ´e um quadrado ou n˜ao.



se P1 (cid:54)= P2

λ = y2−y1
x2−x1
λ = 3x2
1+A
2y1



se P1 = P2

Ent˜ao P3 = P1 + P2 = (x3, y3) onde:




x3 = λ2 − x1 − x2



y3 = λ(x1 − x3) − y1

x

y2

x

x3 + 2x + 7

(x, y)

y2 x3 + 2x + 7

96

0

1

2

3

4

5

6

7

8

9

10

11

12

0

1

4

9

3

12

10

10

12

3

9

4

1

0

1

2

3

4

5

6

7

8

9

10

11

12

7

10

6

1

1

12

1

0

2

0

0

8

4

(1,6),(1,7)

10

10

(3,1),(3,12)

(4,1),(4,12)

(6,1),(6,12)

1

1

1

1

1

1

(5,5),(5,8)

12

12

(7,0)

(9,0)

(10,0)

(12,2),(12,11)

0

0

0

4

0

0

0

4

Segue da ´ultima tabela que E(Z13) = 16 onde

E(Z13) = (1, 6), (1, 7), (3, 1), (4, 1), (6, 1), (3, 12), (4, 12), (6, 12)

∪(5, 5), (5, 8), (7, 0), (9, 0), (10, 0), (12, 2), (12, 11) ∪ 0

Agora, usando o Algoritmo de Soma de Pontos na Curva El´ıptica, podemos

observar que:

Se P1 = (5, 8) e P2 = 0 ent˜ao P1 + P2 = (5, 8)

Se P1 = (3, 1) e P2 = (3, 12) ent˜ao P1 + P2 = 0. De fato, (3, 1) e (3, 12)

s˜ao sim´etricos em rela¸c˜ao ao eixo horizontal pois 12 ≡ −1(mod12) e consequentemente

(3, 12) = (3, −1)

Se P 1 = (5, 8) e P 2 = (12, 11) ent˜ao

λ = y2−y1
x2−x1

= 11−8

12−5 = 3

7

Parece que temos um problema, pois estamos trabalhando m´odulo 13. Neste

momento surge uma pergunta muito natural: Qual o signiﬁcado de λ = 3

7(mod13)? A
7 ´e a solu¸c˜ao da equa¸c˜ao 7λ = 3. Portanto,

resposta para isso ´e baseada no fato de que λ = 3

basta resolvermos a equa¸c˜ao 7λ ≡ 3(mod13)

N˜ao ´e dif´ıcil veriﬁcar que λ = 6 ´e a solu¸c˜ao em Z13.

97

Agora podemos calcular efetivamente

• x3 = λ2 − x1 − x2 = 62 − 12 − 5 = 19 ≡ 6(mod13)

• y3 = λ(x1 − x3) − y1 = 6(5 − 6) − 8 = −14 ≡ 12(mod13)

Temos explicitamente as coordenadas de

P3 = P1 + P2 = (x3, y3) = (6, 12)

Se P1 = P2 = (1, 6), ent˜ao

λ =

3x2

1 + A
2y1

=

3.12 + 2
2.6

=

5
12

Resolvendo a equa¸c˜ao 12λ ≡ 5(mod13), encontramos λ = 8. Segue que P3 =

(x3, y3) = (10, 0), conforme contas a seguir:

• x3 = λ2 − x1 − x2 = 82 − 1 − 1 = 62 ≡ 10(mod13)

• y3 = λ(x1 − x3) − y1 = 8(1 − 10) − 6 = −78 ≡ 0(mod13)

Segue que: P3 = P1 + P1 = (x3, y3) = (10, 0)

A curva E : y2 = x3 + 3x + 8 possui a tabela abaixo completa de c´alculo da
soma de pontos de uma curva sobre um corpo ﬁnito Z13. Os pontos dessa curva s˜ao os

pontos que aparecem na tabela a seguir e ser˜ao somados:

(+)

0

(1, 5)

(1, 8)

(2, 3)

0

0

(1, 5)

(1, 8)

(2, 3)

(2, 10)

(2, 10)

(9, 6)

(9, 7)

(9, 6)

(9, 7)

(1, 5)

(1, 5)

(1, 8)

(1, 8)

(2, 10)

0

0

(2, 3)

(2, 3)

(2, 3)

(1, 8)

(9, 6)

(2, 10)

(2, 10)

(9, 7)

(9, 6)

(9, 6)

(2, 3)

(9, 7)

(9, 7)

(12, 2)

(12, 11)

(12, 2)

(12, 11)

(12, 2)

(12, 11)

(9, 6)

(1, 5)

(12, 11)

(2, 10)

(9, 7)

(12, 2)

(1, 8)

(9, 7)

(9, 6)

(12, 11)

0

(12, 2)

(1, 5)

(2, 10)

(1, 5)

0

(12, 2)

(1, 8)

(12, 11)

(9, 6)

(2, 3)

(12, 11)

(12, 2)

(1, 8)

(9, 7)

0

(12, 2)

(2, 10)

(1, 5)

(12, 11)

0

(9, 7)

(2, 3)

(2, 10)

(1, 8)

0

(1, 5)

(2, 3)

(1, 8)

(9, 6)

(2, 3)

(1, 8)

0

(1, 5)

(12, 2)

(12, 2)

(12, 11)

(9, 7)

(2, 10)

(12, 11)

(12, 11)

(9, 6)

(12, 2)

(9, 7)

(9, 6)

(2, 3)

(1, 5)

(2, 10)

Correia, 2013 [15] sugeriu construir um an´alogo ao ElGamal para o grupo de

curvas el´ıpticas sobre corpos ﬁnitos Figura 53

98

Figura 53: M´etodo ElGamal para Criptograﬁa de Curvas El´ıpticas. Dispon´ıvel em [15]

´E f´acil construir um an´alogo ao ElGamal para o grupo das curvas el´ıpticas

sobre corpos ﬁnitos. Por´em, teremos que supor que a mensagem que Serginho deseja
enviar para Jo˜aozinho ´e um ponto M ∈ E(Zp) da curva el´ıptica onde o primo p e a curva
el´ıptica E sobre Zp s˜ao previamente ﬁxados por um canal n˜ao seguro de comunica¸c˜ao.
Al´em disso, eles ainda n˜ao compartilham um ponto P ∈ E(Zp).

ECDSA

99

De acordo com Rykwalder, 2014 os pr´oprios bitcoins n˜ao s˜ao armazenados

de forma centralizada ou local e, portanto, nenhuma entidade ´e a sua custodiante. Eles

existem como registros em um livro cont´abil distribu´ıdo chamado Blockchain, cujas c´opias

s˜ao compartilhadas por uma rede volunt´aria de computadores conectados. ”Possuir”um

bitcoin simplesmente signiﬁca ter a capacidade de transferir o controle para outra pessoa,

criando um registro da transferˆencia na Blockchain. O que concede essa habilidade? O

acesso a um par de chaves p´ublica e privada do ECDSA. Rykwalder, 2014 aﬁrma ainda

que o ECDSA (Elliptic Curve Digital Signature Algorithm, ou Algoritmo de Assinatura

Digital de Curvas El´ıpticas, em portuguˆes) ´e um algoritmo que faz uso de curvas el´ıpticas

dentro de um corpo ﬁnito para assinar os dados emitidos, de forma que os usu´arios possam

veriﬁcar tal autenticidade enquanto que o assinante se dedica exclusivamente `a concep¸c˜ao

de novas assinaturas.

Segundo Barros e Silva, 2018 [50] na rede Bitcoin os dados assinados s˜ao as

transa¸c˜oes entre os usu´arios. O ECDSA assina e veriﬁca os dados em procedimentos

separados, onde cada procedimento ´e um algoritmo formado por opera¸c˜oes matem´aticas.

Enquanto o algoritmo do processo de assinatura utiliza chaves privadas, o algoritmo de

processo de veriﬁca¸c˜ao utiliza chaves p´ublicas.

Curvas de Koblitz

100

Segundo Bjoernsen, 2009 [8] as curvas de Koblitz s˜ao um tipo de curvas

el´ıpticas10 caracterizadas por sua constru¸c˜ao n˜ao aleat´oria que permite uma computa¸c˜ao

especialmente eﬁciente. Isto ´e diferente das curvas el´ıpticas mais comumente usadas que

tˆem uma estrutura pseudo-aleat´oria onde os parˆametros s˜ao escolhidos por um algoritmo

especiﬁcado [8].

As curvas de Koblitz foram utilizadas para descrever curvas anˆomalas bin´arias

sobre GF (2k) a qual possui a, b ∈ 0, 1. As curvas s˜ao na forma:

y2 + xy = x3 + ax2 + 1

Ou para curvas deﬁnidas sobre o campo ﬁnito Fp:

com

y2 = x3 + ax + b

4a3 + 27b2 (cid:54)= 0

As curvas de Koblitz deﬁnidas pelas Standards for Eﬃcient Cryptography

Group (SECG) s˜ao deﬁnidos sobre o campo ﬁnito Fp. Esta ´e uma generaliza¸c˜ao da curva

de Koblitz, mas os mesmos princ´ıpios para eﬁciˆencia na computa¸c˜ao est˜ao presentes em

ambas as formas das curvas.

A Curva de Koblitz secp256k1

Bitcoin usa uma curva de Koblitz espec´ıﬁca: secp256k1 deﬁnida pelo Standards

for Eﬃcient Cryptography Group (SECG). A curva ´e deﬁnida sobre o corpo ﬁnito Fp:y2 =

x3 + ax + b com a = 0 e b = 7

Chicarino et al. [20] aﬁrma que no Bitcoin a chave privada ´e obtida gerando

um n´umero aleat´orio de 256bits, uma chave p´ublica ´e obtida ao efetuar a multiplica¸c˜ao

da chave privada por um ponto na curva conhecido como ”ponto gerador”. Ele ´e sempre

o mesmo par a todos os usu´arios do Bitcoin e ´e deﬁnido na especiﬁca¸c˜ao secp256k1. O

resultado da multiplica¸c˜ao da chave privada pelo ponto gerador ´e um ponto na curva, este

10para mais detalhes sobre as Curvas El´ıpticas veriﬁcar a disserta¸c˜ao do PROFMAT Criptograﬁa via

Curvas El´ıpticas de Correia, 2013 [15]

101

ponto ´e a chave p´ublica. Os n´os armazenam somente as suas chaves privadas, pois ele

pode a qualquer momento gerar a p´ublica correspondente.

Martins, 2018 [33] aﬁrma que para produzir um endere¸co Bitcoin, a primeira

etapa a ser seguida deve ser a cria¸c˜ao de uma chave privada k de 256 bits, que ´e simples-

mente um n´umero escolhido ao acaso entre 1 e 2256. O m´etodo para a escolha do n´umero

´e livre, mas n˜ao deve ser previs´ıvel ou repet´ıvel. Para a gera¸c˜ao da chave p´ublica K, o

protocolo Bitcoin utiliza o padr˜ao secp256k1, que estabelece uma curva el´ıptica deﬁnida

sobre um corpo ﬁnito. Al´em da curva, o padr˜ao estabelece um ponto gerador G, que deve

ser multiplicado pela chave privada, resultando em outro ponto na curva, que ´e ent˜ao

chamado de chave p´ublica K = k × G. Apesar da rela¸c˜ao matem´atica entre as chaves k e

K, o par somente pode ser calculado a partir da chave privada, obtendo-se ent˜ao a chave

p´ublica.

Figura 54: A Curva Koblitz. Dispon´ıvel em [7]

A fun¸c˜ao hash criptogr´aﬁca SHA-256

102

Processo de c´alculo

A seguir ´e apresentado o processo de c´alculo passo-a-passo bem como s˜ao explicados

alguns passos sugeridos por Shirriﬀ mas n˜ao que foram matematicamente demonstrados:

Passo 1. Primeiro, oito vari´aveis s˜ao deﬁnidas para seus valores iniciais, dados pelos

primeiros 32 bits da parte fracion´aria das ra´ızes quadradas dos primeiros 8 n´umeros primos

(em hexadecimal):

H (0)
H (0)

1 = 6a09e667 H (0)
5 = 510e527f H (0)

2 = bb67ae85 H (0)
6 = 9b05688c H (0)

3 = 3c6ef 372 H (0)
7 = 1f 83d9ab H (0)

4 = a54f f 53a

8 = 5be0cd19

P rimos

√

P rimos

P arteF racionaria(C)

C × 168

Hexadecimal

2

3

5

7

11

13

17

19

1, 414213562

0, 414213562

1779033703

6A09E667

1, 732050808

0, 732050808

3144134277 BB67AE85

2, 236067977

0, 236067977

1013904242

3C6EF 372

2, 645751311

0, 645751311

2773480762 A54F F 53A

3, 316624790

0, 316624790

1359893119

510E527F

3, 605551275

0, 605551275

2600822924

9B05688C

4, 123105626

0, 123105626

528734635

1F 83D9AB

4, 358898944

0, 358898944

1541459225

5BE0CD19

Tabela 3: Hexadecimal da raiz quadrada da parte fracion´aria dos primeiros 8 primos.

Adaptado de [42]

Passo 2. Antes ´e importante entender quais sa´ıdas as tabelas-verdade informam de uma

porta l´ogica para cada combina¸c˜ao de entradas Figuras 55 56 57 58.

103

Figura 55: Tabela-verdade da nega¸c˜ao (∼). Dispon´ıvel em [47]

Figura 56: Tabela-verdade do E (∧). Dispon´ıvel em [47]

Figura 57: Tabela-verdade do OU (∨). Dispon´ıvel em [47]

Figura 58: Tabela-verdade do OU-Exclusivo (⊕). Dispon´ıvel em [47]

104

Figura 59: O c´alculo da fun¸c˜ao Maj. Dispon´ıvel em [9]

Passo 3. Depois, calcula-se inicialmente a fun¸c˜ao M aj(X, Y, Z) ou seja, de A, B, C com o

seguinte regramento: se houver mais zeros, considera-se o bit da M aj(X, Y, Z) como zero

e se houver mais uns, considera-se 1 (hum) Figura 59. Esta regra pode ser deduzida ao se

analisar a tabela-verdade da referida fun¸c˜ao (M aj(X, Y, Z) = (X ∧Y )⊕(X ∧Z)⊕(Y ∧Z)

Tabela 4:

X Y Z X ∧ Y X ∧ Z (X ∧ Y ) ⊕ (X ∧ Z) Y ∧ Z (X ∧ Y ) ⊕ (X ∧ Z) ⊕ (Y ∧ Z)

0

0

1

1

0

1

0

1

0

1

0

1

0

1

1

1

0

1

1

1

0

0

0

0

0

1

0

1

0

1

0

1

Tabela 4: Tabela-verdade da fun¸c˜ao M aj

Passo 4. Em seguida transforma-se o n´umero bin´ario obtido da fun¸c˜ao M aj(A, B, C)

para hexadecimal gerando o resultado 3a6f e667.

Figura 60: O c´alculo da primeira fun¸c˜ao Rotate. Dispon´ıvel em [9]

Passo 5. O pr´oximo passo (Figura 60) ´e aplicar a fun¸c˜ao RotR(X, 2) em A que implica em

rotacionar os bits duas posi¸c˜oes `a direita. Na sequˆencia, aplica-se a fun¸c˜ao RotR(X, 13)

em A que implica em rotacionar os bits 13 (treze) posi¸c˜oes `a direita. Por ﬁm, aplica-se a

105

fun¸c˜ao RotR(X, 22) em A que implica em rotacionar os bits 22 (vinte-e-duas) posi¸c˜oes `a

direita.

Passo 6. De posse de tais valores, veriﬁca-se se a soma dos algorismos bin´arios s˜ao par

ou ´ımpar. Se a soma for par, o valor resultante ser´a 0 (zero), se for ´ımpar, 1 (hum).

Isto ´e atestado matematicamente atrav´es da tabela-verdade da fun¸c˜ao ⊕ (XOR) ou (ou-

exclusivo) Tabela 5:

X Y Z X ⊕ Y X ⊕ Y ⊕ Z

0

0

1

1

0

1

0

1

0

1

0

1

0

1

1

0

0

0

1

1

Tabela 5: Tabela-verdade da fun¸c˜ao XOR

Com isso, obt´em-se o valor em bin´ario de (cid:80)

0(X) = RotR(X, 2)⊕RotR(X, 13)⊕

RotR(X, 22)

Passo 7. A seguir transforma-se novamente o n´umero em hexadecimal, cujo resultado

na 1ª rodada ´e ce20b47e.

Figura 61: O c´alculo da fun¸c˜ao Ch. Dispon´ıvel em [9]

106

Passo 8. O pr´oximo passo 61 ´e transformar os valores E, F e G em bin´arios e aplicar

a fun¸c˜ao Ch(X, Y, Z) ou seja Ch(E, F, G). Onde Ch(X, Y, Z) = (X ∧ Y ) ⊕ (X ∧ Z)

Isso implica em para cada algarismo bin´ario E, se for zero, circula-se o algarismo bin´ario

correspondente de G, e se for 1, circula-se o algarismo bin´ario correspondente de F. Esta

a¸c˜ao pode ser conﬁrmada analisando-se tabela-verdade de Ch(X, Y, Z) de acordo com a

teoria presente em Shamieh, 2015 [47]:

X Y (X ∧ Y ) X Z (X ∧ Z)

(X ∧ Y ) ⊕ (X ∧ Z)

0

0

1

1

0

1

0

1

0

1

1

1

1

1

0

0

1

0

1

0

1

1

1

0

1

0

0

1

Tabela 6: Tabela-verdade da fun¸c˜ao Ch

Figura 62: O c´alculo da segunda fun¸c˜ao Rotate. Dispon´ıvel em [9]

Passo 9. O pr´oximo passo (Figura 62) ´e aplicar a fun¸c˜ao RotR(X, 6) em E que implica em

rotacionar os bits 6 (seis) posi¸c˜oes `a direita. Na sequˆencia, aplica-se a fun¸c˜ao RotR(X, 11)

em E que implica em rotacionar os bits 11 (onze) posi¸c˜oes `a direita. Por ﬁm, aplica-se a

fun¸c˜ao RotR(X, 25) em E que implica em rotacionar os bits 25 (vinte-e-cinco) posi¸c˜oes `a

direita.

Passo 10. O pr´oximo passo ´e combinar todos os resultados efetuar o somat´orio (em

hexadecimal), dado por:

107

T1 = H +

(cid:88)

(E) + Ch(E, F, G) + Ki + Wi

1

onde Wi s˜ao 64 palavras de 32 bits contendo a mensagem inicial e as 64 palavras bin´arias

Ki dadas pelos primeiros 32 bits das partes fracion´arias das ra´ızes c´ubicas dos primeiros

64 n´umeros primos:

428a2f98

71374491

b5c0fbcf

e9b5dba5

3956c25b

59f111f1

923f82a4

ab1c5ed5

d807aa98

12835b01

243185be

550c7dc3

72be5d74

80deb1fe

9bdc06a7

c19bf174

e49b69c1

efbe4786

0fc19dc6

240ca1cc

2de92c6f

4a7484aa

5cb0a9dc

76f988da

983e5152

a831c66d

b00327c8

bf597fc7

c6e00bf3

d5a79147

06ca6351

14292967

27b70a85

2e1b2138

4d2c6dfc

53380d13

650a7354

766a0abb

81c2c92e

92722c85

a2bfe8a1

a81a664b

c24b8b70

c76c51a3

d192e819

d6990624

f40e3585

106aa070

19a4c116

1e376c08

2748774c

34b0bcb5

391c0cb3

4ed8aa4a

5b9cca4f

682e6ﬀ3

748f82ee

78a5636f

84c87814

8cc70208

90beﬀfa

a4506ceb

bef9a3f7

c67178f2

Em seguida calculamos

T1 = H0 +

(cid:88)

1

(E) + Ch(E, F, G) + Ki + Wi

T2 =

(cid:88)

0

(A) + M aj(A, B, C)

Obtemos os novos parˆametros para t = 1, dados por, e com os novos valores calcular o
novo valor de H (t)

j para t = 1:

H (1)

1 = H (0)

1 + A1

A1 = T1 + T2

B1 = A0

C1 = B0

D1 = C0

E1 = D0 + T1

F1 = E0

G1 = F0

H1 = G0

H (1)

2 = H (0)

2 + B1

H (1)

3 = H (0)

3 + C1

H (1)

4 = H (0)

4 + D1

H (1)

5 = H (0)

5 + E1

H (1)

6 = H (0)

6 + F1

H (1)

7 = H (0)

7 + G1

H (1)

8 = H (0)

8 + H1

E ap´os calcularmos T 1 e T 2 para os novos parˆametros, que de maneira geral H (t)
j

:

108

+ At

+ Bt

+ Ct

+ Dt

+ Et

+ Ft

+ Gt

+ Ht

At = T1 + T2

Bt = At−1

Ct = Bt−1

Dt = Ct−1

Et = Dt−1 + T1

Ft = Et−1

Gt = Ft−1

Ht = Gt−1

H (t)

1 = H (t−1)

1

H (t)

2 = H (t−1)

2

H (t)

3 = H (t−1)

3

H (t)

4 = H (t−1)

4

H (t)

5 = H (t−1)

5

H (t)

6 = H (t−1)

6

H (t)

7 = H (t−1)

7

H (t)

8 = H (t−1)

8

O hashing da mensagem ´e a concatena¸c˜ao das vari´aveis H N

i ap´os o ´ultimo

bloco ter sido processado

H = H (N )

1 (cid:107)H (N )

2 (cid:107)H (N )

3 (cid:107)H (N )

4 (cid:107)H (N )

5 (cid:107)H (N )

6 (cid:107)H (N )

7 (cid:107)H (N )

8

Figura 63: O c´alculo de T 1. Dispon´ıvel em [9]

Figura 64: O ´ultimo passo do c´alculo da fun¸c˜ao hash SHA-256. Dispon´ıvel em [41]

A fun¸c˜ao hash criptogr´aﬁca RIPEMD-160

109

Muitas fun¸c˜oes de hashing usam vari´aveis de encadeamento. Estas tˆem valores

iniciais especiﬁcados pelo algoritmo e s˜ao atualizados a cada rodada de acordo com o

algoritmo e com os valores do bloco de mensagens atual. Os valores ﬁnais das vari´aveis de

encadeamento formam o hashing. A maioria das fun¸c˜oes de hash baseadas no MD4 tem

apenas uma cadeia de opera¸c˜oes atrav´es da qual as vari´aveis de encadeamento passam,

mas o RIPEMD-160 tem duas vertentes, uma esquerda e direita, atrav´es das quais as

vari´aveis passam independentemente, para serem unidas no ﬁnal. A Figura 65 mostra

uma ´unica rodada do RIPEMD-160 no n´ıvel mais b´asico.

Figura 65: A fun¸c˜ao de hash RIPEMD-160. Adaptado de McAndrew, 2016 [34]

O RIPEMD-160 11 usa blocos de mensagem de tamanho 512 bits. Para pre-

encher o ´ultimo bloco, um ´unico 1 ´e adicionado seguido de zeros suﬁcientes para produzir

448 bits. Os ´ultimos 64 bits contˆem a representa¸c˜ao bin´aria do comprimento da mensa-

gem inteira. Se a mensagem for maior que 264, somente os menos signiﬁcativos 64 bits

de informa¸c˜ao ser˜ao usados (De acordo com McAndrew, 2016 [34] toda a Biblioteca do

Congresso dos EUA cont´em cerca de 264 bits de informa¸c˜ao, ent˜ao uma mensagem seria

realmente muito rara)

11Um pseudo-c´odigo da fun¸c˜ao pode ser verﬁcado em:

https://homes.esat.kuleuven.be/

~bosselae/ripemd/rmd160.txt

Existem cinco vari´aveis de encadeamento A, B, C, D e E iniciadas como segue

110

(em hexadecimal):

A = 67452301

B = EF CDAB89

C = 98BADCF E

D = 10325476

E = C3D2E1F 0

Cada valor ´e apenas uma permuta¸c˜ao de um subconjunto de todos os 16 d´ıgitos

hexadecimais. Cada uma das metades direita e esquerda consistem em cinco etapas,

chamadas de rodadas, e cada rodada envolve uma fun¸c˜ao l´ogica. S˜ao elas:

f1(x, y, z) = x ⊕ y ⊕ z

f2(x, y, z) = (x ∧ y) ∨ (¬y ∧ z)

f3(x, y, z) = (x ∨ ¬y) ⊕ z

f4(x, y, z) = (x ∧ z) ∨ (y ∧ ¬z)

f5(x, y, z) = x ⊕ (y ∧ ¬z)

Considere um ´unico bloco de mensagens de 512 bits. Ele ´e dividido em 16

palavras de 32 bits (m0, m1, m2, ..., m15) (Observe que cada uma das vari´aveis de encade-

amento tem 32 bits de comprimento). Para cada rodada, as palavras da mensagem s˜ao

permutadas de acordo com duas permuta¸c˜oes baseadas em:

ρ = [7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]

π = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12]

A segunda permuta¸c˜ao ´e deﬁnida por πi = 9i + 5( mod 16). A partir dessas

duas permuta¸c˜oes, oito outras s˜ao produzidas, de modo que as metades esquerda e direita,

em mais detalhes, podem ser descritas como na Figura 66, onde id ´e a permuta¸c˜ao de

identidade.

111

Figura 66: Metades esquerda e direita do RIPEMD-160. Adaptado de McAndrew, 2016

[34]

As constantes extras Ki e K (cid:48)

i s˜ao deﬁnidas como:

K1 = 00000000

K2 = 5A827999 = [230

√

2]
√

K3 = 6ED9EBA1 = [230

3]

K4 = 8F 1BBCDC = [230
√

K5 = A953F D4E = [230

7]

√

5]

K (cid:48)

K (cid:48)

√
1 = 50A28BE6 = [230 3
2]
√
2 = 5C4DD1246 = [230 3
√
3 = 6D703EF 3 = [230 3
√
4 = 7A6D769E = [230 3

7]

5]

K (cid:48)

K (cid:48)

3]

K (cid:48)

5 = 00000000

Os valores si e s(cid:48)

i s˜ao mudan¸cas que s˜ao aplicadas a cada uma das palavras do

bloco de mensagens. As entradas para cada caixa s˜ao os valores atuais das vari´aveis de

encadeamento A, B, C, D, E e as dezesseis palavras de 32 bits do bloco de mensagens,

permutadas de acordo com as deﬁni¸c˜oes acima. Suponha que:

[X0, X1, X2, ..., X15]

s˜ao as palavras permutadas. Em seguida, em cada caixa, o seguinte pseudoc´odigo ´e

implementado, onde (cid:1) ´e o m´odulo de adi¸c˜ao 232 e ≪ s signiﬁca rota¸c˜ao esquerda de s

112

bits:

For j = 1 to 15 {

T ← ((A (cid:1) f (B, C, D) (cid:1) Xj (cid:1) K) ≪ s) ≪ E

A ← E

E ← D

D ← C ≪ 10

C ← B

B ← T

}

O valor de K, a fun¸c˜ao f e o deslocamento s s˜ao escolhidos de acordo com o esquema da

Figura 66.

j = 0

1

2

3

8

9

10 11 12 13 14 15

11 14 15 12

11 13 14 15

6

7

6

11 13

8

6

13 11

7

14

15

7

12 15

13 15 14

8

13

7

9

6

7

7

4

5

5

8

9

9

11 12 14 15 14 15

9

8

9

15

5

11

6

8

13 12

9

5

14

5

12 13 14 11

9

6

6

11

5

8

7

7

12

6

8

9

8

13 12

7

5

5

5

12

6

s(cid:48)
1
s(cid:48)
2
s(cid:48)
3
s(cid:48)
4
s(cid:48)
5

Tabela 7: Deslocamento s para o lado direito

Os valores do deslocamento s para o lado direito s˜ao dados conforme a Tabela

7 e para o lado esquerdo por (Tabela 8). O requisito ﬁnal ´e reunir os dois ﬁos dos

lados esquerdo e direito. Suponha que h0, h1, h2, h3, h4 sejam as sa´ıdas do lado direito e
A(cid:48), B (cid:48), C (cid:48), D(cid:48), E (cid:48) s˜ao as sa´ıdas do lado esquerdo. Isso ´e feito de acordo com:

T = h1 (cid:1) C (cid:1) D(cid:48)

113

7

5

11

8

7

7

9

7

7

10 11 12 13 14 15

8

11 14 14 12

6

12

7

6

15 13 11

1

9

2

9

3

4

5

6

11 13 15 15

13 15

7

12

8

6

9

6

6

j = 0

s1

s2

s3

s4

s5

8

9

9

15

8

7

5

5

15 11

8

14 12 13

5

14 13 13

7

8

11 14 14

14

12

9

12

5

14

6

6

8

9

12

13

6

9

5

12

5

15

15 13 11 11

5

8

Tabela 8: Deslocamento s para o lado esquerdo

h1 = h2 (cid:1) D (cid:1) E (cid:48)

h2 = h3 (cid:1) E (cid:1) A(cid:48)

h3 = h4 (cid:1) A (cid:1) B (cid:48)

h4 = h0 (cid:1) B (cid:1) C (cid:48)

h0 = T

Referˆencias Bibliogr´aﬁcas

[1] Divesh Aggarwal, Gavin Brennen, Troy Lee, Miklos Santha, and Marco Tomamichel.

Quantum attacks on bitcoin, and how to protect against them. Ledger, 3, 10 2017.

[2] alikhan912. What is blockchain? https://web.cbnt.io/article/15564831236121.

Acesso em: 07 set. 2019.

[3] Andreas M. Antonopoulos. Mastering Bitcoin: Programming the Open Blockchain.

O’Reilly Media, jul 2017.

[4] Richard L. Apodaca. Owning Bitcoin - The Illustrated Guide to Security, Privacy,

and Possibility. Richard L. Apodaca, 2017.

[5] A. Back. Hashcash, May 1997.

[6] Computer Science UC Santa Barbara.

Feistel.

https://www.cs.ucsb.edu/

~konheim/Feistel%20Talk%20-2Final.pdf. Acesso em: 14 ago. 2019.

[7] Conrad Barski. Bitcoin for the Befuddled. No Starch Press, nov 2014.

[8] Kristian Bjoernsen. Koblitz curves and its practical uses in bitcoin security. order (ε

(GF (2k), 2(1):7, 2009.

[9] Ken Shirriﬀ’s blog. A pencil-and-paper round of sha-256. http://www.righto.com/

2014/09/mining-bitcoin-with-pencil-and-paper.html. Acesso em: 14 ago.

2019.

[10] Antoon Bosselaers and Bart Preneel. Ripemd-160 pseudo-code. https://homes.

esat.kuleuven.be/~bosselae/ripemd/rmd160.txt. Acesso em: 25 set. 2019.

[11] Ryan Browne.

China’s

central

bank

says

it’s

close

to

relea-

sing

its

own

digital

currency.

https://www.cnbc.com/2019/08/12/

china-central-bank-close-to-releasing-digital-currency-pboc-official.

html. Acesso em: 17 ago. 2019.

REFERˆENCIAS BIBLIOGR ´AFICAS

115

[12] Carlos Campello.

Demonstrando

o

conceito

de

prova

de

tra-

balho

da

blockchain.

https://medium.com/@carlos_49934/

demonstrando-o-conceito-de-prova-de-trabalho-da-blockchain-445a1faf5f0f.

Acesso em: 05 set. 2019.

[13] Wei Dai. B-money. http://www.weidai.com/bmoney.txt. 1988.

[14] Hans Dobbertin, Antoon Bosselaers, and Bart Preneel. Ripemd-160: A strengthe-

ned version of ripemd. In Proceedings of the Third International Workshop on Fast

Software Encryption, pages 71–82, London, UK, UK, 1996. Springer-Verlag.

[15] S´ergio dos Santos Correia J´unior. CRIPTOGRAFIA VIA CURVAS EL´IPTICAS.

Master’s thesis, Universidade Federal do Estado do Rio de Janeiro, Urca, 2013.

[16] Daniel Drescher. Blockchain Basics: A Non-Technical Introduction in 25 Steps.

Apress, mar 2017.

[17] Cynthia Dwork and Moni Naor. Pricing via processing or combatting junk mail. In

Proceedings of the 12th Annual International Cryptology Conference on Advances in

Cryptology, CRYPTO ’92, pages 139–147, London, UK, UK, 1993. Springer-Verlag.

[18] Stack Exchange. Why does bitcoin use two hash functions (sha-256 and ripemd-160)

to create an address?

https://bitcoin.stackexchange.com/questions/9202/

why-does-bitcoin-use-two-hash-functions-sha-256-and-ripemd-160-to-create-an-ad.

Acesso em: 14 ago. 2019.

[19] H. Feistel. Cryptography and Computer Privacy. Scientiﬁc American, 1973.

[20] Emanuel Ferreira, C´elio Albuquer-Que, Antˆonio Rocha, and Vanessa Rocha Lean-

dro Chicarino. Uso de Blockchain para Privacidade e Seguran¸ca em Internet das

Coisas., page 51. 11 2017.

[21] International Association for Cryptologic Research. Victor s. miller. https://www.

iacr.org/fellows/2013/miller.jpeg. Acesso em: 20 ago. 2019.

[22] Stanford Center for International Security and Corporation. Whitﬁeld diﬃe. https:

//cisac.fsi.stanford.edu/people/whitfield_diffie. Acesso em: 14 ago. 2019.

[23] Pedro Franco. Understanding Bitcoin: Cryptography, Engineering and Economics

(The Wiley Finance Series). Wiley, nov 2014.

REFERˆENCIAS BIBLIOGR ´AFICAS

116

[24] Kevin Helms. Central banks worldwide testing their own digital currencies. https://

news.bitcoin.com/central-banks-testing-digital-currencies/. Acesso em:

17 ago. 2019.

[25] Joshua Holden. A good hash function is hard to ﬁnd, and vice versa. Cryptologia,

37(2):107–119, 2013.

[26] Steve Hollins. Bitcoin para iniciantes - O guia deﬁnitivo para aprender a usar bitcoin

e criptomoedas. Crie uma carteira, compre bitcoin, aprenda o que ´e o blockchain e

a minera¸c˜ao de bitcoin (Portuguese Edition). CreateSpace Independent Publishing

Platform, mar 2018.

[27] IME-USP. Shannon. http://ecalculo.if.usp.br/historia/imagens/Shannon.

jpg. Acesso em: 14 ago. 2019.

[28] Claire Jones. Central bank plans to create digital currencies receive backing. https:

//www.ft.com/content/428a0b20-99b0-11e9-9573-ee5cbb98ed36. Acesso em:

17 ago. 2019.

[29] Aljosha Judmayer, Nicholas Stifter, Katharina Krombholz, and Edgar Weippl. Blocks

and Chains: Introduction to Bitcoin, Cryptocurrencies, and Their Consensus Mecha-

nisms (Synthesis Lectures on Information Security, Privacy, and Tru). Morgan &

Claypool Publishers, 2017.

[30] Neal Koblitz.

Elliptic curve cryptosystems. Mathematics of Computation,

48(177):203–209, January 1987.

[31] Kevin Kononenko.

Blockchain

explained

by

trying

to

pass

high

school math

class.

https://blog.codeanalogies.com/2018/04/18/

blockchain-explained-by-trying-to-pass-high-school-math-class/. Acesso

em: 20 ago. 2019.

[32] Marco.

Ponzi

scheme

graph model.

http://abierto.altervista.

org/ponzi-scheme-with-neo4j/?doing_wp_cron=1565817509.

2785780429840087890625. Acesso em: 14 ago. 2019.

[33] Thiago Fonseca Martins. Prova de existˆencia de arquivos digitais utilizando a tecnolo-

gia blockchain do protocolo Bitcoin, 2018. Monograﬁa (Engenharia da Computa¸c˜ao),

UFRGS (Universidade Federal do Rio Grande do Sul), Porto Alegre, Brazil.

REFERˆENCIAS BIBLIOGR ´AFICAS

117

[34] A. McAndrew. Introduction to Cryptography with Open-Source Software. Discrete

Mathematics and Its Applications. CRC Press, 2016.

[35] Victor S. Miller. Use of elliptic curves in cryptography. In Advances in Cryptology,

CRYPTO ’85, pages 417–426, Berlin, Heidelberg, 1986. Springer-Verlag.

[36] Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system, 2009.

[37] Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller, and Steven

Goldfeder. Bitcoin and Cryptocurrency Technologies: A Comprehensive Introduction.

Princeton University Press, Princeton, NJ, USA, 2016.

[38] Jo˜ao Greg´orio Corrˆea Neto. SISTEMA DE CRIPTOGRAFIA RSA. Master’s thesis,

Universidade Federal do Estado do Rio de Janeiro, Urca, 2013.

[39] Stanford Department of Electrical Engineering. Martin e. hellman. https://ee.

stanford.edu/~hellman/PRphoto2016.jpg. Acesso em: 14 ago. 2019.

[40] University of Washington Department of Mathematics. Neal i. koblitz. https:

//math.washington.edu/sites/math/files/styles/portrait/public/photos/

19_neal_koblitz1.jpg?itok=KIJxrlv2&c=e7a184478d0804fb5b22f1707c30c526.

Acesso em: 20 ago. 2019.

[41] Quartz. Quartz: The Objects That Power the Global Economy. Quartz, aug 2019.

[42] David Rabahy.

spreadsheet showing sha-256 calculations in step-by-step detail.

https://bitcointalk.org/index.php?topic=809430.0. Acesso em: 14 ago. 2019.

[43] Ronald L. Rivest. The md4 message digest algorithm. In Proceedings of the 10th

Annual International Cryptology Conference on Advances in Cryptology, CRYPTO

’90, pages 303–311, Berlin, Heidelberg, 1991. Springer-Verlag.

[44] Kenneth Rosen. Discrete Mathematics and Its Application. Mcgraw-Hill, seventh

edition, 2011.

[45] Cle´orbete Santos. Tecnologia Blockchain: Uma proposta de implementa¸c˜ao na Uni-

versidade Federal do Tocantins. Master’s thesis, UNIVERSIDADE FEDERAL DO

TOCANTINS, Brasil, 2018.

[46] Klaus Schwab. A Quarta Revolu¸c˜ao Industrial. Edipro, 2016.

REFERˆENCIAS BIBLIOGR ´AFICAS

118

[47] Cathleen Shamieh. Electronics For Dummies. For Dummies, jul 2015.

[48] C. Shannon. Communication theory of secrecy systems. Bell System Technical Jour-

nal, Vol 28, pp. 656–715, Oktober 1949.

[49] C. E. Shannon. A mathematical theory of communication. Bell Systems Technical

Journal, 27:623–656, 1948.

[50] Diogo Silva and Jana´ına Barros. A matem´atica que estabelece o bitcoin. Revista

Di´alogos, 2:77–90, 10 2018.

[51] smartdraw.

Parking garage plan.

https://www.smartdraw.com/parking/

examples/parking-garage-plan/. Acesso em: 09 set. 2019.

[52] Jimmy Song. Programming Bitcoin: Learn How to Program Bitcoin from Scratch.

O’Reilly Media, mar 2019.

[53] W. Stallings. Cryptography and network security. Prentice Hall, 2003.

[54] Melanie Swan. Blockchain: Blueprint for a New Economy. O’Reilly Media, feb 2015.

[55] Tine Thorn, Anders Baumann, Mikkel Fennestad, and Peter Sestoft. A distributed,

value-oriented xml store, 2002.

[56] Ibraim Silva Torres. Elliptical Curve Cryptography. Master’s thesis, Universidade

do Minho, Portugal, 2007.

[57] F. Ulrich. Bitcoin - A Moeda Na Era Digital. LVM EDITORA, 2014.

[58] Department of Computer Science University of California. Alan g. konheim. http:

//www.cs.ucsb.edu/~konheim/CV-AGK.pdf. Acesso em: 14 ago. 2019.

[59] Bitcoin Wiki. Technical background of version 1 bitcoin addresses. https://en.

bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses.

Acessado: 2019-07-16.

[60] Wrosenb2.

A cryptocurrency atm in milwaukee, wisconsin.

https:

//en.wikipedia.org/wiki/Bitcoin_ATM#/media/File:CoinFlip%C2%AE_

Cryptocurrency_ATM_in_Peoria,_Illinois.jpg. Acesso em: 14 ago. 2019.

